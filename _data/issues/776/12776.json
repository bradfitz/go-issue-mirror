{
	"id": 108755279,
	"number": 12776,
	"state": "closed",
	"title": "runtime: optimize for special case where two-return-value map access discards the value",
	"body": "A pattern that I'm coming up on reasonably frequently in my code is the following:\r\n\r\n```go\r\nif _, ok := myMap[key]; ok {\r\n    // do some stuff\r\n}\r\n```\r\n\r\nIt seems to me like there would be some (albeit small) gains to be had in the compiler detecting this particular case of discarding the value result of map-lookup in favor of only returning the boolean, and avoid doing the pointer arithmetic necessary to find that value.",
	"user": {
		"login": "glittershark",
		"id": 1481027,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2015-09-28T22:07:09Z",
	"created_at": "2015-09-28T21:59:23Z",
	"updated_at": "2016-09-27T13:32:03Z"
}
