{
	"id": 51288677,
	"number": 8776,
	"state": "closed",
	"title": "time: zero value of time.Timer crashes confusingly",
	"body": "by **gima@iki.fi**:\n\n\u003cpre\u003eWhat does 'go version' print?\ngo version go1.3.1 linux/amd64\n\nAdditional info:\nhg branch: default\nchangeset: 21052:5cd7f2bfb5f6\ntag: tip\n\n\nWhat steps reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n    1. `go run` the attached \u0026quot;test.go\u0026quot; file.\n\n    (The code is also available at \u003ca href=\"https://play.golang.org/p/earSjQISp8\"\u003ehttps://play.golang.org/p/earSjQISp8\u003c/a\u003e\n     Please note that while the link is to the playground, the code is\n     NOT supposed to run there. I could have used Pastebin, but I though \n     playground to be more future-proof way to share the code.) \n\n\n\nWhat happened?\n    fatal error: unexpected signal during runtime execution\n    [signal 0xb code=0x1 addr=0x0 pc=0x422f87]\n\n    goroutine 20 [running]:\n    runtime.throw(0x48f865)\n            /usr/lib/go/src/pkg/runtime/panic.c:520 +0x69 fp=0x7f166080bf40 sp=0x7f166080bf28\n    runtime.sigpanic()\n            /usr/lib/go/src/pkg/runtime/os_linux.c:222 +0x3d fp=0x7f166080bf58 sp=0x7f166080bf40\n    timerproc()\n            /usr/lib/go/src/pkg/runtime/time.goc:232 +0x157 fp=0x7f166080bfa8 sp=0x7f166080bf58\n    runtime.goexit()\n            /usr/lib/go/src/pkg/runtime/proc.c:1445 fp=0x7f166080bfb0 sp=0x7f166080bfa8\n    created by addtimer\n            /usr/lib/go/src/pkg/runtime/time.goc:113\n\n    goroutine 16 [runnable]:\n    main.main()\n            /home/gima/goworkspace/src/random.proj/test.go:17 +0xb2\n    exit status 2\n\n\nWhat should have happened instead?\n    The program should have run and exited without any errors or output.\n\n\nPlease provide any additional information below.\n    The fatal error does not occur if the channels are not used (read and \n    written) like they are in the provided demonstration code, so this is \n    probably not just a problem with the Timer implementation struct, but \n    something deeper. \n\n    The correct behavior should be, in my opinion, to provide a meaninful \n    panic, if the usage of zero-valued `Timer{}` struct is not valid. \n\n    Also currently, the `time.Timer` has no way of initializing a `Timer` \n    struct without starting it, which I was trying to do when I ran into \n    this bug. So a welcome addition would be to enable usage of zero-valued \n    `Timer{}` struct (so `.Reset` can be called on it).\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/8776/0/test.go\"\u003etest.go\u003c/a\u003e (214 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:48:35Z",
	"created_at": "2014-09-19T10:46:10Z",
	"updated_at": "2016-06-25T01:41:50Z"
}
