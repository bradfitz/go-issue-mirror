{
	"id": 117370438,
	"body": "\u003e Note that if you put @cespare's example into GOPATH and use an absolute import rather than a relative import, vet does the right thing.\r\n\r\nI don't think this is true. I originally found this problem with real packages and only used a relative path for my repro. Here's another GOPATH-based repro:\r\n\r\n```\r\n$ mkdir -p src/p\r\n$ cat \u003c\u003c EOF \u003e src/p/p.go\r\npackage p\r\ntype X []interface{}\r\nEOF\r\n$ mkdir src/vet\r\n$ cat \u003c\u003c EOF \u003e src/vet/vet.go\r\n\u003e package main\r\n\u003e import \"p\"\r\n\u003e func main() {\r\n\u003e   var x p.X\r\n\u003e   x = append(x, p.X{1})\r\n\u003e }\r\n\u003e EOF\r\n$ GOPATH=`pwd` go vet vet\r\nsrc/vet/vet.go:5: p.X composite literal uses unkeyed fields\r\nexit status 1\r\n\r\n```",
	"user": {
		"login": "cespare",
		"id": 318501,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-30T23:17:01Z",
	"updated_at": "2015-06-30T23:17:01Z"
}
