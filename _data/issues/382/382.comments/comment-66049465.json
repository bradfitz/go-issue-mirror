{
	"id": 66049465,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eRuss' comment made very good sense. Because the syntax is very close to Python's, I \ncan't stop myself to compare them, but now I realized that python's x[lb:hb] notation \ncarrying another important aspect is that it does deep copy which Go's slice doesn't. \nThat makes huge difference. Apparently, x[:] is not a good way to carry that \nsemantics in Go. \n\n\u0026a returns the pointer of a slice object a which is not the same as a though, isn't it? \nIf a = make([]int, 10); return a would return the whole slice, where return \u0026a would \nreturn it's pointer. I am not quite follow why \u0026a is better though. Because in caller, I \nwould have to do *a to dereference it, wouldn't I?\u003c/pre\u003e",
	"user": {
		"login": "i3d",
		"id": 105068,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2009-12-06T00:29:43Z",
	"updated_at": "2014-12-08T10:04:22Z"
}
