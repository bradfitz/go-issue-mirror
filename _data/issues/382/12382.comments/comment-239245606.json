{
	"id": 239245606,
	"body": "An alternative, more minimal option maybe?\r\n\r\n```go\r\n// NextResultSet returns the next result set from the query\r\n// NextResultSet always returns a non-nil value.\r\n// Errors are deferred until *Rows.Scan method is called.\r\nfunc (r *Rows) NextResultSet() *Rows\r\n```\r\n\r\nExample:\r\n\r\n```go\r\nfunc DoQuery() error {\r\n  rows, err := db.Query(\"query with 2 result sets\")\r\n  if err != nil {\r\n    return err\r\n  }\r\n  defer rows.Close()\r\n  // Handle result set 1\r\n  for rows.Next() {\r\n    err := rows.Scan(...)\r\n  }\r\n  if err := rows.Err(); err != nil {\r\n    return err\r\n  }\r\n  rows = rows.NextResultSet()\r\n  defer rows.Close()\r\n  for rows.Next() {\r\n    err := rows.Scan(...)\r\n    if err == sql.ErrNoRows {\r\n      //Application error\r\n    }\r\n  }\r\n  return rows.Err()\r\n```\r\n\r\nThis is not perfect, and I'm not even sure it's possible, but it looks like it could be as Rows owns the connection.",
	"user": {
		"login": "freeformz",
		"id": 103,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	},
	"created_at": "2016-08-11T18:18:17Z",
	"updated_at": "2016-08-11T18:18:17Z"
}
