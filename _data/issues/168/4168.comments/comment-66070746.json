{
	"id": 66070746,
	"body": "\u003ca id=\"c10\"\u003e\u003c/a\u003eComment 10:\n\n\u003cpre\u003eGo 1.2 is out, refreshing this request.\n\nI would like to point out that, in this case, the \"omitempty\" directive has actually no\neffect :\n\n\u003ca href=\"http://play.golang.org/p/g7WhtJWEnc\"\u003ehttp://play.golang.org/p/g7WhtJWEnc\u003c/a\u003e\n\nIMHO, the extra \",omitempty\" should be taken as a clear directive in this case (1-step\ndeep node list).\nGranted, I don't see a natural behavior for a deeper nested node list :\n\ntype Ambiguous struct {\n\tBees []string `xml:\"Beez\u003eBees\u003eBee,omitempty\"` //ok, I don't know which node should be omitted\n}\n\nRegarding the \"break backward compatibility\" part :\nIf I'm correct : it wouldn't break the Unmarshaling of a Marshal-ed structure,\nit could indeed change the output of a program, but as I stated, I think this output is\nthe one expected by the programmer if he specifies \",omitempty\".\n\nThanks.\u003c/pre\u003e",
	"user": {
		"login": "LeGEC",
		"id": 795408,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-02-11T09:45:35Z",
	"updated_at": "2014-12-08T10:22:08Z"
}
