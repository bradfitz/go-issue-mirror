{
	"id": 235102223,
	"body": "I think this is a duplicate of a very similar issue I raised about 4-6\nmonths ago.\n\nOn Tue, 26 Jul 2016, 07:34 Prashant Varanasi \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e Please answer these questions before submitting your issue. Thanks!\n\u003e\n\u003e    1. What version of Go are you using (go version)?\n\u003e\n\u003e $ go version\n\u003e go version go1.7rc3 darwin/amd64\n\u003e\n\u003e (Also tested with go1.6.2)\n\u003e\n\u003e    1.\n\u003e\n\u003e    What operating system and processor architecture are you using (go env\n\u003e    )?\n\u003e    darwin/amd64\n\u003e    2.\n\u003e\n\u003e    What did you do?\n\u003e    Create a simple struct User, and benchmark the difference between\n\u003e    \u0026User{} and new(User):\n\u003e    https://github.com/prashantv/go-bench/blob/master/new_bench_test.go\n\u003e    3.\n\u003e\n\u003e    What did you expect to see?\n\u003e    Both to have the same performance and disassembly.\n\u003e    4.\n\u003e\n\u003e    What did you see instead?\n\u003e    new is consistently faster. Looking at the disassembly, new(User) does\n\u003e    less work than \u0026User{}.\n\u003e\n\u003e new does:\n\u003e\n\u003e MOVQ BX, 0(SP)\n\u003e CALL runtime.newobject(SB)\n\u003e MOVQ 0x8(SP), CX\n\u003e MOVQ 0x40(SP), AX\n\u003e\n\u003e and then increments the counter and jumps to the if check.\n\u003e\n\u003e \u0026User{} is similar but then also stores a lot of 0s before jumping to the\n\u003e if check:\n\u003e\n\u003e MOVQ BX, 0(SP)\n\u003e CALL runtime.newobject(SB)\n\u003e MOVQ 0x8(SP), CX\n\u003e XORL BP, BP\n\u003e MOVQ BP, 0(CX)\n\u003e MOVQ BP, 0x8(CX)\n\u003e MOVQ BP, 0x10(CX)\n\u003e MOVQ BP, 0x18(CX)\n\u003e MOVQ BP, 0x20(CX)\n\u003e MOVQ 0x40(SP), AX\n\u003e\n\u003e It seems like \u0026T{} is zeroing out the value even though runtime.newobject\n\u003e already returns a zero'ed out object.\n\u003e\n\u003e â€”\n\u003e You are receiving this because you are subscribed to this thread.\n\u003e Reply to this email directly, view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/16494\u003e, or mute the thread\n\u003e \u003chttps://github.com/notifications/unsubscribe-auth/AAAcAyKc3f7BGHGxDG0MP-oLjncdGQ54ks5qZSvUgaJpZM4JUkkP\u003e\n\u003e .\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-25T22:12:24Z",
	"updated_at": "2016-07-25T22:12:24Z"
}
