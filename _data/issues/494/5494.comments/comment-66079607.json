{
	"id": 66079607,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eI would welcome any suggestion about implementing this.\n\nI can think of 2 ways of doing that (just ideas, didn't think it through):\n\n1) Change compiler to output a JMP instruction in front of every Go function that can\npotentially be used as callback function (functions that take one or many uintptr size\nparameters and returns single uintptr size parameter). Have this JMP point to a special\nroutine that does all parameter marshalling and continue to call Go function that\nfollows JMP instruction;\n\n2) At this moment we allow for maximum of 2000 callbacks. So create a memory page of\n2000 JMP instructions (this can be done at runtime or in the linker - I haven't decided\nwhich yet). Change our existing runtime.Callbacks from linked list into array. Use\naddress of a JMP instruction as an index into this array to decide which Go function to\ncall.\n\nI don't like my proposals much, so, please, suggest alternatives.\n\nThank you.\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-03T23:44:37Z",
	"updated_at": "2014-12-08T10:29:50Z"
}
