{
	"id": 66071756,
	"body": "\u003ca id=\"c11\"\u003e\u003c/a\u003eComment 11:\n\n\u003cpre\u003eAs pointed out by adonovan, a backward-compatible change must not ignore the current\noperand types. For instance, the originally proposed change will break the following\ncode (for instance):\n\ntype B bool\nvar b B\nvar x, y int\n\nvar t interface{} = b \u0026\u0026 x \u0026lt; y  // current spec: dynamic type of t is B; simplified\nproposal: dynamic type of t is bool\n_ = t.(B) // this would fail with the simplified proposal\n\nIt's possible to amend the proposal but those new rules are more complicated than the\nexisting rules. Leaving for Go 2.\u003c/pre\u003e\n\n_Labels changed: removed **go1.2**._\n\n\n_Status changed to **LongTerm**._",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-05T20:48:25Z",
	"updated_at": "2014-12-22T06:20:32Z"
}
