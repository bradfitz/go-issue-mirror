{
	"id": 66071751,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003eI think we should fix this in the following vain:\n\nx \u0026\u0026 y  is equivalent to x == true \u0026\u0026 y == true  (same for ||, of course)\n\nand the result of \u0026\u0026 is an untyped bool.\n\nObservations:\n\n1. Comparisons already always return an untyped bool (which makes them much easier to\nexplain).\n\n2. \u0026\u0026 and || are not really binary operators: they only conditionally evaluate the 2nd\nargument, and so the result should arguably not depend on both argument types.\n\n3. The spec currently says that the result type of \u0026\u0026 and || is the same as the operand\ntypes (which must match). But for, say: x \u0026lt;\u0026lt; y \u0026\u0026 y \u0026lt;\u0026lt; z, the operand types\nare untyped bools and so one would assume that the result should be untyped bool (per\nspec). But in fact, in this case the result gets \"default-typed\" to bool. This is again\none of those implicit rules that are hard to deduce from the current spec. Making the\nresult always an untyped bool would make this much clearer and simplify the spec. This\nis also test/fixedbugs/issue3924.go.\n\n4. The implementation change should be trivial and is backward-compatible.\n\nI argue with can do this for 1.2.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-01T05:20:12Z",
	"updated_at": "2014-12-22T06:20:31Z"
}
