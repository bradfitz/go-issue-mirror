{
	"id": 110550016,
	"body": "I think I was wrong about being able to trigger this on TSO for basically the reason I gave in https://github.com/golang/go/issues/9984#issuecomment-102720716. scanobject/etc *can* observe a pointer that's in the heap but larger than the cached arena_used (adding a simple panic to scanobject can demonstrate this), *but* if the inheap check in write barrier is safe (which it seems to be on TSO with Russ' CL to fix the MapBits ordering problem), then any such pointer will have been marked by the write barrier that made the newly allocated object reachable, so it doesn't need to be marked by scanobject.\r\n\r\n(Of course, this is still a problem on non-TSO, as you pointed out in https://github.com/golang/go/issues/9984#issuecomment-103009836)",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-10T01:06:16Z",
	"updated_at": "2015-06-10T01:06:16Z"
}
