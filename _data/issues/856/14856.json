{
	"id": 141770104,
	"number": 14856,
	"state": "open",
	"title": "x/sys/unix: file type information from dirents inaccessible",
	"body": "golang.org/x/sys/unix.ReadDirent reads a Dirent that includes the filename and the file type. golang.org/x/sys/unix.ParseDirent parses out the filename.\r\n\r\nLinux and OSX include the file type in the Dirent. Go should make this information accessible. This info would let programs skip stat'ing files of the wrong type.\r\n\r\nIt would not be feasible to change ParseDirent to do so because it would require a type signature change.\r\n\r\nIf we can agree on a plan, I can (try to) make the code change. \r\n\r\nHere's my proposal, but I've never made a change to Go so it may be off-base.\r\n\r\nThe package unix could offer a func like \"ParseDirentFully\" that returned a struct or interface that offered all dirent members available. ParseDirent could call ParseDirentFully to return just the name. (The naming could be better, e.g. ParseDirent and ParseNameFromDirent, but that would break existing code) The code in syscall_*.go already casts to the dirent type from the underlying FS, so it could access another member.\r\n\r\n(I am using go 1.5.1 on darwin/amd64. I have inspected code on tip and believe this issue still applies)",
	"user": {
		"login": "dbentley",
		"id": 159980,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2016-03-18T04:05:33Z",
	"updated_at": "2016-04-07T15:31:56Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
