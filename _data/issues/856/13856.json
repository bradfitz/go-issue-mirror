{
	"id": 125376312,
	"number": 13856,
	"state": "closed",
	"title": "range skipping elements of slice",
	"body": "I'm using Go 1.5 and I'm working in a Windows environment.\r\nI have a slice of strings which I use to create a second copy. I range over the original slice and remove certain entries in the 2nd slice using append. The problem I'm having is that the range skips an entry in the original slice after the append which only operates on the 2nd slice.\r\nAfter the append but before the end of the loop iteration, k has skipped 1 element ahead and  v == newSlice[i] but I expected v to remain the same as the end of the loop hasnt been reached yet.\r\n\r\n      newSlice := fileIn   // fileIn is a slice of strings\r\n      i := 0\r\n      for k, v := range fileIn {\r\n         fileFlag = cleanFile(v.Name())  // cleanFile returns 0, 1, or 2\r\n         if fileFlag == 1 {\r\n           fmt.Println(\"fileError = \", fileFlag, v.Name)\r\n           break\r\n         }\r\n         if fileFlag == 2 {\r\n           newSlice = append(newSlice[:i], newSlice[i+1:]...)  /* k and v at this point have moved to the next iteration */\r\n           continue\r\n         }\r\n         i++\r\n       }\r\n       \r\n    ",
	"user": {
		"login": "BrianActon",
		"id": 6886462,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-01-07T15:28:12Z",
	"created_at": "2016-01-07T11:29:56Z",
	"updated_at": "2016-01-07T15:30:24Z"
}
