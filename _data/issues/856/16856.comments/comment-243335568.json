{
	"id": 243335568,
	"body": "Let me just reiterate that:\r\n\r\n1. Most if not all of the major languages that have a standard library for encoding/decoding binary streams went with the `byte != 0` strategy for booleans\r\n2. I've not found a single example of a Go codebase that does binary\u003c=\u003e`bool` which doesn't use the `byte != 0` strategy (except the ones that only write which technically only use the `byte == 1` strategy)\r\n\r\nI understand the theoretical issue but I can't find a single practical example in Go or in other programming languages giving it credence.\r\n\r\nFinally, the `encoding/binary` package specifically \"favors simplicity over efficiency\", and I would argue that being able to use `bool` in a `struct` is a big win for simplicity.",
	"user": {
		"login": "blixt",
		"id": 158591,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-30T05:18:22Z",
	"updated_at": "2016-08-30T05:18:22Z"
}
