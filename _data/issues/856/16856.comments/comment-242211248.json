{
	"id": 242211248,
	"body": "That may be outside the scope of the `encoding/binary` package, simply based on [the prelude in the header][header]:\r\n\r\n\u003e This package favors simplicity over efficiency. Clients that require\r\n\u003e high-performance serialization, especially for large data structures,\r\n\u003e should look at more advanced solutions such as the encoding/gob\r\n\u003e package or protocol buffers.\r\n\r\nI still think it's fair to restrict it to `0` and `1`, but if this package is mostly used for disk/network binary then avoiding that restriction would make it equivalent to decoding in many other standard libraries. While I don't think that it'll make a big difference in practice, the non-zero behavior would arguably be less surprising.\r\n\r\n[header]: https://github.com/golang/go/blob/78bc418f1d7f9346e3214ac40506624ab7f5f649/src/encoding/binary/binary.go#L18-L21",
	"user": {
		"login": "blixt",
		"id": 158591,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-24T21:17:18Z",
	"updated_at": "2016-08-24T21:17:18Z"
}
