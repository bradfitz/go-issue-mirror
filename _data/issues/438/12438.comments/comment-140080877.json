{
	"id": 140080877,
	"body": "Edit: a Context method on http.Request could return a value that has the\nsame methods as context.Context without actually depending on the package.\nThis would work fine.  I'm not sure though whether this is something we\nshould pursue.\n\nOn Mon, Sep 14, 2015 at 9:47 AM, Sameer Ajmani \u003csameer@golang.org\u003e wrote:\n\n\u003e We cannot change the Context interface; it's already very widely used\n\u003e inside and outside of Google.\n\u003e We could imagine adding a Context method to http.Request that returns its\n\u003e context.Context value.  This would require moving Context into the standard\n\u003e library.  This hasn't happened yet.\n\u003e For now, ctxhttp is what we've got.\n\u003e\n\u003e On Thu, Sep 10, 2015 at 3:59 PM, Amanda Cameron \u003cnotifications@github.com\u003e\n\u003e wrote:\n\u003e\n\u003e\u003e Maybe a better place to do the context interactions would be to make\n\u003e\u003e http.Request satisfy the context.Context interface. This works because\n\u003e\u003e it's a concrete type, and so doesn't fall under the Go1 compat promise, for\n\u003e\u003e adding stuff. AFAIK nobody needs to recreate / edit those for any reason\n\u003e\u003e already.\n\u003e\u003e\n\u003e\u003e There's a couple of problems I can think of:\n\u003e\u003e 1) kinda breaks the idiom if \"context is first argument\".\n\u003e\u003e 2) IIRC http.Request already has a Done channel on it. so context.Context\n\u003e\u003e would need it's Done element renamed. This is possible as the .../context\n\u003e\u003e package doesn't fall under the compat promise (yet?)\n\u003e\u003e\n\u003e\u003e â€”\n\u003e\u003e Reply to this email directly or view it on GitHub\n\u003e\u003e \u003chttps://github.com/golang/go/issues/12438#issuecomment-139363647\u003e.\n\u003e\u003e\n\u003e\n\u003e\n",
	"user": {
		"login": "Sajmani",
		"id": 9734877,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-14T13:48:26Z",
	"updated_at": "2015-09-14T13:48:26Z"
}
