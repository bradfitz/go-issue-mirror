{
	"id": 51279213,
	"number": 2438,
	"state": "closed",
	"title": "Methods in \"html/template\" package can return instances of templates in \"text/template\" package.",
	"body": "by **d_smithson@rocketmail.com**:\n\n\u003cpre\u003eThe \u0026quot;text/template\u0026quot; package allows convenient chaining of configuration\nmethods.  For example, I can write:\n\n    import \u0026quot;text/template\u0026quot;\n    ...\n    t, err := template.New(\u0026quot;test\u0026quot;).Funcs(funcs).Parse(text)\n\nThe \u0026quot;html/template\u0026quot; package appears to support this same convenient design, but\nit does not work.  The methods return the underlying template from\n\u0026quot;text/template\u0026quot;\ninstead of the template from \u0026quot;html/template\u0026quot;. For example, t in the following \ncode is a template from \u0026quot;text/template\u0026quot; and not from \u0026quot;html/template\u0026quot;\nas I \nexpected.\n\n    import \u0026quot;html/template\u0026quot;\n    ...\n    t, err := template.New(\u0026quot;test\u0026quot;).Funcs(funcs).Parse(text)\n\nThe \u0026quot;html/template\u0026quot; package should not use anonymous fields for the\n\u0026quot;text/template\u0026quot; types.\n\n$ hg identify\n2f4482b89a6b weekly/weekly.2011-11-09\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:13:00Z",
	"created_at": "2011-11-10T04:59:50Z",
	"updated_at": "2016-06-24T21:20:18Z"
}
