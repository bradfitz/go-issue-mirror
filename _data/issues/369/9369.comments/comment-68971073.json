{
	"id": 68971073,
	"body": "If the problem to be solved is \"how can I rebuild my $GOPATH after\r\nreplacing my Go install\", then can we close that issue with a workaround\r\n\r\n     cd $GOPATH\r\n     rm -rf pkg\r\n     cd src\r\n     go install ./...\r\n\r\nThat will work. In the rare case of multiple GOPATH entries, the procedure\r\ncan be repeated.\r\n\r\nI don't know why anyone would need to do this anyway.\r\n\r\nOn Wed, Jan 7, 2015 at 1:31 PM, Minux Ma \u003cnotifications@github.com\u003e wrote:\r\n\r\n\u003e I agree (to revert that change in 1.4.1). That change is not fully\r\n\u003e working due to the introduction of internal packages anyway.\r\n\u003e\r\n\u003e $ go14 version\r\n\u003e go version go1.4 linux/amd64\r\n\u003e $ go14 install -a -v std\r\n\u003e cmd/internal/rsc.io/arm/armasm\r\n\u003e cmd/internal/rsc.io/x86/x86asm\r\n\u003e cmd/internal/objfile\r\n\u003e cmd/addr2line\r\n\u003e cmd/nm\r\n\u003e cmd/objdump\r\n\u003e cmd/pprof\r\n\u003e\r\n\u003e And go install -a all will still try to reinstall\r\n\u003e x/tools/cmd/{godoc,vet,cover},\r\n\u003e so even if the restriction fully works for std, it's still insufficient to\r\n\u003e address\r\n\u003e the original issue (need a way to reinstall everything after a new release\r\n\u003e of Go, but do not touch anything inside $GOROOT)\r\n\u003e\r\n\u003e â€”\r\n\u003e Reply to this email directly or view it on GitHub\r\n\u003e \u003chttps://github.com/golang/go/issues/9369#issuecomment-68970766\u003e.\r\n\u003e",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-01-07T02:36:18Z",
	"updated_at": "2015-01-07T02:36:18Z"
}
