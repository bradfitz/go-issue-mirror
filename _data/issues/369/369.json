{
	"id": 51276393,
	"number": 369,
	"state": "closed",
	"title": "proposal: Some syntactic sugar",
	"body": "\u003cpre\u003etype T struct {\n  foo int;\n  asdf int;\n}\n\ntype Bar interface {\n  Baz();\n}\n\nsomearr [32]T;\nobjects [32]Bar;\nintarr [32]int;\n\n// extracting struct members\nintarr = somearr[].foo;\n\n// mass executing functions\nobjects[].Baz();\n\n// mass initialization\nsomearr[].foo = 5; // sets foo to 5 in every element of \u0026quot;somearr\u0026quot;\nsomearr[].{\n  foo = 5;\n  asdf = 2;\n}; // does the same as above but it can be used for more attributes\n\n\nthis stuff came to my mind during a graph algorithm test at the University. It is very\nannoying to write things like \nthis:\nfor(i = 0; i \u0026lt; maxitems; i++) {\n  intarr[i] = somearr[i].foo;\n  somearr[i].foo = 5;\n  somearr[i].asdf = 2;\n}\u003c/pre\u003e",
	"user": {
		"login": "tamasd",
		"id": 40811,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Proposal"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:04:18Z",
	"created_at": "2009-12-02T22:39:17Z",
	"updated_at": "2016-09-04T20:46:54Z"
}
