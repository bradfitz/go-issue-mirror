{
	"id": 51282360,
	"number": 4599,
	"state": "closed",
	"title": "cmd/vet: handle constant string addition in printf formats",
	"body": "by **johan.samyn**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\nRun 'go tool vet -v' on a go source that contains a log.Fatalf() or fmt.Sprintf() (or\nalike), for which the pattern string is either completely on the next line, or the\npattern string is split in multiple strings that are concatenated with '+'.\n\nWhat is the expected output?\nNo complaint from 'go vet'.\n\nWhat do you see instead?\n\u0026lt;sourcefilename\u0026gt;.go:\u0026lt;line\u0026gt;:\u0026lt;col\u0026gt;: can't check non-literal format in\ncall to Fatalf\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n8g I guess, cause on Win7 32bit\n\nWhich operating system are you using?\nWindows 7 (32bit), but I see the same on Ubuntu 12.04 (32bit)\n\nWhich version are you using?  (run 'go version')\nGo version 1.0.3\n\nPlease provide any additional information below.\nI searched the Mercurial history for changes to the src/cmd/vet folder, but did not see\nanything that indicated this was already solved for the next release.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:24:25Z",
	"created_at": "2012-12-30T15:05:04Z",
	"updated_at": "2016-06-24T22:30:35Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
