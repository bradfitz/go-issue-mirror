{
	"id": 251861326,
	"body": "@ianlancetaylor, I'm pushing for `merge` because I can define its type similarly to the way `append` is defined, as a pseudo-generic function that otherwise has an ordinary Go type.  (That is, I can write it as `merge(m M, x ...M) M`.\r\n\r\nI agree that `insert` better matches common usage, but it's further away from ordinary Go types.  It requires either matched pairs of alternating keys and values as varargs, or structs to pair them up.\r\n\r\nAs far as I am aware, not even any of the proposals for #15292 would be able to express the former type.\r\n\r\nMy initial proposal was an attempt at the latter, but without either #12854 or some extension of `...` for map arguments the syntax is pretty heinous.",
	"user": {
		"login": "bcmills",
		"id": 5200974,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-06T03:55:24Z",
	"updated_at": "2016-10-06T03:57:10Z"
}
