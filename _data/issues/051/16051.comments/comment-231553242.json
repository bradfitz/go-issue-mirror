{
	"id": 231553242,
	"body": "Another gamedev here supporting this proposal. As it stands now, Go would be really a good candidate for a gamedev language, the GC is getting really fast and the language has a lot to offer to the industry.\r\nSadly the cgo performance make it a no starter at the moment. I keep wondering how this cost is also impacting other areas like server applications with heavy UDP traffic. I am using Go for the server in my game and looking at the code it eventually ends up calling various WSA* functions on Windows.. so there you go, that price is there even when developing non strictly games software.\r\n\r\nPerhaps on Linux there is a difference between a syscall and a cgo call, on Windows it does not seem to be the case tho.\r\n\r\nI wonder if, instead of tagging cgo calls we could tag the goroutine to use some kind of \"special\" stack and get ad-hoc treatment from the scheduler to be able to call into C with as close to 0 cost as possible.\r\n\r\nI do think this could improve the performance of the entire tech, I agree with rewriting as much as possible in Go, that's fine, but it's still a world of C based operating systems (and it will be for the foreseeable future)  and, eventually, you'll have to call C stuff in order to make things happen.. be it a triangle on the screen or a packet over the network.\r\n\r\n",
	"user": {
		"login": "kunos",
		"id": 5239944,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 2,
		"+1": 2
	},
	"created_at": "2016-07-09T20:06:38Z",
	"updated_at": "2016-07-09T20:06:38Z"
}
