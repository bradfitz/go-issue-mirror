{
	"id": 51286803,
	"number": 7510,
	"state": "closed",
	"title": "6l: mach-o dwarf info not readable",
	"body": "\u003cpre\u003eI'm trying to read DWARF information out of a go-built executable.  It doesn't seem to\nwork.\n\nloaddwarf.go:\n\npackage main\n\nimport (\n\t\u0026quot;debug/macho\u0026quot;\n\t\u0026quot;os\u0026quot;\n)\n\nfunc main() {\n\tf, err := macho.Open(os.Args[1])\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\t_, err = f.DWARF()\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\n(on darwin-amd64)\n$ go build loaddwarf.go\n$ ./loaddwarf ./loaddwarf \npanic: missing Mach-O section __debug_str\n\ngoroutine 16 [running]:\nruntime.panic(0xdeba0, 0x2082feeb0)\n\t/Users/khr/sandbox/go-heapdump/src/pkg/runtime/panic.c:279 +0xf5\nmain.main()\n\t/Users/khr/go/loaddwarf.go:15 +0xd5\n\nIt looks like our dwarf reader can't read the dwarf info we put in the executable.  Or\nmaybe I'm misunderstanding how this is supposed to work.  The equivalent with\nmacho-\u0026gt;elf works on linux.\u003c/pre\u003e",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:41:40Z",
	"created_at": "2014-03-11T15:30:01Z",
	"updated_at": "2016-06-25T01:29:30Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
