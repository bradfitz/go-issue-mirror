{
	"id": 66086338,
	"body": "\u003ca id=\"c11\"\u003e\u003c/a\u003eComment 11:\n\n\u003cpre\u003eI made this change:\n\ndiff --git a/src/pkg/runtime/sys_windows_amd64.s b/src/pkg/runtime/sys_windows_amd64.s\n--- a/src/pkg/runtime/sys_windows_amd64.s\n+++ b/src/pkg/runtime/sys_windows_amd64.s\n@@ -44,6 +44,10 @@\n \tMOVQ\t8(SI), DX\n \tMOVQ\t16(SI), R8\n \tMOVQ\t24(SI), R9\n+\tMOVQ\tCX, X0\n+\tMOVQ\tDX, X1\n+\tMOVQ\tR8, X2\n+\tMOVQ\tR9, X3\n \n \t// Call stdcall function.\n \tCALL\tAX\ndiff --git a/src/pkg/runtime/syscall_windows_test.go\nb/src/pkg/runtime/syscall_windows_test.go\n--- a/src/pkg/runtime/syscall_windows_test.go\n+++ b/src/pkg/runtime/syscall_windows_test.go\n@@ -242,3 +242,13 @@\n func TestCallbackInAnotherThread(t *testing.T) {\n \t// TODO: test a function which calls back in another thread: QueueUserAPC() or CreateThread()\n }\n+\n+func BenchmarkWindowsSyscall(b *testing.B) {\n+\tb.StopTimer()\n+\t// make sure we do not measure dll load\n+\tsyscall.GetLastError()\n+\tb.StartTimer()\n+\tfor i := 0; i \u0026lt; b.N; i++ {\n+\t\tsyscall.GetLastError()\n+\t}\n+}\n\nto test speed difference, and  I see very little change. In fact, new version is\nslightly faster - not sure how to explain this. So, perhaps, we can accommodate new code\ninto existing syscall.\n\nWhat do we do about 32 bit version?\n\nAlso, can you explain how do you use this facility. What API takes floats as parameters?\n\nAlso, if we are to proceed with this, we would need new test added to test new\nfunctionality. Do you have any suggestions?\n\nFixed description. Please verify - my English is horrible.\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-10-01T01:04:14Z",
	"updated_at": "2014-12-22T06:29:13Z"
}
