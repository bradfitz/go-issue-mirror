{
	"id": 66086346,
	"body": "\u003ca id=\"c18\"\u003e\u003c/a\u003eComment 18:\n\n\u003cpre\u003e\u003e \u003e1) What API takes floats as parameters?\n\u003e A few functions in gdi32 and opengl which is technically a system library.\n\nThese are package libraries, not \"system\" libraries. Are these interfaces (dll\nfunctions) documented anywhere, like for example\n\u003ca href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms679360(v=vs.85).aspx\"\u003ehttp://msdn.microsoft.com/en-us/library/windows/desktop/ms679360(v=vs.85).aspx\u003c/a\u003e ?\n\n\u003e ... perhaps we create a dll and ship with it?  ...\n\nNo, we aren't shipping dlls. They ether must be present on the system, or we have to\nbuild them. We can assume we have mingw installed.\n\n\u003e type CallStack []byte // or a struct with a []byte and extra info\n\u003e func (c *CallStack) AddFloat64(f float64)\n\u003e func (c *CallStack) AddInt64(i int64)\n\u003e func (c *CallStack) AddUint64(i uint64)\n\nIt looks complicated. The code we add needs to pay for itself and more. Adding 4 lines\nof code might be acceptable to support an external lib. I am far from convinced we need\nto do more, unless we can identify many other products and users.\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-10-01T06:54:14Z",
	"updated_at": "2014-12-08T10:36:00Z"
}
