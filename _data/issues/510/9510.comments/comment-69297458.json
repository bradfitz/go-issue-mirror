{
	"id": 69297458,
	"body": "Some libgcc.a object files will have dependencies on other objects.  E.g., on amd64, _popcountsi2.o (for __popcountti2) depends on _popcount_tab.o (for __popcount_tab).  So we'd need to recursively resolve symbols.\r\n\r\nAlso, not all \"__\" prefixed symbols are necessarily from libgcc.  E.g., __tls_get_addr is from libc.  Hm, I also even see \"isinfd{32,64,128}\" defined in my libgcc.a.\r\n\r\nI'm curious if maybe after linking _all.o without -lgcc, we could write a second stub.o file that merely contains relocations for all of the unresolved maybe-libgcc symbols we find in _all.o, and then use \"gcc -o _libgcc.o stub.o -Wl,-r\" to let ld handle recursively figuring out which objects we need?  We could then post-process _libgcc.o to mark all the symbols as comdat or teach cmd/ld to treat it that way?",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-01-09T06:11:04Z",
	"updated_at": "2015-01-09T06:11:04Z"
}
