{
	"id": 69117517,
	"body": "iant: Did you have a solution in mind for this?  I'm thinking something along the lines of:\r\n\r\n  1. Have cmd/go/build.go stop passing -lgcc, -lmingw32, etc. to \"gcc -Wl,-r\" when creating each cgo-using package's _all.o file.\r\n\r\n  2. In external linking mode, simply add back -lmingw32, etc. and it should resolve the missing symbols appropriately.  (I assume -lgcc isn't needed since gcc should add it automatically?)\r\n\r\n  3. In internal linking mode, add an extra \"gcc -Wl,-r\" phase to collect all the per-package _all.o files into a single \"_allall.o\" file, and pass -lgcc, -lmingw32, etc. at that time.  Then perform internal linking as normal using the one \"_allall.o\" file instead of every individual _all.o file.\r\n\r\nI suspect part 3 could be constrained to only trigger in cases where we'd switch to external linking if it was supported (i.e., \"runtime/cgo\" imported and a non-internal host object file is present).  However, I'm not sure I understand the purpose served by internal linking, so I'm unclear exactly when we'd want/need to omit those extra steps.",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-01-08T00:27:29Z",
	"updated_at": "2015-01-08T00:27:29Z"
}
