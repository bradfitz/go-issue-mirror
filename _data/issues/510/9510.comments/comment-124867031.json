{
	"id": 124867031,
	"body": "I have a very simple solution that seems to work on my end.  Basically I just moved logic to append the static libgcc into the `cgoLibGccFileOnce` call, so it only appends libgcc at most once.  If such a solution is acceptable, maybe it could make Go 1.5?\r\n\r\n```diff\r\n3018,3024d3017\r\n\u003c \tcgoLibGccFileOnce.Do(func() {\r\n\u003c \t\tcgoLibGccFile, cgoLibGccErr = b.libgcc(p)\r\n\u003c \t})\r\n\u003c \tif cgoLibGccFile == \"\" \u0026\u0026 cgoLibGccErr != nil {\r\n\u003c \t\treturn nil, nil, err\r\n\u003c \t}\r\n\u003c \r\n3031,3032c3024,3032\r\n\u003c \tif cgoLibGccFile != \"\" {\r\n\u003c \t\tstaticLibs = append(staticLibs, cgoLibGccFile)\r\n---\r\n\u003e \r\n\u003e \tcgoLibGccFileOnce.Do(func() {\r\n\u003e \t\tcgoLibGccFile, cgoLibGccErr = b.libgcc(p)\r\n\u003e \t\tif cgoLibGccFile != \"\" {\r\n\u003e \t\t\tstaticLibs = append(staticLibs, cgoLibGccFile)\r\n\u003e \t\t}\r\n\u003e \t})\r\n\u003e \tif cgoLibGccFile == \"\" \u0026\u0026 cgoLibGccErr != nil {\r\n\u003e \t\treturn nil, nil, err\r\n```",
	"user": {
		"login": "jtsylve",
		"id": 594165,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-25T17:51:38Z",
	"updated_at": "2015-07-25T17:52:16Z"
}
