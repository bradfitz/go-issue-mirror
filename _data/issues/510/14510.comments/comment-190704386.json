{
	"id": 190704386,
	"body": "Why not change the API to combine a result value and whatever error details\nyou'd like to utilize into one struct?\n\nOn Tue, Mar 1, 2016 at 7:21 AM, Kamil Dziedzic \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e You can't use structured error information e.g. struct that returns a\n\u003e integer code and the error details etc in case of error, or nil in case of\n\u003e success because gomobile strictly forbids using anything else than error\n\u003e interface as second parameter.\n\u003e\n\u003e gomobile: functions and methods must return either zero or one values, and\n\u003e optionally an error\n\u003e\n\u003e What could easily work is to allow some kind of special error struct e.g. type\n\u003e GomobileError struct { Code int } the same way as for example we have\n\u003e https://golang.org/pkg/net/#DNSConfigError\n\u003e However, making a generic like above doesn't work in this case IMO as\n\u003e android exceptions doesn't have error codes.\n\u003e\n\u003e So maybe back to the root of the problem. Right now it's impossible to\n\u003e match errors between golang code and ios/android in some systematic way. In\n\u003e golang for example we can check if package exported error pointer is the\n\u003e same as returned error or by using type assertion. When it comes to\n\u003e matching errors between golang and ios/android we can only base on error\n\u003e message... which is at least ugly.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/14510#issuecomment-190695518\u003e.\n\u003e\n\n\n\n-- \n__\n",
	"user": {
		"login": "hyangah",
		"id": 4999471,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-01T12:34:27Z",
	"updated_at": "2016-03-01T12:34:27Z"
}
