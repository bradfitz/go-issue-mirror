{
	"id": 225452371,
	"body": "No, `runtime.KeepAlive` does not ensure that the address of the memory does not change.  It only ensures that the memory is not collected.  That is a fair question.  We have no way in Go to say that the address of memory does not change, and we do not want to add any such feature.\r\n\r\nHowever, my current thinking is that it is not an issue here, because 1) currently memory never moves anyhow; 2) if we ever do permit memory to move, the `syscall.Syscall` function will require special treatment anyhow.  Any pointer passed into `syscall.Syscall`, regardless of whether it is converted to `uintptr`, must not move until `syscall.Syscall` returns.\r\n\r\nSo the point of the `runtime.KeepAlive` is not to keep the pointer in one place.  When and if that becomes important, we will have to make that a feature of `syscall.Syscall` itself.  The point of the `runtime.KeepAlive` is to keep the pointer from being collected too early--where, as the original example shows, too early actually means before we call `syscall.Syscall` at all.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-12T18:26:20Z",
	"updated_at": "2016-06-12T18:26:20Z"
}
