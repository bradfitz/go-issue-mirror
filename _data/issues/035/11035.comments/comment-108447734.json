{
	"id": 108447734,
	"body": "Saw this, wanted to be sure that the contents of the mmap'd B+Tree were visible/known to the GC:\r\n\r\n    So basically, I was putting good values into the channel but getting\r\n    dead values out. Super weird. If I turn off using the mmap'ed B+Tree and\r\n    use a regular datastructure the errors go away\r\n\r\nI'm still new to go and the library, so I could be barking up the wrong tree.  But if I'm not, that's a very likely cause of 0xdeaddeaddead -- hide pointers from GC, run GC, it reclaims the storage, when you return pointers from your hiding place, they reference junk.",
	"user": {
		"login": "dr2chase",
		"id": 1928999,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-03T14:19:02Z",
	"updated_at": "2015-06-03T14:19:02Z"
}
