{
	"id": 132535547,
	"number": 14277,
	"state": "closed",
	"title": "cmd/compile: redundant jumps",
	"body": "dev.ssa: The following code\r\n\r\n```golang\r\n// gostress -seed 31876\r\npackage main\r\nimport \"fmt\"\r\nvar b2i = map[bool]int{true:1}\r\nfunc main() {\r\nfmt.Println(f1_ssa(false, 0, 1, ))\r\n}\r\nfunc f1_ssa(a1 bool, a2 uint8, a3 int64, ) int {\r\nswitch {} // prevent inlining\r\na3 += a3 \u003c\u003c 1 // int64\r\nv1 := (a3 \u0026 a3) + (a3 | a3) + (a3 ^ (a3 - a3)) \u003c\u003c ((1 * (2 + 3)) | 1) // int64\r\n_ = v1\r\na2--\r\nv2 := (a2 != a2) || (a1 \u0026\u0026 a1) || a1 || (v1 == v1) // bool\r\n_ = v2\r\na2--\r\nv2 = v2 // bool\r\nv3 := (v1 * v1) ^ (a3 \u003e\u003e 1) * (a3 \u003c\u003c (a2 | a2)) * v1 // int64\r\n_ = v3\r\nreturn 0 + (int(1) \u003e\u003e (2 - 1) * 2)\r\n}\r\n```\r\n\r\nresults in a lot of redundant jumps. After the trim pass:\r\n\r\n```\r\nb3:\r\nv1 = InitMem \u003cmem\u003e\r\nv9 = VarDef \u003cmem\u003e {~r3} v1\r\nv2 = SP \u003cuintptr\u003e : SP\r\nv10 = MOVQstoreconst \u003cmem\u003e {~r3} v2 v9\r\nv85 = Arg \u003cbool\u003e {a1} : a1[bool]\r\nv32 = LoadReg \u003cbool\u003e v85 : AX\r\nv50 = TESTB \u003cflags\u003e v32 v32\r\nNE v50 → b4 b4\r\nb4: ← b3 b3\r\nNE v50 → b10 b8\r\nb10: ← b8 b8 b4\r\nv52 = VarDef \u003cmem\u003e {~r3} v10\r\nv53 = MOVQstoreconst \u003cmem\u003e {~r3} v2 v52\r\nRet v53\r\nb8: ← b4\r\nNE v50 → b10 b10\r\n```\r\n\r\nand the code generated\r\n\r\n```\r\n00070 (f.go:8)\tTEXT\t\"\".f1_ssa(SB), $0\r\n00071 (f.go:8)\tFUNCDATA\t$0, \"\".gcargsÂ·2(SB)\r\n00072 (f.go:8)\tFUNCDATA\t$1, \"\".gclocalsÂ·3(SB)\r\n00073 (f.go:8)\tTYPE\t\"\".a1(FP)type.bool, $1\r\n00074 (f.go:8)\tTYPE\t\"\".a2+1(FP)type.uint8, $1\r\n00075 (f.go:8)\tTYPE\t\"\".a3+8(FP)type.int64, $8\r\n00076 (f.go:8)\tTYPE\t\"\".~r3+16(FP)type.int, $8\r\n00077 (f.go:8)\tTYPE\t\"\".v1(SP)type.int64, $8\r\n00078 (f.go:8)\tTYPE\t\"\".v2(SP)type.bool, $1\r\n00079 (f.go:8)\tTYPE\t\"\".v3(SP)type.int64, $8\r\n00080 (f.go:8)\tTYPE \"\".autotmp_0006(SP)type.int64, $8\r\n00081 (f.go:8)\tTYPE \"\".autotmp_0007(SP)type.uint8, $1\r\n00082 (f.go:8)\tTYPE \"\".autotmp_0008(SP)type.uint8, $1\r\nv9\r\n00083 (f.go:8)\tVARDEF\t\"\".~r3+16(FP)\r\nv10\r\n00084 (f.go:8)\tMOVQ\t$0, \"\".~r3+16(FP)\r\nv32\r\n00085 (f.go:8)\tMOVB\t\"\".a1(FP), AX\r\nv50\r\n00086 (f.go:8)\tTESTB\tAX, AX\r\nb3\r\n00087 (f.go:14)\tJEQ\t88\r\nb4\r\n00088 (f.go:14)\tJEQ\t92\r\nv52\r\n00089 (f.go:20)\tVARDEF\t\"\".~r3+16(FP)\r\nv53\r\n00090 (f.go:20)\tMOVQ\t$0, \"\".~r3+16(FP)\r\nb10\r\n00091 (f.go:20)\tRET\r\nb8\r\n00092 (f.go:14)\tJNE\t89\r\nb8\r\n00093 (f.go:14)\tJMP\t89\r\n00094 (\u003cunknown line number\u003e)\tEND\r\n```\r\n\r\nFor example JEQ 92  branch cannot be taken.",
	"user": {
		"login": "brtzsnr",
		"id": 57079,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2016-04-01T10:27:30Z",
	"created_at": "2016-02-09T21:12:24Z",
	"updated_at": "2016-04-01T10:27:30Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
