{
	"id": 84155874,
	"number": 11039,
	"state": "closed",
	"title": "gccgo: Tuple map assignments don't handle key assignability properly",
	"body": "The following piece of code correctly compiles with gccgo:\r\n\r\n    package main\r\n    \r\n    type T int\r\n    func main() {\r\n            m := make(map[T]int)\r\n            m[0] = 0\r\n    }\r\n\r\nbecause according to the specification on [Assignability](http://golang.org/ref/spec#Assignability) \"x's type V and T have identical underlying types and at least one of V or T is not a named type.\"\r\n\r\nHowever, a similar piece of code:\r\n\r\n    package main\r\n    \r\n    type T int\r\n    func main() {\r\n            m := make(map[T]int)\r\n            var a int\r\n            m[0], a = 0, 0\r\n            _ = a\r\n    }\r\n\r\nfails with `incompatible type for map index (cannot use type int as type T)`.",
	"user": {
		"login": "paranoiacblack",
		"id": 1035296,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Started"
		}
	],
	"assignee": {
		"login": "paranoiacblack",
		"id": 1035296,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2015-07-24T17:24:16Z",
	"created_at": "2015-06-02T18:56:49Z",
	"updated_at": "2016-08-05T16:09:43Z",
	"milestone": {
		"id": 1069171,
		"number": 23,
		"title": "Gccgo"
	}
}
