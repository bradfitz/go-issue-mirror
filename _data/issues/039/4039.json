{
	"id": 51281548,
	"number": 4039,
	"state": "closed",
	"title": "doc: ref/mem example explanation shouldn't imply atomic string assignment",
	"body": "\u003cpre\u003eThe explanation for the last example in \u0026quot;Channel communication\u0026quot; implies\natomicity of string assignment, but the memory model doesn't seem to guarantee this.\n\n`If the channel were buffered (e.g., c = make(chan int, 1)) then the program would not\nbe guaranteed to print \u0026quot;hello, world\u0026quot;. (It might print the empty string; it\ncannot print \u0026quot;goodbye, universe\u0026quot;, nor can it crash.)`\n\n\u003ca href=\"http://golang.org/ref/mem#tmp_69\"\u003ehttp://golang.org/ref/mem#tmp_69\u003c/a\u003e\n\u003ca href=\"http://tip.golang.org/ref/mem#tmp_69\"\u003ehttp://tip.golang.org/ref/mem#tmp_69\u003c/a\u003e\n\u003ca href=\"http://code.google.com/p/go/source/browse/doc/go_mem.html?r=4965beed44928668d2b0d4dc7621c4ad375a99eb#270\"\u003ehttp://code.google.com/p/go/source/browse/doc/go_mem.html?r=4965beed44928668d2b0d4dc7621c4ad375a99eb#270\u003c/a\u003e\n\nRelated discussion on go-nuts:\n\u003ca href=\"https://groups.google.com/forum/#\"\u003ehttps://groups.google.com/forum/#\u003c/a\u003e!topic/golang-nuts/UWJlS8mPTlM\u003c/pre\u003e",
	"user": {
		"login": "speter",
		"id": 450945,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "dsymonds",
		"id": 31506,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:21:25Z",
	"created_at": "2012-09-04T03:26:25Z",
	"updated_at": "2016-06-24T22:24:08Z"
}
