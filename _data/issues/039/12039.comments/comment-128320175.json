{
	"id": 128320175,
	"body": "It is very unfortunate then that Go has no lossless data serializer (e.g.\nencoding/json isn't better because it loses some location info from\ntime.Time and doesn't support nan/inf floating point values).\n\nCan you at least change gob's documentation to make this more clear?\nCurrently it can be read to only not encode nil pointers, because \u00260 is not\nthe zero value for *int (only nil is).\n\nAlso, information losses of the encoding shouldn't be hidden in the wire\nprotocol description but be in a more prominent place - ideally near the\npart that tells about flattening pointers (which BTW makes me immediately\nrealize that for **int, nil and \u0026nil aren't distinguished).\n\nWould that be viable?\n\nOn Wed, Aug 5, 2015, 22:58 Rob Pike \u003cnotifications@github.com\u003e wrote:\n\n\u003e It is inherent in the design. Top-level items are always sent even if they\n\u003e are zero, whatever their type (http://play.golang.org/p/VJxmBFGnFH).\n\u003e Internal items are not, and the difference between T and *T in an internal\n\u003e item has no bearing on what is transmitted. This is the design.\n\u003e\n\u003e Working as intended.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/12039#issuecomment-128222455\u003e.\n\u003e\n",
	"user": {
		"login": "divVerent",
		"id": 251568,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-06T10:38:05Z",
	"updated_at": "2015-08-06T10:38:05Z"
}
