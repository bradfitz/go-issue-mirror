{
	"id": 111500133,
	"number": 12943,
	"state": "closed",
	"title": "net/http: srv.Serve hangs if RemoteAddr() blocks",
	"body": "The PROXY protocol is supported by several proxy servers such as haproxy\r\nand Amazon ELB.  This protocol allows services running behind a proxy to\r\nlearn the remote address of the actual client connecting to the proxy,\r\nby including a single textual line at the beginning of the TCP\r\nconnection.\r\nhttp://www.haproxy.org/download/1.5/doc/proxy-protocol.txt\r\n\r\nThere are several Go libraries for this protocol (such as\r\nhttps://github.com/armon/go-proxyproto), which operate by wrapping a\r\nnet.Conn with an implementation whose RemoteAddr method reads the\r\nprotocol line before returning. This means that RemoteAddr is a blocking\r\ncall.\r\n\r\n(Blocking inside `Accept` is not an option either; the point is that we want `srv.Serve` to call `Accept` on the underlying socket as soon as the previous `Accept` call succeeded, without any blocking operations.)\r\n\r\nThis exists in current Go master (eg, 1.5.1) on all platforms (eg, Linux).",
	"user": {
		"login": "glasser",
		"id": 16724,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2015-10-14T22:26:50Z",
	"created_at": "2015-10-14T21:46:19Z",
	"updated_at": "2016-03-16T03:49:52Z"
}
