{
	"id": 51285963,
	"number": 6943,
	"state": "closed",
	"title": "net/http: recover veils some nil pointer deref crashes at server side, but that's the way of the net/http world",
	"body": "\u003cpre\u003eBut report.\n\nHere is a blog post takeing benchmark. He did\n\n  ab -n 1000 -c 100 \u003ca href=\"http://127.0.0.1:8080\"\u003ehttp://127.0.0.1:8080\u003c/a\u003e\n\nBut sometimes go occur panic. below is a stacktrace.\n\n...\n21:01:13 go.1   | goroutine 1079 [select]:\n21:01:13 go.1   | net/http.(*persistConn).roundTrip(0xc21056d900, 0xc2101add70,\n0xc21056d900, 0x0, 0x0)\n21:01:13 go.1   |      \n/usr/local/Cellar/go/1.2/libexec/src/pkg/net/http/transport.go:879 +0x6d6\n21:01:13 go.1   | net/http.(*Transport).RoundTrip(0xc210057200, 0xc2106e3a90, 0x1, 0x0,\n0x0)\n21:01:13 go.1   |      \n/usr/local/Cellar/go/1.2/libexec/src/pkg/net/http/transport.go:187 +0x391\n21:01:13 go.1   | net/http.send(0xc2106e3a90, 0x56c290, 0xc210057200, 0x0, 0x0, ...)\n21:01:13 go.1   |       /usr/local/Cellar/go/1.2/libexec/src/pkg/net/http/client.go:168\n+0x37f\n21:01:13 go.1   | net/http.(*Client).send(0xc2106e74b0, 0xc2106e3a90, 0x16, 0x1,\n0xc2101add60)\n21:01:13 go.1   |       /usr/local/Cellar/go/1.2/libexec/src/pkg/net/http/client.go:100\n+0xd9\n21:01:13 go.1   | net/http.(*Client).doFollowingRedirects(0xc2106e74b0, 0xc2106e3a90,\n0x2af1f8, 0x0, 0x0, ...)\n21:01:13 go.1   |       /usr/local/Cellar/go/1.2/libexec/src/pkg/net/http/client.go:294\n+0x671\n21:01:13 go.1   | net/http.(*Client).Do(0xc2106e74b0, 0xc2106e3a90, 0x485dc0, 0x0, 0x0)\n21:01:13 go.1   |       /usr/local/Cellar/go/1.2/libexec/src/pkg/net/http/client.go:129\n+0x8f\n21:01:13 go.1   | github.com/kentaro/delta.(*Handler).dispatchProxyRequest(0xc2100001f0,\n0xc210036960, 0xc2106b34e0, 0xc2106a7840, 0xc2106abee0)\n21:01:13 go.1   |       /Users/usr0600239/.go/src/github.com/kentaro/delta/handler.go:71\n+0xb0\n21:01:13 go.1   | created by github.com/kentaro/delta.(*Handler).ServeHTTP\n21:01:13 go.1   |       /Users/usr0600239/.go/src/github.com/kentaro/delta/handler.go:29\n+0x1fa\n21:01:13 go.1   |\n21:01:13 go.1   | goroutine 1078 [chan receive]:\n21:01:13 go.1   | github.com/kentaro/delta.funcÂ·001()\n21:01:13 go.1   |       /Users/usr0600239/.go/src/github.com/kentaro/delta/handler.go:38\n+0x80\n21:01:13 go.1   | created by github.com/kentaro/delta.(*Handler).ServeHTTP\n21:01:13 go.1   |       /Users/usr0600239/.go/src/github.com/kentaro/delta/handler.go:52\n+0x258\n21:01:13 go.1   |\n21:01:13 go.1   | goroutine 1076 [select]:\n21:01:13 go.1   | exited with code 2\n21:01:13 system | sending SIGTERM to all processes\n21:01:13 go.1   | exited with code 0\n\nAnd he says, around over 5000 requests, go doesn't return response.\u003c/pre\u003e",
	"user": {
		"login": "mattn",
		"id": 10111,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:38:40Z",
	"created_at": "2013-12-13T00:34:06Z",
	"updated_at": "2016-06-25T01:23:46Z"
}
