{
	"id": 66077192,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eIf the behavior was unspecified, then I would understand not adding a caveat on the\nbehavior, but since this specifies a behavior, then it should actually be specified. The\nintro description is unclear on this as well \n\n\"The variadic function append appends zero or more values x to s of type S, which must\nbe a slice type, and returns the resulting slice, also of type S\"\n\nThe \"returns the resulting slice, also of type S\". If it's just strictly adding to the\nslice, why add that last caveat? The reason is is that sometimes you do need to replace\nthe underlying slice. When do you need to replace the array? Well, the spec says that if\nthe capacity isn't large enough, the array is replaced, but it doesn't specify when else\nthat could (or could not) happen, and so my assumption would be that it is undefined.\nRewording the introduction might make the behavior implied, but I don't think the\ncurrent wording does so. For example, if the introduction read\n\n\"The variadic function append appends zero or more values x to s of type S, which must\nbe a slice type, by increasing the length of s.\"\n\nI would agree that it's implied that the slice is the same. However, changing the spec\nto imply the behavior is as big of a change as specifying the behavior, and so I would\nvote to make it explicit.\u003c/pre\u003e",
	"user": {
		"login": "btracey",
		"id": 3680859,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-04-02T08:16:24Z",
	"updated_at": "2014-12-08T10:27:44Z"
}
