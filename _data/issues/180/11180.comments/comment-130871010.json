{
	"id": 130871010,
	"body": "@harshavardhana, addressing this:\r\n\r\n\u003e OSXFUSE sending EINTR is perfect in accordance with POSIX, it is the client application which is layered on top of OSXFUSE perhaps your own filesystem built out of OSXFUSE which could potentially handle this at POSIX level and perhaps even want to make sense of it\r\n\r\nTo be clear, this is osxfuse returning `EINTR` to the _user_ of the file system (i.e. a program opening a file in the directory at which the file system is mounted), not osxfuse returning `EINTR` when the file system server is reading from `/dev/fuse`. So there's no opportunity for my code to fix it; instead I'd have to update any Go program that may open a file. (Which is why I've filed this bug, because updating package os would have that effect.)\r\n\r\nThanks for pointing out [PEP 0475](https://www.python.org/dev/peps/pep-0475/); I agree with the logic and conclusion there. I do think it's funny that they call out Go as a language whose standard library retries on `EINTR`, though. :-)\r\n\r\nI will file an issue with osxfuse about this to see what the author thinks. But I still do think that Go should handle this, given existing versions of osxfuse and given that the man page [quoted above](https://github.com/golang/go/issues/11180#issuecomment-111885073) does not appear to exclude the possibility of `open` returning `EINTR` for a file.",
	"user": {
		"login": "jacobsa",
		"id": 202895,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-13T22:50:01Z",
	"updated_at": "2015-08-13T22:50:01Z"
}
