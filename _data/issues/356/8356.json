{
	"id": 51288072,
	"number": 8356,
	"state": "closed",
	"title": "cmd/vet: No warning for copying structs containing mutex by value in for-range loop",
	"body": "by **nicolashillegeer**:\n\n\u003cpre\u003eWhat does 'go version' print?\n\ngo version go1.3 linux/amd64\n\nWhat steps reproduce the problem?\n\nAny program where a slice of structs (not pointes to structs) containing locking\nprimitives by value\nis iterated over with range-for, and the locks are used in the loop body.\n\n1. \u003ca href=\"http://play.golang.org/p/FMsMT0dnhf\"\u003ehttp://play.golang.org/p/FMsMT0dnhf\u003c/a\u003e\n\nWhat happened?\n\nGo vet didn't warn that the locking/unlocking would be rendered useless by this action.\nEven though I expected it to because it also warns on returning such structs by value\nfrom functions and the like.\n\nWhat should have happened instead?\n\nGo vet should've warned me that this was dangerous.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:46:25Z",
	"created_at": "2014-07-11T09:36:33Z",
	"updated_at": "2016-06-25T01:37:52Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
