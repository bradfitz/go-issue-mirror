{
	"id": 253292389,
	"body": "The other option for the HVAC example is to do the following:\r\n````\r\ntype designConditions struct {\r\n    NULL bool `json:-`\r\n    Indoor\t\t*indoorDesignConditions\t\t`json:\"indoor\"`\r\n    Outdoor\t\t*outdoorDesignConditions\t`json:\"outdoor\"`\r\n}\r\n\r\nfunc (m *designConditions) Scan(value interface{}) error {\r\n    if value == nil {\r\n        m.NULL = true\r\n        return nil\r\n    }\r\n    data := value.([]byte)\r\n    return  json.Unmarshal(data, m)\r\n}\r\n\r\nfunc (m designConditions) Value() (driver.Value, error) {\r\n    if m.NULL {\r\n        return nil, nil\r\n    }\r\n    return json.Marshal(m)\r\n}\r\n```\r\n\r\nDo you see a problem with using the above design? Rather than passing in a null *designConditions, you would pass in a designConditions{NULL: true}.\r\n\r\nI'm not suggesting you alter a schema design to not include nulls, I'm just suggesting there might be a more appropriate way to design the custom Valuer type. Would that work for you? Would it be an issue in your code?\r\n",
	"user": {
		"login": "kardianos",
		"id": 755121,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-12T18:10:35Z",
	"updated_at": "2016-10-12T18:10:35Z"
}
