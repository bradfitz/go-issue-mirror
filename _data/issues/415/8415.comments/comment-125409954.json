{
	"id": 125409954,
	"body": "@rsc\r\n\r\nWell... `database/sql/driver` already uses `reflect` package. In fact, in the very same function that cause the panic (`defaultConverter.ConvertValue`), so I'm not sure what you are implying.\r\n\r\nAlso, here is another related problem I've run into:\r\n\r\n[When I implement `Valuer` on `*MyType` instead of `MyType`](https://gist.github.com/a13xb/a1bd4c90a0100acfbd19), it (obviously) stops working on on non-pointer values. Because you cannot use `MyType` and `*MyType` as `Valuer` at the same time, you cannot have a nullable `Valuer` fields in frameworks like [`gorp`](https://github.com/go-gorp/gorp), where I don't directly control per-field binding code. Well, theoretically you *can*, but then they *all* have to be pointers, even non-nullable fields, which is a nuisance, and is not consistent with basic types. E.g. I can have a mix of `time.Time` and `*time.Time` fields, but not `MyType` and `*MyType` columns.\r\n\r\nSo my current workaround is to only use standard types in database code, and avoid any uses of `Valuer`.",
	"user": {
		"login": "a13xb",
		"id": 539049,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-28T02:23:10Z",
	"updated_at": "2015-07-28T02:23:10Z"
}
