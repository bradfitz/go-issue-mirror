{
	"id": 66077532,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5 by **cgmurray**:\n\n\u003cpre\u003eI'm looking for a pragmatic solution. If it's possible with the current reflect package\nwithout having to reconstruct the interface-value using a switch/case for every possible\ntype I would be more than happy. :-)\nWhich specific function(s) in reflect are you referring to? Thanks!\n\nMy initial idea was to use Pointer() combined with NewAt(.,.) but I didn't knew how to\npass/marshall the Type over to c. A possibility is to store a global map[int]Type\nprotected with a lock but kind of hacky imo.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-04-05T18:13:07Z",
	"updated_at": "2014-12-08T10:28:01Z"
}
