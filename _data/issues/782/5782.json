{
	"id": 51284178,
	"number": 5782,
	"state": "closed",
	"title": "net/http: Client drops all headers on redirect",
	"body": "by **robryk**:\n\n\u003cpre\u003eWhen the current client follows a redirect, all subsequent requests are sent without any\nof the headers sent on the initial request. The following program demonstrates this\nbehaviour:\n\n\u003ca href=\"http://play.golang.org/p/AExnEZNwv8\"\u003ehttp://play.golang.org/p/AExnEZNwv8\u003c/a\u003e\n\nThe header which gets printed on stdout is empty; I'd expect it to be equal to\n\u0026quot;bytes=0-1\u0026quot;, the value set in the original request.\n\nThis is counterintuitive and makes the Request.Header useless if a redirect can occur.\nIt seems that one must either make a custom transport wrapper that adds headers and\ncreate a client on top of that, or use an undocumented feature of CheckRedirect, namely\nthat the request passed is going to be actually sent, so it can modify it before that.\n\nI'm not sure what resolution I'd expect. My main problem is that this behaviour confused\nme, and I can't see an elegant way of setting eg. a Range header on subsequent requests\n-- creating a new transport wrapper for every request seems weird, even if it's mostly\ncost-free.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:31:43Z",
	"created_at": "2013-06-26T00:06:13Z",
	"updated_at": "2016-06-24T22:43:22Z"
}
