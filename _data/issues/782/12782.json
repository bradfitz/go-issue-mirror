{
	"id": 108835014,
	"number": 12782,
	"state": "closed",
	"title": "mail.Address.String() does not take care of non-ASCII name with comma",
	"body": "1. go version 1.4.2\r\n2. Linux sanydellubuntu 3.19.0-30-generic #33-Ubuntu SMP Mon Sep 21 20:58:04 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\r\n3. See my code below.\r\n4. I expected mail.Address.String() can escape the comma for non-ASCII characters.\r\n5. Comma is output without escape and cause error *mail: no angle-addr* during parsing.\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"log\"\r\n\t\"net/mail\"\r\n)\r\n\r\nfunc formatEmailAddress(emailaddress, name string) string {\r\n\ta := new(mail.Address)\r\n\tif \"\" == emailaddress {\r\n\t\treturn \"\"\r\n\t}\r\n\ta.Address = emailaddress\r\n\tif \"\" != name {\r\n\t\ta.Name = name\r\n\t}\r\n\treturn a.String()\r\n}\r\n\r\nfunc main() {\r\n\ts := formatEmailAddress(\"test.mail@gmail.com\", \"naé, mée\")\r\n\tlog.Println(s)\r\n\ta, err := mail.ParseAddress(s)\r\n\tif nil != err {\r\n\t\tlog.Println(\"error because:\", err)\r\n\t} else {\r\n\t\tlog.Println(\"name is:\", a.Name, \"email is:\", a.Address)\r\n\t}\r\n}\r\n```",
	"user": {
		"login": "cention-sany",
		"id": 12839593,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2015-10-20T23:19:13Z",
	"created_at": "2015-09-29T09:54:48Z",
	"updated_at": "2015-10-20T23:19:13Z"
}
