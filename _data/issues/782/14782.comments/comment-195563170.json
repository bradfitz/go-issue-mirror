{
	"id": 195563170,
	"body": "Please do NOT merge cmd/internal/obj and cmd/internal/ld. The first is\nabout _writing_ object files and the second is about _reading_ them. The\npoint of splitting the code was so that they could _diverge_ reasonably, so\nthat the reading-specific parts could be dropped from one and the\nwriting-specific parts dropped from the other. They can both get cleaner\nthat way. I would like to get back to the point where cmd/link does not\nimport cmd/internal/obj at all. It didn't used to, but there was some\nwell-intentioned and reasonable cleanup that undid that separation this a\nwhile back in order to avoid some duplicated constant definitions. It would\nbe good to split those constants out into a separate shared package\n(cmd/internal/objfile maybe) and then add a test to go/build that cmd/link\ncannot depend on cmd/internal/obj.\n\n\nOn Fri, Mar 11, 2016 at 4:26 PM David Crawshaw \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e There's a lot of other linker-related overlap, some of which is only now\n\u003e becoming clear to me.\n\u003e\n\u003e For example, cmd/internal/obj.LSym and cmd/link/internal/ld.LSym. I\n\u003e believe if obj.LSym had an Extra interface{} field that cmd/link could\n\u003e use, then we could replace most of ld.LSym. Given I did some recent cleanup\n\u003e of ld.LSym, I'll attempt to do the same to obj.LSym and see how close I can\n\u003e get to merging those types.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/14782#issuecomment-195561179\u003e.\n\u003e\n",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-11T21:30:55Z",
	"updated_at": "2016-03-11T21:30:55Z"
}
