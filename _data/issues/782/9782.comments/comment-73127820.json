{
	"id": 73127820,
	"body": "\"\n\nThe following interfaces are never restarted after being interrupted\nby a signal handler,\nregardless of the use of SA_RESTART;\nthey always fail with the error EINTR when interrupted by a signal handler:\n\nFile descriptor multiplexing interfaces:\nepoll_wait(2), epoll_pwait(2), poll(2), ppoll(2), select(2), and pselect(2).\n\nI guess that's that. Unsettling.\n\n\"\n\nCould you please log a bug on golang/go and i'll make sure this is fixed\nonce and for all in the std lib.\n\nOn Fri, Feb 6, 2015 at 8:00 AM, Pieter Droogendijk \u003cnotifications@github.com\n\u003e wrote:\n\n\u003e @davecheney \u003chttps://github.com/davecheney\u003e :\n\u003e http://man7.org/linux/man-pages/man7/signal.7.html\n\u003e\n\u003e Before Linux 3.8, reads from an inotify(7) file descriptor were not restartable;\n\u003e when interrupted by a signal handler, read(2) always failed with the error EINTR.\n\u003e\n\u003e ...\n\u003e\n\u003e The following interfaces are never restarted after being interrupted by a signal handler,\n\u003e regardless of the use of SA_RESTART;\n\u003e they always fail with the error EINTR when interrupted by a signal handler:\n\u003e\n\u003e File descriptor multiplexing interfaces:\n\u003e epoll_wait(2), epoll_pwait(2), poll(2), ppoll(2), select(2), and pselect(2).\n\u003e\n\u003e I guess that's that. Unsettling.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/9782#issuecomment-73127077\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-05T21:03:40Z",
	"updated_at": "2015-02-05T21:03:40Z"
}
