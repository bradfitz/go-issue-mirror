{
	"id": 230834788,
	"body": "i've found some things that may help here\r\n\r\nthere seems to be a race condition in `Transport.getConn` (transport.go:797), specifically between the go func wrapping `t.dialConn` (transport.go:839) and the select statement following it (transport.go:845)\r\n\r\nin the test case, `Transport.getConn` is called twice with the context canceled between these calls\r\n\r\nthe first time:\r\n- `t.dialConn` returns a nil error\r\n- this nil error is returned from the select statement\r\n\r\nthe second time:\r\n- `t.dialConn` returns an `operation was canceled` error\r\n- usually the select statement doesn't see this and executes the `\u003c-req.Context().Done()` case (returning `errRequestCanceledConn`)...\r\n- ... but sometimes the `t.dialConn` error makes it through the channel in time and is returned instead\r\n\r\nthe following added log statements highlight this.\r\n\r\npassing:\r\n```\r\nclient.go:257: calling transport roundtrip\r\ntransport.go:841: error from t.dialConn: \u003cnil\u003e\r\ntransport.go:853: returning from '\u003c-dialc' case. err: \u003cnil\u003e\r\nclient.go:496: checking redirect\r\nclient_test.go:305: canceling\r\nclient.go:257: calling transport roundtrip\r\ntransport.go:841: error from t.dialConn: dial tcp 127.0.0.1:64091: operation was canceled\r\ntransport.go:871: returning from '\u003c-req.Context().Done()' case\r\nPASS\r\n```\r\nso even though `errRequestCanceledConn` is returned, the `operation was canceled` error is still present.\r\n\r\nfailing:\r\n```\r\nclient.go:257: calling transport roundtrip\r\ntransport.go:841: error from t.dialConn: \u003cnil\u003e\r\ntransport.go:853: returning from '\u003c-dialc' case. err: \u003cnil\u003e\r\nclient.go:496: checking redirect\r\nclient_test.go:305: canceling\r\nclient.go:257: calling transport roundtrip\r\ntransport.go:841: error from t.dialConn: dial tcp 127.0.0.1:64097: operation was canceled\r\ntransport.go:853: returning from '\u003c-dialc' case. err: dial tcp 127.0.0.1:64097: operation was canceled\r\n--- FAIL: TestClientRedirectContext (0.21s)\r\n\tclient_test.go:319: url.Error.Err = dial tcp 127.0.0.1:64097: operation was canceled; want errRequestCanceled or errRequestCanceledConn\r\n```\r\n\r\nalso, adding a small `time.Sleep` call between the go func wrapping the `t.dialConn` and the select statement makes this behavior much more reproducible for me (~50% of the time just using regular `go test`)",
	"user": {
		"login": "jaredborner",
		"id": 1760991,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-06T16:51:51Z",
	"updated_at": "2016-07-06T16:51:51Z"
}
