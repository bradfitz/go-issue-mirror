{
	"id": 66099238,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003eThat would certainly be simpler for the implementation, but it puts a significant burden\non the user to keep track of which versions of Go the compiler supports, and supply the\ncorrect set of tags at every invocation. I would also consider it to be a regression in\nfunctionality; at least, at the moment, the set of release tags is roughly correct.\n\nI would much prefer if the \"go\" tool obtained this information automatically from the\ncompiler. I propose that \"go\" request a set of compiler tags from \"gccgo\" toolchains by\nexecuting \"$GCCGO -dumpgotags\" and reading the tags from stdout. For backwards\ncompatibility with existing versions of gccgo/llgo, the \"go\" tool's built-in set of\ncompiler tags would continue to be used if the exit status is non-zero.\n\n\u003ca href=\"https://golang.org/cl/167080043\"\u003ehttps://golang.org/cl/167080043\u003c/a\u003e implements this, and I will mail it after the\ngo1.4 release.\u003c/pre\u003e",
	"user": {
		"login": "pcc",
		"id": 425024,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-11-03T10:14:10Z",
	"updated_at": "2014-12-08T10:48:57Z"
}
