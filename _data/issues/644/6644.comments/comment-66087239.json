{
	"id": 66087239,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eThis is almost certainly the fix:\n\ndiff -r 9169cb38c3e8 src/pkg/runtime/stack.c\n--- a/src/pkg/runtime/stack.c\tTue Oct 22 18:33:37 2013 -0400\n+++ b/src/pkg/runtime/stack.c\tWed Oct 23 09:49:42 2013 -0400\n@@ -255,7 +255,7 @@\n \tif(gp-\u003estackguard0 == (uintptr)StackPreempt) {\n \t\tif(gp == m-\u003eg0)\n \t\t\truntime·throw(\"runtime: preempt g0\");\n-\t\tif(oldstatus == Grunning \u0026\u0026 m-\u003ep == nil)\n+\t\tif(oldstatus == Grunning \u0026\u0026 m-\u003ep == nil \u0026\u0026 m-\u003elocks == 0)\n \t\t\truntime·throw(\"runtime: g is running but p is not\");\n \t\tif(oldstatus == Gsyscall \u0026\u0026 m-\u003elocks == 0)\n \t\t\truntime·throw(\"runtime: stack split during syscall\");\n\nIf you can find a small case that reproduces the problem that we can add as a test case,\ngreat. But actually I'd be more interested just to know whether the change fixes your\nreproduction case.\n\nThanks.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-10-23T13:50:37Z",
	"updated_at": "2014-12-08T10:36:51Z"
}
