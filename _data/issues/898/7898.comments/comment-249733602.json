{
	"id": 249733602,
	"body": "@kardianos I can take a stab at the sqlite3 implementation.\r\n\r\nHowever, I'm not sure thats the interface that'll work best for sqlite3. They recommend emulating nested transactions using savepoints. From their documentation:\r\n\u003e SAVEPOINTs are a method of creating transactions, similar to BEGIN and COMMIT, except that the SAVEPOINT and RELEASE commands are named and may be nested\r\n\r\nSo exposing \"SavePoint\" on the `Tx` struct would mean that the user has already begun the txn using a non-savepoint mechanism. This is why my initial proposal was to modify the `Txn` interface itself. This is not to say that this interface won't work for sqlite3 , but I can imagine there exists some SQL database which needs you to use either transactions (BEGIN...COMMIT) or savepoints exclusively (without intermingling the two).\r\n\r\nThoughts?",
	"user": {
		"login": "amoghe",
		"id": 1750664,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-27T00:13:30Z",
	"updated_at": "2016-09-27T00:23:50Z"
}
