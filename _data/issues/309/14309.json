{
	"id": 133240285,
	"number": 14309,
	"state": "closed",
	"title": "spec: clarify rules for uniqueness of method names",
	"body": "The specification states that\r\n\r\n\u003e  In a method set, each method must have a unique non-blank method name.\r\n\r\nIt also specifies that promoted methods are included in the method set of a struct:\r\n\r\n\u003e Given a struct type S and a type named T, promoted methods are included in the method set of the struct as follows:\r\n\r\n\u003e  * If S contains an anonymous field T, the method sets of S and *S both include promoted methods with receiver T. The method set of *S also includes promoted methods with receiver *T.\r\n\r\n\u003e * If S contains an anonymous field *T, the method sets of S and *S both include promoted methods with receiver T or *T.\r\n\r\nThese two excerpts seem to imply that there exist a conflict between a promoted method and a non-promoted method with the same name, or between two promoted methods, like in these examples:\r\n\r\n```Go\r\npackage main\r\ntype A struct{}\r\nfunc (A) F() {}\r\ntype B struct{ A }\r\nfunc (B) F() {}\r\nfunc main() {}\r\n```\r\n\r\n```Go\r\npackage main\r\ntype A struct{}\r\nfunc (A) F() {}\r\ntype B struct{}\r\nfunc (B) F() {}\r\ntype C struct {\r\n\tA\r\n\tB\r\n}\r\nfunc (C) F() {}\r\nfunc main() {}\r\n```\r\nHowever, all of `go`, `gccgo`, and `gotypes`  allow the above programs, so perhaps the intent is for the  method name to be unique only among the non-promoted methods?\r\n",
	"user": {
		"login": "momchil-velikov",
		"id": 5541560,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-02-12T17:46:38Z",
	"created_at": "2016-02-12T13:20:33Z",
	"updated_at": "2016-02-12T17:46:38Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
