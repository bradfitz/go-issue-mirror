{
	"id": 66078208,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3 by **kballard**:\n\n\u003cpre\u003eSo far it appears that this requires cipher 0x0035 (TLS_RSA_WITH_AES_256_CBC_SHA) to\nreproduce, which is what Freenode is picking. If I force a different cipher, the problem\ngoes away.\n\nI wrote a sample program which runs both ends of the connection. If I run it with the\ndefault ciphers everything is fine, but if I run it with TLS_RSA_WITH_AES_256_CBC_SHA,\nthen each written line gets split into 2 pieces on the receiving end, with the first\npiece containing 1 byte and the second piece containing the rest of the message. I have\nto wonder if maybe longer writes end up starting with a 0-byte piece (or, alternatively,\nFreenode's implementation of the cipher produces a 0-byte piece instead of 1-byte piece).\n\nThe program is up at \u003ca href=\"http://play.golang.org/p/zMD0fQokCi\"\u003ehttp://play.golang.org/p/zMD0fQokCi\u003c/a\u003e (requires a server cert/key).\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-04-18T02:30:44Z",
	"updated_at": "2014-12-08T10:28:37Z"
}
