{
	"id": 88590794,
	"body": "I see what you are saying. When compiling multiple packages, if a package has a compilation error you would like to know which package it is for. However, I believe this is already handled, because if you do ```go build``` and there is an error you will see the following output.\r\n```\r\nE:\\gowork\\src\\github.com\\joegrasse\\passtest\u003ego build\r\n# github.com/joegrasse/passtest\r\n.\\passtest.go:26: syntax error: unexpected }\r\n```\r\nNotice the package name printed once vs the package name printed twice below with the -v flag.\r\n```\r\nE:\\gowork\\src\\github.com\\joegrasse\\passtest\u003ego build -v\r\ngithub.com/joegrasse/passtest\r\n# github.com/joegrasse/passtest\r\n.\\passtest.go:26: syntax error: unexpected }\r\n```\r\n\r\nMy issue is when there are no \"true\" errors you still have output to stderr with the -v option. Which in turn leads to issue GoClipse/goclipse#119.",
	"user": {
		"login": "joegrasse",
		"id": 4334144,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-01T18:43:51Z",
	"updated_at": "2015-04-01T18:43:51Z"
}
