{
	"id": 51280749,
	"number": 3527,
	"state": "closed",
	"title": "unexpected fault address 0x1340 when using C wrapped V8",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n\n1. Unzip mygo.zip to /mygo\n2. Commands:\n\n$ export GOPATH=/mygo\n$ cd /mygo/bin\n$ ./test\n\nWhat is the expected output?\n\nHello World\n\nWhat do you see instead?\n\nunexpected fault address 0x1340\nthrow: fault\n[signal 0xa code=0x2 addr=0x1340 pc=0x2116977]\n\ngoroutine 1 [syscall]:\nv8._Cfunc_v8_run(0x2b00000, 0x6c65482700000007)\n\t/var/folders/JR/JRfkwJuzHXCxY8OcslEQvk+++TM/-Tmp-/go-build532070897/v8/_obj/_cgo_defun.c:42 +0x2f\nv8.Run(0x91ca4, 0x6c6548270000000d, 0x0, 0x0, 0xf5b5, ...)\n\t/var/folders/JR/JRfkwJuzHXCxY8OcslEQvk+++TM/-Tmp-/go-build532070897/v8/_obj/v8.cgo1.go:18 +0x6f\nmain.main()\n\t/mygo/src/test/test.go:9 +0x2c\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n\t/private/var/folders/00/0sdwh000h01000cxqpysvccm0035qk/T/bindist765534270/go/src/pkg/runtime/proc.c:221\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\ngo\n\nWhich operating system are you using?\n\nMac OS X 10.6.8\n\nModel Name:\tMac mini\nModel Identifier:\tMacmini4,1\nProcessor Name:\tIntel Core 2 Duo\nProcessor Speed:\t2.4 GHz\nNumber Of Processors:\t1\nTotal Number Of Cores:\t2\nL2 Cache:\t3 MB\nMemory:\t8 GB\nBus Speed:\t1.07 GHz\nBoot ROM Version:\tMM41.0042.B00\n\nWhich version are you using?  (run 'go version')\n\ngo version go1\n\nPlease provide any additional information below.\n\nIf I change v8wrap.cc to return a literal string (change line 19 to `const char *cutf8 =\n\u0026quot;test\u0026quot;` and comment everything about it out) it works fine (not actually\nexecuting JavaScript).\n\nIf I try using libv8wrap.so in a regular c application it works without issues. An error\nonly occurs when I try to execute v8_run with Go, when v8_run is actually using v8.\n\nTo compile libv8wrap:\n\n$ cd /mygo/src/v8\n$ g++ -fPIC -shared -o libv8wrap.so -Iinclude -Llib v8wrap.cc -lv8_base -lv8_snapshot\n\nCompile \u0026quot;test\u0026quot; (go install test)\n\nIf you need to compile v8 (static libraries, linked to libv8wrap.so, residing in\n/mygo/src/v8/lib):\n\n(info from \u003ca href=\"http://code.google.com/p/v8/wiki/BuildingWithGYP)\"\u003ehttp://code.google.com/p/v8/wiki/BuildingWithGYP)\u003c/a\u003e\n\n$ cd /\n$ git clone \u003ca href=\"https://github.com/v8/v8.git\"\u003ehttps://github.com/v8/v8.git\u003c/a\u003e \u0026amp;\u0026amp; cd /v8\n$ make dependencies\n$ make x64.release\n\n(Do make x64 for both release and debug, or x64.debug for just debug. \u0026quot;make\nx64.release library=shared\u0026quot; also builds libv8.dylib, but I'm current not using it -\nI got a panic from v8 when linking libv8.dylib to libv8wrap.so)\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/3527/0/mygo.zip\"\u003emygo.zip\u003c/a\u003e (0 bytes)",
	"user": {
		"login": "lukescott",
		"id": 486224,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 11,
	"closed_at": "2014-12-08T10:18:30Z",
	"created_at": "2012-04-13T22:04:14Z",
	"updated_at": "2016-06-24T22:17:51Z"
}
