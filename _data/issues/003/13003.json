{
	"id": 112469462,
	"number": 13003,
	"state": "closed",
	"title": "proposal: x/mobile/exp/audio: write bindings for AVPlayer and MediaPlayer",
	"body": "`x/mobile/exp/audio.Player` has a naive player implementation based on OpenAL Soft. OpenAL doesn't provide essential APIs to make it easier to implement streaming audio players, therefore I suggest we to write bindings to AVPlayer and MediaPlayer rather than investing more on OpenAL.\r\n\r\nThe bindings will allow us to support streaming, as well as the subsection of the codecs and container formats those player support out of the box.\r\n\r\nPlayer has been originally designed to be consistent with the APIs of the AVPlayer and MediaPlayer, therefore there will be no significant API breaking changes.\r\n\r\nCurrently, there are three main open questions we need to address before continuing with this strategy:\r\n- The Player constructors require an API-breaking change. Both players can discover sample rate and number of channels from the source audio and cannot play header-less PCM files. We may provide a constructor such as NewPlayer(src io.ReadSeeker).\r\n- We need to document an intersection of the codecs both player support.\r\n- Should we keep the current trivial implementation for platforms that doesn't support AVPlayer or MediaPlayer -- such as linux and windows desktop? If so, how are we supposed to provide the same codec support on these platforms?\r\n\r\n/cc @crawshaw @nigeltao @adg ",
	"user": {
		"login": "rakyll",
		"id": 108380,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		}
	],
	"comments": 9,
	"closed_at": "2015-10-29T20:51:42Z",
	"created_at": "2015-10-20T22:01:02Z",
	"updated_at": "2015-10-29T20:51:42Z",
	"milestone": {
		"id": 1373555,
		"number": 30,
		"title": "Proposal"
	}
}
