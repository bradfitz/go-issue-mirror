{
	"id": 51276355,
	"number": 335,
	"state": "closed",
	"title": "Support bidirectional array traversal via slices",
	"body": "by **eadfrith**:\n\n\u003cpre\u003eWithout access to the underlying array, or a full slice of same, a slice\ncan only be used to move forward through the underlying array. Even if the\noriginal array or full slice is available, the calculations required to\ntraverse backwards are cumbersome (see workaround in attached file).\n\nBidirectional traversal without reference to the original array or full\nslice can be implemented by adding a new \u0026quot;pos\u0026quot; function on slices, and\nallowing negative indices in the slice constructor.\n\nThe pos function would return the start position of the slice relative to\nthe underlying array (lo would be an alternative name). Negative indices in\nthe slice constructor would be interpreted relative to the current pos, as\nis the case for positive indices.\n\nConsider:\n\narr := [...]int{0,1,2,3,4,5,6,7,8,9};\nslc := arr[5:7]; // [5 6]\n\n// pos(slc) would return 5\n\nslc = slc[-2:1];  //[3 4 5]\nslc = slc[-2:0];  //[3 4]\nslc = slc[-2:-1]; //[3]\nslc = slc[-pos(slc):cap(slc)]; // [0 1 2 3 4 5 6 7 8 9]\n\nNegatice indices interpreted in this way do introduce the risk of\nreferencing negative array indices, but this is no more likely than\nreferencing indices beyond the end of the array using the current scheme.\nOne drawback to the proposal is that negative indices are obviously not\nallowed when slicing an array - this would require type checking.\n\nThese 2 changes would enable forward and backward traversal using simple,\nsymmetric code that only need reference a single slice:\n\n// forward\nfor slc := arr[0:size];;slc = slc[1:size+1] {\n  fmt.Println(\u0026quot;Slice: \u0026quot;, slc);\n  if len(slc) == cap(slc) {\n    break;\n  }\t\t\n}\n\n// backward\nfor slc := arr[len(arr)-size:len(arr)];;slc = slc[-1:size-1] {\n  fmt.Println(\u0026quot;Slice: \u0026quot;, slc);\n  if pos(slc) == 0 {\n    break;\n  }\t\t\n}\n\nOutput:\nSlice:  [0 1]\nSlice:  [1 2]\nSlice:  [2 3]\nSlice:  [3 4]\nSlice:  [4 5]\nSlice:  [5 6]\nSlice:  [6 7]\nSlice:  [7 8]\nSlice:  [8 9]\nSlice:  [8 9]\nSlice:  [7 8]\nSlice:  [6 7]\nSlice:  [5 6]\nSlice:  [4 5]\nSlice:  [3 4]\nSlice:  [2 3]\nSlice:  [1 2]\nSlice:  [0 1]\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/335/0/sliceprop.go\"\u003esliceprop.go\u003c/a\u003e (882 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "LanguageChange"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2014-12-08T10:04:10Z",
	"created_at": "2009-11-25T06:52:06Z",
	"updated_at": "2016-06-24T19:08:30Z"
}
