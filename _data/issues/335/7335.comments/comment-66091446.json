{
	"id": 66091446,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eThis is working as intended.\n\nThere is explicit code to check for large size discrepancies of keys in composite\nliterals, see: \u003ca href=\"http://golang.org/src/pkg/go/printer/nodes.go#L195\"\u003ehttp://golang.org/src/pkg/go/printer/nodes.go#L195\u003c/a\u003e\n\nIn short, if the difference in size between two adjacent keys is more than a factor of\n4, the alignment is broken. This avoids values aligned all the way to the far right in\nvery large composite literals simply because one key somewhere is very long. It's a\nheuristic alright, and the factor (4) can be debated, but it's been working reasonably\nwell so far.\n\nIn this specific case, NameXX has length 6, LongNameXXXXXXXXXXXXX has length 21, and 4*6\n\u003e 21, so they is no break of alignment. Name has length and thus the difference between\nLongNameXXXXXXXXXXXXX and Name is more than a factor of 4, and then the alignment is\nbroken. Same holds for LongNameXXXXXXXXXXXXX and Baz.\u003c/pre\u003e\n\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-02-18T23:18:22Z",
	"updated_at": "2014-12-08T10:40:49Z"
}
