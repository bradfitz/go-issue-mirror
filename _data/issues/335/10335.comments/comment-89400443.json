{
	"id": 89400443,
	"body": "The benchmark is pretty trivial, but reproducing the allocations seems to require unmarshalling into a struct. I wasn't able to reproduce using an empty interface.\r\n\r\nI went to http://www.json.org/example.html got a large sample of a JSON object, pasted it into https://mholt.github.io/json-to-go/ to generate a struct. Then the benchmark is simply:\r\n\r\n```\r\nfunc BenchmarkJSON(b *testing.B) {\r\n    var o Autogenerated\r\n    for n := 0; n \u003c b.N; n++ {\r\n        for i := 0; i \u003c 1000; i++ {\r\n            err := json.Unmarshal([]byte(testJSON), \u0026o)\r\n            if err != nil {\r\n                b.Fatal(err)\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```\r\n$ benchcmp old.txt new.txt \r\nbenchmark         old ns/op     new ns/op     delta\r\nBenchmarkJSON     133828654     137355079     +2.64%\r\n\r\nbenchmark         old allocs     new allocs     delta\r\nBenchmarkJSON     161100         63083          -60.84%\r\n\r\nbenchmark         old bytes     new bytes     delta\r\nBenchmarkJSON     6981457       5524665       -20.87%\r\n```\r\n\r\nI wish I had more time to work on this and properly contribute a fix, but I unfortunately don't. Apologies, this is the best I can do right now.",
	"user": {
		"login": "toffaletti",
		"id": 145012,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-03T19:35:25Z",
	"updated_at": "2015-04-03T19:35:25Z"
}
