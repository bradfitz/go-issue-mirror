{
	"id": 118438957,
	"body": "I don't think its completely fixed, or it is broken again in the same way.  This is still happening for me on go version 1.4.2 x64.  Safari (version 9.0) works, but Firefox (version 39.0) and Chrome do not (version 43 on OSX).  It also appears that javax.websocket gets a 403.\r\n\r\nI get this error in Chrome:\r\n```\r\nWebSocket connection to 'wss://my.domain.com:8000/copyTest' failed: Error during WebSocket handshake: Unexpected response code: 403\r\n```\r\nNothing is produced at the go terminal, unless i hit it with javax.websocket - which produces this:\r\n```\r\nhttp: TLS handshake error from 127.0.0.1:44249: tls: first record does not look like a TLS handshake\r\n```\r\n\r\nIn Safari I get the expected result in the javascript console:\r\n```\r\n[Log] sent data:test (testClient.html, line 31)\r\n[Log] got data:test (testClient.html, line 19)\r\n```\r\n\r\nin Firefox I get a 403 similar to Chrome and the console shows this:\r\n```\r\nGET \r\nhttps://my.domain.com:8000/rideTracking [HTTP/1.1 403 Forbidden 3ms]\r\n\"got error:\" error { target: WebSocket, isTrusted: true, currentTarget: WebSocket, eventPhase: 2, bubbles: false, cancelable: false, defaultPrevented: false, timeStamp: 1435967773819792, originalTarget: WebSocket, explicitOriginalTarget: WebSocket, NONE: 0 } testClient.html:22:5\r\n\"got close:\" close { target: WebSocket, isTrusted: true, wasClean: false, code: 1006, reason: \"\", currentTarget: WebSocket, eventPhase: 2, bubbles: false, cancelable: false, defaultPrevented: false, timeStamp: 1435967773821310 } testClient.html:25:5\r\n```\r\n\r\n\r\n\r\nHere is some go code to serve TLS websockets.  sub in your own cert.key and cert.pem files.\r\n\r\n```golang\r\npackage main\r\n\r\nimport (\r\n\t\"golang.org/x/net/websocket\"\r\n\t\"io\"\r\n\t\"log\"\r\n\t\"net/http\"\r\n)\r\n\r\nfunc copyTest(ws *websocket.Conn) {\r\n\tio.Copy(ws, ws)\r\n}\r\n\r\nfunc main() {\r\n\r\n\t// setup http handler\r\n\thttp.Handle(\"/copyTest\", websocket.Handler(copyTest))\r\n\r\n\t// start secure websocket server\r\n\tlog.Println(\"Listening for secure websocket connections on localhost port 8000...\")\r\n\tif err := http.ListenAndServeTLS(\":8000\", \"cert.pem\", \"cert.key\", nil); err != nil {\r\n\t\tpanic(\"ListenAndServeTLS Error: \" + err.Error())\r\n\t}\r\n}\r\n```\r\n\r\nHere is a javascript client.  Sub in the proper domain name for your cert instead of localhost and connect using it.  Results will be written to the javascript console.\r\n```javascript\r\n\u003c!DOCTYPE html\u003e\r\n\u003chtml\u003e\r\n\t\u003chead\u003e\r\n\t\t\u003cmeta charset=\"UTF-8\" /\u003e\r\n\t\t\u003ctitle\u003eWebsocket connector\u003c/title\u003e\r\n\t\t\u003cscript src=\"http://code.jquery.com/jquery-compat-git.js\"\u003e\r\n\t\t\u003c/script\u003e\r\n\t\u003c/head\u003e\r\n\t\u003cbody\u003e\r\n\t\t\t\u003cinput id=\"name\" type=\"text\" /\u003e\r\n\t\t\t\u003cbutton id=\"sendBtn\"\u003esend\u003c/a\u003e\r\n\r\n\t\t\u003cscript\u003e\r\n\t\t\tvar ws = new WebSocket(\"wss://localhost:8000/copyTest\");\r\n\r\n\t\t\tws.onmessage = function(e) {\r\n\t\t\t\tconsole.log(\"got data:\" + e.data);\r\n\t\t\t};\r\n\t\t\tws.onerror = function(e) {\r\n\t\t\t\tconsole.log(\"got error:\", e);\r\n\t\t\t};\r\n\t\t\tws.onclose = function(e) {\r\n\t\t\t\tconsole.log(\"got close:\", e);\r\n\t\t\t};\r\n\r\n\t\t\t$('#sendBtn').click(function(){\r\n\t\t\t\tvar data = $('#name').val();\r\n\t\t\t\tws.send(data);\r\n\t\t\t\tconsole.log(\"sent data:\" + data);\r\n\t\t\t});\r\n\t\t\u003c/script\u003e\r\n\t\u003c/body\u003e\r\n\u003c/html\u003e\r\n```",
	"user": {
		"login": "integrii",
		"id": 98695,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-04T00:02:48Z",
	"updated_at": "2015-07-04T00:03:10Z"
}
