{
	"id": 66076795,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eApparently the test is just flaky with GOMAXPROCS\u003e1. I can reproduce the deadlock with\nrevisions back to January, even without the race detector. I am on linux/amd64.\n\ngo test -test.run none -test.bench Fake -test.benchtime .6s -test.cpu=2,2,2,2,2 \nPASS\nBenchmarkServerFakeConnNoKeepAlive-2\tfatal error: all goroutines are asleep - deadlock!\n\ngoroutine 1 [chan receive]:\ntesting.(*B).run(0xc2000703c0, 0x3, 0x7ffd3f853be0, 0x1)\n\t/opt/remy/go.clean2/src/pkg/testing/benchmark.go:168 +0x49\ntesting.RunBenchmarks(0x400c00, 0x70a998, 0x1, 0x1)\n\t/opt/remy/go.clean2/src/pkg/testing/benchmark.go:300 +0x4f9\ntesting.Main(0x400c00, 0x70d9d0, 0x3, 0x3, 0x70a998, ...)\n\t/opt/remy/go.clean2/src/pkg/testing/testing.go:330 +0x1af\nmain.main()\n\ttesthttp/_test/_testmain.go:49 +0x9a\n\ngoroutine 3 [chan receive]:\ntesthttp.BenchmarkServerFakeConnNoKeepAlive(0xc2000703c0, 0x426a24)\n\t/home/remy/travail/go/src/testhttp/serve_test.go:172 +0x2dd\ntesting.(*B).runN(0xc2000703c0, 0x4e20, 0x4e20, 0x2710)\n\t/opt/remy/go.clean2/src/pkg/testing/benchmark.go:119 +0x83\ntesting.(*B).launch(0xc2000703c0, 0x0)\n\t/opt/remy/go.clean2/src/pkg/testing/benchmark.go:204 +0x134\ncreated by testing.(*B).run\n\t/opt/remy/go.clean2/src/pkg/testing/benchmark.go:167 +0x2c\nexit status 2\nFAIL\ttesthttp\t0.844s\n\nThe apparent lockup is because the latest network poller prevents the deadlock detection\nfrom working.\u003c/pre\u003e",
	"user": {
		"login": "remyoudompheng",
		"id": 175246,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-03-25T00:57:26Z",
	"updated_at": "2014-12-08T10:27:24Z"
}
