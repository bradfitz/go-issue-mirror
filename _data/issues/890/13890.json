{
	"id": 125767485,
	"number": 13890,
	"state": "open",
	"title": "spec: no rule about loops in constant definition",
	"body": "The compiler issues error `constant definition loop` for the following program:\r\n\r\n```go\r\npackage main\r\nimport \"fmt\"\r\nconst C = len(u)\r\nfunc f() ([1]int, [C]float64) {\r\n\treturn [...]int{1}, [...]float64{1.1}\r\n}\r\nvar u, v = f()\r\nfunc main() {\r\n\tfmt.Println(C, v)\r\n}\r\n```\r\nIn fact the value if `C` (resp. the type of `u`) does not depend on the type of the second return of `f`.\r\n\r\nThe same program is compiled successfully by gccgo.\r\n\r\nPS. Another test case\r\n```go\r\npackage main\r\nimport \"fmt\"\r\nconst C = len(u)\r\ntype S struct {\r\n\tX [1]int\r\n\tY [C]int\r\n}\r\nvar s S\r\nvar u, v = s.X, s.Y\r\nfunc main() {\r\n\tfmt.Println(C, v)\r\n}\r\n```",
	"user": {
		"login": "momchil-velikov",
		"id": 5541560,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 13,
	"created_at": "2016-01-09T16:17:36Z",
	"updated_at": "2016-04-19T20:43:56Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
