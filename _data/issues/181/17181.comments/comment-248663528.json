{
	"id": 248663528,
	"body": "But that happens all the time in the implementation.  The spec says that every slice index operation has a bounds check.  But when the compiler can prove that the bounds check is guaranteed to succeed, it can be removed from the generated code.  When you write `f()`, the spec says it calls function `f`.  But the compiler can inline `f` and there's no actual call in the implementation.\r\n\r\nThe interface situation is similar.  interfaces are value types just like `int`, etc.  They are passed by value.  Each assignment is a copy.  The implementation implements interface assignment so that the pass-by-value semantics are preserved.  Whether it does that using an actual copy or some other mechanism that is indistinguishable from a copy is up to the implementation.",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-21T16:17:37Z",
	"updated_at": "2016-09-21T16:17:37Z"
}
