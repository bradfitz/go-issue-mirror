{
	"id": 66058285,
	"body": "\u003ca id=\"c11\"\u003e\u003c/a\u003eComment 11 by **jp@webmaster.ms**:\n\n\u003cpre\u003e\u003e Do you have a particular problem at hand?\nI am making binding to libtiff where some functions returns uint64 (API:\n\u003ca href=\"http://codesearch.google.com/#search/\u0026q=tiffio.h)\"\u003ehttp://codesearch.google.com/#search/\u0026q=tiffio.h)\u003c/a\u003e.\nIt is not an exotic library.\nEven kernel32.dll have functions which returns 64-bit integer on windows/386:\n\u003ca href=\"http://msdn.microsoft.com/en-us/library/ms724411(v=vs.85).aspx\"\u003ehttp://msdn.microsoft.com/en-us/library/ms724411(v=vs.85).aspx\u003c/a\u003e\n\n\u003e Or you are just trying to make syscall.Syscall \"spec compliant\". \n\nWhat I am trying is to cover common practical cases.\nAnyway it will be far from \"spec compliant\". \nNo exotic calling conventions, and let the user manually contruct int64 from two int32\non syscall return, and split int64 into two int32 to pass in as a stdcall parameter.\nBut user must have the ability to fetch the high word.\n\nWhy do I propose to change Go runtime instead of changing the DLLs ?\nFirst reason - it is not always possible.\nWell, I can recompile libtiff, but not proprietary library (let's say mrsid) and not\nkernel32.dll.\nSecond reason - linux/386 and darwin/386 return EDX in r2.\nI propose windows/386 to behave the same way as other ports already do.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-08-25T06:58:19Z",
	"updated_at": "2014-12-08T10:11:43Z"
}
