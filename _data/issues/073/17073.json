{
	"id": 176366042,
	"number": 17073,
	"state": "closed",
	"title": "x/mobile: passing `error` into a callback crashes the library init",
	"body": "When a method returns an error type, gomobile will internally convert that into a Java exception Android side. Of course, converting errors into exceptions would mean that an `error` cannot be passed to a callback method (implemented in Java) since it's not actually a real type, rather a special case.\r\n\r\nHowever doing exactly this will cause gomobile to happily build the archive without reporting an error. This will result in the library crashing the android application when it's first accessed. Since errors are handled in a special way I can fully accept that they cannot be passed to functions as an argument, however we should probably abort compilation in that case and bail out with an error.\r\n\r\ne.g. the below interface will build and crash upon library load\r\n\r\n```go\r\ntype I interface {\r\n\tOnError(err error)\r\n}\r\n```\r\n\r\nThe error is something like this:\r\n\r\n```\r\nJNI DETECTED ERROR IN APPLICATION: JNI GetMethodID called with pending exception java.lang.NoSuchMethodError: no non-static method \"Lorg/ethereum/geth/FilterLogsHandler;.onError(Lgo/error;)V\"\r\n```",
	"user": {
		"login": "karalabe",
		"id": 129561,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-09-16T13:52:26Z",
	"created_at": "2016-09-12T12:43:47Z",
	"updated_at": "2016-09-16T13:52:26Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
