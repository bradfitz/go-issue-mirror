{
	"id": 156588357,
	"number": 15823,
	"state": "closed",
	"title": "cmd/link: R_PPC64_REL24 relocation truncation to fit errors when building Kubernetes on ppc64le",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo 1.6.1\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nUbuntu 16.04\r\n\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\nTrying to build kubernetes upstream with installed go 1.6.1 on Ubuntu 16.04.\r\n\r\ngit clone https://github.com/kubernetes/kubernetes.git\r\ncd kubernetes\r\n\r\nmodify the hack/lib/golang.sh file to remove the 2 comments that are preventing ppc64le from being used.\r\n\r\nmake\r\n\r\n4. What did you expect to see?\r\nA clean build\r\n\r\n5. What did you see instead?\r\nA failed build with linker errors due to the extremely large size of the intermediate go.o file that is being generated when building the hyperkube binary.  The text section of go.o is too large for the GNU linker on ppc64le to handle, specifically with respect to branch offsets within the code.  \r\n\r\nFrom the output with -v option set for ldflags:\r\nhost link: \"powerpc64le-linux-gnu-gcc\" \"-m64\" \"-gdwarf-2\" \"-o\" \"/tmp/go-build669045650/k8s.io/kubernetes/cmd/hyperkube/_obj/exe/a.out\" \"-rdynamic\" \"/tmp/go-link-267127109/go.o\" \"/tmp/go-link-267127109/000000.o\" \"/tmp/go-link-267127109/000001.o\" \"/tmp/go-link-267127109/000002.o\" \"/tmp/go-link-267127109/000003.o\" \"/tmp/go-link-267127109/000004.o\" \"/tmp/go-link-267127109/000005.o\" \"-g\" \"-O2\" \"-g\" \"-O2\" \"-g\" \"-O2\" \"-g\" \"-O2\" \"-g\" \"-O2\" \"-lpthread\" \"-g\" \"-O2\"                                                                   \r\n/usr/lib/go-1.6/pkg/tool/linux_ppc64le/link: running powerpc64le-linux-gnu-gcc failed: exit status 1     \r\n/tmp/go-link-267127109/go.o: In function `k8s.io/kubernetes/vendor/github.com/fsouza/go-dockerclient.(*eventMonitoringState).monitorEvents':                                                                      \r\n/home/boger/kubtest/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/github.com/fsouza/go-dockerclient/event.go:214:(.text+0x200798c): relocation truncated to fit: R_PPC64_REL24 (stub) against `runtime.ifaceeq'                                                                                                 \r\n/tmp/go-link-267127109/go.o: In function `k8s.io/kubernetes/vendor/github.com/fsouza/go-dockerclient.headersWithAuth':                                                                                            \r\n/home/boger/kubtest/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/github.com/fsouza/go-dockerclient/image.go:550:(.text+0x200dc10): relocation truncated to fit: R_PPC64_REL24 (stub) against `runtime.makemap'                                                                                                 \r\n/tmp/go-link-267127109/go.o: In function `k8s.io/kubernetes/vendor/github.com/fsouza/go-dockerclient.tlsDialWithDialer':                                                                                          \r\n/home/boger/kubtest/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/github.com/fsouza/go-dockerclient/tls.go:50:(.text+0x20115dc): relocation truncated to fit: R_PPC64_REL24 (stub) against `runtime.makechan'                                                                                                   \r\n/home/boger/kubtest/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/github.com/fsouza/go-dockerclient/tls.go:85:(.text+0x20119ec): relocation truncated to fit: R_PPC64_REL24 (stub) against `runtime.chanrecv1'                                                                                                  \r\n/tmp/go-link-267127109/go.o: In function `k8s.io/kubernetes/vendor/github.com/fsouza/go-dockerclient.(*Client).ListVolumes':                                                                                      \r\n/home/boger/kubtest/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/github.com/fsouza/go-dockerclient/volume.go:46:(.text+0x2011c78): relocation truncated to fit: R_PPC64_REL24 (stub) against `runtime.makemap'                                                                                              \r\n..... more\r\n\r\nInterestingly, if I try to add the -tmpdir option to -ldflags so I can look at the intermediate .o files, I get this:\r\nhost link: \"powerpc64le-linux-gnu-gcc\" \"-m64\" \"-gdwarf-2\" \"-o\" \"/tmp/go-build496546066/k8s.io/kubernetes/cmd/hyperkube/_obj/exe/a.out\" \"-rdynamic\" \"/home/boger/gotmp/go.o\" \"/home/boger/gotmp/000000.o\" \"/home/boger/gotmp/000001.o\" \"/home/boger/gotmp/000002.o\" \"/home/boger/gotmp/000003.o\" \"/home/boger/gotmp/000004.o\" \"/home/boger/gotmp/000005.o\" \"-g\" \"-O2\" \"-g\" \"-O2\" \"-g\" \"-O2\" \"-g\" \"-O2\" \"-g\" \"-O2\" \"-lpthread\" \"-g\" \"-O2\"                                                                                                      \r\n/home/boger/golang/go1.6/go/pkg/tool/linux_ppc64le/link: running powerpc64le-linux-gnu-gcc failed: exit status 1                                                                                                  \r\n/usr/bin/ld: /home/boger/gotmp/go.o: invalid string offset 1869033317 \u003e= 7130106 for section `\"ï¿½ï¿½ï¿½'      \r\n/home/boger/gotmp/go.o: error adding symbols: No error                                                   \r\ncollect2: error: ld returned 1 exit status                                                               \r\n \r\nI was hoping that the -buildshared option would help this problem but I ran into other problems when I did that and opened another issue when using that option.\r\n\r\nThis is a serious problem for us because it prevents upstream Kubernetes from building on ppc64le.  \r\n\r\nOur Power linker expert says that the go.o file that is generated has a single text section that is too large.  Usually, when the branch offset could be too long, stubs are inserted to handle it but in this case the text section is too long for the stubs to work.\r\n\r\nFrom the linker output when it fails:\r\n .text          0x0000000010001950  **0x107b7c0** /tmp/go-link-220343705/go.o\r\n                0x000000001006a938                _cgo_reginit\r\n                0x000000001006d4c0                _cgo_topofstack\r\n                0x000000001006d898                main\r\n                0x0000000010a6b490                _cgo_panic\r\n                0x0000000010a6b4c8                crosscall2\r\n\r\nFrom the last commit where it linked successfully:\r\n.text          0x0000000010001740   **0xe68d58** /tmp/go-link-262454621/go.o\r\n                0x000000001006a8a8                _cgo_reginit\r\n                0x000000001006d430                _cgo_topofstack\r\n                0x000000001006d808                main\r\n                0x00000000102d2c40                _cgo_panic\r\n                0x00000000102d2c78                crosscall2\r\n\r\nSo for now we are the first platform to hit this problem, but as applications keep adding more and more packages eventually limits could be hit on other platforms too.  It is not very efficient for the linker to have to handle such large sections either.\r\n\r\nFYI...  I did try go 1.6.2 and go built from master with similar results.  Right now the size of the text section in the go.o file is living on the edge so depending on what is done by a commit, the link will sometimes work.\r\n\r\nI suspect resolving this is not easy, so any packaging suggestions or other ideas on how to reduce the text size would help too.  The last commit to successfully build was 997d55d.",
	"user": {
		"login": "laboger",
		"id": 9433228,
		"type": "User",
		"site_admin": false
	},
	"comments": 35,
	"closed_at": "2016-09-21T20:24:15Z",
	"created_at": "2016-05-24T19:22:00Z",
	"updated_at": "2016-09-21T20:24:15Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
