{
	"id": 108110357,
	"number": 12739,
	"state": "closed",
	"title": "reflect: Type.PkgPath() doesn't return proper import path for vendored import",
	"body": "Hi, \r\nWe were using reflect package to get the import path of some of our dependencies. We are using \r\nGO15VENDOREXPERIMENT.\r\n\r\nWhen we call PkgPath() on a Type interface  acquired from an instance of a struct from the codec package (`github.com/ugorji/go/codec`) we get import path :\r\n`bitbucket.org/{our_project_dir}/vendor/github.com/ugorji/go/codec`\r\n\r\nThis is not in line with the PkgPath() call documentation, and we are using those import paths to generate  a import clause for our generated go code. \r\nThe result looks like this : \r\n````\r\npackage example\r\n\r\nimport(\r\n    bitbucket.org/{our_project_dir}/vendor/github.com/ugorji/go/codec\r\n    {...}\r\n)\r\n{...}\r\n```\r\n\r\nThis file clearly doesn't compile. Could you please fix the behaviour of the PkgPath() call when the project is using GO15VENDOREXPERIMENT?",
	"user": {
		"login": "szank",
		"id": 773802,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2015-10-14T17:23:47Z",
	"created_at": "2015-09-24T11:13:48Z",
	"updated_at": "2016-02-23T05:41:42Z",
	"milestone": {
		"id": 1182837,
		"number": 25,
		"title": "Go1.6Early"
	}
}
