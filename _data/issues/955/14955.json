{
	"id": 143409252,
	"number": 14955,
	"state": "closed",
	"title": "crypto/x509: CheckSignatureFrom does not verify Issuer matches parent's Subject",
	"body": "1. What version of Go are you using (`go version`)?\r\ngo version go1.6 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"/home/jsha/gopkg/bin\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/jsha/gopkg\"\r\nGORACE=\"\"\r\nGOROOT=\"/home/jsha/go1.6\"\r\nGOTOOLDIR=\"/home/jsha/go1.6/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n3. What did you do?\r\nhttps://play.golang.org/p/4Q5wwbag_y\r\n\r\n4. What did you expect to see?\r\nRuns successfully, no errors\r\n\r\nPer https://tools.ietf.org/html/rfc5280#page-73, \r\n```\r\nthe path validation process verifies, among other\r\n   things, that a prospective certification path (a sequence of n\r\n   certificates) satisfies the following conditions:\r\n(a)  for all x in {1, ..., n-1}, the subject of certificate x is\r\n           the issuer of certificate x+1;\r\n```\r\n\r\nHowever, in the test code linked above, `ee.CheckSignatureFrom(issuer2)` returns a nil error, even though the subject of `issuer2` is not equal to the issuer of `ee`.\r\n\r\n5. What did you see instead?\r\n`Successfully verified signature on EE cert from issuer2, expected failure.`\r\n",
	"user": {
		"login": "jsha",
		"id": 220205,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsInvestigation"
		}
	],
	"assignee": {
		"login": "agl",
		"id": 21203,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2016-10-09T20:05:58Z",
	"created_at": "2016-03-25T02:26:39Z",
	"updated_at": "2016-10-09T20:05:58Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
