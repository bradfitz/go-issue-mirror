{
	"id": 66057559,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2 by **john.arbash.meinel**:\n\n\u003cpre\u003eThe main limitation for Event Types for Windows seems to be that it wants\nAdministrator/Performance Users access. I wrote a C++ executable, and it only works if I\nRunAsAdministrator. Though I'm on Vista Home Basic, so it isn't easy to add myself to\nthe Performance Users group. Also, the headers from Express Edition don't seem to\n#define some of the constants described in the online docs.\n\n\nDigging more, I came across stuff like SetTimer and CreateWaitableTimer.\nSetTimer doesn't work very well, because it requires creating a \"window\", and then\npolling for messages on that window. (Which is, I believe, how \"events\" occur on\nWindows. It isn't something async, but a master thread polling for new messages.)\n\nCreateWaitableTimer could work, and SetWaitableTimer allows you to specify a callback.\nHowever, you can only callback into a thread that is waiting/sleeping. In which case,\nspawning a thread and just sleeping seems like a better method for this use case.\n\nSo in the end, the best I could find was just spawning a thread and calling Sleep() in\nit. Sleep takes a millisecond parameter, which has 'clock-tick' granularity. On my\nsystem, that appears to be 1ms, on XP I think it was 15ms.\nYou could use WaitableTimer which has 100ns granularity. I don't know how well it\nsleeps, though.\n\n\nSo I would say, if you can find the right headers, then using OpenTrace\n\u003ca href=\"http://msdn.microsoft.com/en-us/library/aa364089%28VS.85%29.aspx\"\u003ehttp://msdn.microsoft.com/en-us/library/aa364089%28VS.85%29.aspx\u003c/a\u003e\n\nTo get at the built-in performance monitoring would be nice, but requires the user also\nhas elevated privileges. Falling back to just CreateThread + Sleep seems a more\nimmediately useful option.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-07-07T12:02:27Z",
	"updated_at": "2014-12-08T10:11:04Z"
}
