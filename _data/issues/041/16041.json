{
	"id": 159811793,
	"number": 16041,
	"state": "closed",
	"title": "net/http/httputil: request may be killed by mistake by former cancel request in ReverseProxy.ServeHTTP",
	"body": "Hi:\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\u003e go version go1.6.2 darwin/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\u003e GOARCH=\"amd64\"\r\n\u003e GOOS=\"darwin\"\r\n\r\n3. What did you do?\r\n\u003e 1. serving proxy requests by httputil.ReverseProxy\r\n\u003e 2. about 10% of request are canceled by clients\r\n\r\n4. What did you expect to see?\r\n\u003e no requests should occur any unexpected error.\r\n\r\n5. What did you see instead?\r\n\u003e some normal(non-canceled) requests are affected by their former requests which are canceled by clients.\r\n\r\nFinally I find this:\r\n\r\nThere is a goroutine here(in ServeHTTP): [goroutine](https://github.com/golang/go/blob/master/src/net/http/httputil/reverseproxy.go#L167)\r\n\r\nthis goroutine is used for receiving `clientGone` or `reqDone` signal, however, we assume this scene:\r\n\r\n1. `ServeHTTP` start handling `Request A`(using underlying `net.Conn C`)\r\n2. `Request A` was canceled by its client (sending sig to `clientGone`)\r\n3. [RoundTrip](https://github.com/golang/go/blob/master/src/net/http/httputil/reverseproxy.go#L214) return error(may be `use of closed network connection` in go1.6- or other error in go1.6+)\r\n4. `ServeHTTP` start to return and [defer close(reqDone)](https://github.com/golang/go/blob/master/src/net/http/httputil/reverseproxy.go#L156)  is executed(close is non-block, so `ServeHTTP` may be return before the  `goroutine A` receive close signal, but `goroutine A` is still alive)\r\n5. `net/http` put `net.Conn C`  to IdleConn\r\n6. `Request B` arrived and `net/http` pick the same underlying `net.Conn C`\r\n7. `ServeHTTP` start handling `Request B` (using the same underlying `net.Conn C`)\r\n8. `goroutine A` got signal `clientGone` first, and then do `CancelRequest` which will close `net.Conn C`\r\n9. **`Request B`'s RoundTrip return error cause its underlying conn is closed**\r\n",
	"user": {
		"login": "xuzhaokui",
		"id": 962469,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "WaitingForInfo"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2016-08-15T01:20:43Z",
	"created_at": "2016-06-12T06:47:40Z",
	"updated_at": "2016-08-15T01:20:43Z",
	"milestone": {
		"id": 1748849,
		"number": 42,
		"title": "Go1.8Maybe"
	},
	"reactions": {
		"total_count": 3,
		"+1": 3
	},
	"assignees": [
		{
			"login": "bradfitz",
			"id": 2621,
			"type": "User",
			"site_admin": false
		},
		{
			"login": "adg",
			"id": 8446613,
			"type": "User",
			"site_admin": false
		}
	]
}
