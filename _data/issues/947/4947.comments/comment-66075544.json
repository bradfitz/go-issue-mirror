{
	"id": 66075544,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eCurrently the profile for\n./runtime.test -test.run=none\n-test.bench=\"BenchmarkSyscall$|BenchmarkCreateGoroutines$|BenchmarkChanSync$\"\nno linux/amd64 looks as follows:\n\nEvents: 6K cycles                                                                       \n                                                                                        \n             \n 25.52%  runtime.test  runtime.test       [.] runtime.xchg\n  7.56%  runtime.test  runtime.test       [.] runtime.atomicstore\n  5.50%  runtime.test  runtime.test       [.] runtime.cas\n  4.36%  runtime.test  runtime.test       [.] runtime.exitsyscall\n  3.73%  runtime.test  runtime.test       [.] runtime.lock\n  3.66%  runtime.test  runtime.test       [.] runtime.entersyscall\n  3.62%  runtime.test  runtime.test       [.] runtime_test.funcÂ·009\n  3.61%  runtime.test  runtime.test       [.] runtime.newproc1\n  3.42%  runtime.test  runtime.test       [.] runtime.chansend\n  3.22%  runtime.test  runtime.test       [.] schedule\n  3.11%  runtime.test  runtime.test       [.] runtime.unlock\n  2.89%  runtime.test  runtime.test       [.] runtime.mcall\n  2.76%  runtime.test  runtime.test       [.] runtime.memclr\n  2.13%  runtime.test  runtime.test       [.] runtime.xadd64\n\natomic ops are:\n\n 25.52%  runtime.test  runtime.test       [.] runtime.xchg\n  7.56%  runtime.test  runtime.test       [.] runtime.atomicstore\n  5.50%  runtime.test  runtime.test       [.] runtime.cas\n  2.13%  runtime.test  runtime.test       [.] runtime.xadd64\n\nThat is, 40% is spent in atomic ops. Note that this is with GOMAXPROCS=1, so no\ncontention.\nOf course this is synthetic benchmarks, but I believe that a real program can spend up\nto 10% in atomic ops. Inlining can save a half of that.\nMoreover, atomic ops will be more heavily used in chans and scheduler over time.\nMoreover, we have some places in runtime where we especially avoid atomic ops due to\nexactly call cost. This jeopardizes correctness. Not a good situation.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-24T15:27:36Z",
	"updated_at": "2014-12-08T10:26:19Z"
}
