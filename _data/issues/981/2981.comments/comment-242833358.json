{
	"id": 242833358,
	"body": "please ignore my previous comment. I completely misunderstood configuration metadata: I assumed it is specified by benchmark code, not `go test` itself.\r\n\r\nYes, we should definitely add \r\n\r\n```go\r\ntype JSONResult {\r\n  // Configuration is metadata produced by test/benchmark infrastructure.\r\n  // The interpretation of a key/value pair is up to tooling, but the key/value pair is \r\n  // considered to describe all benchmark results that follow, until overwritten by \r\n  // a JSONResult with a non-empty Configuration field.\r\n  //\r\n  // The key begins with a lowercase character (as defined by unicode.IsLower), \r\n  // contains no space characters (as defined by unicode.IsSpace) \r\n  // nor upper case characters (as defined by unicode.IsUpper).\r\n  // Conventionally, multiword keys are written with the words separated by hyphens, \r\n  // as in cpu-speed.\r\n  Configuration map[string]string\r\n\r\n  // other fields defined above\r\n}\r\n```\r\n\r\nthis differs from the [original](https://github.com/golang/proposal/blob/master/design/14313-benchmark-format.md#configuration-lines) in that if a config value needs to be changed, a Configuration with all values needs to be emitted again. Rationale: the original proposal does not specify how to undo a key-value pair (an empty string metadata value and no value may have different meanings)",
	"user": {
		"login": "nodirt",
		"id": 643254,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-26T19:46:49Z",
	"updated_at": "2016-08-26T19:47:27Z"
}
