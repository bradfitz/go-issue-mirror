{
	"id": 66062822,
	"body": "\u003ca id=\"c20\"\u003e\u003c/a\u003eComment 20:\n\n\u003cpre\u003eOne problem I see with the \"parsing `go test` output\" solution is that there are 3rd\nparty `go test` enhancements, which tend to change the output format.\n\nFor example, github.com/stretchr/testify/assert uses \\r to overwrite t.Errorf's\n\"file:line: message\" output with its own format and, more importantly, caller\ninformation.\n\nSuch uses would break the parser, while they'd still work fine if the json generation\nwas integrated into `testing`.\n\nTo me, it would make sense to store testing output directly in *T's methods. stdout and\nstderr could be captured separately. That way, `testing` can provide a core set of\nfunctionality, as it does today, allowing 3rd party enhancements to build on top of\nthose, without having to reinvent certain parts.\u003c/pre\u003e",
	"user": {
		"login": "dominikh",
		"id": 39825,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-13T18:39:56Z",
	"updated_at": "2014-12-08T10:15:32Z"
}
