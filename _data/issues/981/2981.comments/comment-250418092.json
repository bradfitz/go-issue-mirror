{
	"id": 250418092,
	"body": "@nodirt regarding plugins. Yes, subscribing to all test events and generating output from entities of `testing`-package is exactly what I thought about. \r\n\r\nHere are at least two advantages of this approach:\r\n\r\n1. reporters are written in golang, so they work with go-specific types, they have a whole test runtime and can extract any information regarding the tests they need. So we don't have to change `testing` package to provide more text-information via `json` format to third-party tools. We don't have to change go sdk at all, we can change reporters independently.\r\n2. reporters are written in go, so it's easy to share them. No need to implement converting `json` testing output to `xml-junit` format in Java, Python and C# just because different tools are written in different languages.\r\n\r\nAs for 2, I've already faced it. I implemented the converting `gotest` output into IDEA-specific test-event-messages and tried to reuse the converter in TeamCity CI because TeamCity uses exactly the same testing messages format. And I failed. I failed because an existing converter uses a lot of IDEA-specific stuff that cannot be used in TeamCity runtime and it's not easy to deal with it right now.",
	"user": {
		"login": "zolotov",
		"id": 140920,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-29T09:36:22Z",
	"updated_at": "2016-09-29T09:36:22Z"
}
