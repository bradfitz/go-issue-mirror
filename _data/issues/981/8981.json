{
	"id": 51288945,
	"number": 8981,
	"state": "closed",
	"title": "net: ResolveTCPAddr cannot parse literal tcp endpoint on non-tcp network",
	"body": "by **mathias.dietrich**:\n\n\u003cpre\u003ego version go1.3.3 darwin/amd64\n\n\n/* DaytimeServer\n */\npackage main\n\nimport (\n\t\u0026quot;fmt\u0026quot;\n\t\u0026quot;net\u0026quot;\n\t\u0026quot;os\u0026quot;\n\t\u0026quot;time\u0026quot;\n)\n\nfunc main() {\n\n\tservice := \u0026quot;:1200\u0026quot;\n\ttcpAddr, err := net.ResolveTCPAddr(\u0026quot;ip4\u0026quot;, service)\n\tcheckError(err)\n\n\tlistener, err := net.ListenTCP(\u0026quot;tcp\u0026quot;, tcpAddr)\n\tcheckError(err)\n\n\tfor {\n\t\tconn, err := listener.Accept()\n\t\tif err != nil {\n\t\t\tcontinue\n\t\t}\n\n\t\tdaytime := time.Now().String()\n\t\tconn.Write([]byte(daytime)) // don't care about return value\n\t\tconn.Close()                // we're finished with this client\n\t}\n}\n\nfunc checkError(err error) {\n\tif err != nil {\n\t\tfmt.Fprintf(os.Stderr, \u0026quot;Fatal error: %s\u0026quot;, err.Error())\n\t\tos.Exit(1)\n\t}\n}\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:49:23Z",
	"created_at": "2014-10-22T22:45:13Z",
	"updated_at": "2016-06-25T01:43:28Z"
}
