{
	"id": 158794771,
	"number": 15981,
	"state": "open",
	"title": "x/tools/cmd/present: playground stopped working on Google App Engine",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo1.6.2 darwin/amd64 (but I don't believe the issue is in the Go version)\r\n\r\nChrome 50.0.2661.102 and Firefox 43.0.4\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/peggyli/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/Cellar/go/1.6.2/libexec\"\r\nGOTOOLDIR=\"/usr/local/Cellar/go/1.6.2/libexec/pkg/tool/darwin_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"clang\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fno-common\"\r\nCXX=\"clang++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n3. What did you do?\r\n\r\n- Create a *new* App Engine project, and create local project directory with `app.yaml` and `present/` directory. Existing projects seem unaffected.\r\n- Create a `.slide` file that conforms to the `present` format. It can be very simple - just needs to include `.play something.go` on one slide. \"Hello world\" is sufficient.\r\n- Deploy to GAE.\r\n- Open in browser, skip to the slide with the play snippet.\r\n\r\n4. What did you expect to see?\r\n`Run` button that executes the Go code (i.e. prints \"hello world\").\r\n\r\n5. What did you see instead?\r\nNo `Run` button displayed -\u003e unable to run code. Have not disabled -playground (or tried hacking NaCl in GAE or related).\r\n\r\nNotes - I haven't had a lot of time to debug, but:\r\n- [play.golang.org](https://play.golang.org) works fine, `.play` examples on [talks.golang.org](https://talks.golang.org) also work.\r\n- Could not easily reproduce locally with same slide after `go get -u golang.org/x/tools/cmd/present`\r\n- **No obvious server-side issues, so I hijacked the `play.js` handler to always return a clean copy of https://talks.golang.org/play.js, which actually seems to fix the problem.** Probably worth looking at the diff, but I just haven't had a chance to.\r\n\r\n\r\n\r\n",
	"user": {
		"login": "peggyl",
		"id": 2467815,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsInvestigation"
		}
	],
	"comments": 6,
	"created_at": "2016-06-06T23:01:08Z",
	"updated_at": "2016-07-04T07:11:46Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
