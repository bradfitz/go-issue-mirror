{
	"id": 161929623,
	"number": 16167,
	"state": "closed",
	"title": "cmd/go: go get -u: panic: runtime error: slice bounds out of range",
	"body": "1. What version of Go are you using (`go version`)?\r\n\r\n    This also happens with go 1.6: https://github.com/golang/go/issues/14826#issuecomment-228041810\r\n\r\n    Verified against git master, but using a custom binary patched to workaround #16165 with go 1.7 beta, which breaks git submodule clones. The issue above contains the complete diff that I used.\r\n\r\n        go version devel +aa6345d Thu Jun 23 04:31:19 2016 +0000 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\n    ```\r\n\tGOARCH=\"amd64\"\r\n\tGOBIN=\"\"\r\n\tGOEXE=\"\"\r\n\tGOHOSTARCH=\"amd64\"\r\n\tGOHOSTOS=\"linux\"\r\n\tGOOS=\"linux\"\r\n\tGOPATH=\"/root/go\"\r\n\tGORACE=\"\"\r\n\tGOROOT=\"/root/src/go\"\r\n\tGOTOOLDIR=\"/root/src/go/pkg/tool/linux_amd64\"\r\n\tCC=\"gcc\"\r\n\tGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build329298084=/tmp/go-build -gno-record-gcc-switches\"\r\n\tCXX=\"g++\"\r\n\tCGO_ENABLED=\"1\"\r\n    ```\r\n\r\n3. What did you do?\r\n\r\n    Run `go get -u` against a repo that is missing some git submodules:\r\n\r\n    ```\r\n\t$ /root/src/go/bin/go get -v -u github.com/qmsk/e2/cmd/tally\r\n\tgithub.com/qmsk/e2 (download)\r\n\tgithub.com/jessevdk/go-flags (download)\r\n\tgithub.com/golang/glog (download)\r\n\tgithub.com/jessevdk/go-flags\r\n\tgithub.com/qmsk/e2/discovery\r\n\tgithub.com/golang/glog\r\n\tgithub.com/qmsk/e2/client\r\n\tgithub.com/qmsk/e2/vendor/github.com/kidoman/embd\r\n\tgithub.com/qmsk/e2/vendor/github.com/kidoman/embd/host/generic\r\n\tgithub.com/qmsk/e2/vendor/github.com/kidoman/embd/host/rpi\r\n\tgithub.com/qmsk/e2/tally\r\n\tgithub.com/qmsk/e2/cmd/tally\r\n\t$ cat src/github.com/qmsk/e2/.gitmodules \r\n\t[submodule \"vendor/github.com/kidoman/embd\"]\r\n\t\tpath = vendor/github.com/kidoman/embd\r\n\t\turl = git@github.com:SpComb/embd.git\r\n\t\tbranch = digitalpin-exported\r\n\t$ rm -rf src/github.com/qmsk/e2/vendor/github.com/kidoman/embd/\r\n    ```\r\n\r\n    The original scenario for this was running the initial `go get` with missing SSH keys, causing the submodule clone to fail, and then re-running `go get -u` to fetch the missing submodules.\r\n\r\n4. What did you expect to see?\r\n\r\n    I would expect go get to clone the missing submodules.\r\n\r\n5. What did you see instead?\r\n\r\n    Go get panics, after succesfully cloning the missing vendor submodule:\r\n\r\n    ```\r\n\t$ /root/src/go/bin/go get -v -u github.com/qmsk/e2/cmd/tally\r\n\tgithub.com/qmsk/e2 (download)\r\n\tgithub.com/jessevdk/go-flags (download)\r\n\tgithub.com/kidoman/embd (download)\r\n\tgithub.com/golang/glog (download)\r\n\tpanic: runtime error: slice bounds out of range\r\n\r\n\tgoroutine 1 [running]:\r\n\tpanic(0x7dd7a0, 0xc420010120)\r\n\t\t/root/src/go/src/runtime/panic.go:500 +0x1a1\r\n\tmain.vendoredImportPath(0xc4200b7680, 0xc420292de1, 0x24, 0x3, 0x0)\r\n\t\t/root/src/go/src/cmd/go/pkg.go:463 +0x668\r\n\tmain.loadImport(0xc420292de1, 0x24, 0xc420145180, 0x47, 0xc4200b7680, 0xc42044f9f8, 0xc420292ed0, 0x1, 0x1, 0x1, ...)\r\n\t\t/root/src/go/src/cmd/go/pkg.go:333 +0x9ea\r\n\tmain.(*Package).load(0xc4200b7680, 0xc42044f9f8, 0xc4202b8000, 0x0, 0x0, 0x4)\r\n\t\t/root/src/go/src/cmd/go/pkg.go:940 +0x12a5\r\n\tmain.loadImport(0xc4203178c1, 0x20, 0xc420316f90, 0x25, 0xc4204f6900, 0xc42044f9f8, 0xc420317a10, 0x1, 0x1, 0x1, ...)\r\n\t\t/root/src/go/src/cmd/go/pkg.go:374 +0x470\r\n\tmain.(*Package).load(0xc4204f6900, 0xc42044f9f8, 0xc420482380, 0x0, 0x0, 0x4)\r\n\t\t/root/src/go/src/cmd/go/pkg.go:940 +0x12a5\r\n\tmain.loadImport(0xc42036b3e1, 0x18, 0xc420287a10, 0x29, 0xc42011bb00, 0xc42044f9f8, 0xc42028c1e0, 0x1, 0x1, 0x1, ...)\r\n\t\t/root/src/go/src/cmd/go/pkg.go:374 +0x470\r\n\tmain.(*Package).load(0xc42011bb00, 0xc42044f9f8, 0xc4201c6a80, 0x0, 0x0, 0xc)\r\n\t\t/root/src/go/src/cmd/go/pkg.go:940 +0x12a5\r\n\tmain.loadImport(0x7fff6d41d82d, 0x1c, 0xc420010054, 0x8, 0x0, 0xc42044f9f8, 0x0, 0x0, 0x0, 0x0, ...)\r\n\t\t/root/src/go/src/cmd/go/pkg.go:374 +0x470\r\n\tmain.loadPackage(0x7fff6d41d82d, 0x1c, 0xc42044f9f8, 0x0)\r\n\t\t/root/src/go/src/cmd/go/pkg.go:1658 +0x28f\r\n\tmain.packagesAndErrors(0xc4203969a0, 0x1, 0x1, 0xc420396980, 0x1c, 0x8444ad)\r\n\t\t/root/src/go/src/cmd/go/pkg.go:1703 +0x329\r\n\tmain.packagesForBuild(0xc420396980, 0x1, 0x1, 0xc420396980, 0x1, 0x1)\r\n\t\t/root/src/go/src/cmd/go/pkg.go:1719 +0x75\r\n\tmain.runGet(0xa20d40, 0xc420396980, 0x1, 0x1)\r\n\t\t/root/src/go/src/cmd/go/get.go:131 +0x318\r\n\tmain.main()\r\n\t\t/root/src/go/src/cmd/go/main.go:181 +0x624\r\n\r\n\t$ ls -la src/github.com/qmsk/e2/vendor/github.com/kidoman/embd/\r\n\ttotal 120\r\n\tdrwxr-xr-x 1 root root   650 Jun 23 13:50 .\r\n\tdrwxr-xr-x 1 root root     8 Jun 23 13:50 ..\r\n\t-rw-r--r-- 1 root root   153 Jun 23 13:50 AUTHORS\r\n\t-rw-r--r-- 1 root root  1441 Jun 23 13:50 CONTRIBUTING.md\r\n\t-rw-r--r-- 1 root root   288 Jun 23 13:50 CONTRIBUTORS\r\n        ....\r\n    ```",
	"user": {
		"login": "SpComb",
		"id": 3950373,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		}
	],
	"comments": 6,
	"closed_at": "2016-10-24T15:17:04Z",
	"created_at": "2016-06-23T13:57:52Z",
	"updated_at": "2016-10-24T15:17:04Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
