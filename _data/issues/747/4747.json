{
	"id": 51282577,
	"number": 4747,
	"state": "closed",
	"title": "encoding/json Added tag options to ignore fields of struct for encoder/decoder separately",
	"body": "by **snoreven45**:\n\n\u003cpre\u003eA common task while writing an API that uses JSON is that you want to export a lot of\nfields to JSON and send them to the user, but the user should only be allowed to\nupdate/edit some of the fields.\n\nIn the current implementation you can only set a struct's field invisible for both the\nencoder and decoder together using `json:\u0026quot;-\u0026quot;`. That produces a lot of\nunnecessary overhead for checking user input or copying data.\n\nI added a \u0026quot;noencode\u0026quot; and \u0026quot;nodecode\u0026quot; tag option, that allows to\ndisable a field for the encoder and decoder separately.\n\nExample for encoding both values, but only allow decoding (= updates) of\n\u0026quot;house_name\u0026quot;/Name:\n\ntype House struct {\n    Name    string    `json:\u0026quot;house_name\u0026quot;`\n    PubDate time.Time `json:\u0026quot;pub_date,nodecode\u0026quot;`\n}\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/4747/0/json_noendecoding_tag.patch\"\u003ejson_noendecoding_tag.patch\u003c/a\u003e (2568 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:25:12Z",
	"created_at": "2013-02-03T13:04:31Z",
	"updated_at": "2016-06-24T22:32:13Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
