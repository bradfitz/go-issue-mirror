{
	"id": 51276023,
	"number": 75,
	"state": "closed",
	"title": "Go needs exceptions!",
	"body": "by **rblaak**:\n\n\u003cpre\u003eI understand the tradeoffs explained in the language spec. However, in a \nmodern language, the lack of an ability to abort control flow leads to \nvery poor coding styles. \n\nIt results in an error result code programming style that is very fragile, \nsince callers have to be disciplined to pay attention to result codes. It \nis also more work to continuously pass errors up the call chain.\n\nWith exceptions, errors cannot be ignored by accident, and that leads to \nbetter code by default.\n\nYou are taking the trouble to implement garbage collection. The same \nreasons apply to having an exception mechanism: it relieves tedium from \nthe programmer, and makes code safer.\n\nUse .NET or C++ as a guide for exceptions, not Java. Checked exceptions \ntend to force naive programmers to catch and swallow them to shut up the \ncompiler, which leads to the worst of all possible worlds: errors that are \nsilently ignored.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:03:09Z",
	"created_at": "2009-11-12T01:35:44Z",
	"updated_at": "2016-06-24T19:00:21Z"
}
