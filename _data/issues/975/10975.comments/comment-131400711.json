{
	"id": 131400711,
	"body": "I spent some time narrowing down why this bug happens and would like to provide a fix with some guidance (would by my first contribution).\r\n\r\nI believe the issue is in the subr.go:implements function. The bad embedded type 'int' is flagged as broke in dcl.go:interfacefield but is still checked to see if it is implemented in the code below. int obviously isn't a method, which eventually errors in methodfunc/getinarg. \r\n\r\n```\r\nfor im := iface.Type; im != nil; im = im.Down {\r\n  imtype = methodfunc(im.Type, nil)\r\n  tm = ifacelookdot(im.Sym, t, \u0026followptr, 0)\r\n```\r\n\r\nA \"fix\" is to skip over the check if im.Broke == 1, but I am not sure if that is correct. Any advice on the desired way to handle this? ",
	"user": {
		"login": "anthonycanino1",
		"id": 10179790,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-15T16:59:55Z",
	"updated_at": "2015-08-15T16:59:55Z"
}
