{
	"id": 172757052,
	"body": "@minux The point is precisely not to wait to timeout as typically the process finishes much faster. In my case the timeout is really for runaway cases when something bad happens or the system is too busy. I also cannot just start another go routine that does kill/wait as I need to get the process return status to decide if everything is OK.\r\n\r\n@ianlancetaylor Note I do not suggest to change the current implementation. Rather I suggest to document loudly that one should avoid Wait()/Kill() race in portable code. Then add some new API that allows to implement the desired functionality. For example, a version of exec.Cmd.Wait that takes a channel and waits until the child finishes or there is input on the channel is enough to implement all my use cases.  ",
	"user": {
		"login": "ibukanov",
		"id": 2381216,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-19T06:49:50Z",
	"updated_at": "2016-01-19T06:49:50Z"
}
