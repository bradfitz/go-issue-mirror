{
	"id": 176235695,
	"number": 17062,
	"state": "closed",
	"title": "Pointers and pass by value is confusing",
	"body": "Go is great and I love it. However, working with it daily on a relatively big project (20 engineers for 2 years) I see that pointers and byValue are confusing.\r\n\r\nSmall struct are referred to by value, and bigger struct by reference (both in function parameters and in instance variables)\r\nBut\r\n\r\n1. We have no idea if this is the right way to do and if this is optimal or not\r\n2. Small structs grow into bigger structs\r\n3. It is hard to see what is there by reference because we need to modify / not copy it, or if it is by reference because it is a large struct\r\n\r\nSome guidelines would be much appreciated, or some way of thinking the language in a different way\r\n\r\nNote: though the \"byValue\" is strange at the beginning, I really like that it is the default, it proves to be what we want to do most of the time\r\n\r\nNote 2: Im submitting this as an issue but it's more a \"feature request\" / FAQ kind of thing but I don't know where I should ask\r\n\r\n### What version of Go are you using (`go version`)?\r\n1.7.1\r\n",
	"user": {
		"login": "Bleezworld",
		"id": 6170138,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2016-09-11T09:50:35Z",
	"created_at": "2016-09-11T09:49:05Z",
	"updated_at": "2016-09-11T09:50:35Z"
}
