{
	"id": 51287956,
	"number": 8275,
	"state": "closed",
	"title": "fmt: width is measured in bytes not Unicode codepoints when using %c and %q for runes",
	"body": "by **MihaiBorobocea**:\n\n\u003cpre\u003eWhat does 'go version' print?\ngo1.3\n\nWhat steps reproduce the problem?\npackage main\n\nimport \u0026quot;fmt\u0026quot;\n\nfunc main() {\n\tfmt.Printf(\u0026quot;(%5q)\\n\u0026quot;, \u0026quot;§\u0026quot;)\t// (  \u0026quot;§\u0026quot;)\n\tfmt.Printf(\u0026quot;(%5q)\\n\u0026quot;, '§')\t// ( '§')\n\n\tfmt.Printf(\u0026quot;(%3s)\\n\u0026quot;, \u0026quot;§\u0026quot;)\t// (  §)\n\tfmt.Printf(\u0026quot;(%3c)\\n\u0026quot;, '§')\t// ( §)\n}\n\n// Or run this same program at \u003ca href=\"http://play.golang.org/p/UHE8wQK50u\"\u003ehttp://play.golang.org/p/UHE8wQK50u\u003c/a\u003e\n\nWhat happened?\nWhen printing a rune with %q or %c and specifying a width (for padding with spaces) the\nwidth is counted in bytes. The program prints the rune U+00A7 which uses 2 bytes in\nUTF-8. The lines with rune args produce a string shorter than the corresponding lines\nwith string args.\n\nWhat should have happened instead?\nThe width should have been measured in runes, like it happens when printing a string.\nPackage fmt's doc says “Width and precision are measured in units of Unicode code\npoints”.\n\nAm I misunderstanding how this is supposed to work? This seems too basic to have gone\nunnoticed.\nI've tried to find this in the code, and I'll attach an RFC diff in case my progress\nsaves you some time.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:45:56Z",
	"created_at": "2014-06-23T23:24:51Z",
	"updated_at": "2016-06-25T01:37:07Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
