{
	"id": 66090819,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eFurther comments on this issue:\n\nIn this case, the \"omitempty\" directive has actually no effect :\n\n\u003ca href=\"http://play.golang.org/p/HG7io7mH7l\"\u003ehttp://play.golang.org/p/HG7io7mH7l\u003c/a\u003e\n\nIMHO, the extra \",omitempty\" should be taken as a clear directive in this case (1-step\ndeep node list).\n\n\nFor a deeper nested list, the \"expected behavior\" is ambiguous :\n\ntype Ambiguous struct {\n\tBees []string `xml:\"Beez\u0026gt;Bees\u0026gt;Bee,omitempty\"` //I don't have a \"natural\" argument for this one ...\n}\n\nMy choice would be : ommit the base \"Beez\" node in the output.\nOne point for this choice :\n- if we ommit the base node, there still is a way to write a type structure which will\nuse only xml annotations and which will contain \"\u0026lt;Beez\u0026gt;\u0026lt;/Beez\u0026gt;\" in the\nMarshal-ed output :\n\ntype Disambiguated struct {\n    Beez Nested `xml:\"Beez\"`\n}\ntype Nested struct {\n    Bees []string `xml:\"Bees\u0026gt;Bee,omitempty\"`\n}\n\n- if we don't ommit the base node, I don't see how to achieve this without writing a\ncustom Marshaller.\n\n\nRegarding the \"break backward compatibility\" part :\n * it shouldn't break the Unmarshaling of a previously Marshal-ed structure,\n * it could indeed change the output of a program, but as I stated, I think this output is the one expected by the programmer if \",omitempty\" is specified.\n\n\nThis is an adapted repost of this comment :\n\u003ca href=\"https://golang.org/issue/4168?c=10\"\u003ehttps://golang.org/issue/4168?c=10\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "LeGEC",
		"id": 795408,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-02-12T15:21:37Z",
	"updated_at": "2014-12-22T06:32:12Z"
}
