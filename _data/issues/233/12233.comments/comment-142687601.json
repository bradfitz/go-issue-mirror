{
	"id": 142687601,
	"body": "Here is my panic log:\r\n\r\n```\r\nfatal error: unexpected signal during runtime execution\r\n[signal 0xb code=0x1 addr=0x10 pc=0x403750]\r\n\r\nruntime stack:\r\nruntime.throw(0x8188e0, 0x2a)\r\n\t/usr/local/go/src/runtime/panic.go:527 +0x90\r\nruntime.sigpanic()\r\n\t/usr/local/go/src/runtime/sigpanic_unix.go:12 +0x5a\r\n\r\ngoroutine 66 [syscall, locked to thread]:\r\nruntime.cgocall(0x402e60, 0xc88e779aa8, 0x0)\r\n\t/usr/local/go/src/runtime/cgocall.go:120 +0x11b fp=0xc88e779a70 sp=0xc88e779a40\r\ngithub.com/rowland/go-fb._Cfunc_sqlda_alloc(0x32, 0x0)\r\n\t??:0 +0x36 fp=0xc88e779aa8 sp=0xc88e779a70\r\ngithub.com/rowland/go-fb.newCursor(0xc8204963c0, 0xc8204ac000, 0x0, 0x0)\r\n\t/home/brent/src/github.com/rowland/go-fb/cursor.go:50 +0x14e fp=0xc88e779b18 sp=0xc88e779aa8\r\ngithub.com/rowland/go-fb.(*Connection).Execute(0xc8204963c0, 0xc88e440800, 0x6d6, 0x0, 0x0, 0x0, 0x1e, 0x0, 0x0)\r\n\t/home/brent/src/github.com/rowland/go-fb/connection.go:150 +0x39 fp=0xc88e779b68 sp=0xc88e779b18\r\ndev.go/projects/talent-search/talent.(*Search).tryFailedScores(0xc82000a160)\r\n\t/home/brent/src/dev.go/projects/talent-search/talent/search.go:547 +0x4ed fp=0xc88e779d58 sp=0xc88e779b68\r\ndev.go/projects/talent-search/talent.(*Search).JournalMonitor(0xc82000a160, 0xcbf4abf)\r\n\t/home/brent/src/dev.go/projects/talent-search/talent/search.go:318 +0x34a fp=0xc88e779f90 sp=0xc88e779d58\r\nruntime.goexit()\r\n\t/usr/local/go/src/runtime/asm_amd64.s:1696 +0x1 fp=0xc88e779f98 sp=0xc88e779f90\r\ncreated by main.main\r\n\t/home/brent/src/dev.go/projects/talent-search/talent-search.go:180 +0xa48\r\n\r\ngoroutine 1 [select]:\r\nmain.ProcessIncomingMessages(0xc82049a0c0)\r\n\t/home/brent/src/dev.go/projects/talent-search/talent-search.go:219 +0xab6\r\nmain.main()\r\n\t/home/brent/src/dev.go/projects/talent-search/talent-search.go:199 +0x9bc\r\n\r\ngoroutine 17 [syscall, 17 minutes, locked to thread]:\r\nruntime.goexit()\r\n\t/usr/local/go/src/runtime/asm_amd64.s:1696 +0x1\r\n\r\ngoroutine 5 [syscall, 17 minutes]:\r\nos/signal.loop()\r\n\t/usr/local/go/src/os/signal/signal_unix.go:22 +0x18\r\ncreated by os/signal.init.1\r\n\t/usr/local/go/src/os/signal/signal_unix.go:28 +0x37\r\n\r\ngoroutine 67 [IO wait, 8 minutes]:\r\nnet.runtime_pollWait(0x7f9a3f0ce840, 0x72, 0xc820010190)\r\n\t/usr/local/go/src/runtime/netpoll.go:157 +0x60\r\nnet.(*pollDesc).Wait(0xc88e794060, 0x72, 0x0, 0x0)\r\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\r\nnet.(*pollDesc).WaitRead(0xc88e794060, 0x0, 0x0)\r\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\r\nnet.(*netFD).accept(0xc88e794000, 0x0, 0x7f9a3c884080, 0xc88e79a000)\r\n\t/usr/local/go/src/net/fd_unix.go:408 +0x27c\r\nnet.(*TCPListener).AcceptTCP(0xc88e798000, 0xc88e781de0, 0x0, 0x0)\r\n\t/usr/local/go/src/net/tcpsock_posix.go:254 +0x4d\r\nnet/http.tcpKeepAliveListener.Accept(0xc88e798000, 0x0, 0x0, 0x0, 0x0)\r\n\t/usr/local/go/src/net/http/server.go:2135 +0x41\r\nnet/http.(*Server).Serve(0xc88e788000, 0x7f9a0420a0b0, 0xc88e798000, 0x0, 0x0)\r\n\t/usr/local/go/src/net/http/server.go:1887 +0xb3\r\nnet/http.(*Server).ListenAndServe(0xc88e788000, 0x0, 0x0)\r\n\t/usr/local/go/src/net/http/server.go:1877 +0x136\r\nnet/http.ListenAndServe(0x7a9d30, 0x5, 0x0, 0x0, 0x0, 0x0)\r\n\t/usr/local/go/src/net/http/server.go:1967 +0x8f\r\ncreated by main.main\r\n\t/home/brent/src/dev.go/projects/talent-search/talent-search.go:187 +0x74a\r\n\r\ngoroutine 68 [IO wait]:\r\nnet.runtime_pollWait(0x7f9a3f0ce900, 0x72, 0xc820010190)\r\n\t/usr/local/go/src/runtime/netpoll.go:157 +0x60\r\nnet.(*pollDesc).Wait(0xc8204a00d0, 0x72, 0x0, 0x0)\r\n\t/usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\r\nnet.(*pollDesc).WaitRead(0xc8204a00d0, 0x0, 0x0)\r\n\t/usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\r\nnet.(*netFD).readFrom(0xc8204a0070, 0xc88e77aea8, 0x1000, 0x1000, 0x0, 0x0, 0x0, 0x7f9a3f0c9050, 0xc820010190)\r\n\t/usr/local/go/src/net/fd_unix.go:259 +0x2a5\r\nnet.(*UDPConn).ReadFromUDP(0xc8204a4000, 0xc88e77aea8, 0x1000, 0x1000, 0xc88e572960, 0x18, 0x0, 0x0)\r\n\t/usr/local/go/src/net/udpsock_posix.go:61 +0x117\r\ndev.go/utilities/brokerclient.(*BrokerClient).listener(0xc8204a2050, 0xc82049a0c0, 0xc82049a000)\r\n\t/home/brent/src/dev.go/utilities/brokerclient/brokerclient.go:88 +0x135\r\ncreated by dev.go/utilities/brokerclient.(*BrokerClient).StartListener\r\n\t/home/brent/src/dev.go/utilities/brokerclient/brokerclient.go:74 +0x9a\r\n\r\ngoroutine 69 [select, 8 minutes, locked to thread]:\r\nruntime.gopark(0x843db8, 0xc8204f5728, 0x7ad950, 0x6, 0x432118, 0x2)\r\n\t/usr/local/go/src/runtime/proc.go:185 +0x163\r\nruntime.selectgoImpl(0xc8204f5728, 0x0, 0x18)\r\n\t/usr/local/go/src/runtime/select.go:392 +0xa64\r\nruntime.selectgo(0xc8204f5728)\r\n\t/usr/local/go/src/runtime/select.go:212 +0x12\r\nruntime.ensureSigM.func1()\r\n\t/usr/local/go/src/runtime/signal1_unix.go:227 +0x353\r\nruntime.goexit()\r\n\t/usr/local/go/src/runtime/asm_amd64.s:1696 +0x1\r\n```\r\n\r\nSignal 11 is segfault, of course, and the C code is fairly simple:\r\n\r\n```\r\nXSQLDA* sqlda_alloc(long cols)\r\n{\r\n\tXSQLDA *sqlda;\r\n\r\n\tsqlda = (XSQLDA*)malloc(XSQLDA_LENGTH(cols));\r\n\tsqlda-\u003eversion = SQLDA_VERSION1;\r\n\tsqlda-\u003esqln = cols;\r\n\tsqlda-\u003esqld = 0;\r\n\treturn sqlda;\r\n}\r\n```\r\n\r\nThere *is* a malloc and if it fails, that would certainly trigger a segfault. Hard to say what would be better than a panic if malloc is failing. Haven't tested for that since DOS days. Again, this has only been a problem in Go 1.5 and 1.5.1.\r\n",
	"user": {
		"login": "rowland",
		"id": 5824,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-23T18:23:22Z",
	"updated_at": "2015-09-23T18:23:22Z"
}
