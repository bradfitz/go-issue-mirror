{
	"id": 133117138,
	"body": "@aclements @davecheney Caught one with the GC logging on! And with a new backtrace \"reason\". I've included an arbitrary number of GC log messages \"back\" from the crash:\r\n\r\n```\r\ngc 575 @9912.118s 3%: 11+150+2.0+810+21 ms clock, 57+150+0+3437/1615/0.029+109 ms cpu, 4809-\u003e4873-\u003e2483 MB, 4932 MB goal, 8 P\r\ngc 576 @9930.019s 3%: 8.4+65+30+885+22 ms clock, 67+65+0+2530/1754/739+177 ms cpu, 4718-\u003e4782-\u003e2522 MB, 4839 MB goal, 8 P\r\ngc 577 @9947.601s 3%: 11+168+5.2+812+22 ms clock, 57+168+0+3409/1622/0.046+111 ms cpu, 4793-\u003e4858-\u003e2507 MB, 4916 MB goal, 8 P\r\ngc 578 @9965.602s 3%: 8.4+182+1.5+771+21 ms clock, 67+182+0+3283/1538/163+175 ms cpu, 4762-\u003e4824-\u003e2448 MB, 4884 MB goal, 8 P\r\ngc 579 @9983.589s 3%: 8.1+111+5.0+863+21 ms clock, 40+111+0+3446/1725/0.022+108 ms cpu, 4652-\u003e4715-\u003e2513 MB, 4771 MB goal, 8 P\r\ngc 580 @10001.383s 3%: 8.2+185+1.8+783+21 ms clock, 41+185+0+3417/1565/128+108 ms cpu, 4776-\u003e4839-\u003e2462 MB, 4898 MB goal, 8 P\r\ngc 581 @10019.072s 3%: 8.5+100+2.4+857+22 ms clock, 51+100+0+3431/1715/35+133 ms cpu, 4679-\u003e4739-\u003e2521 MB, 4799 MB goal, 8 P\r\ngc 582 @10037.624s 3%: 8.3+160+5.6+808+23 ms clock, 41+160+0+3379/1616/0.019+115 ms cpu, 4797-\u003e4861-\u003e2482 MB, 4920 MB goal, 8 P\r\nscvg66: 14 MB released\r\nscvg66: inuse: 4804, idle: 4598, sys: 9403, released: 4358, consumed: 5044 (MB)\r\ngc 583 @10055.601s 3%: 8.2+111+0.57+837+21 ms clock, 66+111+0+3229/1668/31+174 ms cpu, 4715-\u003e4777-\u003e2435 MB, 4836 MB goal, 8 P\r\ngc 584 @10072.948s 3%: 8.2+75+23+868+22 ms clock, 41+75+0+3131/1736/187+111 ms cpu, 4628-\u003e4691-\u003e2497 MB, 4747 MB goal, 8 P\r\ngc 585 @10091.237s 3%: 8.2+163+2.7+820+22 ms clock, 41+163+0+3509/1637/83+111 ms cpu, 4747-\u003e4809-\u003e2450 MB, 4869 MB goal, 8 P\r\ngc 586 @10109.203s 3%: 11+119+4.5+829+22 ms clock, 67+119+0+2848/1658/524+132 ms cpu, 4656-\u003e4711-\u003e2505 MB, 4776 MB goal, 8 P\r\ngc 587 @10127.338s 3%: 8.3+120+1.0+838+22 ms clock, 41+120+0+3317/1675/0+110 ms cpu, 4777-\u003e4841-\u003e2470 MB, 4900 MB goal, 8 P\r\ngc 588 @10145.555s 3%: 8.4+163+3.5+784+21 ms clock, 42+163+0+3220/1563/47+109 ms cpu, 4693-\u003e4755-\u003e2429 MB, 4813 MB goal, 8 P\r\ngc 589 @10163.364s 3%: 8.2+141+1.1+822+22 ms clock, 41+141+0+3332/1643/0.043+110 ms cpu, 4616-\u003e4678-\u003e2490 MB, 4734 MB goal, 8 P\r\ngc 590 @10181.239s 3%: 11+138+1.6+805+21 ms clock, 80+138+0+3363/1609/39+153 ms cpu, 4733-\u003e4795-\u003e2448 MB, 4855 MB goal, 8 P\r\ngc 591 @10198.829s 3%: 8.1+102+21+844+23 ms clock, 40+102+0+3442/1686/0.054+117 ms cpu, 4652-\u003e4715-\u003e2510 MB, 4771 MB goal, 8 P\r\nscvg67: 37 MB released\r\nscvg67: inuse: 4889, idle: 4513, sys: 9403, released: 4390, consumed: 5012 (MB)\r\ngc 592 @10216.888s 3%: 8.2+133+7.9+815+21 ms clock, 57+133+0+3350/1631/50+152 ms cpu, 4773-\u003e4835-\u003e2468 MB, 4895 MB goal, 8 P\r\nruntime:objectstart Span weird: p=0xc900000000 k=0x6480000 s.start=0xc8ffffa000 s.limit=0xc900003c40 s.state=2\r\nfatal error: objectstart: bad pointer in unexpected span\r\n\r\ngoroutine 108 [running]:\r\nruntime.throw(0x8ea820, 0x2b)\r\n        /usr/local/go/src/runtime/panic.go:527 +0x90 fp=0xc82058ee18 sp=0xc82058ee00\r\nruntime.heapBitsForObject(0xc900000000, 0x0, 0x0, 0xc800000000, 0x7f8d16809d20)\r\n        /usr/local/go/src/runtime/mbitmap.go:217 +0x287 fp=0xc82058ee50 sp=0xc82058ee18\r\nruntime.scanobject(0xc95d6e8c30, 0xc82001f220)\r\n        /usr/local/go/src/runtime/mgcmark.go:863 +0x239 fp=0xc82058ef20 sp=0xc82058ee50\r\nruntime.gcDrain(0xc82001f220, 0x7d0)\r\n        /usr/local/go/src/runtime/mgcmark.go:674 +0xf4 fp=0xc82058ef50 sp=0xc82058ef20\r\nruntime.gcBgMarkWorker(0xc82001e000)\r\n        /usr/local/go/src/runtime/mgc.go:1319 +0x281 fp=0xc82058efb8 sp=0xc82058ef50\r\nruntime.goexit()\r\n        /usr/local/go/src/runtime/asm_amd64.s:1696 +0x1 fp=0xc82058efc0 sp=0xc82058efb8\r\ncreated by runtime.gcBgMarkStartWorkers\r\n        /usr/local/go/src/runtime/mgc.go:1238 +0x93\r\n\r\ngoroutine 1 [runnable]:\r\nnet.runtime_pollWait(0x7f8d30dc3e40, 0x72, 0xc82000e100)\r\n        /usr/local/go/src/runtime/netpoll.go:157 +0x60\r\nnet.(*pollDesc).Wait(0xc820131560, 0x72, 0x0, 0x0)\r\n        /usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\r\nnet.(*pollDesc).WaitRead(0xc820131560, 0x0, 0x0)\r\n        /usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\r\nnet.(*netFD).accept(0xc820131500, 0x0, 0x7f8d30502038, 0xc92cf131a0)\r\n        /usr/local/go/src/net/fd_unix.go:408 +0x27c\r\nnet.(*TCPListener).AcceptTCP(0xc82060a010, 0x452790, 0x0, 0x0)\r\n        /usr/local/go/src/net/tcpsock_posix.go:254 +0x4d\r\nnet/http.tcpKeepAliveListener.Accept(0xc82060a010, 0x0, 0x0, 0x0, 0x0)\r\n        /usr/local/go/src/net/http/server.go:2135 +0x41\r\nnet/http.(*Server).Serve(0xc8201184e0, 0x7f8d30502000, 0xc82060a010, 0x0, 0x0)\r\n        /usr/local/go/src/net/http/server.go:1887 +0xb3\r\nnet/http.(*Server).ListenAndServe(0xc8201184e0, 0x0, 0x0)\r\n        /usr/local/go/src/net/http/server.go:1877 +0x136\r\nmain.main()\r\n        /srv/go/src/github.com/crashlytics/gusset/gusset.go:260 +0xb50\r\n\r\ngoroutine 17 [syscall, 170 minutes, locked to thread]:\r\nruntime.goexit()\r\n        /usr/local/go/src/runtime/asm_amd64.s:1696 +0x1\r\n```",
	"user": {
		"login": "bmhatfield",
		"id": 1119967,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-20T18:52:06Z",
	"updated_at": "2015-08-20T18:52:06Z"
}
