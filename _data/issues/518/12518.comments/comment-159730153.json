{
	"id": 159730153,
	"body": "@kortschak, regarding your initial comment:\r\n\r\n\u003e The capacity to represent exact float values in a clear human-readable way is valuable in numeric code, for example here, where otherwise comments are required to explain the magic hex.\r\n\r\nAnd the code says:\r\n\r\n\tvar (\r\n\t\t// dlamchE is the machine epsilon. For IEEE this is 2^-53.\r\n\t\tdlamchE = math.Float64frombits(0x3ca0000000000000)\r\n\t\r\n\t\t// dlamchP is 2 * eps\r\n\t\tdlamchP = math.Float64frombits(0x3cb0000000000000)\r\n\t\r\n\t\t// dlamchS is the \"safe min\", that is, the lowest number such that 1/sfmin does\r\n\t\t// not overflow. The Netlib code for calculating this number is not correct --\r\n\t\t// it overflows. Found by trial and error, it is equal to (1/math.MaxFloat64) * (1+ 6*eps)\r\n\t\tdlamchS = math.Float64frombits(0x4000000000001)\r\n\t\r\n\t\t...\r\n\t)\r\n\r\nI want to make the point, unrelated to what we do in strconv, that this is unnecessary in Go. This kind of thing - specifying floating point constants in hexadecimal - is rampant in C because C compilers have historically been quite bad at reading floating point inputs. Using hex was the only way to guarantee the compiler arrived at the number you intended. But modern practice has improved, and Go gets this right. There are any number of ways you could write the above code using plain floating point constants, but the most direct is:\r\n\r\n\tvar (\r\n\t\t// dlamchE is the machine epsilon. For IEEE this is 2^-53.\r\n\t\tdlamchE = 1.1102230246251565e-16\r\n\t\r\n\t\t// dlamchP is 2 * eps\r\n\t\tdlamchP = 2.220446049250313e-16\r\n\t\r\n\t\t// dlamchS is the \"safe min\", that is, the lowest number such that 1/sfmin does\r\n\t\t// not overflow. The Netlib code for calculating this number is not correct --\r\n\t\t// it overflows. Found by trial and error, it is equal to (1/math.MaxFloat64) * (1+ 6*eps)\r\n\t\tdlamchS = 5.56268464626801e-309\r\n\t\r\n\t\t...\r\n\t)\r\n\r\nThis is _guaranteed_ to have the same effect as the math.Float64frombits calls.\r\n",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-25T20:58:39Z",
	"updated_at": "2015-11-25T20:58:39Z"
}
