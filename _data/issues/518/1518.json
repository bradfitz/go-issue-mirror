{
	"id": 51277917,
	"number": 1518,
	"state": "closed",
	"title": "encoding/gob: recursive map type causes infinite loop",
	"body": "\u003cpre\u003eThe following code causes gob to go into an infinite loop\nwhen creating the encoder. I admit it's a contrived\nexample, but I don't see why it should be disallowed.\n\npackage main\n\nimport (\n\t\u0026quot;bytes\u0026quot;\n\t\u0026quot;fmt\u0026quot;\n\t\u0026quot;gob\u0026quot;\n)\n\ntype T map[string] T\n\nvar t = T{\u0026quot;A\u0026quot;: T{\u0026quot;B\u0026quot;:nil, \u0026quot;C\u0026quot;: nil}, \u0026quot;D\u0026quot;: nil}\n\nfunc main() {\n\tvar buf bytes.Buffer\n\tenc := gob.NewEncoder(\u0026amp;buf)\n\terr := enc.Encode(t)\n\tfmt.Printf(\u0026quot;err: %v\\n\u0026quot;, err)\n}\u003c/pre\u003e",
	"user": {
		"login": "rogpeppe",
		"id": 66491,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:08:42Z",
	"created_at": "2011-02-15T10:47:20Z",
	"updated_at": "2016-06-24T19:25:23Z"
}
