{
	"id": 51282009,
	"number": 4355,
	"state": "closed",
	"title": "reflect: Value.FieldByName is returning a valid Value in case of a field collision",
	"body": "\u003cpre\u003epackage main\n\nimport \u0026quot;fmt\u0026quot;\nimport \u0026quot;reflect\u0026quot;\n\ntype (\n\tT1 struct{ X int }\n\tT2 struct{ T1 }\n\tT3 struct{ T2; Z int }\n\tT4 struct{ T2; Z int }\n\tT5 struct {\n\t\tT3\n\t\tT4\n\t\tY int\n\t}\n)\n\nfunc main() {\n\tv := reflect.ValueOf(T5{})\n\tfmt.Println(\u0026quot;X\u0026quot;, v.FieldByName(\u0026quot;X\u0026quot;))\n\tfmt.Println(\u0026quot;Y\u0026quot;, v.FieldByName(\u0026quot;Y\u0026quot;))\n\tfmt.Println(\u0026quot;Z\u0026quot;, v.FieldByName(\u0026quot;Z\u0026quot;))\n}\n\nshould print:\n\nX \u0026lt;invalid Value\u0026gt;\nY \u0026lt;int Value\u0026gt;\nZ \u0026lt;invalid Value\u0026gt;\n\nHowever, using gc, at tip, it prints:\n\n\u0026lt;int Value\u0026gt;\n\u0026lt;int Value\u0026gt;\n\u0026lt;invalid Value\u0026gt;\n\nplay.golang.org produces the correct result ( \u003ca href=\"http://play.golang.org/p/rBGZEubaNy\"\u003ehttp://play.golang.org/p/rBGZEubaNy\u003c/a\u003e ), as\ndoes gccgo.\n\nI suspect that gccgo and the playground use an older version of reflect.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:23:07Z",
	"created_at": "2012-11-06T22:20:35Z",
	"updated_at": "2016-06-24T22:27:49Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
