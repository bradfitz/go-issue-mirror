{
	"id": 51277487,
	"number": 1201,
	"state": "closed",
	"title": "encoding/binary: should reject int, float",
	"body": "by **thomas.e.zander**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. Compile and run the following demo program:\n\npackage main\nimport (\n       \u0026quot;os\u0026quot;\n       \u0026quot;encoding/binary\u0026quot;\n)\ntype DemoType struct {\n       x,y int\n}\nfunc main() {\n       x := DemoType{1,2}\n       fd, _ := os.Open(\u0026quot;demofile.bin\u0026quot;, os.O_RDWR|os.O_CREAT, 0600)\n       defer fd.Close()\n       binary.Write(fd, binary.LittleEndian, x)\n}\n\nWhat is the expected output?\nI would expect the compiler to bail out and report an error since the size of 'int' is\nnot defined in the language standard. Therefore, the written output would be\ncompiler/architecture dependent. The same applies to using the 'float' type in the\nstruct.\nInstead, the compiler could print an error that it expects the size of the used data\ntypes to be of fixed width (int32, int64, float32 etc.).\n\nWhat do you see instead?\nProgram compiles fine. It outputs a file containing 8 zero-valued bytes.\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n8g on Linux\n6g on Mac OS X\n\nWhich operating system are you using?\nLinux (8g)\nMac OS X (6g)\n\nWhich revision are you using?  (hg identify)\n25631\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2014-12-08T10:07:20Z",
	"created_at": "2010-10-14T10:47:27Z",
	"updated_at": "2016-06-24T19:21:20Z"
}
