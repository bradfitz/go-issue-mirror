{
	"id": 142543818,
	"number": 14905,
	"state": "closed",
	"title": "cmd/compile: remove bounds checking for sub-slices",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n`go version devel +259b7ed 2016-03-22 00:18:31 +0000 linux/amd64`\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n`Linux Ava 4.4.5-1-ARCH #1 SMP PREEMPT Thu Mar 10 07:38:19 CET 2016 x86_64 GNU/Linux`\r\n\r\n3. What did you do?\r\n```go\r\nfunc a(in []byte) uint64 {\r\n\treturn uint64(in[0]) | uint64(in[1])\u003c\u003c8 | uint64(in[2])\u003c\u003c16 | uint64(in[3])\u003c\u003c24 |\r\n\t\tuint64(in[4])\u003c\u003c32 | uint64(in[5])\u003c\u003c40 | uint64(in[6])\u003c\u003c48 | uint64(in[7])\u003c\u003c56\r\n}\r\n\r\nfunc b(p []byte) uint64 {\r\n        p = p[:16]\r\n\treturn a(p[8:8])\r\n}\r\n```\r\n\r\n4. What did you expect to see?\r\nNo check for p[8:8]\r\n\r\n5. What did you see instead?\r\n```asm\r\n        0x001a 00026 (blah.go:10)       CMPQ    CX, $8\r\n        0x001e 00030 (blah.go:10)       JCS     $0, 39\r\n```\r\n\r\nOn a side note, by inlining that function by hand, some of my code is now faster than using unsafe, so there's that.\r\n\r\nAmazing job with the SSA branch guys.",
	"user": {
		"login": "OneOfOne",
		"id": 1080443,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"closed_at": "2016-04-02T04:47:51Z",
	"created_at": "2016-03-22T04:12:59Z",
	"updated_at": "2016-04-02T04:47:51Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
