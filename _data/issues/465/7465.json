{
	"id": 51286747,
	"number": 7465,
	"state": "open",
	"title": "testing: add ratcheting variants",
	"body": "\u003cpre\u003eFor some testing and benchmark purposes, a ratchet is better suited than an average.\n\n\u003ca href=\"https://golang.org/cl/67870053/\"\u003ehttps://golang.org/cl/67870053/\u003c/a\u003e bumps up the number of AllocsPerRun runs of an\nhttp test to avoid flakiness. This test would be more reliable using a lower number of\nruns if it could measure the best run rather than the average. In addition, it could set\nan explicit (rather than comparative) goal for the number of allocs, which would allow\nit to catch other regressions. With care, MinAllocsPerRun could even use heuristics to\navoid requiring the user to pass an explicit number of runs.\n\nFor benchmarking tightly CPU-bound code with minimal scheduler/OS interactions, a\nratcheting benchmark will often yield more stable, useful results than an averaging\nbenchmark.\u003c/pre\u003e",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"created_at": "2014-03-04T17:45:10Z",
	"updated_at": "2015-04-14T19:45:22Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
