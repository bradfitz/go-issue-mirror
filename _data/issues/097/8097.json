{
	"id": 51287669,
	"number": 8097,
	"state": "closed",
	"title": "runtime: crash running x = x",
	"body": "\u003cpre\u003ego version go1.3beta2 linux/amd64 and go1.3beta2 +77632b0a1c94 Sun May 25 08:38:59 2014\n+1000\n\nThis test code doesn't work on go1.3beta2:\n\npackage gc_test\n\nimport (\n    \u0026quot;fmt\u0026quot;\n    \u0026quot;runtime\u0026quot;\n    \u0026quot;testing\u0026quot;\n)\n\nfunc TestGc(t *testing.T) {\n    fmt.Println(runtime.Version())\n\n    arr := foo()\n\n    if arr[0] != 1 {\n        t.Fatalf(\u0026quot;want 1, got %d\u0026quot;, arr[0])\n    }\n}\n\nfunc foo() (arr []int) {\n    arr = []int{1}\n\n    runtime.GC()\n\n    return arr\n}\n\n\nresult:\n\ngo test\ngo1.3beta2\n--- FAIL: TestGc (0.00 seconds)\n        gc_test.go:15: want 1, got 833357874160\nFAIL\n\n\nThe array object `arr` was garbage collected.\n\nWhen I used the go1.2.2, this test code worked fine.\nI noticed that when I removed the named result `arr` on func `foo`, this test code\npassed:\n\nfunc foo() []int {\n    arr := []int{1}\n\n    runtime.GC()\n\n    return arr\n}\n\nThanks.\u003c/pre\u003e",
	"user": {
		"login": "atotto",
		"id": 644501,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 10,
	"closed_at": "2014-12-08T10:44:53Z",
	"created_at": "2014-05-26T05:52:03Z",
	"updated_at": "2016-06-25T01:35:18Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
