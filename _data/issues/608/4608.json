{
	"id": 51282372,
	"number": 4608,
	"state": "open",
	"title": "cmd/compile: panicking composite literals not properly flushed to globals",
	"body": "\u003cpre\u003eThis program causes an inconsistent memory state:\n\npackage main\n\nimport \u0026quot;fmt\u0026quot;\n\ntype L struct {\n        x, y int\n}\n\nvar x L\n\nfunc main() {\n        foo(0)\n        fmt.Println(x)\n}\n\nfunc foo(bar int) {\n        defer func() {\n                _ = recover()\n        }()\n        x = L{ 1, 1/bar}\n}\n\nThe expected output from this program is {0 0}, but it outputs {1 0} instead.\n\nPotential solution is evaluating the non-const parts of the literal into temporaries\nbefore copying the static data.\u003c/pre\u003e",
	"user": {
		"login": "DanielMorsing",
		"id": 545573,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Thinking"
		}
	],
	"comments": 11,
	"created_at": "2013-01-03T11:39:38Z",
	"updated_at": "2015-06-08T06:23:40Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
