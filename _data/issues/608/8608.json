{
	"id": 51288441,
	"number": 8608,
	"state": "closed",
	"title": "crypto/tls: remote error: handshake failure",
	"body": "by **webluoye**:\n\n\u003cpre\u003eWhat does 'go version' print?\n\ngo version go1.3.1 linux/amd64\n\nWhat steps reproduce the problem?\n\nremote error: handshake failure\nuse tls package connect to orgrfcote1.publicinterestregistry.net:700 not success\nerror mmessage：remote error: handshake failure\nwhen using GO 1.2  can connect successfully.\ngolang code：\n\n        cert, err := tls.LoadX509KeyPair(\u0026quot;my.ename.cn.crt\u0026quot;, \u0026quot;my.ename.cn.key\u0026quot;)\n        if err != nil {\n                log.Fatalf(\u0026quot;server: loadkeys: %s\u0026quot;, err)\n        }\n        config := tls.Config{\n                Certificates: []tls.Certificate{cert},\n                ClientAuth:         tls.VerifyClientCertIfGiven,\n                InsecureSkipVerify: true}\n        ladd, lerr := net.ResolveTCPAddr(\u0026quot;tcp\u0026quot;, \u0026quot;192.168.200.53:0\u0026quot;)\n        if lerr != nil {\n                log.Fatalf(\u0026quot;local addr: %s\u0026quot;, lerr)\n        }\n        radd, rerr := net.ResolveTCPAddr(\u0026quot;tcp\u0026quot;, \u0026quot;orgrfcote1.publicinterestregistry.net:700\u0026quot;)\n        if rerr != nil {\n                log.Fatalf(\u0026quot;server addr: %s\u0026quot;, rerr)\n        }\n        ipConn, err := net.DialTCP(\u0026quot;tcp\u0026quot;, ladd, radd)\n        conn := tls.Client(ipConn, \u0026amp;config)\n        if err != nil {\n                log.Fatalf(\u0026quot;client DialTCP: %s\u0026quot;, err)\n        }\n        defer conn.Close()\n        hsErr := conn.Handshake()\n        if hsErr != nil {\n                fmt.Printf(\u0026quot;Client connected to: %v\\n\u0026quot;, conn.RemoteAddr())\n                fmt.Printf(\u0026quot;%s\u0026quot;, hsErr)\n                os.Exit(0)\n        } else {\n                fmt.Printf(\u0026quot;Client connected to: %v\\n\u0026quot;, conn.RemoteAddr())\n                fmt.Printf(\u0026quot;Cert Checks OK\\n\u0026quot;)\n        }\n\nresult:\n2014/08/28 15:07:15 client: connected to:  66.199.183.31:700\nClient connected to: 66.199.183.31:700\nremote error: handshake failure\n---------------------------------------------------------------------------------------------------------\nuse NODEJS is ok\ncode：\nvar tls = require('tls');\nvar fs = require('fs');\n\nvar options = {\n        rejectUnauthorized: false,\n        port: 700,\n        host: 'orgrfcote1.publicinterestregistry.net',\n        key: fs.readFileSync('my.ename.cn.key'),\n        cert: fs.readFileSync('my.ename.cn.crt')\n};\n\nvar cleartextStream = tls.connect(options, function() {\n                console.log('client connected',\n                        cleartextStream.authorized ? 'authorized' : 'unauthorized');\n                });\ncleartextStream.setEncoding('utf8');\ncleartextStream.on('data', function(data) {\n                console.log(data);\nconsole.log(cleartextStream.remoteAddress+\u0026quot;:\u0026quot;+cleartextStream.remotePort);\n        });\ncleartextStream.on('end', function() {\n                server.close();\n        });\nresult:\nclient connected authorized\n\u0004g\u0026lt;?xml version='1.0' encoding='UTF-8'?\u0026gt;\n\u0026lt;epp xmlns='urn:ietf:params:xml:ns:epp-1.0'\nxmlns:xsi='\u003ca href=\"http://www.w3.org/2001/XMLSchema-instance\"\u003ehttp://www.w3.org/2001/XMLSchema-instance\u003c/a\u003e'\nxsi:schemaLocation='urn:ietf:params:xml:ns:epp-1.0\nepp-1.0.xsd'\u0026gt;\u0026lt;greeting\u0026gt;\u0026lt;svID\u0026gt;Redwood EPP\nServer\u0026lt;/svID\u0026gt;\u0026lt;svDate\u0026gt;2014-08-28T07:09:31.0Z\u0026lt;/svDate\u0026gt;\u0026lt;svcMenu\u0026gt;\u0026lt;version\u0026gt;1.0\u0026lt;/version\u0026gt;\u0026lt;lang\u0026gt;en-US\u0026lt;/lang\u0026gt;\u0026lt;objURI\u0026gt;urn:ietf:params:xml:ns:domain-1.0\u0026lt;/objURI\u0026gt;\u0026lt;objURI\u0026gt;urn:ietf:params:xml:ns:host-1.0\u0026lt;/objURI\u0026gt;\u0026lt;objURI\u0026gt;urn:ietf:params:xml:ns:contact-1.0\u0026lt;/objURI\u0026gt;\u0026lt;svcExtension\u0026gt;\u0026lt;extURI\u0026gt;urn:afilias:params:xml:ns:oxrs-1.1\u0026lt;/extURI\u0026gt;\u0026lt;extURI\u0026gt;urn:ietf:params:xml:ns:rgp-1.0\u0026lt;/extURI\u0026gt;\u0026lt;extURI\u0026gt;urn:afilias:params:xml:ns:idn-1.0\u0026lt;/extURI\u0026gt;\u0026lt;extURI\u0026gt;urn:afilias:params:xml:ns:trademark-1.0\u0026lt;/extURI\u0026gt;\u0026lt;extURI\u0026gt;urn:ietf:params:xml:ns:secDNS-1.1\u0026lt;/extURI\u0026gt;\u0026lt;extURI\u0026gt;urn:ietf:params:xml:ns:launch-1.0\u0026lt;/extURI\u0026gt;\u0026lt;/svcExtension\u0026gt;\u0026lt;/svcMenu\u0026gt;\u0026lt;dcp\u0026gt;\u0026lt;access\u0026gt;\u0026lt;personal/\u0026gt;\u0026lt;/access\u0026gt;\u0026lt;statement\u0026gt;\u0026lt;purpose\u0026gt;\u0026lt;admin/\u0026gt;\u0026lt;other/\u0026gt;\u0026lt;/purpose\u0026gt;\u0026lt;recipient\u0026gt;\u0026lt;unrelated/\u0026gt;\u0026lt;ours\u0026gt;\u0026lt;recDesc\u0026gt;Public\nInterest\nRegistry\u0026lt;/recDesc\u0026gt;\u0026lt;/ours\u0026gt;\u0026lt;public/\u0026gt;\u0026lt;/recipient\u0026gt;\u0026lt;retention\u0026gt;\u0026lt;legal/\u0026gt;\u0026lt;/retention\u0026gt;\u0026lt;/statement\u0026gt;\u0026lt;expiry\u0026gt;\u0026lt;relative\u0026gt;P10Y0M0DT0H0M0.0S\u0026lt;/relative\u0026gt;\u0026lt;/expiry\u0026gt;\u0026lt;/dcp\u0026gt;\u0026lt;/greeting\u0026gt;\u0026lt;/epp\u0026gt;\n66.199.183.31:700\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2015-07-14T19:57:22Z",
	"created_at": "2014-08-28T08:26:33Z",
	"updated_at": "2016-07-13T16:05:56Z",
	"milestone": {
		"id": 905114,
		"number": 2,
		"title": "Go1.5Maybe"
	}
}
