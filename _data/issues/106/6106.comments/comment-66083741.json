{
	"id": 66083741,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eThis issue was filed as a result of discussion in\n\u003ca href=\"https://groups.google.com/d/msg/golang-dev/Oik3353DJ2w/aNxNhwC9J_kJ\"\u003ehttps://groups.google.com/d/msg/golang-dev/Oik3353DJ2w/aNxNhwC9J_kJ\u003c/a\u003e\n\nThe genesis of the thread was to find a fast way to do comparison checks for\nreflect.Type or do fast map access with reflect.Type keys. I needed this because I was\nbuilding an encoder where users could map reflect.Type to custom encode/decode\nfunctions. Doing a map access every time the recursive function was called caused a\nperformance hit.\n\nThis is fleshed out in that same thread above, or linked directly at\n\u003ca href=\"https://groups.google.com/d/msg/golang-dev/Oik3353DJ2w/gPPLMfONvIAJ\"\u003ehttps://groups.google.com/d/msg/golang-dev/Oik3353DJ2w/gPPLMfONvIAJ\u003c/a\u003e\n\nIn that thread, Russ mentioned that interface comparison should be equivalent to 2\ninteger comparisons, and we can look to make operations on interfaces faster (instead of\nworking around them). Direct link:\n\u003ca href=\"https://groups.google.com/d/msg/golang-dev/Oik3353DJ2w/d6ei8LbyehEJ\"\u003ehttps://groups.google.com/d/msg/golang-dev/Oik3353DJ2w/d6ei8LbyehEJ\u003c/a\u003e\n\nI filed the issues separately because, even though they look like the same issue to me,\nthey might not be. Keith may look into maps with interface keys, while someone else\nlooks into interface comparison.\n\nCan Russ weigh in on this before we finalize this as WNF, and merge both of them?. He\nhas more context per the discussion.\u003c/pre\u003e",
	"user": {
		"login": "ugorji",
		"id": 1222082,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-12T19:45:26Z",
	"updated_at": "2014-12-08T10:33:34Z"
}
