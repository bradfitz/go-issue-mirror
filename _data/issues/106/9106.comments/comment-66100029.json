{
	"id": 66100029,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eThe reason why TestCgoExternalThreadPanic is crashing is because getg assumes that g is\nset, but it is not:\n\nC:\\go\\path\\mine\\src\\issue9106\u0026gt;hg -R %GOROOT% id\nd8a076541f57 (dev.garbage)\n\nC:\\go\\path\\mine\\src\\issue9106\u0026gt;type main.go\npackage main\n\n// void start(void);\nimport \"C\"\n\nfunc main() {\n        C.start()\n        select {}\n}\n\n//export gopanic\nfunc gopanic() {\n        panic(\"BOOM\")\n}\nC:\\go\\path\\mine\\src\\issue9106\u0026gt;type main.c\n#include \u0026lt;stdlib.h\u0026gt;\n#include \u0026lt;stdio.h\u0026gt;\n\nvoid gopanic(void);\n\nstatic void*\ndie(void* x)\n{\n        gopanic();\n        return 0;\n}\n\nvoid\nstart(void)\n{\n        if(_beginthreadex(0, 0, die, 0, 0, 0) != 0)\n                printf(\"_beginthreadex failed\\n\");\n}\n\nC:\\go\\path\\mine\\src\\issue9106\u0026gt;go build\n\nC:\\go\\path\\mine\\src\\issue9106\u0026gt;issue9106.exe\n_beginthreadex failed\n\nC:\\go\\path\\mine\\src\\issue9106\u0026gt;gdb issue9106.exe\nGNU gdb (GDB) 7.6.1\nCopyright (C) 2013 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later \u0026lt;\u003ca href=\"http://gnu.org/licenses/gpl.html\u0026gt\"\u003ehttp://gnu.org/licenses/gpl.html\u0026gt\u003c/a\u003e;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"mingw32\".\nFor bug reporting instructions, please see:\n\u0026lt;\u003ca href=\"http://www.gnu.org/software/gdb/bugs/\u0026gt\"\u003ehttp://www.gnu.org/software/gdb/bugs/\u0026gt\u003c/a\u003e;...\nReading symbols from C:\\go\\path\\mine\\src\\issue9106\\issue9106.exe...done.\n(gdb) r\nStarting program: C:\\go\\path\\mine\\src\\issue9106/issue9106.exe\n[New Thread 2500.0x85c]\n[New Thread 2500.0xcd4]\n[New Thread 2500.0x25c]\n_beginthreadex failed\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 2500.0x25c]\n0x00426937 in runtime.getg () at C:/go/root/src/runtime/runtime.c:371\n371             return g;\n(gdb) disas\nDump of assembler code for function runtime.getg:\n   0x00426930 \u0026lt;+0\u0026gt;:     mov    %fs:0x14,%eax\n=\u0026gt; 0x00426937 \u0026lt;+7\u0026gt;:     mov    0x0(%eax),%eax\n   0x0042693d \u0026lt;+13\u0026gt;:    mov    %eax,0x4(%esp)\n   0x00426941 \u0026lt;+17\u0026gt;:    ret\n   0x00426942 \u0026lt;+18\u0026gt;:    add    %al,(%eax)\n   0x00426944 \u0026lt;+20\u0026gt;:    add    %al,(%eax)\n   0x00426946 \u0026lt;+22\u0026gt;:    add    %al,(%eax)\n   0x00426948 \u0026lt;+24\u0026gt;:    add    %al,(%eax)\n   0x0042694a \u0026lt;+26\u0026gt;:    add    %al,(%eax)\n   0x0042694c \u0026lt;+28\u0026gt;:    add    %al,(%eax)\n   0x0042694e \u0026lt;+30\u0026gt;:    add    %al,(%eax)\nEnd of assembler dump.\n(gdb) info reg eax\neax            0x0      0\n(gdb) info threads\n  Id   Target Id         Frame\n* 3    Thread 2500.0x25c 0x00426937 in runtime.getg ()\n    at C:/go/root/src/runtime/runtime.c:371\n  2    Thread 2500.0xcd4 0x7c90e514 in ntdll!KiFastSystemCallRet ()\n   from C:\\WINDOWS\\system32\\ntdll.dll\n  1    Thread 2500.0x85c 0x7c90e514 in ntdll!KiFastSystemCallRet ()\n   from C:\\WINDOWS\\system32\\ntdll.dll\n(gdb) bt\n#0  0x00426937 in runtime.getg () at C:/go/root/src/runtime/runtime.c:371\n#1  0x00407988 in runtime.writebarrierptr_nostore (\n    dst=0x467384 \u0026lt;runtime.extram\u0026gt;, src=0)\n    at C:/go/root/src/runtime/mgc0.go:103\n#2  0x00401fe1 in runtime.atomicstorep (ptr=0x467384 \u0026lt;runtime.extram\u0026gt;,\n    val=0x0) at C:/go/root/src/runtime/atomic.go:66\n#3  0x004210d8 in unlockextra () at C:/go/root/src/runtime/proc.c:1104\n#4  0x00420e43 in runtime.needm () at C:/go/root/src/runtime/proc.c:964\n#5  0x0042a661 in runtime.cgocallback_gofunc ()\n    at C:/go/root/src/runtime/asm_386.s:727\n#6  0x0042a5b1 in runtime.cgocallback ()\n    at C:/go/root/src/runtime/asm_386.s:701\n#7  0x00401150 in _cgoexp_f1f8464bf312_gopanic ()\n    at issue9106/_obj/_cgo_defun.c:47\n#8  0x0042b8fb in crosscall2 () at C:/go/root/src/runtime/cgo/asm_386.s:24\n#9  0x00332470 in ?? ()\n(gdb) q\nA debugging session is active.\n\n        Inferior 1 [process 2500] will be killed.\n\nQuit anyway? (y or n) y\n\nC:\\go\\path\\mine\\src\\issue9106\u0026gt;\n\nOur exception handler is called. But it ignores this exception, because g is not set.\n\nAlex\u003c/pre\u003e\n\n\n\n_Status changed to **Accepted**._",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-11-18T00:15:25Z",
	"updated_at": "2014-12-22T06:38:03Z"
}
