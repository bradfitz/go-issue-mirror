{
	"id": 192697641,
	"body": "Thinking about http.Handler, people can alternatively rewrite a different kind of handler that has a different signature for ServeHttp. The advantage is that one can easily add a Context parameter.\r\nBut also, add return values. For instance a boolean sentinel value to control whether the handler should be the last one to be executed. Or a different http.ResponseWriter (useful if you wrap the ResponseWriter in one of your handlers, for instance when you gzip things, but not only)\r\n\r\nThe top level mux object that encapsulates the whole request dispatching logic can still remain a regular http.Handler (and the context.Background would be instantiated in its ServeHttp(w,r) and passed to the handler ServeWithCtx(ctx,w,r)). Probably better that I upload an example of what I mean.\r\n\r\nThere are also a few things that I am not very fond of. context.TODO is one of them. But I don't know if it is too late to change things or not. \r\nIs this the right place to discuss about API design ?",
	"user": {
		"login": "atdiar",
		"id": 12191458,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-05T17:44:32Z",
	"updated_at": "2016-03-06T00:49:19Z"
}
