{
	"id": 51282448,
	"number": 4660,
	"state": "closed",
	"title": "encoding/json: struct tags to ignore fields don't work on unexported fields",
	"body": "\u003cpre\u003eThe json annotations to both ignore and rename fields don't work for unexported fields.\n\n\nExample:\n\n\npackage main\n\nimport (\n        \u0026quot;encoding/json\u0026quot;\n        \u0026quot;log\u0026quot;\n)\n\ntype T struct {\n        Name string\n        m    map[string]interface{} `json:\u0026quot;-\u0026quot;`\n        m2   map[string]interface{} `json:\u0026quot;sldkjfsd\u0026quot;`\n}\n\nfunc main() {\n        input := `{\u0026quot;Name\u0026quot;: \u0026quot;Bob\u0026quot;, \u0026quot;m\u0026quot;: {\u0026quot;x\u0026quot;: 123}, \u0026quot;m2\u0026quot;: {\u0026quot;y\u0026quot;: 456}}`\n        t := \u0026amp;T{}\n        err := json.Unmarshal([]byte(input), t)\n        log.Printf(\u0026quot;Name %q; err: %v\u0026quot;, t.Name, err)\n}\n\nGenerates:\n\n2013/01/14 17:17:11 Name \u0026quot;Bob\u0026quot;; err: json: cannot unmarshal object key\n\u0026quot;m\u0026quot; into unexported field m of type main.T\n\nInterestingly, the first case \u0026quot;m\u0026quot; works with Go 1.0.3 and only fails with tip.\n\nBut \u0026quot;m2\u0026quot; fails with both 1.0.3 and tip.\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 7,
	"closed_at": "2014-12-08T10:24:41Z",
	"created_at": "2013-01-15T01:20:13Z",
	"updated_at": "2016-06-24T22:31:15Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
