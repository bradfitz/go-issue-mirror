{
	"id": 66085443,
	"body": "\u003ca id=\"c7\"\u003e\u003c/a\u003eComment 7 by **RickySeltzer**:\n\n\u003cpre\u003eIn many projects I have programmed, there is a need for non-writable initialized data\nlarger than a single variable.  This is analogous to an 'asm' directive that initializes\nbits in the code segment.  Something that the compiler has to do anyway.\n\nAlso, embedded systems often need to put data into read-only-memory (ROM).  \n\nThis has more to do with storage class than the type system.  Declarations rather like\nthe following might be simplest:\n\nconst (\n   data =  []byte(\"The quick brown fox jumped over the lazy dog.\")\n   Ï€ = float64(3.14159)\n   bits = []uint32{0x12345678, 0xBabeAbed}\n)\n\nI don't see any additional complexity here.  But it might be easier to introduce a new\nmodifier, \"readonly\" to supplement \"const\", if for some reason the above chokes the\ngrammar. \n\nPutting data in the code segment is just my way of saying that it's simple.  Actually,\nit would be a security risk.  Anything marked \"const\" or \"readonly\" should be NX (Not\neXecutable).\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-10-19T16:10:18Z",
	"updated_at": "2014-12-08T10:35:08Z"
}
