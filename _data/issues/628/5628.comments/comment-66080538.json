{
	"id": 66080538,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003ehibi 07 and 08 are almost identical to RFC6455, the difference being that one uses\n\"Origin:\" and the other uses \"Sec-WebSocket-Origin:\". As long as the handshake remains\nmostly the same, we should support it as far back as possible.\n\nhixie (hibi 00) is completely different and incompatible. The only browser that supports\nit is Safari 5 (OS X, iOS 5). I was originally against removing hixie for this reason,\nbut I have discovered a way to distinguish hixie from hibi/RFC6455 in JavaScript:\n\nif(\"WebSocket\" in window \u0026\u0026 WebSocket.CLOSED \u003e 2) {\n    // hibi-07 to RFC6455\n}\n\nThe W3C drafts that coincide with the WebSocket protocol drafts show that the \"CLOSED\"\nconstant is equal to \"2\" when hixie was implemented, and \"CLOSED\" is equal to \"3\" in\nhibi-07 and later. The only overlap is Chrome 13, which should have zero users with the\nauto-updating. Given Apple's long release cycle for Safari, testing \"CLOSED\" seems to be\na good way to avoid using hixie and use a fallback method like long-polling instead.\n\nSo it is possible to ignore Safari 5's WebSocket support and pretend like it has none,\nwithout trying the handshake. So I'm all for this change.\u003c/pre\u003e",
	"user": {
		"login": "lukescott",
		"id": 486224,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-07-25T17:48:27Z",
	"updated_at": "2014-12-08T10:30:41Z"
}
