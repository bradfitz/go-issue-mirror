{
	"id": 66081768,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eI have confirmed that under Go 1.1.1 the panic during panic is not present.\n\nlucky(~/src) % go run issue.go\npanic: i \u003e 10\n\ngoroutine 4 [running]:\nmain.func路001()\n        /home/dfc/src/issue.go:33 +0x53\nsync.(*Once).Do(0x5162b0, 0x4c7458)\n        /home/dfc/go/src/pkg/sync/once.go:40 +0x7e\nmain.func路002()\n        /home/dfc/src/issue.go:34 +0xae\ncreated by main.main\n        /home/dfc/src/issue.go:38 +0xe7\n\ngoroutine 1 [chan receive]:\nmain.main()\n        /home/dfc/src/issue.go:52 +0x160\n\ngoroutine 3 [running]:\nmain.func路002()\n        /home/dfc/src/issue.go:29 +0x64\ncreated by main.main\n        /home/dfc/src/issue.go:38 +0xe7\n\ngoroutine 5 [runnable]:\nmain.func路003()\n        /home/dfc/src/issue.go:44 +0x4d\ncreated by main.main\n        /home/dfc/src/issue.go:47 +0x12d\nexit status 2\n\nI believe the second panic is caused by the deadlock as there is no longer anyone to\nwrite to result.\n\nI don't see what this contrived example has to do with the unrelated problem of resource\nstarvation.\u003c/pre\u003e",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-27T01:29:07Z",
	"updated_at": "2014-12-08T10:31:49Z"
}
