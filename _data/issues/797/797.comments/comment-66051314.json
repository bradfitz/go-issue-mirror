{
	"id": 66051314,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eMinFloat32 is not a very large negative number.  For that, use -MaxFloat32.\n\nMinFloat32 is, to quote the docs, \"the smallest nonzero value representable\nby the type.\"  It is the tiniest float32 \u003e 0.\n\nAll the math you're showing looks fine to me.  It may look goofy, but that's\nbecause of floating point, not because of any bugs in Go itself.\nFloating point has fixed precision, so taking a very tiny number and adding 1\nmight result in a loss of precision (rounding) and produce exactly 1.\nIn this case 1 + 1e-45 = 1.000000000000000000000000000000000000000000001\nbut a float32 doesn't have nearly that much precision, so the answer rounds to \n1.00000.\u003c/pre\u003e\n\n\n_Owner changed to **r...@golang.org**._\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-05-21T00:32:50Z",
	"updated_at": "2014-12-08T10:05:55Z"
}
