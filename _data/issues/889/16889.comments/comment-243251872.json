{
	"id": 243251872,
	"body": "This will be tricky to fix in the compiler.  For instance, if I do\r\n```\r\nvar x [6]int\r\nfunc f() int { return x[3] * x[3] }\r\nfunc g() int { y := x; return y[3] * y[3] }\r\n```\r\n\r\n`f` can read from `x[3]` twice and get different answers for each read.  `g` is not allowed to do that; there is only one load from the global and thus `g` is guaranteed to return a square.\r\n\r\nPerhaps the Bessel functions should be modified to define `p` to be `*[6]float64`.  I believe that would resolve the performance problem.",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-29T20:51:06Z",
	"updated_at": "2016-08-29T20:51:06Z"
}
