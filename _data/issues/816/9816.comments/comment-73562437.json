{
	"id": 73562437,
	"body": "\u003e I think things are fine, correct, and clear as presented now.\r\n\r\nDo you want me to count number of messages on this topic? It is clearly not clear.\r\nJust from few previous days:\r\nhttps://groups.google.com/d/msg/golang-nuts/zyQnord8hyc/dOQbi0IgpUQJ\r\nWhere topic starter assumes that string variables are not subject for data races.\r\nAnother one \"Strings in go : immutable or not ?\" is on internal mailing list, where topic started assumes that if you do println(s) several times it will always print the same string.\r\n\r\n\u003e \"In object-oriented and functional programming, an immutable object is an object whose state cannot be modified after it is created.\"\r\n\r\nThe spec does not introduce notion of \"string buffer\" as something separate and visible. And you clearly can mutate _strings_ themselves. Strings would be immutable if you are not able to assign to a string variable.\r\n\r\nMaking it an informal note sounds good to me. But then it needs to be moved to the bottom of the Strings section and extended to mention string buffers and cheap copying.",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-09T18:31:37Z",
	"updated_at": "2015-02-09T18:31:37Z"
}
