{
	"id": 66091895,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003e\u003e Is the point to measure how concurrently executing processes interact with one another?\n\nYes, this is the main use case.\nE.g. if you are doing several concurrent http requests using a single http.Client, does\nit scale linearly with GOMAXPROCS? or there is some bottleneck in the shared Client?\n\n\u003e it would be great to add more prose explaining the kinds of benchmarks where one would\nwant to use SetParallelism\n\nIf you would write the benchmark w/o using RunParallel, how many goroutines would you\ncreate? Use SetParallelism to create the same number of goroutines.\nFor a CPU-bound benchmark higher parallelism will make little difference.\nHowever, for if you are writing a benchmark that uses http.Client, (1) it can go faster\nwith higher parallelism, (2) set parallelism to what you use in real program, the value\nthat is interesting to you. E.g. if in real program you send 100*GOMAXPROCS concurrent\nrequests at once, do the same in the benchmark.\n\nThat was my ideas behind RunParallel/SetParallelism.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-02-28T09:20:55Z",
	"updated_at": "2014-12-08T10:41:18Z"
}
