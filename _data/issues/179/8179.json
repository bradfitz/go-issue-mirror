{
	"id": 51287802,
	"number": 8179,
	"state": "closed",
	"title": "crypto/aes Only works with aes128",
	"body": "by **blake@helium.co**:\n\n\u003cpre\u003eWhat does 'go version' print?\n\ngo version go1.2 linux/amd64  (error exists in latest published library source)\n\nWhat steps reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\n\u003ca href=\"http://play.golang.org/p/_bMZQs1y45\"\u003ehttp://play.golang.org/p/_bMZQs1y45\u003c/a\u003e\n\n1. Build/run the example code at\n\u003ca href=\"http://golang.org/pkg/crypto/cipher/#example_NewCFBEncrypter\"\u003ehttp://golang.org/pkg/crypto/cipher/#example_NewCFBEncrypter\u003c/a\u003e\n2. Change the key to be a 32-byte string.  This should select aes-256.\n3. Also, change the iv to be 32 bytes long (because the block size for aes256 is 32):\niv := ciphertext[:32]\n\nWhat happened?\n\npanic: cipher.NewCBFEncrypter: IV length must equal block size\n\nWhat should have happened instead?\n\nShould have encrypted the data.\n\nPlease provide any additional information below.\n\nThe error is in go/src/pkg/crypto/aes/cipher.go.  BlockSize is statically defined as 16\nbytes.  When you call cipher.NewCFBEncrypter() with a 32-byte IV, it checks that the IV\nand blocksize are the same length (and fails). aes.BlockSize should change to 32 when\naes256 is selected by using a 32-byte long key. The existing code fixes blocksize to 16\nfor aes-128, aes-192, and aes-256, which is wrong.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:45:22Z",
	"created_at": "2014-06-10T23:26:14Z",
	"updated_at": "2016-06-25T01:36:12Z"
}
