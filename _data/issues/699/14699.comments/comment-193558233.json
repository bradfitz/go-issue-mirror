{
	"id": 193558233,
	"body": "Much simpler answer: indirect call.  Escape analysis knows *nothing* about any constants that you might propagate, such as function bodies.  That's something that would be nice to do in the future, but right now, it's thoroughly upstream of SSA (yes, I know this is annoying).\r\n```\r\ngo test -run - -bench . -benchmem -gcflags '-m -m -l -e'\r\n# _/Users/drchase/GoogleDrive/work/tmp/ESC\r\n./esc_bench.go:11: moved to heap: i\r\n./esc_bench.go:12: \u0026i escapes to heap\r\n./esc_bench.go:12: \tfrom inc(\u0026i) (parameter to indirect call) at ./esc_bench.go:12\r\n./esc_bench.go:7: BenchmarkClosurePtrFromArg.func1 k does not escape\r\n./esc_bench.go:6: BenchmarkClosurePtrFromArg b does not escape\r\n./esc_bench.go:7: BenchmarkClosurePtrFromArg func literal does not escape\r\n```\r\nBut, what do you think of the explainer?\r\n",
	"user": {
		"login": "dr2chase",
		"id": 1928999,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-08T02:13:55Z",
	"updated_at": "2016-03-08T02:13:55Z"
}
