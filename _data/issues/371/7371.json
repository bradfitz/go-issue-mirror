{
	"id": 51286614,
	"number": 7371,
	"state": "closed",
	"title": "openpgp: Entity.SignIdentity uses wrong signature type, PublicKey.VerifyUserIdSignature",
	"body": "by **damien@commerceguys.com**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n\n`Entity.SignIdentity()` uses `Signature.SignKey()` (which is the algorithm for subkey\nbinding signature - type 0x18) instead of `Signature.SignUserId()` (which is the\nalgorithm for certification signature - type 0x10).\n\nAs a consequence, the signatures generates by Go fail validation in `gpg`.\n\nIn addition, `PublicKey.VerifyUserIdSignature()` is implemented in such a way that it\ncan only check self-signed certification signature. It builds the signed hash using the\npublic key of the *signer entity* instead of the public key of the *signed entity* (that\nit doesn't have).\n\nAttached is a partial test program for this. I cannot actually verify the signature\nbecause of the above.\n\nWhich version are you using?  (run 'go version')\n\n1.2\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/7371/0/openpgp-sign-entity-bug.go\"\u003eopenpgp-sign-entity-bug.go\u003c/a\u003e (779 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:41:01Z",
	"created_at": "2014-02-20T20:06:12Z",
	"updated_at": "2016-06-25T01:28:01Z"
}
