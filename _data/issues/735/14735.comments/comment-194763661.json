{
	"id": 194763661,
	"body": "The opposite optimization can also make sense, and would allow to win back some CPU time.\r\nConsider that reachable memory is 1 GB and heap size is 2 GB. Now during the next GC we discover reachable memory to be 800 MB, and we would set next goal to 1.6 GB. But all that 2GB is still hot, so we could as well set the goal still to 2 GB and reduce GC overhead by 20%. Of course, if reachable heap continues to reduce or stays at 800 MB, then we need to reduce goal over time.\r\n\r\nIf we have a long-running app where reachable heap fluctuates between 800MB and 1GB, RSS still will be at 2GB. But if we set GC goal to 2 GB most of the time, we can save 10% of GC overhead on average continuously.",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-10T09:56:28Z",
	"updated_at": "2016-03-10T09:56:28Z"
}
