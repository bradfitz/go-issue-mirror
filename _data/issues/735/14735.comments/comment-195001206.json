{
	"id": 195001206,
	"body": "A spike in memory usage could also signal a phase change in the program.\nSimilarly to the start of a program, a phase change is probably where the\nGC should be more aggressive about increasing memory size. At the end of\nthe day the only thing that makes sense is what Minux is suggesting and\nthat is to somehow guess how much RAM and CPU power is  actually available\nand use that as input to the pacer. To use Dmitry's trace as an example, if\nwe have a 48 core machine then that could be used as an indication that the\ninitial 4MB heap size should be increased more aggressively than if\nGOMAXPROCS is set to 1. The other metric that has been discussed as an\ninput to the pacer is how many GCs are being performed in a second. If we\nare doing a lot of GCs then increase heap size more aggressively.\n\nAs long as the user is running with the default GOMAXPROCS and GOGC then\nI'm comfortable using these heuristics to improve the Go experience. As\nsoon as the knobs are turned then we want to provide a heap model that is\nas simple as possible which means that these heuristics will need to be\nturned off.\n\n\nOn Thu, Mar 10, 2016 at 5:01 AM, Minux Ma \u003cnotifications@github.com\u003e wrote:\n\n\u003e Is it possible to adjust heap goal according to current\n\u003e system memory pressure (but capped by some user\n\u003e setting, e.g. GOGC)?\n\u003e\n\u003e (This is because saving CPU and saving memory are\n\u003e almost fundamentally incompatible goals for a GC.\n\u003e As a concrete example, on low RAM builder (with 512MB\n\u003e physical RAM), I have to set GOGC to as low as 10%,\n\u003e otherwise all.bash will swap like crazy, but on a developer\n\u003e workstation, I'd rather reduce build time by disabling GC\n\u003e for the go toolchain.)\n\u003e\n\u003e\n\u003e For example, we can query getrusage(2) periodically,\n\u003e and reduce the heap goal if we triggered any swaps\n\u003e during the last cycle?\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/14735#issuecomment-194766198\u003e.\n\u003e\n",
	"user": {
		"login": "RLH",
		"id": 972447,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-10T18:58:33Z",
	"updated_at": "2016-03-10T18:58:33Z"
}
