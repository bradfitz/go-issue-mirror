{
	"id": 66086877,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eOk, assuming that I correctly understand how to detect malformed pprof heap profiles\n(following your notes above), I have a smallish test case that fairly reliably\nreproduces this: \u003ca href=\"http://play.golang.org/p/kklslqpWKT\"\u003ehttp://play.golang.org/p/kklslqpWKT\u003c/a\u003e. Forgive the ugly, haphazard code.\nIt's the result of a very frustrating, slow search through a poorly bounded space. Most\nof this code seems to be necessary; attempts to simplify further and still reproduce\nhave failed to date.\n\nThis needs to run for about a minute to reproduce on my hardware. Happily, I've also\nbeen able to reproduce this on my Raspberry Pi, using the same binary, although it took\na 10m run.\n\nAttached to this commit are a gzipped binary, a malformed sample 1 minute profile run\nwith that binary, and that sample profile run symbolicated, for your convenience. (Note\nthat the symbolification might be dodgy; I whipped it up ad hoc just for this, and it is\nnot well tested.)\n\nNow that I can reproduce reliably, the question is: What next?\n\nIn the absence of other guidance, I'll start digging into this myself, starting by\ninstrumenting the runtime to look at MProf_Free sizes. If you have any specific\nexperiments you'd like me to run, though, I'm happy to do so. Note that I'll be offline\nall of tomorrow (Thu) and will wrap up today in an hour or so.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/6592/6/small6592_p.gz\"\u003esmall6592_p.gz\u003c/a\u003e (767518 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/6592/6/sm_p_1m.prof\"\u003esm_p_1m.prof\u003c/a\u003e (3824 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/6592/6/sm_p_1m.prof.symbolicated\"\u003esm_p_1m.prof.symbolicated\u003c/a\u003e (6127 bytes)",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-10-17T00:43:42Z",
	"updated_at": "2014-12-08T10:36:30Z"
}
