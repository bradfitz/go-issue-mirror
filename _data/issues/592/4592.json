{
	"id": 51282347,
	"number": 4592,
	"state": "closed",
	"title": "cmd/ld: valgrind warning:  Conditional jump or move depends on uninitialised value(s)",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n1. modify cmd/ld to be valgrind compatible (replace mal and friends with calloc)\n2. go build -x $SOMEPACKAGE\n3. rerun the build by hand, prefixing valgrind where necessary \n\nWhat is the expected output? What do you see instead?\n\n==9124== Conditional jump or move depends on uninitialised value(s)\n==9124==    at 0x804A9F3: strnput (data.c:583)\n==9124==    by 0x805259A: uleb128put (dwarf.c:105)\n==9124==    by 0x804F961: writelines (dwarf.c:1691)\n==9124==    by 0x804D901: dwarfemitdebugsections (dwarf.c:2101)\n==9124==    by 0x806B77D: asmb (asm.c:826)\n==9124==    by 0x806F7C4: p9main (obj.c:326)\n==9124==    by 0x807BB0A: main (main.c:35)\n==9124==\n==9124== Conditional jump or move depends on uninitialised value(s)\n==9124==    at 0x804A9F3: strnput (data.c:583)\n==9124==    by 0x8052C2A: sleb128put (dwarf.c:112)\n==9124==    by 0x8053F5E: putpclcdelta (dwarf.c:1544)\n==9124==    by 0x804FCFB: writelines (dwarf.c:1736)\n==9124==    by 0x804D901: dwarfemitdebugsections (dwarf.c:2101)\n==9124==    by 0x806B77D: asmb (asm.c:826)\n==9124==    by 0x806F7C4: p9main (obj.c:326)\n==9124==    by 0x807BB0A: main (main.c:35)\n\nPlease use labels and text to provide additional information.\n\nboth sleb128put and uleb128put use a char[10] allocated on the stack. I believe valgrind\nis correct in asserting the value of this array is not known to be zero.\u003c/pre\u003e",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:24:22Z",
	"created_at": "2012-12-27T01:59:39Z",
	"updated_at": "2016-06-24T22:30:30Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
