{
	"id": 228978166,
	"body": "I can take a look at the gzip slowdown for arm and 386. There was much optimization work done on gzip, but primarily targeted towards amd64, some of which completely neglected other architecture or even consciously chose to favor amd64 at the expense of other architectures.\r\n\r\nThe fact that gzip now uses 4-byte matching instead of 3-byte matching is something I would have expected all architectures to benefit from, so a hit from 53efe1e (http://golang.org/cl/20929) is surprising to me. As another optimization, we switched the [bit buffer to use an uint64 instead of a uint32](https://github.com/golang/go/commit/53984e5be200c40c4cf2ded9a1d002a5906c9e1f#diff-a22ebc7c112330cc8b68d2b388b8af35R84), so I'm further surprised that arm64 took a greater hit than arm32.\r\n\r\nIf there's nothing easily actionable, we can punt on the optimizations until Go1.8.",
	"user": {
		"login": "dsnet",
		"id": 6354026,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-28T07:55:53Z",
	"updated_at": "2016-06-28T08:00:00Z"
}
