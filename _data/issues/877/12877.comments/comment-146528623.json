{
	"id": 146528623,
	"body": "The default GOMAXPROCS changed between 1.4 when it was 1 and 1.5 which is\nnow NumCPU.\n\nRaces make the program undefined so should be avoided.\n\n\n\n\nOn Thu, Oct 8, 2015 at 7:18 AM, Rafal Jeczalik \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e @hyper-carrot \u003chttps://github.com/hyper-carrot\u003e\n\u003e\n\u003e package main\n\u003e\n\u003e import (\n\u003e     \"fmt\"\n\u003e     \"time\"\n\u003e )\n\u003e\n\u003e func consumer(newC chan chan int) {\n\u003e     var jobs chan int\n\u003e     for {\n\u003e         select {\n\u003e         case c, ok := \u003c-newC:\n\u003e             if !ok {\n\u003e                 return\n\u003e             }\n\u003e             jobs = c\n\u003e             fmt.Println(\"new job pipeline\")\n\u003e         case job := \u003c-jobs:\n\u003e             fmt.Println(\"executing job:\", job)\n\u003e         }\n\u003e     }\n\u003e }\n\u003e\n\u003e func producer(newC chan chan int) {\n\u003e     var i int\n\u003e     var c chan int\n\u003e     for {\n\u003e         if i%3 == 0 {\n\u003e             c = make(chan int)\n\u003e             newC \u003c- c\n\u003e         }\n\u003e         c \u003c- i\n\u003e         i = (i + 1) % 3\n\u003e     }\n\u003e }\n\u003e\n\u003e func main() {\n\u003e     newC := make(chan chan int)\n\u003e     go producer(newC)\n\u003e     go consumer(newC)\n\u003e     time.Sleep(5 * time.Second)\n\u003e }\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/12877#issuecomment-146507707\u003e.\n\u003e\n",
	"user": {
		"login": "RLH",
		"id": 972447,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-08T12:49:14Z",
	"updated_at": "2015-10-08T12:49:14Z"
}
