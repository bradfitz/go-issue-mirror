{
	"id": 157384913,
	"number": 15877,
	"state": "open",
	"title": "cmd/go: show the version GOROOT corresponds to in `go env` output",
	"body": "A lot of issue reports are due to incorrect `$GOROOT` setting.\r\nFor example, I suspect that #15874 is one of them.\r\n\r\nI propose that go env also print the version of the tools\r\nthe GOROOT corresponds to as a comment.\r\n\r\nFor example, instead just of printing:\r\n```\r\n....\r\nGOROOT=\"/Users/minux/go/rel/go1.6\"\r\nGOTOOLDIR=\"/Users/minux/go/rel/go1.6/pkg/tool/darwin_amd64\"\r\n...\r\n```\r\n\r\nI'd like it also show the version as a comment (so that the output\r\nis still a valid shell script):\r\n```\r\nGOROOT=\"/Users/minux/go/rel/go1.6\" # version go1.6\r\nGOTOOLDIR=\"/Users/minux/go/rel/go1.6/pkg/tool/darwin_amd64\" # version go1.5\r\n```\r\n\r\nFor Windows, we probably need to use `REM` on separate lines:\r\n```\r\nREM version go1.6\r\nset GOROOT=C:\\go\r\nREM version go1.5\r\nset GOTOOLDIR=C:\\go\\tool\\tool\\windows_386\\\r\n```\r\n\r\nFor GOROOT, it could use the `go version` command from the directory,\r\nfor GOTOOLDIR, we can use `compile -V` to get the actual tool version.\r\n\r\nBecause GOTOOLDIR is not settable via environment variables, so\r\nshowing the tool version might not be that important, but it will definitely\r\nhelp when $GOROOT/bin/go is out of sync from the toolchain (this might\r\nhelp #15372.)\r\n\r\nI'd like to add this to Go 1.7 if at all possible.",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		}
	],
	"comments": 7,
	"created_at": "2016-05-29T12:50:49Z",
	"updated_at": "2016-10-06T20:30:47Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
