{
	"id": 69089937,
	"number": 10488,
	"state": "closed",
	"title": "Possible to return detailed error through RPC?",
	"body": "*Effective Go* writes \"Callers that care about the precise error details can use a type switch or a type assertion to look for specific errors and extract details\", but it is not the case for RPC. I tried to modify the example in RPC doc:\r\n\r\n```go\r\ntype DivideError struct {\r\n\tDivisor int\r\n}\r\n\r\nfunc (divideError *DivideError) Error() string {\r\n\treturn fmt.Sprintf(\"divide by %d\", divideError.Divisor)\r\n}\r\n\r\nfunc (t *Arith) Divide(args *Args, quo *Quotient) error {\r\n\tif args.B == 0 {\r\n\t\treturn \u0026DivideError{Divisor: 0}\r\n\t}\r\n\t...\r\n}\r\n```\r\n\r\nThe error returned by Client.Call() is of type rpc.ServerError that carries the error string returned by DivideError.Error(). It would be perfect if the DivideError instance itself is returned.",
	"user": {
		"login": "psfung",
		"id": 1597579,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2015-04-17T16:24:35Z",
	"created_at": "2015-04-17T07:56:45Z",
	"updated_at": "2016-06-25T02:05:53Z"
}
