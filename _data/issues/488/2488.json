{
	"id": 51279280,
	"number": 2488,
	"state": "closed",
	"title": "escape analysis bug - slice of array inside loop",
	"body": "by **axel.schreiner**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. compile and run the program below using 6g or 8g.\n\nWhat is the expected output?\nfirst and last line of output should be the same.\n\nWhat do you see instead?\nthe second group of output lines shows that the slice entries are corrupted.\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g, 8g\n\nWhich operating system are you using?\nMacOS X\n\nWhich revision are you using?  (hg identify)\nc1702f36df03 (release-branch.r60) release/release.r60.3\n\nPlease provide any additional information below.\n\ntest program (run in the Go Playground):\n\npackage main\n\nimport \u0026quot;fmt\u0026quot;\n\nfunc main() {\n  a := [2][2]int {[2]int{10,11}, [2]int{20,21}}\n  s := make([][]int, 2, 2)\n  s[0] = a[0][:]\n  s[1] = a[1][:]\n  fmt.Printf(\u0026quot;%#v\\n\\n\u0026quot;, s)\n\n  for n, row := range a {\n    fmt.Printf(\u0026quot;n %d row[:] %#v\\n\u0026quot;, n, row[:])\n    s[n] = row[:]\n  }\n  fmt.Printf(\u0026quot;%#v\\n\u0026quot;, s)\n}\n\noutput:\n\n[][]int{[]int{10, 11}, []int{20, 21}}\n\nn 0 row[:] []int{10, 11}\nn 1 row[:] []int{20, 21}\n[][]int{[]int{20, 21}, []int{20, 21}}\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:13:16Z",
	"created_at": "2011-11-21T20:26:00Z",
	"updated_at": "2016-06-24T21:20:56Z"
}
