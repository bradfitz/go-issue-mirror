{
	"id": 66070329,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eregopt used to have a bug where it did not notice registers that were\nlive if they were not read/written during the lifetime of the\ntemporary being registerized. that is:\n\nmov $1, bx\n...\nmov $2, tmp\nuse tmp\n...\nuse bx\n\nas long as bx didn't appear in the span of instructions involving tmp,\nregopt could incorrectly decide bx was available. however, i thought i\nfixed that in\n\nchangeset:   8637:596c547538d6\nuser:        Russ Cox \u0026lt;rsc@golang.org\u0026gt;\ndate:        Fri Jun 03 14:10:39 2011 -0400\nsummary:     8g: compute register liveness during regopt\n\ni suspect that this code is not doing the right thing for an address\nlike 0(BX). i suspect that it is not seeing that as a read of BX in\nsome cases. for example perhaps MOVL $1, 0(BX) is being recorded as a\nwrite of BX when in fact it is a read of BX.\n\nruss\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-09-18T15:29:55Z",
	"updated_at": "2014-12-22T06:18:45Z"
}
