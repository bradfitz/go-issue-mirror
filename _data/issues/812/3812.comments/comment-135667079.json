{
	"id": 135667079,
	"body": "This takes care of what I've used inheritance for in Django (and, before that, Perl's HTML::Mason 1.x): we have a master with the HTML boilerplate, the code to load common scripts, etc., and the content of site-wide headers/footers; other (\"overlay\") templates provide a chunk of body content, may add extra resources they need to pull in, may vary title, meta tags, legal fine print in the middle of the footer, or other stuff.\r\n\r\nI like that in the proposal overlays don't specify their master, unlike in Django and Mason. Sometimes one set of overlays (forms) need to be inserted into more than one master (brand/\"skin\"), and Django and Mason make that ugly to do.\r\n\r\nOne misfeature of Django template inheritance is that you it'll let you put content outside any block in an overlay template and it silently discards it. It looks like this CL does that, too. Probably not worth the mess, but it'd be cool if `Overlay` checked the parsed overlay template and errored out (\"overlay content must be inside block definitions\") on seeing anything but a `define`, comment, or whitespace. Or `Overlay` could just execute the overlay template with nil data and error out if there's non-whitespace output or an error, but that'd be behavior quirky enough you might have to document it. Anyway, the behavior already in the CL is what I already live with every day, so not a big deal.",
	"user": {
		"login": "twotwotwo",
		"id": 328644,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-28T08:07:00Z",
	"updated_at": "2015-08-28T08:10:55Z"
}
