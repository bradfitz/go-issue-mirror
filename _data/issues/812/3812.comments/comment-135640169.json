{
	"id": 135640169,
	"body": "Rob and I just designed a potential solution to this issue. It introduces a new `block` keyword that allows the definition of inline templates, and the `Overlay` method that allows the redefinition of templates. \r\n\r\n\tconst (\r\n\t\tmaster  = `Names:{{block \"list\" .}}{{\"\\n\"}}{{range .}}{{println \"-\" .}}{{end}}{{end}}`\r\n\t\toverlay = `{{define \"list\"}} {{join . \", \"}}{{end}} `\r\n\t)\r\n\tvar (\r\n\t\tfuncs     = template.FuncMap{\"join\": strings.Join}\r\n\t\tguardians = []string{\"Groot\", \"Gamora\", \"Nebula\", \"Star-Lord\", \"Rocket\"}\r\n\t)\r\n\tmasterTmpl, err := template.New(\"master\").Funcs(funcs).Parse(master)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\toverlayTmpl, err := masterTmpl.Overlay(overlay)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\tif err := masterTmpl.Execute(os.Stdout, guardians); err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\tif err := overlayTmpl.Execute(os.Stdout, guardians); err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\t// Output:\r\n\t// Names:\r\n\t// - Groot\r\n\t// - Gamora\r\n\t// - Nebula\r\n\t// - Star-Lord\r\n\t// - Rocket\r\n\t// Names: Groot, Gamora, Nebula, Star-Lord, Rocket\r\n\r\nSee this issue for the details: https://go-review.googlesource.com/#/c/14005\r\n\r\nStill TBC are the helpers (OverlayFiles, OverlayGlob, etc) and html/template support. ",
	"user": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-28T05:36:44Z",
	"updated_at": "2015-08-28T05:36:44Z"
}
