{
	"id": 69906052,
	"number": 10526,
	"state": "closed",
	"title": "cmd/internal/gc: easier way to understand why x escapes",
	"body": "I'd like to know why the `np **Node` parameter to `walkexpr` escapes. This (and friends) accounts for \u003e10% of the allocations in the compiler. (The next 10% are `gc.NodeList`s, which will raise the same question.) I'd like to fix that, if possible.\r\n\r\nFiguring out why it escapes is hard, though. The compiler output options are either fairly uninformative (\"escapes to heap\", \"leaking param\", etc.) or overwhelming and tied to the escape analysis implementation details. This is ok for simple code, but the walk/typecheck morass makes it infeasible to track this down manually.\r\n\r\nI'd like an accounting more like: np escapes because on line x it passed to f, then on line y it is passed to g, then on line z it is stored to a global.\r\n\r\nThis could be an external tool or it could be part of the compiler output.\r\n\r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "dr2chase",
		"id": 1928999,
		"type": "User",
		"site_admin": false
	},
	"comments": 13,
	"closed_at": "2016-03-17T13:30:12Z",
	"created_at": "2015-04-21T17:28:18Z",
	"updated_at": "2016-03-17T13:30:12Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
