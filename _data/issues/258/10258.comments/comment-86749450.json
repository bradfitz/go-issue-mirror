{
	"id": 86749450,
	"body": "We had to work around this for gccgo-4.9 shipped in Ubuntu. We had to\nprovide a modified version of the go tool which knew the list of packages\nwhich made up gccgo's version of $GOROOT and always reported that they were\nup to date in the dependency graph,\n\nOn Fri, Mar 27, 2015 at 10:03 AM, Ian Lance Taylor \u003cnotifications@github.com\n\u003e wrote:\n\n\u003e This code is not a bug for ordinary usage. People using gccgo do not\n\u003e rebuild the standard library, because it is built as part of building gccgo\n\u003e itself. There is a special case here: using gccgo to bootstrap the gc\n\u003e compiler. Without looking into the details, I imagine that something about\n\u003e the setting of GOROOT is causing the go tool to decide that it is looking\n\u003e at the standard library sources, and deciding that since it is using gccgo,\n\u003e it does not need to build them.\n\u003e\n\u003e So somebody needs to investigate this issue, figure out what the real\n\u003e problem is (whether it is my speculation or something else), and figure out\n\u003e what the right fix is.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/10258#issuecomment-86749170\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-26T23:05:51Z",
	"updated_at": "2015-03-26T23:05:51Z"
}
