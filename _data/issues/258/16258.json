{
	"id": 163581519,
	"number": 16258,
	"state": "closed",
	"title": "encoding/gob doesn't mention panic behavior with nil pointers in Encode \u0026 EncodeValue",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\nAll versions of Go.\r\n\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nhttps://play.golang.org/p/SKQxgP2jjz\r\n\r\nNothing is mentioned in the docs about how encoding/gob.Encode and EncodeValue handles nil pointers\r\n\u003cimg width=\"836\" alt=\"screen shot 2016-07-03 at 2 25 24 pm\" src=\"https://cloud.githubusercontent.com/assets/4898263/16547751/5de44dac-412c-11e6-869f-f3c9c88ed9da.png\"\u003e\r\nWhile investigating issue https://github.com/golang/go/issues/16204, I dug through the source code of encoding/gob/encoder.go https://github.com/golang/go/blob/master/src/encoding/gob/encoder.go#L215.\r\nThe first comment in the method internally mentions what to do with nil pointers\r\n\u003cimg width=\"689\" alt=\"screen shot 2016-07-03 at 2 25 47 pm\" src=\"https://cloud.githubusercontent.com/assets/4898263/16547748/42ad59e8-412c-11e6-89e1-19cae80f3536.png\"\u003e\r\nHowever the docs do not and I don't see any tests that test out this expected behavior expect for https://github.com/golang/go/blob/master/src/encoding/gob/encoder_test.go#L833 and moreover that test only ensures that a panic provides a useful message, its focus isn't on checking that nil pointers panic.\r\n\r\nI made https://play.golang.org/p/8PB1oN2eFO and in it I pass in some nil pointers\r\n\r\n4. What did you expect to see?\r\nThe doc should be explicit about nil pointers and also we need some tests in there since panicking is the behavior in the implementation of EncodeValue which goes into Encode too.\r\n\r\nI have a CL prepared to fix this and I'll submit it ASAP.",
	"user": {
		"login": "odeke-em",
		"id": 4898263,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2016-07-05T06:37:02Z",
	"created_at": "2016-07-03T21:51:04Z",
	"updated_at": "2016-07-05T06:37:02Z"
}
