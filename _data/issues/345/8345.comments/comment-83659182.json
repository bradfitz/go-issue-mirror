{
	"id": 83659182,
	"body": "For iOS, this is very close to working. The sticking point is TestCthread:\r\n\r\n```\r\n* thread #6: tid = 0x8de56, 0x040ac240 gotest`/Users/crawshaw/ios/go/misc/cgo/test.Add + 124, stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\r\n  * frame #0: 0x040ac240 gotest`/Users/crawshaw/ios/go/misc/cgo/test.Add + 124\r\n    frame #1: 0x04059aa8 gotest`runtime.call16 + 112\r\n    frame #2: 0x04009efc gotest`runtime.cgocallbackg1 + 204\r\n    frame #3: 0x04009e10 gotest`runtime.cgocallbackg + 128\r\n    frame #4: 0x0405ba50 gotest`runtime.cgocallback_gofunc + 108\r\n    frame #5: 0x0405c404 gotest`runtime.goexit + 4\r\n```\r\n\r\nThis is a slightly gnarlier version of #10043. In this instance, our EXC_BAD_ACCESS handler isn't be activated because the cgo callback is being run on a foreign thread. For foreign threads we have never had an opportunity to grab the mach_task_port.\r\n\r\nOne potential solution is to steal the pthread_create symbol and register the task port then.",
	"user": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-19T16:49:05Z",
	"updated_at": "2015-03-19T16:53:10Z"
}
