{
	"id": 51281701,
	"number": 4142,
	"state": "closed",
	"title": "spec: does append use memmove like copy?",
	"body": "\u003cpre\u003eFrom a discussion on golang-nuts.\n\nThe spec defines that copy behaves as C's memmove, so that\n    copy(x[1:], x[2:])\n    x = x[:len(x)-1]\nis a correct implementation of deleting x[1] from x.\n\nHowever, some people are writing\n    x = append(x[:1], x[2:]...)\nwhich apparently works too, but I don't believe the spec guarantees this. Should we say\nsomething about append where the source and destination overlap?\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:22:00Z",
	"created_at": "2012-09-24T03:33:26Z",
	"updated_at": "2016-06-24T22:25:26Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
