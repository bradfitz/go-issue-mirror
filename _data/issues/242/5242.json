{
	"id": 51283337,
	"number": 5242,
	"state": "closed",
	"title": "cmd/cgo: panic on type with bit fields",
	"body": "\u003cpre\u003eBefore filing a bug, please check whether it has been fixed since the\nlatest release. Search the issue tracker and check that you're running the\nlatest version of Go:\n\nRun \u0026quot;go version\u0026quot; and compare against\n\u003ca href=\"http://golang.org/doc/devel/release.html\"\u003ehttp://golang.org/doc/devel/release.html\u003c/a\u003e  If a newer version of Go exists,\ninstall it and retry what you did to reproduce the problem.\n\nThanks.\n\nWhat steps will reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\nAttempt to compile the following:\n\u003ca href=\"http://play.golang.org/p/VOH5glwcTB\"\u003ehttp://play.golang.org/p/VOH5glwcTB\u003c/a\u003e\n\n\nWhat is the expected output?\nExecutable program\n\nWhat do you see instead?\n# command-line-arguments\npanic: runtime error: integer divide by zero\n[signal 0x8 code=0x1 addr=0x41d114 pc=0x41d114]\n\ngoroutine 1 [running]:\nmain.(*Package).structType(0xf84007e000, 0xf84008c180, 0xf8400d9190, 0xc, 0xf840062201,\n...)\n\t/usr/local/go/src/cmd/cgo/out.go:201 +0xda9\nmain.(*Package).writeOutputFunc(0xf84007e000, 0xf8400d32c8, 0xf84008c180,\n0xa732500000005, 0xf84008c180, ...)\n\t/usr/local/go/src/cmd/cgo/out.go:403 +0x218\nmain.(*Package).writeOutput(0xf84007e000, 0xf84006ac60, 0x7fff47f93a39,\n0x6570797400000006, 0x2fffffffff, ...)\n\t/usr/local/go/src/cmd/cgo/out.go:381 +0x866\nmain.main()\n\t/usr/local/go/src/cmd/cgo/main.go:261 +0xe40\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n\t/usr/local/go/src/pkg/runtime/proc.c:221\n\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nLinux\n\nWhich version are you using?  (run 'go version')\ngo version go1.0.3 (but confirmed crash on recent tip by minux)\n\nPlease provide any additional information below.\nIt seems that the alignment guessed by CGO for the struct with only bit fields in it is\n0.  This is a problem if ever you are using a third party library that has types with\nbit fields in it (even if you don't want to access those fields from your go code).\u003c/pre\u003e",
	"user": {
		"login": "gjemiller",
		"id": 10053572,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 10,
	"closed_at": "2014-12-08T10:28:13Z",
	"created_at": "2013-04-08T20:33:20Z",
	"updated_at": "2016-06-24T22:37:36Z"
}
