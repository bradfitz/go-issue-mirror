{
	"id": 88871595,
	"number": 11242,
	"state": "closed",
	"title": "bufio: ScanLines does not scan os.Stdin if line is more than 65536 chars",
	"body": "The following code fails to read the line passed to stdin if the line is more too long:\r\n\r\n``` go\r\npackage main\r\n\r\nimport (\r\n\t\"bufio\"\r\n\t\"fmt\"\r\n\t\"os\"\r\n)\r\n\r\nfunc main() {\r\n\ts := bufio.NewScanner(bufio.NewReader(os.Stdin))\r\n\ts.Split(bufio.ScanLines)\r\n\ts.Scan()\r\n\tfmt.Printf(\"%v\\n\", len(s.Text()))\r\n}\r\n```\r\n\r\nThe expected output is line length, the actual output is 0. `golang-issue.txt` is file with single very long line. If the line is 65536 or less this code works ok, if it has more characters, the code fails.\r\n\r\nSurprisingly, the second call to Scan() returns the complete line.\r\n\r\n1. go version go1.4.2 darwin/amd64\r\n2. OSX 10.10.3 (14D136)\r\n3. Program is started as follows: `go fmt golang-issue.go \u0026\u0026 go run golang-issue.go \u003c golang-issue.txt`",
	"user": {
		"login": "AlexAtNet",
		"id": 914986,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2015-06-17T00:12:24Z",
	"created_at": "2015-06-17T00:08:39Z",
	"updated_at": "2016-06-25T02:11:19Z"
}
