{
	"id": 67659426,
	"body": "The style you've got there lgtm.\r\n\r\nAfter a bit more reading, I realize there is a small complication in this project: Android doesn't actually have an OpenAL library. It supports OpenSL.\r\n\r\nThis means by default there is no common audio API between platforms. However, the OpenAL software implementation is LGPL, compiles on android, and includes an OpenSL backend. So we can still have an al library that works on both, it just needs to include the C sources for OpenAL.\r\n\r\nTo keep licensing simple for vendoring, I am trying to keep the golang.org/x/mobile repository entirely under the Go license. So the package that includes OpenAL sources will need to live in another repository. It is however, completely find for the mobile repository to have a dependency on the other repository, so if there is any higher-level API you are exploring for Go (along the lines of ALUT maybe?), I'd suggest a layout something like:\r\n\r\ngithub.com/golang/al: LGPL AL and basic cgo bindings (using build tags so it directly uses the OpenAL implementation on darwin)\r\ngolang.org/x/mobile/al: depends on github.com/golang/al and provides a higher-level API",
	"user": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-19T16:20:20Z",
	"updated_at": "2014-12-19T16:20:20Z"
}
