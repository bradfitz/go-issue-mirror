{
	"id": 51276347,
	"number": 328,
	"state": "closed",
	"title": "Allow a semicolon after a package declaration",
	"body": "by **parenthephobia**:\n\n\u003cpre\u003e(Almost*) all statements except the package statement can be followed by an \noptional semicolon.\n\nThis makes the package statement an oddity for programmers who enjoy using \nsemicolons, since of course they aren't allowed to use one there.\n\nChanging the parser to allow an optional semicolon is a conservative change \nwhich does not change the meaning of any Go program which is currently \nsyntactically valid.\n\nThe behavior of those programs which would be made valid by the change -- \ni.e. those programs which terminated the package statement with a semicolon \n-- would be obvious and unsurprising to anybody who knows Go.\n\nIt does mean changing gofmt; the semicolon is regarded as an error. It \nwould simply omit the semicolon, as it does for other top-level \ndeclarations.\n\nI've submitted a tiny patch which changes the gc parser: \n\u003ca href=\"http://golang.org/cl/160055\"\u003ehttp://golang.org/cl/160055\u003c/a\u003e\n\nI overlooked gofmt, so that needs to be fixed up first, something I'm happy \nto have a go at myself.\n\n* A defensive weasel word. I think it's true of all statements but package, \nbut could easily be wrong. I think it _should_ be true of all statements, \nthough.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "LanguageChange"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2014-12-08T10:04:09Z",
	"created_at": "2009-11-24T22:36:57Z",
	"updated_at": "2016-06-24T19:08:25Z"
}
