{
	"id": 131934849,
	"number": 14249,
	"state": "closed",
	"title": "encoding/binary uses wrong size for struct while using Read",
	"body": "I have a struct layed out like this\r\n`type exitStatus struct {\r\n\tTermination uint16\r\n\tExit        uint16\r\n}\r\n\r\ntype utmp struct {\r\n\tType       uint16\r\n\tPid        uint32\r\n\tLine       [UT_LINESIZE]uint8\r\n\tID         [4]uint8\r\n\tUser       [UT_NAMESIZE]uint8\r\n\tHost       [UT_HOSTSIZE]uint8\r\n\tExitStatus exitStatus\r\n\tSession    uint32\r\n\tSec        uint32\r\n\tUsec       uint32\r\n\tAddr6      [4]uint32\r\n\t_          [20]uint8\r\n}`\r\n\r\nI am trying to use encoding/binary Read to read data into the utmp struct, but for some reason it treats that struct as a size of 382 (dataSize() in encoding/binary.go:339 returns 382) for data size which leads the Read function to read it wrong.\r\n\r\nreflect.TypeOf(utmp).Size() and unsafe.Sizeof() gives me size 384 though. \r\n\r\nI am using Go 1.6beta2 on Linux AMD64.",
	"user": {
		"login": "qeedquan",
		"id": 11146006,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-02-07T04:52:22Z",
	"created_at": "2016-02-07T04:44:01Z",
	"updated_at": "2016-02-07T05:31:26Z"
}
