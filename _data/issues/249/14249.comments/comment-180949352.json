{
	"id": 180949352,
	"body": "Two bytes of padding exist between Type and Pid\n\n\u003e On 7 Feb 2016, at 15:44, Quan Tran \u003cnotifications@github.com\u003e wrote:\n\u003e \n\u003e I have a struct layed out like this\n\u003e `type exitStatus struct {\n\u003e Termination uint16\n\u003e Exit uint16\n\u003e }\n\u003e \n\u003e type utmp struct {\n\u003e Type uint16\n\u003e Pid uint32\n\u003e Line [UT_LINESIZE]uint8\n\u003e ID [4]uint8\n\u003e User [UT_NAMESIZE]uint8\n\u003e Host [UT_HOSTSIZE]uint8\n\u003e ExitStatus exitStatus\n\u003e Session uint32\n\u003e Sec uint32\n\u003e Usec uint32\n\u003e Addr6 [4]uint32\n\u003e _ [20]uint8\n\u003e }`\n\u003e \n\u003e I am trying to use encoding/binary Read to read data into the utmp struct, but for some reason it treats that struct as a size of 382 (dataSize() in encoding/binarygo:339 returns 382) for data size which leads the Read function to read it wrong\n\u003e \n\u003e reflectTypeOf(utmp)Size() and unsafeSizeof() gives me size 384 though\n\u003e \n\u003e I am using Go 16beta2 on Linux AMD64\n\u003e \n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub.\n\u003e \n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-07T05:31:26Z",
	"updated_at": "2016-02-07T05:31:26Z"
}
