{
	"id": 239297434,
	"body": "One idea is to use the same naming conventions that we have in glibc, for consistency (i.e. glibc/sysdeps/powerpc/dl-procinfo.c:_dl_powerpc_cap_flags). This way, the names match the ones shown when LD_SHOW_AUXV=1:\r\n\r\nAT_HWCAP:        vsx arch_2_06 dfp ic_snoop smt mmu fpu altivec ppc64 ppc32\r\nAT_HWCAP2:         tar isel ebb dscr htm arch_2_07\r\n\r\nQuerying for the capabilities should take into account whether an arch has a HWCAP2 or not, because there is no way to know (a priori) if a capability bit is in HWCAP or HWCAP2. My suggestion here is to use a concatenated 64-bit HWCAP+HWCAP2 mask, so we can easily map the bits to the capabilities. That's what we did in glibc/gcc to implement __builtin_cpu_is() / __builtin_cpu_supports() for Power.",
	"user": {
		"login": "ceseo",
		"id": 7077164,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-11T21:24:42Z",
	"updated_at": "2016-08-11T21:24:42Z"
}
