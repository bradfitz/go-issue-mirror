{
	"id": 66060178,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1 by **mpimenov@google.com**:\n\n\u003cpre\u003eI tried to make this example as small as possible:\n\n     1\tpackage main\n     2\t\n     3\ttype Header int\n     4\ttype Body struct {\n     5\t\tHeader\n     6\t}\n     7\t\n     8\tfunc f(b interface{}) {\n     9\t}\n    10\t\n    11\tfunc (h Header) String() string {\n    12\t\tf(h)\n    13\t\ttype X Header\n    14\t\tvar x, y X\n    15\t\tx = X(h)\n    16\t\n    17\t\ty = x\n    18\t\tx = y\n    19\t\treturn \"\"\n    20\t}\n\n\nIt compiles if you switch lines 12 and 13. Looks like the compiler is trying to\ncreate the String() method for (*X) by looking at String() method for (X) the same \nway as it does for the String() method of Header to satisfy\n\u003ca href=\"http://golang.org/doc/go_spec.html#Method_sets\"\u003ehttp://golang.org/doc/go_spec.html#Method_sets\u003c/a\u003e,\nbut X has no method String() so the compiler fails.\n\nThe example can be made even smaller but I doubt it should be:\n\n     1\tpackage main\n     2\t\n     3\ttype Header int\n     4\ttype Body struct {\n     5\t\tHeader\n     6\t}\n     7\t\n     8\tfunc f(b interface{}) {\n     9\t}\n    10\t\n    11\tfunc (h Header) String() string {\n    12\t\tf(h)\n    13\t\ttype X Header\n    14\t\tx := X(h)\n    15\t\treturn string(x)\n    16\t}\n\nI'm using 6g version weekly.2011-11-18 10578+\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-11-25T10:11:13Z",
	"updated_at": "2014-12-08T10:13:20Z"
}
