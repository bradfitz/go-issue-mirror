{
	"id": 66091418,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3 by **rayneolivetti**:\n\n\u003cpre\u003eWith count = count + i\n\n0019 (tmp.go:11) JMP     ,21\n0020 (tmp.go:11) INCQ    ,AX\n0021 (tmp.go:11) CMPQ    AX,$1000000000\n0022 (tmp.go:11) JGE     $0,26\n0023 (tmp.go:12) ADDQ    AX,CX\n0024 (tmp.go:12) MOVQ    CX,count+-96(SP)\n0025 (tmp.go:11) JMP     ,20\n\n\nWith count += i\n\n0018 (tmp.go:11) JMP     ,20\n0019 (tmp.go:11) INCQ    ,AX\n0020 (tmp.go:11) CMPQ    AX,$1000000000\n0021 (tmp.go:11) JGE     $0,24\n0022 (tmp.go:13) ADDQ    AX,count+-96(SP)\n0023 (tmp.go:11) JMP     ,19\n\nIt looks quite bizarre that the above version runs much faster. clang chooses the faster\noption regardless of the syntax for increment.\n\n#include \u0026lt;stdint.h\u0026gt;\n\nvoid f() {\n        volatile int64_t count = 0;\n        int64_t i;\n\n        for(i=0; i\u0026lt;1000000000; i++) {\n        //      count += i;\n             count = count + i;\n        }\n}\n\nI used volatile to emulate gc's behavior.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-02-25T06:23:47Z",
	"updated_at": "2014-12-22T06:32:42Z"
}
