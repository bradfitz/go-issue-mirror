{
	"id": 81959269,
	"body": "I've been experimenting with a naive accelerometer implementation last week.\r\n\r\n```\r\nfunc StartAccelerometer(fn func(deltaX, deltaY, deltaZ float64)) error\r\nfunc StopAccelerometer()\r\n```\r\n\r\nThe average number of samples I can get via calling ALooper_pollOnce on Android is 1-2 -- Go to C is also pretty expensive in this case :-/ We should target 10-20 samples per sec. As I was working on optimizations, I was able to talk to some game developers for feedback. They suggested me to the switch to a sync API and let most of the optimization to be done by the users in their frame loop.\r\n\r\nA typical game looks like:\r\n```\r\nmain() {\r\n  for {\r\n     // retrieve state\r\n     // draw stuff\r\n     // update other stuff\r\n     // flush\r\n  }\r\n}\r\n```\r\nGiving them sync APIs allows them to sync the update rate of the accelerometer data with their frame rate, e.g. they can ask for new data at every n number of frames.",
	"user": {
		"login": "rakyll",
		"id": 108380,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-16T21:57:11Z",
	"updated_at": "2015-03-16T21:57:11Z"
}
