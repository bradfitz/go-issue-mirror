{
	"id": 173558527,
	"number": 16893,
	"state": "open",
	"title": "runtime: include panic/throw logs in core dumps",
	"body": "When a Go program crashes with GOTRACEBACK=crash, the OS creates a core dump. I'd like that core dump to include the human-readable \"panic\" or \"fatal error\" messages and stack tracesâ€”or at least the first N kB of them.\r\n\r\nThis could be done by writing the first ~64kB of errors and stack traces to a pre-allocated global slice in the runtime package in addition to writing to stderr.\r\n\r\nNo user code would be involved, so this is distinct from e.g. #16340. I'm particularly interested in being able to reliably collect not only \"panic\" crashes (from runtime.gopanic), but also \"fatal error\" crashes (from runtime.throw).\r\n\r\nThere are more tools being built around core dumps (#16410), so it would be good to collect all information relevant to crashes in that one place (https://github.com/golang/go/issues/16410#issuecomment-236983468)\r\n\r\nAlternatives include:\r\n\r\n1. Adding an API that allows user code to set the fd that's used for panic/throw logs (https://github.com/golang/go/issues/16340#issuecomment-232376520). This could end being a small change, though it would not catch problems with init functions in all packages.\r\n\r\n2. Consult a new environment variable (like GORACE's log_path option) which would provide a prefix for the name of a file where the runtime would write out the crash report. The cost of adding a new environment variable is high, and it looks like this problem can be resolved without it.",
	"user": {
		"login": "rhysh",
		"id": 230685,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		},
		{
			"name": "Proposal-Accepted"
		}
	],
	"comments": 1,
	"created_at": "2016-08-26T22:52:30Z",
	"updated_at": "2016-10-11T22:12:00Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	},
	"reactions": {
		"total_count": 5,
		"+1": 5
	}
}
