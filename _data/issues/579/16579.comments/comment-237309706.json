{
	"id": 237309706,
	"body": "@quentinmit Sure, no worries.\r\n\r\nWe can't presume there's a suitable `go` on the system and in the `$PATH` for the bootstrap process already so we fetch either the precompiled go 1.4.2 or 1.4.3 from golang's servers:\r\n```ruby\r\n  resource \"gobootstrap\" do\r\n    if MacOS.version \u003e :lion\r\n      url \"https://storage.googleapis.com/golang/go1.4.3.darwin-amd64.tar.gz\"\r\n      sha256 \"c360f195b6bc0eeb4ebd4d590e5a11be830ebb11f28eaa2da107047a8cae4c24\"\r\n    else\r\n      url \"https://storage.googleapis.com/golang/go1.4.2.darwin-amd64-osx10.6.tar.gz\"\r\n      sha256 \"da40e85a2c9bda9d2c29755c8b57b8d5932440ba466ca366c2a667697a62da4c\"\r\n    end\r\n  end\r\n```\r\n\r\nThat gets untarred into `buildpath/\"gobootstrap\"` where `buildpath` is something like `tmp/go-20160803-56029-1fdnf2a`, and `GOROOT_FINAL` \u0026 `GOROOT_BOOTSTRAP` are set to point there.\r\n\r\nWe then rebuild the precompiled package _(this feels possibly redundant)_, cd into the `src` directory for either the 1.6.3 or 1.7rc5 release depending on which one the user requested, reset the `GOROOT_FINAL` env to point to our `libexec` \u0026 build from source.\r\n\r\nAfter that's complete the bootstrap is removed \u0026 everything remaining installed into `HOMEBREW_PREFIX/Cellar/go/\u003cversion\u003e/libexec`, with the executables `go`, `gofmt` \u0026 `godoc` symlinked into `bin`.\r\n\r\nThe code blob for that process in the formula is:\r\n\u003cdetails\u003e\r\n\u003csummary\u003eblob\u003c/summary\u003e\r\n```ruby\r\n    # GOROOT_FINAL must be overidden later on real Go install\r\n    ENV[\"GOROOT_FINAL\"] = buildpath/\"gobootstrap\"\r\n\r\n    # build the gobootstrap toolchain Go \u003e=1.4\r\n    (buildpath/\"gobootstrap\").install resource(\"gobootstrap\")\r\n    cd \"#{buildpath}/gobootstrap/src\" do\r\n      system \"./make.bash\", \"--no-clean\"\r\n    end\r\n    # This should happen after we build the test Go, just in case\r\n    # the bootstrap toolchain is aware of this variable too.\r\n    ENV[\"GOROOT_BOOTSTRAP\"] = ENV[\"GOROOT_FINAL\"]\r\n\r\n    cd \"src\" do\r\n      ENV[\"GOROOT_FINAL\"] = libexec\r\n      ENV[\"GOOS\"]         = \"darwin\"\r\n      ENV[\"CGO_ENABLED\"]  = build.with?(\"cgo\") ? \"1\" : \"0\"\r\n      system \"./make.bash\", \"--no-clean\"\r\n    end\r\n\r\n    (buildpath/\"pkg/obj\").rmtree\r\n    rm_rf \"gobootstrap\" # Bootstrap not required beyond compile.\r\n    libexec.install Dir[\"*\"]\r\n    bin.install_symlink Dir[\"#{libexec}/bin/go*\"]\r\n```\r\n\u003c/details\u003e",
	"user": {
		"login": "DomT4",
		"id": 6998367,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-03T17:36:43Z",
	"updated_at": "2016-08-03T17:36:43Z"
}
