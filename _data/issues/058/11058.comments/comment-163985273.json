{
	"id": 163985273,
	"body": "On Fri, Dec 11, 2015 at 8:40 AM Ian Lance Taylor \u003cnotifications@github.com\u003e\r\nwrote:\r\n\r\n\u003e On Fri, Dec 11, 2015 at 5:09 AM, Christopher Nelson \u003c\r\n\u003e notifications@github.com\u003e wrote:\r\n\u003e\r\n\u003e \u003e Perhaps someone can clarify some confusion for me.\r\n\u003e \u003e\r\n\u003e \u003e In the file cmd/link/internal/ld/data.go there is a whole block of code\r\n\u003e \u003e which creates an section called .init_array, and later writes values into\r\n\u003e \u003e this section. I added some diagnostics which show that this code is\r\n\u003e called\r\n\u003e \u003e on Windows as well.\r\n\u003e \u003e\r\n\u003e \u003e My question is, where does the section called \".init_array\" go after it\r\n\u003e is\r\n\u003e \u003e created in data.go?\r\n\u003e \u003e\r\n\u003e\r\n\u003e Well, on ELF, it gets written to the file in a section called\r\n\u003e \".init_array\", and it gets put in the DT_INIT_ARRAY dynamic tag. I'm not\r\n\u003e sure what happens on PE.\r\n\u003e\r\n\u003e\r\nYes, I understand that. My confusion arises from the fact that I don't see\r\nany platform-specific code in data.go. I understand that the data \"should\"\r\nand somehow eventually does make it into the .init_array section on ELF. I\r\nwould like to perform the same step for PE on Windows, except redirect the\r\ndata to the .ctors section.\r\n\r\nIn other words, I see the code here:\r\nhttps://github.com/golang/go/blob/master/src/cmd/link/internal/ld/data.go#L1333\r\nThis gets called on Windows and Linux, but I don't understand how that\r\nactually gets picked up by the ELF writer. It certainly doesn't get picked\r\nup by the PE writer.\r\n\r\nI also see:\r\nhttps://github.com/golang/go/blob/master/src/cmd/link/internal/ld/data.go#L1015\r\nThat also gets called on Windows and seems to generate the data that I want\r\nto write into the .ctors section in the PE file for Windows. However, again\r\nI don't actually understand \"where\" the data is going, or how to get back\r\nto it in Asmbpe() so that I can write it into the .ctors section.\r\n\r\nI've looked through the ELF writer, and I see that it adds a section name\r\ncalled .init_array, but it is not clear to me how that actually gets\r\nconnected to the section with the same name made in data.go.\r\n\r\nAfter running some experiments, it appears that gcc on Windows exclusively\r\nuses the .ctors data section for this kind of thing. There doesn't appear\r\nto be an .init_array concept, and frankly for static libraries I think this\r\nis completely compiler runtime related. For gcc, the .ctors section seems\r\nlike it will work. For MSVC there may be some other mechanism, but that's\r\nnot really important to me at the moment. If anybody reading this knows\r\nbetter I would absolutely like to hear it.\r\n\r\n",
	"user": {
		"login": "nadiasvertex",
		"id": 2034108,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-11T16:37:58Z",
	"updated_at": "2015-12-11T16:47:54Z"
}
