{
	"id": 162567246,
	"body": "Great! I'll look at it. I suspect that the challenge is mostly in knowing\nwhere the linker is on Windows.\n\nOn Mon, Dec 7, 2015 at 10:58 AM Ian Lance Taylor \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e @nadiasvertex \u003chttps://github.com/nadiasvertex\u003e The main thing is to make\n\u003e the function hostlink in cmd/link/internal/ld/lb.go do the right thing on\n\u003e Windows. On Darwin it invokes theC linker with -dynamiclib. On GNU/Linux it\n\u003e invokes the C linker with -Wl,-Bsymbolic -Wl,-z,relro -shared\n\u003e -Wl,-z,nodelete.\n\u003e\n\u003e Basically, if you produce a list of commands that will turn a Windows\n\u003e object file into a Windows DLL, change hostlink to invokes those commands.\n\u003e\n\u003e That said, it's possible that Windows needs to know the list of symbols\n\u003e that are callable from outside the DLL. It used to need to know that, but\n\u003e it's been many years since I looked at it. If you need that list of\n\u003e symbols, it's available by looping over the symbol table and looking for\n\u003e the Cgoexport field having a CgoExportStatic flag.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/11058#issuecomment-162566183\u003e.\n\u003e\n",
	"user": {
		"login": "nadiasvertex",
		"id": 2034108,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-07T16:01:18Z",
	"updated_at": "2015-12-07T16:01:18Z"
}
