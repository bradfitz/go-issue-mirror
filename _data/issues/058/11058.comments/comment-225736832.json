{
	"id": 225736832,
	"body": "This doesn't work in stock go yet. I have a patch which makes it work for a\nsingle DLL but I haven't done the now general solution yet.\n\nOn Mon, Jun 13, 2016, 5:48 PM jonywtf \u003cnotifications@github.com\u003e wrote:\n\n\u003e Hi, help me please!\n\u003e i try to use golang dll as a plugin for C++ application.\n\u003e\n\u003e simple C++ app:\n\u003e\n\u003e #include \u003ciostream\u003e\n\u003e #include \u003cchrono\u003e\n\u003e #include \u003cthread\u003e\n\u003e #include \u003csstream\u003e\n\u003e #include \u003cwindows.h\u003e\n\u003e typedef long long GoInt64;typedef GoInt64 GoInt;typedef GoInt(__stdcall *DoubleIt_Type)(GoInt i);\n\u003e unsigned int loop = 0;bool dll_test() {\n\u003e     HINSTANCE hGetProcIDDLL = LoadLibrary(\"C:\\\\temp\\\\tarantool_dll\\\\libdoubler.dll\");\n\u003e     if (!hGetProcIDDLL) {\n\u003e         std::cout \u003c\u003c \"could not load the dynamic library\" \u003c\u003c std::endl;\n\u003e         return false;\n\u003e     }\n\u003e     std::this_thread::sleep_for(std::chrono::seconds(3));\n\u003e\n\u003e     DoubleIt_Type DoubleIt = (DoubleIt_Type)GetProcAddress(hGetProcIDDLL, \"DoubleIt\");\n\u003e     if (!DoubleIt) {\n\u003e         std::cout \u003c\u003c \"could not locate the DoubleIt function\" \u003c\u003c std::endl;\n\u003e         return false;\n\u003e     }\n\u003e\n\u003e     std::cout \u003c\u003c \"loop = \" \u003c\u003c loop \u003c\u003c \"    DoubleIt returned \" \u003c\u003c DoubleIt(21) \u003c\u003c std::endl;\n\u003e\n\u003e     FreeLibrary(hGetProcIDDLL);\n\u003e     std::this_thread::sleep_for(std::chrono::seconds(3));\n\u003e     loop++;\n\u003e     return true;\n\u003e }\n\u003e int main() {\n\u003e     while (true) {\n\u003e         dll_test();\n\u003e     }\n\u003e     return EXIT_SUCCESS;\n\u003e }\n\u003e\n\u003e \"hello, world\" golang dll code:\n\u003e\n\u003e package main\n\u003e import (\n\u003e     \"C\"\n\u003e     \"log\"\n\u003e     )\n\u003e //export DoubleItfunc DoubleIt(x int) int {\n\u003e     log.Println(\"DoubleIt: \", x)\n\u003e     return x * 2\n\u003e }\n\u003e func main() {\n\u003e\n\u003e }\n\u003e\n\u003e simple build.bat for golang dll:\n\u003e\n\u003e cd C:\\temp\\tarantool_dllset GOROOT=C:\\go-win-shared-1.6\\set GOARCH=amd64set GOPATH=C:\\temp\\tarantool_dll\\app:: C:\\TDM-GCC-64\\mingwvars.bat\n\u003e C:\\go-win-shared-1.6\\bin\\go build -o libdoubler.dll -buildmode=c-shared main\n\u003e\n\u003e when i run C++ code with vs2015 in debug, x64 mode my app fails with\n\u003e something like\n\u003e\n\u003e Exception thrown at 0x0000000067255CED in test_plugin.exe: 0xC0000005: Access violation executing location 0x0000000067255CED.\n\u003e\n\u003e after FreeLibrary(hGetProcIDDLL); but an exception was thrown not in Main\n\u003e Thread\n\u003e\n\u003e console log:\n\u003e\n\u003e 2016/06/14 00:21:25 DoubleIt:  21\n\u003e loop = 0    DoubleIt returned 42\n\u003e\n\u003e for more complex Golang code i get \"stable\" work for 10-15 loops\n\u003e i used Telegram bot api (http://github.com/Syfaro/telegram-bot-api\n\u003e \u003chttps://github.com/Syfaro/telegram-bot-api\u003e) for logs, but i see that\n\u003e memory of my process increases every loop. And after 10-15 loops exception\n\u003e killing my app.\n\u003e\n\u003e â€”\n\u003e You are receiving this because you were mentioned.\n\u003e\n\u003e Reply to this email directly, view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/11058#issuecomment-225718860\u003e, or mute\n\u003e the thread\n\u003e \u003chttps://github.com/notifications/unsubscribe/AB8JvGrwvJCtziNkanWB1FnatQvoV34vks5qLdAjgaJpZM4E3dB1\u003e\n\u003e .\n\u003e\n",
	"user": {
		"login": "nadiasvertex",
		"id": 2034108,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 5,
		"heart": 5
	},
	"created_at": "2016-06-13T23:20:03Z",
	"updated_at": "2016-06-13T23:20:03Z"
}
