{
	"id": 66081290,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3 by **martisch@uos.de**:\n\n\u003cpre\u003ei try to explain it:\n\nsee pointer addresses in \u003ca href=\"http://play.golang.org/p/viY64hWXiT\"\u003ehttp://play.golang.org/p/viY64hWXiT\u003c/a\u003e\n\nfunc New() *List { return new(List).Init() }\n\nwill give back a pointer to List that is also the same address as the root element.\n\nwhen dereferencing lista = *New() we throw away knowledge of that pointer in the main\nfunction and create a local copy of the list struct. \n\nthe local address of lista struct is taken for the l in func (l *List) PushFront then.\nhowever when insertValue in PushFront we dont want that address of the local struct but\nthe pointer address to the List struct that was used in Init()!\n\nso fix i guess is to make list.root a pointer to the root element where a local copy\ndoes not hurt and do return l.insertValue(v, l.root) in PushFront and accordingly change\nthe other functions?\n\nroot is an internal data field so changing its type should not effect users of the list\npackage.\n\ni would be happy to build a patch and test it if the above fix sounds right. \n(Do have to get accompanied to submitting patches to the golang project first)\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-19T19:27:49Z",
	"updated_at": "2014-12-08T10:31:23Z"
}
