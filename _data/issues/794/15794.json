{
	"id": 156193578,
	"number": 15794,
	"state": "closed",
	"title": "fatal error: invalid stack pointer",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n```\r\ngo version go1.6.2 windows/386\r\n```\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n```\r\nset GOARCH=386\r\nset GOBIN=\r\nset GOEXE=.exe\r\nset GOHOSTARCH=386\r\nset GOHOSTOS=windows\r\nset GOOS=windows\r\nset GOPATH=C:\\Users\\user\\go\r\nset GORACE=\r\nset GOROOT=C:\\Go\r\nset GOTOOLDIR=C:\\Go\\pkg\\tool\\windows_386\r\nset GO15VENDOREXPERIMENT=1\r\nset CC=gcc\r\nset GOGCCFLAGS=-m32 -mthreads -fmessage-length=0\r\nset CXX=g++\r\nset CGO_ENABLED=1\r\n```\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n\r\nI compiled and ran the following program with proprietarydll.dll. I should provide proprietarydll.dll to reproduce the error, but it is a proprietary library, so I can't. I'm sorry\r\n\r\n**crash.go**\r\n```Go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"runtime\"\r\n)\r\n\r\n/*\r\n#cgo LDFLAGS: -L. -lproprietarydll\r\n#cgo CFLAGS: -I .\r\n#include \"proprietarydll.h\"\r\n*/\r\nimport \"C\"\r\n\r\nfunc main() {\r\n\tif status, err := C.funcA(); status != C.SUCCESS || err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\thandleB, err := C.funcB()\r\n\tif handleB == nil || err != nil {\r\n\t\tif err != nil {\r\n\t\t\tlog.Fatal(err)\r\n\t\t}\r\n\t\tlog.Fatal(\"handleB is nil\")\r\n\t}\r\n\tfmt.Println(\"before:\\tGC(funcB)\", handleB)\r\n\truntime.GC() // \u003c- cause no error\r\n\tfmt.Println(\"after:\\tGC(funcB)\", handleB)\r\n\r\n\thandleC, err := C.funcC(handleB)\r\n\tif handleC == nil || err != nil {\r\n\t\tif err != nil {\r\n\t\t\tlog.Fatal(\"handleC is nil\")\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\tfmt.Println(\"before:\\tGC(funcC)\", handleC)\r\n\truntime.GC() // \u003c- cause error\r\n\tfmt.Println(\"after:\\tGC(funcC)\", handleC)\r\n}\r\n```\r\n**proprietarydll.h** \r\n(Function names are modified, but types of arguments and return values are same as the original.)\r\n```C\r\n#include \u003cwinsock2.h\u003e\r\n#include \u003cwindows.h\u003e\r\n\r\n// dummy value\r\n#define SUCCESS 12345\r\n\r\n// funcA is called to initialize this dll.\r\nDWORD funcA();\r\n\r\n// funcB returns a handle for funcC\r\nHANDLE funcB();\r\n\r\n// funcC requires a handle returned by funcB\r\nHANDLE funcC(HANDLE);\r\n```\r\n\r\n4. What did you expect to see?\r\nI expected that the program is finished without any error.\r\n\r\n5. What did you see instead?\r\nI saw the following error\r\n```\r\nbefore:\tGC(funcB) 0xe630020\r\nafter:\tGC(funcB) 0xe630020\r\nbefore:\tGC(funcC) 0x1a0\r\nruntime: bad pointer in frame main.main at 0x222cdf0c: 0x1a0\r\nfatal error: invalid stack pointer\r\n\r\nruntime stack:\r\nruntime.throw(0x4eeb10, 0x15)\r\n\tC:/Go/src/runtime/panic.go:547 +0x7f fp=0x2a2fa0c sp=0x2a2fa00\r\nruntime.adjustpointers(0x222cdf0c, 0x2a2facc, 0x2a2fcac, 0x50e784)\r\n\tC:/Go/src/runtime/stack.go:579 +0x235 fp=0x2a2fa80 sp=0x2a2fa0c\r\nruntime.adjustframe(0x2a2fc3c, 0x2a2fcac, 0x2a2fb01)\r\n\tC:/Go/src/runtime/stack.go:644 +0x163 fp=0x2a2fae8 sp=0x2a2fa80\r\nruntime.gentraceback(0x44aa80, 0x222cdcf8, 0x0, 0x222b8000, 0x0, 0x0, 0x7fffffff, 0x506e60, 0x2a2fcac, 0x0, ...)\r\n\tC:/Go/src/runtime/traceback.go:369 +0xbce fp=0x2a2fc68 sp=0x2a2fae8\r\nruntime.copystack(0x222b8000, 0x1000)\r\n\tC:/Go/src/runtime/stack.go:759 +0x161 fp=0x2a2fda0 sp=0x2a2fc68\r\nruntime.shrinkstack(0x222b8000)\r\n\tC:/Go/src/runtime/stack.go:1026 +0x122 fp=0x2a2fdb8 sp=0x2a2fda0\r\nruntime.markroot(0x5)\r\n\tC:/Go/src/runtime/mgcmark.go:155 +0x23e fp=0x2a2fe0c sp=0x2a2fdb8\r\nruntime.gcDrain(0x2a2fe44, 0x0)\r\n\tC:/Go/src/runtime/mgcmark.go:812 +0x26a fp=0x2a2fe34 sp=0x2a2fe0c\r\nruntime.gchelper()\r\n\tC:/Go/src/runtime/mgc.go:1806 +0x87 fp=0x2a2fe64 sp=0x2a2fe34\r\nruntime.stopm()\r\n\tC:/Go/src/runtime/proc.go:1541 +0x10c fp=0x2a2fe74 sp=0x2a2fe64\r\nruntime.findrunnable(0x222b4a00, 0x0)\r\n\tC:/Go/src/runtime/proc.go:1976 +0x62a fp=0x2a2febc sp=0x2a2fe74\r\nruntime.schedule()\r\n\tC:/Go/src/runtime/proc.go:2075 +0x202 fp=0x2a2fedc sp=0x2a2febc\r\nruntime.park_m(0x222b84e0)\r\n\tC:/Go/src/runtime/proc.go:2140 +0x163 fp=0x2a2fef0 sp=0x2a2fedc\r\nruntime.mcall(0x933658)\r\n\tC:/Go/src/runtime/asm_386.s:255 +0x47 fp=0x2a2fef8 sp=0x2a2fef0\r\n\r\ngoroutine 1 [copystack]:\r\nruntime.systemstack_switch()\r\n\tC:/Go/src/runtime/asm_386.s:267 fp=0x222cdcfc sp=0x222cdcf8\r\nruntime.gcMarkTermination()\r\n\tC:/Go/src/runtime/mgc.go:1182 +0x121 fp=0x222cdec4 sp=0x222cdcfc\r\nruntime.gcStart(0x2, 0x222c2000)\r\n\tC:/Go/src/runtime/mgc.go:1018 +0x3f4 fp=0x222cdee4 sp=0x222cdec4\r\nruntime.GC()\r\n\tC:/Go/src/runtime/mgc.go:840 +0x26 fp=0x222cdef0 sp=0x222cdee4\r\nmain.main()\r\n\tC:/dev/crash/crash.go:40 +0x3b4 fp=0x222cdfa8 sp=0x222cdef0\r\nruntime.main()\r\n\tC:/Go/src/runtime/proc.go:188 +0x234 fp=0x222cdfd0 sp=0x222cdfa8\r\nruntime.goexit()\r\n\tC:/Go/src/runtime/asm_386.s:1585 +0x1 fp=0x222cdfd4 sp=0x222cdfd0\r\n\r\ngoroutine 17 [syscall, locked to thread]:\r\nruntime.goexit()\r\n\tC:/Go/src/runtime/asm_386.s:1585 +0x1 fp=0x222cbfd4 sp=0x222cbfd0\r\n\r\ngoroutine 2 [force gc (idle)]:\r\nruntime.gopark(0x506f84, 0x55b488, 0x4e7b40, 0xf, 0x14, 0x1)\r\n\tC:/Go/src/runtime/proc.go:262 +0x130 fp=0x222befa4 sp=0x222bef90\r\nruntime.goparkunlock(0x55b488, 0x4e7b40, 0xf, 0x222b8014, 0x1)\r\n\tC:/Go/src/runtime/proc.go:268 +0x4b fp=0x222befc0 sp=0x222befa4\r\nruntime.forcegchelper()\r\n\tC:/Go/src/runtime/proc.go:229 +0xaa fp=0x222befd8 sp=0x222befc0\r\nruntime.goexit()\r\n\tC:/Go/src/runtime/asm_386.s:1585 +0x1 fp=0x222befdc sp=0x222befd8\r\ncreated by runtime.init.4\r\n\tC:/Go/src/runtime/proc.go:218 +0x2a\r\n\r\ngoroutine 3 [GC sweep wait]:\r\nruntime.gopark(0x506f84, 0x55b500, 0x4e70b0, 0xd, 0x41c914, 0x1)\r\n\tC:/Go/src/runtime/proc.go:262 +0x130 fp=0x222bff98 sp=0x222bff84\r\nruntime.goparkunlock(0x55b500, 0x4e70b0, 0xd, 0x14, 0x1)\r\n\tC:/Go/src/runtime/proc.go:268 +0x4b fp=0x222bffb4 sp=0x222bff98\r\nruntime.bgsweep(0x222aa0c0)\r\n\tC:/Go/src/runtime/mgcsweep.go:63 +0xa0 fp=0x222bffd0 sp=0x222bffb4\r\nruntime.goexit()\r\n\tC:/Go/src/runtime/asm_386.s:1585 +0x1 fp=0x222bffd4 sp=0x222bffd0\r\ncreated by runtime.gcenable\r\n\tC:/Go/src/runtime/mgc.go:191 +0x52\r\n\r\ngoroutine 4 [finalizer wait]:\r\nruntime.gopark(0x506f84, 0x56b1e8, 0x4e7aa0, 0xe, 0x14, 0x1)\r\n\tC:/Go/src/runtime/proc.go:262 +0x130 fp=0x222c0f84 sp=0x222c0f70\r\nruntime.goparkunlock(0x56b1e8, 0x4e7aa0, 0xe, 0x14, 0x1)\r\n\tC:/Go/src/runtime/proc.go:268 +0x4b fp=0x222c0fa0 sp=0x222c0f84\r\nruntime.runfinq()\r\n\tC:/Go/src/runtime/mfinal.go:158 +0x9e fp=0x222c0fd8 sp=0x222c0fa0\r\nruntime.goexit()\r\n\tC:/Go/src/runtime/asm_386.s:1585 +0x1 fp=0x222c0fdc sp=0x222c0fd8\r\ncreated by runtime.createfing\r\n\tC:/Go/src/runtime/mfinal.go:139 +0x5c\r\n```",
	"user": {
		"login": "tokotify",
		"id": 19502385,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-05-23T10:49:33Z",
	"created_at": "2016-05-23T03:26:21Z",
	"updated_at": "2016-05-24T08:54:38Z"
}
