{
	"id": 141353997,
	"number": 14839,
	"state": "closed",
	"title": "x/net/context: go vet fails because of copied Mutex",
	"body": "\r\n1. What version of Go are you using (`go version`)?\r\n\r\n```\r\ngo version go1.6 linux/amd64\r\n```\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\n```\r\n\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n\r\nRan `go vet ./...` on a project with `golang.org/x/net/context/context.go` in `vendor/`.\r\n\r\nAlso tried running `go vet` on a fresh clone of `https://github.com/golang/net`.\r\n\r\n4. What did you expect to see?\r\n\r\n`go vet` to exit with status 0.\r\n\r\n5. What did you see instead?\r\n\r\n```\r\ncontext.go:218: newCancelCtx returns lock by value: context.cancelCtx contains sync.Mutex\r\nexit status 1\r\n```",
	"user": {
		"login": "bernerdschaefer",
		"id": 193,
		"type": "User",
		"site_admin": false
	},
	"comments": 17,
	"closed_at": "2016-04-09T23:49:13Z",
	"created_at": "2016-03-16T18:01:32Z",
	"updated_at": "2016-07-20T01:28:16Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
