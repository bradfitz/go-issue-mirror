{
	"id": 51276159,
	"number": 190,
	"state": "closed",
	"title": "gotest shouldn't require package being installed",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n1. Let's say you have a file library.go, and a test file library_test.go\n2. Add a Makefile which uses a similar structure as other go packages\n3. run 'gotest' . The test file can't find the library because it's not \ninstalled yet. \n\nWhat is the expected output? What do you see instead?\nRunning 'gotest' should run tests, even if the package is not installed in \nthe go root directory. \n\nWhat is your $GOOS?  $GOARCH?\nlinux/i386\n\nWhich revision are you sync'ed to?  (hg log -l 1)\n4030:52ad1606d994\n\nPlease provide any additional information below.\n\nYou shouldn't need to have a package installed to run unit tests. When you \nbuild go, it installs everything first, and then runs tests. But gotest \nshould be able to run tests by only examining the build directory. \n\nAlso, in general, I don't think that gotest should be so coupled with the \ngo build system. If I'm writing a go program, I should be able to choose \nwhatever build system I want, and still be able to use gotest for unit \ntests. \n\nTo make the tests work, I either have to install the package in GOROOT/pkg, \nor use something like \u0026quot;import library \u0026quot;./_go_.8\u0026quot; in the test file.\u003c/pre\u003e",
	"user": {
		"login": "hoisie",
		"id": 125547,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"closed_at": "2014-12-08T10:03:35Z",
	"created_at": "2009-11-15T00:48:09Z",
	"updated_at": "2016-06-24T19:04:47Z"
}
