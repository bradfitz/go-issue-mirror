{
	"id": 51277758,
	"number": 1402,
	"state": "closed",
	"title": "Bypassing unexported field protection using interfaces",
	"body": "by **ben.leslie**:\n\n\u003cpre\u003eIt is possible to bypass the protection against copying of protected fields in\nunprotected types.\n\nSee thread: \u003ca href=\"http://groups.google.com/group/golang-nuts/browse_frm/thread/10f333af7a3299e0\"\u003ehttp://groups.google.com/group/golang-nuts/browse_frm/thread/10f333af7a3299e0\u003c/a\u003e\n\nExample code:\n\n\u0026lt;\u0026lt;\u0026lt;\u0026lt; ifhack.go \npackage ifhack \nimport \u0026quot;fmt\u0026quot; \ntype Hack struct { \n        private int \n} \n\nfunc (h Hack) String() string { \n        return fmt.Sprintf(\u0026quot;hack:%d\u0026quot;, h.private) \n} \n\n\u0026lt;\u0026lt;\u0026lt;\u0026lt; ifhackCaller.go \npackage main \nimport \u0026quot;fmt\u0026quot; \nimport \u0026quot;ifhack\u0026quot; \nfunc main() { \n        var hack ifhack.Hack \n        var hackptr *ifhack.Hack \n        var s fmt.Stringer \n        s = \u0026amp;hack \n        hackptr = \u0026amp;hack \n        fmt.Printf(\u0026quot;%s\\n\u0026quot;, hack.String()) // implicit assignment of unexported field 'private' of ifhack.Hack in method receiver \n        fmt.Printf(\u0026quot;%s\\n\u0026quot;, (\u0026amp;hack).String()) // implicit assignment of unexported field 'private' of ifhack.Hack in method receiver \n        fmt.Printf(\u0026quot;%s\\n\u0026quot;, s.String()) \n        fmt.Printf(\u0026quot;%s\\n\u0026quot;, hackptr.String()) // implicit assignment of unexported field 'private' of ifhack.Hack in method receiver \n        fmt.Printf(\u0026quot;%s\\n\u0026quot;, hack) // implicit assignment of unexported field 'private' of ifhack.Hack in function argument \n        fmt.Printf(\u0026quot;%s\\n\u0026quot;, (\u0026amp;hack)) \n        fmt.Printf(\u0026quot;%s\\n\u0026quot;, s) \n        fmt.Printf(\u0026quot;%s\\n\u0026quot;, hackptr) \n} \n\n\nExpected behaviour is that it should not be possible to call the String() method\nindirectly via the Stringer interface.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:08:10Z",
	"created_at": "2011-01-09T05:30:29Z",
	"updated_at": "2016-06-24T19:23:54Z"
}
