{
	"id": 146057982,
	"number": 15135,
	"state": "closed",
	"title": "syscall:  EpollEvent struct incorrect for ppc64/ppc64le",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\nFails on both golang master and golang 1.6\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nppc64le Ubuntu 15.04 and ppc64 RHEL 7.2 same failures\r\n\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n\r\nTried to build and run fsnotify tests from github.com/fsnotify.\r\n\r\n4. What did you expect to see?\r\nNo build or test failures.\r\n\r\n5. What did you see instead?\r\nMany test failures with golang; most golang failures will pass with gccgo but one hang there too.\r\n\r\nI can see the first problem is that the epoll_event structure being passed to the epoll syscalls is not the same size or contents between gccgo and golang but continuing to investigate and understand the hang mentioned.\r\n\r\nTo reproduce:\r\n\r\ngo get -u github.com/fsnotify/fsnotify\r\ncd src/fsnotify/fsnotify\r\ngo test -c\r\n\r\nOn master I see this output:\r\n\r\n./fsnotify.test -test.run=Poller\r\n--- FAIL: TestPollerWithData (0.00s)\r\n        inotify_poller_test.go:85: expected poller to return true\r\n--- FAIL: TestPollerWithClose (0.00s)\r\n        inotify_poller_test.go:119: expected poller to return true\r\n--- FAIL: TestPollerWithWakeupAndData (0.00s)\r\n        inotify_poller_test.go:140: expected poller to return true\r\n--- FAIL: TestPollerConcurrent (0.05s)\r\n        inotify_poller_test.go:197: expected true\r\nFAIL\r\n\r\nIf the 'go' tool used corresponds to gccgo then none of these failures occur.  Through debugging I have found that argument size for the event information passed to the syscall is incorrect in golang.  \r\n\r\nInterestingly, there is also some epoll syscalls made in the runtime package and those use a different structure (from defs_linux_ppc64le.go) which looks right:\r\n\r\ntype epollevent struct {\r\n        events    uint32\r\n        pad_cgo_0 [4]byte\r\n        data      [8]byte // unaligned uintptr\r\n}\r\nHere is the declaration in syscall/ztypes_linux_ppc64le.go which is not correct:\r\n\r\ntype EpollEvent struct {\r\n        Events uint32\r\n        Fd     int32\r\n        Pad    int32\r\n}\r\nI tried to make a change to linux_defs.go to my_epoll_event but that didn't change the generated structure for me so thought it was time to open the issue.\r\n",
	"user": {
		"login": "laboger",
		"id": 9433228,
		"type": "User",
		"site_admin": false
	},
	"comments": 20,
	"closed_at": "2016-04-13T20:59:12Z",
	"created_at": "2016-04-05T17:38:22Z",
	"updated_at": "2016-04-19T04:01:02Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
