{
	"id": 60663288,
	"number": 10135,
	"state": "closed",
	"title": "runtime: panic when accessing an empty struct value appended to an uninitialised slice",
	"body": "I ran into the following runtime error while attempting access an empty struct value that had been appended to an uninitialised slice: https://play.golang.org/p/J2ItiISh2f,\r\n\r\n    panic: runtime error: invalid memory address or nil pointer dereference\r\n    [signal 0xb code=0xffffffff addr=0x0 pc=0x202e2]\r\n\r\nThe append (line 11) succeeds, as does printing the slice as a whole (line 12); accessing the appended struct via range (line 16) yields a panic. Issue encountered under 1.4.1; unable to replicate under gccgo.\r\n\r\nKnown workaround: comment out line 8 in favour of 9 and make an empty slice explicitly (yuck).\r\n\r\n---\r\n\r\nThe following also work as expected, though they alter intended behaviour:\r\n\r\n- Modifying the struct to include a single field, allowing for default initialisation\r\n- Taking a slice of pointers []*empty\r\n",
	"user": {
		"login": "0branch",
		"id": 701332,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2015-03-12T00:09:11Z",
	"created_at": "2015-03-11T14:07:08Z",
	"updated_at": "2016-09-22T15:54:20Z",
	"milestone": {
		"id": 982268,
		"number": 5,
		"title": "Go1.4.3"
	}
}
