{
	"id": 66056950,
	"body": "\u003ca id=\"c11\"\u003e\u003c/a\u003eComment 11:\n\n\u003cpre\u003eThere's not really a difference in the shootout. I think the json benchmark differences\nare entirely caused by the displacement of stack splits. The go1 benchmark suite has\nvery random results:\n\nbenchmark                 old ns/op    new ns/op    delta\nBenchmarkBinaryTree17    7915835000   7861939000   -0.68%\nBenchmarkFannkuch11      4950781000   4949182000   -0.03%\nBenchmarkGobDecode         28233020     26061040   -7.69%\nBenchmarkGobEncode         17074820     28036010  +64.20%\nBenchmarkGzip             737569600    743740200   +0.84%\nBenchmarkGunzip           209303500    204007200   -2.53%\nBenchmarkJSONEncode       120488400     98826400  -17.98%\nBenchmarkJSONDecode       527092400    346794200  -34.21%\nBenchmarkMandelbrot200      8997515      9001385   +0.04%\nBenchmarkParse             10048985      9788460   -2.59%\nBenchmarkRevcomp         1500392000   1508287000   +0.53%\nBenchmarkTemplate         420592000    387395600   -7.89%\n\nIn the new code, GobEncode falls into a pathological stack split that consumes 30% of\nCPU time.\u003c/pre\u003e",
	"user": {
		"login": "remyoudompheng",
		"id": 175246,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-09-09T18:07:34Z",
	"updated_at": "2014-12-08T10:10:32Z"
}
