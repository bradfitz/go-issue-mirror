{
	"id": 147573067,
	"body": "Do we have a monotonic clock source we can export?\n\nIf not, why should this be in the standard library and not just an\nimportable package?\n\nOn 13 October 2015 at 12:42, Benoit Sigoure \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e Go's standard library doesn't provide any API to access a monotonic clock\n\u003e source, which means one can't reliably time how long an operation takes\n\u003e without copy-pasting or importing some low-level platform-dependent code\n\u003e such as the clock package at https://github.com/davecheney/junk.\n\u003e\n\u003e This API doesn't necessarily need to return a time.Time, just returning a\n\u003e number of nanoseconds as a uint64 would be enough, kinda like Java's\n\u003e System.nanoTime()\n\u003e \u003chttp://docs.oracle.com/javase/8/docs/api/java/lang/System.html#nanoTime--\u003e\n\u003e .\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/12914\u003e.\n\u003e\n",
	"user": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-13T01:59:06Z",
	"updated_at": "2015-10-13T01:59:06Z"
}
