{
	"id": 223018969,
	"body": "Apparent difference appears during escape anaysis:\r\nGood:\r\n```\r\ngo build -gcflags '-m -m -m -m -m -W -W' z.go\r\n# command-line-arguments\r\n./z.go:5: can inline @\"\".f as: func() { var @\"\".x路1 [10]byte; ; @\"\".sink = \u0026@\"\".x路1 }\r\n\r\nbefore escfunc f\r\n.   DCL l(6) tc(1)\r\n.   .   NAME-foo.x u(1) a(true) g(1) l(6) x(0+0) class(PAUTO) f(1) tc(1) addrtaken assigned used(true) ARRAY-[10]byte\r\n\r\n.   AS l(6) tc(1)\r\n.   .   NAME-foo.x u(1) a(true) g(1) l(6) x(0+0) class(PAUTO) f(1) tc(1) addrtaken assigned used(true) ARRAY-[10]byte\r\n\r\n.   AS l(7) tc(1)\r\n.   .   NAME-foo.sink u(1) a(true) l(3) x(0+0) class(PEXTERN) tc(1) assigned PTR64-*[10]byte\r\n.   .   ADDR l(7) tc(1) PTR64-*[10]byte\r\n.   .   .   NAME-foo.x u(1) a(true) g(1) l(6) x(0+0) class(PAUTO) f(1) tc(1) addrtaken assigned used(true) ARRAY-[10]byte\r\n./z.go:6:[1] f esc: x\r\n./z.go:6:[1] f esc: var x [10]byte\r\n./z.go:6:[1] f esc: x\r\n./z.go:6:[1] f esc: x = \u003cN\u003e\r\n./z.go:7:[1] f esc: sink\r\n./z.go:7:[1] f esc: x\r\n./z.go:7:[1] f esc: \u0026x\r\n./z.go:7:[1] f esc: sink = \u0026x\r\n./z.go:7:[1] f escassign: sink( l(3) class(PEXTERN) assigned)[NAME] = \u0026x( l(7) esc(no) ld(1))[\u0026]\r\n./z.go:7::flows:: .sink \u003c- \u0026x\r\n\r\nescflood:0: dst .sink scope:\u003cS\u003e[-1]\r\nescwalk: level:{0 0} depth:0  op=\u0026 \u0026x( l(7) esc(no) ld(1)) scope:f[1] extraloopdepth=-1\r\n./z.go:6: moved to heap: x\r\n./z.go:7: \u0026x escapes to heap, level={0 0}, dst.eld=-1, src.eld=1\r\nescwalk: level:{-1 -1} depth:1 \t op=NAME x( l(6) class(PAUTO,heap) f(1) esc(h) ld(1) addrtaken assigned) scope:f[1] extraloopdepth=1\r\n\r\nbefore esctag f\r\n.   DCL l(6) tc(1)\r\n.   .   NAME-foo.x u(2) g(1) l(6) x(0+0) class(PAUTO,heap) f(1) esc(h) ld(1) tc(1) addrtaken assigned used(true) ARRAY-[10]byte\r\n\r\n.   AS l(6) tc(1)\r\n.   .   NAME-foo.x u(2) g(1) l(6) x(0+0) class(PAUTO,heap) f(1) esc(h) ld(1) tc(1) addrtaken assigned used(true) ARRAY-[10]byte\r\n\r\n.   AS l(7) tc(1)\r\n.   .   NAME-foo.sink u(1) a(true) l(3) x(0+0) class(PEXTERN) tc(1) assigned PTR64-*[10]byte\r\n.   .   ADDR l(7) esc(h) ld(1) tc(1) PTR64-*[10]byte\r\n.   .   .   NAME-foo.x u(2) g(1) l(6) x(0+0) class(PAUTO,heap) f(1) esc(h) ld(1) tc(1) addrtaken assigned used(true) ARRAY-[10]byte\r\n```\r\nBad:\r\n```\r\ngo build -gcflags '-m -m -m -m -m -W -W' z.go\r\n# command-line-arguments\r\n./z.go:5: can inline @\"\".f as: func() { var @\"\".x路1 [10]byte; ; @\"\".sink = \u0026@\"\".x路1 }\r\n\r\nbefore escfunc f\r\n.   DCL l(6) tc(1)\r\n.   .   NAME-foo.x u(1) a(true) g(1) l(6) x(0+0) class(PAUTO) f(1) tc(1) addrtaken assigned used(true) ARRAY-[10]byte\r\n\r\n.   AS l(6) tc(1)\r\n.   .   NAME-foo.x u(1) a(true) g(1) l(6) x(0+0) class(PAUTO) f(1) tc(1) addrtaken assigned used(true) ARRAY-[10]byte\r\n\r\n.   AS l(7) tc(1)\r\n.   .   NAME-foo.sink u(1) a(true) l(3) x(0+0) class(PEXTERN) tc(1) assigned PTR64-*[10]byte\r\n.   .   ADDR l(7) tc(1) PTR64-*[10]byte\r\n.   .   .   NAME-foo.x u(1) a(true) g(1) l(6) x(0+0) class(PAUTO) f(1) tc(1) addrtaken assigned used(true) ARRAY-[10]byte\r\n./z.go:6:[1] f esc: x\r\n./z.go:6:[1] f esc: var x [10]byte\r\n./z.go:6:[1] f esc: x\r\n./z.go:6:[1] f esc: x = \u003cN\u003e\r\n./z.go:7:[1] f esc: sink\r\n./z.go:7:[1] f esc: x\r\n./z.go:7:[1] f esc: \u0026x\r\n./z.go:7:[1] f esc: sink = \u0026x\r\n./z.go:7:[1] f escassign: sink( l(3) class(PEXTERN) assigned)[NAME] = \u0026x( l(7) esc(no) ld(1))[\u0026]\r\n./z.go:7::flows:: .sink \u003c- \u0026x\r\n\r\nescflood:0: dst .sink scope:\u003cS\u003e[-1]\r\nescwalk: level:{0 0} depth:0  op=\u0026 \u0026x( l(7) esc(no) ld(1)) scope:f[1] extraloopdepth=-1\r\n./z.go:7: \u0026x escapes to heap, level={0 0}, dst=.sink dst.eld=-1, src.eld=1\r\n./z.go:6: moved to heap: x\r\nescwalk: level:{-1 -1} depth:1 \t op=NAME x( l(6) class(PAUTOHEAP) f(1) esc(h) ld(1) addrtaken assigned) scope:f[1] extraloopdepth=1\r\n\r\nbefore esctag f\r\n.   DCL l(6) tc(1)\r\n.   .   NAME-foo.x u(2) a(true) g(1) l(6) x(0+0) class(PAUTOHEAP) f(1) esc(h) ld(1) tc(1) addrtaken assigned used(true) ARRAY-[10]byte\r\n\r\n.   AS l(6) tc(1)\r\n.   .   NAME-foo.x u(2) a(true) g(1) l(6) x(0+0) class(PAUTOHEAP) f(1) esc(h) ld(1) tc(1) addrtaken assigned used(true) ARRAY-[10]byte\r\n\r\n.   AS l(7) tc(1)\r\n.   .   NAME-foo.sink u(1) a(true) l(3) x(0+0) class(PEXTERN) tc(1) assigned PTR64-*[10]byte\r\n.   .   ADDR l(7) esc(h) ld(1) tc(1) PTR64-*[10]byte\r\n.   .   .   NAME-foo.x u(2) a(true) g(1) l(6) x(0+0) class(PAUTOHEAP) f(1) esc(h) ld(1) tc(1) addrtaken assigned used(true) ARRAY-[10]byte\r\n```",
	"user": {
		"login": "dr2chase",
		"id": 1928999,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-01T14:55:50Z",
	"updated_at": "2016-06-01T14:55:50Z"
}
