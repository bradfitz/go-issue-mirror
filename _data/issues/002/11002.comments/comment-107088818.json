{
	"id": 107088818,
	"body": "There is nothing in the way that the Go tool is invoking clang++ that should cause it to pass -shared to the linker.\r\n\r\nRun go build -work.  That will print out a value for WORK and leave files in that directory.  Set the environment variable WORK to the value it prints out and run the failing command:\r\n\r\n/usr/bin/clang++ -I . -fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -o $WORK/github.com/bodokaiser/retina/image/_obj/_all.o $WORK/github.com/bodokaiser/retina/image/_obj/_cgo_export.o $WORK/github.com/bodokaiser/retina/image/_obj/image.cgo2.o $WORK/github.com/bodokaiser/retina/image/_obj/image.cc.o -g -O2 -L/usr/local/lib -Wl,-r -nostdlib /usr/bin/../lib/gcc/x86_64-alpine-linux-musl/4.9.2/libgcc.a -Wl,--build-id=none\r\n\r\nand add a -v option as well.  It should fail the same way, but should show how clang++ invoked the linker.  Show us the complete compiler output.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-05-30T21:28:44Z",
	"updated_at": "2015-05-30T21:28:44Z"
}
