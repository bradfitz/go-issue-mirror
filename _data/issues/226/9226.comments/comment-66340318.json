{
	"id": 66340318,
	"body": "It does say \"Given the declarations\" ... \"these types are identical\" - and some of the types are in reference to the declarations - there's no need for all examples to refer to those declarations. If you have a much better way of stating this, let me know. Just keep in mind that there's few words in the spec that are arbitrary...\r\n\r\nFinally, while it may seem \"obvious\" that a thing x is identical to itself, it is a property that needs to be defined and/or concluded from other rules - it's not a given at all. The examples here illustrate those specific Go type rules and thus are justified.\r\n\r\nIn fact, you're example 0 == 0 is true, but x == x is false if x happens to be a floating-point NaN (Not-A-Number). This is a very concrete example where the \"obvious\" assumption is wrong.",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-09T19:19:50Z",
	"updated_at": "2014-12-09T19:19:50Z"
}
