{
	"id": 51278152,
	"number": 1676,
	"state": "closed",
	"title": "Channel creation leaks heap memory since 7c59a8fa31c3",
	"body": "\u003cpre\u003eBefore filing a bug, please check whether it has been fixed since\nthe latest release: run \u0026quot;hg pull -u\u0026quot; and retry what you did to\nreproduce the problem.  Thanks.\n\nWhat steps will reproduce the problem?\n1. compile this code\n\npackage main\n\nimport (\n\t\u0026quot;runtime\u0026quot;\n\t\u0026quot;fmt\u0026quot;\n\t\u0026quot;time\u0026quot;\n)\n\nfunc stats() {\n\tfor {\n\t\t\u0026lt;-time.After(3e9)\n\t\tfmt.Printf(\u0026quot;CurrAlloc: %d, HeapAlloc: %d\\n\u0026quot;, runtime.MemStats.Alloc, runtime.MemStats.HeapAlloc)\n\t}\n}\n\nfunc main() {\n\tgo stats()\n\tfor {\n\t\t\u0026lt;-time.After(7e9)\n\t\truntime.GC()\n\t}\n}\n\n2. run and wait (10 mins is sufficient) 6g leaky.go ; 6l leaky.6 ; ./6.out\n\nWhat is the expected output?\n\nCurrAlloc should stabalise, eg\n\nCurrAlloc: 345224, HeapAlloc: 344784\nCurrAlloc: 345696, HeapAlloc: 344784\nCurrAlloc: 346200, HeapAlloc: 344784\nCurrAlloc: 345288, HeapAlloc: 344784\nCurrAlloc: 345792, HeapAlloc: 344784\nCurrAlloc: 345224, HeapAlloc: 344784\nCurrAlloc: 345696, HeapAlloc: 344784\nCurrAlloc: 345192, HeapAlloc: 344784\nCurrAlloc: 345696, HeapAlloc: 344784\n\nWhat do you see instead?\n\nCurrAlloc and VSS of the process grow without bounds\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\nConfirmed on 8g and 6g\n\nWhich operating system are you using?\n\nDarwin and Linux\n\nWhich revision are you using?  (hg identify)\n\nAll revision since \u003ca href=\"http://code.google.com/p/go/source/detail?r=7c59a8fa31c3\"\u003ehttp://code.google.com/p/go/source/detail?r=7c59a8fa31c3\u003c/a\u003e are believed\naffected.\n\nPlease provide any additional information below.\n\nI believe the change which introduced this regression was\n\u003ca href=\"http://golang.org/cl/4291064\"\u003ehttp://golang.org/cl/4291064\u003c/a\u003e. It is possible that the changes made in this CL\nto improve channel allocation were not backed by a corresponding change in deallocation.\n\nThis is related to the issue \u003ca href=\"https://golang.org/issue/1537\"\u003ehttps://golang.org/issue/1537\u003c/a\u003e and\nadditional discussion at\n\u003ca href=\"http://groups.google.com/group/golang-nuts/browse_thread/thread/93b42ac1f888a615\"\u003ehttp://groups.google.com/group/golang-nuts/browse_thread/thread/93b42ac1f888a615\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2014-12-08T10:09:22Z",
	"created_at": "2011-04-08T03:24:48Z",
	"updated_at": "2016-06-24T19:27:19Z"
}
