{
	"id": 154123518,
	"number": 15635,
	"state": "closed",
	"title": "cmd/compile: stores in infinite loops disappear",
	"body": "```\r\nfunc f(p *int) {\r\n\t_ = *p // nil check\r\n\tfor i := 0; true; i++ {\r\n\t\t*p = i\r\n\t}\r\n}\r\n```\r\nWith SSA, this compiles to:\r\n```\r\n\t0x0000 00000 (infloop.go:4)\tMOVQ\t\"\".p+8(FP), AX\r\n\t0x0005 00005 (infloop.go:4)\tTESTB\tAL, (AX)\r\n\t0x0007 00007 (infloop.go:5)\tJMP\t7\r\n```\r\nThere are no reads of memory in the loop, so the entire store chain gets optimized away.\r\n\r\nIs this a problem?  I'm not sure.  It is unexpected (at least, to me) so it may be worth fixing.  Opinions?  @rsc @josharian @griesemer @mdempsky @dr2chase @ianlancetaylor \r\n\r\nThis issue may prevent the optimization described in #15631 (treating calls just like stores).  We definitely don't want calls vanishing.\r\n",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2016-05-13T15:46:39Z",
	"created_at": "2016-05-10T22:45:34Z",
	"updated_at": "2016-05-13T15:46:39Z"
}
