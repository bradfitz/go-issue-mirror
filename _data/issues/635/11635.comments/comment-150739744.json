{
	"id": 150739744,
	"body": "Please no.\n\n* It's true that `case nil` is a bit odd in a type switch, because `nil` is not a type like in all the other possible cases. But one odd exception doesn't seem to me to justify making the same exception in the type assertion syntax.\n\n* If one writes `v, ok := x.(nil)`, what static type does `v` have? Or is there another exception, that one must only use `_` or `_, ok`? Relatedly, what is the type of the form `x.(nil)` used in expression context? The best I can think of is `interface{}`, but that too is an exception.\n\n* The form `_ = x.(nil)` (or `x.(nil)` if we made another exception) is clearly just an assert statement, but we left asserts out on purpose (it's even in the FAQ).\n\n* The form `_, ok = x.(nil)` is better written `ok = x==nil`.",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-24T02:08:05Z",
	"updated_at": "2015-10-24T02:08:05Z"
}
