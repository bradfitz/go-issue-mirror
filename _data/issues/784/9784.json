{
	"id": 56724718,
	"number": 9784,
	"state": "closed",
	"title": "cmd/vet: go vet incorrectly romalformed struct tags",
	"body": "The latest version of go vet (go 1.4.1 with latest tools repo commit golang/tools@913f41fc5f1b7afd8f7c66c011c1ad368fa23fb8) is incorrectly reporting malformed struct tags when one of the tag values contains spaces.\r\n\r\nHere is a minimal set of steps to reproduce the issue:\r\n\r\n```bash\r\n$ mkdir $GOPATH/src/govetissue\r\n$ cd $GOPATH/src/govetissue\r\n$ cat \u003e main.go  \u003c\u003cEND\r\npackage main\r\n\r\ntype foo struct {\r\n    A int \\`short:\"V\" description:\"Test description\"\\`\r\n}\r\n\r\nfunc main() {\r\n}\r\nEND\r\n$ go vet\r\n```\r\n\r\nOutput:\r\n\r\n\u003e /home/davec/mygo/src/govetissue/main.go:4: struct field tag `short:\"V\" description:\"Test description\"` not compatible with reflect.StructTag.Get: bad syntax for struct tag value\r\n\u003e exit status 1\r\n\r\nRemoving the space inside the quoted value for the description (i.e. `TestDescription`) does not report the error, but clearly that is not the intended behavior.\r\n\r\nI've reproduced this issue with Windows, Linux, and OpenBSD.\r\n",
	"user": {
		"login": "davecgh",
		"id": 2115102,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2015-02-05T20:35:38Z",
	"created_at": "2015-02-05T20:28:34Z",
	"updated_at": "2016-06-25T02:00:09Z"
}
