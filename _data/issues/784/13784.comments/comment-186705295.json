{
	"id": 186705295,
	"body": "This happens on 1.4 and 1.6\r\n\r\nHere is a [simpler test case](https://play.golang.org/p/xm0UurgBvt) which might help :\r\n ```\r\nu := url.URL{Scheme: \"intent\", Path: \"path\", RawQuery: \"query=test\", Fragment: \"https://example.com\"}\r\nfmt.Printf(\"%s - fragment not encoded\\n\", u.String())\r\n\r\nu.Fragment = url.QueryEscape(\"https://example.com\")\r\nfmt.Printf(\"%s - fragment double encoded\\n\", u.String())\r\n```\r\noutput:\r\nintent://path?query=test#https://example.com - fragment not encoded\r\nintent://path?query=test#https%253A%252F%252Fexample.com - fragment double encoded\r\n\r\n*URL.String() calls escape which calls shouldEscape. shouldEscape does not ignore % characters in mode encodeFragment, though it ignores other reserved characters. This leads to double encoding of the percent escapes if the fragment is escaped already, and no escaping if not escaped. \r\n",
	"user": {
		"login": "kennygrant",
		"id": 68352,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-20T23:54:05Z",
	"updated_at": "2016-02-20T23:54:23Z"
}
