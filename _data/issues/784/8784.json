{
	"id": 51288687,
	"number": 8784,
	"state": "closed",
	"title": "encoding/xml : documentation clarity - Unmarshal",
	"body": "by **pyewipe**:\n\n\u003cpre\u003eIn the documentation for Unmarshall \u003ca href=\"http://golang.org/pkg/encoding/xml/#Unmarshal\"\u003ehttp://golang.org/pkg/encoding/xml/#Unmarshal\u003c/a\u003e\n\n1. The \u0026quot;,chardata\u0026quot; tag if entered as written gives an error \u0026quot;.. invalid\ntag in field ..\u0026quot; - capitalisation \u0026quot;,charData\u0026quot; works. Similar issue for\n\u0026quot;,innerxml\u0026quot; which gives the same error, unless a different capitalisation is\nused eg \u0026quot;,innerXML\u0026quot; or \u0026quot;,innerXml\u0026quot;\n\nThis wasn't obvious. requesting doc shows correct working capitalisations\n\n2. The descriptions of same are not 100% clear: ie\n\nchardata : \u0026quot;If the XML element contains character data, that data is accumulated in\nthe first struct field that has tag \u0026quot;,chardata\u0026quot; ..\u0026quot; initial\ninterpretation was that this captured only CDATA type data - this was not the case and\ncaptured non CDATA chars\n\ninnerxml : \u0026quot;Unmarshal accumulates the raw XML nested inside the element in that\nfield\u0026quot;  initial expectation was to capture all inner data (excluding CDATA)\nincluding nested xml elements - this was not the case as CDATA was captured but not\nnested xml elements or their contents\n\nNot entirely sure what the intended behaviour is. So some additional clarity in\ndocumentation would be a great help.\n\n(Similar issue with \u0026quot;,any\u0026quot; tag - not sure if bug or docs issue - but did not\nappear to capture uncaptured xml elements as expected, will file separate issue after\nchecking)\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:48:35Z",
	"created_at": "2014-09-21T02:44:26Z",
	"updated_at": "2016-06-25T01:41:54Z"
}
