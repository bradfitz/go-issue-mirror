{
	"id": 193066928,
	"body": "@robpike, @minux: I was naively thinking that the effect of the tag would propagate in the transitive closure of dependencies, but if that's not the case then that kills the idea of also relying on the built-in test tag for test-only libraries.  I'm not going to suggest that build tags behave entirely different under `go test`.\r\n\r\n@jimmyfrasche: In the second use case the idea wasn't to have APIs that change semantics during testing, but rather to make some APIs usable only during testing (to help prevent having production code depend on test libraries).  But as mentioned above, it doesn't look like what I was suggesting would work anyway.\r\n\r\nOn Sun, Mar 6, 2016 at 4:49 PM, Rob Pike wrote:\r\n\u003e files not suffixed _test.go are equivalent to those tagged !test, assuming we're talking about the go test command, which we are.\r\n\r\nThey're not equivalent since files not suffixed `_test.go` get built during `go test`, while files tagged `!test` would get ignored during `go test`, which is why this pattern makes it easy to swap out the implementation of certain functions, and makes for a nice stubbing mechanism.",
	"user": {
		"login": "tsuna",
		"id": 128281,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-07T02:55:05Z",
	"updated_at": "2016-03-07T02:55:05Z"
}
