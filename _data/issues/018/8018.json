{
	"id": 51287552,
	"number": 8018,
	"state": "closed",
	"title": "runtime: gc sometimes not freeing big object",
	"body": "\u003cpre\u003eReported on golang-nuts\n\npackage main\n\nimport (\n    \u0026quot;time\u0026quot;\n)\n\nfunc main() {\n    f()\n    time.Sleep(10 * time.Hour)\n}\n\nfunc f() {\n    a := make([]int, 100000000)\n    for i := range a {\n        a[i] = i\n    }\n}\n\nThe slice never gets freed\ngc1(1): 4+0+61+0 us, 0 -\u0026gt; 0 MB, 20 (21-1) objects, 0/0/0 sweeps, 0(0) handoff, 0(0)\nsteal, 0/0/0 yields\ngc2(1): 0+0+21+0 us, 0 -\u0026gt; 763 MB, 38 (40-2) objects, 15/0/0 sweeps, 0(0) handoff,\n0(0) steal, 0/0/0 yields\ngc3(1): 1+0+51+0 us, 763 -\u0026gt; 763 MB, 48 (53-5) objects, 21/0/0 sweeps, 0(0) handoff,\n0(0) steal, 0/0/0 yields\ngc4(1): 2+0+44+0 us, 763 -\u0026gt; 763 MB, 47 (53-6) objects, 25/24/0 sweeps, 0(0) handoff,\n0(0) steal, 0/0/0 yields\ngc5(1): 1+0+40+0 us, 763 -\u0026gt; 763 MB, 47 (53-6) objects, 25/24/0 sweeps, 0(0) handoff,\n0(0) steal, 0/0/0 yields\ngc6(1): 1+0+45+0 us, 763 -\u0026gt; 763 MB, 47 (53-6) objects, 25/24/0 sweeps, 0(0) handoff,\n0(0) steal, 0/0/0 yields\n...\n\nIt should.  I've noticed that small changes to the program make it work successfully,\ne.g. putting a print statement in f().\u003c/pre\u003e",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 7,
	"closed_at": "2014-12-08T10:44:25Z",
	"created_at": "2014-05-18T04:42:30Z",
	"updated_at": "2016-06-25T01:34:30Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
