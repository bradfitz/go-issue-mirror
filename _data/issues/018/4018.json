{
	"id": 51281518,
	"number": 4018,
	"state": "closed",
	"title": "spec: \"[]byte is like string\" is apparently too precise",
	"body": "by **jacobsa@google.com**:\n\n\u003cpre\u003eIn the \u0026quot;String types\u0026quot; section of the released spec [1], it says this:\n\n    A string type represents the set of string values. Strings behave like\n    slices of bytes but are immutable: once created, it is impossible to\n    change the contents of a string.\n\nLater, in \u0026quot;For statements\u0026quot; [2]:\n\n    For a string value, the \u0026quot;range\u0026quot; clause iterates over the Unicode code\n    points in the string starting at byte index 0.\n\nBut slices of bytes don't work this way. Depending on how you read this, the\nfirst clause is either incorrect or just unhelpful.\n\nIt would be good to call out this difference in behavior in the first section.\nI came to the doc trying to remember whether strings were equivalent to\nimmutable byte slices, and read only the first section. If my neighbor hadn't\nreminded me about the second section, I would have discovered it only after\nhair pulling.\n\n\n[1]: \u003ca href=\"http://golang.org/ref/spec#String_types\"\u003ehttp://golang.org/ref/spec#String_types\u003c/a\u003e\n[2]: \u003ca href=\"http://golang.org/ref/spec#For_statements\"\u003ehttp://golang.org/ref/spec#For_statements\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 9,
	"closed_at": "2014-12-08T10:21:19Z",
	"created_at": "2012-08-29T05:04:12Z",
	"updated_at": "2016-06-24T22:23:53Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
