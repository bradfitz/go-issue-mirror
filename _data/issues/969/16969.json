{
	"id": 174775171,
	"number": 16969,
	"state": "closed",
	"title": "x/net/icmp: descriptor closed twice (bad file descriptor error)",
	"body": "### What version of Go are you using (`go version`)?\r\n\r\ngo version go1.7 linux/amd64\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOOS=\"linux\"\r\n```\r\n\r\n### What did you do?\r\n\r\nPing 127.0.0.1 (localhost) with many goroutines. Try run few times:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"net\"\r\n\t\"os\"\r\n\r\n\t\"golang.org/x/net/icmp\"\r\n\t\"golang.org/x/net/ipv4\"\r\n\t\"golang.org/x/net/ipv6\"\r\n)\r\n\r\nfunc doPing(host string) error {\r\n\tnetwork := \"udp4\"\r\n\taddress := \"0.0.0.0\"\r\n\tprotocol := 1 // Internet Control Message\r\n\tmtype := ipv4.ICMPTypeEcho\r\n\r\n\tc, err := icmp.ListenPacket(network, address)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\r\n\tdefer c.Close()\r\n\r\n\tdst := \u0026net.UDPAddr{IP: net.ParseIP(host)}\r\n\r\n\twm := icmp.Message{\r\n\t\tType: mtype, Code: 0,\r\n\t\tBody: \u0026icmp.Echo{\r\n\t\t\tID: os.Getpid() \u0026 0xffff, Seq: 1 \u003c\u003c uint(0),\r\n\t\t\tData: []byte(\"ello gov'nor\"),\r\n\t\t},\r\n\t}\r\n\r\n\twb, err := wm.Marshal(nil)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\r\n\tif n, err := c.WriteTo(wb, dst); err != nil {\r\n\t\treturn err\r\n\t} else if n != len(wb) {\r\n\t\treturn fmt.Errorf(\"got %v; want %v\", n, len(wb))\r\n\t}\r\n\r\n\trb := make([]byte, 1500)\r\n\tn, peer, err := c.ReadFrom(rb)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\trm, err := icmp.ParseMessage(protocol, rb[:n])\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\tswitch rm.Type {\r\n\tcase ipv4.ICMPTypeEchoReply, ipv6.ICMPTypeEchoReply:\r\n\t\treturn nil\r\n\tdefault:\r\n\t\treturn fmt.Errorf(\"got %+v from %v; want echo reply\", rm, peer)\r\n\t}\r\n}\r\n\r\nfunc main() {\r\n\tfor i := 1; i \u003c 1000; i++ {\r\n\t\tgo func() {\r\n\t\t\terr := doPing(\"127.0.0.1\")\r\n\t\t\tif err != nil {\r\n\t\t\t\tlog.Fatal(err)\r\n\t\t\t}\r\n\t\t}()\r\n\t}\r\n}\r\n```\r\n\r\n### What did you expect to see?\r\n\r\nNothing. No errors.\r\n\r\n### What did you see instead?\r\n\r\nMaybe second close happens on another reused connection fd.\r\n\r\n```\r\n2016/09/02 18:51:08 file file+net datagram-oriented icmp: getsockopt: bad file descriptor\r\n```\r\n\r\n### Minimal program to strace\r\n\r\n```go\r\npackage main\r\nimport \"golang.org/x/net/icmp\"\r\n\r\nfunc main() {\r\n  c, _ := icmp.ListenPacket(\"udp4\", \"0.0.0.0\")\r\n  c.Close()\r\n}\r\n```\r\n\r\n```\r\nsocket(AF_INET, SOCK_STREAM, IPPROTO_TCP) = 3\r\nclose(3)                                = 0\r\nsocket(AF_INET6, SOCK_STREAM, IPPROTO_TCP) = 3\r\nsetsockopt(3, SOL_IPV6, IPV6_V6ONLY, [1], 4) = 0\r\nbind(3, {sa_family=AF_INET6, sin6_port=htons(0), inet_pton(AF_INET6, \"::1\", \u0026sin6_addr), sin6_flowinfo=0, sin6_scope_id=0}, 28) = 0\r\nsocket(AF_INET6, SOCK_STREAM, IPPROTO_TCP) = 4\r\nsetsockopt(4, SOL_IPV6, IPV6_V6ONLY, [0], 4) = 0\r\nbind(4, {sa_family=AF_INET6, sin6_port=htons(0), inet_pton(AF_INET6, \"::ffff:127.0.0.1\", \u0026sin6_addr), sin6_flowinfo=0, sin6_scope_id=0}, 28) = 0\r\nclose(4)                                = 0\r\nclose(3)                                = 0\r\nsocket(AF_INET, SOCK_DGRAM, IPPROTO_ICMP) = 3\r\nbind(3, {sa_family=AF_INET, sin_port=htons(0), sin_addr=inet_addr(\"0.0.0.0\")}, 16) = 0\r\nfcntl(3, F_DUPFD_CLOEXEC, 0)            = 4\r\nfcntl(4, F_GETFL)                       = 0x2 (flags O_RDWR)\r\nfcntl(4, F_SETFL, O_RDWR|O_NONBLOCK)    = 0\r\ngetsockopt(4, SOL_SOCKET, SO_TYPE, [2], [4]) = 0\r\ngetsockname(4, {sa_family=AF_INET, sin_port=htons(20618), sin_addr=inet_addr(\"0.0.0.0\")}, [16]) = 0\r\ngetpeername(4, 0xc42004dbc8, 0xc42004dbc4) = -1 ENOTCONN (Transport endpoint is not connected)\r\nepoll_create1(EPOLL_CLOEXEC)            = 5\r\nepoll_ctl(5, EPOLL_CTL_ADD, 4, {EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, {u32=3043491584, u64=140255200542464}}) = 0\r\nclose(3)                                = 0\r\nclose(3)                                = -1 EBADF (Bad file descriptor)\r\nepoll_ctl(5, EPOLL_CTL_DEL, 4, 0xc42004dda4) = 0\r\nclose(4)                                = 0\r\nexit_group(0)                           = ?\r\n+++ exited with 0 +++\r\n```\r\n\r\n### Possible fix\r\n\r\nWhen this  `defer syscall.Close(s)` removed from `icmp/listen_posix.go:69`, no multiple closes on fd happens. ",
	"user": {
		"login": "adzeitor",
		"id": 523758,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-09-10T09:57:34Z",
	"created_at": "2016-09-02T14:38:13Z",
	"updated_at": "2016-09-10T09:57:34Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
