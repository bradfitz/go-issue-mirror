{
	"id": 137685549,
	"number": 14584,
	"state": "closed",
	"title": "x/tools/cmd/guru: confusing error message when scope has trailing slash",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n1.6\r\n\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\ndarwin\r\n\r\n3. What did you do?\r\n```\r\ngo get github.com/tschottdorf/goplay \u0026\u0026 oracle \\\r\n  -pos=$GOPATH/src/github.com/tschottdorf/goplay/oracle_test_boom/main.go:#40 \\\r\n  callers github.com/tschottdorf/goplay/oracle_test_boom/\r\n```\r\n\r\n4. What did you expect to see?\r\nThe list of callers of `(*X).Bar()` (i.e., an empty list).\r\n\r\n5. What did you see instead?\r\n```\r\n/Users/tschottdorf/go/src/github.com/tschottdorf/goplay/oracle_test_boom/main_test.go:10:2: invalid operation: (\u0026(main.X literal)) (value of type *github.com/tschottdorf/goplay/oracle_test_boom.X) has no field or method Foo\r\noracle: couldn't load packages due to errors: github.com/tschottdorf/goplay/oracle_test_boom/_test\r\n```\r\n\r\nIn fact, this completely renders oracle unusable in source trees which have this phenomenon.\r\n\r\n(cc: @mrtracy)",
	"user": {
		"login": "tschottdorf",
		"id": 5076964,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "alandonovan",
		"id": 8433140,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-10-05T19:34:35Z",
	"created_at": "2016-03-01T21:00:50Z",
	"updated_at": "2016-10-05T19:34:35Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
