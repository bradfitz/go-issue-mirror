{
	"id": 100271776,
	"number": 12111,
	"state": "closed",
	"title": "cmd/go: unclear error message with GO15VENDOREXPERIMENT and import rewriting",
	"body": "[Link to original mailing list post](https://groups.google.com/d/topic/golang-nuts/sbzs9j5M-hs/discussion).\r\n\r\nOver here, I have a demo package: https://github.com/pwaller/vendor-collision\r\n\r\nOn go1.5rc1, if you git clone it and do `go build` (not `go get`), you get the following:\r\n\r\n````\r\n$ go build -v\r\npackage github.com/pwaller/vendor-collision\r\n    imports vendor.org/p\r\n    imports vendor.org/p/vendor/example.org/library: must be imported as example.org/library\r\n```\r\n\r\n\r\nTo clarify: \"vendor-collision\" refers to the collision of vendoring methods, not packages, or anything like that.\r\n\r\nAlso, for the record, this is what the package looks like:\r\n\r\n```\r\n~/.local/src/github.com/pwaller/vendor-collision$ tree\r\n.\r\n├── main.go\r\n└── vendor\r\n    └── vendor.org\r\n        └── p\r\n            ├── p.go\r\n            └── vendor\r\n                └── example.com\r\n                    └── library\r\n                        └── library.go\r\n\r\n6 directories, 3 files\r\n```\r\n\r\n`main.go` imports `vendor.org/p` which directly imports `vendor.org/p/vendor/example.com/library`, where `vendor.org/p` should import `example.com/library` under the `GO15VENDOREXPERIMENT` regime, but `vendor.org/p`'s code is in a git submodule. I don't want to poke `vendor.org/p`'s code if I can avoid it. (And persuading them to change to the new method will break people's ability to easily build on go1.4)\r\n\r\n/cc @davecheney ",
	"user": {
		"login": "pwaller",
		"id": 438648,
		"type": "User",
		"site_admin": false
	},
	"comments": 9,
	"closed_at": "2015-11-10T10:34:52Z",
	"created_at": "2015-08-11T09:47:17Z",
	"updated_at": "2015-11-10T10:34:52Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
