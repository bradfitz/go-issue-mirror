{
	"id": 64391274,
	"number": 10251,
	"state": "closed",
	"title": "spec: intrusive container types (requires offsetof() in callee)",
	"body": "Go's type system makes it impossible generic binary search trees with the tree metadata embedded in a struct[1], rather than having the tree metadata have a pointer that points to datamembers.\r\n\r\nI imagine the compiler could detect the import, and then fix up these types and pointer to point to the parent struct, rather than the metadata withing the data struct. The point is that the pacakge that imports \"tree/redblack\" shouldn't need unsafe.\r\n\r\ntree/redblack: https://github.com/shawnl/go/commit/801830189158eb9e97fb7d41a58670fb7277f357\r\n\r\n[1] https://github.com/torvalds/linux/blob/master/include/linux/rbtree.h",
	"user": {
		"login": "shawnl",
		"id": 510834,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 7,
	"closed_at": "2015-03-25T23:23:38Z",
	"created_at": "2015-03-25T22:54:38Z",
	"updated_at": "2016-06-25T02:04:02Z"
}
