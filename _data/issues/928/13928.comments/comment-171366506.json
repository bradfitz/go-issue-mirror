{
	"id": 171366506,
	"body": "I tried your new program but I can't make it crash on darwin/386. This is the standalone version I am running:\r\n\r\n```\r\npackage main\r\n\r\n// #cgo LDFLAGS: -lz\r\n// #include \u003czlib.h\u003e\r\n// #include \u003cstdlib.h\u003e\r\n//\r\n// // inflateInit is a macro so we need to do this\r\n// int InflateInit(z_streamp s) {\r\n//     return inflateInit(s);\r\n// }\r\n//\r\n// // We do the zstream allocation in C, so that the Go\r\n// // GC doesn't inspect the pointers inside that are\r\n// // allocated by zlib and panic.\r\n// z_streamp new_zstream() {\r\n//     return (z_streamp) calloc(sizeof(z_stream), 1);\r\n// }\r\nimport \"C\"\r\n\r\nimport (\r\n\t\"errors\"\r\n\t\"io\"\r\n\t\"unsafe\"\r\n)\r\n\r\ntype reader struct {\r\n\ts C.z_streamp\r\n}\r\n\r\n// NewReader creates a new ReadCloser. Reads from the returned ReadCloser\r\n// read and decompress data from r. The implementation buffers input and\r\n// may read more data than necessary from r. It is the caller's\r\n// responsibility to call Close on the ReadCloser when done.\r\nfunc NewReader(r io.Reader) (io.ReadCloser, error) {\r\n\trd := \u0026reader{\r\n\t\t// This allocates memory using C.calloc, so it's not go memory\r\n\t\ts: C.new_zstream(),\r\n\t}\r\n\r\n\terr := C.InflateInit(rd.s) // \u003c-- Occasional panic here\r\n\tif err != C.Z_OK {\r\n\t\treturn nil, errors.New(\"Could not init inflate.\")\r\n\t}\r\n\r\n\treturn rd, nil\r\n}\r\n\r\nfunc (r *reader) Read(p []byte) (n int, err error) {\r\n\t// Do nothing to show we're not putting any Go pointers\r\n\t// in C memory.\r\n\treturn len(p), nil\r\n}\r\n\r\n// Close implements the io.Closer interface\r\n//\r\n// Calling Close does not close the wrapped io.Reader originally passed to NewReader\r\nfunc (r *reader) Close() error {\r\n\terr := C.inflateEnd(r.s)\r\n\tif err != C.Z_OK {\r\n\t\treturn errors.New(\"Could not end inflate\")\r\n\t}\r\n\r\n\tC.free(unsafe.Pointer(r.s))\r\n\r\n\tr.s = nil\r\n\r\n\treturn nil\r\n}\r\n\r\nfunc main() {\r\n\tfor {\r\n\t\tr, _ := NewReader(nil)\r\n\t\tr.Close()\r\n\t}\r\n}\r\n```\r\n",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-13T17:09:27Z",
	"updated_at": "2016-01-13T17:09:27Z"
}
