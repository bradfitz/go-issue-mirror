{
	"id": 51282515,
	"number": 4707,
	"state": "closed",
	"title": "cmd/gc: sort.Ints has slower code with value receiver than pointer receiver",
	"body": "by **daviddengcn**:\n\n\u003cpre\u003eBefore filing a bug, please check whether it has been fixed since the\nlatest release. Search the issue tracker and check that you're running the\nlatest version of Go:\n\nRun \u0026quot;go version\u0026quot; and compare against\n\u003ca href=\"http://golang.org/doc/devel/release.html\"\u003ehttp://golang.org/doc/devel/release.html\u003c/a\u003e  If a newer version of Go exists,\ninstall it and retry what you did to reproduce the problem.\n\nThanks.\n\nWhat steps will reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n1. Using sort.Ints to sort an interger slice, i.e. []int\n2.\n3.\n\nWhat is the expected output?\n\n\nWhat do you see instead?\nSlower than an alternative implementation.\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n\nWhich operating system are you using?\nWindows\n\nWhich version are you using?  (run 'go version')\n1.0.3\n\nPlease provide any additional information below.\nIn the current implementation, receivers of IntSlice.Len/Swap/Less is IntSlice itself,\nbut a pointer receiver will generate measurable efficiency improvement. Try run the\nfollowing code fragments\n\n\u003ca href=\"http://play.golang.org/p/-55sk-qDsP\"\u003ehttp://play.golang.org/p/-55sk-qDsP\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Performance"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:24:56Z",
	"created_at": "2013-01-25T08:02:52Z",
	"updated_at": "2016-06-24T22:31:47Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
