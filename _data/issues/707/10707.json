{
	"id": 73430783,
	"number": 10707,
	"state": "closed",
	"title": "net/http: a little more flexibility on NotFound",
	"body": "This issue implies Go v1.4.2 on darwin/amd64 architecture.\r\n\r\nCurrently, http.NotFoundHandler, that replies to all 404 requests has the following implementation:\r\n```go\r\n// NotFound replies to the request with an HTTP 404 not found error.\r\nfunc NotFound(w ResponseWriter, r *Request) { Error(w, \"404 page not found\", StatusNotFound) }\r\n\r\n// NotFoundHandler returns a simple request handler\r\n// that replies to each request with a ``404 page not found'' reply.\r\nfunc NotFoundHandler() Handler { return HandlerFunc(NotFound) }\r\n//   ^^^^^^^^^^^^^^^\r\n```\r\nThis works pretty great for a helloworld application, but in the wild you would need to override default 404 page with a custom one. In the meantime, implementing your own 404 handler is not an issue at all, unless it's being called by `FileServer()` or `ServeFile`, which people are using to serve some static.\r\n\r\nIn my opinion, `http.NotFoundHandler` is not flexible enough and we must have a way to override it with custom 404 error handler.",
	"user": {
		"login": "tucnak",
		"id": 934682,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2015-05-05T21:04:19Z",
	"created_at": "2015-05-05T21:02:32Z",
	"updated_at": "2016-06-25T02:07:38Z"
}
