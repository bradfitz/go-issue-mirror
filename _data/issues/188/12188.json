{
	"id": 101771628,
	"number": 12188,
	"state": "closed",
	"title": "cmd/vet: false negative in shadow",
	"body": "Using the go tool vet -shadow command correctly reports shadowing in the following code:\r\n```go\r\nfunc correct() {\r\n\tvar a int\r\n\t{\r\n\t\tvar a int\r\n\t\ta = 3\r\n\t\tfmt.Println(a)\r\n\t}\r\n\tfmt.Println(a)\r\n}\r\n```\r\n\r\nHowever, running the same command on this code does not report any shadowing:\r\n```go\r\nfunc broken() {\r\n\tvar a int\r\n\t{\r\n\t\ta := 3\r\n\t\tfmt.Println(a)\r\n\t}\r\n\tfmt.Println(a)\r\n}\r\n```\r\n\r\n I think there is a difference between the desired behavior and the implementation of `idiomaticShortRedecl`. If the right hand side AST node is not an ast.Ident or TypeAssertExpr, the whole function should fail and return false. Right now the function returns true even when the assignment being evaluated is not an idiomatic short redeclaration as described at the top of the function. I would like to submit a patch for this, if the implementation is not behaving as desired.",
	"user": {
		"login": "nicot",
		"id": 3722365,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2015-10-21T14:28:13Z",
	"created_at": "2015-08-18T23:22:10Z",
	"updated_at": "2016-10-24T16:28:48Z"
}
