{
	"id": 66086636,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eThis test case passes in go1.1.2 and fails in go1.2rc1\n\npackage issue6556\n\nimport (\n\t\"encoding/xml\"\n\t\"testing\"\n)\n\nfunc TestStructPointerMarshal(t *testing.T) {\n\ttype A struct {\n\t\tXMLName string `xml:\"a\"`\n\t\tB       []interface{}\n\t}\n\ttype C struct {\n\t\tXMLName xml.Name\n\t\tValue   string `xml:\"value\"`\n\t}\n\n\ta := new(A)\n\ta.B = append(a.B, \u0026C{\n\t\tXMLName: xml.Name{Local: \"c\"},\n\t\tValue:   \"x\",\n\t})\n\n\tb, err := xml.Marshal(a)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\tif x := string(b); x != \"\u0026lt;a\u0026gt;\u0026lt;c\u0026gt;\u0026lt;value\u0026gt;x\u0026lt;/value\u0026gt;\u0026lt;/c\u0026gt;\u0026lt;/a\u0026gt;\" {\n\t\tt.Fatal(x)\n\t}\n\tvar v A\n\terr = xml.Unmarshal(b, \u0026v)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n}\u003c/pre\u003e",
	"user": {
		"login": "eaigner",
		"id": 112197,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-10-16T09:25:14Z",
	"updated_at": "2014-12-22T06:29:21Z"
}
