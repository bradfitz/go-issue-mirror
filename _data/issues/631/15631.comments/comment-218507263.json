{
	"id": 218507263,
	"body": "I did a little research on #15537, using the improved-version of sparse (that generates the cleanest code, hence slightly less repulsive to humans, and a svelte 8.8MB dump after the build phase).  Crudely, after building SSA, the largest function `Theproto3Description` has these stats:\r\n\r\n222053 lines\r\nfirst block defines 18190 Values.\r\n35952 Blocks (11222 Call, 11476 Plain, 336 Exit, 6996 Check)\r\n150146 Values (6054 Phi, 36483 Copy, 23976 Copy\u003cmem\u003e)\r\nhighest numbered Value is 150148\r\n\r\nAfter early deadcode:\r\n183521 lines\r\nfirst block defines 18190 Values.\r\n35441 Blocks (11222 Call, 10966 Plain, 336 Exit, 6996 Check)\r\n112638 Values (5544 Phi)\r\n\r\nAfter flagalloc (note blocks added to remove critical edges):\r\n134496 lines\r\n28927 blocks (256 are for critical edges, 1255 Check)\r\n76642 values (5483 Phi, I think 49384 are \u003cmem\u003e\r\nhighest numbered Value is 149634\r\n\r\nMerging Call blocks with their successors should cut the number of blocks by about 1/3, and also cut the number of Copy\u003cmem\u003e nodes out of the phi assignment phase. This seems like a good thing.\r\n\r\nGiven how costly register allocation is in space and time, would it make sense to run a Value compaction pass just before?",
	"user": {
		"login": "dr2chase",
		"id": 1928999,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-11T16:06:08Z",
	"updated_at": "2016-05-11T16:06:08Z"
}
