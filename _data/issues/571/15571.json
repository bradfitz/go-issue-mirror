{
	"id": 153461904,
	"number": 15571,
	"state": "closed",
	"title": "crypto/tls: Conn.ConnectionState should set state.ServerName from c.serverName unconditionally - handshakeComplete is not necessary for SNI",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\ngo1.6.1\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\n\r\n3. What did you do?\r\n\r\nCalled c.ConnectionState() on a connection that failed Handshake() intentionally. c.serverName is set correctly, but ConnectionState() doesn't copy it over to state.ServerName due to unnecessary check for handshakeComplete. SNI is plaintext, it does not need to check for handshakeComplete - it is available even on failure and is purely a TLS clientHello field and is useful to have available for logging.\r\n\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n\r\n\r\n4. What did you expect to see?\r\nc.ConnectionState().ServerName to be filled with the SNI set by the tls client.\r\n\r\n5. What did you see instead?\r\nc.Connectionstate().ServerName == \"\"\r\n\r\n",
	"user": {
		"login": "amalaviy",
		"id": 9745725,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "agl",
		"id": 21203,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-08-17T20:22:30Z",
	"created_at": "2016-05-06T14:24:56Z",
	"updated_at": "2016-08-17T20:22:30Z",
	"milestone": {
		"id": 1748849,
		"number": 42,
		"title": "Go1.8Maybe"
	}
}
