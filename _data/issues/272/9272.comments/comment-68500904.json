{
	"id": 68500904,
	"body": "On Tue, Dec 30, 2014 at 9:35 PM, Dave Cheney \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e I think it is reasonable if you (the developer) are going to set up a\n\u003e cross\n\u003e compiling installation you start with the source release. Given you have\n\u003e to\n\u003e compile the additional architectures on your development machine it\n\u003e doesn't\n\u003e seem like an undue request to compile the first architecture as well.\n\u003e\nWhat I'm concerned about is not compiling the toolchain programs, but you\nneed to run make.bash --no-clean for each platform (OS/arch pair) that you\nwant to cross compile to.\n\nIdeally, once you have the toolchain programs, building a one-shot program\nfor a new platform should be as easy as:\nGOOS=goos GOARCH=goarch go build import/path\n\nEven if you're using binary distributions, you should still be able to cross\ncompile for the same architecture but different OSes easily (without\nmodifying\n$GOROOT/pkg), that's why I propose that we move the only remaining required\nheaders files into internal/runtime so that they don't need to be in\n$GOROOT/pkg/$GOOS_$GOARCH.",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-01-01T22:41:49Z",
	"updated_at": "2015-01-01T22:41:49Z"
}
