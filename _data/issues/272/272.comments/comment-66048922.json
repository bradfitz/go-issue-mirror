{
	"id": 66048922,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4 by **skibaa**:\n\n\u003cpre\u003eCould not send for review because of a problem with the code review plugin. The patch\nincludes the change \nRobert suggested and the test. It's really tiny, so I will post it here:\n\ndiff -r 44699e529c44 src/pkg/json/parse.go\n--- a/src/pkg/json/parse.go\tFri Nov 20 15:47:15 2009 -0800\n+++ b/src/pkg/json/parse.go\tSun Nov 22 00:37:50 2009 +0200\n@@ -198,7 +198,7 @@\n \treturn c == '\"' || c == '[' || c == ']' || c == ':' || c == '{' || c == '}' || c == ','\n }\n \n-func white(c byte) bool\t{ return c == ' ' || c == '\\t' || c == '\\n' || c == '\\v' }\n+func white(c byte) bool\t{ return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n' || c\n== '\\v' }\n \n func skipwhite(p string, i int) int {\n \tfor i \u0026lt; len(p) \u0026\u0026 white(p[i]) {\ndiff -r 44699e529c44 src/pkg/json/struct_test.go\n--- a/src/pkg/json/struct_test.go\tFri Nov 20 15:47:15 2009 -0800\n+++ b/src/pkg/json/struct_test.go\tSun Nov 22 00:37:50 2009 +0200\n@@ -64,6 +64,17 @@\n \t} else {\n \t\tt.Logf(\"%s = %v (good)\", name, v)\n \t}\n+}\n+\n+const whiteSpaceEncoded = \" \\t{\\n\\\"s\\\"\\r:\\\"string\\\"\\v}\";\n+\n+func TestUnmarshalWhitespace(t *testing.T) {\n+\tvar m myStruct;\n+\tok, errtok := Unmarshal(whiteSpaceEncoded, \u0026m);\n+\tif !ok {\n+\t\tt.Fatalf(\"Unmarshal failed near %s\", errtok)\n+\t}\n+\tcheck(t, m.S == \"string\", \"string\", m.S);\n }\n \n func TestUnmarshal(t *testing.T) {\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2009-11-21T22:39:36Z",
	"updated_at": "2014-12-22T05:44:54Z"
}
