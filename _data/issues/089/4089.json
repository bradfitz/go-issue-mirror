{
	"id": 51281626,
	"number": 4089,
	"state": "closed",
	"title": "encoding/csv: TrimLeadingSpace when Comma is a space",
	"body": "by **accipiter**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\nRun the following code: \u003ca href=\"http://play.golang.org/p/p9hY_jVsOc\"\u003ehttp://play.golang.org/p/p9hY_jVsOc\u003c/a\u003e\n\nWhat is the expected output?\n[]string{\u0026quot;Col1\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;Col3\u0026quot;, \u0026quot;Col4\u0026quot;}\n\nWhat do you see instead?\n[]string{\u0026quot;Col1\u0026quot;, \u0026quot;Col3\u0026quot;, \u0026quot;Col4\u0026quot;}\n\nWhich operating system are you using?\nWindows\n\nWhich version are you using?  (run 'go version')\ngo1.0.2\n\nPlease provide any additional information below.\nTrimLeadingSpace=true makes the reader trim all space characters determined by\nunicode.IsSpace(r rune) . If a space character is used as delimiter (Reader.Comma), it\nwill be removed as well.\n\nMy suggestion is to change the following line:\n\u003ca href=\"http://golang.org/src/pkg/encoding/csv/reader.go?s=7544:7583#L257\"\u003ehttp://golang.org/src/pkg/encoding/csv/reader.go?s=7544:7583#L257\u003c/a\u003e\nfrom\n  for r1 != '\\n' \u0026amp;\u0026amp; unicode.IsSpace(r1) {\nto\n  for r1 != '\\n' \u0026amp;\u0026amp; unicode.IsSpace(r1) \u0026amp;\u0026amp; r1 != r.Comma {\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Unfortunate"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:21:46Z",
	"created_at": "2012-09-16T18:12:03Z",
	"updated_at": "2016-06-24T22:24:43Z"
}
