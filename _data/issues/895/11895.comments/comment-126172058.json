{
	"id": 126172058,
	"body": "2015-07-29 22:55 GMT-04:00 dbaroncelli \u003cnotifications@github.com\u003e:\n\n\u003e Does your PATH param in the hello/build.gradle include the path to your go\n\u003e tool?\n\u003e\n\u003e @hyangah \u003chttps://github.com/hyangah\u003e, yes it does and in fact the\n\u003e command line ./gradlew gobind is able to create the new .aar file properly\n\u003e\n\u003e Summarizing, I can see two issues:\n\u003e 1) the .aar file gets updated only with command line ./gradlew gobind and\n\u003e not from the Android IDE task \"gobind\" (error: /var/go/bin/gomobile: no\n\u003e Go tool on $PATH)\n\u003e\n\nThat's expected. When you run ./gradlew from your terminal, it inherits all\nthe env vars (including $PATH) so it should work. OTOH, Android Studio\nstarts with the default environment - unless you launched it from terminal\nwhere the PATH were properly set, or you did some special setup in mac\napplication launcher. That's the reason the gomobile gradle plugin had to\ntake PATH parameter as a workaround.\n\nIt seems that the environment variable was not applied correctly when\nlaunching the gomobile command for some reason and the gomobile tool\ncouldn't find the /var/go/bin/go command. Strange.\n\nI will modify the plugin to output some useful debug message  tomorrow.\n\n\u003e 2) even when the .arr gets properly updated, the Java project seems to\n\u003e still reference the old library and not the new one\n\u003e\n\nThat's expected. ./gradlew  gobind just produces .aar file. The following\ntasks (the app module) that depend on the .aar module are those that\nuncompress the .aar file.\n\nIs it possible to share your project so I can inspect and reproduce the\nproblem? Thanks.\n",
	"user": {
		"login": "hyangah",
		"id": 4999471,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-30T03:47:30Z",
	"updated_at": "2015-07-30T03:47:30Z"
}
