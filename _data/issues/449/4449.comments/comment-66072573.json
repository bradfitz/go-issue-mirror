{
	"id": 66072573,
	"body": "\u003ca id=\"c8\"\u003e\u003c/a\u003eComment 8:\n\n\u003cpre\u003eI've been working on fixing this bug, but in the process I've realized it may not be a\nbug. Consider the following.\n\nNote that the issue can only occur under these 2 conditions:\n\n- Applying gofmt to a partial Go program.\n- The partial Go code has some indent (i.e. first non-blank line has leading whitespace).\n\nNow, consider the context where the above may happen. It could happen when you're trying\nto include some partial Go code in the docs/comments for a func.\n\nFor example,\n\n//\tif  err!=nil      {\n//\t\tsource:=    strings.NewReader(\"line 1.\\nline 2.\\n\")\n//\t\treturn source\n//\t}\n\nIt may make sense to try and apply gofmt to that indented partial Go code (by taking the\n\"commented out text\" value, which does not include the // comment symbols), which should\nmake it look like this:\n\n//\tif err != nil {\n//\t\tsource := strings.NewReader(\"line 1.\\nline 2.\\n\")\n//\t\treturn source\n//\t}\n\nNow consider what the equivalent comment should look like if it used a raw string\nliteral (with the same value). I would argue it makes the most sense to do:\n\n//\tif err != nil {\n//\t\tsource := strings.NewReader(`line 1.\n//\tline 2.\n//\t`)\n//\t\treturn source\n//\t}\n\nI would argue that it makes most sense. When godoc parses it, it displays the code\ncorrectly, see \u003ca href=\"http://godoc.org/github.com/shurcooL/play/54#Issue4449Sample1\"\u003ehttp://godoc.org/github.com/shurcooL/play/54#Issue4449Sample1\u003c/a\u003e.\n\nConsider the alternatives:\n\n//\tif err != nil {\n//\t\tsource := strings.NewReader(`line 1.\n//line 2.\n//`)\n//\t\treturn source\n//\t}\n\n//\tif err != nil {\n//\t\tsource := strings.NewReader(`line 1.\nline 2.\n`)\n//\t\treturn source\n//\t}\n\nThe first one would no longer be parsed by godoc such that the code segment is\nconsidered a single code segment (see\n\u003ca href=\"http://godoc.org/github.com/shurcooL/play/54#Issue4449Sample2)\"\u003ehttp://godoc.org/github.com/shurcooL/play/54#Issue4449Sample2)\u003c/a\u003e. The second alternative\nwould render the original full Go program with the comment to be invalid, since a part\nof the comment stops being a comment when // is removed (see\n\u003ca href=\"https://github.com/shurcooL/play/blob/90362c11c0d5560ec7eca380c2b6b062793a355c/54/main.go#L25-L40)\"\u003ehttps://github.com/shurcooL/play/blob/90362c11c0d5560ec7eca380c2b6b062793a355c/54/main.go#L25-L40)\u003c/a\u003e.\n\nSo, I think the best way to go forward is to not consider the leading indent in front of\npartial Go code should to be a part of said partial Go code. If that's the case, then\nthe current gofmt behavior is correct - it does _not_ change the raw string literal\nvalues. However, under that perspective, the current go/format behavior would become\nincorrect, because it does change raw string literal value of partial indented Go code\n(but that's a separate issue).\u003c/pre\u003e",
	"user": {
		"login": "shurcooL",
		"id": 1924134,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-09-01T23:48:27Z",
	"updated_at": "2014-12-08T10:23:41Z"
}
