{
	"id": 182370424,
	"number": 17409,
	"state": "open",
	"title": "fmt: Printf not respecting String() method of elements of a struct",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### What version of Go are you using (`go version`)?\r\ngo1.7\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nplay.golang.org\r\n\r\n### What did you do?\r\nFirst reported in https://groups.google.com/d/topic/golang-nuts/Upiw-xxCJxQ/discussion\r\n\r\nIf an operand of `fmt.Printf` implements method `String() string`, `fmt.Printf` respects it and uses it.\r\nBut it doesn't if an operand is a `struct` that has such an element.\r\n\r\nhttps://play.golang.org/p/QJC7Q9Kpch\r\n\r\n### What did you expect to see?\r\n```go\r\nInt(73) Int(73) 73\r\n\u0026{Int(73)} \u0026{elem:Int(73)} \u0026main.Box{elem:73}\r\n…\r\n```\r\n\r\n### What did you see instead?\r\n```go\r\nInt(73) Int(73) 73\r\n\u0026{73} \u0026{elem:73} \u0026main.Box{elem:73}\r\n…\r\n```\r\n\r\nIn the second line of the output, none of the format specifiers (`\"%v\"`, `\"%+v\"`, `\"%#v\"`) calls the `String()` method of `Int`, in contrast to the first line.",
	"user": {
		"login": "musiphil",
		"id": 3655356,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		}
	],
	"comments": 6,
	"created_at": "2016-10-11T20:49:03Z",
	"updated_at": "2016-10-24T16:20:29Z",
	"milestone": {
		"id": 1748849,
		"number": 42,
		"title": "Go1.8Maybe"
	}
}
