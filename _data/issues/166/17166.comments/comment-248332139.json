{
	"id": 248332139,
	"body": "It's documented on Response.Body:\r\nhttps://golang.org/pkg/net/http/#Response\r\n\r\n```\r\n        // The http Client and Transport guarantee that Body is always\r\n        // non-nil, even on responses without a body or responses with\r\n        // a zero-length body. It is the caller's responsibility to\r\n        // close Body. The default HTTP client's Transport does not\r\n        // attempt to reuse HTTP/1.0 or HTTP/1.1 TCP connections\r\n        // (\"keep-alive\") unless the Body is read to completion and is\r\n        // closed.\r\n```\r\n\r\nThe CheckRedirect thing is also documented:\r\n\r\nhttps://golang.org/pkg/net/http/#Client\r\n```\r\n        // CheckRedirect specifies the policy for handling redirects.\r\n        // If CheckRedirect is not nil, the client calls it before\r\n        // following an HTTP redirect. The arguments req and via are\r\n        // the upcoming request and the requests made already, oldest\r\n        // first. If CheckRedirect returns an error, the Client's Get\r\n        // method returns both the previous Response (with its Body\r\n        // closed) and CheckRedirect's error (wrapped in a url.Error)\r\n        // instead of issuing the Request req.\r\n        // As a special case, if CheckRedirect returns ErrUseLastResponse,\r\n        // then the most recent response is returned with its body\r\n        // unclosed, along with a nil error.\r\n```\r\n\r\nI'm not sure there's anything more to do here.\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-20T15:13:10Z",
	"updated_at": "2016-09-20T15:13:10Z"
}
