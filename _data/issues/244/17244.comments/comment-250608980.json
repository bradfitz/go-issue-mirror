{
	"id": 250608980,
	"body": "@adg to be clear I didn't really propose any solution (unless you were referring to making Go \"bigger\", which I would agree is not a solution to anything, but rather an opinion) - in fact I tried to lay out why one of the proposals (the \"trusted gopher\" approach) would create some of the additional overhead you mention (at least, at the outset). Apologies if that was not clear enough.\r\n\r\nW/r/t it not being about the language, but rather about libraries - I was responding particularly to your comment about shrinking go / removing things from the stdlib (if you were able).\r\n\r\nI was definitely not stating that well maintained libraries can not exist outside of the core lib. I would imagine you'd be hard pressed to find anyone who has that opinion. On the contrary, one of the strengths of a community driven package is that it can grow and change at a pace that Go is unable to. \r\n\r\nGo has a lot of really strong libraries that come out of the box - as a developer (and not also as a language maintainer like yourself, which is where I imagine our perspectives differ), the idea of seeing Go \"shrink\" in this capacity would be disappointing. It also feels somewhat at odds (in my opinion) with a community mantra of relying on the standard lib as much as possible before reaching outside of it for a dependency.\r\n\r\nAs I do not have any solutions or improvements to offer, but just opinions, I'll bow out of the discussion as I'm likely just a distraction. I appreciate your reply.",
	"user": {
		"login": "StabbyCutyou",
		"id": 1528618,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-29T22:23:06Z",
	"updated_at": "2016-09-29T22:23:51Z"
}
