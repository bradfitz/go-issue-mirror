{
	"id": 250678468,
	"body": "@adg:\r\n\r\n\u003e I'm concerned about what happens when better work is done elsewhere and then the package in /x atrophies. This already happened with websocket, where the package in /x/net is not the best implementation, but people use it because it's there. Efforts to replace it have stalled for years. IMO, this is more evidence that the centralized repo approach does not scale.\r\n\r\nWhy is this so bad? It just shows that it (unsurprisingly) would be possible to have an outside team have ownership of an x/text library and deliver quality.\r\n\r\nThis websocket package situation can also be used to show the importance of a central repo.  I've used websockets in the past and picked the x/text version even though I was aware of a probably better alternative, because the x/text was good enough and it was not worth the hassle to figure out how the other project was maintained.  And I didn't even care about licenses.  The main point of having a centralized repository with foundational functionality is speed of development, convenience, and consistency, not that they are necessarily the best.  Give teams outside the Go team a chance to own x/text packages (ala Linux) and you can have the best of both worlds.",
	"user": {
		"login": "mpvl",
		"id": 6445383,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-30T07:28:20Z",
	"updated_at": "2016-09-30T07:28:20Z"
}
