{
	"id": 73025582,
	"body": ".git suffix in \"go get -d -v git.mycompany.com/dmitris/webseclab.git\" is necessary to signal to \"go get\" that it should treat the repository as a Git one.  But the created directory should be webseclab, not webseclab.git.  Compare the git command-line invocation:\r\n```\r\ngit clone git@github.com:yahoo/webseclab.git\r\n```\r\nit produces a webseclab directory as you expect, not webseclab.git one.\r\n\r\nIf go get creates a directory ending with .git as now, you cannot follow ```go install -d \u003cgit_server\u003e/\u003cpackage_name\u003e``` with ``` go install -v \u003cpackage_name\u003e/...``` - but instead have to first do ```mv \u003cpackage_name\u003e.git \u003cpackage_name\u003e``` which is annoying and unnecessary.\r\n\r\nDoes it make sense?\r\n\r\nI'm going to ask on golang-dev@ if the Go team would consider adding -scm command-line option so that you could do ``` go get -d -scm=git  git.mycompany.com/dmitris/webseclab``` and it would work just like with the hardwired github.com without having to add \".git\" suffix.",
	"user": {
		"login": "dmitris",
		"id": 31205,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-05T10:32:52Z",
	"updated_at": "2015-02-05T10:32:52Z"
}
