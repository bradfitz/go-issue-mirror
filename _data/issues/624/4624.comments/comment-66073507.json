{
	"id": 66073507,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eThe extra parens are allowed because in general types can be parenthesized, so\n\nfunc a() ((((int))))\n\nis okay because \n\nfunc a() (x (((int))))\n\nis okay. I believe that what's going on here is that gofmt preserves ( ) around a type\nname but does not preserve the ( ) in an unnecessarily parenthesized return value list.\nSo the first conversion, from\n    func a() ((int)) \nto\n    func a() (int)\nis stripping the outer parens - they're the unnecessary parens around a lone return type\n- but preserving the parens around the type itself. By doing so, it changes the meaning\nof the parens to be parens around the return list, and then the next gofmt strips them\ntoo.\n\nSo either gofmt needs to not strip the parens around a lone return type if that type is\nparenthesized, or it needs to strip the parens from around the type too.\u003c/pre\u003e\n\n_Labels changed: added **priority-later**, removed **priority-triage**._\n\n_Owner changed to @griesemer._\n\n_Status changed to **Accepted**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-01-07T02:31:11Z",
	"updated_at": "2014-12-08T10:24:33Z"
}
