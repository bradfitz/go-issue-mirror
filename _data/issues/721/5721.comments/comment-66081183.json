{
	"id": 66081183,
	"body": "\u003ca id=\"c11\"\u003e\u003c/a\u003eComment 11:\n\n\u003cpre\u003eI have no problem with atomic ints in the runtime. I don't understand why\nthey need to be in sync/atomic.\n\nI think it is safe to assume that there are no more than active 2^31-1\ngoroutines in a program.\n\nTo assign unique IDs, you'd want an int64 to avoid reuse, even on a 32-bit\nsystem.\nTo count number of pending goroutines, an int32 seems fine.\nFor an atomic flag, an int32 seems better than an int: you avoid wasting\nspace on 64-bit systems.\n\nAtomics make it harder to reason about the correctness of programs. Being\nrequired to specify the size of the atomic word at least removes one\nvariable from the correctness decision.\n\nAlso, I like the fact that it's inconvenient to use atomics. It should be.\nI especially like David's comment, about not having atomic ints making him\nthink about using mutexes instead. That's exactly the behavior we want to\nencourage.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-17T12:41:37Z",
	"updated_at": "2014-12-08T10:31:18Z"
}
