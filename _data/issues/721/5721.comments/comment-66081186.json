{
	"id": 66081186,
	"body": "\u003ca id=\"c14\"\u003e\u003c/a\u003eComment 14:\n\n\u003cpre\u003eI've looked at vitess source for cases where atomic variables refer to slice/map/chan\nlen/cap.\n\n\u003ca href=\"https://code.google.com/p/vitess/source/browse/go/pools/resource_pool.go\"\u003ehttps://code.google.com/p/vitess/source/browse/go/pools/resource_pool.go\u003c/a\u003e\ncapacity    sync2.AtomicInt64\nrepresents chan capacity\n\n\u003ca href=\"https://code.google.com/p/vitess/source/browse/go/streamlog/streamlog.go\"\u003ehttps://code.google.com/p/vitess/source/browse/go/streamlog/streamlog.go\u003c/a\u003e\nsize sync2.AtomicUint32\nrepresents map size\n\n\u003ca href=\"https://code.google.com/p/vitess/source/browse/go/vt/tabletserver/query_engine.go\"\u003ehttps://code.google.com/p/vitess/source/browse/go/vt/tabletserver/query_engine.go\u003c/a\u003e\n        streamBufferSize sync2.AtomicInt32\nrepresent sum of slice len's\n\nIn lots of other cases which do not require huge vals (e.g. unique ids or total bytes\nread), int would be just more natural and remove casts because all other types around\nare int's.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-23T09:29:34Z",
	"updated_at": "2014-12-08T10:31:18Z"
}
