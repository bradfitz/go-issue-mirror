{
	"id": 240482872,
	"body": "I'd prefer to not get into an implementation discussion in this bug, but I sympathize with @Merovius's excellent comment. I do agree that `sort` should be a normal package that anybody can implement.\r\n\r\nIn my latest prototype last night, I added a method to reflect:\r\n\r\n```go\r\npackage reflect\r\n\r\n// Swapper returns a function which swaps the slice elements in v.\r\n// scratch must be a non-nil pointer to a scratch element.\r\n// Use reflect.New(v.Type().Elem()).\r\n// Swapper panics if v is not a slice, or if scratch is the wrong type.\r\nfunc (v Value) Swapper(scratch Value) func(i, j int) {\r\n   ....\r\n}\r\n```\r\n\r\nUsing that, no special code or knowledge is required in the `sort` package. (It has to return a swapper func instead of being `Swap(i, j int)` to amortize all the expensive reflect safety checks. And using the `reflect` API as-is is like 100x slower.)\r\n\r\nIt's currently just a bit slower, but my implementation of `Swapper` isn't as fast as it can be yet.",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 2,
		"+1": 2
	},
	"created_at": "2016-08-17T17:21:12Z",
	"updated_at": "2016-08-17T17:21:12Z"
}
