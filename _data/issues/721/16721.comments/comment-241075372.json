{
	"id": 241075372,
	"body": "@myitcv well, yes, if the code generator writes a custom sorter instead of filling in the boilerplate and using the sort package the compiler can optimize it better. I didn't think anyone was going that far. I meant if the compiler was actually doing type specialization to desugar interfaces or something that it couldn't do with the closure or reflect versions. But, again, what you're saying applies equally to an editor macro (albeit few would want to maintain such a large macro even an editor with a nice macro language).  \r\n\r\nMy point is that it doesn't really matter if the code is being generated by go generate or an editor macro or a robot from the future that appears in a shimmering flash, tells you not to worry, touches your monitor, and the code is just there on your drive and then the robot explodes into a fractal of rainbows and joy. \r\n\r\nThey're all equivalent to \"something happens and then the code is just written for you and you don't have to deal with it\". The specific mechanism isn't the relevant part. ",
	"user": {
		"login": "jimmyfrasche",
		"id": 375553,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-19T17:05:23Z",
	"updated_at": "2016-08-19T17:05:23Z"
}
