{
	"id": 144274050,
	"body": "@bradfitz \r\n\r\nCL https://golang.org/cl/15151 focus on Server.Close race. \r\n\r\nBut the second example shows Listener.Accept succeed after Listener.Close, I'm not sure if it is right.\r\n\r\nListener.Close: https://github.com/golang/go/blob/go1.5.1/src/net/http/httptest/server.go#L167\r\nListener.Accept: https://github.com/golang/go/blob/go1.5.1/src/net/http/httptest/server.go#L48\r\n\r\nexample code: https://play.golang.org/p/FcpbVEf_HI (detect deadlock on play.golang.org, but hit \"unexpected get succeed\" on my server)\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"net/http\"\r\n\t\"net/http/httptest\"\r\n)\r\n\r\nfunc main() {\r\n\r\n\tvar i int\r\n\tfor {\r\n\t\ti++\r\n\t\tfmt.Println(i)\r\n\t\t\r\n\t\tts := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\r\n\t\t}))\r\n\t\t\r\n\t\tts.Close()\r\n\t\t\r\n\t\tresp, err := http.Get(ts.URL)\r\n\t\tif err == nil {\r\n\t\t\tresp.Body.Close()\r\n\t\t\tfmt.Println(\"unexpected get succeed\")\r\n\t\t\tbreak\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\ngo version: go version go1.5.1 linux/amd64",
	"user": {
		"login": "carter2000",
		"id": 1518851,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-30T03:45:20Z",
	"updated_at": "2015-09-30T03:45:41Z"
}
