{
	"id": 86169650,
	"number": 11119,
	"state": "closed",
	"title": "encoding/gob: pointers to zero values are not initialized in Decode",
	"body": "The following program crashes with nil deref in println statement:\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"encoding/gob\"\r\n)\r\n\r\ntype X struct {\r\n\tA *int\r\n}\r\n\r\nfunc main() {\r\n\tgob.Register(X{})\r\n\tx := \u0026X{A: new(int)}\r\n\t// *x.A = 1\r\n\tbuf := new(bytes.Buffer)\r\n\tgob.NewEncoder(buf).Encode(x)\r\n\tx1 := \u0026X{}\r\n\tgob.NewDecoder(buf).Decode(x1)\r\n\tprintln(*x1.A)\r\n}\r\n```\r\nIf \"*x.A = 1\" is uncommented the program does not crash.\r\nIt is perfectly fine to save wire bandwidth for zero values, but a variable value should not affect program behavior in such radical way. If a field points to a zero value, it is not zero, so it does not qualify for ```If a field has the zero value for its type, it is omitted from the transmission```. I think that pointers to zero values should be explicitly transmitted as zero values, that will force Decode to restore the pointers.\r\n\r\ngo version devel +b0532a9 Mon Jun 8 05:13:15 2015 +0000 linux/amd64",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2015-06-08T20:36:51Z",
	"created_at": "2015-06-08T13:07:51Z",
	"updated_at": "2016-06-25T02:10:40Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
