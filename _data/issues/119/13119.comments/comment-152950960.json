{
	"id": 152950960,
	"body": "\u003e I don't think this has anything to do with type safety of Go.\r\n\r\nThe ultimate goal of type-safety is to produce an executable, free of type errors. A type-checked\r\nobject or a library are of little value, as they aren't executed. Thus, achieving type safety is a task for the whole toolchain and runtime, not only for the compiler.  I don't claim that this is an issue of the Go language, but with the \"go\" toolchain.\r\n\r\n\u003e You're manipulating the objects behind the compiler's back.\r\n\r\nI'm sorry, I'm not manipulating objects. I'm manipulating GOPATH, which is *supposed* to be \r\nmanipulated by users.\r\n\r\n\u003e Actually you don't even need to have two GOPATH to do this.\r\n\r\nOK, multiple different ways, by which one can achieve the same bad result just increase the severity of the problem.\r\n\r\n\u003e The proposed change also introduces a major problem:\r\n\u003e two different builds of the same package will produce\r\n\u003e different buildID, so we lost the ability produce identical\r\n\u003e binaries given identical inputs: the toolchain is no longer\r\n\u003e deterministic.\r\n\r\n\"toolchain is no longer deterministic\" is quite a statement, the output consist of eight concrete non-deterministic bytes, the rest is deterministic.\r\n\r\nHow is that property used at the moment? Whatever procedure compares the outputs of two builds,\r\nisn't it possible to modify it, so it can determine if the difference is only is in specific eight bytes\r\nin the whole output and reach to the same conclusions as before?\r\n\r\n\u003e To really fix the problem without breaking the deterministic\r\n\u003e constraint is very hard, we basically have to include a hash\r\n\u003e of the source code into the buildID (just hashing the exported\r\n\u003e interface is not enough, because it's possible to only change\r\n\u003e the internal implementation of some non-exported functions\r\n\u003e and achieve the same arbitrary memory read).\r\n\r\nYes, but hashing the entire source was already considered unacceptable tradeoff wrt. build speed,\r\nwhich was one of things that I took into account when thinking of the various ways to fix this issue.\r\n",
	"user": {
		"login": "momchil-velikov",
		"id": 5541560,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-02T08:32:24Z",
	"updated_at": "2015-11-02T08:32:24Z"
}
