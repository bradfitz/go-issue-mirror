{
	"id": 97895356,
	"body": "One should not rely on the finalizer to execute in a timely fashion.\nFurthermore finalizers are expensive for the GC to maintain and they fire\nat non-deterministic times. They should be a mechanism of last resort.\n\n\n\n\nOn Thu, Apr 30, 2015 at 1:10 PM, Burcu Dogan \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e I will be pinning the current context to avoid the unwanted collection.\n\u003e\n\u003e This issue is not reproducible on Mac OSX. The finalizer is invoked, but\n\u003e Destroy doesn't destroy the context since it is still in use. The Open AL\n\u003e specification says it's illegal to call alcDestroyContext if the given\n\u003e context is current. So, the Linux implementation seems to be buggy for\n\u003e destroying the current context.\n\u003e\n\u003e Additionally, it became clear that the Context finalizer should do some\n\u003e additional job to set the current context to NULL, otherwise the current\n\u003e context is not destroyed on some platforms and we leak.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/10636#issuecomment-97883743\u003e.\n\u003e\n",
	"user": {
		"login": "RLH",
		"id": 972447,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-30T17:46:12Z",
	"updated_at": "2015-04-30T17:46:12Z"
}
