{
	"id": 165210095,
	"body": "Thanks.  When I build this on my Ubuntu Trusty system, using uuid version 2.20.1-5.1ub, I get this:\r\n\r\n./main.go:37: cannot use cdev.uuid_le.b (type [16]C.__u8) as type [16]C.unsignedchar in argument to dump\r\n\r\nI can recreate this using this standalone test case:\r\n\r\n    package main\r\n    \r\n    /*\r\n    #include \u003cstring.h\u003e\r\n    \r\n    typedef unsigned char __u8;\r\n    typedef struct {\r\n    \t__u8 b[16];\r\n    } uuid_le;\r\n    \r\n    #define uuid uuid_le\r\n    #define __u8 unsigned char\r\n    \r\n    typedef struct {\r\n    \tuuid uuid;\r\n    } device;\r\n    \r\n    device newDevice() {\r\n    \tdevice dev;\r\n    \tmemset(\u0026dev, 0, sizeof dev);\r\n    \treturn dev;\r\n    }\r\n    */\r\n    import \"C\"\r\n    \r\n    func dump(ub [16]C.__u8) {\r\n    }\r\n    \r\n    func main() {\r\n    \tvar cdev C.device = C.newDevice()\r\n    \tfor _, v := range cdev.uuid_le.b {\r\n    \t\t_ = v\r\n    \t}\r\n    \tdump(cdev.uuid_le.b)\r\n    }\r\n\r\nIn this cut down version, it's clear that the problem is the `#define __u8 unsigned char` which is from your uuidtest.h file.  If you take that out, everything works.  Why is it there?",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-16T18:53:32Z",
	"updated_at": "2015-12-16T18:53:32Z"
}
