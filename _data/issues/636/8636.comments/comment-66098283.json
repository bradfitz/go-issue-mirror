{
	"id": 66098283,
	"body": "\u003ca id=\"c8\"\u003e\u003c/a\u003eComment 8:\n\n\u003cpre\u003eAnother update,\n\nMy initial guess was the using of \"pprof\", so removing it, give me back the 1.5s\n(constantly).\n\nHowever, if I import only \"net/http\" it takes back constantly 12s.\n\nHere the code:\n\npackage main\n\n// #include \u0026lt;unistd.h\u0026gt;\nimport \"C\"\n\nimport (\n\t\"fmt\"\n\t_ \"net/http\"\n\t\"runtime\"\n\t\"sync\"\n\t\"time\"\n)\n\nconst size = 10000\n\nfunc main() {\n\tstarted := time.Now()\n\n\t// prepare communication protocol\n\turls := make(chan string, size)\n\twg := new(sync.WaitGroup)\n\n\t// fire a bunch of workers\n\tfor i := 0; i \u0026lt; runtime.NumCPU(); i++ {\n\t\twg.Add(1)\n\t\tgo func(i int) {\n\t\t\tdefer wg.Done()\n\t\t\tfor _ = range urls {\n\t\t\t\t// time.Sleep(1 * time.Millisecond) // nanoseconds\n\t\t\t\tC.usleep(1000) // microseconds\n\t\t\t}\n\t\t}(i)\n\t}\n\n\tfor i := 0; i \u0026lt; size; i++ {\n\t\turls \u0026lt;- \"test\"\n\t}\n\n\t// wait\n\tclose(urls)\n\twg.Wait()\n\tfmt.Println(\"done in\", time.Since(started))\n}\n\nI don't know if it's related, but probably there is some package that I use that raise\non production (in a bigger way) this kind of issue.\u003c/pre\u003e",
	"user": {
		"login": "DAddYE",
		"id": 6537,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-09-04T17:54:13Z",
	"updated_at": "2014-12-22T06:37:07Z"
}
