{
	"id": 66717485,
	"body": "I'm beginning to suspect that it's just too complicated to inline.\n\n$ cat t.go\npackage f\n\nimport \"unsafe\"\n\nfunc readUnaligned64(p unsafe.Pointer) uint64 {\nq := (*[8]byte)(p)\nreturn uint64(q[0]) + uint64(q[1])\u003c\u003c8 + uint64(q[2])\u003c\u003c16 + uint64(q[3])\u003c\u003c24\n+ uint64(q[4])\u003c\u003c32 + uint64(q[5])\u003c\u003c40 + uint64(q[6])\u003c\u003c48 + uint64(q[7])\u003c\u003c56\n}\n$ go version\ngo version devel +3fa5d3a Thu Dec 11 15:23:18 2014 +0000 linux/amd64\n$ go tool 6g -m t.go\nt.go:5: readUnaligned64 p does not escape\n$ go tool 6g -m -l -l -l -l t.go\nt.go:5: readUnaligned64 p does not escape\n\n$ cat t2.go\npackage f\n\nimport \"unsafe\"\n\nfunc readUnaligned64(p unsafe.Pointer) uint64 {\nreturn *(*uint64)(p)\n}\n$ go tool 6g -m t2.go\nt2.go:5: can inline readUnaligned64\nt2.go:5: readUnaligned64 p does not escape",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-12T01:03:44Z",
	"updated_at": "2014-12-12T01:03:44Z"
}
