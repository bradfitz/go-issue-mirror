{
	"id": 130145640,
	"body": "go version go1.5rc1 darwin/amd64\r\n\r\n\u003e panic: Failed to dial: ssh: handshake failed: ssh: no common algorithms\r\n\r\nOpenSSH work perfectry:\r\n\r\n    debug1: kex: server-\u003eclient aes128-cbc hmac-sha1 none\r\n    debug1: kex: client-\u003eserver aes128-cbc hmac-sha1 none\r\n    debug1: sending SSH2_MSG_KEXDH_INIT\r\n    debug1: expecting SSH2_MSG_KEXDH_REPLY\r\n\r\nSSH Client CISCO:\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"flag\"\r\n\t\"fmt\"\r\n\r\n\t//\"github.com/ScriptRock/crypto/ssh\"\r\n\t\"golang.org/x/crypto/ssh\"\r\n)\r\n\r\nvar (\r\n\tUSER = flag.String(\"user\", os.Getenv(\"USER\"), \"ssh username\")\r\n\tHOST = flag.String(\"host\", \"cisco86.drekstop.dev\", \"ssh server hostname\")\r\n\tPORT = flag.Int(\"port\", 22, \"ssh server port\")\r\n\tPASS = flag.String(\"pass\", os.Getenv(\"SSH_PWD\"), \"ssh password\")\r\n)\r\n\r\nfunc init() { flag.Parse() }\r\n\r\nfunc main() {\r\n\t//ssh.Config -\u003e Ciphers: []string{\"aes128-cbc\", \"hmac-sha1\", \"none\"},\r\n\r\n\tsshConfig := \u0026ssh.ClientConfig{\r\n\t\tUser: *USER,\r\n\t\tAuth: []ssh.AuthMethod{ssh.Password(*PASS)},\r\n\t\t//\tHostKeyAlgorithms: []string{ssh.KeyAlgoRSA, ssh.KeyAlgoDSA},\r\n\t}\r\n\r\n\taddr := fmt.Sprintf(\"%s:%d\", *HOST, *PORT)\r\n\tclient, err := ssh.Dial(\"tcp\", addr, sshConfig)\r\n\tif err != nil {\r\n\t\tpanic(\"Failed to dial: \" + err.Error())\r\n\t}\r\n\r\n\tsession, err := client.NewSession()\r\n\tif err != nil {\r\n\t\tclient.Close()\r\n\t\tpanic(\"Failed to create session: \" + err.Error())\r\n\t}\r\n\r\n\tout, err := session.CombinedOutput(\"show ssh\")\r\n\tif err != nil {\r\n\t\tpanic(\"Failed to run: \" + err.Error())\r\n\t}\r\n\tfmt.Println(string(out))\r\n\r\n\t// Close connection\r\n\tclient.Close()\r\n}\r\n```",
	"user": {
		"login": "denji",
		"id": 3759759,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-12T03:22:10Z",
	"updated_at": "2015-08-12T03:24:36Z"
}
