{
	"id": 66064581,
	"body": "\u003ca id=\"c13\"\u003e\u003c/a\u003eComment 13:\n\n\u003cpre\u003eThis program shows one way to do it. I do not think it is very complicated. This\nprogram, unlike yours, will also work on any cpu.\n\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/binary\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n)\n\ntype ZZZ struct {\n\ta uint16\n\tb uint32\n\tc uint16\n\td uint16\n\te uint32\n}\n\nvar enc = binary.LittleEndian\n\n// WriteTo writes contents of z into io.Writer w.\nfunc (z *ZZZ) WriteTo(w io.Writer) error {\n\tif e := binary.Write(w, enc, z.a); e != nil {\n\t\treturn e\n\t}\n\tif e := binary.Write(w, enc, z.b); e != nil {\n\t\treturn e\n\t}\n\tif e := binary.Write(w, enc, z.c); e != nil {\n\t\treturn e\n\t}\n\tif e := binary.Write(w, enc, z.d); e != nil {\n\t\treturn e\n\t}\n\tif e := binary.Write(w, enc, z.e); e != nil {\n\t\treturn e\n\t}\n\treturn nil\n}\n\n// ReadFrom reads contents of z from io.Reader r.\nfunc (z *ZZZ) ReadFrom(r io.Reader) error {\n\tif e := binary.Read(r, enc, \u0026z.a); e != nil {\n\t\treturn e\n\t}\n\tif e := binary.Read(r, enc, \u0026z.b); e != nil {\n\t\treturn e\n\t}\n\tif e := binary.Read(r, enc, \u0026z.c); e != nil {\n\t\treturn e\n\t}\n\tif e := binary.Read(r, enc, \u0026z.d); e != nil {\n\t\treturn e\n\t}\n\tif e := binary.Read(r, enc, \u0026z.e); e != nil {\n\t\treturn e\n\t}\n\treturn nil\n}\n\nfunc main() {\n\tbuf := new(bytes.Buffer)\n\tz := ZZZ{a: 1, b: 2, c: 3, d: 4, e: 5}\n\tfmt.Printf(\"z=%+v\\n\", z)\n\tif e := z.WriteTo(buf); e != nil {\n\t\tlog.Fatal(e)\n\t}\n\tfmt.Printf(\"buf=%+v\\n\", buf.Bytes())\n\tvar z2 ZZZ\n\tif e := z2.ReadFrom(buf); e != nil {\n\t\tlog.Fatal(e)\n\t}\n\tfmt.Printf(\"z2=%+v\\n\", z2)\n}\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-03-13T23:40:47Z",
	"updated_at": "2014-12-08T10:17:02Z"
}
