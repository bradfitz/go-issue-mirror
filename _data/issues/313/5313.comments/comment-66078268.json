{
	"id": 66078268,
	"body": "\u003ca id=\"c7\"\u003e\u003c/a\u003eComment 7:\n\n\u003cpre\u003e@4: Once again, you can never ever pull out only a part (EBNF) of the specs and expect\nit to be [always] valid. (I wonder where such expectations come from in the first place).\n\nConsider for example array types[1]:\n\nArrayType   = \"[\" ArrayLength \"]\" ElementType .\nArrayLength = Expression .\nElementType = Type .\n\nFrom the above EBNF\n\n        type t [\"foo\"]bar // or type u [3.14]baz\n\nis/are valid. Only the following quoted text\n\n        \"The length is part of the array's type and must be a constant\n        expression that evaluates to a non-negative integer value.\"\n\nforbids that.\n\nThere are many other examples for the same principle (and many other older closed issues\nof this type).\n\n  [1]: \u003ca href=\"http://golang.org/ref/spec#Array_types\"\u003ehttp://golang.org/ref/spec#Array_types\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "cznic",
		"id": 729580,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-04-18T12:28:42Z",
	"updated_at": "2014-12-08T10:28:41Z"
}
