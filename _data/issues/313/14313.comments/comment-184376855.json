{
	"id": 184376855,
	"body": "LGTM overall. Seems very useful.\r\n\r\nSome nits and questions:\r\n\r\n\u003e space characters separate “key:” from “value.”\r\n\r\n0 or more space characters, or 1 or more space characters?\r\n\r\n\u003e Value can be omitted entirely but the colon must still be present.\r\n\r\nPresumably if the answer to the above is \"1 or more\", then the spaces may also be omitted in this case.\r\n\r\n\u003e The first field is the benchmark name, which must begin with `Benchmark` and is typically followed by a capital letter, as in `BenchmarkReverseString`. Tools displaying benchmark data conventionally omit the Benchmark prefix. \r\n\r\nIt'd be better to require a following capital letter. If the name is just `Benchmark` and the tool omits the prefix, the name will be blank, which is likely to confuse the user or look like a bug. The Go tool already requires this of benchmark function names.\r\n\r\n\u003e The same benchmark name can appear on multiple result lines, indicating that the benchmark was run multiple times.\r\n\r\nThis is a mismatch with running benchmarks over multiple packages right now. Using tip:\r\n\r\n```bash\r\n$ go test -bench=. encoding/base32 encoding/base64\r\nPASS\r\nBenchmarkEncodeToString-8\t   30000\t     42033 ns/op\t 194.89 MB/s\r\nBenchmarkDecodeString-8  \t   10000\t    182128 ns/op\t  71.99 MB/s\r\nok  \tencoding/base32\t3.593s\r\nPASS\r\nBenchmarkEncodeToString-8\t  100000\t     22681 ns/op\t 361.17 MB/s\r\nBenchmarkDecodeString-8  \t   20000\t     99789 ns/op\t 109.47 MB/s\r\nok  \tencoding/base64\t5.487s\r\n```\r\n\r\nAccording to the proposal, this would be interpreted incorrectly as two benchmarks run twice, rather than four benchmarks run once.\r\n\r\nIf this proposal were adopted, however, we could add to the output a config line to disambiguate, perhaps like:\r\n\r\n```bash\r\n$ go test -bench=. encoding/base32 encoding/base64\r\nPASS\r\npackage: encoding/base32\r\nBenchmarkEncodeToString-8\t   30000\t     42033 ns/op\t 194.89 MB/s\r\nBenchmarkDecodeString-8  \t   10000\t    182128 ns/op\t  71.99 MB/s\r\nok  \tencoding/base32\t3.593s\r\nPASS\r\npackage: encoding/base64\r\nBenchmarkEncodeToString-8\t  100000\t     22681 ns/op\t 361.17 MB/s\r\nBenchmarkDecodeString-8  \t   20000\t     99789 ns/op\t 109.47 MB/s\r\nok  \tencoding/base64\t5.487s\r\n```\r\n\r\n\u003e The main known issue with the current go test -bench is that we'd like to emit finer-grained detail about runs, for linearity testing and more robust statistics. This proposal allows that by simply printing more result lines.\r\n\r\nLink to issue 10669.\r\n\r\n\u003e We anticipate that the new x/perf subrepo will include a library for loading benchmark data from files\r\n\r\nWill https://godoc.org/golang.org/x/tools/benchmark/parse be updated? Deprecated? Replaced?\r\n\r\n\r\n\r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-15T20:27:58Z",
	"updated_at": "2016-02-15T20:27:58Z"
}
