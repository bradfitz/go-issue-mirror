{
	"id": 249405555,
	"body": "For example, I'm thinking of something like this, behind a flag or environment variable perhaps:\r\n\r\n```patch\r\ndiff --git a/src/make.bash b/src/make.bash\r\nindex 1a1412a..7db2123 100755\r\n--- a/src/make.bash\r\n+++ b/src/make.bash\r\n@@ -165,7 +165,7 @@ if [ \"$GOHOSTARCH\" != \"$GOARCH\" -o \"$GOHOSTOS\" != \"$GOOS\" ]; then\r\n        # CC_FOR_TARGET is recorded as the default compiler for the go tool. When building for the host, however,\r\n        # use the host compiler, CC, from `cmd/dist/dist env` instead.\r\n        CC=$CC GOOS=$GOHOSTOS GOARCH=$GOHOSTARCH \\\r\n-               \"$GOTOOLDIR\"/go_bootstrap install -gcflags \"$GO_GCFLAGS\" -ldflags \"$GO_LDFLAGS\" -v std cmd\r\n+               \"$GOTOOLDIR\"/go_bootstrap install -gcflags \"$GO_GCFLAGS\" -ldflags \"$GO_LDFLAGS\" -v cmd/compile cmd/link cmd/asm\r\n        echo\r\n fi\r\n \r\n```\r\n\r\nThat seems to cut down user CPU from 3.5 minutes to 2.5 minutes, and sys CPU from 14.5s to 11.5s.\r\n\r\nNote sure if `cmd/compile cmd/link cmd/asm` is sufficient, though.\r\n\r\n/cc @ianlancetaylor @minux @mdempsky ",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-25T06:32:09Z",
	"updated_at": "2016-09-25T06:32:09Z"
}
