{
	"id": 66099906,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eIan, could you elaborate why you want to hide all the 6c generated warnings only in case\nof a SWIG build in order to support older Go versions (1.1 and older)?  Wouldn't it be\nbetter to export the Go version via a header file (maybe runtime.h) and to let the\ncompile fail if the Go version is too old?\n\nI don't know if this is possible but I presume other SWIG target languages have to do\nsomething similar in order to be able to go forward and to give a clear error message in\ncase the target language's version is too old. IMHO this will be needed sooner or later\nfor Go too as old Go versions won't be supported indefinitely and newer Go versions (\u003e=\n2.0) might break compatibility. Also the 'go' tool already requires SWIG 3.0 or newer in\ncurrent versions and so it would be logical that the C wrapper code generated by SWIG\nshould be able to require a minimal Go version in turn.\u003c/pre\u003e",
	"user": {
		"login": "michael-schaller",
		"id": 1525237,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-11-07T10:18:54Z",
	"updated_at": "2014-12-08T10:49:43Z"
}
