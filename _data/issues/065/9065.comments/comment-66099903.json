{
	"id": 66099903,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eI did some testing with a modified version of SWIG.  If SWIG is changed to generate\n\nextern void _wrap_new_Example(void*);\n#pragma dataflag 16\nvoid *Â·_wrap_new_Example = (void *)_wrap_new_Example;\n\nthe resulting code does not build with Go 1.1:\n\n/home/iant/programs/swig/Examples/test-suite/go/go_inout._wrap_DoubleArray: unsupported\nrelocation for dynamic symbol _wrap_DoubleArray (type=120 stype=28)\n/home/iant/programs/swig/Examples/test-suite/go/go_inout._wrap_Same: unsupported\nrelocation for dynamic symbol _wrap_Same (type=120 stype=28)\n/home/iant/programs/swig/Examples/test-suite/go/go_inout._wrap_DoubleArray: unhandled\nrelocation for _wrap_DoubleArray (type 28 rtype 120)\n/home/iant/programs/swig/Examples/test-suite/go/go_inout._wrap_Same: unhandled\nrelocation for _wrap_Same (type 28 rtype 120)\n\nI think it's basically a dumb oversight in Go 1.1: it doesn't correctly handle\nrelocations against noptr data.  It was fixed in Go 1.2, but that doesn't help SWIG.\u003c/pre\u003e",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-11-07T04:14:39Z",
	"updated_at": "2014-12-08T10:49:43Z"
}
