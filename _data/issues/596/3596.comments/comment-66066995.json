{
	"id": 66066995,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5 by **mpvanlohuizen**:\n\n\u003cpre\u003e(Here is the code missing from the previous post.)\nA correct implementation would look something like:\n\nfunc EqualNorm3(form norm.Form, s, t string) bool {\n\tvar lbuf1 [norm.MaxSegmentSize]byte\n\tvar lbuf2 [norm.MaxSegmentSize]byte\n\tvar ssize int\n\tvar tsize int\n\titer1 := \u0026norm.Iter{}\n\titer1.SetInputString(form, s)\n\titer2 := \u0026norm.Iter{}\n\titer2.SetInputString(form, t)\n\tfor !(ssize == 0 \u0026\u0026 iter1.Done()) \u0026\u0026 !(tsize == 0 \u0026\u0026 iter2.Done()) {\n\t\tif ssize == 0 {\n\t\t\tssize = iter1.Next(lbuf1[:])\n\t\t}\n\t\tif tsize == 0 {\n\t\t\ttsize = iter2.Next(lbuf2[:])\n\t\t}\n\t\tn := min(ssize, tsize)\n\t\tif n == 0 || !bytes.Equal(lbuf1[:n], lbuf2[:n]) {\n\t\t\treturn false\n\t\t}\n\t\tssize = copy(lbuf1[:], lbuf1[n:ssize])\n\t\ttsize = copy(lbuf2[:], lbuf2[n:tsize])\n\t}\n\treturn ssize == 0 \u0026\u0026 tsize == 0 \u0026\u0026 iter1.Done() \u0026\u0026 iter2.Done()\n}\n\nThis code handles different segment sizes returned by the iterator by\nsimply only comparing the bytes that are available.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-05-30T13:03:01Z",
	"updated_at": "2014-12-08T10:18:59Z"
}
