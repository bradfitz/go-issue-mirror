{
	"id": 51285392,
	"number": 6575,
	"state": "closed",
	"title": "Incorrect definition of memcpy on OS X 10.9",
	"body": "by **mazdak@chango.com**:\n\n\u003cpre\u003eCGO file referring to string.h and using the memcpy function gives the following error:\n\ncannot use (type C.size_t) as type C.ulong in function argument\n\nSample Code:\n\npackage main\t\t\n\n/*\n#include \u0026lt;stdlib.h\u0026gt;\n#include \u0026lt;string.h\u0026gt;\n*/\nimport \u0026quot;C\u0026quot;\n\nimport (\n\t\u0026quot;unsafe\u0026quot;\n\t\u0026quot;fmt\u0026quot;\n)\n\nfunc main() {\n\tvar ksiz C.size_t\n\tksiz = C.size_t(6)\n\tk := make([]byte, ksiz)\n\tkp := C.CString(\u0026quot;string\u0026quot;)\n\tC.memcpy(unsafe.Pointer(\u0026amp;k[0]), unsafe.Pointer(kp), C.ulong(ksiz))\n\tfmt.Println(k)\n}\n\nWhat is the expected output?\n\nCompilation without error. Output:\n[115 116 114 105 110 103]\n\nWhat do you see instead?\n\n# command-line-arguments\n./memcpytest.go:17: cannot use ksiz (type C.size_t) as type C.ulong in function argument\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\nCC=clang go build\n\nWhich operating system are you using?\n\nProductName:\tMac OS X\nProductVersion:\t10.9\nBuildVersion:\t13A598\nXcode 5.0.1\nBuild version 5A2034a\n\nWhich version are you using?  (run 'go version')\n\ngo version devel +47b2b07a837f Fri Oct 11 16:39:40 2013 -0700 darwin/amd64\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:36:24Z",
	"created_at": "2013-10-13T00:05:53Z",
	"updated_at": "2016-06-25T01:20:35Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
