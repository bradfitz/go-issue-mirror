{
	"id": 69898282,
	"number": 10525,
	"state": "closed",
	"title": "math/big: clarify addVW and subVW preconditions",
	"body": "I'm working on an arm64 math/big implementation.\r\n\r\nThe docs for addVW (arith.go) say:\r\n\r\n```go\r\n// Argument y must be either 0 or 1.\r\nfunc addVW_g(z, x []Word, y Word) (c Word)\r\n```\r\n\r\nBut e.g. running `TestFloatSetPrec` sends in many values for y. The existing implementations handle them correctly. I care because my initial arm64 implementation transfers y directly to the carry flag at the start, which only works if y is 0 or 1.\r\n\r\nsubVW does not say that y must be either 0 or 1, but in practice it appears to be, and the semantics are less clear if it is not. However, TestFunVW appears to intentionally send in y=2 to confirm that there's no bad behavior when z and x are nil.\r\n\r\nWhat preconditions do addVW and subVW actually have?\r\n\r\n@griesemer feel free to clarify here or just send a CL.\r\n\r\n(Additional docs in general in arith.go would be awesome. Right now I'm inferring shlVU and friends from the existing code.)\r\n\r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2015-04-21T23:15:16Z",
	"created_at": "2015-04-21T16:55:42Z",
	"updated_at": "2016-06-25T02:06:09Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
