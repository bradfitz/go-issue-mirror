{
	"id": 152270454,
	"body": "@davecheney, are you sure this is about shell expansion? The initial report says `go get -d gitserver/~user/repo.git`, and shell expansion would not apply to a ~ unless it appeared at the beginning of an argument.\n\nI thought this proposal was about supporting git servers that use the literal substring /~user/ in their git URLs. For example I thought launchpad.net did this, and in fact such examples are in our docs:\n\n\tLaunchpad (Bazaar)\n\n\t\timport \"launchpad.net/project\"\n\t\timport \"launchpad.net/project/series\"\n\t\timport \"launchpad.net/project/series/sub/directory\"\n\n\t\timport \"launchpad.net/~user/project/branch\"\n\t\timport \"launchpad.net/~user/project/branch/sub/directory\"\n\nI don't have bzr installed and I don't know of any launchpad users to try looking for code. Can someone check what happens if you try to go get a launchpad.net/~user path?\n\nIf it doesn't work, we should fix that. We can do that by allowing ~ as the first character of a path element, but no in general.\n\n@alexbrainman, what concerns me about Windows paths is the ambiguity it might introduce. It's true that if you create paths with ~ in them you can get to them, but on most systems you can also, for example, type \"c:\\progra~1\" instead of \"c:\\program files\", and it's that access to shortened names that I want to disallow.",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-29T18:12:51Z",
	"updated_at": "2015-10-29T18:12:51Z"
}
