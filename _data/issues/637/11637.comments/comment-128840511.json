{
	"id": 128840511,
	"body": "We need to justify sysmon triggering. I did a quick literature search of Java. It appears that Java's RMI implementations force GCs every hour. The rationalization is that distributed GCs are needed but without periodic local GCs dead objects can survive too long and cause a lot of grind for the other local GCs.\r\nThe periodic GCs used to happen every minute, now they happen every hour.\r\nI will also note that if the application wants periodic GCs then kicking off a Goroutine that sleeps for some time, say an hour, before calling runtime.GC().\r\n\r\nThe only justification I can find is so that the GC has a chance to return memory to the OS, and perhaps is helps force finalizers to run sooner. Neither seem to be a good enough reason to fire off an asynch GC.",
	"user": {
		"login": "RLH",
		"id": 972447,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-07T21:48:42Z",
	"updated_at": "2015-08-07T21:48:42Z"
}
