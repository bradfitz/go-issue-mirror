{
	"id": 72563754,
	"body": "if const {\n    someFunction()\n}\n\nwon't be inlined even if const is false.\n\nFor example,\n$ cat t.go\npackage f\n\nconst B = false\n\nfunc G() {\nG()\n}\n\nfunc F() {\nif B {\nG()\n}\n}\n$ go tool 6g -m t.go\n$ go tool 6g -m -l=3 t.go\n$ go tool 6g -m -l=4 t.go\nt.go:5: can inline G\nt.go:9: can inline F\nt.go:11: inlining call to G\n\nThis is a problem of the current inliner implementation, it determines\nwhether a func\ncould be inlined before constant propagation and dead code elimination.",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-02T23:47:42Z",
	"updated_at": "2015-02-02T23:47:42Z"
}
