{
	"id": 66056239,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eThe spec explains:\n\nWithin a package, package-level variables are initialized, and\nconstant values are determined, in data-dependent order: if the\ninitializer of A depends on the value of B, A will be set after B. It\nis an error if such dependencies form a cycle. Dependency analysis is\ndone lexically: A depends on B if the value of A contains a mention of\nB, contains a value whose initializer mentions B, or mentions a\nfunction that mentions B, recursively. If two items are not\ninterdependent, they will be initialized in the order they appear in\nthe source. Since the dependency analysis is done per package, it can\nproduce unspecified results if A's initializer calls a function\ndefined in another package that refers to B.\n\nYou can always force the behavior you want by spelling it out in a func init:\n\nvar foo func()\n\nfunc init() {\n    foo = main\n}\n\nfunc main() {\n    foo()\n}\n\nRuss\u003c/pre\u003e\n\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-05-13T02:10:00Z",
	"updated_at": "2014-12-08T10:10:01Z"
}
