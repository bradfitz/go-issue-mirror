{
	"id": 51282541,
	"number": 4722,
	"state": "closed",
	"title": "cmd/godoc: consider listing package abbreviations in generated docs",
	"body": "\u003cpre\u003eRight now, you can get docs that look like\n  func DoSomething(x *pog.Something) error\nand have no idea what \u0026quot;pog\u0026quot; is, even if the package hasn't renamed it.\n\nI propose that godoc render a list of the imports of a package where (1) the import path\ndoes not match the local name (either renamed, or because the import path is\nwhatever/blah/de/blah), and (2) the package uses the imported package in its exported\nAPI.\n\nAt the end of the package overview, generate a small block like:\n  In this package's API,\n    pog is github.com/foo/pog\n    http is net/http\n    ...\n\nThis is especially important for the docs of a non-standard-library package that uses\ntypes from another non-standard-library package. My (1) condition excludes things like\nio.Reader (but would capture net/http.Request), so I don't think it would be burdensome.\u003c/pre\u003e",
	"user": {
		"login": "dsymonds",
		"id": 31506,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 13,
	"closed_at": "2014-12-08T10:25:03Z",
	"created_at": "2013-01-29T00:42:46Z",
	"updated_at": "2016-06-24T22:31:56Z"
}
