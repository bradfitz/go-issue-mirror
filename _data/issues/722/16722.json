{
	"id": 171329726,
	"number": 16722,
	"state": "closed",
	"title": "reflect: ChanOf makes \"han\" types instead of \"chan\" types",
	"body": "1. What version of Go are you using (`go version`)?\r\ngo1.7.linux-amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\n\r\n3. What did you do?\r\nhttps://play.golang.org/p/7XOdJWnLVM\r\n\r\n4. What did you expect to see?   go1.6.1 says this:  [ notice second line says \"chan\" ]\r\n\u003c string \u003e\r\n\u003c chan string \u003e\r\n\u003c chan int \u003e\r\n\r\n5. What did you see instead?   go7.1 says this:  [ notice second line says \"han\" ]\r\n\u003c string \u003e\r\n\u003c han string \u003e\r\n\u003c chan int \u003e\r\n\r\nIf you change my test so that it says\r\n   ch := make(chan string, 3)\r\ninstead of\r\n   ch := make(chan int, 3)\r\nit fixes the error;  apparently reflect.ChanOf() only makes a flawed Type object\r\nif a correct one is not already compiled into the program.\r\n\r\n",
	"user": {
		"login": "strickyak",
		"id": 73520,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-08-16T16:58:36Z",
	"created_at": "2016-08-16T05:47:12Z",
	"updated_at": "2016-08-16T16:58:36Z",
	"milestone": {
		"id": 1944056,
		"number": 44,
		"title": "Go1.7.1"
	}
}
