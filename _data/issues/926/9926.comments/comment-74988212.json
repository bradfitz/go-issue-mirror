{
	"id": 74988212,
	"body": "I'm not sure that \"adding and removing are safe\" strictly implies \"modifying in place is safe\", but okay. Like I said, it seems natural to assume.\r\n\r\nBut more importantly, the spec doesn't actually say that removing the current entry is legal. It says only \"entries that have not yet been reached\". So my reading is that even this code, which only removes, is not guaranteed to be legal:\r\n\r\n```Go\r\nvar m map[string]int\r\n\r\n[...]\r\n\r\nfor k, _ := range m {\r\n  delete(m, k)\r\n}\r\n```\r\n\r\nAgain this may be because the intent is only to specify what would happen in a situation where it's not clear whether the values would be produced or not. But that still leaves open the question of whether it is _safe_ to remove/modify the current entry. You could for example imagine a map implementation that involves a linked list, where the unlink operation sets the `next` pointer of the node you're currently looking at to `nil`.",
	"user": {
		"login": "jacobsa",
		"id": 202895,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-19T02:11:49Z",
	"updated_at": "2015-02-19T02:12:36Z"
}
