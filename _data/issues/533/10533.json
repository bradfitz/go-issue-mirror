{
	"id": 70106762,
	"number": 10533,
	"state": "closed",
	"title": "path/filepath: function filepath.Walk() handle filepath.SkipDir incorrectly",
	"body": "What version of Go are you using (go version)?\r\ngo version go1.4.2 linux/amd64\r\n\r\nWhat did you do?\r\nUse filepath.Walk to read a directory and use filepath.SkipDir to skip some file and directory.\r\nExample: http://play.golang.org/p/HrVSM8ATcn\r\n\r\nWhat did you expect to see?\r\nIn documetation https://golang.org/pkg/path/filepath/#WalkFunc\r\ntype WalkFunc func(path string, info os.FileInfo, err error) error\r\n\"if path is a directory and the function returns the special value SkipDir, the contents of the directory are skipped and processing continues as usual on the next file.\"\r\nI expect that when path is a file and the function returns SkipDir, this file will be skipped and the rest files in the same directory will be processed.\r\nIn the example, it should be: http://play.golang.org/p/RRh41o1bU-\r\n\r\nWhat did you see instead?\r\nWhen path is a file and the function returns SkipDir, this file will be skipped and the rest files in the same directory will also be skipped.\r\n\r\n\r\nThis issue can be solved easily. But I am not sure whether it is an issue about code or documentation.",
	"user": {
		"login": "crvv",
		"id": 6398635,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2015-06-29T21:16:48Z",
	"created_at": "2015-04-22T12:03:04Z",
	"updated_at": "2016-06-29T21:01:29Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
