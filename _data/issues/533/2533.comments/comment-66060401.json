{
	"id": 66060401,
	"body": "\u003ca id=\"c17\"\u003e\u003c/a\u003eComment 17 by **devers49**:\n\n\u003cpre\u003eThis looks like the same problem as that diagnosed by \"fango\" on golang-nuts at\n\u003ca href=\"https://groups.google.com/forum/#\"\u003ehttps://groups.google.com/forum/#\u003c/a\u003e!msg/golang-nuts/nkWJKjYOdmU/e66qQu3ZajkJ\n\nQuoting fango:\n\n\"\"\"\nThis inst `vmov immediate` is not available on vfp2, which is for \nARMv5/6. Go ARM has only two flavors - soft or hardware floating \npoint, and in latter case, it is vfp3 (ARMv7). The other inst not in \nvfp2 is `vcvt - convert floating point to fix point`. \n\"\"\"\n\nA fix that has worked for me is to have 5l/asm.c's chipzero() and chipfloat()\nalways say \"no\" for VFP\u0026lt;3.  This forces the AMOVF and AMOVD cases in\n5l/obj.c:ldobj1() to load all fp constants from a literal pool rather than hit\nthe \"VMOV imm 32/64\" cases in asmout().\n\nI don't know what the best way is to feed this extra bit of ARM-related entropy\ninto 5l.  My current patch introduces a new environment variable, GOARMVFP,\nand linker flag -3, analogous to GOARM and -F.  But maybe it should be decoded\nfrom the existing GOARM.  Or maybe 5l should target VFPv2 unconditionally.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-01-06T15:09:18Z",
	"updated_at": "2014-12-22T06:04:56Z"
}
