{
	"id": 51282274,
	"number": 4533,
	"state": "closed",
	"title": "go/printer: spurious , inserted after ... argument",
	"body": "\u003cpre\u003eHas something to do with the input being multiline.\n\n$ cat x.go\npackage main\n\nfunc f(...interface{})\nfunc (t *T) f(...interface{})\n\nfunc f1(...interface{m();n()})\nfunc (t *T) f1(...interface{m();n()})\n\n$ gofmt x.go\npackage main\n\nfunc f(...interface{})\nfunc (t *T) f(...interface{})\n\nfunc f1(...interface {\n\tm()\n\tn()\n})\nfunc (t *T) f1(...interface {\n\tm()\n\tn()\n})\n\n(So far so good!)\n\n$ gofmt x.go | gofmt\npackage main\n\nfunc f(...interface{})\nfunc (t *T) f(...interface{})\n\nfunc f1(...interface {\n\tm()\n\tn()\n},)\nfunc (t *T) f1(...interface {\n\tm()\n\tn()\n},)\n\nOops, this time we got some extra commas.\n\n6g rejects this last version, because the ... must be last. If the trailing comma is\nallowed, which I think it is, then that's a bug in 6g too. Will file a different bug for\nthat.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:24:08Z",
	"created_at": "2012-12-12T21:42:10Z",
	"updated_at": "2016-06-24T22:29:48Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
