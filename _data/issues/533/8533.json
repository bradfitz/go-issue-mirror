{
	"id": 51288338,
	"number": 8533,
	"state": "closed",
	"title": "debug/elf: cannot parse aarch64 relocations",
	"body": "\u003cpre\u003eWhat does 'go version' print?\n\ngo version devel +2cc71cd8fe3e Wed Aug 13 14:56:58 2014 -0700 linux/amd64\n\nWhat steps reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\n1.  Find yourself an aarch64 elf file (for example, I have one here: \n2.  Feed it to this program: \u003ca href=\"http://play.golang.org/p/jCO8h5Xlr5\"\u003ehttp://play.golang.org/p/jCO8h5Xlr5\u003c/a\u003e\n\nWhat happened?\n\nFor me, I get bogus output that mostly consists of \u0026quot;long long int\u0026quot;\n\nWhat should have happened instead?\n\nIt should list different names, something like:\n\nlong unsigned int\nunsigned char\nshort unsigned int\nunsigned int\nsigned char\nshort int\nint\n...\n\nPlease provide any additional information below.\n\nThe problem is that the relocations that update the debug_info section to have the\nactual offsets into the debug_str are not being applied by debug/elf, because it has no\nknowledge of the R_AARCH64_ABS32 and so on relocations that are used on that platform.\n\nOf course, go doesn't run on aarch64 (yet) but I see that debug/elf knows about\nrelocations for powerpc, alpha and sparc, so that would appear not to be a constraint\nagainst adding the aarch64 codes.\n\nI ran into this trying to get cgo working on arm64 fwiw.\u003c/pre\u003e",
	"user": {
		"login": "mwhudson",
		"id": 672022,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 8,
	"closed_at": "2014-12-08T10:47:24Z",
	"created_at": "2014-08-15T03:38:25Z",
	"updated_at": "2016-06-25T01:39:39Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
