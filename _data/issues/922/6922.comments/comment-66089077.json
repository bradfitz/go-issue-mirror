{
	"id": 66089077,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eBut now that I use latest go.tools\n\ndiff --git a/src/cmd/api/goapi.go b/src/cmd/api/goapi.go\n--- a/src/cmd/api/goapi.go\n+++ b/src/cmd/api/goapi.go\n@@ -624,9 +624,9 @@\n \tcase *types.Chan:\n \t\tvar s string\n \t\tswitch typ.Dir() {\n-\t\tcase ast.SEND:\n+\t\tcase types.SendOnly:\n \t\t\ts = \"chan\u0026lt;- \"\n-\t\tcase ast.RECV:\n+\t\tcase types.RecvOnly:\n \t\t\ts = \"\u0026lt;-chan \"\n \t\tdefault:\n \t\t\ts = \"chan \"\ndiff --git a/src/cmd/api/run.go b/src/cmd/api/run.go\n--- a/src/cmd/api/run.go\n+++ b/src/cmd/api/run.go\n@@ -27,7 +27,7 @@\n // goToolsVersion is the hg revision of the go.tools subrepo we need\n // to build cmd/api.  This only needs to be updated whenever a go/types\n // bug fix is needed by the cmd/api tool.\n-const goToolsVersion = \"6698ca2900e2\"\n+const goToolsVersion = \"f61e52f498ef\"\n \n var goroot string\n \n@@ -46,7 +46,7 @@\n \tgopath := prepGoPath()\n \n \tcmd := exec.Command(\"go\", \"install\", \"--tags=api_tool\", \"cmd/api\")\n-\tcmd.Env = append([]string{\"GOPATH=\" + gopath}, filterOut(os.Environ(), \"GOARCH\")...)\n+\tcmd.Env = append(filterOut(os.Environ(), \"GOARCH\", \"GOPATH\"), \"GOPATH=\"+gopath)\n \tout, err := cmd.CombinedOutput()\n \tif err != nil {\n \t\tlog.Fatalf(\"Error installing cmd/api: %v\\n%s\", err, out)\n\nthe error has gone away. Maybe it is still there, but I cannot reproduce it.\n\nShould I create a CL for that? What version of go.tools should I use?\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-01-13T03:14:17Z",
	"updated_at": "2014-12-22T06:30:36Z"
}
