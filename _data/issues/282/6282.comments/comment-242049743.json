{
	"id": 242049743,
	"body": "First, I would like to thank Brendan Tracey and the gonum guys for their work in this proposal, and also the Go team for considering taking steps towards making Go more suitable for scientific computing. I know language changes at this stage are a very big deal.\r\n\r\nHowever, I do not think this is the best approach. In my opinion, not allowing 1D strided slices from the beginning would be a huge mistake. It would be difficult to explain such a limitation to someone coming from Python, Fortran or Matlab, for example. I think the consistency you lose when you treat rows and columns differently is much bigger than the one you get from normal slices being a particular case of tables.\r\n\r\nThe proposal argues that having strided slices and normal slices would be harmful to the language, but I do not agree with this claim. It is not clear at all that it would lead to duplication of code for strided and non-strided slices, specially when other scientific languages only support strided slices without this being a problem. I think the choice for one or another would be obvious: a strided slice for anything that can be considered a vector (ie. for anything that could be eventually passed to a foreign Fortran function), and a non-strided slice for everything else (everywhere they are being used now). I imagine the conversion from a non-strided to a strided slice would be a very cheap operation, so you would only write numeric functions that take strided slices arguments (even non-strided slices could be accepted where a strided slice is required, eventually). Additionally, 1D strided slices would simplify the proposal, removing some special cases, in particular in range.\r\n\r\nIt also needs to be taken into account that not having a strided slice may lead to the abuse of [,]T types for vectors. This may be considered bad practice, but I can imagine myself doing it when porting something from other language where strided slices are supported. Then we would lose type safety, and we would still have all the problems attributed to strided slices (you will need to chose between using a []T, a [,]T with len[0] equal to 1, or both).\r\n\r\nIIUC, @dr2chase suggests to start with the limitation and leave open the option to implement strides later, but I think that, then, a considerable amount of scientific code expecting a normal slice (or a [,]T \"column table\") would be written, and introducing a new type at a later stage would be problematic.\r\n\r\nAs an additional comment, I do not think it is necessary to modify make or implement literals, at least in a first step. I would be happy enough with reshape (maybe taking a variadic argument) and some help from gofmt.",
	"user": {
		"login": "yiyus",
		"id": 14241009,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-24T12:46:13Z",
	"updated_at": "2016-08-24T12:46:13Z"
}
