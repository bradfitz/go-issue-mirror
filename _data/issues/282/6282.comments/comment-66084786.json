{
	"id": 66084786,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2 by **nagle@animats.com**:\n\n\u003cpre\u003eThere's been some discussion about this.  Main points so far:\n\n1. The general goal is to make it easy to do Matlab/Octave like work in Go.  Most\n   engineering math today is prototyped in one of those languages, then translated\n   to something faster for production use.   \n\n2. It should be possible to easily convert standard libraries from \"Numerical Methods\" \n   (the book series, \"Numerical Methods in Fortran, ... in C, in C++ etc.\") to Go.\n   That would get Go a needed set of standard numerical libraries.  And it should\n   be reasonably easy to translate Matlab code to Go code. \n\n3. It's helpful to have only one standard way to represent matrices.  Otherwise,\n   you get math libraries where a matrix coming out of one library won't go into\n   another.  (This is one of Matlab's selling points.)\n\n4. Performance is a major issue.  These constructs should go fast, approaching\n   or exceeding C/FORTRAN performance.  \n\nLanguage issues:\n\n1. In general, multidimensional array/slice access syntax would look like \"arr[i,j]\".\n\n2. Multidimensional slices would be supported, derived from multidimensional arrays.\n\n3. While there is interest in generics and overloading, that's probably too radical.\n   However, extending \"+\", \"-\", and \"*\" to vectors and matrices might be reasonable.\n   Many machines have hardware that can speed up such operations (MMX, etc.) so\n   that's something a compiler can do that a library alone cannot.\n\n4. There's interest in \"reshaping\", where a subarray or sub-slice is derived from\n   an array.  This can easily get overcomplicated (it did in FORTRAN 77) and needs\n   to be carefully designed.  Further discussion and use cases are needed for this.\n\nThe machine learning community within Google might be consulted on what they want in\nthis area.  The machine learning theorists write in Matlab, and then someone has to\nmake that work in production code. \n\nIt would be helpful to get agreement on needed functionality before putting too much\neffort into syntax, so there are few specific syntax suggestions here yet.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-29T20:25:15Z",
	"updated_at": "2014-12-08T10:34:33Z"
}
