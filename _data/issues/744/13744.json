{
	"id": 123989786,
	"number": 13744,
	"state": "closed",
	"title": "x/tools/cmd/stringer: Generate a method to get the enum value (int) form its name (string)",
	"body": "Currently, the stringer tool generates the method `func (t Type) String() string` to get the string name of an enum value.\r\n\r\nIn several projects I have had the need of exactly the opposite: **get the enum value from the string name** (for example when parsing a flag or when reading a configuration file).\r\nI have ended up using a `switch` or a `map`, but I don't like it as I have to manually maintain it when values are added/changed/deleted. So the next step is to auto-generate it, just like the stringer tool does.\r\n\r\nI was wondering if adding this functionality to `stringer` would be adequate for you guys.  In my opinion, it seems pretty convenient and fits very well in that tool. I am sure there will be other people in the same situation than me that will benefit from it. \r\n\r\nA possible signature for the generated function could be: \r\n```\r\nfunc \u003cType\u003eFromString(s string) (\u003cType\u003e, error) {...}\r\n\r\n// Or\r\nfunc \u003cType\u003eString(s string) (\u003cType\u003e, error) {...}\r\n```\r\n For example, if the type is `Pill` the function would be\r\n```\r\nfunc PillFromString(s string) (Pill, error) {...}\r\n\r\n// Or\r\nfunc PillString(s string) (Pill, error) {...}\r\n```\r\nThe implementation could leverage the same variable the stringer tool already generates (a string or a map, depending on the number of runs found in the enum values). This requires a deeper reasoning (maybe a `switch` is the best option here)\r\nHaving an `error` as a second return value is needed to notify about strings that do not belong to the enum type.\r\n\r\nThe code to add is relatively simple and I can contribute with the needed changes.\r\nBefore doing that, I would like to hear your opinions/suggestions and know if you finally agree.",
	"user": {
		"login": "alvaroloes",
		"id": 2271237,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2015-12-29T00:04:01Z",
	"created_at": "2015-12-27T17:47:52Z",
	"updated_at": "2015-12-29T13:42:50Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
