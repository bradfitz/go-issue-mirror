{
	"id": 93291049,
	"body": "hi,\r\n\r\nthe statement in the patch notes that the loop applies the padding is false.\r\n\r\nSee a testcase like:\r\n```\r\n{\"% 03x\", []byte{1, 2, 3}, \"001 002 003\"},\r\n```\r\n\r\nit works for 02x because  two characters per byte for 1 is already 01.\r\n \r\ni was working on the todo in the function that changed and had make some test cases for the old padding behavior. They are failing now which is correct as rob explained (since they should be element wise) but their output also reveal that no padding is applied anymore regardless if it should per element or not.\r\n\r\n```\r\n{\"%20X\", []byte(\"xyz\"), \"              78797A\"},\r\n{\"% 20X\", []byte(\"xyz\"), \"            78 79 7A\"},\r\n{\"%#20X\", []byte(\"xyz\"), \"            0X78797A\"},\r\n{\"%# 20X\", []byte(\"xyz\"), \"      0X78 0X79 0X7A\"},\r\n{\"%-20X\", []byte(\"xyz\"), \"78797A              \"},\r\n{\"% -20X\", []byte(\"xyz\"), \"78 79 7A            \"},\r\n{\"%-#20X\", []byte(\"xyz\"), \"0X78797A            \"},\r\n{\"%-# 20X\", []byte(\"xyz\"), \"0X78 0X79 0X7A      \"},\r\n\r\n--- FAIL: TestSprintf (0.00s)\r\n\tfmt_test.go:729: Sprintf(\"%20X\", [120 121 122]) = \"78797A\" want \"              78797A\"\r\n\tfmt_test.go:729: Sprintf(\"% 20X\", [120 121 122]) = \"78 79 7A\" want \"            78 79 7A\"\r\n\tfmt_test.go:729: Sprintf(\"%#20X\", [120 121 122]) = \"0X78797A\" want \"            0X78797A\"\r\n\tfmt_test.go:729: Sprintf(\"%# 20X\", [120 121 122]) = \"0X78 0X79 0X7A\" want \"      0X78 0X79 0X7A\"\r\n\tfmt_test.go:729: Sprintf(\"%-20X\", [120 121 122]) = \"78797A\" want \"78797A              \"\r\n\tfmt_test.go:729: Sprintf(\"% -20X\", [120 121 122]) = \"78 79 7A\" want \"78 79 7A            \"\r\n\tfmt_test.go:729: Sprintf(\"%-#20X\", [120 121 122]) = \"0X78797A\" want \"0X78797A            \"\r\n\tfmt_test.go:729: Sprintf(\"%-# 20X\", [120 121 122]) = \"0X78 0X79 0X7A\" want \"0X78 0X79 0X7A      \"\r\n```\r\n\r\nIf there should be be per element padding we need to amend the loop to add 0 and white space padding and i guess we also need to treat strings and byte slices differently in respect to padding in the loop or an extra function. Created a new issue.\r\n\r\nAs for strings something more similar to the old padding application might need to be restored:\r\n```\r\n\t{\"%20X\",\"xyz\", \"              78797A\"},\r\n\t{\"% 20X\",\"xyz\", \"            78 79 7A\"},\r\n\t{\"%#20X\",\"xyz\", \"            0X78797A\"},\r\n\t{\"%# 20X\",\"xyz\", \"      0X78 0X79 0X7A\"},\r\n\t{\"%-20X\",\"xyz\", \"78797A              \"},\r\n\t{\"% -20X\",\"xyz\", \"78 79 7A            \"},\r\n\t{\"%-#20X\",\"xyz\", \"0X78797A            \"},\r\n\t{\"%-# 20x\",\"xyz\", \"0X78 0X79 0X7A      \"},\r\n```",
	"user": {
		"login": "martisch",
		"id": 184995,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-15T09:49:30Z",
	"updated_at": "2015-04-15T14:20:36Z"
}
