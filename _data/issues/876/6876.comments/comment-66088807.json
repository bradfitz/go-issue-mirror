{
	"id": 66088807,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eI have worked on a minimal testcase:\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"reflect\"\n\t\"testing\"\n\t\"unsafe\"\n)\n\ntype RawValue struct {\n\tClass, Tag int\n\tIsCompound bool\n\tBytes      []byte\n\tFullBytes  []byte\n}\n\nfunc TestA(t *testing.T) {\n\tv := reflect.ValueOf(RawValue{})\n\trv := v.Interface().(RawValue)\n\tzv := reflect.Zero(v.Type()).Interface().(RawValue)\n\tfmt.Printf(\"%#v\\n\", rv)\n\tfmt.Printf(\"%#v\\n\", *(*[unsafe.Sizeof(zv) / 4]uintptr)(unsafe.Pointer(\u0026rv)))\n\tfmt.Printf(\"%#v\\n\", *(*[unsafe.Sizeof(zv) / 4]uintptr)(unsafe.Pointer(\u0026zv)))\n}\n\n\nOutput:\n\nmain.RawValue{Class:0, Tag:0, IsCompound:false, Bytes:[]uint8{}, FullBytes:[]uint8{}}\n[9]uintptr{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}\n[9]uintptr{0x0, 0x0, 0x0, 0x0, 0x46, 0x13111155, 0xcccc1041, 0xc, 0x44}\u003c/pre\u003e",
	"user": {
		"login": "remyoudompheng",
		"id": 175246,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-12-03T00:17:04Z",
	"updated_at": "2014-12-08T10:38:17Z"
}
