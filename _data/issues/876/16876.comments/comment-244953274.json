{
	"id": 244953274,
	"body": "I printed out a list of overloaded methods under `android.*` and I think `MotionEvent.obtain` would make a good case for scrutiny.\r\n\r\n```\r\npublic static android.view.MotionEvent obtain(long, long, int, int, android.view.MotionEvent$PointerProperties[], android.view.MotionEvent$PointerCoords[], int, int, float, float, int, int, int, int)\r\npublic static android.view.MotionEvent obtain(long, long, int, int, int[], android.view.MotionEvent$PointerCoords[], int, float, float, int, int, int, int)\r\npublic static android.view.MotionEvent obtain(long, long, int, float, float, float, float, int, float, float, int, int)\r\npublic static android.view.MotionEvent obtain(long, long, int, int, float, float, float, float, int, float, float, int, int)\r\npublic static android.view.MotionEvent obtain(long, long, int, float, float, int)\r\npublic static android.view.MotionEvent obtain(android.view.MotionEvent)\r\n```\r\n\r\nTwo of the methods contain the same number of arguments (13) making the the first proposed rule for naming ineffective and leaving an unusually long name for the first method listed.",
	"user": {
		"login": "dskinner",
		"id": 92266,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-06T13:41:03Z",
	"updated_at": "2016-09-06T13:41:03Z"
}
