{
	"id": 244281464,
	"body": "I'm not suggesting to rewrite anything.\r\n\r\nIt is not about API that takes up more than one thread, but about blocking calls. For example, imagine a goroutine calls [FileOutputStream.write](https://developer.android.com/reference/java/io/FileOutputStream.html#write(byte[])) to write a file locally (it may be a bad example, I'm not familiar with Android API. You can probably come up with a better example); this is a blocking call. In a typical go app a goroutine waiting for a blocking call doesn't hold a thread, but let's other goroutines use it. Java doesn't do that, obviously; an entire thread will be just waiting for the blocking call to return. If GOMAXPROCS=4 and 4 goroutines made blocking calls into Java API, all threads may be waiting for the blocking calls to return and program may freeze.\r\n\r\nMaybe you have a solution to this problem, but it is not obvious from this proposal",
	"user": {
		"login": "nodirt",
		"id": 643254,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-02T04:38:20Z",
	"updated_at": "2016-09-02T04:41:08Z"
}
