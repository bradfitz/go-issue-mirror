{
	"id": 126533209,
	"body": "The information is in the Defs and Uses maps. But I agree that a) the documentation needs to be clearer; and b) the fields may have to show up in TypesAndValues as well (TBD).\r\n\r\nHere's a more elaborate example:\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"go/ast\"\r\n\t\"go/parser\"\r\n\t\"go/token\"\r\n\t\"go/types\"\r\n)\r\n\r\nfunc main() {\r\n\tfset := token.NewFileSet()\r\n\tf, err := parser.ParseFile(fset, \"test.go\", src, 0)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tinfo := \u0026types.Info{Defs: make(map[*ast.Ident]types.Object), Uses: make(map[*ast.Ident]types.Object), Types: make(map[ast.Expr]types.TypeAndValue)}\r\n\tcfg := \u0026types.Config{}\r\n\t_, err = cfg.Check(\"test\", fset, []*ast.File{f}, info)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tfmt.Println(\"Defs\")\r\n\tfor n, obj := range info.Defs {\r\n\t\tfmt.Printf(\"%s: %+v =\u003e %v\\n\", fset.Position(n.Pos()), n, obj)\r\n\t}\r\n\tfmt.Println()\r\n\r\n\tfmt.Println(\"Uses\")\r\n\tfor n, obj := range info.Uses {\r\n\t\tfmt.Printf(\"%s: %+v =\u003e %v\\n\", fset.Position(n.Pos()), n, obj)\r\n\t}\r\n\tfmt.Println()\r\n\r\n\tfmt.Println(\"Types and values\")\r\n\tfor n, typ := range info.Types {\r\n\t\tfmt.Printf(\"%s: %+v (%T) =\u003e %v\\n\", fset.Position(n.Pos()), n, n, typ)\r\n\t}\r\n\tfmt.Println()\r\n}\r\n\r\nconst src = `\r\npackage x\r\n\r\ntype X struct {\r\n    f int\r\n}\r\n\r\nfunc foo(x *X) int {\r\n    return x.f\r\n}\r\n`\r\n```\r\nwith the output:\r\n```\r\nDefs\r\ntest.go:5:5: f =\u003e field f int\r\ntest.go:8:10: x =\u003e var x *test.X\r\ntest.go:2:9: x =\u003e \u003cnil\u003e\r\ntest.go:4:6: X =\u003e type test.X struct{f int}\r\ntest.go:8:6: foo =\u003e func test.foo(x *test.X) int\r\n\r\nUses\r\ntest.go:5:7: int =\u003e type int int\r\ntest.go:8:13: X =\u003e type test.X struct{f int}\r\ntest.go:8:16: int =\u003e type int int\r\ntest.go:9:12: x =\u003e var x *test.X\r\ntest.go:9:14: f =\u003e field f int\r\n\r\nTypes and values\r\ntest.go:8:12: \u0026{Star:53 X:X} (*ast.StarExpr) =\u003e {3 *test.X \u003cnil\u003e}\r\ntest.go:8:16: int (*ast.Ident) =\u003e {3 int \u003cnil\u003e}\r\ntest.go:9:12: x (*ast.Ident) =\u003e {5 *test.X \u003cnil\u003e}\r\ntest.go:9:12: \u0026{X:x Sel:f} (*ast.SelectorExpr) =\u003e {5 int \u003cnil\u003e}\r\ntest.go:5:7: int (*ast.Ident) =\u003e {3 int \u003cnil\u003e}\r\ntest.go:4:8: \u0026{Struct:20 Fields:0x8203ee510 Incomplete:false} (*ast.StructType) =\u003e {3 struct{f int} \u003cnil\u003e}\r\ntest.go:8:13: X (*ast.Ident) =\u003e {3 test.X \u003cnil\u003e}\r\n```\r\n",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-31T01:00:26Z",
	"updated_at": "2015-07-31T01:00:26Z"
}
