{
	"id": 66099518,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eI don't know if there is anything to change here.  I think the difference between\nGNU/Linux and Windows is that Windows generates \\r\\n.  Your formats don't use any\nspaces, and you are reading one element at a time.  Reading one element at a time means\nthat the scanner starts fresh each time.  Not using any spaces means that spaces are not\nskipped.  Reading the second number on the first line picks up the first character after\nthe 20.  On Windows this is \\r, on GNU/Linux this is \\n.  That stops the %d, so the\nscanner stops.  Your next call has forgotten the previous state, so it reads the next\ncharacter.  On Windows this is \\n, on GNU/Linux it is the first character of the next\nline.\n\nWe could probably make the behaviour more consistent across operating systems by rigidly\nlooking for \\n following \\r, and treating them as a single character.  I'll leave this\nissue open in case we think that is a good choice.\n\nFor your particular case, though, you should probably write your code differently.  If\nyou want to read a line at a time, then read a line at a time and call Sscanf on that\nline.\u003c/pre\u003e\n\n_Labels changed: added **repo-main**, **release-go1.5**, **os-windows**._\n\n\n_Status changed to **Accepted**._",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-10-16T15:28:03Z",
	"updated_at": "2014-12-08T10:49:15Z"
}
