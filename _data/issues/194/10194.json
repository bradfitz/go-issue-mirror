{
	"id": 62786084,
	"number": 10194,
	"state": "closed",
	"title": "cmd/8g: doasm error compiling func == nil (386 only)",
	"body": "This simple program:\r\n\r\n```\r\npackage main\r\n\r\nimport \"fmt\"\r\n\r\nfunc main() {\r\n\tif Boo == nil {\r\n\t\tfmt.Println(\"Moo\")\r\n\t}\r\n}\r\n\r\nfunc Boo() {\r\n}\r\n```\r\n\r\nfails to compile under windows/386 with the following error:\r\n```\r\ngobug$ GOOS=windows GOARCH=386 go run bug.go\r\n# command-line-arguments\r\n./bug.go:1: doasm: notfound t2=0 from=4d to=b 00030 (/home/abourget/intel/gobug/bug.go:6)\tCMPL\t$\"\".BooÂ·f+0(SB),BX\r\n```\r\n\r\nbut works well under other architectures.  I'm not sure it is valid but I needed to refactor code that used such a pattern when I tried to compile for 32 bits windows.\r\n\r\n\r\n\r\n----\r\n- Running on Ubuntu 14.04.2, amd64, with go version 1.4.1, downloaded from golang.org/dl",
	"user": {
		"login": "abourget",
		"id": 93424,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2015-04-27T16:43:24Z",
	"created_at": "2015-03-18T20:02:58Z",
	"updated_at": "2016-06-25T02:03:32Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
