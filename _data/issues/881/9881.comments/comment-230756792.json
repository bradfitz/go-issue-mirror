{
	"id": 230756792,
	"body": "A workaround I used in my project, in case anyone finds it useful - https://play.golang.org/p/EshUUdz-fz\r\n\r\n```\r\nin1 := \"Mon, 4 Jul 2016 16:13:17 +0830 (GMT+08:30)\"\r\nin2 := \"Mon, 4 Jul 2016 16:13:17 -0500 (GMT-0500)\"\r\n\r\nregGMTTimezone := regexp.MustCompile(`(?i)GMT([+-]\\d{2}:?\\d{2}]?)`)\r\n\r\nout1 := regGMTTimezone.ReplaceAllString(in1, \"$1\")\r\nout2 := regGMTTimezone.ReplaceAllString(in2, \"$1\")\r\n\r\nfmt.Println(out1)\r\nfmt.Println(out2)\r\n\r\nf1 := \"Mon, 2 Jan 2006 15:04:05 -0700 (-07:00)\"\r\nf2 := \"Mon, 2 Jan 2006 15:04:05 -0700 (-0700)\"\r\n\r\nif t1, err := time.Parse(f1, out1); err == nil {\r\n\tfmt.Println(t1.UTC().Format(time.RFC822))\r\n}\r\nif t2, err := time.Parse(f2, out2); err == nil {\r\n\tfmt.Println(t2.UTC().Format(time.RFC822))\r\n}\r\n```\r\noutputs:\r\n```\r\nMon, 4 Jul 2016 16:13:17 +0830 (+08:30)\r\nMon, 4 Jul 2016 16:13:17 -0500 (-0500)\r\n04 Jul 16 07:43 UTC\r\n04 Jul 16 21:13 UTC\r\n```\r\n\r\nThe regex will only affect timezones given in GMT, it won't affect say \"UTC+08:00\".",
	"user": {
		"login": "katzien",
		"id": 690965,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-06T12:26:51Z",
	"updated_at": "2016-07-06T12:26:51Z"
}
