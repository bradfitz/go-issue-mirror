{
	"id": 51289152,
	"number": 9145,
	"state": "closed",
	"title": "6g: segfault on lots of string literal concatenation",
	"body": "\u003cpre\u003eWhat does 'go version' print?\n\nCurrent tip, 1.4 beta.\ngo version devel +91fa3e159e2f Sun Nov 16 14:25:33 2014 -0500 linux/amd64\nalso triggers on 1.3.\n\nWhat steps reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\ncurl \u003ca href=\"http://play.golang.org/p/_P-QfTpoCX.go\"\u003ehttp://play.golang.org/p/_P-QfTpoCX.go\u003c/a\u003e \u0026gt;main.go \u0026amp;\u0026amp; go build main.go\n\n\u003ca href=\"http://play.golang.org/p/_P-QfTpoCX\"\u003ehttp://play.golang.org/p/_P-QfTpoCX\u003c/a\u003e (not runnable on playground due to size)\n\nCreated with\n\ncurl \u003ca href=\"http://play.golang.org/p/xz3WgOaZvA.go\"\u003ehttp://play.golang.org/p/xz3WgOaZvA.go\u003c/a\u003e | perl -pe 'if (/xxx/) { for ($1;\n$i\u0026lt;6000; $i++) {print} }' \u0026gt;output.go\n\nadjusting 6000 downwards makes the segfault not happen.\n\nOriginally triggered while embedding assets.\n\nWhat happened?\n\ngo build command-line-arguments: /home/tv/src/go/pkg/tool/linux_amd64/6g: signal:\nsegmentation fault (core dumped)\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:49:59Z",
	"created_at": "2014-11-21T15:49:25Z",
	"updated_at": "2016-06-25T01:44:45Z"
}
