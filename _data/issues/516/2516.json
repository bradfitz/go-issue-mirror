{
	"id": 51279321,
	"number": 2516,
	"state": "closed",
	"title": "runtime: dump stacktrace for all goroutines from a running go process",
	"body": "by **michael.schurter**:\n\n\u003cpre\u003eWhen a go process aborts due to a SIGSEV signal or panic() call a stacktrace is dumped\nfor every goroutine at the point the signal was received or panic called.\n\nIt would be useful to be able to dump stacktraces for running go processes without\ncausing the process to exit similar to sending SIGQUIT to JVM processes.\n\nAnother alternative would be to allow dumping stacktraces for all goroutines, not just\nthe currently exiting goroutine as runtime.Caller[1] and debug.PrintStack[2] provide.\n\n[1] \u003ca href=\"http://golang.org/pkg/runtime/#Caller\"\u003ehttp://golang.org/pkg/runtime/#Caller\u003c/a\u003e\n[2] \u003ca href=\"http://golang.org/pkg/runtime/debug/#PrintStack\"\u003ehttp://golang.org/pkg/runtime/debug/#PrintStack\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:13:26Z",
	"created_at": "2011-12-01T22:42:04Z",
	"updated_at": "2016-06-24T21:21:16Z"
}
