{
	"id": 51276584,
	"number": 516,
	"state": "closed",
	"title": "asn1: unmarshalling strings in structs fails ",
	"body": "\u003cpre\u003eTrying to unmarshal a struct containing a string field fails on recent hg\ncheckout on 386-linux. Below is code demonstrating this:\n\n\npackage main\n\nimport \u0026quot;asn1\u0026quot;\nimport \u0026quot;bytes\u0026quot;\nimport \u0026quot;io/ioutil\u0026quot;\n\ntype Ok    struct { A, B int }\ntype Fails struct { S string; A, B int }\n\nfunc main() {\n\tvar ok Ok\n\tvar fails Fails\n\n\t// This is ok\n\tbuf := bytes.NewBuffer(nil)\n\tif e := asn1.Marshal(buf, Ok{0x22,0x33}); e!=nil {\n\t\tpanic(\u0026quot;Marshal\u0026quot;)\n\t}\n\tif _, e := asn1.Unmarshal(\u0026amp;ok, buf.Bytes()); e!=nil {\n\t\tpanic(\u0026quot;Unmarshal\u0026quot;)\n\t}\n\n\t// Now try it with a structure containing a string\n\tbuf = bytes.NewBuffer(nil)\n\tif e := asn1.Marshal(buf, Fails{\u0026quot;foo\u0026quot;, 0x22,0x33}); e!=nil {\n\t\tpanic(\u0026quot;Marshal2\u0026quot;)\n\t}\n\t// write it to a file where it can be inspected, try with:\n\t// openssl asn1parse -inform DER -in /tmp/asn1.der\n\tioutil.WriteFile(\u0026quot;/tmp/asn1.der\u0026quot;, buf.Bytes(), 0644)\n\n\t// The bug is here - this fails!\n\tif _, e := asn1.Unmarshal(\u0026amp;fails, buf.Bytes()); e!=nil {\n\t\tpanic(\u0026quot;Unmarshal2\u0026quot;)\n\t}\n\n}\u003c/pre\u003e",
	"user": {
		"login": "taruti",
		"id": 42174,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:04:53Z",
	"created_at": "2010-01-11T14:29:35Z",
	"updated_at": "2016-06-24T19:12:40Z"
}
