{
	"id": 167946476,
	"number": 16516,
	"state": "closed",
	"title": "go get needs some way to set missing user.email (maybe user.name) information in repos it pulls",
	"body": "1. What version of Go are you using (`go version`)?\r\n    ```\r\n    go version go1.6.2 windows/amd64\r\n    ```\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n    ```\r\n    set GOARCH=amd64\r\n    set GOBIN=\r\n    set GOEXE=.exe\r\n    set GOHOSTARCH=amd64\r\n    set GOHOSTOS=windows\r\n    set GOOS=windows\r\n    set GOPATH=E:\\src\\Go\r\n    set GORACE=\r\n    set GOROOT=C:\\Go\r\n    set GOTOOLDIR=C:\\Go\\pkg\\tool\\windows_amd64\r\n    set GO15VENDOREXPERIMENT=1\r\n    set CC=gcc\r\n    set GOGCCFLAGS=-m64 -mthreads -fmessage-length=0\r\n    set CXX=g++\r\n    set CGO_ENABLED=1\r\n    ```\r\n\r\n3. What did you do?\r\n    - Global .gitconfig has `user.name` set and `user.useConfigOnly = true`, while `user.email` is purposefully unset.\r\n        - This is to support using a personal address for personal repos, and a work address for work repos.\r\n\r\n4. What did you expect to see?\r\n    - Some mechanism for setting the missing information ahead of time\r\n\r\n5. What did you see instead?\r\n    - `go get` pulls from git remotes (e.g. github) fail because their individual repo configs require `user.email` to be set\r\n        - Especially annoying when another tool is trying to do this for you (e.g. vscode)\r\n\r\n",
	"user": {
		"login": "dakotahawkins",
		"id": 638578,
		"type": "User",
		"site_admin": false
	},
	"comments": 12,
	"closed_at": "2016-07-29T03:47:25Z",
	"created_at": "2016-07-27T20:18:09Z",
	"updated_at": "2016-07-29T19:25:22Z"
}
