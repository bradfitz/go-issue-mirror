{
	"id": 236092063,
	"body": "It may be that it is a bug in Git, though while I can't think of a great reason for it to behave that way I'd suspect it's for some valid reason.\r\n\r\nEither way, it's *absolutely* not a \"broken configuration\". Those two settings are the way that they are for good reason, and in working directly with a git repo it's no problem (in fact it's preferable) to set whichever email I need to set in the local config. It's probably somewhat common to do that with this setting -- I don't want to accidentally commit to a personal or public repo with my work e-mail address and I similarly don't want to commit to work repos with my personal address. So, if it works as intended then it wasn't intended to work very well.\r\n\r\nI think there are at least four different ways Go could behave to make this better:\r\n\r\n1. It could make sure it knows user.name and user.email prior to attempting operations that may require them, and request whatever is missing ahead of time interactively, or\r\n2. It could alter the way it pulls code to enforce the default configuration it's currently just expecting to exist (`--rebase=false` for `pull` and I think `--checkout` for `submodule update`), or\r\n3. It could behave more or less like it does now but provide preferences (environment variables, I guess?) that users could set that would then be set in local git configs after an initial clone, or\r\n4. It could just look for a \"template\" config file in $GOPATH to merge into local configs\r\n\r\nIf Go is just going to run git commands on my behalf, and (compounding the issue) if things that work with Go are going to run those commands that run the git commands on my behalf, it's just extra annoying due to the additional steps I'm removed from using git directly.\r\n\r\nI'm not saying none of those options have potential downsides, but I think we could probably find one with more net positives than negatives.\r\n\r\nIt's also obviously not a critical problem and it has (annoying) workarounds, but at the moment it doesn't make using Go very pleasant some of the time, and I think it would be a shame if the consensus was that that's the intent.\r\n\r\nAt the very least I think it would be worth mentioning this in the docs somewhere if we've identified a (valid) git configuration that doesn't work seamlessly with Go's usage of git.",
	"user": {
		"login": "dakotahawkins",
		"id": 638578,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-29T04:29:55Z",
	"updated_at": "2016-07-29T04:29:55Z"
}
