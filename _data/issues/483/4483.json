{
	"id": 51282209,
	"number": 4483,
	"state": "open",
	"title": "spec: more stringent type assertions",
	"body": "\u003cpre\u003eFor:\n\n$ cat test.go\npackage main\n\nimport \u0026quot;io\u0026quot;\n\nfunc main() {\n\tvar y interface {\n\t\tRead()\n\t}\n\t_ = y.(io.Reader)\n}\n\nNeither compiler complains:\n\n$ gccgo test.go\n$ go tool 6g test.go\n\nAnd according to the spec it is a valid program.\n\nHowever, any concrete value assigned to y must implement Read(), and thus cannot\npossibly implement io.Reader.Read. Thus, this type assertion will fail and we know this\nat compile time.\n\nThe spec should require this check and compilers should implement it. This would be a\nbackward-incompatible language change, albeit with a very small chance of actually\nbreaking existing code.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Go2"
		},
		{
			"name": "LanguageChange"
		},
		{
			"name": "LongTerm"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"created_at": "2012-12-03T22:51:10Z",
	"updated_at": "2015-04-14T19:45:18Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
