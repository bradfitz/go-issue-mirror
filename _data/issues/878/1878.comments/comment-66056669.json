{
	"id": 66056669,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4 by **julian@quantumfyre.co.uk**:\n\n\u003cpre\u003eDropping the 'z', whilst keeping the 'Z' would basically be lying (the line number fixup\napplies to the 'z' that wasn't pushed, not the existing one it will get applied to) ...\nthat doesn't seem like a reasonable approach to me.\n\nYou could not push a 'z' or a 'Z', but then the //line doesn't do anything ... so then\nyou are kinda lying to the developer.\n\nI can't really see a reason not to just add the pops.  The //line \"directive\" is then\nequivalent to a C #include (except for the 'Z' to fix the line numbering, though if the\nline is 1, then the 'Z' doesn't actually make any difference).\n\nAfter making the patch in comment 1 I noticed that the source line information in panic\ntracebacks was wrong in a different way.  Instead of attributing everything to the first\nfile in my cgo-based library it was now picking the right file, but getting the line\nwrong (negative in fact).\n\nSo I updated dosrcline (in src/pkg/runtime/symtab.c) to create a complete line-\u003e file\nmapping, and with a couple of tweaks to cgo, I now get the actual line of code that I\ngot wrong in panic backtraces (i.e. if I code foo.go wrong the traceback mentions foo.go\nnot _obj/foo.cgo1.go or _obj/bar.cgo1.go).  This is _very_ useful when developing the\nlibrary - so, since my patch is the first step in making this working, I'm biased\ntowards popping.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-08-21T10:46:41Z",
	"updated_at": "2014-12-08T10:10:20Z"
}
