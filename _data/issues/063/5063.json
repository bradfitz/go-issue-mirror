{
	"id": 51283066,
	"number": 5063,
	"state": "closed",
	"title": "time: time.Timer with large duration causes 100% CPU usage on Intel 32-bit",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n\u003ca href=\"http://play.golang.org/p/wpNOzCVSr9\"\u003ehttp://play.golang.org/p/wpNOzCVSr9\u003c/a\u003e\n\nWhat is the expected output?\nIdle CPU\n\nWhat do you see instead?\nIn the output of top the process has 100% CPU usage.\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n8g\n\nWhich operating system are you using?\nUbuntu 12.04\n\nWhich version are you using?  (run 'go version')\ngo version devel +b5b5c246be0c Fri Mar 15 17:08:07 2013 -0700 linux/386\n\nIf the divisor is changed to 1.44 or larger, the process does not use 100% CPU.\n\nHere's a profile from a slightly different program that was waiting on such a timer:\n\n(pprof) top\nTotal: 80 samples\n      25  31.2%  31.2%       37  46.2% runtime.entersyscallblock\n      15  18.8%  50.0%       76  95.0% timerproc\n      10  12.5%  62.5%       10  12.5% releasep\n       8  10.0%  72.5%        8  10.0% runtime.nanotime\n       6   7.5%  80.0%        6   7.5% runtime.noteclear\n       5   6.2%  86.2%        5   6.2% runtime.xchg\n       4   5.0%  91.2%        9  11.2% runtime.lock\n       3   3.8%  95.0%        3   3.8% runtime.setprof\n       1   1.2%  96.2%        1   1.2% runtime.exitsyscall\n       1   1.2%  97.5%        1   1.2% runtime.getcallersp\u003c/pre\u003e",
	"user": {
		"login": "kisielk",
		"id": 58618,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:27:04Z",
	"created_at": "2013-03-16T21:59:14Z",
	"updated_at": "2016-06-24T22:35:45Z"
}
