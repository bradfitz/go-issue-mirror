{
	"id": 66098324,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eSummarizing Brad and my discussion about this just now:\n\nIt should be possible to fully automate.  I was running qemu in -nographic mode using\nstdin/stdout as a serial port, so worst case it should be possible to script the\ninstaller using something like \"expect\".  (For simplicity when I was initially doing it,\nI was using a dumb script that blindly fed installer answers at certain time intervals.)\n\nOpenBSD's installer also supports an \"autoinstall\" option that uses response files\n(documented here:\n\u003ca href=\"http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man8/autoinstall.8?query=autoinstall\u0026sec=8)\"\u003ehttp://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man8/autoinstall.8?query=autoinstall\u0026sec=8)\u003c/a\u003e,\nbut I've never used those so not sure how suitable they are for this use case.  One\nconcern is they seem to want to be fetched from a DHCP server, whereas I suspect it's\neasier if we can configure qemu to run without a network connection.\n\nAs a first step, I'll work on an Ubuntu-compatible script that fetches an OpenBSD\ninstall ISO and then creates a GCE-compatible image, and Brad says he can take it from\nthere.\u003c/pre\u003e",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-09-03T23:48:45Z",
	"updated_at": "2014-12-08T10:47:58Z"
}
