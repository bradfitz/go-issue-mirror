{
	"id": 154889469,
	"number": 15688,
	"state": "closed",
	"title": "GoLang Scrypt Package \"Pull Request\"",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\nLatest\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nThis is an Online IDE Cloud9IDE:\r\n\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/ubuntu/workspace\"\r\nGORACE=\"\"\r\nGOROOT=\"/opt/go\"\r\nGOTOOLDIR=\"/opt/go/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n3. What did you do?\r\n\r\nIm adding a New Go-Lang function for the scrypt package:\r\n\r\nA link on play.golang.org is best.\r\n\r\n\r\n4. What did you expect to see?\r\nThis is a pull request.... Not expecting to see anything. Im just making sure somone just fixes this.\r\n\r\n5. What did you see instead?\r\nLike i said above..\r\n\r\nOther info.. I preety much pasted this in gerrit code review too:\r\n\r\n\r\nIm preety much adding a function to check if Hashed Password is equal to the Password they inputed.. This is the function\r\n\r\n```\r\nfunc checkPassword(passCheck string, HashedPass string , salt []byte ,N, r, p, keyLen int) error{\r\n    checkFunc,err := scrypt.Key([]byte(passCheck), salt, N, r, p, keyLen)\r\n    if err != nil{\r\n      errOrg = errors.New(\"Could Not Activate Key.\")\r\n    }\r\n    if string(checkFunc) == HashedPass{\r\n        errOrg = nil\r\n    }else{\r\n        errOrg = errors.New(\"ACCESS DENIED\")\r\n    }\r\n    return errOrg;\r\n}\r\n\r\n```\r\n\r\nI could not represent a go playground or any online simple compiler since i need to import the scrypt package.. But here is a working test:\r\n\r\n```\r\npackage main;\r\n\r\nimport(\r\n    \"fmt\"\r\n    \"errors\"\r\n    \"golang.org/x/crypto/scrypt\"\r\n    )\r\n\r\nvar errOrg error;\r\nfunc main(){\r\n    //func Key(password, salt []byte, N, r, p, keyLen int) ([]byte, error)\r\n    dk,err := scrypt.Key([]byte(\"Password\"), []byte(\"dfs\"), 16384, 8, 1, 32)\r\n    check(err)\r\n    fmt.Println(string(dk))\r\n    \r\n    checkPassword(\"Password\", string(dk), []byte(\"dfs\"), 16384, 8, 1, 32)\r\n    if errOrg == nil{\r\n        fmt.Println(\"*******ACCESS GRANTED********\")\r\n    }else{\r\n        panic(errOrg)\r\n    }\r\n}\r\n\r\nfunc check(e error){\r\n    if e!=nil{\r\n        panic(e);\r\n    }\r\n}\r\n\r\nfunc checkPassword(passCheck string, HashedPass string , salt []byte ,N, r, p, keyLen int) error{\r\n    checkFunc,err := scrypt.Key([]byte(passCheck), salt, N, r, p, keyLen)\r\n    if err != nil{\r\n      errOrg = errors.New(\"Could Not Activate Key.\")\r\n    }\r\n    if string(checkFunc) == HashedPass{\r\n        errOrg = nil\r\n    }else{\r\n        errOrg = errors.New(\"ACCESS DENIED\")\r\n    }\r\n    return errOrg;\r\n}\r\n\r\n```\r\n\r\n",
	"user": {
		"login": "amanuel2",
		"id": 16020076,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2016-05-16T15:40:09Z",
	"created_at": "2016-05-15T04:21:19Z",
	"updated_at": "2016-05-16T15:40:10Z"
}
