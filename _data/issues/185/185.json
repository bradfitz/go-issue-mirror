{
	"id": 51276154,
	"number": 185,
	"state": "closed",
	"title": "Struct fields should be accesible with a[i] sytax (esp. for anonymous fields) and work with len(..)",
	"body": "by **hugo.vincent**:\n\n\u003cpre\u003etype myT struct {\n\tint;\n\tstring\n}\nb := myT{0, \u0026quot;test\u0026quot;};\n\nWhat is the expected output? What do you see instead?\nb[0] == 0\nb[1] == \u0026quot;test\u0026quot;\n\nThis would be especially useful for decoding with variadic arguments to\nfunctions, c.f. this seems messy:\nfunc test(in ...)\n{\n\ti := reflect.NewValue(in).(*reflect.StructValue);\n\tj := i.Type().(*reflect.StructType);\n\tfmt.Print(\u0026quot;Num fields\u0026quot;, j.NumField(), \u0026quot;\\n\u0026quot;);\n\tfmt.Print(\u0026quot;First field\u0026quot;, i.Field(0).Interface(), \u0026quot;\\n\u0026quot;);\n}\n\nfunc main()\n{\n\ttest(42);\n\ttest(1, 2, 4, \u0026quot;test\u0026quot;);\n}\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:03:34Z",
	"created_at": "2009-11-14T20:33:01Z",
	"updated_at": "2016-06-24T19:04:44Z"
}
