{
	"id": 52664403,
	"number": 9420,
	"state": "closed",
	"title": "net: using File methods on Conn/Listener/PacketConn disables non-blocking I/O and runtime-integrated network poller's deadline features",
	"body": "Calling a network connection's `File()` method prevents deadlines from working.\r\n\r\nThis won't timeout correctly:\r\n\r\n\tc, _ := net.ListenUDP(\"udp\", \u0026net.UDPAddr{IP: net.IP{127, 0, 0, 1}, Port: 9999})\r\n\tfmt.Println(\"timing out in 1s\")\r\n\tc.SetReadDeadline(time.Now().Add(time.Second))\r\n\r\n\t// calling File() removes the ability to use deadlines\r\n\t_, _ = c.File()\r\n\r\n\tbuf := make([]byte, 1024)\r\n\t_, e := c.Read(buf)\r\n\tfmt.Println(e)\r\n\r\n\r\nIt would be nice if deadlines still worked when a socket is in blocking mode, but if it's not possible this should at least be documented.\r\n",
	"user": {
		"login": "jbardin",
		"id": 35067,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-22T23:34:01Z",
	"created_at": "2014-12-22T16:25:34Z",
	"updated_at": "2016-06-25T01:57:06Z"
}
