{
	"id": 255797922,
	"body": "\u003e Functions that include tests of parameter values can be cheaper to inline for specific calls that pass constant arguments for those parameters. That is, the cost of inlining is not solely determined by the function itself, it is also determined by the nature of the call.\r\n\r\nA common case where this would apply is when calling marshallers/unmarshallers that use `reflect` to inspect `interface{}` parameters. Many of them tend to have a \"fast-path\" in case `reflect.Type` is some basic type or has some basic property. Inlining that fast-path would make it even faster. Eg: see `binary.Read` and think how much of its code could be pulled when the value bound to the `interface{}` argument is known at compile-time. \r\n\r\n\r\n",
	"user": {
		"login": "rasky",
		"id": 1014109,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-24T16:52:13Z",
	"updated_at": "2016-10-24T16:52:13Z"
}
