{
	"id": 236983468,
	"body": "I've taken a look through the proposal doc and I like it.\r\n\r\n@tombergan , I looked through your API.  Here's a few comments:\r\n\r\n- We absolutely want to have the dump analyzer/viewer to be able to handle large heaps.  At the same time, I think designing the analyzer to somehow process the dump with O(1) space is a hard research problem.  I don't want us to tackle that in v1.  For now, we can probably get away with using O(1) space per object (independent of object size) as the current viewer attempts to do.  I expect most large heaps are large because of large objects ([]byte probably), so using O(1) space per object will reduce space usage significantly.\r\n- The API surface is really large.  I'm not sure there is anything really to be done here, except to prune unnecessary or redundant stuff whenever we can.\r\n\r\n\u003e What information is currently missing from Linux core dumps of Go programs that would be necessary \u003e to reconstruct the heap? What is required to include that information in GOTRACEBACK=crash core dumps?\r\n\r\nThis one should be our top priority.  We'll want 1.8 to have all the fixes we need to get reliable types/breadcrumbs/dwarfinfo/etc. in the dumps (core files?).  It would be a bummer to discover after the 1.8 freeze (Nov 1) that there is one bit of information we realize we needed but didn't have.",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-02T17:44:11Z",
	"updated_at": "2016-08-02T17:44:11Z"
}
