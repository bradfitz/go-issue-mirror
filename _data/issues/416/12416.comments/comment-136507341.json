{
	"id": 136507341,
	"body": "IIUC, the rule stating that one should not store pointers to `go` memory from `C` code (as the pointed at `go` value may be a struct holding fields pointing to `go` memory, would significantly complicate writing (in my case) extension modules in `go`, like I do in `gopy` and tracked there: go-python/gopy#58.\r\n\r\n(I am not complaining, I am just trying to make sure I correctly understand the proposal)\r\n\r\ndoes this mean that the \"only\" way to write extension modules (for CPython, C-ruby, C-shiny-interpreter) which usually involves wrapping a `go` struct inside a `C` struct for the target VM consumption, is to use a mechanism like [golang.org/x/mobile/bind/seq](https://godoc.org/golang.org/x/mobile/bind/seq)?\r\nie: in-process RPC, a kind of LPC (local procedure call)?",
	"user": {
		"login": "sbinet",
		"id": 1070920,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-31T21:30:47Z",
	"updated_at": "2015-08-31T21:32:00Z"
}
