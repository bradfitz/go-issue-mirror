{
	"id": 136606709,
	"body": "@ianlancetaylor sorry, I wasn't indeed very clear.\r\nit's probably only tangential to this issue, but as the crux of the problem, at least for writing extension modules, is to wrap `go` values which may or may not contain `go` pointers, I figured it could be possible to address this issue once, and for all the VMs one wants to extend with `go`.\r\nwrapping a `reflect.Value` and exposing a `C` API that can be consumed by all interpreted languages' object model, with either the map-registry approach or the serialization approach for crossing the `go`/`C` boundary.\r\n\r\nwell, I am just thinking out loud, but it could be a nice \"niche\" to fill.",
	"user": {
		"login": "sbinet",
		"id": 1070920,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-01T06:56:04Z",
	"updated_at": "2015-09-01T06:56:04Z"
}
