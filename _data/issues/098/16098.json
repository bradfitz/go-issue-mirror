{
	"id": 160970493,
	"number": 16098,
	"state": "closed",
	"title": "container/heap: remove one unnecessary comparison in Fix",
	"body": "The `heap.Fix` function first calls `down` and then calls `up`. If we moved the element down, we don't actually need to call `up`, saving a comparison (call to `Less`) in that case. We can do this by having `down` return whether the element moved and `Fix` can then do\r\n```\r\n  if !down(h, i, j.Len()) {\r\n    up(h, i)\r\n  }\r\n```\r\n\r\nThis one comparison won't matter in most cases, but if we have only a couple of elements, `Less` is expensive, and we repeatedly call `Fix` on the root, it can be significant.\r\n\r\nLet me know 1) if it's ok to make this change, and 2) if someone who already has an environment for contributing set up wants to make it (otherwise I will do it).",
	"user": {
		"login": "RaduBerinde",
		"id": 16544120,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-08-16T00:40:20Z",
	"created_at": "2016-06-17T20:38:32Z",
	"updated_at": "2016-08-16T00:40:20Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
