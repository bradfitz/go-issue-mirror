{
	"id": 155621528,
	"number": 15737,
	"state": "closed",
	"title": "x/mobile: Window always 800x800px",
	"body": "I can't seem to resize the viewport with gomobile.  It's cumbersome to manually drag the corner of the viewport to match the screen size of an iPhone, so I'm hoping to do it programmatically, but the events seem to be getting overruled.\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t_ \"image/jpeg\"\r\n\r\n\t\"github.com/kr/pretty\"\r\n\r\n\t\"golang.org/x/mobile/app\"\r\n\t\"golang.org/x/mobile/event/size\"\r\n\t\"golang.org/x/mobile/geom\"\r\n)\r\n\r\nfunc main() {\r\n\tpxPerPt := float32(163.0 / 72.0)\r\n\tdefaultSizeEvent := size.Event{WidthPx: 400, HeightPx: 800, WidthPt: geom.Pt(float32(400) / pxPerPt), HeightPt: geom.Pt(float32(800) / pxPerPt), PixelsPerPt: pxPerPt, Orientation: size.OrientationPortrait}\r\n\r\n\tapp.Main(func(a app.App) {\r\n\t\ta.Send(defaultSizeEvent)\r\n\t\tfor e := range a.Events() {\r\n\t\t\tpretty.Println(e)\r\n\t\t}\r\n\t})\r\n}\r\n```\r\n\r\nI ran `gomobile build` and executed the binary and expected to see a viewport 400px wide by 800px tall.  Instead, I always get the default 800x800px viewport.  I do not have a device plugged in.  Debugging the Events() channel, it looks like 3 Size Events are automatically run after my Size event is processed:\r\n```\r\nsize.Event{WidthPx:400, HeightPx:800, WidthPt:176.68711853027344, HeightPt:353.3742370605469, PixelsPerPt:2.2638888359069824, Orientation:1}\r\nsize.Event{WidthPx:800, HeightPx:800, WidthPt:260.63348388671875, HeightPt:260.63348388671875, PixelsPerPt:3.069444417953491, Orientation:0}\r\nsize.Event{WidthPx:800, HeightPx:800, WidthPt:260.63348388671875, HeightPt:260.63348388671875, PixelsPerPt:3.069444417953491, Orientation:0}\r\nsize.Event{WidthPx:800, HeightPx:800, WidthPt:260.63348388671875, HeightPt:260.63348388671875, PixelsPerPt:3.069444417953491, Orientation:0}\r\nlifecycle.Event{\r\n    From:        0x0,\r\n    To:          0x1,\r\n    DrawContext: \u0026gl.context{\r\n        cptr:          0x0,\r\n        debug:         0,\r\n        workAvailable: 0xc820062240,\r\n        work:          0xc8200622a0,\r\n        retvalue:      0xc820062300,\r\n        cargs:         {\r\n            {},\r\n            {},\r\n            {},\r\n        },\r\n        parg: {\r\n            (*gl._Ctype_char)(nil),\r\n            (*gl._Ctype_char)(nil),\r\n            (*gl._Ctype_char)(nil),\r\n        },\r\n    },\r\n}\r\nlifecycle.Event{\r\n    From:        0x1,\r\n    To:          0x2,\r\n    DrawContext: \u0026gl.context{\r\n        cptr:          0x0,\r\n        debug:         0,\r\n        workAvailable: 0xc820062240,\r\n        work:          0xc8200622a0,\r\n        retvalue:      0xc820062300,\r\n        cargs:         {\r\n            {},\r\n            {},\r\n            {},\r\n        },\r\n        parg: {\r\n            (*gl._Ctype_char)(nil),\r\n            (*gl._Ctype_char)(nil),\r\n            (*gl._Ctype_char)(nil),\r\n        },\r\n    },\r\n}\r\nlifecycle.Event{\r\n    From:        0x2,\r\n    To:          0x3,\r\n    DrawContext: \u0026gl.context{\r\n        cptr:          0x0,\r\n        debug:         0,\r\n        workAvailable: 0xc820062240,\r\n        work:          0xc8200622a0,\r\n        retvalue:      0xc820062300,\r\n        cargs:         {\r\n            {},\r\n            {},\r\n            {},\r\n        },\r\n        parg: {\r\n            (*gl._Ctype_char)(nil),\r\n            (*gl._Ctype_char)(nil),\r\n            (*gl._Ctype_char)(nil),\r\n        },\r\n    },\r\n}\r\nlifecycle.Event{\r\n    From:        0x3,\r\n    To:          0x2,\r\n    DrawContext: \u0026gl.context{\r\n        cptr:          0x0,\r\n        debug:         0,\r\n        workAvailable: 0xc820062240,\r\n        work:          0xc8200622a0,\r\n        retvalue:      0xc820062300,\r\n        cargs:         {\r\n            {},\r\n            {},\r\n            {},\r\n        },\r\n        parg: {\r\n            (*gl._Ctype_char)(nil),\r\n            (*gl._Ctype_char)(nil),\r\n            (*gl._Ctype_char)(nil),\r\n        },\r\n    },\r\n}\r\n```\r\n\r\nI also tried setting the viewport using the Viewport() function from https://godoc.org/golang.org/x/mobile/gl#Context, but that did not work either.  It appears that an 800x800px viewport is somehow registered into the startup process and there doesn't appear to be an easy way to change that, or am I missing something?\r\n\r\n```\r\ngo version go1.6.2 darwin/amd64\r\n\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/ever/dev/go/\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"clang\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fno-common\"\r\nCXX=\"clang++\"\r\nCGO_ENABLED=\"1\"\r\n```",
	"user": {
		"login": "everdev",
		"id": 7647073,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-06-06T23:38:21Z",
	"created_at": "2016-05-18T23:08:01Z",
	"updated_at": "2016-06-06T23:38:21Z"
}
