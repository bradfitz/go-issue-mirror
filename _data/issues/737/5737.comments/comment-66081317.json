{
	"id": 66081317,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eFor the MySQL driver, I accomplished it like this:\n\ndb, err := sql.Open(\"mysql\", \"user@tcp(localhost:3306)/test?tls=custom\")\n    db.Driver().(mysql.TLSConfig).SetTLSConfig(\"custom\", \u0026tls.Config{\n        RootCAs:      rootCAs,\n        Certificates: clientCerts,\n    })\n\n(Pull request here: \u003ca href=\"https://github.com/go-sql-driver/mysql/pull/101)\"\u003ehttps://github.com/go-sql-driver/mysql/pull/101)\u003c/a\u003e\n\nThe solution is somewhat a hack. Issue #4804 has a discussion whether or not to open a\nconnection on the Open function. If it did, this patch wouldn't work. \n\nSo there are several problems:\n\n- \"Open\" shouldn't be called Open, if it will not actually Open any connections.\n- \"Open\" is too restrictive. It feels very PHP like, not Go like - which btw, I moved\naway from PHP for a reason.\n\nThere are also other assumptions made by database/sql. The prepared statements interface\nwould seem to suggest that only indexed parameters \"?\" are allowed. What about :named\nparameters?\u003c/pre\u003e",
	"user": {
		"login": "lukescott",
		"id": 486224,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-20T22:15:47Z",
	"updated_at": "2014-12-08T10:31:24Z"
}
