{
	"id": 66061445,
	"body": "\u003ca id=\"c14\"\u003e\u003c/a\u003eComment 14 by **Bond.Dmitry**:\n\n\u003cpre\u003eA small update: I've checked the 'normal' connections and they also have the same\npattern, so checking for patterns is not an option actually.\n\nI've followed the link that you gave, and I see that this problem occurs when the client\ngets the same local and foreign addresses. But you can actually check this equality and\nmaybe give special options for the client to \"connect to itself\" and in other cases -\nperform additional connect attempt if got two equal addresses. Or any other solutions,\nbut I really doubt that currently it is working as intended.\n\nIt causes very serious effects: for example I try to connect to the service which is not\nup yet, and after some connection attempts I get a good and ready rpc.Client. And when I\ncall some methods using that client - I get a panic in other goroutine which crashes the\nwhole application.\n\nIt means that there may be cases that the service is temporarily down and it would crash\nthe front-end, because there is absolutely no possibility to catch a panic in other go\nroutine after a Call on a 'fake' client which cannot be identified as 'fake'. \n\nSo a solution is still needed.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-01-21T21:23:05Z",
	"updated_at": "2014-12-08T10:14:20Z"
}
