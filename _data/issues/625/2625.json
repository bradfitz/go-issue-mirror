{
	"id": 51279475,
	"number": 2625,
	"state": "closed",
	"title": "strconv: FormatFloat(x, 'g', -1, 64) does not give the most precise decimal approximation",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n1. compile and run\n\npackage main\n\nimport \u0026quot;strconv\u0026quot;\nimport \u0026quot;fmt\u0026quot;\n\nfunc main() {\n\tfmt.Println(strconv.FormatFloat(383260575764816448, 'g', -1, 64))\n}\n\n\nWhat is the expected output?\n\n3.8326057576481645e+17\n\nWhat do you see instead?\n\n3.8326057576481644e+17\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n6g\n\nWhich operating system are you using?\n\nlinux\n\nWhich revision are you using?  (hg identify)\n\nc956aa39a269 (tip)\n\nPlease provide any additional information below.\n\nThe obtained result has the same length and can be parsed to the same float64 as the\nexpected result. However, it is not the closest possible to the original float\n(5988446496325257p+6).\u003c/pre\u003e",
	"user": {
		"login": "remyoudompheng",
		"id": 175246,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:13:57Z",
	"created_at": "2011-12-28T00:58:14Z",
	"updated_at": "2016-06-24T21:22:32Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
