{
	"id": 51280083,
	"number": 3071,
	"state": "closed",
	"title": "gccgo: syscall package differences",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n\nGC=gccgo go build .\n\nWhat is the expected output?\n\nThis code compiles against the linux/amd64/6g syscall package on Linux\n\nWhat do you see instead?\n\n./main.go:12:17: error: reference to undefined identifier ‘syscall.Getcwd’\n./main.go:15:17: error: reference to undefined identifier ‘syscall.Adjtimex’\n./main.go:37:17: error: reference to undefined identifier ‘syscall.Getdents’\n./main.go:42:14: error: reference to undefined identifier ‘syscall.Getrlimit’\n./main.go:47:17: error: reference to undefined identifier ‘syscall.InotifyInit1’\n./main.go:67:14: error: reference to undefined identifier ‘syscall.Setrlimit’\n./main.go:73:14: error: reference to undefined identifier ‘syscall.Sysinfo’\n./main.go:75:14: error: reference to undefined identifier ‘syscall.Tgkill’\n./main.go:83:14: error: reference to undefined identifier ‘syscall.Ustat’\n./main.go:84:14: error: reference to undefined identifier ‘syscall.Utime’\n./main.go:122:14: error: reference to undefined identifier ‘syscall.SyncFileRange’\n./main.go:180:14: error: reference to undefined identifier ‘syscall.Reboot’\n./main.go:181:17: error: reference to undefined identifier ‘syscall.ReadDirent’\n./main.go:182:20: error: reference to undefined identifier ‘syscall.ParseDirent’\n./main.go:188:10: error: reference to undefined identifier ‘syscall.LsfStmt’\n./main.go:189:10: error: reference to undefined identifier ‘syscall.LsfJump’\n./main.go:190:10: error: reference to undefined identifier ‘syscall.LsfSocket’\n./main.go:191:10: error: reference to undefined identifier ‘syscall.SetLsfPromisc’\n./main.go:192:10: error: reference to undefined identifier ‘syscall.AttachLsf’\n./main.go:193:10: error: reference to undefined identifier ‘syscall.DetachLsf’\n./main.go:205:17: error: reference to undefined identifier ‘syscall.Time’\n\nLsf stuff is net package support code. Maybe gccgo uses glibc to implement those APIs?\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\ngccgo\n\nWhich operating system are you using?\n\nlinux\n\nWhich revision are you using?  (hg identify)\n\ntip\n\nPlease provide any additional information below.\n\nI'm working on a tool that generates a multi-package/multi-command Go project that calls\nall the functions in the standard library. I'm hoping the tool will help to easily build\na big test project for the go tool. It also turned up these differences between 6g and\ngccgo.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/3071/0/main.go\"\u003emain.go\u003c/a\u003e (4420 bytes)",
	"user": {
		"login": "alberts",
		"id": 409689,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:16:00Z",
	"created_at": "2012-02-19T14:42:37Z",
	"updated_at": "2016-06-24T21:28:02Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
