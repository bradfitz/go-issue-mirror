{
	"id": 51277305,
	"number": 1071,
	"state": "closed",
	"title": "Confusing error message for ambiguous syntax, gofmt removes the fix",
	"body": "by **consalus**:\n\n\u003cpre\u003eGOOS=darwin\nGOARCH=amd64\nhg identify: e785d68bf901+ tip\n\nThis is probably working as intended, but I think the error message is a bit misleading,\nand one\nof two fixes is reverted by gofmt, so it seems like something could be improved\nsomewhere..\n\nWith the following code: \n\npackage main\n\nimport (\n\t\u0026quot;container/vector\u0026quot;\n)\n\n\nfunc main() {\n\tvar vec vector.Vector\n\tfor _, _ = range []interface{}(vec) {\n\t}\n}\n\nThe compiler gives the error:\n\ntestcase.go:10: syntax error: unexpected {, expecting {\n\nThat is a bit confusing.\nAs an attempt at a fix (based on the part of the spec that talks about the syntactical\nambiguity there), I change the for loop to:\n\nfor _, _ = range ([]interface{}(vec)) {\n}\n\nNot unreasonable, and it compiles without error now. However, when I run gofmt, the\nparens \nget removed, and I get the compile error again.\nOf course, the solution is to put the parenthesis around the type only, making it:\n\nfor _, _ = range ([]interface{})(vec) {\n}\n\nHowever, it's a confusing process to get from the first version of the code to this\ncorrect one.\nPerhaps gofmt should not remove parenthesis if it can determine they are resolving an\nambiguity, or move them to the minimal scope required to keep it unambiguous. \nOr, failing that, having the syntax error recommended that the type be in parens would\nalso probably be better.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:06:52Z",
	"created_at": "2010-09-02T16:33:55Z",
	"updated_at": "2016-06-24T19:19:43Z"
}
