{
	"id": 66086127,
	"body": "\u003ca id=\"c12\"\u003e\u003c/a\u003eComment 12:\n\n\u003cpre\u003eHi Russ,\n\nThanks for checking this out. I ran my app with the pre- and post-fix versions and it\nlooks like the GC time is back under control (and slightly better than 1.1.2's\nperformance, as Dave predicted).\n\nWith 7266a3768bfa (post-fix) and around 280k goroutines I see GC times like:\ngc59(8): 564+287+183 ms, 4586 -\u003e 2621 MB\nroughly 3.7µs per goroutine (ignoring the effect that heap size has on GC time :) )\n\nWith 4971493b0e14 (pre-fix) and around 300k goroutines I see GC times like:\ngc78(8): 5391+282+1142 ms, 4527 -\u003e 2511 MB\nroughly 22.7µs per goroutine\n\nAnd with go1.1.2 and around 540k goroutines I see GC times like:\ngc167(8): 1566+381+335 ms, 11746 -\u003e 9231 MB\nroughly 4.2µs per goroutine\n\nThis looks resolved to me, thank you!\u003c/pre\u003e",
	"user": {
		"login": "rhysh",
		"id": 230685,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-10-03T23:48:15Z",
	"updated_at": "2014-12-08T10:35:47Z"
}
