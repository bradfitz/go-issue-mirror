{
	"id": 51286770,
	"number": 7482,
	"state": "closed",
	"title": "encoding/binary: Read and Write have asymmetric value for unexported struct fields",
	"body": "\u003cpre\u003eWhat does 'go version' print?\n\n  go version go1.2 linux/amd64\n\n\nWhat steps reproduce the problem?\n\n  Use binary.Write to marshal a struct with an unexported field, then attempt to unmarshal the resulting bytes using binary.Read\n  \n  \u003ca href=\"http://play.golang.org/p/YelgiZZFKD\"\u003ehttp://play.golang.org/p/YelgiZZFKD\u003c/a\u003e\n\n\nWhat happened?\n\n  The reflect module panics when attempting to set the unexported field value, e.g:\n\n  \u0026quot;panic: reflect: reflect.Value.SetInt using value obtained using unexported field\u0026quot;\n\n\nWhat should have happened instead?\n\n  The documentation clearly states unnamed fields are written out zeroed, but no verbiage exists for unexported fields.\n\n  Some potential ways forward:\n\n    * unexported fields could be written zeroed and skipped during reading (treat as unnamed fields).\n    * unexported fields could be skipped during reading and writing.\n    * continue to panic, but add explicit documentation about unexported field handling.\n\n\nSee also:\n\n  Blank field handling added in \u003ca href=\"https://golang.org/cl/6750053\"\u003ehttps://golang.org/cl/6750053\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "bgilmore",
		"id": 90837,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:41:33Z",
	"created_at": "2014-03-06T06:08:28Z",
	"updated_at": "2016-06-25T01:29:11Z"
}
