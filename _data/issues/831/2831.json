{
	"id": 51279762,
	"number": 2831,
	"state": "closed",
	"title": "encoding/xml: doc example is wrong",
	"body": "by **abdul.h.chaudhry**:\n\n\u003cpre\u003eI tried to create a simple example based on the documentation \ngodoc encoding/xml Unmarshal\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nosx\n\nWhich revision are you using?  (hg identify)\n1107a7d3cb07 weekly/weekly.2012-01-27\n\n\nI tried this test case and it fails with the error EOF\n\n:-\n\npackage main\n\nimport (\n  \u0026quot;testing\u0026quot;\n  \u0026quot;encoding/xml\u0026quot;\n)\n\ntype Email struct {\n  Where string `xml:\u0026quot;,attr\u0026quot;`\n  Addr  string\n}\n\ntype Result struct {\n  Email []Email\n}\n\nfunc Test_Update_2(t *testing.T) {\n  result := new(Result)\n  body := \u0026quot;\u0026lt;result\u0026gt; \u0026lt;email where='home'\u0026gt; \u0026lt;addr\u0026gt;gre@example.com\u0026lt;/addr\u0026gt; \u0026lt;/email\u0026gt;\u0026quot;\n  err := xml.Unmarshal([]byte(body), \u0026amp;result)\n  if err != nil {\n    t.Error(\u0026quot;xml.UnMarshal:\u0026quot;, err)\n  }\n  t.Log(\u0026quot;result:\u0026quot;, result)\n}\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:14:58Z",
	"created_at": "2012-02-02T03:13:50Z",
	"updated_at": "2016-06-24T21:25:04Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
