{
	"id": 66081975,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003ehanwen,\n\nCan you, please, try this (amd64 only):\n\ndiff --git a/src/pkg/runtime/os_windows.c b/src/pkg/runtime/os_windows.c\n--- a/src/pkg/runtime/os_windows.c\n+++ b/src/pkg/runtime/os_windows.c\n@@ -275,6 +275,14 @@\n \treturn (void*)c.r1;\n }\n \n+#pragma textflag 7\n+void\n+runtime·osyield(void)\n+{\n+\textern void runtime·asmosyield(void*);\n+\truntime·asmcgocall(runtime·asmosyield, nil);\n+}\n+\n uint32\n runtime·issigpanic(uint32 code)\n {\ndiff --git a/src/pkg/runtime/sys_windows_amd64.s b/src/pkg/runtime/sys_windows_amd64.s\n--- a/src/pkg/runtime/sys_windows_amd64.s\n+++ b/src/pkg/runtime/sys_windows_amd64.s\n@@ -322,7 +322,7 @@\n TEXT runtime·remove_exception_handler(SB),7,$0\n \tRET\n \n-TEXT runtime·osyield(SB),7,$8\n+TEXT runtime·asmosyield(SB),7,$8\n \t// Tried NtYieldExecution but it doesn't yield hard enough.\n \t// NtWaitForSingleObject being used here as Sleep(0).\n \t// The CALL is safe because NtXxx is a system call wrapper:\n\nSee if this fixes your problem. I am not certain I didn't miss something. But if that\nworks, we will ask others to review it.\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-07-10T06:41:04Z",
	"updated_at": "2014-12-08T10:31:59Z"
}
