{
	"id": 51288827,
	"number": 8885,
	"state": "open",
	"title": "runtime: consider adding 24-byte size class",
	"body": "\u003cpre\u003eCurrently we have only 16 and 32 byte size classes.\n24-byte size class would reduce memory consumption by 25% for programs that extensively\nuse 24-byte objects (e.g. Node struct { left, right *Node; data int }).\nLeaving aside other issues with vector instructions (16-byte alignment is not enforced\nfor stack, AVX 32-byte alignment is not enforced at all); 24-byte objects are hardly\nused with SSE as they contains only one and a half of vector elements.\n\nHere is a prototype CL:\n\u003ca href=\"https://golang.org/cl/128090043/\"\u003ehttps://golang.org/cl/128090043/\u003c/a\u003e\n\nOn 64-bits it reduces heap size by 6%, on 32-bits - by 12% on garbage benchmark.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"comments": 0,
	"created_at": "2014-10-07T10:55:26Z",
	"updated_at": "2015-04-14T19:45:25Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
