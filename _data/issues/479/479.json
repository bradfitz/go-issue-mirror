{
	"id": 51276539,
	"number": 479,
	"state": "closed",
	"title": "cgo enum value handling varies depending on whether enum type is referenced",
	"body": "by **emage@spamcop.net**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. Create the following file:\n\npackage enum\n\n// typedef enum {a, b, c, d} foo;\nimport \u0026quot;C\u0026quot;\n\nimport \u0026quot;fmt\u0026quot;\n\nfunc Test() {fmt.Printf(\u0026quot;%d %d %d %d\\n\u0026quot;, C.a, C.b, C.c, C.d); }\n\n2. Run cgo on it and note that it generates references of the form _C_a\nreferring to an enum.so file\n3. Append the following line and rerun cgo:\n\nfunc Test2() C.foo { return C.a; }\n\nThe addition of this line causes constants a, b, c, and d to be defined in\nthe package, and causes the generated Test() code to refer to those constants.\n\nThe latter behavior seems more correct and should probably happen in either\ncase.\n\nWhich revision are you using?  (hg identify)\n\na6fcf4303b0a release/release.2009-12-22\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 7,
	"closed_at": "2014-12-08T10:04:46Z",
	"created_at": "2009-12-30T00:22:12Z",
	"updated_at": "2016-06-24T19:11:10Z"
}
