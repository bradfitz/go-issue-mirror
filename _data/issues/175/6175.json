{
	"id": 51284789,
	"number": 6175,
	"state": "closed",
	"title": "cmd/go: go get -u produces confusing error for existing non-VCS directory",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n1. export GOPATH=/tmp/test_gopath\n2. mkdir -p /tmp/test_gopath/src/github.com/foo/bar\n3. go get -x -u github.com/foo/bar\n\nWhat is the expected output?\nAn error that somehow includes $GOPATH/src/github.com/foo/bar\n\nWhat do you see instead?\npackage github.com/foo/bar: directory \u0026quot;/tmp/test_gopath/src\u0026quot; is not using a\nknown version control system\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n\nWhich operating system are you using?\nLinux\n\nWhich version are you using?  (run 'go version')\ngo version devel +7fe02c8bf785 Thu Aug 15 13:15:55 2013 +1000 linux/amd64\n\nPlease provide any additional information below.\nSeeing \u0026quot;\u0026quot;/tmp/test_gopath/src\u0026quot; is not using a known version control\nsystem\u0026quot; is very confusing, because of course my /src/ isn't version controlled. It\ndistracts from the actual cause of the problem: No VCS in /src/github.com/foo/bar\n\nBasically this is caused by vcsForDir (vcs.go) traversing upwards until it finds a VCS\nor hits src/. Not sure how to cleanly solve this, since the traversal is for covering\ncases like 'github.com/foo/bar/baz' where baz is just a directory in the foo/bar\nrepository.\u003c/pre\u003e",
	"user": {
		"login": "dominikh",
		"id": 39825,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:33:59Z",
	"created_at": "2013-08-17T02:02:25Z",
	"updated_at": "2016-03-31T06:01:20Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
