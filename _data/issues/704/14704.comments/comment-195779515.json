{
	"id": 195779515,
	"body": "I seem to have gotten the relevant benchmarks for my project slightly closer to the original version. But there is still a sizable gulf between performance of the original and fixed code on normal-case input, which do not trigger any panics.\r\n\r\nIn regards to escaping pointers, it seems like cgo may be assuming that all pointers passed to cgo escape.  This is understandable because it cannot be verified but it does seem like that could be relaxed if cgo is to assume that people comply with the restrictions it states (though cannot enforce). Following is a simple example and the output of `go build -gcflags=-m` which shows a simple []byte escaping in a simple cgo call.\r\n\r\nhttp://play.golang.org/p/gG3o96a4rD\r\n\r\n```\r\n# github.com/bmatsuo/lmdb-go/tmp/cgosimple\r\n/tmp/go-build670788717/github.com/bmatsuo/lmdb-go/tmp/cgosimple/_obj/_cgo_gotypes.go:14: can inline _Cgo_ptr\r\n/tmp/go-build670788717/github.com/bmatsuo/lmdb-go/tmp/cgosimple/_obj/_cgo_gotypes.go:14: leaking param: ptr to result ~r1 level=0\r\n/tmp/go-build670788717/github.com/bmatsuo/lmdb-go/tmp/cgosimple/_obj/_cgo_gotypes.go:27: _cgo_runtime_cgocall assuming arg#2 is unsafe uintptr\r\n/tmp/go-build670788717/github.com/bmatsuo/lmdb-go/tmp/cgosimple/_obj/_cgo_gotypes.go:30: _cgo_runtime_cmalloc assuming arg#1 is unsafe uintptr\r\n/tmp/go-build670788717/github.com/bmatsuo/lmdb-go/tmp/cgosimple/_obj/_cgo_gotypes.go:33: _cgo_runtime_cgocallback assuming arg#3 is unsafe uintptr\r\n/tmp/go-build670788717/github.com/bmatsuo/lmdb-go/tmp/cgosimple/_obj/_cgo_gotypes.go:41: leaking param: p\r\n/tmp/go-build670788717/github.com/bmatsuo/lmdb-go/tmp/cgosimple/_obj/_cgo_gotypes.go:41: leaking param: args\r\n/tmp/go-build670788717/github.com/bmatsuo/lmdb-go/tmp/cgosimple/_obj/_cgo_gotypes.go:53: p0 escapes to heap\r\n/tmp/go-build670788717/github.com/bmatsuo/lmdb-go/tmp/cgosimple/_obj/_cgo_gotypes.go:50: leaking param: p0\r\n/tmp/go-build670788717/github.com/bmatsuo/lmdb-go/tmp/cgosimple/_obj/_cgo_gotypes.go:54: p1 escapes to heap\r\n/tmp/go-build670788717/github.com/bmatsuo/lmdb-go/tmp/cgosimple/_obj/_cgo_gotypes.go:51: _Cfunc_my_func \u0026p0 does not escape\r\n./cgosimple.go:18: unsafe.Pointer(\u0026b[0]) escapes to heap\r\n./cgosimple.go:18: \u0026b[0] escapes to heap\r\n./cgosimple.go:17: ([]byte)(\"test\") escapes to heap\r\n./cgosimple.go:18: ... argument escapes to heap\r\n./cgosimple.go:18: b escapes to heap\r\n./cgosimple.go:17: ([]byte)(\"test\") escapes to heap\r\n```",
	"user": {
		"login": "bmatsuo",
		"id": 15089,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-12T17:44:20Z",
	"updated_at": "2016-03-12T17:44:20Z"
}
