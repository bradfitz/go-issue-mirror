{
	"id": 163432928,
	"body": "I believe you're right that the channel and stacks are the only allocations. It turns out that `a`, despite being rather large, is small enough to be stack-allocated.\r\n\r\nHowever, there's also not much stack in use. I ran it with Go 1.5.1, let the heap reach 3.8GB (which took a matter of seconds) and here's runtime.memstats:\r\n\r\n```\r\n{alloc = 0, total_alloc = 0, sys = 0, nlookup = 0, nmalloc = 0, nfree = 0, heap_alloc = 0, \r\n  heap_sys = 3812622336, heap_idle = 3778732032, heap_inuse = 33890304, heap_released = 0, \r\n  heap_objects = 0, stacks_inuse = 23560192, stacks_sys = 0, mspan_inuse = 0, \r\n  mspan_sys = 5718016, mcache_inuse = 0, mcache_sys = 16384, buckhash_sys = 1442838, \r\n  gc_sys = 119151616, other_sys = 5080074, next_gc = 4194304, last_gc = 1449702135103864578, \r\n  pause_total_ns = 1178124667, pause_ns = {...}, pause_end = {...}, numgc = 16, \r\n  gc_cpu_fraction = 0.05263619482552593, enablegc = true, debuggc = false, by_size = {...}, tinyallocs = 0, heap_live = 1847312, \r\n  heap_scan = 195904, heap_marked = 1847312, heap_reachable = 265520}\r\n```\r\n\r\nSome of these fields are out of date because they're cached in various places, but heap_sys and heap_idle are many gigabytes, while stacks_inuse (which is updated eagerly) is only 23MB. It may be that these spans were allocated for stack use, but we're not holding on to them for stack use.",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-09T23:15:15Z",
	"updated_at": "2015-12-09T23:15:15Z"
}
