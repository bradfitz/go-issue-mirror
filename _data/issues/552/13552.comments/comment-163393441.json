{
	"id": 163393441,
	"body": "On reading this code:\r\n\r\nhttps://github.com/golang/go/blob/master/src/runtime/mheap.go#L872\r\n\r\nIt could be that actually stack is using more memory than heap. In the test program ( repeated below ) we are only allocating channels:\r\n\r\n```\r\npackage main\r\n\r\nconst lenth = 1 \u003c\u003c 16 //32kB\r\ntype array [lenth]byte\r\nvar defaultArray array\r\n\r\nfunc main() {\r\n\t// start workers\r\n\tfor i := 0; i \u003c 200; i++ {\r\n\t\tgo testloop()\r\n\t}\r\n\r\n\t// sleep forever\r\n\tsleep := make(chan struct{})\r\n\t\u003c-sleep\r\n}\r\n\r\nfunc testloop() {\r\n\tfor {\r\n\t\tc := make(chan struct{})\r\n\t\tgo test(c)\r\n\t\t_ = \u003c-c\r\n\t}\r\n}\r\n\r\nfunc test(c chan struct{}) {\r\n\ta := defaultArray\r\n\ta[0] = a[lenth-1]\r\n\tc \u003c- struct{}{}\r\n}\r\n\r\n```\r\n\r\nMy analysis could be totally wrong.",
	"user": {
		"login": "tuxdna",
		"id": 52947,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-09T21:13:49Z",
	"updated_at": "2015-12-09T21:13:49Z"
}
