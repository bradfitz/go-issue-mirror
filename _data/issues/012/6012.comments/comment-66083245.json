{
	"id": 66083245,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3 by **sidnei.da.silva**:\n\n\u003cpre\u003eOne can just easily add a proxy in front, say haproxy, to limit the number of\nconnections, that's not the point. \n\nThe problem is that the default implementation is open to a resource exaustion attack\n(the C++ example in \u003ca href=\"https://www.owasp.org/index.php/Resource_exhaustion\"\u003ehttps://www.owasp.org/index.php/Resource_exhaustion\u003c/a\u003e loosely maps to\nthis).\n\nWhile limiting the number of active connections can make it simpler to DOS by exausting\navailable connections, not limiting the available connections could cause resource\nstarvation at the OS level, which could have bigger consequences.\n\nI actually filed this bug because people are looking at the implementation and making\nassumptions that it is fine to do so in general 'because the Go http libraries do this\nas well':\n\u003ca href=\"https://github.com/mozilla-services/heka/issues/359#issuecomment-21957277\"\u003ehttps://github.com/mozilla-services/heka/issues/359#issuecomment-21957277\u003c/a\u003e\n\nSo at minimum it might make sense to put a bold warning around the documentation that\nthere is a potential issue with exposing the default http server naked to the internet\nwithout writing a custom net.Listener implementation that caps the number of connections.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-02T17:19:53Z",
	"updated_at": "2014-12-08T10:33:07Z"
}
