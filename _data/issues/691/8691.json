{
	"id": 51288561,
	"number": 8691,
	"state": "closed",
	"title": "spec: semantics of recursive interfaces are unspecified",
	"body": "\u003cpre\u003eI can't find any wording in the spec that would explain the legality or otherwise of\nthis program.  The question is whether isomorphic recursive interfaces are identical and\nthus mutually assignable.   My intuition about interfaces would suggest that these types\nought to be identical.\n\n\u003ca href=\"http://play.golang.org/p/r92J5TY-WI\"\u003ehttp://play.golang.org/p/r92J5TY-WI\u003c/a\u003e\n\npackage main \n\ntype I interface {\n\tf() I\n}\ntype J interface {\n\tf() J\n}\n\nfunc main() {\n\tvar i I\n\tvar j J\n\ti = j\n\tj = i\n}\n\ngc and go/types both give an error.\n\ngc:\nprog.go:13: cannot use j (type J) as type I in assignment:\n\tJ does not implement I (wrong type for f method)\n\t\thave f() J\n\t\twant f() I\nprog.go:14: cannot use i (type I) as type J in assignment:\n\tI does not implement J (wrong type for f method)\n\t\thave f() I\n\t\twant f() J\n\ngo/types:\na.go:13:6: cannot assign j (variable of type J) to i (variable of type I)\u003c/pre\u003e",
	"user": {
		"login": "adonovan",
		"id": 5658175,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:48:12Z",
	"created_at": "2014-09-10T03:40:27Z",
	"updated_at": "2016-06-25T01:41:06Z"
}
