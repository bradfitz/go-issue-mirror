{
	"id": 66067133,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eHere's a smaller test case:\n\nfunc TestInterfaceSet(t *testing.T) {\n\tb := struct{ X interface{} }{\"foo\"}\n\tconst blob = `{\"X\":\"bar\"}`\n\tif err := Unmarshal([]byte(blob), \u0026b); err != nil {\n\t\tt.Errorf(\"%v\", err)\n\t}\n}\n\nIt's trying to update a string value that isn't addressable because it's stored as an\ninterface value. The containing struct is addressable, so the json package could be\nclever enough to walk back up and the value correctly. Not sure that it's worth it,\nthough.\u003c/pre\u003e",
	"user": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-06-07T04:39:19Z",
	"updated_at": "2014-12-08T10:19:05Z"
}
