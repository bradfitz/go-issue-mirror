{
	"id": 51288455,
	"number": 8618,
	"state": "open",
	"title": "runtime: don't allocate for non-escaping conversions to interface{}",
	"body": "\u003cpre\u003efmt.Fprintf(\u0026quot;%d\u0026quot;, 8)\n\nSince all interface data fields are now pointers, an int must be allocated and\ninitialized to 8 so that it can be put in an interface{} to pass to Fprintf.\n\nSince we know the 8 doesn't escape, we could instead allocate that 8 on the stack and\nhave the interface data word point to that stack slot.  To be safe, we can only do this\nwhen the resulting interface{} doesn't escape.  We probably also need to be sure the\nconversion happens at most once so the stack slot is not reused.\n\nWe could have a special convT2Enoescape call for the compiler to use when it knows the\nresult doesn't escape.  Maybe also convT2I, assertT2E, ...\u003c/pre\u003e",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"comments": 4,
	"created_at": "2014-08-29T20:04:02Z",
	"updated_at": "2015-04-14T19:45:24Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
