{
	"id": 156630497,
	"number": 15826,
	"state": "closed",
	"title": "The asn1 Marshal/Unmarshal get confused if I use a type instead the original type",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n1.6\r\n\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/.../golang\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"/usr/local/bin/gcc-5\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fno-common\"\r\nCXX=\"/usr/local/bin/c++-5\"\r\nCGO_ENABLED=\"1\"\r\n\r\n3. What did you do?\r\nIf I have\r\nid_sha1 = asn1.ObjectIdentifier{1, 3, 14, 3, 2, 26}\r\ntype Foo struct {\r\n    oid asn1.ObjectIdentifier\r\n}\r\nthis works correctly, but if I change it to:\r\n\r\ntype AlgorithmId asn1.ObjectIdentifier\r\nid_sha1 = AlgorithmId{1, 3, 14, 3, 2, 26}\r\ntype Foo struct {\r\n    oid AlgorithmId\r\n}\r\n\r\nwhich seems to be the way most of the asn1 documentations are written the asn1 marshaling gets confused.\r\n\r\n4. What did you expect to see?\r\nI would expect the marshaller to be smart enough to recognize that a type is originating from the asn1.ObjectIdentifier and serialize it as such\r\n\r\n5. What did you see instead?\r\nThe asn1.ObjectIdentifier is serialized as a binary blob\r\n",
	"user": {
		"login": "ggeorgiev",
		"id": 1084892,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-05-25T00:02:31Z",
	"created_at": "2016-05-24T23:16:27Z",
	"updated_at": "2016-05-25T00:12:34Z"
}
