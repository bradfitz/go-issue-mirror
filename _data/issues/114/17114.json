{
	"id": 177089010,
	"number": 17114,
	"state": "closed",
	"title": "io: Add SectionWriter type for parity with SectionReader",
	"body": "It would be helpful to have an io.SectionWriter for writing chunks to a io.WriterAt in an concurrent environment. I think a starting point would be to define the io.SectionWriter in a similar way to io.SectionReader taking advantage of the backing type's io.WriterAt implementation.\r\n\r\n```\r\ntype SectionWriter\r\n    func NewSectionWriter(w WriterAt, off int64, n int64) *SectionWriter\r\n    func (s *SectionWriter) Write(p []byte) (n int, err error)\r\n    func (s *SectionWriter) WriteAt(p []byte, off int64) (n int, err error)\r\n    func (s *SectionWriter) Seek(offset int64, whence int) (int64, error)\r\n    func (s *SectionWriter) Size() int64\r\n```\r\n\r\nI'm I didn't see any pending issues in github.com/golang/go on this, so I'm looking to create one. Several years ago there was [brief discussion](https://groups.google.com/d/topic/golang-nuts/ALKKuVPffyk/discussion) on the type, but It doesn't look like it went anywhere.\r\n\r\nI'm be glad to provide an implementation for this.",
	"user": {
		"login": "jasdel",
		"id": 961963,
		"type": "User",
		"site_admin": false
	},
	"comments": 11,
	"closed_at": "2016-09-19T17:53:58Z",
	"created_at": "2016-09-15T05:00:21Z",
	"updated_at": "2016-09-19T17:58:19Z"
}
