{
	"id": 51287696,
	"number": 8114,
	"state": "open",
	"title": "cmd/cgo: Allow C code to use structures defined in Go",
	"body": "by **fuzxxl**:\n\n\u003cpre\u003eThere are some C structures that cannot be correctly accessed from Go code as Go does\nnot provide the features needed to access them. Examples are unions, bitfields and\nstructures that are affected by issue #7560. Therefore, C code is needed to unmarshall\nand marshall these structures into Go code.\n\nSadly, this is very uggly to do right now as there seems to be no sane way of having a C\nfunction operate on types defined in Go code. Right now, I have to define the structure\nI'm marshalling into on the C side of code which requires me to marshall the already\nmarshalled structure again if I want to provide that structure as an interface to other\npackages.\n\nIdeally, something like this is possible:\n\npackage example\n\n/*\n#include \u0026quot;go.h\u0026quot;\n\n// struct I want to marshall\nstruct something {\n    // ...\n}\n\nvoid marshall_something(struct something *s, GoSomething *g) {\n    // unmarshall s into g\n}\n*/\nimport \u0026quot;C\u0026quot;\n\n//export\ntype something struct {\n    // corresponding Go type that is visible to C\n    // ...\n}\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2014-05-28T11:10:31Z",
	"updated_at": "2015-04-14T19:45:23Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
