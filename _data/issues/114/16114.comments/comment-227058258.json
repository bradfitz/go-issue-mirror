{
	"id": 227058258,
	"body": "\u003e\u003e Less clarity (need to scroll around for context to understand which type the method is declared on, and—critically—the variable name of the receiver)\r\n\r\nI want only that the OOP programmers (who comes to Go) feel themselves more comfortable in Go when they implement (as they love) a functionality with a hierarchical structure.\r\nBecause in Go not exists a such things as an `abstarct` and `virtual` methods then some functionality (which resides, of course, in receiver methods) needs to be `duplicated` and moved in the levels up because `emedded types` (often structs) does not know anything about their owners (who will embed them).\r\nThis requires for me (for better code maintenance):\r\n1. Have them (receiver methods) in a single place\r\n2. Write more code (move some functionality to the higher levels) if I want follow some principles of programming (but not only want write code for the single reason - it is good that is just works)\r\n\r\nEg.\r\n\r\n```\r\ntype PreffixExpression interface {\r\n  GetPrefix() string\r\n}\r\n\r\ntype preffixExpression struct {\r\n  unaryExpression\r\n  expr Expression\r\n}\r\n\r\nfunc (r *preffixExpression) String() string {  \r\n  return fmt.Sprintf(\"%s%s\", r.GetPrefix(), r.expr)\r\n}\r\n```\r\n\r\nHere I cannot override `GetPrefix()` (so that `preffixExpression` knew about it) inside the other type which was embed the `prefixExpression` since it nor `abstract` nor `virtual` method.\r\nI need other solution (good for me but bad for other or bad for me but good for other) to have more types which was embed the `prefixExpression` and will use it functioanlity (but not implement duplcates).\r\nThis means that I need have them (set of methods) in a single place (and in a single class).\r\n\r\nIf I will be refactor (that always happen anyway) my code (which in Go would be slightly bigger and and slightly more scattered, which means a less structured code) then I (as the programmer of the hierarchically structured functionality) will need what?\r\nI will need have a language feature which can help me have them (set of methods of receiver which is part of possible complex hierarchy) all togheter.\r\n",
	"user": {
		"login": "mezoni",
		"id": 2311549,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-20T06:16:05Z",
	"updated_at": "2016-06-20T07:36:12Z"
}
