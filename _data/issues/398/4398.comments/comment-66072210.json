{
	"id": 66072210,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eThere are two separate issues:\n\n1) What does it mean for a floating point constant x to be representable by a type T?\n\n2) What does it mean for a floating point constant x to be typed (via a conversion) -\nspecifically, what happens to the constant value.\n\n2) is different from 1) because if T(x) is valid (x is representable by T) and thus x\ngets \"typed\" as T, the (compile-time precise) value of x doesn't necessarily need to\nchange. For instance, float32(2.0/3.0), is a typed floating point constant (type is\nfloat32), but it could still have the precise value 2.0/3.0 (rather than the \"truncated\"\nvalue that fits into a 32bit float32).\n\nI agree that the spec needs to be clearer with respect to these terms.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-11-17T18:23:20Z",
	"updated_at": "2014-12-08T10:23:24Z"
}
