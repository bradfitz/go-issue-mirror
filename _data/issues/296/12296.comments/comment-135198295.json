{
	"id": 135198295,
	"body": "\u003e What about variables of function types? At the moment, one can assign functions with different parameter names to assignment-compatible function variables. Do parameter names have to match (and thus become part of type identity)? (@nigeltao and @griesemer)\r\n\r\nYou're right.  I agree.  This would break function assignment with identical arguments and different names, unless we used aliases which I think is overkill.\r\n\r\nAfter much thought, I have found **Inferring struct types at function call (addressed by @abglassman @minux @jimmyfrasche @griesemer @aclements)** to be the most elegant compromise and a *solution* to this problem.  I think it organizes it well, and I think it does not result in any clashes with existing Go-ideology.  \r\n\r\nAre there any objections or feedback on this idea?  Should I proceed to create a `golang / proposal`?",
	"user": {
		"login": "codeblooded",
		"id": 1209285,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-26T22:45:04Z",
	"updated_at": "2015-08-26T22:48:05Z"
}
