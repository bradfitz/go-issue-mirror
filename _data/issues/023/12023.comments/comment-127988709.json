{
	"id": 127988709,
	"body": "Couple of comments on this thread:\r\n\r\n1) @cespare: Not sure I understand the point of bringing up data source names (DSNs). DSN is an abstract term, while URLs and URIs have RFCs where we can derive an actual specification. So, if you want to implement a DSN, using an URI/URL is not necessarily a bad way to do it. In fact, I think it's a very *common* way to implement DSNs is through the use of URI/URL.\r\n\r\n2) @mikioh: yes, #5684 is one of root causes. OTOH, that bug became relevant for host names only in the 1.5 cycle, due to host name encoding support added in 8e95654.\r\n\r\nYour broader comment about RFC 3986 and it's suitability to a wide range of connection strings is understandable. However, it *is* common to use URIs as connection strings. I have managed to do so for connecting to several services (redis, cassandra, mongodb, ceph/rados), without using the invalid forms you posted above.\r\n\r\nBottom line is: as a user, I would much rather make an effort to make sure my URIs are complaint with RFC 3986, and be able to rely on net/url to do URI manipulation rather than to design custom connection string parsers, which are likely 99% similar to net/url.\r\n\r\nIn any case, whichever way the Go team decides, I think a note is warranted in the release notes. There may be others, like me, who have strived to keep URIs RFC compliant, who will have broken code when upgrading from Go \u003c= 1.4.2 to 1.5.",
	"user": {
		"login": "liviosoares",
		"id": 888951,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-05T12:55:31Z",
	"updated_at": "2015-08-05T12:55:31Z"
}
