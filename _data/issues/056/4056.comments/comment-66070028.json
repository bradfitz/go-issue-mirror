{
	"id": 66070028,
	"body": "\u003ca id=\"c30\"\u003e\u003c/a\u003eComment 30:\n\n\u003cpre\u003eRuss, back in 2011 you seemed against the idea\n(\u003ca href=\"https://golang.org/issue/1644)\"\u003ehttps://golang.org/issue/1644)\u003c/a\u003e, too bad I didn't know about this\nbug before now. However, since a bounded thread pool may create unexpected deadlocks,\nwhat about introducing an ever increasing delay for spawning new threads after a certain\nnumber of threads? (one of Ms would then become a thread manager, adding more threads)\n\nOn the other hand, since 2011, I just learned that I always have to limit concurrency\nwhere it matters, e.g. never call net.Dial with a random hostname directly, resolve the\nhostname with max 16 at the same time first and use the resolved address (also limit\nnet.Dials altogethers before they became non-blocking and less of a problem). The issue\nforces you to think about what you're doing instead of just blindly doing it, and the\nresult is better: if resolves are the problem that's what you have limited, it doesn't\nharm the rest of the system.\u003c/pre\u003e",
	"user": {
		"login": "snaury",
		"id": 53117,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-04-20T08:45:22Z",
	"updated_at": "2014-12-08T10:21:31Z"
}
