{
	"id": 66080348,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003e@arnehormann\nMy problem is with the proposed Field interface is that it is MySQL-specific. Although\nthat MysqlType, MysqlDeclaration could be renamed to SqlType, SqlDeclaration for a\nlittle bit more agnostic.\nJust as IsBinary, IsPrimaryKey, IsUniqueKey, IsMultipleKey, IsAutoinrement has no\nmeaning in Oracle.\n\nI'd like to make this as future-proof or at least extensible as possible - for example,\nOracle can return cursor in a resultset, which results in \"false\" in every \"IsXxx\"\nmethod in this interface.\n\nThat's why I think a simple string can provide the needed info: SqlType return\n\"VARCHAR2\", SqlDeclaration return \"VARCHAR2(32) NOT NULL\" - as the database provides it.\n\nMaybe not important, but I think only database.sql.Rows should be inspectable: that's a\nbad practice to inspect every Row, and unneeded, too.\u003c/pre\u003e",
	"user": {
		"login": "tgulacsi",
		"id": 256074,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-01T15:00:15Z",
	"updated_at": "2014-12-08T10:30:32Z"
}
