{
	"id": 66060860,
	"body": "\u003ca id=\"c10\"\u003e\u003c/a\u003eComment 10:\n\n\u003cpre\u003eHello\n\nI did a quick test run with the go tool, but found it quite tricky to use on our project.\n\nWe have about 230 packages (about 10 packages use cgo) and 80 commands, totaling about\n150k LOC.\n\nWe use protocol buffers (and had to resort to a bit of sed magic to hack the generated\ncode into a useful package structure). We also have a few commands for generating parts\nof our code.\n\nOur source tree looks like this:\n\npotentially \"public\" packages:\n\nsrc/pkg/foo/bar\nsrc/pkg/baz\n\netc.\n\nand our project package code:\n\nsrc/pkg/ourproj/subsys1 (client API)\nsrc/pkg/ourproj/subsys1/server (server code)\nsrc/pkg/ourproj/subsys2\nsrc/pkg/ourproj/subsys2/server\nsrc/pkg/ourproj/subsys3\nsrc/pkg/ourproj/subsys4\n\nand our project commands:\n\nsrc/cmd/group1/cmd1\nsrc/cmd/group1/cmd2\nsrc/cmd/group1/cmd3\nsrc/cmd/group2/cmd4\nsrc/cmd/group2/cmd5\nsrc/cmd/group2/cmd6\n\nwhich could maybe have been\n\nsrc/cmd/ourproj/groupi/cmdj\n\nbut we wanted to save a bit of typing.\n\nWhat makes the current assumed directory layout of the go tool (where everything is\nmixed together) hard to use for us is that we have some overlap between\nsubsystem/package names, command names and the groups, so we have cases where\ngroup_i==subsys_j or cmd_i==subsys_j. I suspect many big projects will run into this\nwhen you start sharing common code via packages between many commands and\ncommand-specific packages, and eventually the src directory becomes quite a mess.\n\nThe current src/{cmd,pkg} split which we modeled on the current Go tree has really\nworked well for a very big project.\n\nAnother thing that would be very useful is just to be able to do:\n\ngit clone ourproj.git\nexport GOPATH=ourproj\ncd ourproj\ngo install -a\n\nbut for some reason go doesn't understand about building an entire tree (except it seems\nfor Go itself, where you can say go install -a std). Typing 230 package names every time\nis going to take a while.\n\nThat's all for now.\n\nCheers\n\nAlbert\n\nP.S. Another great feature would be support for building with gccgo, as discussed here:\n\n\u003ca href=\"https://groups.google.com/group/golang-dev/browse_thread/thread/2c01e9d6e9b6b6a8\"\u003ehttps://groups.google.com/group/golang-dev/browse_thread/thread/2c01e9d6e9b6b6a8\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "alberts",
		"id": 409689,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-01-04T16:21:52Z",
	"updated_at": "2014-12-08T10:13:51Z"
}
