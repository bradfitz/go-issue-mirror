{
	"id": 66220512,
	"number": 10340,
	"state": "closed",
	"title": "spec: bounded types",
	"body": "\"The receiver is specified via an extra parameter section preceeding the method name. That parameter section must declare a single parameter, the receiver. Its type must be of the form T or *T (possibly using parentheses) where T is a type name. The type denoted by T is called the receiver base type; it must not be a pointer or interface type and it must be declared in the same package as the method. The method is said to be bound to the base type and the method name is visible only within selectors for that type.\" \r\n\r\n\"func (p *Point) Length() float64 {\r\nreturn math.Sqrt(p.x * p.x + p.y * p.y)\r\n}\r\n\r\nfunc (p *Point) Scale(factor float64) {\r\n\r\np.x *= factor\r\np.y *= factor\r\n}\r\nbind the methods Length and Scale, with receiver type *Point, to the base type Point.\"\r\n\r\n\r\nGolang spec says this for https://golang.org/ref/spec#Receiver I'm confused on that it says that the methods are bound to the Point type? Shouldn't it be binded to *Point and not Point? Because the method set of Point is only methods declared with receiver Point, not *Point and therefore it is bounded. Yes you can call the function with a variable of type Point and not *Point, but thats syntactical sugar no? Its not like its actually part of the methods spec of Point? Only *Point? So why is it \"bounded\" to Point? It also says this \"method name is visible only within selectors for that type.\" But for this its not, its only visible to *Point, not Point?",
	"user": {
		"login": "nhooyr",
		"id": 10180857,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2015-04-03T21:48:53Z",
	"created_at": "2015-04-03T20:13:38Z",
	"updated_at": "2016-06-25T02:04:42Z"
}
