{
	"id": 148128932,
	"number": 15280,
	"state": "closed",
	"title": "something doesn't work in Go 1.6 that worked in Go 1.5",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\n1.6 v 1.5\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\nlinux/amd64\r\n\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n\r\nSwitched from go 1.5 to 1.6\r\n\r\n4. What did you expect to see?\r\n\r\nThings to keep working ...\r\n\r\n5. What did you see instead?\r\n\r\nThis is an issue that seems to involved Go, Haproxy, and Docker. I don't know for sure that http/2 is the reason, but it's my only suspect. We have an http server built with Go running in a docker container on an AWS ubuntu machine. If the server is built with Go 1.5, everything is fine. With 1.6, we get a 503 error code from haproxy. If the httpchk is disabled, everything starts working again. If haproxy is bypassed (by using the docker-machine ip), the server is working fine regardless of version. I tried disabling http/2 using GODEBUG env variables but that made no difference. We do have some servers built with 1.6 behind haproxy working but they are not inside Docker containers.\r\n\r\nSo, this appears to be an environment-specific issue triggered by go 1.6 but I can't say for sure it has anything to do with http/2. I only suspect it because it was introduced in go 1.6.\r\n\r\nSome details that might matter: Haproxy is listening on port 80 and forwarding to the go server on its own ip listening on \":80\".\r\n",
	"user": {
		"login": "Dave-White-Rakuten",
		"id": 13006412,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "WaitingForInfo"
		}
	],
	"comments": 7,
	"closed_at": "2016-04-14T16:49:47Z",
	"created_at": "2016-04-13T17:30:20Z",
	"updated_at": "2016-04-14T16:49:47Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
