{
	"id": 254255376,
	"body": "At first glance, I find the high-level API confusing. You're proposing taking the Context type, which already encapsulates a key-value store, and adding a second separate key-value store to it. I especially find the name \"DoWithLabels\" confusing - I naively expect it to behave similarly to WithValue, but it doesn't.\r\n\r\nTo my mind, this would be resolved by moving this outside the context package. I think this can just be a regular consumer of the Context type. i.e. we could move this to `pprof.DoWithContext`, and it can store the profiling labels in a regular Context key using `context.WithValue`.\r\n\r\nIt feels unfortunate to me that this has to be `DoWithLabels` and not just `WithLabels` returning a new Context. I understand how that is necessary, though, given the `runtime` API.\r\n\r\nThe fact that the argument is `func(context.Context)` means it is cumbersome to pass back any values such as an `error` from the function. Perhaps the func type should be `func(context.Context) error`? \"Generics would help here\".\r\n\r\nFinally, don't you need a way to read out the current labels to pass them along with an RPC? It is my understanding that this is one of the underlying goals of the proposal.",
	"user": {
		"login": "quentinmit",
		"id": 115761,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-17T16:16:11Z",
	"updated_at": "2016-10-17T16:16:11Z"
}
