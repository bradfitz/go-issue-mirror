{
	"id": 66084715,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eForgive me, but in quoting the docs:\n\n\u003eIf a cyclic structure includes a block with a finalizer, that cycle is not guaranteed\nto be garbage collected and the finalizer is not guaranteed to run, because there is no\nordering that respects the dependencies.\n\nSo if I don't have a cyclic structure, it should always run.\n\n\u003e There is no guarantee that finalizers will run before a program exits, so typically\nthey are useful only for releasing non-memory resources associated with an object during\na long-running program.\n\nIf I run runtime.GC, this runs the garbage collector before the program exits.\n\nWith what I'm doing I don't have a cyclic structure, and the garbage collector is\nrunning before the program exits.\n\nSo what else is not guaranteed, besides what is mentioned in the docs? I know I am\nhaving some weird behavior with cgo.\u003c/pre\u003e",
	"user": {
		"login": "lukescott",
		"id": 486224,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-28T02:27:49Z",
	"updated_at": "2014-12-08T10:34:28Z"
}
