{
	"id": 69676517,
	"body": "Looks like the scheduler is confused.  It tries to find a goroutine to work\r\non, can't find any, starts to shut down an M, and the deadlock detector\r\nthrows when it finds a runnable goroutine.\r\nI think this might need a \"goto top\" in proc.c:1485.  It looks like the\r\nscheduler doesn't try again to find work after goroutines are woken up due to\r\nnetwork activity.\r\n\r\nOn Mon, Jan 12, 2015 at 4:24 PM, dadkins \u003cnotifications@github.com\u003e wrote:\r\n\r\n\u003e I had a Go 1.4 server crash out of the http.ListenAndServe loop. It's not\r\n\u003e a panic and not a log.Fatal! It looks like a runtime bug to me. I'm running\r\n\u003e on Mac OS X. I cannot reproduce it.\r\n\u003e\r\n\u003e runtime: checkdead: find g 5 in status 1\r\n\u003e fatal error: checkdead: runnable g\r\n\u003e\r\n\u003e runtime stack:\r\n\u003e runtime.throw(0x40589c)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/runtime/panic.go:491 +0xad\r\n\u003e checkdead()\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/runtime/proc.c:2828 +0x287\r\n\u003e mput(0x410ca0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/runtime/proc.c:3175 +0x47\r\n\u003e stopm()\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/runtime/proc.c:1176 +0xea\r\n\u003e findrunnable(0xc208012000)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/runtime/proc.c:1487 +0x562\r\n\u003e schedule()\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/runtime/proc.c:1575 +0x151\r\n\u003e runtime.park_m(0xc22a7c4120)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/runtime/proc.c:1654 +0x113\r\n\u003e runtime.mcall(0x392d4)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/runtime/asm_amd64.s:186 +0x5a\r\n\u003e\r\n\u003e goroutine 1 [IO wait]:\r\n\u003e net.(\r\n\u003e\r\n\u003e *pollDesc).Wait(0xc22c30a060, 0x72, 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/fd_poll_runtime.go:84 +0x47 net.(*pollDesc).WaitRead(0xc22c30a060,\r\n\u003e 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/fd_poll_runtime.go:89 +0x43\r\n\u003e net.(\r\n\u003e\r\n\u003e *netFD).accept(0xc22c30a000, 0x0, 0x4b8b48, 0xc20802aa20)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/fd_unix.go:419 +0x40b net.(*TCPListener).AcceptTCP(0xc20803a020,\r\n\u003e 0x8a09e, 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/tcpsock_posix.go:234 +0x4e\r\n\u003e net/http.tcpKeepAliveListener.Accept(0xc20803a020, 0x0, 0x0, 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/http/server.go:1976 +0x4c\r\n\u003e net/http.(\r\n\u003e\r\n\u003e *Server).Serve(0xc22c31a060, 0x1c6e0f0, 0xc20803a020, 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/http/server.go:1728 +0x92\r\n\u003e net/http.(*Server).ListenAndServe(0xc22c31a060, 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/http/server.go:1718 +0x154\r\n\u003e net/http.ListenAndServe(0x2b22f0, 0x5, 0x0, 0x0, 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/http/server.go:1808 +0xba\r\n\u003e main.main()\r\n\u003e /Users/dan/src/bitmoon/potus/main.go:50 +0x385\r\n\u003e\r\n\u003e goroutine 5 [runnable]:\r\n\u003e net.(\r\n\u003e\r\n\u003e *pollDesc).Wait(0xc22c30a140, 0x72, 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/fd_poll_runtime.go:84 +0x47 net.(*pollDesc).WaitRead(0xc22c30a140,\r\n\u003e 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/fd_poll_runtime.go:89 +0x43\r\n\u003e net.(\r\n\u003e\r\n\u003e *netFD).Read(0xc22c30a0e0, 0xc20800f000, 0x1000, 0x1000, 0x0, 0x4b8b48,\r\n\u003e 0xc22b98a310) /usr/local/Cellar/go/1.4/libexec/src/net/fd_unix.go:242\r\n\u003e +0x40f net.(*conn).Read(0xc20803a028, 0xc20800f000, 0x1000, 0x1000, 0x0,\r\n\u003e 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/net.go:121 +0xdc\r\n\u003e net/http.(\r\n\u003e\r\n\u003e *liveSwitchReader).Read(0xc22c5aa0e8, 0xc20800f000, 0x1000, 0x1000, 0x5b,\r\n\u003e 0x0, 0x0) /usr/local/Cellar/go/1.4/libexec/src/net/http/server.go:214 +0xab\r\n\u003e io.(*LimitedReader).Read(0xc20801e4a0, 0xc20800f000, 0x1000, 0x1000, 0x0,\r\n\u003e 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/io/io.go:408 +0xce\r\n\u003e bufio.(\r\n\u003e\r\n\u003e *Reader).fill(0xc22c31a120)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/bufio/bufio.go:97 +0x1ce bufio.(*Reader).ReadSlice(0xc22c31a120,\r\n\u003e 0xe9e0a, 0x0, 0x0, 0x0, 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/bufio/bufio.go:295 +0x257\r\n\u003e bufio.(\r\n\u003e\r\n\u003e *Reader).ReadLine(0xc22c31a120, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/bufio/bufio.go:324 +0x62\r\n\u003e net/textproto.(*Reader).readLineSlice(0xc20800ac00, 0x0, 0x0, 0x0, 0x0,\r\n\u003e 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/textproto/reader.go:55 +0x9e\r\n\u003e net/textproto.(\r\n\u003e\r\n\u003e\r\n\u003e\r\n\u003e *Reader).ReadLine(0xc20800ac00, 0x0, 0x0, 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/textproto/reader.go:36 +0x4f\r\n\u003e net/http.ReadRequest(0xc22c31a120, 0xc22c62d380, 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/http/request.go:598 +0xcb\r\n\u003e net/http.(*conn).readRequest(0xc22c5aa0a0, 0x0, 0x0, 0x0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/http/server.go:586 +0x26f\r\n\u003e net/http.(\r\n\u003e\r\n\u003e *conn).serve(0xc22c5aa0a0)\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/http/server.go:1162 +0x69e created\r\n\u003e by net/http.(*Server).Serve\r\n\u003e /usr/local/Cellar/go/1.4/libexec/src/net/http/server.go:1751 +0x35e\r\n\u003e\r\n\u003e â€”\r\n\u003e Reply to this email directly or view it on GitHub\r\n\u003e \u003chttps://github.com/golang/go/issues/9576\u003e.\r\n\u003e",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-01-13T00:47:39Z",
	"updated_at": "2015-01-13T00:49:02Z"
}
