{
	"id": 200329823,
	"body": "\u003e I'm finding that ldflags -s does work with go 1.6 and codesign\r\n\u003e based on the following test code in 11887.go\r\n\r\nFollowing the exact same protocol, but with my program, I'm able to reproduce your results on my local MacbookPro, but not on my build server.\r\n\r\n```\r\n$ go build -ldflags -s -o butler-s .\r\n# github.com/itchio/butler\r\n/usr/local/Cellar/go/1.6/libexec/pkg/tool/darwin_amd64/link: running clang++ failed: exit status 1\r\nld: warning: option -s is obsolete and being ignored\r\nld: internal error: atom not found in symbolIndex(__ZN6brotli10FindBlocksIhLi256EEEvPKT_mdRKNSt3__16vectorINS_9HistogramIXT0_EEENS4_9allocatorIS7_EEEEPh) for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\nThe build server has an older version of clang \u0026 OSX:\r\n\r\n```\r\n$ clang --version\r\nApple LLVM version 7.0.2 (clang-700.1.81)\r\nTarget: x86_64-apple-darwin14.5.0\r\nThread model: posix\r\n\r\n$ sw_vers -productVersion\r\n10.10.5\r\n```\r\n\r\nMy local computer has the latest stable of both:\r\n\r\n```\r\n$ clang --version\r\nApple LLVM version 7.3.0 (clang-703.0.29)\r\nTarget: x86_64-apple-darwin15.3.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n\r\n$ sw_vers -productVersion\r\n10.11.3\r\n```\r\n\r\nNote that, even on my local machine, `cmd/link` does pass `-s` down to clang, which prints a warning â€” it just looks like `cmd/link` swallows linker warnings if the link step is successful:\r\n\r\n```bash\r\n$ go build -v -x -ldflags \"-s -v\" -o butler-s .\r\n# (manually suppressed output for readability)\r\n# note the \"-s\" below\r\nhost link: \"clang++\" \"-m64\" \"-s\" \"-Wl,-no_pie,-headerpad,1144\" \"-Wl,-pagezero_size,4000000\" \"-o\" \"/var/folders/kj/vbzcvcf94hn0hkxpc6d97zcc0000gn/T/go-build649125102/github.com/itchio/butler/_obj/exe/a.out\" \"-Qunused-arguments\" \"/var/folders/kj/vbzcvcf94hn0hkxpc6d97zcc0000gn/T/go-link-896862525/go.o\" \"/var/folders/kj/vbzcvcf94hn0hkxpc6d97zcc0000gn/T/go-link-896862525/000000.o\" \"/var/folders/kj/vbzcvcf94hn0hkxpc6d97zcc0000gn/T/go-link-896862525/000001.o\" \"/var/folders/kj/vbzcvcf94hn0hkxpc6d97zcc0000gn/T/go-link-896862525/000002.o\" \"/var/folders/kj/vbzcvcf94hn0hkxpc6d97zcc0000gn/T/go-link-896862525/000003.o\" \"/var/folders/kj/vbzcvcf94hn0hkxpc6d97zcc0000gn/T/go-link-896862525/000004.o\" \"/var/folders/kj/vbzcvcf94hn0hkxpc6d97zcc0000gn/T/go-link-896862525/000005.o\" \"/var/folders/kj/vbzcvcf94hn0hkxpc6d97zcc0000gn/T/go-link-896862525/000006.o\" \"-g\" \"-O2\" \"-g\" \"-O2\" \"-g\" \"-O2\" \"-lpthread\" \"-g\" \"-O2\" \"-framework\" \"CoreFoundation\" \"-framework\" \"Security\" \"-g\" \"-O2\" \"-g\" \"-O2\" \"-g\" \"-O2\"\r\n# here's the warning\r\nld: warning: option -s is obsolete and being ignored\r\n```\r\n\r\nI'd understand if this bug doesn't receive a lot of attention, since recent clangs seem to handle it just fine. I'll just upgrade my build server, thanks for the help! :star2: \r\n\r\n*edit: if anyone's interested in reproducing the above, the program I'm building is \u003chttps://github.com/itchio/butler\u003e*\r\n\r\n*edit 2: note that the simple 11887.go test case posted by @gazed above isn't enough to reproduce the problem*",
	"user": {
		"login": "fasterthanlime",
		"id": 7998310,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-23T12:37:34Z",
	"updated_at": "2016-03-23T12:44:24Z"
}
