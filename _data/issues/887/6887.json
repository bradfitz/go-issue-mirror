{
	"id": 51285875,
	"number": 6887,
	"state": "closed",
	"title": "os: Rename needs more doc clarity",
	"body": "by **xunfin**:\n\n\u003cpre\u003edocumentation and maybe implementation issue \n\ntext (ie \u003ca href=\"http://golang.org/pkg/os/#Rename\"\u003ehttp://golang.org/pkg/os/#Rename\u003c/a\u003e ) is too vague\n\neg naively expect os.Rename(\u0026quot;C:/a/b/c/oldname.go\u0026quot;,\u0026quot;newname.go\u0026quot;) to\ncreate/rename the file at \u0026quot;C:a/b/c/newname.go\u0026quot;\n\nin WinXP the file ends up in working directory eg with go file in C:/x/y/z/rename.go ,\n'go run rename.go' places files renamed using commands of the type\n'os.Rename(\u0026quot;C:/d/e/.../i/j/oldname.go\u0026quot;,\u0026quot;newname.go\u0026quot;)' into\nC:/x/y/z/newname.go\n\nSpecifically Windows users may be caught out by this - commandline windows (eg cmd.exe)\nrename function cannot change either drive or path eg usage given in WinXP cmd.exe via\n\u0026quot;rename help\u0026quot;\n\n::(quote) RENAME [drive:][path]filename1 filename2. Note that you cannot specify a new\ndrive or path for your destination file.\n\nSee also  \u003ca href=\"https://golang.org/issue/6401\"\u003eissue #6401\u003c/a\u003e - its not clear if os.Rename is supposed to function as an\n\u0026quot;os.Move\u0026quot; or not\n\nI'm assuming the current behaviour of os.Rename is due to the parameters not being\nchecked for suitability.\n\nIn the short term can the docs be modified to say something like: \u0026quot;Both strings\n'oldname' and 'newname' must be supplied as full file paths to avoid unintended\nbehavour\u0026quot;\n\nWhich operating system are you using?\n:XP SP3\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 18,
	"closed_at": "2014-12-08T10:38:20Z",
	"created_at": "2013-12-03T23:49:05Z",
	"updated_at": "2016-06-25T01:23:25Z"
}
