{
	"id": 66062567,
	"body": "\u003ca id=\"c8\"\u003e\u003c/a\u003eComment 8:\n\n\u003cpre\u003eI agree: this is working fine.  The existence of the message\n\n\u003e  number 4.87402195346389e+27 badly parsed as 8865794286000692p+39 (expected\n8865794286000691p+39)\n\nsuggests that the random number generator generated 8865794286000691p+39 and then\nFormatFloat formatted it (correctly) as 4.87402195346389e+27, and then ParseFloat parsed\nit (incorrectly) to 8865794286000692p+39.  But of course ParseFloat does not do that if\nwe just run the obvious code.  I will add this test case to the test suite, just in case\nit turns up on some other machine again.  And we can chalk it up to a bad builder until\nthen.\u003c/pre\u003e\n\n\n_Owner changed to @rsc._\n\n_Status changed to **Started**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-02-11T02:56:30Z",
	"updated_at": "2014-12-08T10:15:18Z"
}
