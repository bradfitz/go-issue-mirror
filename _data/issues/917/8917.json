{
	"id": 51288866,
	"number": 8917,
	"state": "closed",
	"title": "reflect: Call fails with large values because of GC program misunderstanding",
	"body": "\u003cpre\u003epackage main\n\nimport (\n\t\u0026quot;reflect\u0026quot;\n)\n\nfunc main() {\n\tfv := reflect.ValueOf(func([256]*byte){})\n\tfv.Call([]reflect.Value{reflect.ValueOf([256]*byte{})})\n}\n\n\ngo run foo.go\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x4398f0]\n\ngoroutine 1 [running]:\nreflect.(*gcProg).appendProg(0xc20801e040, 0x459ce0)\n\t/home/iant/go/src/reflect/type.go:1524 +0x190\nreflect.funcLayout(0x45d680, 0x0, 0x459ce0, 0x459c01, 0x7f02c6b6d4e8, 0xc20801e020)\n\t/home/iant/go/src/reflect/type.go:1805 +0x606\nreflect.Value.call(0x45d680, 0x4975f0, 0x0, 0x130, 0x47f1a0, 0x4, 0xc20802b750, 0x1,\n0x1, 0x0, ...)\n\t/home/iant/go/src/reflect/value.go:485 +0xeed\nreflect.Value.Call(0x45d680, 0x4975f0, 0x0, 0x130, 0xc20802b750, 0x1, 0x1, 0x0, 0x0, 0x0)\n\t/home/iant/go/src/reflect/value.go:388 +0xd2\nmain.main()\n\t/home/iant/foo.go:9 +0x1b7\n\ngoroutine 2 [runnable]:\nruntime.forcegchelper()\n\t/home/iant/go/src/runtime/proc.go:90\nruntime.goexit()\n\t/home/iant/go/src/runtime/proc.c:1651\n\ngoroutine 3 [runnable]:\nruntime.bgsweep()\n\t/home/iant/go/src/runtime/mgc0.go:66\nruntime.goexit()\n\t/home/iant/go/src/runtime/proc.c:1651\n\n\nThe problem is that the code in reflect/type.go gcProg.appendProg does not consider the\ncase in which the first word in t.gc is nil.  This case arises for large objects: ones\nwith more than 128 pointers.\u003c/pre\u003e",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:49:08Z",
	"created_at": "2014-10-10T00:36:46Z",
	"updated_at": "2016-06-25T01:42:55Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
