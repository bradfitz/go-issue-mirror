{
	"id": 51282376,
	"number": 4610,
	"state": "closed",
	"title": "cmd/gc: internal compiler error when variable name shadows a struct literal's type name",
	"body": "\u003cpre\u003e$ cat main.go\npackage main\n\ntype bar struct {\n\tX int\n}\n\ntype foo struct {\n\tB bar\n}\n\nfunc newFoo() *foo {\n\tvar foo bar\n\treturn \u0026amp;foo{foo}\n}\n\nfunc main() {}\n$ go tool 6g -o /dev/null main.go\nmain.go:4: internal compiler error: dowidth: unknown type: X int\n\n\nIf newFoo is instead\n--------\nfunc newFoo() *foo {\n    var x bar\n    return \u0026amp;foo{x}\n}\n--------\nthen the program compiles fine.\n\n\nIf newFoo is instead\n--------\nfunc newFoo() foo {\n    var foo bar\n    return foo{foo}\n}\n--------\nthen the compiler gives a reasonable error message:\n$ go tool 6g -o /dev/null main.go\nmain.go:13: foo is not a type\n\n\nSimilarly, if the entire program is\n--------\npackage main\n\ntype foo struct {\n    B int\n}\n\nfunc newFoo() *foo {\n    var foo int\n    return \u0026amp;foo{foo}\n}\n\nfunc main() {}\n--------\nthen again, the compiler gives a reasonable error message:\n$ go tool 6g -o /dev/null main.go\nmain.go:9: foo is not a type\u003c/pre\u003e",
	"user": {
		"login": "nigeltao",
		"id": 8565232,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:24:28Z",
	"created_at": "2013-01-04T03:10:24Z",
	"updated_at": "2016-06-24T22:30:41Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
