{
	"id": 51288443,
	"number": 8610,
	"state": "closed",
	"title": "spec: type assertion x.(T) where T is an interface should not permit conflicting method signatures",
	"body": "\u003cpre\u003eSee also \u003ca href=\"https://golang.org/issue/8561\"\u003eissue #8561\u003c/a\u003e.\n\n\u003ca href=\"http://play.golang.org/p/VYrNcjJ_Qo\"\u003ehttp://play.golang.org/p/VYrNcjJ_Qo\u003c/a\u003e\n\ncompiles w/o a problem but leads to a guaranteed run-time failure: The method m in T1\nand T2 have conflicting signatures and thus x (static type T1) cannot possibly be of\ntype T2.\n\nThe spec does not require that the signatures be conflict-free (\n\u003ca href=\"http://tip.golang.org/ref/spec#Type_assertions\"\u003ehttp://tip.golang.org/ref/spec#Type_assertions\u003c/a\u003e ):\n\n\u0026quot;If T is an interface type, x.(T) asserts that the dynamic type of x implements the\ninterface T.\u0026quot;\n\nInterestingly, when it comes to interface assignments (\u0026quot;implements\u0026quot; relation),\nconflicting method signatures are not permitted:\n\n\u003ca href=\"http://play.golang.org/p/QAZWsPqejr\"\u003ehttp://play.golang.org/p/QAZWsPqejr\u003c/a\u003e\n\nprog.go:13: cannot use x2 (type T2) as type T1 in assignment:\n\tT2 does not implement T1 (wrong type for m method)\n\t\thave m(string)\n\t\twant m(int)\nprog.go:14: cannot use x1 (type T1) as type T2 in assignment:\n\tT1 does not implement T2 (wrong type for m method)\n\t\thave m(int)\n\t\twant m(string)\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Go2"
		},
		{
			"name": "LanguageChange"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2014-12-08T10:47:46Z",
	"created_at": "2014-08-28T22:58:53Z",
	"updated_at": "2016-06-25T01:40:19Z"
}
