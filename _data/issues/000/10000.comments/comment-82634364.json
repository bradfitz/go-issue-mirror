{
	"id": 82634364,
	"body": "The benchmark here has some quirks:\r\n\r\n* The `%` operator is a significant portion of the execution time of the benchmark.\r\n* It is averaging the time taken by different paths into the switch statement, which hides variability by index.\r\n* By using string literals throughout, `eqstring` gets to short-circuit by doing a pointer equality check rather than having to actually compare bytes. The effect is not significant here, because the strings are short, but it is present. (This suggests an optimization opportunity for `cmpstring`. I will investigate separately whether doing that is worthwhile.)\r\n\r\nHere is a set of benchmarks that provides more visibility into exactly what is going on:\r\n\r\n```go\r\npackage main\r\n\r\nimport \"testing\"\r\n\r\nvar words = [...]string{\"super\", \"califragi\", \"listic\", \"expiali\", \"docius\"}\r\n\r\nfunc benchmarkSwitch(b *testing.B, s string) {\r\n\tm := 0\r\n\tfor i := 0; i \u003c b.N; i++ {\r\n\t\tswitch s {\r\n\t\tcase \"super\":\r\n\t\t\tm++\r\n\t\tcase \"califragi\":\r\n\t\t\tm++\r\n\t\tcase \"listic\":\r\n\t\t\tm++\r\n\t\tcase \"expiali\":\r\n\t\t\tm++\r\n\t\tcase \"docius\":\r\n\t\t\tm++\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunc BenchmarkSwitch0(b *testing.B) { benchmarkSwitch(b, words[0]) }\r\nfunc BenchmarkSwitch1(b *testing.B) { benchmarkSwitch(b, words[1]) }\r\nfunc BenchmarkSwitch2(b *testing.B) { benchmarkSwitch(b, words[2]) }\r\nfunc BenchmarkSwitch3(b *testing.B) { benchmarkSwitch(b, words[3]) }\r\nfunc BenchmarkSwitch4(b *testing.B) { benchmarkSwitch(b, words[4]) }\r\n\r\nfunc BenchmarkSwitchNewStr0(b *testing.B) { benchmarkSwitch(b, string([]byte(words[0]))) }\r\nfunc BenchmarkSwitchNewStr1(b *testing.B) { benchmarkSwitch(b, string([]byte(words[1]))) }\r\nfunc BenchmarkSwitchNewStr2(b *testing.B) { benchmarkSwitch(b, string([]byte(words[2]))) }\r\nfunc BenchmarkSwitchNewStr3(b *testing.B) { benchmarkSwitch(b, string([]byte(words[3]))) }\r\nfunc BenchmarkSwitchNewStr4(b *testing.B) { benchmarkSwitch(b, string([]byte(words[4]))) }\r\n\r\nfunc benchmarkIf(b *testing.B, s string) {\r\n\tm := 0\r\n\tfor i := 0; i \u003c b.N; i++ {\r\n\t\tif s == \"super\" {\r\n\t\t\tm++\r\n\t\t} else if s == \"califragi\" {\r\n\t\t\tm++\r\n\t\t} else if s == \"listic\" {\r\n\t\t\tm++\r\n\t\t} else if s == \"expiali\" {\r\n\t\t\tm++\r\n\t\t} else if s == \"docius\" {\r\n\t\t\tm++\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunc BenchmarkIf0(b *testing.B) { benchmarkIf(b, words[0]) }\r\nfunc BenchmarkIf1(b *testing.B) { benchmarkIf(b, words[1]) }\r\nfunc BenchmarkIf2(b *testing.B) { benchmarkIf(b, words[2]) }\r\nfunc BenchmarkIf3(b *testing.B) { benchmarkIf(b, words[3]) }\r\nfunc BenchmarkIf4(b *testing.B) { benchmarkIf(b, words[4]) }\r\n\r\nfunc BenchmarkIfNewStr0(b *testing.B) { benchmarkIf(b, string([]byte(words[0]))) }\r\nfunc BenchmarkIfNewStr1(b *testing.B) { benchmarkIf(b, string([]byte(words[1]))) }\r\nfunc BenchmarkIfNewStr2(b *testing.B) { benchmarkIf(b, string([]byte(words[2]))) }\r\nfunc BenchmarkIfNewStr3(b *testing.B) { benchmarkIf(b, string([]byte(words[3]))) }\r\nfunc BenchmarkIfNewStr4(b *testing.B) { benchmarkIf(b, string([]byte(words[4]))) }\r\n```\r\n\r\nHere's the result of running these benchmarks:\r\n\r\n```\r\nbenchmark                  old ns/op\r\n\r\nBenchmarkIf0               3.36\r\nBenchmarkIf1               4.45\r\nBenchmarkIf2               5.22\r\nBenchmarkIf3               5.56\r\nBenchmarkIf4               10.5\r\n\r\nBenchmarkIfNewStr0         5.26\r\nBenchmarkIfNewStr1         7.19\r\nBenchmarkIfNewStr2         7.23\r\nBenchmarkIfNewStr3         7.47\r\nBenchmarkIfNewStr4         12.4\r\n\r\nBenchmarkSwitch0           9.56\r\nBenchmarkSwitch1           8.73\r\nBenchmarkSwitch2           9.38\r\nBenchmarkSwitch3           8.66\r\nBenchmarkSwitch4           7.99\r\n\r\nBenchmarkSwitchNewStr0     11.3\r\nBenchmarkSwitchNewStr1     11.1\r\nBenchmarkSwitchNewStr2     11.0\r\nBenchmarkSwitchNewStr3     10.3\r\nBenchmarkSwitchNewStr4     11.0\r\n```\r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-17T23:04:36Z",
	"updated_at": "2015-03-17T23:04:36Z"
}
