{
	"id": 113151465,
	"body": "Works as designed:\r\n\r\n\t// When calling Encode instead of EncodeAll, the single-frame image is\r\n\t// translated such that its top-left corner is (0, 0), so that the single\r\n\t// frame completely fills the overall GIF's bounds.\r\n\r\nThis test of a round trip through DecodeAll/EncodeAll passes:\r\n\r\nfunc TestRoundtrip(t *testing.T) {\r\n\tdata := []byte(\"GIF89a\\n\\x0000000,\\x00\\x000\\x00\\n\\x00\\n\\x00\\x80000000\\x02\\b\\xf01u\\xb9\\xfdal\\x05\\x00;\")\r\n\tgif, err := DecodeAll(bytes.NewReader(data))\r\n\tif err != nil {\r\n\t\tt.Fatal(err)\r\n\t}\r\n\tvar w bytes.Buffer\r\n\terr = EncodeAll(\u0026w, gif)\r\n\tif err != nil {\r\n\t\tt.Fatal(err)\r\n\t}\r\n\tgif1, err := DecodeAll(\u0026w)\r\n\tif err != nil {\r\n\t\tt.Fatal(err)\r\n\t}\r\n\tif len(gif.Image) != len(gif1.Image) {\r\n\t\tt.Fatal(\"wrong number of images\")\r\n\t}\r\n\r\n\tif !reflect.DeepEqual(gif.Image[0].Bounds(), gif1.Image[0].Bounds()) {\r\n\t\tt.Fatal(\"bounds changed: %v -\u003e %v\", gif.Image[0].Bounds(), gif1.Image[0].Bounds())\r\n\t}\r\n}\r\n",
	"user": {
		"login": "jeffallen",
		"id": 1131456,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-18T13:15:33Z",
	"updated_at": "2015-06-18T13:15:33Z"
}
