{
	"id": 81359871,
	"body": "My objection mirrors Minux's. I worry that the temptation to use \"Unsorted\noutput:\" will grow copy pasta style in the same way that\nruntime.GOMAXPROCS(runtime.NumCPU()) proliferates in Go programs today.\n\nPut simply, I don't see the very rare case of documenting the output of a\nfunction who's element's order is undefined as justification for making the\nexample test feature more complicated -- and I do believe this is a rare\ncase.\n\nOn Mon, Mar 16, 2015 at 1:41 PM, Andrew Gerrand \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e On 13 March 2015 at 16:36, Dave Cheney \u003cnotifications@github.com\u003e wrote:\n\u003e\n\u003e \u003e I don't believe this feature should be added. As you point out, it will\n\u003e be\n\u003e \u003e easily abused and grow into some kind of \"oh those silly Go developers,\n\u003e why\n\u003e \u003e do I have to type this magic thing so my examples always pass\".\n\u003e \u003e\n\u003e\n\u003e If the thing you're demonstrating does emit things in an arbitrary order,\n\u003e then why wouldn't you use \"Unsorted output:\" ? Isn't that the correct thing\n\u003e to do?\n\u003e\n\u003e I'm having trouble understanding your objection.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/10149#issuecomment-81357968\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-16T02:47:29Z",
	"updated_at": "2015-03-16T02:47:29Z"
}
