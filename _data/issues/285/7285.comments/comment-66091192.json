{
	"id": 66091192,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003e\"go test\" already does what Ian suggests in #3. If the test files say 'package cef_test'\n(and need no access to internals of package cef) then only the test package is built,\nnot the original.\n\nFor example, sync/atomic only has test files in package atomic_test, not in package\natomic:\ng% go list -f '{{.TestGoFiles}} {{.XTestGoFiles}}' sync/atomic\n[] [atomic_test.go]\ng%\n\nSo go test sync/atomic does not rebuild the package, just the tests:\n\ng% go test -x sync/atomic\nWORK=/var/folders/00/05_b8000h01000cxqpysvccm000n9d/T/go-build969876488\nmkdir -p $WORK/sync/atomic/_test/sync/\nmkdir -p $WORK/sync/atomic/_test/_obj_xtest/\ncd /Users/rsc/g/go/src/pkg/sync/atomic\n/Users/rsc/g/go/pkg/tool/darwin_amd64/6g -o $WORK/sync/atomic/_test/sync/atomic_test.a\n-p sync/atomic_test -complete -D _/Users/rsc/g/go/src/pkg/sync/atomic -I $WORK -pack\n./atomic_test.go\nmkdir -p $WORK/sync/atomic/_test/\ncd $WORK/sync/atomic/_test\n/Users/rsc/g/go/pkg/tool/darwin_amd64/6g -o ./main.a -p testmain -complete -D \"\" -I . -I\n$WORK -pack ./_testmain.go\ncd .\n/Users/rsc/g/go/pkg/tool/darwin_amd64/6l -o $WORK/sync/atomic/_test/atomic.test -L\n$WORK/sync/atomic/_test -L $WORK -w -extld=clang $WORK/sync/atomic/_test/main.a\n$WORK/sync/atomic/_test/atomic.test\nok  \tsync/atomic\t1.665s\ng%\u003c/pre\u003e\n\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-03-03T20:10:58Z",
	"updated_at": "2014-12-08T10:40:34Z"
}
