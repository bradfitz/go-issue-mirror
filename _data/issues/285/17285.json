{
	"id": 180106428,
	"number": 17285,
	"state": "closed",
	"title": "net/http: ListenAndServeTLS closing connection to IE10 and IE11 when only TLSv1.0 is permitted",
	"body": "### What version of Go are you using (`go version`)?\r\ngo version go1.7.1 linux/amd64\r\n\r\nThis also occurred on go1.6.1.\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/kevin/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build495107859=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n### What did you do?\r\n\r\nA Go executable serving on port 443 using\r\n```\r\nhttp.ListenAndServeTLS(\":443\", sslConfig.CertFilePath, sslConfig.KeyFilePath, handler)\r\n```\r\n\r\nWe haven't made any specific TLS changes.\r\n\r\n### What did you expect to see?\r\nWhen making a HTTPS request to the running server it should have responded with the 200 OK response.\r\n\r\n\r\n### What did you see instead?\r\n\r\nWhen connecting from a Windows machine with SSL 2.0, SSL 3.0 and TLS 1.0 enabled as follows -\r\n![image](https://cloud.githubusercontent.com/assets/103921/18963370/a1427922-866c-11e6-9182-e506293d480d.png)\r\n\r\nIE10+ fails to connect to the server over HTTPS\r\n![image](https://cloud.githubusercontent.com/assets/103921/18963799/4af9e940-866e-11e6-8c70-fef89a1bcbc6.png)\r\n\r\nI've noticed that Caddy-based servers have the same problem. TLS1.0 shows as enabled when analyzing our SSL config through ssllabs.com\r\n\r\n* Disabling SSL 2.0 and SSL 3.0 in Windows settings, so that only TLS1.0 is enabled, works.\r\n* Enabling any later version of TLS (1.1 or 1.2) alongside SSLv2 and SSLv3 works.\r\n\r\nIt's just this one config set that seems to have a problem connecting to Go's HTTP stack (it has no problem connecting to an equivalently configured nginx instance for example, over TLS1.0).\r\n\r\n(Yes it's crazy to have TLS1.1 and 1.2 disabled, but corporates be corporates and I can't fix their security policies)",
	"user": {
		"login": "kmckelvin",
		"id": 103921,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "WaitingForInfo"
		}
	],
	"comments": 3,
	"closed_at": "2016-09-29T18:06:29Z",
	"created_at": "2016-09-29T17:00:58Z",
	"updated_at": "2016-09-29T18:06:29Z"
}
