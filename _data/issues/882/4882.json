{
	"id": 51282773,
	"number": 4882,
	"state": "closed",
	"title": "cmd/6g: compiler accepts illegal shift expression",
	"body": "\u003cpre\u003e$ cat x.go\npackage main\nvar s uint\nvar x = 1.0\u0026lt;\u0026lt;s + 0\nvar y float64 = x\n\n$ go tool 6g x.go\nx.go:4: cannot use x (type int) as type float64 in assignment\n\nHowever, the compiler should not have accepted the shift expression on line 3. Per the\nspec:\n\n\u0026quot;If the left operand of a non-constant shift expression is an untyped constant, the\ntype of the constant is what it would be if the shift expression were replaced by its\nleft operand alone\u0026quot;.\n\n(note also that we are not in a comparison). Leaving the shift away:\n\n$ cat x.go\npackage main\nvar s uint\nvar x = 1.0 + 0\nvar y float64 = x\n\nthe compiler accepts the code. The assignment to y proves that x is of type float64 and\nthus that the 0 got promoted to an untyped floating point value and the sum (1.0 + 0)\nlead to the default variable type float64, as expected. In the first example, it appears\nthat the 1.0 in the shift got typed as an int, per the error message on the next line.\n\nNote that ggcgo correctly complains for the first program:\n\n$ gccgo x.go\nx.go:3:12: error: invalid context-determined non-integer type for left operand of shift\n var x = 1.0\u0026lt;\u0026lt;s + 0\n            ^\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2014-12-08T10:25:59Z",
	"created_at": "2013-02-23T00:01:50Z",
	"updated_at": "2016-06-24T22:33:46Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
