{
	"id": 182122771,
	"body": "Well, yes, once the main window is closed, the program should exit, but I'm not familiar enough with Win32 to know what the mechanism should be.\r\n\r\nOn X11, the program is sent an X11 ClientMessageEvent (WM_DELETE_WINDOW), which the x11driver converts to a shiny lifecycle.StageDead event, which the program responds to by exiting the main loop and thus the main function.\r\n\r\nOn Win32, the OS is presumably sending the Windows' equivalent of X11's WM_DELETE_WINDOW, call it a Foo event, and the windriver should convert that to a shiny lifecycle.StageDead event. As I said, though, I am not familiar enough with Win32 to know what that Foo event is.\r\n\r\nFor the gldriver, on Mac, grep the source code for windowWillClose and follow the trail. For gldriver on Linux and Windows, there's TODOs but no working code. For Linux, the TODO is to do the same as the x11 driver. For Windows, the TODO is the same as it is for windriver, but as I said, I don't know what that Foo event mechanism should be.\r\n\r\nFixing this may involve the shiny/driver/internal/win32 package instead of the windriver package, possibly involving a missing LifecycleEvent call on the appropriate message, but I'm only guessing.",
	"user": {
		"login": "nigeltao",
		"id": 8565232,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-09T22:57:47Z",
	"updated_at": "2016-02-09T22:57:47Z"
}
