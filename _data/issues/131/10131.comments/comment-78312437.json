{
	"id": 78312437,
	"body": "Go 1.6 SSA middle-end should get rid of the redundant bound checks\neasily.\n\nPlease note that bound check also checks for negative indices too (the\nassembly uses unsigned comparison, so one instruction checks both\ndirections)\n\nThus, when bound checking i and j, not only do we need to check\nmax(i, j) \u003c len, we also need to check min(i, j) \u003e= 0. It's not a clear gain\nas compared to check 0 \u003c= i \u003c len in one instruction and 0 \u003c= j \u003c len in\nanother instruction. (We might be able to group bound check of i and\nj together and use some branch elimination techniques though.)\n",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-11T17:28:06Z",
	"updated_at": "2015-03-11T17:28:06Z"
}
