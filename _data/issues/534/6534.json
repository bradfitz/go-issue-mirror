{
	"id": 51285328,
	"number": 6534,
	"state": "closed",
	"title": "cmd/go: better handling of object mismatch during compilation",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n\nI routinely use a handful of different go toolchains. As a result, I hit variants of\nthis error pretty frequently when building:\n\nimport \u0026lt;...\u0026gt;: object is [darwin amd64 devel +351b6fe0ae36 Tue Sep 24 15:54:48 2013\n-0400 X:none] expected [darwin amd64 devel +dd18f98c9aa5 Thu Sep 26 21:35:49 2013 +1000\nX:none]\n\nTo reproduce quickly:\n\n1. Use one go version (say 1.1.2).\n2. go test -i ./...\n3. Switch to another go version (say tip).\n4. go build ./...\n\n\nPlease provide any additional information below.\n\nIt's easy enough to fix the problem; remove the pkg directory, or build with -a.\nHowever, the former is an annoyance and both make builds needlessly longer. (Is there\nanother option I have failed to find?)\n\nPossible fixes include:\n\n* Put the go toolchain version in the pkg directory (darwin_amd64_1.1.2 or\ndarwin_amd64_351b6fe0ae36). Optimizes for build speed at the cost of disk space and\ndirectory ugliness.\n* Instead of dying on mismatch, just discard the object, recompile, and keep on going.\n\nI'd even suggest that this be considered for Go 1.2, since most users are likely to hit\nthis (albeit just once) when they upgrade.\u003c/pre\u003e",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 10,
	"closed_at": "2015-06-15T18:58:14Z",
	"created_at": "2013-10-04T15:53:41Z",
	"updated_at": "2016-06-25T01:20:10Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
