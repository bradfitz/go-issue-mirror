{
	"id": 51276143,
	"number": 176,
	"state": "closed",
	"title": "runtime.Caller crashes on large inputs",
	"body": "\u003cpre\u003eFrom the documentation I thought that runtime.Caller(frame) will\nreturn false when it is not possible to obtain information - instead\nit causes program to crash past call stack top :\n\npackage main\n\nimport (\n       \u0026quot;fmt\u0026quot;;\n       \u0026quot;runtime\u0026quot;;\n       \u0026quot;strings\u0026quot;\n)\n\nfunc main() {\n       foo()\n}\n\nfunc foo() {\n       bar()\n}\n\nfunc bar() {\n       for i := 0; ; i++ {\n               _, file, line, ok := runtime.Caller(i);\n               if ok {\n                       path := strings.Split(file, \u0026quot;/\u0026quot;, 0);\n                       fmt.Printf(\u0026quot;%s : %d\\n\u0026quot;, path[len(path)-1], line);\n               } else {\n                       break;\n               }\n       }\n}\n\nresults in\n\nstacktrace.go : 19\nstacktrace.go : 14\nstacktrace.go : 10\nasm.s : 81\nproc.c : 135\nBus error\n\nAlso, Caller() doc says 'The argument is the number of stack frames to\nascend, with 1 identifying the the caller of Caller', while in fact,\nit looks like 0 is the caller of Caller.\n\n\u003ca href=\"http://groups.google.com/group/golang-nuts/t/8626dabf2b80d453\"\u003ehttp://groups.google.com/group/golang-nuts/t/8626dabf2b80d453\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2014-12-08T10:03:32Z",
	"created_at": "2009-11-14T14:43:17Z",
	"updated_at": "2016-06-24T19:04:37Z"
}
