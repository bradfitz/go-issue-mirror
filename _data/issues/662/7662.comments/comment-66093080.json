{
	"id": 66093080,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003efor example, when a goroutine calls a blocking syscall, it will block OS thread,\nand if there are other ready goroutine and GOMAXPROCS isn't reached, a new\nOS thread will be created. Once created, an OS thread won't be destroyed.\n\nSetMaxThreads is in runtime/debug package, not runtime package.\nNote that after reaching the set limit, and if Go runtime tries to create\nanother OS thread, the whole process will exit.\n\nThe problem of too many fd shouldn't be related to the number of OS threads.\nas you've discovered, it's lsof that is over-counting the number of open fds,\nnot the kernel.\n\nyou probably should use Read/Write timeouts in your net connections to timely\nclose idle connections. And if your application truly require more than 1M fds,\nincreate the ulimit.\u003c/pre\u003e\n\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-03-29T06:29:01Z",
	"updated_at": "2014-12-08T10:42:33Z"
}
