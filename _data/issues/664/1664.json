{
	"id": 51278137,
	"number": 1664,
	"state": "closed",
	"title": "Weird case with shift expression, compiler eats it just fine, fails on linking",
	"body": "\u003cpre\u003epackage main\n\nimport \u0026quot;fmt\u0026quot;\n\nfunc main() {\n\tvar i uint = 33;\n\tvar a = (1 \u0026lt;\u0026lt; i) + 4.5\n\tfmt.Println(a)\n}\n\n//---------------------------------------------------------------------\nAnd that's what it says:\n\n[nsf @ ~]$ 8g test.go\n[nsf @ ~]$ 8l -o test test.8\nmain.main: doasm: notfound t2=0 from=42 to=b (7)\tADDL\t$(40120000,00000000),BX\n\nCompiler version: b84e614e2516 weekly/weekly.2011-03-28\nMachine: linux OS, x86 (but others reported it on x86_64 as well)\n\nAnd a small request, can you guys explain what this expression should do? I think\ndefault type of '4.5' (which is float64) should be transfered to shift expression to '1'\nand it will result in a type error. But gc compiles it just fine.. strange.. anyways, my\nsecond bug report today, lucky you :)\u003c/pre\u003e",
	"user": {
		"login": "nsf",
		"id": 12567,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:09:20Z",
	"created_at": "2011-04-04T20:11:44Z",
	"updated_at": "2016-06-24T19:27:11Z"
}
