{
	"id": 51285793,
	"number": 6832,
	"state": "closed",
	"title": "gccgo: compiler does not detect illegal assignment to a private struct member",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n\nlucky(~/src) % cat a/a.go \npackage a\n\ntype MyError struct {\n        error\n}\nlucky(~/src) % cat b/b.go\npackage b\n\nimport \u0026quot;errors\u0026quot;\nimport \u0026quot;a\u0026quot;\n\nfunc F() error {\n        return \u0026amp;a.MyError{errors.New(\u0026quot;plop\u0026quot;)}\n}\n\nWhat is the expected output? What do you see instead?\n\nExpected:\n\nlucky(~/src) % go build -compiler gc b\n# b\nb/b.go:7: implicit assignment of unexported field 'error' in a.MyError literal\n\nGot:\n\nlucky(~/src) % go build -compiler gccgo b\nlucky(~/src) % echo $?\n0\n\nPlease use labels and text to provide additional information.\u003c/pre\u003e",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "paranoiacblack",
		"id": 1035296,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2015-01-07T16:23:49Z",
	"created_at": "2013-11-25T06:48:21Z",
	"updated_at": "2016-06-25T01:22:56Z"
}
