{
	"id": 164741192,
	"number": 16316,
	"state": "closed",
	"title": "go/types: calling Sizeof(*Struct) twice with different sizes yields incorrect results",
	"body": "Typecheck a package containing:\r\n\r\n```go\r\ntype S struct {\r\n\ti int\r\n\tb bool\r\n\ts string\r\n\tn int\r\n}\r\n```\r\n\r\nGiven `t` (of type `*types.Struct`) that contains the type `S`, run:\r\n\r\n```go\r\n\tsizes := types.StdSizes{WordSize: 4, MaxAlign: 4}\r\n\tfmt.Println(sizes.Sizeof(t))\r\n\tsizes = types.StdSizes{WordSize: 8, MaxAlign: 8}\r\n\tfmt.Println(sizes.Sizeof(t))\r\n```\r\n\r\nWant: `20`, then `40`. Got: `20`, then `20`. It appears that the problem is in `go/types/sizes.go`:\r\n\r\n```go\r\nfunc setOffsets(s *Struct, sizes Sizes) bool {\r\n\tvar calculated bool\r\n\ts.offsetsOnce.Do(func() {\r\n\t\tcalculated = true\r\n\t\ts.offsets = sizes.Offsetsof(s.fields)\r\n\t})\r\n\treturn calculated\r\n}\r\n```\r\n\r\nOnce the offsets for a struct have been calculated once, they are cached forever, even if the `sizes` parameter changes.\r\n\r\nI encountered this while working on improvements to vet. I'm happy to fix, but I'd like input on what direction the fix should take. It's not obvious to me. The only decent options I see are:\r\n\r\n(1) removing the cached offsets entirely\r\n(2) keeping a map from StdSizes to cached offsets and type assert to go from Sizes to StdSizes (because not all Sizes implementations can serve as a map key)\r\n\r\nand neither of those is particularly appealing.\r\n\r\nMy temporary workaround to eliminate the call to `s.offsetsOnce.Do`, to force recalculation each time.\r\n\r\ncc @griesemer @mdempsky\r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2016-08-16T00:21:44Z",
	"created_at": "2016-07-11T00:04:16Z",
	"updated_at": "2016-08-16T00:21:44Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	},
	"assignees": [
		{
			"login": "josharian",
			"id": 67496,
			"type": "User",
			"site_admin": false
		},
		{
			"login": "griesemer",
			"id": 8528975,
			"type": "User",
			"site_admin": false
		}
	]
}
