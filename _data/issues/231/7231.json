{
	"id": 51286390,
	"number": 7231,
	"state": "closed",
	"title": "crypto/tls: Currently there's no way to find out what protocol was used to negotiate TLS connection on the client",
	"body": "by **manoj.dayaram@moovweb.com**:\n\n\u003cpre\u003eAs far as I can tell, there's no exposure to what TLS protocol was used after performing\nthe TLS handshake.  I noticed we store the version that was used here:\n\n\u003ca href=\"http://golang.org/src/pkg/crypto/tls/handshake_client.go#L85\"\u003ehttp://golang.org/src/pkg/crypto/tls/handshake_client.go#L85\u003c/a\u003e\n\nHowever, this is in a private member of the Connection structure, and there are no\naccessors for it.\n\nNow that Go supports more than just TLS1.0 for secure connections from the client side,\nit would be nice to expose what protocol was used to perform the handshake.  I figured\nadding a Version() method to the connection or perhaps a member in the ConnectionState\nstruct would work quite nicely.\n\nI scraped/read as much of the crypto/tls package but I'm not super familiar with crypto\nstuff.  I couldn't really see a way to be able to determine this information as a user\nof the library, so sorry if I'm missing an obvious way to access this.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:40:13Z",
	"created_at": "2014-01-29T03:13:54Z",
	"updated_at": "2016-06-25T01:26:35Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
