{
	"id": 224725106,
	"body": "I looked at the most recent link above, https://build.golang.org/log/df89109d252dc12ecd0fa587cc00c11cdb0af1c5 .  It doesn't seem like a liveness problem.  The crash is when `newstack` is called while panicking here:\r\n\r\n    runtime.sigpanic()\r\n\t    /private/var/folders/0m/n0150xb53y5cg1rq75_3qv3r0000gn/T/workdir/go/src/runtime/sigpanic_unix.go:12 +0x50 fp=0xa24cbe0 sp=0xa24cb90\r\n    runtime/internal/atomic.Cas64(0x65, 0x0, 0x1)\r\n\t    /private/var/folders/0m/n0150xb53y5cg1rq75_3qv3r0000gn/T/workdir/go/src/runtime/internal/atomic/atomic_arm64.s:76 +0xc fp=0xa24cbf0 sp=0xa24cbf0\r\n    runtime.lock(0x65)\r\n\t    /private/var/folders/0m/n0150xb53y5cg1rq75_3qv3r0000gn/T/workdir/go/src/runtime/lock_sema.go:43 +0x94 fp=0xa24cc40 sp=0xa24cbf0\r\n    runtime.sellock(0xa1eef28, 0x1, 0x1, 0xa1eef88, 0x1, 0x1)\r\n\t    /private/var/folders/0m/n0150xb53y5cg1rq75_3qv3r0000gn/T/workdir/go/src/runtime/select.go:170 +0xc0 fp=0xa24cc90 sp=0xa24cc40\r\n    runtime.selectgoImpl(0xa1eef10, 0x18, 0xa251000)\r\n\t    /private/var/folders/0m/n0150xb53y5cg1rq75_3qv3r0000gn/T/workdir/go/src/runtime/select.go:426 +0x115c fp=0xa24cea0 sp=0xa24cc90\r\n    runtime.selectgo(0xa1eef10)\r\n\t    /private/var/folders/0m/n0150xb53y5cg1rq75_3qv3r0000gn/T/workdir/go/src/runtime/select.go:238 +0x10 fp=0xa24cec0 sp=0xa24cea0\r\n    net.(*netFD).connect.func2(0x0, 0xa1eef30, 0x0, 0x0)\r\n\t    /private/var/folders/0m/n0150xb53y5cg1rq75_3qv3r0000gn/T/workdir/go/src/net/fd_unix.go:110 +0x154 fp=0xa24cf80 sp=0xa24cec0\r\n\r\nThis stack trace shows that the pointer value is already bad (I don't know if it is really `0x65`, but it is clearly bad or we would not have gotten a signal here).  The pointer value is not on the stack--it's obtained from a field of the `hselect` which is on the stack.  Specifically it's `lock(\u0026c.lock)` in `sellock`.  I checked the liveness info of the function where the `hselect` is allocated, `net.(*netFD).connect.func2` and it is pretty straightforward.\r\n\r\n    net/fd_unix.go:110: live at call to selectgo: ctx fd done autotmp_3704\r\n\r\n    TYPE    \"\".autotmp_3704-128(SP)type.struct { tcase uint16; ncase uint16; pollorder *uint8; lockorder *uint8; scase [2]struct { elem *uint8; chan *uint8; pc uintptr; kind uint16; so uint16; receivedp *uint8; releasetime uint64 }; lockorderarr [2]uint16; pollorderarr [2]uint16 }, $128\r\n\r\nI don't know what is going on but I don't see how there could be any liveness confusion here.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-08T20:57:15Z",
	"updated_at": "2016-06-08T20:57:15Z"
}
