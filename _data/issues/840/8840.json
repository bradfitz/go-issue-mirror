{
	"id": 51288767,
	"number": 8840,
	"state": "closed",
	"title": "net/http: client fails to detect Connection: close header in an edge case",
	"body": "by **jim.robinson**:\n\n\u003cpre\u003eWhat does 'go version' print?\n\ngo version go1.3.2 darwin/amd64\n\nWhat steps reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\n1. Run \u003ca href=\"http://play.golang.org/p/7m6DwmGGQ9\"\u003ehttp://play.golang.org/p/7m6DwmGGQ9\u003c/a\u003e\n\nWhat happened?\n\nThe last request sent by the client fails to establish\na new connection on request# 4.\n\nWhat should have happened instead?\n\nThe client should reconnect to the server instead\nof using the closed connection.\n\nPlease provide any additional information below.\n\nI ran into this case for real, where a server was sending\nback:\n\nHTTP/1.1 200 OK\n\u0026lt;other headers\u0026gt;\nConnection: keep-alive\n\u0026lt;other headers\u0026gt;\nConnection: close\n\nand my go based client failed to detect that the server\nhad closed the connection, causing the next HTTP request\nto fail.\n\nMy reading of the RFC indicates a server may send multiple\nConnect headers, and that if any one of them is a \u0026quot;close\u0026quot;\ntoken, the client should shut down its end of the socket.\n\nIt's stupid beyond belief that the server is sending these,\nbut I think it's technically accepted by the RFC.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2015-04-29T23:54:15Z",
	"created_at": "2014-09-30T00:16:47Z",
	"updated_at": "2016-06-25T01:42:25Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
