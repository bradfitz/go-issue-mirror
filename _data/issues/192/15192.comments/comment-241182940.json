{
	"id": 241182940,
	"body": "One major issue with standardized classification is that it is incredibly difficult coming up with a set of \"classes\" that everybody agrees upon. Even worse, the various classifications often have some overlap with each other such that it is difficult at times figuring out exactly which classification a given error falls under.\r\n\r\nThe first question to answer is, **what are the \"common\" classes that should be defined?** Follow up questions are: is this set fixed or do we allow people to extend them?\r\n\r\nOne attempt at such classification (and arising from some of the problems faced at Google) are the [codes found in GRPC](https://godoc.org/google.golang.org/grpc/codes). I'm not saying that this is a good set of classifications, but it is one attempt.\r\n\r\nSupposing that you could agree upon a set of common classes, the next question is **how do we get errors to be classified as a given type?** Possible solutions:\r\n* For every class, require that they satisfy an IsX interface (as you proposed) such that the satisfaction of that interface indicates that it is of that class. If so, what does it mean if an error satisfies multiple classifications?\r\n* Suppose that the classifications are essentially globally agreed upon (which is hard) and mapped to an enum, you could require that errors satisfy a ErrorCode interface that allows you to query for the error code (similar to GRPC).\r\n\r\nPersonally, I recognize that there is a problem. However, I'm not convinced that a common set of standardized classification is feasible, but I'm willing to see discussion about this. Unless the standardized set is *concisely* suitable for majority of use cases, I believe that having a pre-defined set is more harm than good.",
	"user": {
		"login": "dsnet",
		"id": 6354026,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-20T06:32:04Z",
	"updated_at": "2016-08-20T06:52:33Z"
}
