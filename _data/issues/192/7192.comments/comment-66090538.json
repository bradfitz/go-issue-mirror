{
	"id": 66090538,
	"body": "\u003ca id=\"c13\"\u003e\u003c/a\u003eComment 13:\n\n\u003cpre\u003eThank you for explanation.\n\n\u0026gt; I'm not against exact rules, but the spec is probably not where they should be.\n\nI have nothing against not putting them into spec. But they should be somewhere. I (as a\nuser) should be able to find them when I need them.\n\n\u0026gt; ... hence go vet.\n\n\"go vet\" failed me just the other day. I had this issue\n\u003ca href=\"https://code.google.com/p/odbc/issues/detail?id=51\"\u003ehttps://code.google.com/p/odbc/issues/detail?id=51\u003c/a\u003e, which, I believe, is gc related. But\n\"go vet\" didn't complained about that:\n\nC:\\go\\path\\src\\code.google.com\\p\\odbc\u0026gt;hg par\nchangeset:   37:78314be168c8\nuser:        Alex Brainman \u0026lt;alex.brainman@gmail.com\u0026gt;\ndate:        Tue Sep 02 11:28:47 2014 +1000\nsummary:     odbc: better handling of string parameters\n\n\nC:\\go\\path\\src\\code.google.com\\p\\odbc\u0026gt;go vet ./...\nc:\\go\\path\\src\\code.google.com\\p\\odbc\\column.go:103: unreachable code\nc:\\go\\path\\src\\code.google.com\\p\\odbc\\mssql_test.go:227: database/sql.NullString\ncomposite literal uses unkeyed fields\nc:\\go\\path\\src\\code.google.com\\p\\odbc\\mssql_test.go:235: database/sql.NullString\ncomposite literal uses unkeyed fields\nc:\\go\\path\\src\\code.google.com\\p\\odbc\\mssql_test.go:308: arg is.weight for printf verb\n%d of wrong type: float64\nexit status 1\n\nMaybe I am wrong thinking that \"go vet\" should hold my hand here. If not \"go vet\", then\nI want some rules I can base my decisions on. I was hopping using \"unsafe\" would be less\nlike black magic at this moment. And, I expect, things will change again in the near\nfuture.\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-10-24T05:08:03Z",
	"updated_at": "2014-12-22T06:31:50Z"
}
