{
	"id": 51286310,
	"number": 7183,
	"state": "closed",
	"title": "net: UnixListener.AcceptUnix returns a UnixConn with incorrect network type string",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n\nRun the code at \u003ca href=\"http://play.golang.org/p/FJBS8MOF72\"\u003ehttp://play.golang.org/p/FJBS8MOF72\u003c/a\u003e on a system supporting the\n\u0026quot;unixpacket\u0026quot; network type (not play.golang.org).\n\nWhat is the expected output?\n\nunixpacket\nunixpacket\nunixpacket\n\nWhat do you see instead?\n\nunixpacket\nunix\nunix\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n6g\n\nWhich operating system are you using?\n\nLinux\n\nWhich version are you using?  (run 'go version')\n\ngo version go1.2 linux/amd64\n\nPlease provide any additional information below.\n\nIt looks like the problem is that UnixListener.AcceptUnix unconditionally passes\nsockaddrToUnix to the fd.accept() call that it makes.  I'm guessing that it should\ninstead pass either sockaddrToUnix or sockaddrToUnixpacket based on the network type of\nthe listener.\n\nNote that the underlying socket appears to be the correct type.  It's just the reported\n*Addr().Network() strings that are wrong.\u003c/pre\u003e",
	"user": {
		"login": "jgennis",
		"id": 876312,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:39:53Z",
	"created_at": "2014-01-22T22:59:40Z",
	"updated_at": "2016-06-25T01:26:08Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
