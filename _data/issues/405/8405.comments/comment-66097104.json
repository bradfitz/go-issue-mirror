{
	"id": 66097104,
	"body": "\u003ca id=\"c13\"\u003e\u003c/a\u003eComment 13:\n\n\u003cpre\u003e\u003e The benefit of (2) is no atomics and no interface value size change. It also brings\nthe gc and gccgo implementations in line (gccgo already does this).\n\nDoes gccgo allocate an object always? or only if it's not a pointer? We do want the\nlatter, but I suspect that gccgo can be doing the former.\n\nAccording to the new data, most embed values are either pointers or small integers. We\ndon't need to allocate pointers, because they are already pointers. And for the small\nintegers we can have a persistent cache (which has rough edges as was noted previously).\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-07-23T10:10:09Z",
	"updated_at": "2014-12-08T10:46:41Z"
}
