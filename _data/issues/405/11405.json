{
	"id": 91066503,
	"number": 11405,
	"state": "closed",
	"title": "proposal: encoding/xml: Return a SyntaxError for unmatched start elements at EOF",
	"body": "I propose to make the xml.Decoder's Token routine fail with a syntax error, when the XML input contains unmatched start elements and the end of the stream.\r\n\r\n#### Background\r\nThe xml.Decoder's Token routine returns successfully for input even if the XML content includes not properly closed start elements. For example, the following input\r\n\r\n    \u003croot\u003e\u003cbar\u003e\u003c/bar\u003e\r\n\r\ncauses Token to return nil, io.EOF at the end of the stream, despite the unmatched \"root\" start element. \r\n\r\nIn my understanding Token should reject syntactically incorrect XML like this with an error. \r\n\r\nThis is also indicated by the following statement of the [godoc of Token](http://golang.org/pkg/encoding/xml/#Decoder.Token) (emphasis mine)\r\n\r\n    Token guarantees that the StartElement and EndElement tokens it returns are properly \r\n    nested and *matched*: if Token encounters an unexpected end element, it will return an \r\n    error.\r\n\r\n#### Proposal\r\nI propose that a xml.Decoder's Token routine should return xml.SyntaxError for dangling start elements at the end of the stream. To do so, I have a CL ready for submission. Should this go through the proposed proposal process? Should this wait until Go 1.6?\r\n\r\nWorking example: http://play.golang.org/p/Fs6NPvDLu0\r\nVerified on Go version: 1.4.2 and 1.5 development version (go version devel +751eef8).\r\n\r\n[edited for clarity]\r\n[edited to serve as a proposal for the proposal process]",
	"user": {
		"login": "rsto",
		"id": 4787225,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Proposal"
		}
	],
	"assignee": {
		"login": "nigeltao",
		"id": 8565232,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"closed_at": "2015-09-10T01:18:44Z",
	"created_at": "2015-06-25T20:23:39Z",
	"updated_at": "2016-09-22T15:54:26Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
