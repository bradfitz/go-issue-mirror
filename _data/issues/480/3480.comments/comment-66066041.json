{
	"id": 66066041,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6 by **julius.volz**:\n\n\u003cpre\u003eOne workaround for now is to custom-type your floats and implement the json.Marshaler\ninterface (json.\u003ca href=\"http://golang.org/pkg/encoding/json/#Marshaler)\"\u003ehttp://golang.org/pkg/encoding/json/#Marshaler)\u003c/a\u003e for that type. E.g.:\n\n==============================================\ntype jsonFloat float32\n\nfunc (value jsonFloat) MarshalJSON([]byte, error) {\n  ... // return your own float representation here.\n}\n==============================================\n\nThis also works for floats that are parts of structs, etc. But I agree it would be nice\nto get this fixed in Go itself.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-01-12T01:58:44Z",
	"updated_at": "2014-12-08T10:18:12Z"
}
