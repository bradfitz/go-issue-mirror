{
	"id": 254561835,
	"body": "I think the package docs for os.Chtimes are correct. For example you can use a nanosecond-specific system call but if you're writing to FAT32, it's still going to get truncated to 2-second granularity.\n\nThe expectation is that the implementation of syscall.UtimesNano uses the most precise system call available. That's true on Linux: it tries utimensat and falls back to utimes when utimensat is not available. It appears to be true on Windows too: it uses SetFileTime which works at 100ns granularity, but that's true of everything on Windows.\n\nOn BSD systems, there is a TODO in syscall_bsd.go to use a higher precision call.\n\nOn Solaris, there is no TODO but still the implementation uses plain syscall.Utimes. If Solaris has a more precise call, the Solaris implementation of syscall.UtimesNano should use it.",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-18T16:23:49Z",
	"updated_at": "2016-10-18T16:23:49Z"
}
