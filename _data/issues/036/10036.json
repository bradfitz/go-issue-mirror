{
	"id": 59355774,
	"number": 10036,
	"state": "closed",
	"title": "spec: can't use blank variable in type switch",
	"body": "I often want to use a blank variable in a type switch when I'm building scaffolding.  For example:\r\n\r\n```.go\r\npackage main\r\n\r\nimport \"fmt\"\r\n\r\ntype foo interface { }\r\ntype bar struct { }\r\ntype baz struct { }\r\n\r\nfunc main() {\r\n\tvar aFoo foo\r\n\taFoo = bar{}\r\n\r\n\tswitch _ := aFoo.(type) {\r\n\t\tcase bar: fmt.Printf(\"It's a bar!\")\r\n\t\tcase baz: fmt.Printf(\"It's a baz!\")\r\n\t\tdefault: fmt.Printf(\"It's none of these things!\")\r\n\t}\r\n}\r\n```\r\n\r\nI'd like to write this, then go in and fill in some details.  However, trying to run the above results in the following error message:\r\n```\r\n.\\blank.go:13: invalid variable name _ in type switch\r\n```\r\n\r\nIt really wants a variable.  The problem is, I don't want to use a variable yet in my switch, which results in me having to change the code to look like this:\r\n```.go\r\nswitch n := aFoo.(type) {\r\n\tcase bar: \r\n\t\t_ = n\r\n\t\tfmt.Printf(\"It's a bar!\")\r\n```\r\njust to get the compiler error to go away.\r\n\r\nI also tried using `_ =` instead of `_ :=`, and that doesn't work either.\r\n\r\nIt would be nice if the blank variable were allowed in the type switch.\r\n\r\n$ go version\r\ngo version go1.4.1 windows/amd64",
	"user": {
		"login": "ellisonch",
		"id": 1285287,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2015-03-01T20:01:43Z",
	"created_at": "2015-02-28T20:02:43Z",
	"updated_at": "2016-06-25T02:02:16Z"
}
