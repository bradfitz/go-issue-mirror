{
	"id": 51284582,
	"number": 6036,
	"state": "closed",
	"title": "cmd/gc: offset 2147483649 too large for OINDREG",
	"body": "\u003cpre\u003eThis:\n\npackage main\n\nfunc main() {\n        var buf [1\u0026lt;\u0026lt;31]byte\n        buf[len(buf)-1] = 0\n}\n\ngenerates:\n\nlarge.go:3: stack frame too large (\u0026gt;2GB)\n\nIf that's too large, why isn't it just heap-promoted?\n\n\n\n\n\nThis works fine:\n\npackage main\n\nvar ptr *byte\n\nfunc main() {\n        var buf [1\u0026lt;\u0026lt;31]byte\n        buf[len(buf)-1] = 0\n        ptr = \u0026amp;buf[0]\n}\n\n\n\n\nBut this:\n\npackage main\n\n/*\n\n*/\nimport \u0026quot;C\u0026quot;\n\nimport \u0026quot;unsafe\u0026quot;\n\nfunc main() {\n        var buf [1\u0026lt;\u0026lt;31 + 2]byte\n        for i := range buf {\n                buf[i] = 'a'\n        }\n        buf[len(buf)-1] = 0  // ERROR: offset 2147483649 too large for OINDREG\n        println(len(C.GoString((*C.char)(unsafe.Pointer(\u0026amp;buf[0])))))\n}\n\nYields: x.go:15: offset 2147483649 too large for OINDREG\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:33:13Z",
	"created_at": "2013-08-04T19:10:49Z",
	"updated_at": "2016-06-24T22:53:34Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
