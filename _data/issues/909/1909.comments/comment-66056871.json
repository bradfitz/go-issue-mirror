{
	"id": 66056871,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5 by **lstoakes**:\n\n\u003cpre\u003eI think this underlines a more serious problem which is that code like:-\n\ntype Foo interface {\n    Bar() interface { Foo }\n}\n\nCompiles without error which seems to me to be an invalid recursive type (unless I'm\nmissing something here). I am happy to submit a new issue for this (with reproducing\ncode - you get nonsensical syntax errors regarding the \u0026lt; of '\u0026lt;...\u0026gt;' when trying\nto import a package with such a type in, for example).\n\n\n\nsrc/cmd/gc/fmt.c:1453 has a mechanism for detecting + dealing with overly deep recursive\ntypes when dumping output, i.e.:-\n\n\tif(t-\u0026gt;trecur \u0026gt; 4)\n\t\treturn fmtstrcpy(fp, \"\u0026lt;...\u0026gt;\");\n\nHowever, a small increase in the number of functions within an interface which exhibits\nthis recursive behaviour seems to result in exponentially increasing size of the output\ntype (as inserted at the start of the  .6/.8/.? file).\n\nThis also varies with the limit put on t-\u0026gt;trecur, e.g.:-\n\u0026gt; 0 -\u0026gt; \u003ca href=\"https://gist.github.com/1552355\"\u003ehttps://gist.github.com/1552355\u003c/a\u003e, 69 lines\n\u0026gt; 1 -\u0026gt; \u003ca href=\"https://gist.github.com/1552361\"\u003ehttps://gist.github.com/1552361\u003c/a\u003e, 1089 lines\n\u0026gt; 2 -\u0026gt; \u003ca href=\"https://gist.github.com/1552363\"\u003ehttps://gist.github.com/1552363\u003c/a\u003e  20,997 lines\n\nI have submitted a trivial patch which puts a limit on the nfmt field of fp to a\nsomewhat arbitrary limit, which fixes the issue with the compiler going down the garden\npath, but obviously not whether it identifies this situation as invalid recursion:-\n\n\u003ca href=\"http://golang.org/cl/5504108/\"\u003ehttp://golang.org/cl/5504108/\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-01-02T22:43:53Z",
	"updated_at": "2014-12-22T05:56:30Z"
}
