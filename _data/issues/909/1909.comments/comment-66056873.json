{
	"id": 66056873,
	"body": "\u003ca id=\"c7\"\u003e\u003c/a\u003eComment 7:\n\n\u003cpre\u003eThe underlying problem is that embedded interfaces are substituted by their methods\nearly on, and then the original embedded field is lost.  I started by making\ntointerface() retain the originals, and mark them and their imported methods as\n-\u003eembedded.  then typefmt can print skip the embedded methods and print the interface\nthey came from (possibly only for recursive types).   This involves skipping over the\nnow-retained TINTER fields in some places and making go.y accept them too.  \n\nSince it's nearly weekend and there's no rsc to bounce this off off, i thought i'd write\nit up here.\n\nwork in progress in \u003ca href=\"http://golang.org/cl/5523047\"\u003ehttp://golang.org/cl/5523047\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "lvdlvd",
		"id": 9462795,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-01-06T15:36:19Z",
	"updated_at": "2014-12-08T10:10:29Z"
}
