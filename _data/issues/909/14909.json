{
	"id": 142577421,
	"number": 14909,
	"state": "closed",
	"title": "go/types: types.StdSizes and unsafe.Sizeof disagree about size of struct",
	"body": "1. What version of Go are you using (`go version`)?\r\ngo version go1.6 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\n\r\n\r\n3. What did you do?\r\nfoo.go is http://play.golang.org/p/MwjE9tNkB4\r\n\r\nI'm using `guru describe` as a simple client of types.StdSizes.\r\n\r\n```\r\n$ guru describe /tmp/src/foo/foo.go:\\#765 | grep size\r\n/tmp/src/foo/foo.go:43.6-43.7: definition of type pp (size 195, align 8)\r\n\r\n$ go run /tmp/src/foo/foo.go                  \r\n2016/03/22 09:08:30 200\r\n```\r\n\r\n\r\n4. What did you expect to see?\r\nI expect guru (types.StdSizes) and unsafe.Sizeof to agree\r\n\r\n5. What did you see instead?\r\nThey disagree.\r\n\r\nThe [maligned](https://github.com/mdempsky/maligned) tool has its [own (partial) types.Sizes implementation](https://github.com/mdempsky/maligned/blob/master/maligned.go#L179) that only differs in the way it calculates the size of a *types.Struct, and produces the correct result.\r\n\r\n/cc @alandonovan @griesemer ",
	"user": {
		"login": "dominikh",
		"id": 39825,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"closed_at": "2016-03-22T17:52:44Z",
	"created_at": "2016-03-22T08:11:24Z",
	"updated_at": "2016-03-22T21:01:35Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
