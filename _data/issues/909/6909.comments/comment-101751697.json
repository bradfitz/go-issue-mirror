{
	"id": 101751697,
	"body": "I personally want `go test -c` to support producing a single binary. In particular, I want `go test -c std` to work, so that I can easily benchmark compiler changes. Right now I have to play games to generate and manage a slew of test binaries.\r\n\r\nHowever, this would require a bit of thought. Right now, all tests and benchmarks are implicitly namespaced by the package. Take for example `go test -c encoding/...`. Several packages have a `TestEncode` function. If you did `./encoding.test -test.run=Encode`, should it run all of them? How do you specify just one of them? There's a similar question about output. Run e.g. `go test -v -run=^TestEncode$ encoding/...` and observe that the `go` tool is responsible for providing the output that differentiates the different packages. Same thing for benchmarks.\r\n\r\nThis is not to say it can't/shouldn't be done, just that there are some careful decisions to be made.\r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-05-13T17:22:50Z",
	"updated_at": "2015-05-13T17:22:59Z"
}
