{
	"id": 66051790,
	"body": "\u003ca id=\"c19\"\u003e\u003c/a\u003eComment 19:\n\n\u003cpre\u003eNice test program from \u003ca href=\"https://golang.org/issue/1925\"\u003eissue #1925\u003c/a\u003e:\n\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"runtime\"\n\t\"net/http\"\n\t_ \"net/http/pprof\"\n)\n\nvar st runtime.MemStats\n\nfunc main() {\n\truntime.MemProfileRate = 1\n\tfor i := 0; i \u0026lt; 10; i++ {\n\t\ta := make([]byte, 5000000)\n\t\tif a == nil {\n\t\t}\n\t\ta = nil\n\t\truntime.GC()\n\t\truntime.ReadMemStats(\u0026st)\n\t\tfmt.Println(i, st.Alloc, st.Sys, st.HeapObjects)\n\t}\n\tfmt.Println()\n\tfor i := 0; i \u0026lt; 10; i++ {\n\t\ta := make([]byte, 20000000)\n\t\tif a == nil {\n\t\t}\n\t\ta = nil\n\t\truntime.GC()\n\t\truntime.ReadMemStats(\u0026st)\n\t\tfmt.Println(i, st.Alloc, st.Sys, st.HeapObjects)\n\t}\n\n\thttp.ListenAndServe(\":8000\", nil)\n}\n\nI have a few changes to ameliorate the effect of large static tables for Go 1, but the\ngeneral problem remains.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-02-19T06:57:15Z",
	"updated_at": "2014-12-22T05:52:25Z"
}
