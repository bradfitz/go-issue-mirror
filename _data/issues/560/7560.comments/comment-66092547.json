{
	"id": 66092547,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6 by **dturnbull**:\n\n\u003cpre\u003eI may not understand why go aligns the way it does, but I get what is happening. What\nconcerns me is how this will be handled in future versions of Go. If Go will forbid\ncomplex64 in C structs by way of compilation error then my application will stop\nworking. If I understand better what this error will be then I can start writing\ncompatible code today.\n\nI've attached a more complete example so you can see exactly what I'm doing. The\nworkaround I'm using is to put all the complex64 numbers at the start of the C struct.\nThis Mixer example is only one of dozens that is implemented in this pattern.\n\nYou may wonder why I use this unusual pattern. The process() function needs to run in\nreal-time on a 700MHz ARM. Using C lets me run this on an OS thread to bypass the range\nchecking and GC in Go. Moving to complex128 is a 20% performance hit on ARM (but\ninsignificant on amd64).\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/7560/6/Go-Issue7560.zip\"\u003eGo-Issue7560.zip\u003c/a\u003e (5233 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-03-28T18:02:56Z",
	"updated_at": "2014-12-08T10:42:02Z"
}
