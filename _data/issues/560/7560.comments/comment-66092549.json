{
	"id": 66092549,
	"body": "\u003ca id=\"c7\"\u003e\u003c/a\u003eComment 7:\n\n\u003cpre\u003eyou can use this gcc-ism to force 8-byte alignment for your complex float in C\nto be compatible with Go:\n__attribute__((align(8)) complex float x;\n(you can also use anonymous union to achieve the same effect if you don't want\nto use gcc attributes, but you will have to make sure to choose another type that\nhas a alignment of 8-byte.)\n\nfor example, define your mixer struct this way:\ntypedef struct {\n\tuint32_t unalign;\n\t__attribute__((align(8))) complex float osc;\n} mixer;\n\nThis will waste 4 byte of memory, so if you control the struct layout, you'd better\njust align complex float to 8-byte boundary manually;\n\nI will add something along this line to the cgo article on go-wiki for this workaround.\u003c/pre\u003e",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-03-28T18:11:24Z",
	"updated_at": "2014-12-08T10:42:02Z"
}
