{
	"id": 66078231,
	"body": "\u003ca id=\"c16\"\u003e\u003c/a\u003eComment 16:\n\n\u003cpre\u003eMinux, Ality,\n\nRegardless of what plan9 or TLS or X does, io.Reader doesn't define message boundaries.\n\nIf you're using an io.Reader against a message-oriented input device, and\nyourReader.Reader(buf) = 5, nil, you can't tell the difference between\n\n   5\n   2 + 3\n   2 + 3 + 0\n\nLikewise, things like io.LimitReader or bufio.Reader have no problems moving\n\"boundaries\" around.\n\nIt's possible that a future interface (or your own) might define how a Read-like method\nshould behave with messages and preserve boundaries (e.g. chan []byte) but io.Reader is\nnot that interface.  \"Preserving\" zero \"messages\" is not a valid argument in this\ndiscussion.\n\nIn any case, per the mailing list, it's come around to being defined as a no-op.  I'm\nwriting this for background.\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-04-18T13:10:48Z",
	"updated_at": "2014-12-08T10:28:38Z"
}
