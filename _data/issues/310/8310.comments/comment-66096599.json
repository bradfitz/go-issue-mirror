{
	"id": 66096599,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eJust for reference, and not meant as implementation suggestion: Java's JNI passes\npointers as \"handles\": A JNI-wrapper (a little stub, generated on-the fly for each call\nsignature) pushes the arguments on the stack again in C (reverse) order. For each Java\nobject, the stack address of the corresponding Java pointer is pushed. In C, that stack\naddress (which is immutable for the duration of the C call) acts as the handle via which\nthe underlying Java object is accessed. This permits GC to move objects around, but\ncomes at the cost of an extra (hopefully inlined) function call and indirection for each\nJava data structure access from within C. It also requires the respective C code to be\nwritten specifically with JNI in mind.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-07-01T21:45:02Z",
	"updated_at": "2014-12-08T10:46:10Z"
}
