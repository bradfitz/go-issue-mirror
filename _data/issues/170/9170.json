{
	"id": 51289187,
	"number": 9170,
	"state": "closed",
	"title": "net/http, time: Wapper Timer with sync.Pool will improve proformace of transport 20% more.",
	"body": "by **stormgbs**:\n\n\u003cpre\u003ego version: go1.3.3 linux/amd64\n\nWhat does 'go version' print?\n\nI am doing prefomace optimization for gorouter. \n1. The avg qps of gorouter is about 13000 without ResponseHeaderTimeout disabled.\n2. The avg qps of gorouter is about 15500 with ResponseHeaderTimeout disabled.\n3. I found that time.After() in net/http:tranport.go consumed an unwieldy amount of\nmemory after finishing pprof.\n4. The avg qps of gorouter beccame about 15500 again after I finished wapper Timer wich\nsync.Pool.\n\nsync.Pool is prefect.\n\nThe patches are attached.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/9170/0/sleep.go.patch\"\u003esleep.go.patch\u003c/a\u003e (1177 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/9170/0/transport.go.path\"\u003etransport.go.path\u003c/a\u003e (1193 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:50:06Z",
	"created_at": "2014-11-26T08:25:51Z",
	"updated_at": "2016-06-25T01:44:59Z"
}
