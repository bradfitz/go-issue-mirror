{
	"id": 51278833,
	"number": 2170,
	"state": "closed",
	"title": "encoding/json: struct field implementing Unmarshaler",
	"body": "by **akunokuroneko**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. Create a custom type that implements Unmarshaller against it's immediate (not\npointer) value.\n2. Use type as an exported immediate value in a struct.\n3. json.Decode() and watch the unmarshal fail.\n\nWhat is the expected output?\nThe Unmarshaller method to be invoked.\n\nWhat do you see instead?\n\u0026quot;json: cannot unmarshal string into Go value of type ...\u0026quot;\n\n(in this case, string is the literal type being used in the JSON stream to fudge the\ncustom type)\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nLinux amd64\n\nWhich revision are you using?  (hg identify)\nr59\n\nPlease provide any additional information below.\nPatch attached.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/2170/0/json-unmarshal-immediate.diff\"\u003ejson-unmarshal-immediate.diff\u003c/a\u003e (799 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "dsymonds",
		"id": 31506,
		"type": "User",
		"site_admin": false
	},
	"comments": 18,
	"closed_at": "2014-12-08T10:11:40Z",
	"created_at": "2011-08-22T02:45:06Z",
	"updated_at": "2016-06-24T19:33:36Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
