{
	"id": 137556476,
	"body": "The other situation where we saw these types of performance graphs was\nin fact on a cloud service and we root caused it to cloud service VM\nstarving the application of resources.\n\nI'd be willing to attribute it to that except for the laptop sighting.\nLet's focus on\nlaptop sighting.\n\nOn Thu, Sep 3, 2015 at 3:17 PM, Evgeny \u003cnotifications@github.com\u003e wrote:\n\n\u003e Can you run it with\n\u003e GODEBUG=gctrace=1 turned on and capture the output? This will let us know\n\u003e if the GC is the culprit.\n\u003e\n\u003e I will try, thank you\n\u003e\n\u003e Also what is the machine/OS and is anything else going on on the machine.\n\u003e The only other time I've\n\u003e seen a situation like this is when the app is inactive and the OS decides\n\u003e to take all of the apps resources\n\u003e away leaving the app with very some small part of a single CPU.\n\u003e\n\u003e It was five times, first time on my develop laptop\n\u003e \"14.1.0 Darwin Kernel Version 14.1.0: Tue Jul 14 11:13:11 CEST 201;\n\u003e root:xnu-2782.10.73~1/RELEASE_X86_64 x86_64\"\n\u003e\n\u003e and other times on digitalocean vm\n\u003e\n\u003e \"3.2.0-4-amd64 #1 \u003chttps://github.com/golang/go/issues/1\u003e SMP Debian\n\u003e 3.2.65-1+deb7u1 x86_64 GNU/Linux\"\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/12478#issuecomment-137546443\u003e.\n\u003e\n",
	"user": {
		"login": "RLH",
		"id": 972447,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-03T19:51:44Z",
	"updated_at": "2015-09-03T19:51:44Z"
}
