{
	"id": 105573082,
	"number": 12553,
	"state": "closed",
	"title": "goroutine hangs at runtime.Gosched()",
	"body": "The go version is `1.5.1`.\r\n\r\nHere is the program:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"runtime\"\r\n\t\"time\"\r\n)\r\n\r\nfunc test2() {\r\n\tfor i := 1; ; i++ {\r\n\t\tfmt.Println(i, time.Now())\r\n\t}\r\n}\r\n\r\nfunc test() {\r\n\ta := 100\r\n\tfor i := 1; i \u003c 1000; i++ {\r\n\t\ta = i*100/i + a\r\n\t}\r\n}\r\n\r\nfunc main() {\r\n\truntime.GOMAXPROCS(2)\r\n\tgo test2()\r\n\tfor {\r\n\t\ttest()\r\n\t}\r\n}\r\n```\r\n\r\nNote that I configure **two threads** to run goroutines.\r\nThe main goroutine would block one thread, while the test2() goroutine would run in another thread.\r\nHowever, the result is that, the test2() runs a bit, but after some random interval, it hangs (do not output anything); the main goroutine continue to run test() without problem.\r\n\r\nIf I add some function call into the test(), e.g.\r\n\r\n```go\r\nfunc test() {\r\n\t...\r\n\tsyscall.Getgid()\r\n}\r\n```\r\n\r\nThen the test() and test2() would run in parallel as expected.\r\n\r\nI try to do panic after some counts (estimated to be after the test2() hangs) within the loop to call test():\r\n\r\n```go\r\n\tfor i := 1; i \u003c 10000000000; i++ {\r\n\t\tif i == 1000000 {\r\n\t\t\tpanic(\"hello\")\r\n\t\t}\r\n\t\ttest()\r\n\t}\r\n```\r\n\r\nThen it shows the backtrace:\r\n\r\n```\r\ngoroutine 1 [running]:\r\nmain.main()\r\n\t/tmp/tmp.go:30 +0xb1\r\n\r\ngoroutine 5 [runnable]:\r\nruntime.Gosched()\r\n\t/usr/local/go/src/runtime/proc.go:166 +0x14\r\ntime.Time.Format(0xecd820010, 0x37614ae4, 0x593740, 0x523840, 0x27, 0x0, 0x0)\r\n\t/usr/local/go/src/time/format.go:431 +0x135\r\ntime.Time.String(0xecd820010, 0x37614ae4, 0x593740, 0x0, 0x0)\r\n\t/usr/local/go/src/time/format.go:401 +0x54\r\ntime.(*Time).String(0xc8204977a0, 0x0, 0x0)\r\n\t\u003cautogenerated\u003e:1 +0xad\r\nfmt.(*pp).handleMethods(0xc820068000, 0xc800000076, 0x0, 0xc820071c01)\r\n\t/usr/local/go/src/fmt/print.go:730 +0x633\r\nfmt.(*pp).printArg(0xc820068000, 0x5024a0, 0xc8204977a0, 0x76, 0x0, 0xc81ffdb400)\r\n\t/usr/local/go/src/fmt/print.go:806 +0x4a5\r\nfmt.(*pp).doPrint(0xc820068000, 0xc820071f78, 0x2, 0x2, 0x101)\r\n\t/usr/local/go/src/fmt/print.go:1254 +0x258\r\nfmt.Fprintln(0x7f18e5d2f000, 0xc820026010, 0xc820071f78, 0x2, 0x2, 0x40b7f0, 0x0, 0x0)\r\n\t/usr/local/go/src/fmt/print.go:254 +0x67\r\nfmt.Println(0xc820071f78, 0x2, 0x2, 0x5024a0, 0x0, 0x0)\r\n\t/usr/local/go/src/fmt/print.go:264 +0x73\r\nmain.test2()\r\n\t/tmp/tmp.go:12 +0x17f\r\ncreated by main.main\r\n\t/tmp/tmp.go:27 +0x3c\r\nexit status 2\r\n```\r\n\r\nSo why test2() goroutine hangs?",
	"user": {
		"login": "kingluo",
		"id": 4401042,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 10,
	"closed_at": "2015-09-09T14:25:51Z",
	"created_at": "2015-09-09T10:54:07Z",
	"updated_at": "2016-09-22T15:55:02Z"
}
