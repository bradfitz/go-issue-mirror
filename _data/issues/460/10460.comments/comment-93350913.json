{
	"id": 93350913,
	"body": "If we want to increase this to say a Terabyte I don't see why a Go flag or\nenvironment variable is needed, reflecting the limits of the underlying\nOS/HW seems the correct approach.  I don't have a sense of what, in terms\nof allocation rate, pointer density, sharing between Goroutines, and\npointer mutation, would fill a Terabyte of Go memory.\n\nOn Tue, Apr 14, 2015 at 11:07 PM, Noah Daniels \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e I certainly understand that something like a \"-goruntime\" flag can't be\n\u003e added until Go 2.\n\u003e\n\u003e I think there is definite interest in Go in data science, and the need for\n\u003e more than 128GB is going to be common enough. So, perhaps adding an\n\u003e environment variable is warranted.\n\u003e\n\u003e How does one change MaxMem at runtime (of the compiler, I presume)? Up\n\u003e until 1.4 it certainly required a source change to malloc.(go,h); I recall\n\u003e patching it for 1.0 when 16GB didn't cut it.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/10460#issuecomment-93169895\u003e.\n\u003e\n",
	"user": {
		"login": "RLH",
		"id": 972447,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-15T11:54:40Z",
	"updated_at": "2015-04-15T11:54:40Z"
}
