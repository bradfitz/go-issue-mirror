{
	"id": 66092046,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003e\u003e Why is it reporting a race on a stack variable?\n\nCompiler does not always know when a pointer points to stack. E.g. if you have a\nfunction with non-escaping pointer parameter, one caller can pass a pointer to\nstack-allocated object, while another caller can pass a pointer to heap object. So we\nhave to do runtime check for stack accesses, we filter out everything that is not heap\nnor global.\nI suspect that the problem is with heap-allocated stack segments. They are processed by\nrace detector, but when they are malloced the shadow race state is reset. Probably the\nbug is introduced in recent stack management changes.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-03-04T06:10:42Z",
	"updated_at": "2014-12-08T10:41:29Z"
}
