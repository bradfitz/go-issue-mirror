{
	"id": 183186573,
	"number": 17452,
	"state": "closed",
	"title": "suggestion: invert the order of printing panics in printpanics function in runtime/panic.go",
	"body": "For example:\r\n\r\n\tpackage main\r\n\r\n\tfunc main() {\r\n\t\tdefer func() {\r\n\t\t\t// println(recover().(int)) // 5\r\n\t\t}()\r\n\t\t\r\n\t\tdefer panic(5)\r\n\t\tdefer panic(4)\r\n\t\tdefer panic(3)\r\n\t\tdefer panic(2)\r\n\t\tpanic(1)\r\n\t}\r\n\r\nFor above program, the final crash report is like: \r\n\r\n\tpanic: 1\r\n\t\tpanic: 2\r\n\t\tpanic: 3\r\n\t\tpanic: 4\r\n\t\tpanic: 5\r\n\r\n\tgoroutine 1 [running]:\r\n\r\nIt gives people the impression that the panic 1 is more special, and the calling or recover() would return 1 if the \"println(recover().(int))\" line is not commented off. In fact, 5 would be returned.\r\n\r\nAnother reason for this suggestion is that the final report is like a stack trace, so inverting the orders would be better.\r\n\r\nNot a big problem, just a small suggestion.",
	"user": {
		"login": "golang101",
		"id": 22589241,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-10-15T04:44:56Z",
	"created_at": "2016-10-15T03:45:47Z",
	"updated_at": "2016-10-17T01:07:55Z"
}
