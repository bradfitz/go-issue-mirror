{
	"id": 246041399,
	"body": "The source explains why Go does what it does:\r\n\r\n```go\r\nfunc Remove(name string) error {\r\n        // System call interface forces us to know                                                                                        \r\n        // whether name is a file or directory.                                                                                           \r\n        // Try both: it is cheaper on average than                                                                                        \r\n        // doing a Stat plus the right one.                                                                                               \r\n        e := syscall.Unlink(name)\r\n        if e == nil {\r\n                return nil\r\n        }\r\n        e1 := syscall.Rmdir(name)\r\n        if e1 == nil {\r\n                return nil\r\n        }\r\n\r\n        // Both failed: figure out which error to return.                                                                                 \r\n        // OS X and Linux differ on whether unlink(dir)                                                                                   \r\n        // returns EISDIR, so can't use that. However,                                                                                    \r\n        // both agree that rmdir(file) returns ENOTDIR,                                                                                   \r\n        // so we can use that to decide which error is real.                                                                              \r\n        // Rmdir might also return ENOTDIR if given a bad                                                                                 \r\n        // file path, like /etc/passwd/foo, but in that case,                                                                             \r\n        // both errors will be ENOTDIR, so it's okay to                                                                                   \r\n        // use the error from unlink.                                                                                                     \r\n        if e1 != syscall.ENOTDIR {\r\n                e = e1\r\n        }\r\n        return \u0026PathError{\"remove\", name, e}\r\n```\r\n\r\nAs long as Solaris returns an error on Unlink of a directory and doesn't like catch on fire or something, I think we're good here.\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-09T21:12:44Z",
	"updated_at": "2016-09-09T21:12:44Z"
}
