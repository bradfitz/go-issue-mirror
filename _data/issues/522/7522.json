{
	"id": 51286829,
	"number": 7522,
	"state": "closed",
	"title": "reflect: non-exported anonymous field handling",
	"body": "\u003cpre\u003eA breaking change was recently introduced with 6c0339d94123, related\nto issues 7247 and 7363:\n\n    \u003ca href=\"http://golang.org/issue/7247\"\u003ehttp://golang.org/issue/7247\u003c/a\u003e\n    \u003ca href=\"http://golang.org/issue/7363\"\u003ehttp://golang.org/issue/7363\u003c/a\u003e\n    \u003ca href=\"http://golang.org/change/6c0339d94123\"\u003ehttp://golang.org/change/6c0339d94123\u003c/a\u003e\n\nThis issue was discovered because goyaml considered the PkgPath for\ndeciding whether to marshal something or not, and the tests ensuring\nthis works were breaking in gccgo. So the gc suite was fixed to behave\nlike gccgo, and now goyaml is breaking on both.\n\nI can easily fix goyaml and other packages I'm responsible for to do\nsomething else, but I'm concerned that no debate took place about how\nthis is not only breaking the Go1 promise, but it's knowingly breaking\npackages in the wild, and even the standard library itself.\n\nThis program:\n\n    \u003ca href=\"http://play.golang.org/p/kGOVanS2RA\"\u003ehttp://play.golang.org/p/kGOVanS2RA\u003c/a\u003e\n\nProduces {\u0026quot;C\u0026quot;: \u0026quot;v\u0026quot;} on Go 1.2 and {} on tip.\n\nBased on that, I suggest we:\n\n  1) Revert the change\n  2) Add a test to ensure this json case does not regress\n  3) Clarify the spec, given that two implementations diverged\u003c/pre\u003e",
	"user": {
		"login": "niemeyer",
		"id": 378683,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 10,
	"closed_at": "2014-12-08T10:41:50Z",
	"created_at": "2014-03-12T18:47:49Z",
	"updated_at": "2016-06-25T01:29:37Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
