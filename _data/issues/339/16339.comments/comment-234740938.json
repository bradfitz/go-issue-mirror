{
	"id": 234740938,
	"body": "@rakyll\r\n\r\nYou're absolutely right that any aliasing proposal should address the problem of how godoc should present aliased types, but I think your conclusions about the user impact are assuming something worse than what is being proposed.\r\n\r\n\u003e Alias godocs are likely to live independently but I need to refer to the original type to read more, it requires multiple jumps hence not readable.\r\n\r\nNot necessarily.  For example, we could have godoc forward the documentation from the original type.\r\n\r\n\u003e If exporting private names via aliasing is possible, how the godoc will look like? If private godoc is not exported, it will be hard for the user to refer to the actual name and see how to use the alias.\r\n\r\nI don't think anyone is proposing that we allow aliases for private names?  But even if we did, that's not significantly different from defining an exported named type with an unexported underlying type, which you can already do in the language as it stands today.\r\n\r\n\u003e Can . imports override builtin names?\r\n\r\nNo: builtin names are all lower-case (unexported), and . imports only import the exported identifiers.",
	"user": {
		"login": "bcmills",
		"id": 5200974,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-23T21:17:18Z",
	"updated_at": "2016-07-23T21:17:18Z"
}
