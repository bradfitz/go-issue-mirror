{
	"id": 233673126,
	"body": "A few points:\r\n\r\n- +1 on the simplest possible change: only types, only `=`. This would have negligible impact when teaching Go: a newcomer would have no instinct either way on whether `=` works with types. Introducing a new symbol is ugly.\r\n- This is not a Google-only problem. The same thing would happen when trying to refactor a widely-used package on github. It's _easier_ in a monorepo.\r\n- Package versioning would not help with this: client code on one version and client code on another couldn't coexist in the same binary. Aliases are a way to refactor _while remaining API-compatible_.\r\n- Aliases for organization (see [@abhinav above](https://github.com/golang/go/issues/16339#issuecomment-232813695)) are useful.\r\n- Dot imports are ugly because (like `from foo import *` in Python) they break the \"I can always scroll up and see where this symbol came from\" rule. Aliases do not do that.\r\n- Properly supporting protobuf `import public` semantics would be nice.\r\n",
	"user": {
		"login": "zellyn",
		"id": 33625,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 2,
		"+1": 2
	},
	"created_at": "2016-07-19T15:38:17Z",
	"updated_at": "2016-07-19T15:39:35Z"
}
