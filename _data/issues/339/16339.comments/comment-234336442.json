{
	"id": 234336442,
	"body": "My main concern about this proposal is that I think I'd find it pretty confusing to learn that `a.Foo` and `b.Bar` are actually the same thing; I'd never expect that while reading function signatures taking these types, etc.\r\n\r\nWould it be a reasonable idea to (at least for the first iteration of this feature) only allow aliases that are to the same identifier (in a different package)?  So `type X =\u003e other.X` would be legal but `type Y =\u003e other.X` would not be.\r\n\r\nThis seems like it would be sufficient to solve the \"move a type to a different package\" problem in many cases, as well as the \"re-export type from an `internal` component\" case.\r\n\r\nIt doesn't solve the (unmentioned above, I think) use case of using aliases to change the identifier of a type or other object (within a package or while moving it), and it may be the case that the difference between L and L1's package names would inspire you to change the identifier.  (eg moving from `forum.ThreadReader` to `forumthread.Reader`)   So probably a terrible idea.  But just thought it was worth throwing out there.",
	"user": {
		"login": "glasser",
		"id": 16724,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	},
	"created_at": "2016-07-21T18:10:17Z",
	"updated_at": "2016-07-21T18:59:05Z"
}
