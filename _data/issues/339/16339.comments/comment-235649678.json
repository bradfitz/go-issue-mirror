{
	"id": 235649678,
	"body": "@griesemer I agree with @davecheney that this is due to dep mgmt issues. I'm -1 because...\r\n\r\nThis problem exists because `go` isn't doing versions. If you use versions than breaking apart a package would be a major version bump. Tools like GB or Glide would just not use the newer version until specified.\r\n\r\nThis proposal is a solution to a common problem. The other languages such as Rust, Swift, PHP, Python, Ruby, Java, and many others solve it by using versions and version handling. This is trying to solve a common problem in a unique way.\r\n\r\nGoing back to my car example (that is... package management should be like driving a car, the experience is similar enough across manufactures that you can just drive a car no matter the make or model ... the same should be true for package management). This is like changing out the pedals and steering wheel for a different UI.\r\n\r\nIf we used versions and package managers similar to other languages these problems can be handled.\r\n\r\nIs Go going to go down a deviating direction from the rest of the languages on this?",
	"user": {
		"login": "mattfarina",
		"id": 62991,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-27T16:56:48Z",
	"updated_at": "2016-07-27T16:56:48Z"
}
