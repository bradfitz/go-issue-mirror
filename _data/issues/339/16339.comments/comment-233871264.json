{
	"id": 233871264,
	"body": "After re-reading the comments, the emphasis on refactoring did distract me. Easier refactoring is one of the possibilities the proposal enables, but not the only one. I think the emphasis on refactoring in this case is motivated by a Google specific need. I haven't seen any other compelling stories put forward yet. The proposal is not about enabling refactoring per se but about adding aliases.\r\n\r\n@griesemer describes how commonly used types tend to end at the bottom of a package hierarchy. I resonate with his description of the go/* packages in the standard library. This reflects the situations in which I'd like to have aliases to my disposal. I'm not concerned about publicly exposing types, functions and constants from `internal` packages. And improving readability of dot imports is good.\r\n\r\nI'm concerned however about the syntax. It is important to have the same syntax for all kinds of aliases. Constants use at this moment `=`, expanding this to `type T = pkg.AnotherT` and `func sin = math.Sin` makes it consistent and predictable.\r\n\r\nIt seems we all agree that tools tools like `go lint` and `go vet` should be augmented to discourage bad uses of aliases.\r\n\r\nAliases have their place, as goto's and it should be advertised as such.",
	"user": {
		"login": "dwlnetnl",
		"id": 56475,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 2,
		"+1": 2
	},
	"created_at": "2016-07-20T07:50:19Z",
	"updated_at": "2016-07-20T07:53:15Z"
}
