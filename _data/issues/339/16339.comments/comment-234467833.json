{
	"id": 234467833,
	"body": "**tl;dr** Put aliases to the side, ship a `go migrate` tool use them to update source, have `go build` tell the user when they need to migrate. If some team has no other choice, they can migrate a copy of source during each build.\r\n\r\nI see the need for help when APIs change. I wonder if it can be done in tools, and I would love any mechanism to encourage users to move as quickly as feasible from the transitional aliases. \r\n\r\nThe best alternative I can think of is 1) a tool, `go migrate` or something, to mechanically apply renames to Go source, including adding or changing package imports as necessary, 2) a standard way to list migrations in your package directories, 3) support in go build for telling users when applying a migration might fix a compile error.\r\n\r\nConcretely, you might have a file with alias decls like those defined here called, say, `gomigrations` (we have `Godeps`). Because adding to a tool has a lower bar than adding to the language, it may be reasonable to extend `go migrate` to support other types of breaking-but-automatically-migrateable change, like renaming struct fields or methods or any safe+mechanical rewrite. \r\n\r\ngo build's role would consist of noticing when an undefined symbol appears in a package's `gomigrations`, and prompting the user \"run go migrate [package_being_migrated] [package_with_migrations]\".\r\n\r\nAs a dev on the outside, this is what I'd want. I can change my open source library and give people a path to fixing their dependent packages without the feeling I'll support two APIs for an indefinite amount of time. The go/* tools and so on don't pick up any additional trickiness. \r\n\r\nIf, within some Google teams, migrations can't happen promptly even when they are automatic and safe, they can put \"migrate a copy of our source\" into their build process. There'd be some annoyances, like that compile errors and tools would refer to new names, but they could keep working. And when they were ready to migrate, tools would be there to help.",
	"user": {
		"login": "twotwotwo",
		"id": 328644,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 4,
		"+1": 4
	},
	"created_at": "2016-07-22T06:49:57Z",
	"updated_at": "2016-07-22T07:17:03Z"
}
