{
	"id": 232521873,
	"body": "After thinking a bit about this I think I'm not getting the full picture so maybe you can help me out a bit.\r\n\r\nFrom my understanding, this issue comes in from the fact that variables and types can't be easily changed from L to L1, correct?\r\n\r\nI've seen a proposal to relax the rules about the interfaces, which would help a bit.\r\n\r\nAfter moving all from L to L1 I would solve these issues like this:\r\n- introduce functions instead of variables in L so that instead of calling `L.var` you call `L.Var()` and `L.var = 1` becomes `L.SetVar(1)`\r\n- types can be aliased as well since you can have ` type MyStruct struct{} ` as type ` type MyStruct L.MyStruct ` which can be converted later on in L if passed as arguments then forwarded to L1\r\n\r\nIf I understand this correctly and the assumptions above hold, I see no reason why writing a simple tool called ` go tool alias L1 L ` that would basically write a \"shell\" of the input package and turn it into the above rules.\r\n\r\nFrom my basic understanding of this, all the problems come from the rather unique mono-repo approach Google has (and I don't know how versioning works). I'd be interested to know if versioning of packages would be a suitable solution for the problem (migration at different speeds). Could it be that Google is the only one facing this problem and in this case, rather than change the language other means to solve the problem can be explored?\r\n\r\nFinally, from a readability point of view, which is the first thing any Gopher would say about the features of Go, this looks to be in direct conflict since it would mean that I'm looking at a type which is not what I think it is. It also leaves a lot more room for abusing than the above solution since the above solution would force people into thinking how their package API looks like versus having such a convenience. And like someone else already said, some of these aliases might need to be maintained for a long time, which brings us again to the question about: isn't this better solved with versioning rather than aliasing?\r\n\r\nSadly I don't have the experience of large scale refactoring as mentioned but I'd be curious if I'm missing something from this?\r\n\r\nThank you for your patience.",
	"user": {
		"login": "dlsniper",
		"id": 607868,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	},
	"created_at": "2016-07-14T00:05:39Z",
	"updated_at": "2016-07-14T00:05:39Z"
}
