{
	"id": 236383995,
	"body": "@jfrazelle @davecheney I just want to quickly object to the implication that at least I am making up the context-move as a nail to use this hammer on. This exact problem made me unhappy a couple of months ago (when the move was initially done) when I realized that there is no good solution for a package I was writing that would use context. For me, at least, that specific problem came first.\r\n\r\n@tombergan Package-level aliases as you suggest would break the builds of dependencies, as a go get of any package which transitively uses a moved package would fail without the correct environment variable. The great thing about the aliases is, that I can use them without any dependency breaking, enabling gradual, non-obstrusive refactorings.\r\n\r\n@dlsniper This is moving in circles. I've already addressed most of your points and questions.\r\n\r\n\u003e I'm not sure we are thinking about the same API changes as I'm thinking. If I suddenly want to add a method to an interface that's aliased or change its signature everything else will break, alias or not.\r\n\r\nDepending on the specific use case you want to address, you can either embed the old interface in a new one which you then use (if it's about adding useful methods to the required interface of your API for new functionality), or embed the interface into a struct and add methods to that (if it's about adding useful methods to the provided interface of your API). Both won't break anything and can be part of a larger strategy to create a gradual API transition.\r\n\r\n\u003e If you are suggesting that we allow method definitions on aliases\r\n\r\nI am not. I don't think anyone is. That would, as I understand the proposal currently, break the rule that you can't add methods to another packages type, which is a *very important* rule.\r\n\r\n\u003e The open source community, including and not limited to users, package creators and tools developers for Go think this is a bad idea\r\n\r\nYou are not in a position to speak for the open source community. You certainly don't speak for me.\r\n(Note: I am expressing a deeply held belief, rooted in technical arguments, for why the community at large and the open source community in particular would benefit from this, I am not trying to make any judgement of what the community at large wants)",
	"user": {
		"login": "Merovius",
		"id": 720787,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-30T19:09:27Z",
	"updated_at": "2016-07-30T19:09:27Z"
}
