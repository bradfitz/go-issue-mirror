{
	"id": 236384582,
	"body": "@bcmills\r\n\u003e ... examples ...\r\n\r\nThanks! I figured I missed a few comments in this massive thread :-)\r\n\r\nI think the `x/net/context` move and your protobuf refactoring example are fundamentally different. This first is more serious: \"oh no, how can we possibly upgrade all of these packages to go 1.7?!\" The second is more a matter of taste: it would nice to refactor that API into something cleaner, but we'll survive if we don't.\r\n\r\nThe `import public` protobuf feature is more of a real problem. At the same time, as useful as protobufs are, protobuf isn't the greatest example of language design (it's on version 3 already!), and it would make me sad if Go used an obscure feature in protobufs as major motivation for a Go language change -- a nice bonus, sure, but not a major motivation.\r\n\r\nTo be clear: I'm neither +1 nor -1 on @griesemer's proposal. I'm seeing lots of objection to @griesemer's proposal and trying to come up with a compromise. I still think changing the build system rather than the language is promising. It seems simpler and less necessarily permanent than a language change. It doesn't solve as many refactoring problems, as you point out, but it does solve the most major problem (x/net/context moving) and an additional problem ([\"disappearing packages\"](http://www.theregister.co.uk/2016/03/23/npm_left_pad_chaos/)) which @griesemer's proposal doesn't address.",
	"user": {
		"login": "tombergan",
		"id": 13954200,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-30T19:17:55Z",
	"updated_at": "2016-07-30T19:17:55Z"
}
