{
	"id": 235988347,
	"body": "The meaning of tokens (« export » or others) should be context free. That eases many things, not only for Go core developers but also users.\n\nRaphael\n\n\n\u003e Le 28 juil. 2016 à 20:37, Jonathan Amsterdam \u003cnotifications@github.com\u003e a écrit :\n\u003e \n\u003e I am +1 for @cznic \u003chttps://github.com/cznic\u003e's \"export\" idea \u003chttps://github.com/golang/go/issues/16339#issuecomment-235166183\u003e. It constrains the aliased names to be identical, which satisfies the main use cases of refactoring and building multi-package components while limiting the chance for confusion. (It would prevent giving short names to long type expressions, but that was never more than a nice side-effect.) I'd also add Rob's one-name-per-package rule.\n\u003e \n\u003e I don't understand why \"export\" (or whatever word we choose) needs to be a keyword. Couldn't it only have this special meaning at top level?\n\u003e \n\u003e —\n\u003e You are receiving this because you commented.\n\u003e Reply to this email directly, view it on GitHub \u003chttps://github.com/golang/go/issues/16339#issuecomment-235985564\u003e, or mute the thread \u003chttps://github.com/notifications/unsubscribe-auth/AC4Keupc3FWdD61-XJ7HDWH3e0pstmyDks5qaPcBgaJpZM4JK0gz\u003e.\n\u003e \n\n",
	"user": {
		"login": "rgeronimi",
		"id": 3017338,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-28T18:46:48Z",
	"updated_at": "2016-07-28T18:46:48Z"
}
