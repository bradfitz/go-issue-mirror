{
	"id": 235121465,
	"body": "Overall I'm -1 on this proposal due to the added cognitive overhead it\ncreates when in use. One of the things *I* like about go is that when\nsomething is used it's easy to find out where it was declared.\n\nI suspect, if accepted, this proposal will almost never be used (outside of\ngoogle anyway) for the intended purpose, but instead be used for two\nprimary purposes: (1) shortening what a developer needs to type (ex. func\nSprintf =\u003e fmt.Sprintf) and (2) aliasing types in other packages so that\nthey appear to be local in an effort to attach methods to them, which would\nthen fail to compile (ex.type DB =\u003e sqlx.DB ).\n\nI see people coming from other languages wanting to do these things pretty\noften.\n\nOn Mon, Jul 25, 2016 at 4:25 PM Matt Juran \u003cnotifications@github.com\u003e wrote:\n\n\u003e \u003e Finally, I think the proposal should explicitly forbid declaring a method\n\u003e with an alias for a receiver. It's one more way to prevent abuse. If we do\n\u003e the \"no two names\" or \"only qualified identifier\" rule, it happens\n\u003e automatically, but I think being explicit clarifies that abuse is limited.\n\u003e\n\u003e This is something I would likely try as a new Go programmer. An alias is a\n\u003e statement of \"this thing or type is defined in this other package, which\n\u003e may not actually match what I'm saying it says here\". Now that I've defined\n\u003e some expected behavior, why not write some methods on memory data with this\n\u003e behavior? But that other package owns the memory behavior on its types and\n\u003e variables (memory data), which the alias is asserting ownership over.\n\u003e\n\u003e Compile-time assertions?\n\u003e assert.HasBehavior(alias.the_volatile_package.ImportantType,\n\u003e myVolatilePackageImportantTypeBehaviorVerifier), run these at compile, but\n\u003e then remove in final code listing. That way there is a flag for unexpected\n\u003e changed behavior. Effectively an independent package testing approach.\n\u003e\n\u003e I'm not sure if my description matches the need, the alias described in\n\u003e this mailing thread, or the proposal, which I will read before adding more,\n\u003e as I'm now wondering if this could be done with Go interfaces.\n\u003e\n\u003e\n\u003e\n\u003e On Sun, Jul 24, 2016 at 4:04 PM, Robin Eklind \u003cnotifications@github.com\u003e\n\u003e wrote:\n\u003e\n\u003e \u003e PS note that if referring to this link\n\u003e \u003e https://go-review.googlesource.com/#/c/24867/ I couldn't find a link to\n\u003e \u003e\n\u003e https://github.com/golang/proposal/blob/master/design/16339-alias-decls.md\n\u003e \u003e or maybe I am not used to the go-review interface.\n\u003e \u003e\n\u003e \u003e A closer look reveals that the project is proposal (i.e. the proposal\n\u003e \u003e \u003chttps://github.com/golang/proposal\u003e sub-repo) and the path of the added\n\u003e \u003e file is design/16339-alias-decls.md, thus\n\u003e \u003e\n\u003e https://github.com/golang/proposal/blob/master/design/16339-alias-decls.md\n\u003e \u003e\n\u003e \u003e —\n\u003e \u003e You are receiving this because you were mentioned.\n\u003e \u003e Reply to this email directly, view it on GitHub\n\u003e \u003e \u003chttps://github.com/golang/go/issues/16339#issuecomment-234808619\u003e, or\n\u003e mute\n\u003e \u003e the thread\n\u003e \u003e \u003c\n\u003e https://github.com/notifications/unsubscribe-auth/AHlLSxCr3h9-nj6AOZ4UECFWG6i9dI-fks5qY--GgaJpZM4JK0gz\n\u003e \u003e\n\u003e \u003e .\n\u003e \u003e\n\u003e\n\u003e —\n\u003e You are receiving this because you are subscribed to this thread.\n\u003e Reply to this email directly, view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/16339#issuecomment-235116967\u003e, or mute\n\u003e the thread\n\u003e \u003chttps://github.com/notifications/unsubscribe-auth/AAAAZyVmYF9JqisBOF4ZgYf1mpla0eGJks5qZUXXgaJpZM4JK0gz\u003e\n\u003e .\n\u003e\n",
	"user": {
		"login": "freeformz",
		"id": 103,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 5,
		"+1": 5
	},
	"created_at": "2016-07-25T23:51:40Z",
	"updated_at": "2016-07-25T23:51:40Z"
}
