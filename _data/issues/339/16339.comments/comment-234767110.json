{
	"id": 234767110,
	"body": "So far on my time with Go defining package boundaries has taken significant effort and time to go from arbitrary to not with plenty more effort ahead.\n\nWithout wide won consensus on Go dependency design I don't see maximized value in changing the specification soon, beyond \"hack shops\" gluing concrete programs together with Go being more efficient in the next year. I think there is a balance between industry and academia to strike here, which is Go's draw for me: decent in both.\n\nI may be misunderstanding the use case, but \"let it bake longer\" seems like the choice I'd wish other languages had made.\n\n\u003e On Jul 23, 2016, at 5:47 PM, atdiar \u003cnotifications@github.com\u003e wrote:\n\u003e \n\u003e I am a bit confused after rereading the proposal. It seems to me that the proposal tries to have all the clients of the refactored package to get updated by way of aliasing.\n\u003e \n\u003e But is it even possible wrt. type equality ?\n\u003e \n\u003e So far, I assumed that if C imports L and L is split in multiple packages, the mechanism would involve using those multiple packages to recreate L's API surface in a special package R.\n\u003e \n\u003e So only L would change, being declared as aliased by R and the clients would see no change.\n\u003e \n\u003e A bit like interfaces and how they compose.\n\u003e \n\u003e Forbid a package to have two names for the same variable, function, method or type, at any scope.\n\u003e Unless mistaken, I would be tempted to say that it would then also require for aliases to be unexportable. Not sure what it entails in terms of usability.\n\u003e \n\u003e First, the types-only version of this (type A = pkg.B) bothers me because it is too specific and leaves variables in the cold.\n\u003e \n\u003e Agreed.\n\u003e \n\u003e â€”\n\u003e You are receiving this because you were mentioned.\n\u003e Reply to this email directly, view it on GitHub, or mute the thread.\n\u003e \n",
	"user": {
		"login": "pciet",
		"id": 7949131,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 2,
		"+1": 2
	},
	"created_at": "2016-07-24T09:27:44Z",
	"updated_at": "2016-07-24T09:27:44Z"
}
