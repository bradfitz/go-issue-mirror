{
	"id": 51279587,
	"number": 2701,
	"state": "closed",
	"title": "goyacc-generated parsers crash during error recovery when yyDebug \u003e= 2",
	"body": "by **jaq@spacepants.org**:\n\n\u003cpre\u003eIn the following block of code from \u003ca href=\"http://golang.org/src/cmd/goyacc/goyacc.go\"\u003ehttp://golang.org/src/cmd/goyacc/goyacc.go\u003c/a\u003e\n\nDuring error recovery, line 3251 continues unwinding the state stack until $$p (yyp in\nthe generated code) is less than zero.\n\nHowever 3263 prints out the elements on the $$S stack at $$p and $$p-1, which at the top\nof the stack eval to 0 and -1.  This causes an out of bounds error on the second item\nand crashes the program.\n\nThe crash only occurs when yyDebug is set to 2 or greater, otherwise the parser behaves\ncorrectly.\n\nOne fix would be to guard the fmt.Printf with another test that $$p \u0026gt; 0.\n\n\n 3250\t\t\t\t/* find a state where \u0026quot;error\u0026quot; is a legal shift action */\n  3251\t\t\t\tfor $$p \u0026gt;= 0 {\n  3252\t\t\t\t\t$$n = $$Pact[$$S[$$p].yys] + $$ErrCode\n  3253\t\t\t\t\tif $$n \u0026gt;= 0 \u0026amp;\u0026amp; $$n \u0026lt; $$Last {\n  3254\t\t\t\t\t\t$$state = $$Act[$$n] /* simulate a shift of \u0026quot;error\u0026quot; */\n  3255\t\t\t\t\t\tif $$Chk[$$state] == $$ErrCode {\n  3256\t\t\t\t\t\t\tgoto $$stack\n  3257\t\t\t\t\t\t}\n  3258\t\t\t\t\t}\n  3259\t\n  3260\t\t\t\t\t/* the current p has no shift onn \u0026quot;error\u0026quot;, pop stack */\n  3261\t\t\t\t\tif $$Debug \u0026gt;= 2 {\n  3262\t\t\t\t\t\tfmt.Printf(\u0026quot;error recovery pops state %d, uncovers %d\\n\u0026quot;,\n  3263\t\t\t\t\t\t\t$$S[$$p].yys, $$S[$$p-1].yys)\n  3264\t\t\t\t\t}\n  3265\t\t\t\t\t$$p--\n  3266\t\t\t\t}\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:14:23Z",
	"created_at": "2012-01-14T02:42:01Z",
	"updated_at": "2016-06-24T21:23:29Z"
}
