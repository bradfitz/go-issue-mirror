{
	"id": 66074723,
	"body": "\u003ca id=\"c12\"\u003e\u003c/a\u003eComment 12:\n\n\u003cpre\u003eIt was a bug in the test:\n\n\t\tfor {\n65\t+\t\t\t\tselect {\n66\t+\t\t\t\tcase \u0026lt;-c:\n67\t+\t\t\t\t\tcack \u0026lt;- true\n68\t+\t\t\t\t\tbreak\n69\t+\t\t\t\tdefault:\n70\t+\t\t\t\t\truntime.Gosched()\n71\t+\t\t\t\t}\n72\t+\t\t\t}\n\nThe break stement exits from switch but does not exit from the loop.\n\nIn the stack trace:\n\u003ca href=\"https://groups.google.com/forum/?fromgroups=#\"\u003ehttps://groups.google.com/forum/?fromgroups=#\u003c/a\u003e!topic/golang-dev/e3dyUvgJFh8\nyou can see 6 runnable goroutines at src/pkg/runtime/proc_test.go:70\nand the test is currently running is src/pkg/runtime/syscall_windows_test.go:198 \nit means that the test had passed for both locked and non locked for all of -cpu=1,2,4\nit was just slowing down the process from the beginning.\n\nI will send the CL with the fixed test.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-02-17T07:02:25Z",
	"updated_at": "2014-12-22T06:22:07Z"
}
