{
	"id": 66071361,
	"body": "\u003ca id=\"c7\"\u003e\u003c/a\u003eComment 7:\n\n\u003cpre\u003eAh, that particular image has a 2x2 sampling factor, which is common for color JPEG\nimages (e.g. 2x2,1x1,1x1 corresponds to YCbCr 4:2:0), but is a weird thing to do for\ngrayscale JPEG images. Still, I guess it's valid, and Go shouldn't choke on it.\n\nRe comment #1, you're right that it's a bug if the Go JPEG decoder ever panics on\ncorrupt input, but FWIW, I'm glad it panicked when it did. If this code wasn't in a\nbounds-checked language (like C) then the decoder would happily have overwritten an\nunsafe memory region and we would never have noticed the bug as easily. Sorry for the\nlate response, though.\n\nRe comment #6, the code change for progressive images changed the symptoms from error to\npanic, but the underlying bug existed beforehand in go1.0.3, as the OP noted.\n\nI've mailed out a fix at \u003ca href=\"https://golang.org/cl/7069045\"\u003ehttps://golang.org/cl/7069045\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "nigeltao",
		"id": 8565232,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-01-07T04:56:12Z",
	"updated_at": "2014-12-08T10:22:40Z"
}
