{
	"id": 66055723,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eThe exception you're seeing has occurred inside mingw diff.exe process, not go 8.out.exe\nprocess. Diff.exe exception handler handles exception in its own particular way. That's\nwhy you don't see go normal stack trace.\n\nI've found that most mingw programs (sh.exe, ls.exe and others) crash if invoked via our\ncurrent syscall.StartProcess. Perhaps it is our fault when we setup command line and\nenvironment. Perhaps it is mingw fault. I didn't work it out yet.\n\nI haven't seen this problem with any other (non-mingw) program yet.\n\nIf I need to execute any mingw program at this moment, I use a trick of invoking\nstandard Windows command interpreter cmd.exe and pass correspondent parameters, starting\nwith mingw .exe program name. For example:\n\nexec.Run(diffcmd, []string{\"diff\", \"-u\", \"...\"} ...\n\non Windows should be\n\nexec.Run(diffcmd, []string{\"cmd\", \"diff\", \"-u\", \"...\"} ...\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-04-19T23:41:07Z",
	"updated_at": "2014-12-08T10:09:35Z"
}
