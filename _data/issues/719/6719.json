{
	"id": 51285618,
	"number": 6719,
	"state": "closed",
	"title": "runtime: randomize iteration order of small maps",
	"body": "\u003cpre\u003eThe Go spec says that when using range over a map, the iteration order is not specified.\n With our current implementation, the iteration order is always consistent for maps with\n8 or fewer elements.  This is not wrong, but it means that when people write tests that\nuse small maps, they sometimes do not notice that they are depending on a consistent\niteration order.  That dependency fails when they run the tests with gccgo, which uses a\ndifferent map implementation.\n\nMy suggestion is that we change the map code so that when iterating over a bucket it\nrandomly goes either up or down.  That will cause a different iteration order even for\nsmall maps, and thus make tests more reliable, with no real expense in runtime.\u003c/pre\u003e",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "dsymonds",
		"id": 31506,
		"type": "User",
		"site_admin": false
	},
	"comments": 15,
	"closed_at": "2014-12-08T10:37:18Z",
	"created_at": "2013-11-05T21:43:51Z",
	"updated_at": "2016-06-25T01:21:53Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
