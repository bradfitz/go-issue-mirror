{
	"id": 231448348,
	"body": "yes, the lack of reproducibility is unfortunate. i haven't been able to capture the hang under `dtruss` yet.\r\n\r\ni was able to get the same behavior with this reduced/standalone program:\r\n\r\n\r\n```\r\npackage main\r\n\r\n/*\r\n#include \u003cpthread.h\u003e\r\n\r\nvoid **nullptr;\r\n\r\nvoid *crash(void *p) {\r\n\t*nullptr = p;\r\n\treturn 0;\r\n}\r\n\r\nint start_crashing_thread(void) {\r\n\tpthread_t tid;\r\n\treturn pthread_create(\u0026tid, 0, crash, 0);\r\n}\r\n*/\r\nimport \"C\"\r\n\r\nfunc main() {\r\n\tif C.start_crashing_thread() == 0 {\r\n\t\tfor i := 0; i \u003c 2e9; i++ {\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nbacktraces: [backtraces.txt](https://github.com/golang/go/files/354935/backtraces.txt)\r\nterminal output: [terminal.txt](https://github.com/golang/go/files/354937/terminal.txt)\r\n\r\ni ran the program in a bash `while true` loop and it usual hangs within ~1min.\r\n\r\nit seems to be the same issue, but i may be reading things incorrectly.\r\n\r\ni'll keep trying to see if i can get it to hang under `dtruss -f`",
	"user": {
		"login": "jaredborner",
		"id": 1760991,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-08T19:15:00Z",
	"updated_at": "2016-07-08T19:15:00Z"
}
