{
	"id": 51288046,
	"number": 8337,
	"state": "closed",
	"title": "cmd/go: test files are not built if there are no Test* functions",
	"body": "\u003cpre\u003eWhat does 'go version' print?\n\ngo version go1.3 darwin/amd64\n\nWhat steps reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\n1. In an empty package create the following a_test.go file:\n\n{{{\npackage a\n\nfunc A() {\n  badcode\n}\n}}}\n\n2. Run `go test .`\n\nWhat happened?\n\nok  \ta\t0.007s\n\nWhat should have happened instead?\n\n# a\n./a_test.go:4: undefined: badcode\nFAIL\ta [build failed]\n\nPlease provide any additional information below.\n\nThis is a regression in go1.3. go1.2 would have compiled the test file and shown the\ncompilation error. Perhaps this isn't a bug, but it causes other issues with compilation\nof dependencies when using `go test ./...`. I can submit the other issues as a separate\nbug if this is working as intended.\u003c/pre\u003e",
	"user": {
		"login": "wadey",
		"id": 18437,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:46:18Z",
	"created_at": "2014-07-07T22:40:21Z",
	"updated_at": "2016-06-25T01:37:42Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
