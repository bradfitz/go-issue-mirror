{
	"id": 66080374,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eThings are actually much worse: there is actually a miscompilation happening in the case\nof a single nesting level of closures.\nSee for example:\n\npackage main\n\nvar Test = func() {\n\tvar _, x = Panic()\n\t_ = x\n}\n\nfunc Panic() (int, int) {\n\tpanic(\"omg\")\n\treturn 1, 2\n}\n\nfunc main() {}\n\n$ go run test.gopanic: omg\n\ngoroutine 1 [running]:\nmain.Panic()\n\t/tmp/test.go:9 +0x47\nmain.init()\n\t/tmp/test.go:4 +0x43\n\ngoroutine 2 [runnable]:\ncreated by runtime.main\n\t/opt/remy/go-103/src/pkg/runtime/proc.c:221\nexit status 2\n\nThis is happening with both go 1.0.3 and go 1.1\u003c/pre\u003e",
	"user": {
		"login": "remyoudompheng",
		"id": 175246,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-02T18:43:23Z",
	"updated_at": "2014-12-08T10:30:33Z"
}
