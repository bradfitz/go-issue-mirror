{
	"id": 176072886,
	"number": 17043,
	"state": "closed",
	"title": "Proposal: Atomic maps",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### What version of Go are you using (`go version`)?\r\n1.6.2, 1.7.0\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nsome i386, some amd64. ubuntu 16.04, centos 7, fedora 24.\r\n\r\n### What did you do?\r\nWriting an embedded key-value storage.\r\n\r\n### What did you expect to see?\r\nBuilt-in thread-safe maps or `sync/atomic` methods for concurrent maps access without blocking whole map.\r\n\r\n### What did you see instead?\r\nNo thread-safe maps and no `sync/atomic` methods for concurrent maps access.\r\n\r\nSome kind of dup #1682.\r\nAlso, I know about [this note](http://golang.org/doc/go_faq.html#atomic_maps). If it impossible to built in thread-safe maps without performance issues, then we can built-in some methods in `sync/atomic`.\r\n",
	"user": {
		"login": "kirillDanshin",
		"id": 9026581,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2016-09-09T18:17:17Z",
	"created_at": "2016-09-09T18:11:27Z",
	"updated_at": "2016-09-09T18:57:45Z"
}
