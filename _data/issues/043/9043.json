{
	"id": 51289021,
	"number": 9043,
	"state": "closed",
	"title": "cmd/gc: escape analysis considers pointer assignments within objects as leaking.",
	"body": "\u003cpre\u003eThe following go file:\n\npackage foo\n\ntype y struct {\n\tb *byte\n}\n\nfunc foo(z *y) {\n\tz.b = z.b\n}\n\nGives the following -m output\n\n/home/daniel/src/test/foo.go:7: can inline foo\n/home/daniel/src/test/foo.go:7: leaking param: z\n\nThe place where this is hitting the hardest is the bytes.Buffer type. Because of\nassignments within the object, if you create one on the stack, it will escape to the\nheap if you call any method on it\u003c/pre\u003e",
	"user": {
		"login": "DanielMorsing",
		"id": 545573,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2015-05-11T17:52:37Z",
	"created_at": "2014-11-02T14:03:14Z",
	"updated_at": "2016-06-25T01:44:00Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
