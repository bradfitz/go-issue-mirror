{
	"id": 51279758,
	"number": 2828,
	"state": "closed",
	"title": "cmd/gc: crashes if field and value method have same name",
	"body": "\u003cpre\u003eThe spec implies that it is OK for a named struct type to have a field and method with\nthe same name, as long as the name is not used.  That is, there is nothing in the spec\nwhich rejects this case.  6g does accept it for a pointer method.  However, for a value\nmethod, 6g crashes.\n\npackage p\n\ntype S1 struct {\n\tF int\n}\n\nfunc (s S1) F() int {\n\treturn 0\n}\n\nfoo.go:1: ambiguous selector *S1.F\nfoo.go:1: F is both field and method\nfoo.go:1: cannot call non-function .this.F (type int)\nfoo.go:1: tempname called with nil type\nfoo.go:1: internal compiler error: getinarg: not a func int\n\nWe may want to change the spec to reject this case.  Either way, the compiler should not\ncrash.\u003c/pre\u003e",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:14:58Z",
	"created_at": "2012-02-01T22:02:29Z",
	"updated_at": "2016-06-24T21:25:01Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
