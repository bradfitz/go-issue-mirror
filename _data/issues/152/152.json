{
	"id": 51276113,
	"number": 152,
	"state": "closed",
	"title": "Ambiguity in grammar spec for operand",
	"body": "by **autophile**:\n\n\u003cpre\u003eOperand is defined, among other alternatives, to be either a qualifiedIdent or a\nmethodExpr.\n\nA qualifiedIdent could be ID . ID (via packageName . identifier)\nA methodExpr could also be ID . ID (via typeName . methodName)\n\nThis ambiguity cannot be resolved at the syntactic level.  If resolved in favor of\nmethodExpr, then \noperand would never be able to accept a qualifiedIdent. If resolved in favor of\nqualifiedIdent, \nthen an unqualified methodExpr would never be accepted.\n\nNote that while the second ID in a qualifiedIdent is restricted by the spec to exported\nidentifiers \n(i.e. the identifier must begin with an uppercase letter), there is no such restriction\nfor method \nnames (i.e. the identifier may or may not begin with an uppercase letter).\n\nIt seems that the compiler would need a semantic predicate, which would also require\nthat \nqualified identifiers never conflict with unqualified method expressions by either\nforbidding type \nnames to be the same as package names, or by forbidding method names to be the same as \nidentifiers exported from another package, or both.\n\nBecause of this ambiguity, and because the semantics are not defined in the grammar, I\ncannot \ntell what a compliant compiler should do. Can the conflict resolution algorithm be given\nin the \ngrammar spec?\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:03:27Z",
	"created_at": "2009-11-13T20:45:15Z",
	"updated_at": "2016-06-24T19:01:14Z"
}
