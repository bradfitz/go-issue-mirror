{
	"id": 121280386,
	"body": "Yeah, I figured it out. The build script itself does nothing fancy apart from building the parameter lists above and then running \"go\" with them. However, when I `go run build.go`, the first instance of go adds `CGO_ENABLED`, `GOGCCFLAGS` and a few other variables to the environment. These are then inherited when the build script execs \"go install ...\". I can filter them out, by inspecting the environment set by `go run` and removing the stuff I don't want.\r\n\r\nSomething here seems to have changed, but it may as well just be the fact that packages are built on the fly for cross compilation rather than as it was before.",
	"user": {
		"login": "calmh",
		"id": 125426,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-14T15:20:55Z",
	"updated_at": "2015-07-14T15:50:46Z"
}
