{
	"id": 108655505,
	"body": "Here's a more \"realistic\" example in the sense that the code would actually run (rather than lead to endless recursion and thus stack overflow):\r\n\r\n```\r\npackage p\r\n\r\nvar (\r\n    m = x.m()\r\n    x = makeT(10)\r\n)\r\n\r\ntype T struct{}\r\n\r\nfunc (T) m() int {\r\n    return 0\r\n}\r\n\r\nfunc makeT(n int) T {\r\n    if n \u003e 0 {\r\n        return makeT(n-1)\r\n    }\r\n    return T{}\r\n}\r\n```\r\n\r\ngo/types also reports the wrong initialization order in this case.\r\n\r\nThe issue is that initialization cycles through functions only are silently ignored and then lead to a wrong initialization order (initorder.go:52). Instead, cycles involving only functions should probably be removed beforehand.\r\n",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-04T00:20:38Z",
	"updated_at": "2015-06-04T00:20:38Z"
}
