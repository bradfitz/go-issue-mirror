{
	"id": 167685354,
	"body": "@kardianos another problem that would be useful to address would be to move the vendor-spec outside the `vendor/` directory. That way the `vendor/` directory can be put in an ignore file (e.g., `.gitignore`) for those not going to store dependencies in their VCS.\r\n\r\n@freeformz it sounds like you'd like to take the concept of Godep and move it into the Go toolchain. While Godep has been around for awhile and been able to fill in a number of use cases, there are numerous use cases people have been asking for that cannot be easily implemented in its flow. I would prefer to see something that enables those as well.\r\n\r\nTo map dependencies well is a problem in this setup. For example, a lock file should really only be at the top level and not throughout the tree. Dependencies shouldn't be in multiple `vendor/` directories in the tree unless you really know what you're doing. Otherwise you can end up with binary bloat and [errors](http://github.com/mattfarina/golang-broken-vendor). So, knowing the version compatibility and mapping that in a tree is missing.\r\n\r\nIf a vendor-spec this is present throughout a tree there can be cases with many instances of a common dependency at different versions all mapped by commit id. This doesn't allow automated tooling to work out the best version to use or map a tree. This can be a problem in practice. For example, if you look at kubernetes the same dependency can be referenced many times in packages and sub-packages all to different commit ids. Resolving versions becomes difficult.\r\n\r\nIn tool chains for other languages a lock file isn't used to figure out or map the tree. Instead this is a config file knowing more (e.g., a semantic version range).",
	"user": {
		"login": "mattfarina",
		"id": 62991,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-29T00:42:55Z",
	"updated_at": "2015-12-29T00:42:55Z"
}
