{
	"id": 168885481,
	"body": "\u003e Version ranges are not required \r\n\u003e via vcs then I have everything I need to determine compatibility\r\n\r\n(pulling from the article I'm working on...)\r\n\r\nYou're right - they are not. Which is why I never said they were \"required,\" or \"needed.\" Necessity is not at issue; the question is whether or not they have *supplemental* information that makes it *easier* to determine compatibility.\r\n\r\n\u003e I do think people need to version their packages / repositories though as it will help a developer make a decision when that tool says that versions (or revisions if version information is missing) 1, 2 and 3 are compatible\r\n\r\n...well, this weirds me out, because this is pretty close to what I'm arguing for. Not sure where the communication is going wrong, so let me try to be more concrete. Say you have this dependency graph:\r\n![diamond-fail](https://cloud.githubusercontent.com/assets/21599/12106881/02d68d0e-b332-11e5-9f91-56405d636203.png)\r\n\r\n`main` is your package, `A`, `B`, and `C` are dependencies written by other people that you've pulled in.  Because `A` and `B` are pointing at different versions of `C`, compatibility now needs to be worked out. If the authors of `A` and `B` haven't specified version ranges, then all the *information you have* is that they want different versions of `C`, and you have to go in and figure out a compromise. Once you've found an appropriate compromise - let's say `C-1.0.4` - you have to test the integration of it all together for your particular `main` package.\r\n\r\nIf, however, `A` and `B` do provide version ranges for their dependency on C - because the authors of those packages are good stewards, and have figured out which versions of C they actually can work with - then that's an automated step a tool can take and either present the result to us, or just accept it:\r\n\r\n![diamond-auto](https://cloud.githubusercontent.com/assets/21599/12107109/8a2ed778-b334-11e5-9f9f-a0953c93c860.png)\r\n\r\n\r\n...at which point, we test. Same as if we figured out the compatibility on our own. The difference is, in making this decision, we get to benefit from the knowledge the authors of `A` and `B` have about their own packages' requirements (expressed in the form of those version ranges), which is almost certainly more than we know about it.",
	"user": {
		"login": "sdboyer",
		"id": 21599,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-05T03:44:59Z",
	"updated_at": "2016-01-05T03:47:09Z"
}
