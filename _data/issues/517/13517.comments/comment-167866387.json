{
	"id": 167866387,
	"body": "@kardianos a few things and i'll break them into bullets for easier reference:\r\n\r\n1. Part of the reason we're having some of these discussions is a lack of clarity on what is being solved. What are the requirements or use cases? An specs need to be crafted to solve those requirements or use cases. I've listed the [use cases](http://github.com/mattfarina/pkg/tree/master/use_cases) I believe need to be solved which this format does not do. Can you please list your requirements or use cases so we can evaluate them and look at how a spec works against them?\r\n2. Using `vendor/*/` in an ignore file would cause user experience issues for numerous users. In the package management setups in languages Go users are coming from the lock files are not in the same directory packages are stored in. They are used to ignoring `vendor/` or something similar. This minor difference will be a cause of headaches.\r\n3. Using `go install ./...` for tools with `go:generate` doesn't work well. If two different applications within the `GOPATH` require two different versions of the same tool the singular `GOPATH/bin` isn't capable of handling that. This is a problem beyond the scope of the vendor-spec but relates here as well.\r\n4. Can you explain the technical environment and reason for package level versions instead of repo level versions? What requirements are they needed for, how do they fulfill them, and how to handle the dangers of multiple packages from the same repo with differing versions (since that breaks known testable stability within the imported repo). Looking for technical details to backup your opinion and understand where they are coming from.\r\n\r\n@kardianos @rsc Something occured to me while reviewing this material. As I work on Glide, watch requirements come in there, and discuss package management with those inside and outside the Go community I realized that this \"spec\" isn't born out of experience in the community. We're still learning what people need and are adapting. The `vendor-spec` has not taken off organically. In my opinion it's premature to put this or any other spec in the `go` toolchain.\r\n\r\nI would suggest waiting for the `GO15VENDOREXPERIMENT` to be on by default, collect the requirements needed by its users, and make sure any spec meets those.\r\n\r\n\r\n\r\n",
	"user": {
		"login": "mattfarina",
		"id": 62991,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-29T20:09:33Z",
	"updated_at": "2015-12-29T20:09:33Z"
}
