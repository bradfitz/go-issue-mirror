{
	"id": 168821821,
	"body": "I share a bunch of those use cases with you, but I do not want to support\nthe \"I want to use a version range\" use case. I've been there done that and\nit's a pita and usually ends up with very very narrow version specs and/or\nrelying on the lock file. Maybe I've just had a lot of bad experiences.\n\nMissing from that list are \"I'd like to vendor a related tool (some other\nrepos main package)\". I see this mostly with tools like migrate and the\nlike.\n\nI also need to know a little about the user's Go environment (mainly ATM)\nthe go version, so that I can build the code again using the same / similar\nversion of go (think go primary version, minor should not be relevant).\n\nBeyond that and generally speaking though my main use case is I want a tool\nto populate `vendor/` with the code I need to build / run my app. That tool\nshould help me maintain `vendor/` over time, but allowing me to diff / list\n/ update / remove / add to it. `vendor/` should *always* be checked in (for\nvarious reasons). `vendor/` should contain only the packages I need, not\nentire repos to keep sizes down. `vendor/` should optionally contain the\ntests of the dependencies I place there so that they can be run.\n\nMy main response to this thread was a \"+1\" for a common library for tools\nto share, not a specific tool implementation. I have mixed feelings /\ntechnical motivations for converging on a specific tool. I am\n\"+1\" though about converging on a shared library and a vendor spec.\n\nOn Tue, Dec 29, 2015 at 3:46 PM, Matt Farina \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e @freeformz \u003chttps://github.com/freeformz\u003e I would be curious to hear your\n\u003e take on the use cases\n\u003e \u003chttps://github.com/mattfarina/pkg/tree/mast%E2%80%A6\u003e I'd previously\n\u003e worked with others on.\n\u003e\n\u003e I also want to make it clear that I don't hold anything against Godep. I\n\u003e just know that it does not cover all the use cases developers have and want\n\u003e to see the go tool handler more of them than Godep covers today.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/13517#issuecomment-167901016\u003e.\n\u003e\n\n\n\n-- \nEdward Muller\n@freeformz\n",
	"user": {
		"login": "freeformz",
		"id": 103,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-04T21:52:24Z",
	"updated_at": "2016-01-04T21:52:24Z"
}
