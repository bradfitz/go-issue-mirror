{
	"id": 149714573,
	"body": "cc: @ianlancetaylor @rsc \r\n\r\nI would really like to work on this, however I know the code freeze is coming up. I feel like the addition of `DW_AT_decl_*` attributes should be relatively easy. The other issue of correctly representing scope seems more difficult, and I would like to discuss that as well.\r\n\r\nI can work on these issues to _try_ to get them in (at least `DW_AT_decl_*`) before the code freeze if at all possibly, especially if other folks familiar with this are busy. I've been familiarizing myself with more of the code that is generating the Dwarf information.\r\n\r\nGetting the `decl_*` attributes emitted is trivial, however having the correct values for them seems less so. While building up the DIE at https://github.com/golang/go/blob/master/src/cmd/link/internal/ld/dwarf.go#L1709 it seems we do not have access to the file/line information that represents where the symbol was declared. Even from what I've dug into with `a.Asym.Pcln.*` the information is not available. So, where would be the most appropriate place to encode this information, or where is it currently accessible at?\r\n\r\nRegarding the missing lexical scope information, since from what I know the Dwarf information is being generated based off the program table, is it possible with the current implementation to know about lexical scoping at the point the Dwarf information is being generated? It seems all the information Dwarf generation has access to is symbols (funcs, etc..), but has no way of knowing whether a symbol was defined within a particular lexical block (as demonstrated in the initial example in this issue report) and what the high/low PC values are for that block. So essentially my question is whether I'm incorrect about any of these assumptions, and if so how? The \"how\" will hopefully guide me to an implementation.\r\n\r\nAgain, I could be incorrect about my understanding / assumptions as I've only recently really dug into the Dwarf generation code in the linker. Mostly I would like to start a discussion about the above points and how to move forward with what little time is left before the code freeze.",
	"user": {
		"login": "derekparker",
		"id": 1314079,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-20T21:56:32Z",
	"updated_at": "2015-10-20T21:56:32Z"
}
