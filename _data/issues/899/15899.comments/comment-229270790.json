{
	"id": 229270790,
	"body": "I cannot explain the slowdown. But I can explain why windows race builder was hanging. The benchmark assumes that you can write as much data as you like to the network (without reading data on the other end of network connection), but that is not true. For example:\r\n```\r\n# cat main.go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"net\"\r\n)\r\n\r\nfunc main() {\r\n\tl, err := net.Listen(\"tcp4\", \"127.0.0.1:0\")\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\tdefer l.Close()\r\n\r\n\tgo func() {\r\n\t\tc, err := l.Accept()\r\n\t\tif err != nil {\r\n\t\t\tlog.Fatal(err)\r\n\t\t}\r\n\t\tdefer c.Close()\r\n\r\n\t\tselect {}\r\n\t}()\r\n\r\n\tc, err := net.Dial(l.Addr().Network(), l.Addr().String())\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\tdefer c.Close()\r\n\r\n\ttotal := 0\r\n\tbuf := make([]byte, 4096)\r\n\tfor {\r\n\t\tn, err := c.Write(buf[:])\r\n\t\tif err != nil {\r\n\t\t\tlog.Fatal(err)\r\n\t\t}\r\n\t\ttotal += n\r\n\t\tfmt.Println(total)\r\n\t}\r\n}\r\n# go run main.go\r\n4096\r\n8192\r\n12288\r\n16384\r\n20480\r\n...\r\n417792\r\n421888\r\n^Csignal: interrupt\r\n#\r\n```\r\n\r\nSame happens on windows. But the numbers are obviously diffferent:\r\n```\r\nC:\\\u003eu:\\test\r\n4096\r\n8192\r\n12288\r\n16384\r\n20480\r\n24576\r\n28672\r\n32768\r\n36864\r\n40960\r\n45056\r\n49152\r\n53248\r\n57344\r\n61440\r\n65536\r\n69632\r\n73728\r\n77824\r\n81920\r\n86016\r\n90112\r\n94208\r\n98304\r\n102400\r\n106496\r\n110592\r\n114688\r\n118784\r\n122880\r\n126976\r\n131072\r\n135168\r\n\r\nC:\\\u003e\r\n```\r\n(I did press ctrl+C to break the program).\r\n\r\nThe BenchmarkThroughput has the same problem. I can make it hang on Linux just like it did on Windows:\r\n```\r\n# git diff\r\ndiff --git a/src/crypto/tls/tls_test.go b/src/crypto/tls/tls_test.go\r\nindex b4b5f4a..6106026 100644\r\n--- a/src/crypto/tls/tls_test.go\r\n+++ b/src/crypto/tls/tls_test.go\r\n@@ -560,7 +560,7 @@ func throughput(b *testing.B, totalBytes int64, dynamicRecordSizingDisabled bool\r\n \tclientConfig := testConfig.clone()\r\n \tclientConfig.DynamicRecordSizingDisabled = dynamicRecordSizingDisabled\r\n \r\n-\tbuf := make([]byte, 1\u003c\u003c14)\r\n+\tbuf := make([]byte, 1\u003c\u003c20)\r\n \tchunks := int(math.Ceil(float64(totalBytes) / float64(len(buf))))\r\n \tfor i := 0; i \u003c N; i++ {\r\n \t\tconn, err := Dial(\"tcp\", ln.Addr().String(), clientConfig)\r\n# go test -run=none -bench=Throughput\r\n^C#\r\n```\r\n\r\nAlex",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-29T06:47:03Z",
	"updated_at": "2016-06-29T06:47:03Z"
}
