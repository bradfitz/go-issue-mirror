{
	"id": 51285009,
	"number": 6325,
	"state": "closed",
	"title": "cmd/go: add 'unix' build tag",
	"body": "\u003cpre\u003eWould it make sense to add a 'unix' build tag? The Go standard library has 29 files\nnamed *_unix.go¹, 22 of these interpret the tag as\n\n\u0026quot;+build darwin dragonfly freebsd linux netbsd openbsd\u0026quot;\n\none also includes plan9, one also includes windows (which is somewhat unexpected), one\ndoes not include dragonfly, one does not include openbsd or darwin, and one is defined\nas \u0026quot;!windows,!plan9\u0026quot;.\n\nI primarily see two issues with the current situation:\n\n1) When seeing a file named *_unix.go, it's not instantly obvious what platforms it\nincludes. As we can see, sometimes darwin is a Unix, sometimes it's not, and in one case\neven Windows is a Unix.\n2) When others emulate unix as it's used by Go, they'll have to update it when new\nUnixes, like dragonfly, get added\n\nOf course the inconsistencies mentioned in 1 are also a reason not to add a unix build\ntag: Various files would need to be renamed or reorganized and it might conflict with\nexisting interpretations by users.\n\nIs this possible to do in Go 1.x? Is there any merit to doing it?\n\n¹: Determined with grep \u0026quot;+build\u0026quot; $GOROOT/src/**/*_unix.go\u003c/pre\u003e",
	"user": {
		"login": "dominikh",
		"id": 39825,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:34:47Z",
	"created_at": "2013-09-04T17:23:44Z",
	"updated_at": "2016-06-25T01:18:06Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
