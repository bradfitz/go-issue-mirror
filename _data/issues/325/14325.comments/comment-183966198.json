{
	"id": 183966198,
	"body": "In the specific case of\r\n\r\n``` go\r\ns := make([]T, 0, len(x)) // or just var s []T, to avoid the possibly-premature optimization\r\nfor _, v := range x {\r\n  s = append(s, v)\r\n}\r\n```\r\n\r\nIMO it's better style anyway to write\r\n\r\n``` go\r\ns := make([]T, len(x))\r\nfor i, v := range x {\r\n  s[i] = v\r\n}\r\n```\r\n\r\nbecause it's about the same complexity (make is needed, but append is not) and because it's more obviously performant without the need for compiler optimizations. I think that this style preference is borne out by stdlib code as well.\r\n\r\nBut I suppose your proposal still helps in cases where s was previously initialized with some other elements.\r\n\r\nBy the way, I find your last code snippet confusing (why are the variable names different from the preceding snippets, and why are we appending slice indexes?) Should it instead read\r\n\r\n``` go\r\nvar s []T\r\nfor _, v := range x {\r\n  s = append(s, v)\r\n}\r\n```",
	"user": {
		"login": "cespare",
		"id": 318501,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-14T20:10:12Z",
	"updated_at": "2016-02-14T20:10:12Z"
}
