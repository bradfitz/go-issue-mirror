{
	"id": 80516664,
	"body": "Concluding a recent thread https://groups.google.com/d/topic/golang-nuts/86N_xtgcZqo/discussion, I think the the burden is on the spec to make clear\r\n- that a 'map' value is a reference to an opaque data structure\r\n- that make(map) creates an instance of this data structure and returns a reference to it\r\n- that copying a 'map' value creates a new alias to the same instance of that data structure\r\n- that the effect of m[k]=v updates made via one reference are visible to all aliases\r\n- that a 'map' value may be safely represented by an unsafe.Pointer (as rsc told me)\r\n\r\nand on the memory model to state\r\n- that this data structure is analogous to a variable\r\n- that m[k] and range operations on a map are analogous to reads of that variable\r\n- and that m[k]=v and delete operations are analogous to writes.\r\n",
	"user": {
		"login": "adonovan",
		"id": 5658175,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-14T14:45:32Z",
	"updated_at": "2015-03-14T14:45:47Z"
}
