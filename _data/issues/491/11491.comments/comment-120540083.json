{
	"id": 120540083,
	"body": "The way to make this work is for runtime.zerovalue to be a common symbol.  Common symbols have the exact semantics we want, courtesy of FORTRAN.  In ELF that means giving setting the section index of the symbol to SHN_COMMON (== 0xfff2).\r\n\r\nBut changing the behaviour for large value types seems better to me.  I'm not sure we even need to go to 1024, probably 256 would be fine.  If the value type is \u003c= 256 bytes, the compiler generates code to copy.  If the value type \u003e 256 bytes, have the map code return nil for zero, and have the compiler generate if ret == nil { memset } else { memcpy }.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-10T22:12:06Z",
	"updated_at": "2015-07-10T22:12:06Z"
}
