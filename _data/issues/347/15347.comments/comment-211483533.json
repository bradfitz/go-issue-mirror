{
	"id": 211483533,
	"body": "I am not a fan of this. I don't think it buys anything. If there is any principle that one might apply to the choice if keywords, it might be that frequently used keywords for simple concepts should be compact, while others (for more complex and less frequently used ones) can be longer.\r\n\r\nI'm very much a fan of succinct names in local context, and longer names in larger context, but there are exceptions (such as widely used constants in global contexts, etc.). But I am not fond of mangling keywords for shortness.\r\n\r\n`interface` is common but not that common. Note that keywords are usually not shortcut in Go with a few exceptions: `var`, `const`, and `struct`, really for historic reasons (and they are reasonably frequent). The very first spec versions used `function`not `func`, and the only other one that's abbreviated is `chan`.\r\n\r\nI like @extemporalgenome's counter-point, all the abbreviated keywords we have are prefixes that naturally extend to full length when spoken.\r\n",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-18T17:20:42Z",
	"updated_at": "2016-04-18T17:20:42Z"
}
