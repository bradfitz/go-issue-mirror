{
	"id": 66091689,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eyou have 235886 strings, total string size (not including overhead) is 2257223.\n\nThen the bundledDictionary slice has 235886 entry, each entry contains a\nStringHeader, which is 16-byte on amd64, so you will need to add at least\n235886 * 16 bytes of overhead (which is 3774176 bytes).\n\nso actually you bundledDictionary will use at least 7918487 bytes of space,\nfar larger than the string data themselves.\n\nI suggest you concatenate the strings to make a bigger one, and split at\nruntime (or save the index of each string; or even better, use trie to store\nthe strings, so that it doesn't need any initialization at runtime)\n\nPS: the reason why Go binary uses ~4MB more is that every string is actually\nstored as a separate StringHeader in the Go string table, so each strings adds\nfurther 16 bytes of overhead (3774176 bytes). Taking that into account,\nnow the binary uses 11692663 bytes to store all the strings and the slice,\nand this number explains 11MB increase in binary size.\n\nI don't think we can do anything here. Don't use too many strings.\u003c/pre\u003e\n\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-02-22T21:50:12Z",
	"updated_at": "2014-12-08T10:41:04Z"
}
