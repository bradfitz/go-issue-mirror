{
	"id": 51286631,
	"number": 7384,
	"state": "closed",
	"title": "cmd/link: don't put StringHeader into go.string.*",
	"body": "by **tjarratt@pivotallabs.com**:\n\n\u003cpre\u003eI was creating a small utility that would print random strings and I needed a\ndictionary. On unix, this is not a problem because /usr/share/dict/words exists, but for\nwindows I decided to include 3.5MB of strings directly in my source code as a slice of\nstrings.\n\nSource code is here: \n\u003ca href=\"https://github.com/tjarratt/go-experiments/tree/master/rw\"\u003ehttps://github.com/tjarratt/go-experiments/tree/master/rw\u003c/a\u003e\n\nI noticed that when I compiled with the rw_windows.go source file, my binary grew from\n2.1MB to 13MB. Not terrible, but still pretty outlandish.\n\nWhat steps will reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n1. Have a small go utility\n2. Add 3.5MB of strings as a slice of strings\n3. Compile and compare file sizes\n\nWhat is the expected output?\nProbably something between 3.5MB and 7MB growth in the binary.\n\nWhat do you see instead?\nThe binary is 11MB larger when 3.5MB of strings are present.\n\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\nUnsure.\n\n\nWhich operating system are you using?\nOS X\n\nWhich version are you using?  (run 'go version')\ngo version go1.2 darwin/amd64\n\nPlease provide any additional information below.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 9,
	"closed_at": "2015-06-30T19:28:40Z",
	"created_at": "2014-02-21T21:01:58Z",
	"updated_at": "2016-06-29T21:01:22Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
