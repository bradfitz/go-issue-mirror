{
	"id": 240566941,
	"body": "I see, thanks!  (Sorry, I thought the playground link was just a sample application that demonstrated an issue within BoltDB itself.)\r\n\r\nSo when slicing a pointer-to-array like that, we're supposed to check for and panic on nil.  We used to implement that with an explicit nil comparison; and if we found nil, we would conditional store to it to trigger a SIGSEGV.\r\n\r\nIt looks like with SSA we've switched to a more implicit nil check by unconditionally trying to load from the pointed-to address, which causes the SIGSEGV now also on non-nil-but-still-invalid pointers.\r\n\r\n/cc @randall77",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-17T22:19:36Z",
	"updated_at": "2016-08-17T22:19:36Z"
}
