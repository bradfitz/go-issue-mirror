{
	"id": 153003398,
	"number": 15536,
	"state": "closed",
	"title": "Add special comments or a flag to force \"go generate\" during a \"go get\"",
	"body": "**Problem statement:**\r\nWe are working on the [Go API for TensorFlow](https://github.com/tensorflow/tensorflow/pull/1771).\r\nThe problem is that this package depends on the tensorflow shared libraries, and in order to compile this libraries we depend on \"go generate\", but since there is no way to run \"go generate\" during the \"go get\" this package can't be go-gettable. I came up with this ugly solution:\r\n```sh\r\n$ TF_REPO=github.com/tensorflow/tensorflow/tensorflow/contrib/go/;go get $TF_REPO || (go generate $TF_REPO \u0026\u0026 go get $TF_REPO)\r\n```\r\nFirst I use the \"go get\" to clone the repo, if it is already installed, that's it, but if not it executes the \"go generate\" and the \"go get\" once again.\r\n\r\nI think that it would be a good idea to add a way to execute \"go generate\" while executing \"go get\", something like a special comment on the package or so. This could be useful on situations like the described below as also on other cases like to generate protobuf files or any other code necessary to get the package so we don't need to upload them to the repository.\r\n\r\n**Possible solutions:**\r\n\r\nIt could be nice to have a special comment like:\r\n```go\r\n// go:get generate\r\n```\r\nor something like that in the package in order to force the execution of \"go generate\" before \"go get\".\r\n\r\nAnother option could be to add a `-g` to \"go get\" but this could be more confusing for the users since they would need to know in advance that the flag is required to get the package.",
	"user": {
		"login": "alonsovidales",
		"id": 1468785,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2016-05-04T14:18:19Z",
	"created_at": "2016-05-04T12:48:54Z",
	"updated_at": "2016-05-04T14:18:19Z"
}
