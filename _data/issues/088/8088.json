{
	"id": 51287658,
	"number": 8088,
	"state": "closed",
	"title": "spec: oversight: §Variable declarations points to §Assignments but the relevant text does not match",
	"body": "\u003cpre\u003eThe Variable declarations section says\n\n\u0026quot;If the type is absent and the corresponding expression evaluates to an untyped\nconstant, the type of the declared variable is as described in §Assignments.\u0026quot;\n\nThe Assignemnts section says\n\n\u0026quot;If an untyped constant is assigned to a variable of interface type or the blank\nidentifier, the constant is first converted to type bool, rune, int, float64, complex128\nor string respectively, depending on whether the value is a boolean, rune, integer,\nfloating-point, complex, or string constant.\u0026quot;\n\nThe problem is the phrase \u0026quot;variable of interface type or the blank\nidentifier\u0026quot;; it conflicts with the clause in Variable declarations. As nothing else\nin the Assignments section talks about untyped constants, the Variable declarations\nsection now points nowhere.\n\nThis led to some confusion in #go-nuts, where jyc, dominikh, mortdeus, and myself were\ngoing around in circles trying to find the type inference rules for variable\ndeclarations without a type (which includes short variable declarations).\n\nThanks.\u003c/pre\u003e",
	"user": {
		"login": "andlabs",
		"id": 718242,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:44:51Z",
	"created_at": "2014-05-24T02:29:32Z",
	"updated_at": "2016-06-25T01:35:15Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
