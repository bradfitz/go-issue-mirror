{
	"id": 51920811,
	"number": 9311,
	"state": "closed",
	"title": "runtime: shortage of contiguous virtual memory on Android L ",
	"body": "On 32-bit ARM, Go initially reserves a single block of 768 MB of virtual memory ([runtime/malloc1.go:146](https://github.com/golang/go/blob/master/src/runtime/malloc1.go#L146)). According to several reports, this fails in some L apps. It appears that the ART runtime in the same process reserves more than twice the -Xmx heap size in virtual memory.\r\n\r\nA user inside Google with a working reproduction was about to modify the runtime to allocate an initial 512 MB block. This means we could switch to the alternate reservation scheme described in the malloc1.go comments and safely use smaller arena sizes.\r\n\r\nThe minimal change is to shrink the initial arena size to 256 MB. This seems reasonable for the Android apps I know of, but I am not sure how it would affect other 32-bit users.",
	"user": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 12,
	"closed_at": "2015-01-09T19:25:06Z",
	"created_at": "2014-12-14T14:37:29Z",
	"updated_at": "2016-06-25T01:56:22Z"
}
