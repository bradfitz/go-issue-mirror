{
	"id": 111550338,
	"body": "Yeah, I had noticed that I had missed the lockentry and co. ones.\r\n\r\nI don't know for sure which ones it needs, but I'm almost sure it's more than just the multistatus one. I think I actually went the other way around when I tested, and when I had the multistatus, propstat and props already prefixed, but not the top ones in Response (such as href) yet, it was still not working.\r\n\r\nI'll try and do a more systematic probing of that. It's a pain we don't have an exact doc of what MiniRedir wants :/\r\n\r\nRegarding the wobblyness, that was partly the sense of my question in the CL commit msg: do you think we could only prefix the tags when we detect the user-agent matches a \"faulty\" MiniRedir? That way, not only do we emit \"cleaner\" XML in the general case, but we also wouldn't have to fix as many tests; we could just add a propfind test specific to the faulty MiniRedir case.\r\nWith the approach I took it would be very impractical, since we would have to duplicate the structs types and use one or the other depending on what the client is. But maybe there's another/better way to prefix the XML elements than what I did (i.e. a way that would not change the xml tags of the structs) ? What if we didn't touch xml.go at all, and instead try to do some prepending on the fly everywhere, like I did in prop.go and webdav.go ?\r\n",
	"user": {
		"login": "mpl",
		"id": 626071,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-12T16:35:01Z",
	"updated_at": "2015-06-12T16:35:01Z"
}
