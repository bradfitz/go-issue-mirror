{
	"id": 66088561,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eIn the first level, := was a syntactic sugar for a handy case\n\n        var v T           // (1)\n        v = exprOfTypeT\n\nso it can be written as just\n\n        v := exprOfTypeT  // (2)\n\n(1) and (2) relate in a simple way. Per this proposal, it would do also allow\n\n        var v t // (3)\n        w.x, v = exprOfTypeOfFieldXFromStructW, exprOfTypeT\n\nShortening the explicit form (3) to\n\n        w.x, v := exprOfTypeOfFieldXFromStructW, exprOfTypeT // (4)\n\nmeans that (3) and (4) are no more related in such a simple way, IMO rendering the\noriginal sweetness toxic. Consider (by extension)\n\n        *p, v := f()\n        s[x], x := g() \n        h(i(j())).z[a]().b, y := k(), x // etc.\n\nI don't think this improves readability. It's much easier to miss the fact that {v,x,y}\nare being declared because of the distraction of the now possibly unbound complexity of\nthe LHSs. In contrast to the clear meaning of the status quo dead simple LHSs legal with\n:=\n\n        a, b, c := f()\n        d, e, f := expr1, expr2, expr3.\u003c/pre\u003e",
	"user": {
		"login": "cznic",
		"id": 729580,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-11-29T09:26:30Z",
	"updated_at": "2014-12-08T10:38:04Z"
}
