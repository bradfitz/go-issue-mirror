{
	"id": 75714661,
	"body": "Same problem : go 1.4.2, os X 10.10.2 on a program that generate massive amount of data in a tree like (everything works just fine on go 1.3.3, all go 1.4 version fails)\r\nit is mostly random, sometimes everything goes fine (~10% of the time)\r\n\r\nthe panic occurs on a gc during a map allocation in the middle a big recursive generation (mem size ~10Gb)\r\n\r\nline 165 : mystructs[code] = make(map[int]*MyStruct)\r\n\r\nruntime: garbage collector found invalid heap pointer *(0x20dbc3f60+0x30)=0x208ca7000 span=0x208c9e000-0x208ca7000-0x208ca8000 state=0\r\nfatal error: invalid heap pointer\r\n\r\nruntime stack:\r\nruntime.throw(0x2b1b63)\r\n\t/usr/local/go/src/runtime/panic.go:491 +0xad fp=0x2083adb08 sp=0x2083adad8\r\nscanblock(0x20dbc3f60, 0x78, 0x219060)\r\n\t/usr/local/go/src/runtime/mgc0.c:378 +0x551 fp=0x2083adc48 sp=0x2083adb08\r\nscanframe(0x2083add50, 0x0, 0x1)\r\n\t/usr/local/go/src/runtime/mgc0.c:719 +0x164 fp=0x2083adcb8 sp=0x2083adc48\r\nruntime.gentraceback(0x40725, 0x20dbc3e10, 0x0, 0x209745e60, 0x0, 0x0, 0x7fffffff, 0x2083ade00, 0x0, 0x0, ...)\r\n\t/usr/local/go/src/runtime/traceback.go:311 +0x7a8 fp=0x2083adda8 sp=0x2083adcb8\r\nscanstack(0x209745e60)\r\n\t/usr/local/go/src/runtime/mgc0.c:777 +0x21c fp=0x2083ade18 sp=0x2083adda8\r\nmarkroot(0x208324000, 0x6245)\r\n\t/usr/local/go/src/runtime/mgc0.c:553 +0xe7 fp=0x2083ade78 sp=0x2083ade18\r\nruntime.parfordo(0x208324000)\r\n\t/usr/local/go/src/runtime/parfor.c:91 +0x13b fp=0x2083adef8 sp=0x2083ade78\r\nruntime.gchelper()\r\n\t/usr/local/go/src/runtime/mgc0.c:1185 +0x4a fp=0x2083adf20 sp=0x2083adef8\r\nstopm()\r\n\t/usr/local/go/src/runtime/proc.c:1181 +0x158 fp=0x2083adf40 sp=0x2083adf20\r\nfindrunnable(0x208327200)\r\n\t/usr/local/go/src/runtime/proc.c:1487 +0x562 fp=0x2083adf78 sp=0x2083adf40\r\nschedule()\r\n\t/usr/local/go/src/runtime/proc.c:1575 +0x151 fp=0x2083adfa8 sp=0x2083adf78\r\nruntime.park_m(0x208314120)\r\n\t/usr/local/go/src/runtime/proc.c:1654 +0x113 fp=0x2083adfd0 sp=0x2083adfa8\r\nruntime.mcall(0x58e34)\r\n\t/usr/local/go/src/runtime/asm_amd64.s:186 +0x5a fp=0x2083adfe0 sp=0x2083adfd0\r\ngoroutine 1 [garbage collection]:\r\nruntime.switchtoM()\r\n\t/usr/local/go/src/runtime/asm_amd64.s:198 fp=0x20ba3ef60 sp=0x20ba3ef58\r\nruntime.gogc(0x200000000)\r\n\t/usr/local/go/src/runtime/malloc.go:469 +0x1cf fp=0x20ba3ef98 sp=0x20ba3ef60\r\nruntime.mallocgc(0x30, 0x193820, 0x0, 0x20ba3f0d0)\r\n\t/usr/local/go/src/runtime/malloc.go:341 +0x391 fp=0x20ba3f048 sp=0x20ba3ef98\r\nruntime.newobject(0x193820, 0x23768c8fccc17701)\r\n\t/usr/local/go/src/runtime/malloc.go:353 +0x49 fp=0x20ba3f070 sp=0x20ba3f048\r\nruntime.makemap(0x151c20, 0x0, 0x208616c6c)\r\n\t/usr/local/go/src/runtime/hashmap.go:220 +0x36e fp=0x20ba3f0c0 sp=0x20ba3f070\r\nmain.searchTenant(0x1, 0x208d4abb0, 0x20859ea00, 0x208c06870, 0x3, 0x2208344b40, 0x20eedb460, 0x20eedb460)\r\n\t/Users/np/tools/go/src/tenant/tenanttype.go:165 +0xc49 fp=0x20ba3f398 sp=0x20ba3f0c0\r\n[....]",
	"user": {
		"login": "nprudhomme",
		"id": 800050,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-24T08:07:04Z",
	"updated_at": "2015-02-24T08:07:25Z"
}
