{
	"id": 176164690,
	"number": 17050,
	"state": "closed",
	"title": "x/net/ipv6: all-{nodes,routers} or solicited-node multicast addresses?",
	"body": "There doesn't appear to be a way to read multicast packets **not** destined for the local host when using `net.PacketConn`.\r\n\r\nI'm trying to use `x/net/ipv6` as follows:\r\n\r\n```Go\r\n\tvar c net.PacketConn\r\n\tc, err = net.ListenPacket(\"ip6:ipv6-icmp\", ifaceIP.String())\r\n...\r\n\tp := ipv6.NewPacketConn(c)\r\n\terr = p.SetControlMessage(ipv6.FlagSrc|ipv6.FlagDst, true)\r\n...\r\n\tvar f ipv6.ICMPFilter\r\n\tf.SetAll(true)\r\n\tf.Accept(ipv6.ICMPTypeNeighborSolicitation)\r\n\tf.Accept(ipv6.ICMPTypeNeighborAdvertisement)\r\n\terr = p.SetICMPFilter(\u0026f)\r\n...\r\n\tpayload := make([]byte, snaplen)\r\n\ti, rcm, src, err := p.ReadFrom(payload)\r\n...\r\n```\r\nI would like to read, for example, IPv6 neighbor solicitations where the destination solicited-node multicast address does not belong to the local host.\r\n\r\nCan this be done with the standard lib (i.e. not using pcap library)? If not, could it be added? Thanks.\r\n\r\ngo version go1.6.3 linux/amd64\r\n",
	"user": {
		"login": "porjo",
		"id": 1296987,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2016-09-10T09:49:51Z",
	"created_at": "2016-09-10T07:17:38Z",
	"updated_at": "2016-09-10T11:31:15Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
