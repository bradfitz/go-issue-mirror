{
	"id": 51283046,
	"number": 5050,
	"state": "open",
	"title": "image/gif: decoding untrusted (very large) images can cause huge memory allocations",
	"body": "by **jeff.allen**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. decode attached gif, get bad behavior due to giant malloc followed by giant memset(0).\n2. finally get error about UnexpectedEOF because there is not as much pixel data as the\nbounds say there should be.\n\nThe problem is that the gif has a frame in it that would need 4.2e9 bytes to hold\naccording to bounding box, but it only has 1 byte. The allocation of the 4.2e9 bytes\nsucceeds, but at considerable pain. Then the UnexpectedEOF is thrown.\n\nWhat is the expected output?\n\nGetting the error without allocating a huge amount of memory first.\n\nWhat do you see instead?\n\nLong pause and unresponsive computer due to giant memory allocation.\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n6g\n\nWhich operating system are you using?\n\nlinux\n\nWhich version are you using?  (run 'go version')\n\ntip\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/5050/0/bug525326.gif\"\u003ebug525326.gif\u003c/a\u003e (11606 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Thinking"
		}
	],
	"comments": 11,
	"created_at": "2013-03-14T15:11:54Z",
	"updated_at": "2015-04-14T19:45:18Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
