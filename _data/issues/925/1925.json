{
	"id": 51278492,
	"number": 1925,
	"state": "closed",
	"title": "runtime: garbage collection confused by static tables on 386",
	"body": "by **peter.polakovic**:\n\n\u003cpre\u003eWhen working with large images I found, that windows port doesn't free large chunks of\nmemory.\n\nThe following code\n\npackage main\n\nimport \u0026quot;fmt\u0026quot;\nimport \u0026quot;runtime\u0026quot;\n\nfunc main() {\n  for i:=0; i\u0026lt;10; i++ {\n    a := make([]byte, 5000000)\n    if a == nil { }\n    a = nil    \n    runtime.GC()\n    fmt.Println(i, runtime.MemStats.Alloc, runtime.MemStats.Sys, runtime.MemStats.HeapObjects)\n  }\n  fmt.Println()\n  for i:=0; i\u0026lt;10; i++ {\n    a := make([]byte, 20000000)\n    if a == nil { }\n    a = nil    \n    runtime.GC()\n    fmt.Println(i, runtime.MemStats.Alloc, runtime.MemStats.Sys, runtime.MemStats.HeapObjects)\n  }  \n}\n\nproduces the following output\n\n0 5176576 8887420 422\n1 5213848 14564476 433\n2 5213848 14564476 433\n3 5213848 14564476 433\n4 5213848 14564476 433\n5 5213848 14564476 433\n6 5213848 14564476 433\n7 5213848 14564476 433\n8 5213848 14564476 433\n9 5213848 14564476 433\n\n0 20250336 37125244 436\n1 40288024 59686012 442\n2 60325656 82246780 444\n3 80363288 104807548 446\n4 100400920 127368316 448\n5 100437784 149929084 449\n6 120438552 149929084 450\n7 120475416 172489852 451\n8 140476184 172489852 452\n9 140513048 195050620 453\n\nOn OS X port first part of output seems similar to second one (allocated memory and\nnumber of heap objects is the same in each iteration).\n\nThe same result when using runtime.Malloc() and runtime.Free().\n\nI'm using binary distribution of release.r57.1 on Windows7 (32 bit).\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 10,
	"closed_at": "2014-12-08T10:10:35Z",
	"created_at": "2011-06-07T07:23:15Z",
	"updated_at": "2016-06-24T19:30:30Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
