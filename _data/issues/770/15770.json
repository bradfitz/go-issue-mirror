{
	"id": 155977505,
	"number": 15770,
	"state": "open",
	"title": "cmd/link: panic: runtime error: invalid memory address or nil pointer dereference when using -buildmode=shared -linkshared on ppc64le",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo version go1.6.1 linux/ppc64le\r\nAlso fails with latest from tip.\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nUbuntu 16.04\r\nGOARCH=\"ppc64le\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"ppc64le\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/go-1.6\"\r\nGOTOOLDIR=\"/usr/lib/go-1.6/pkg/tool/linux_ppc64le\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n\r\nTried to build kubernetes\r\n\r\n4. What did you expect to see?\r\nSuccessful build\r\n\r\n\r\n5. What did you see instead?\r\nFailed build.\r\n\r\nFirst, with the cloned code as is, the error is:  relocation truncated to fit: R_PPC64_REL24 from several lines due to the size of the packages and binary getting too large.  I believe the use of shared libraries should help this problem, so I modified hack/lib/golang.sh to use -buildmode=shared and -linkshared.  \r\ngo install \"${goflags[@]:+${goflags[@]}}\" -x -buildmode=shared -ldflags \"${goldflags} -linkshared\" \"${nonstatics[@]:+${nonstatics[@]}}\r\n\r\nAfter adding that I get this error:\r\n\r\n/usr/lib/go-1.6/pkg/tool/linux_ppc64le/link -o $WORK/lib.so -L $WORK -installsuffix dynlink -buildmode=shared -X k8s.io/kubernetes/pkg/version.buildDate=2016-05-20T14:18:29Z -X k8s.io/kubernetes/pkg/version.gitCommit=b7a31ad2615524cefcb82ed4b3832e2105147410 -X k8s.io/kubernetes/pkg/version.gitTreeState=dirty -X k8s.io/kubernetes/pkg/version.gitVersion=v1.3.0-alpha.4.191+b7a31ad2615524-dirty -X k8s.io/kubernetes/pkg/version.gitMajor=1 -X k8s.io/kubernetes/pkg/version.gitMinor=3+ -linkshared -extld=powerpc64le-linux-gnu-gcc runtime/cgo=/usr/lib/go-1.6/pkg/linux_ppc64le_dynlink/runtime/cgo.a                                   \r\n//# /tmp/go-build298159653/lib.so                                                                          \r\nmissing Go type information for global symbol: k8s.io/kubernetes/pkg/version.buildDate size 16           \r\nmissing Go type information for global symbol: k8s.io/kubernetes/pkg/version.gitCommit size 16           \r\nmissing Go type information for global symbol: k8s.io/kubernetes/pkg/version.gitMajor size 16            \r\nmissing Go type information for global symbol: k8s.io/kubernetes/pkg/version.gitMinor size 16            \r\nmissing Go type information for global symbol: k8s.io/kubernetes/pkg/version.gitTreeState size 16        \r\nmissing Go type information for global symbol: k8s.io/kubernetes/pkg/version.gitVersion size 16          \r\npanic: runtime error: invalid memory address or nil pointer dereference                                  \r\n[signal 0xb code=0x1 addr=0x8 pc=0x1172dc]                                                               \r\n\r\ngoroutine 1 [running]:\r\npanic(0x260e40, 0xc82000e160)\r\n        /usr/lib/go-1.6/src/runtime/panic.go:464 +0x3a0\r\ncmd/link/internal/ld.defgotype(0xc821609680, 0x12)     \r\n        /usr/lib/go-1.6/src/cmd/link/internal/ld/dwarf.go:1101 +0x3adc\r\ncmd/link/internal/ld.Dwarfemitdebugsections()                         \r\n        /usr/lib/go-1.6/src/cmd/link/internal/ld/dwarf.go:2120 +0x960 \r\ncmd/link/internal/ppc64.asmb()                                        \r\n        /usr/lib/go-1.6/src/cmd/link/internal/ppc64/asm.go:905 +0x1308\r\ncmd/link/internal/ld.Ldmain()                                         \r\n        /usr/lib/go-1.6/src/cmd/link/internal/ld/pobj.go:248 +0x20f4  \r\ncmd/link/internal/ppc64.Main()                                        \r\n        /usr/lib/go-1.6/src/cmd/link/internal/ppc64/obj.go:44 +0x28   \r\nmain.main()                                                           \r\n        /usr/lib/go-1.6/src/cmd/link/main.go:36 +0x540                \r\n\r\nTo reproduce:\r\ngit clone https://github.com/kubernetes/kubernetes.git\r\ncd kubernetes\r\nmake\r\n\r\nSimilar error happens with go built from latest master but the stack is somewhat different.  I did try removing the -X options to the link and the messages about \"missing Go type... \" didn't appear but the panic still happened.\r\n\r\n/home/boger/golang/upstream/go/pkg/tool/linux_ppc64le/link -o $WORK/lib.so -L $WORK -installsuffix dynlink -buildmode=shared -X k8s.io/kubernetes/pkg/version.buildDate=2016-05-20T14:31:11Z -X k8s.io/kubernetes/pkg/version.gitCommit=b7a31ad2615524cefcb82ed4b3832e2105147410 -X k8s.io/kubernetes/pkg/version.gitTreeState=dirty -X k8s.io/kubernetes/pkg/version.gitVersion=v1.3.0-alpha.4.191+b7a31ad2615524-dirty -X k8s.io/kubernetes/pkg/version.gitMajor=1 -X k8s.io/kubernetes/pkg/version.gitMinor=3+ -linkshared -extld=powerpc64le-linux-gnu-gcc runtime/cgo=/home/boger/golang/upstream/go/pkg/linux_ppc64le_dynlink/runtime/cgo.a     \r\n//# /tmp/go-build839806022/lib.so                                                                          \r\ngo.link.addmoduledata: missing Go type information for global symbol: k8s.io/kubernetes/pkg/version.buildDate size 16                                                                                             \r\ngo.link.addmoduledata: missing Go type information for global symbol: k8s.io/kubernetes/pkg/version.gitCommit size 16                                                                                             \r\ngo.link.addmoduledata: missing Go type information for global symbol: k8s.io/kubernetes/pkg/version.gitMajor size 16                                                                                              \r\ngo.link.addmoduledata: missing Go type information for global symbol: k8s.io/kubernetes/pkg/version.gitMinor size 16                                                                                              \r\ngo.link.addmoduledata: missing Go type information for global symbol: k8s.io/kubernetes/pkg/version.gitTreeState size 16                                                                                          \r\ngo.link.addmoduledata: missing Go type information for global symbol: k8s.io/kubernetes/pkg/version.gitVersion size 16                                                                                            \r\npanic: runtime error: invalid memory address or nil pointer dereference                                  \r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0x101c84]                                   \r\n\r\ngoroutine 1 [running]:\r\npanic(0x1f6d00, 0xc420010120)\r\n        /home/boger/golang/upstream/go/src/runtime/panic.go:500 +0x3a8\r\ncmd/link/internal/ld.newtype(0xc421fafee0, 0xc420012360)              \r\n        /home/boger/golang/upstream/go/src/cmd/link/internal/ld/dwarf.go:998 +0x3ab4\r\ncmd/link/internal/ld.defgotype(0xc421fafee0, 0x12)                                  \r\n        /home/boger/golang/upstream/go/src/cmd/link/internal/ld/dwarf.go:854 +0x3fc \r\ncmd/link/internal/ld.dwarfgeneratedebugsyms()                                       \r\n        /home/boger/golang/upstream/go/src/cmd/link/internal/ld/dwarf.go:1982 +0x930\r\ncmd/link/internal/ld.dodata()                                                       \r\n        /home/boger/golang/upstream/go/src/cmd/link/internal/ld/data.go:1741 +0x3780\r\ncmd/link/internal/ld.Ldmain()                                                       \r\n        /home/boger/golang/upstream/go/src/cmd/link/internal/ld/pobj.go:211 +0x1630 \r\ncmd/link/internal/ppc64.Main()                                                      \r\n        /home/boger/golang/upstream/go/src/cmd/link/internal/ppc64/obj.go:45 +0x28  \r\nmain.main()                                                                         \r\n        /home/boger/golang/upstream/go/src/cmd/link/main.go:36 +0x4c4               \r\n",
	"user": {
		"login": "laboger",
		"id": 9433228,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsInvestigation"
		}
	],
	"comments": 7,
	"created_at": "2016-05-20T14:35:57Z",
	"updated_at": "2016-10-07T18:17:26Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
