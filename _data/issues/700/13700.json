{
	"id": 123310219,
	"number": 13700,
	"state": "open",
	"title": "cmd/go: better versioning support for `go get`",
	"body": "In my experience the lack of officially supported, built in, version control is the biggest pain point of the go language. This is a feature that a modern language, a language being built today in front of an active community of its users, should at least aspire to do well. \r\n\r\n## The Feature Request\r\nI would like to see native support for version control built in to the `go get` utility. The syntax could look something like this:\r\n```go\r\nimport \"github.com/user/package#v1-tag-name\"\r\n```\r\n\r\n`go get` would function exactly as it currently does except that after a repo is cloned, it would check out the branch specified after the `#`. \r\n\r\nFor simplicities sake, you could add the following implementation details:\r\n\r\n1. If a package is imported with two different version tags in the same package, there could be a compile time \"dependency error\" of some sort\r\n2. In `$GOPATH/src` the directory structure could contain the package name with the tag appended to it. I think this will make the changes needed to implement this feature fairly minimal.\r\n```console\r\n$ls $GOPATH/src/github.com/user/\r\npackage#v1-tag-name\r\npackage#v2-tag-name\r\npackage#v3-tag-name\r\npackage\r\n```\r\n\r\n## Common Objections\r\nI'm aware that the members of the core team are fans of the stable head methodology and that you would rather not needlessly complicate the logic of the `go get` utility. However, many people (myself included) have found some kind of versioning support very useful to the point where there are several competing package management solutions that I'm sure you have seen. I'm also aware that the team has added the vendor directory for experimental use. None of these solutions feel like real solutions to the problem. There is already an official dependency manager, it should support versioning.\r\n\r\n---\r\nIs there any chance that something like this could be put on the roadmap? Thanks!",
	"user": {
		"login": "marksalpeter",
		"id": 1033500,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"created_at": "2015-12-21T16:24:13Z",
	"updated_at": "2016-06-30T21:45:17Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
