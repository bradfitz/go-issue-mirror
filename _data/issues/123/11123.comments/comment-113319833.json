{
	"id": 113319833,
	"body": "I should be clear that in all of this, I will defer to @rsc, @ianlancetaylor, @minux, and others who know the linker well.\r\n\r\n\u003e I think it's really the format. I guess it would be possible to transplant my code into cmd/internal/goobj and write some more focused benchmarks.\r\n\r\nThis might be a good idea. Given that there is lots of value in object file format stability, it makes sense to make one big change rather than many small ones. The easier it is to experiment and generate good numbers, the easier it will be to have confidene that we've settled on a good design.\r\n\r\nIt is probably also worth surveying to see whether there are other changes to make at the same time. For example, the current object file format doesn't support jump tables. And there are several issues that might be helped by object file format changes (or might not--I haven't thought it through very far): #7384, #7599, #6993, #10170 (and thus #6643).\r\n\r\n\r\n\u003e It also makes the .a files quite a bit (20%?) smaller, which obviously reduces the IO required to read them...\r\n\r\nI'm surprised that there was so much headroom available, since IIRC, the current design was intended to be optimized for I/O. I also seem to recall (but can't seem to find a reference or details now) that there was a goal to keep some important info (what?) at the beginning of the file, to enable peeking. Does the symbol table impact that? (I guess I need to figure out the details to answer that.)\r\n\r\nIs it safe to assume that you have looked at the [Go 1.3 Linker Overhaul doc](https://docs.google.com/document/d/1xN-g6qjjWflecSP08LNgh2uFsKjWb-rR9KA11ip_DIE/) and the discussion of the file format there?\r\n\r\n\u003e Having a string block so you are converting []byte to string just the once and allocating all the strings/data read from the file as slices of one big string/data block certainly helps a bit too, and those are dependent on changing the format too.\r\n\r\nGood to know. When I played with this a while ago, I got the sense that the many []byte/string conversions were just a limitation of the code base, not the file format, but I am definitely prepared to believe that I was wrong. :)\r\n\r\n\r\nThanks for pushing on this. My comments are questions here stem not from resistance but from wanting the next generation (if there is one) to be awesome.\r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-18T23:42:14Z",
	"updated_at": "2015-06-18T23:42:14Z"
}
