{
	"id": 66062687,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eHi,\n\nI think your test case is not doing what you think it is.\nSpecifically, if you pass an interface { Foo() } to a function\nexpecting an interface{}, it is the concrete value that gets\npassed to the function, dressed as an interface{}.  It is not\nthe interface { Foo() } that gets passed inside the interface{}.\nSo when you say Encode(m), that's no different from Encode's\npoint of view than Encode(\u0026Foo...).  If you were to try\nEncode(\u0026m), that would pass a *M (pointer to interface)\ninside the interface{}, and gob would invoke its interface\nencoding routines.  The same would happen if the interface\nwere inside a struct somewhere.  That should be enough\nto make the ii case work, provided you do the registration too.\n\nI don't believe the is or si cases are valid; at the least I don't\nthink they will do what you expect.  (They will do nothing,\nor return an error.)  Gob requires that interfaces be matched\nto interfaces during the round trip.\n\nRuss\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-02-09T19:14:37Z",
	"updated_at": "2014-12-08T10:15:24Z"
}
