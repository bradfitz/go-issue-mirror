{
	"id": 51281753,
	"number": 4173,
	"state": "closed",
	"title": "\"for range\" with Blank ID behaves differently from spec",
	"body": "by **MihaiBorobocea**:\n\n\u003cpre\u003eUsing \u0026quot;for i, _ := range myarray\u0026quot; (second ID is blank) indexes into the array,\nbut the spec indicates twice that this shouldn't happen.\n\u003ca href=\"http://play.golang.org/p/ZRDQtgroDy\"\u003ehttp://play.golang.org/p/ZRDQtgroDy\u003c/a\u003e – copied from spec, shows the problem\n\nWhat is the expected output?\nExpecting both of these to behave identically:\n\u0026quot;for i, _ := range myarray\u0026quot;\n\u0026quot;for i := range myarray\u0026quot;\n\nWhat do you see instead?\nFirst form crashes at runtime (see playground URL above), second one runs ok.\n\n\n1) The spec states:\n\u0026quot;If the second iteration variable is the blank identifier, the range clause is\nequivalent to the same clause with only the first variable present.\u0026quot;\n\nThe playground example above crashes (null pointer dereference) when using 2 iteration\nvariables \u0026quot;i, _\u0026quot;.\nIt runs successfully after removing the second iteration var (blank ID); it loops from 0\nto 6.\n\n2) The second place in the spec where the \u0026quot;Expected behavior\u0026quot; (as noted above)\nis mentioned: the example at the end of section\n\u003ca href=\"http://golang.org/ref/spec#For_statements\"\u003ehttp://golang.org/ref/spec#For_statements\u003c/a\u003e – copied to the playground URL.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:22:11Z",
	"created_at": "2012-09-28T22:01:08Z",
	"updated_at": "2016-06-24T22:25:46Z"
}
