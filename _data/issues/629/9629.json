{
	"id": 54692480,
	"number": 9629,
	"state": "closed",
	"title": "log: Logger struct does not export a SetOutput method",
	"body": "**What version of Go are you using (go version)?** \r\n1.4\r\n\r\n**What operating system and processor architecture are you using?** \r\nMac OS X Intel x86_64\r\n\r\n**What did you do?** \r\nAttempt to call SetOutput on a Logger.\r\n\r\n**What did you expect to see?** \r\nThe method to exist and work.\r\n\r\n**What did you see instead?** \r\nThe method does not exist.\r\n\r\n**Background** \r\nI require a way to reopen the output log file. I can do this with the default Logger by creating a new file handle and calling the SetOutput exported module function, which exists and works. I then close the previous file handle. Unfortunately there is no direct way to do this for a custom Logger created by the exported function New as it does not export a SetOutput method. The only way is indirectly with a custom io.Writer and its own mutex to control the switch. This means extraneous code though and having two mutex for the same purpose (synchronising handle access) is undesirable. Granted, performance hit would be negligible in most apps but I can see it impacting anything relying on fastest logging possible (web server access logs?)\r\n\r\nEither way, a simple export of SetOutput for custom Loggers using the internal mutex only would be perfect. If it's agreeable but time is sparse I can make the patch required.\r\n\r\nJason",
	"user": {
		"login": "driskell",
		"id": 939815,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2015-01-30T16:03:13Z",
	"created_at": "2015-01-18T10:30:34Z",
	"updated_at": "2016-06-25T01:58:50Z"
}
