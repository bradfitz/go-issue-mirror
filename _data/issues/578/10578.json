{
	"id": 71163925,
	"number": 10578,
	"state": "closed",
	"title": "sort: I test the sort package, and find the quicksort is slower than my quicksort.",
	"body": "```\r\npackage main\r\n\r\nimport (\r\n\t\"bufio\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"sort\"\r\n\t\"strconv\"\r\n\t\"time\"\r\n)\r\n\r\nfunc checkErr(err error) {\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n}\r\n\r\nfunc qsort(nums []int) {\r\n\tif len(nums) \u003c= 1 {\r\n\t\treturn\r\n\t}\r\n\ti := 0\r\n\tj := len(nums) - 1\r\n\r\n\tm := nums[0]\r\n\tminBlank := true\r\n\tblankPos := 0\r\n\tfor i \u003c= j {\r\n\t\tif minBlank {\r\n\t\t\tif nums[j] \u003c m {\r\n\t\t\t\tnums[blankPos] = nums[j]\r\n\t\t\t\tblankPos = j\r\n\t\t\t\tminBlank = false\r\n\t\t\t}\r\n\t\t\tj--\r\n\t\t} else {\r\n\t\t\tif nums[i] \u003e m {\r\n\t\t\t\tnums[blankPos] = nums[i]\r\n\t\t\t\tblankPos = i\r\n\t\t\t\tminBlank = true\r\n\t\t\t}\r\n\t\t\ti++\r\n\t\t}\r\n\t}\r\n\tnums[blankPos] = m\r\n\tqsort(nums[:blankPos+1])\r\n\tqsort(nums[blankPos+1:])\r\n}\r\n\r\nfunc main() {\r\n\r\n\tnumFile, err := os.Open(\"numbers.txt\")  // this file have 10,000,000 rand number\r\n\tcheckErr(err)\r\n\tdefer numFile.Close()\r\n\r\n\tnums1 := []int{}\r\n\tnums2 := []int{}\r\n\tnums3 := []int{}\r\n\tscanner := bufio.NewScanner(numFile)\r\n\tfor scanner.Scan() {\r\n\t\tn, err := strconv.Atoi(scanner.Text())\r\n\t\tcheckErr(err)\r\n\t\tnums1 = append(nums1, n)\r\n\t\tnums2 = append(nums2, n)\r\n\t\tnums3 = append(nums3, n)\r\n\t}\r\n\tcheckErr(scanner.Err())\r\n\r\n\tt1 := time.Now().UnixNano()\r\n\tqsort(nums1)\r\n\tt1 = time.Now().UnixNano() - t1\r\n\r\n\tt2 := time.Now().UnixNano()\r\n\tsort.Ints(nums2)\r\n\tt2 = time.Now().UnixNano() - t2\r\n\r\n\tt3 := time.Now().UnixNano()\r\n\tsort.Stable(sort.IntSlice(nums3))\r\n\tt3 = time.Now().UnixNano() - t3\r\n\r\n\tfor k, v := range nums1 {\r\n\t\t// fmt.Println(v, nums2[k])\r\n\t\tif v != nums2[k] {\r\n\t\t\tfmt.Println(\"error\")\r\n\t\t}\r\n\t}\r\n\tfmt.Println(t1)\r\n\tfmt.Println(t2)\r\n\tfmt.Println(t3)\r\n}\r\n```\r\nand my program output is:\r\n\r\n1293848796\r\n3958747280\r\n13863178941\r\n\r\nYou can find that my qsort is about three times faster than golang package sort.Ints.\r\n",
	"user": {
		"login": "ldnvnbl",
		"id": 3798479,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2015-04-27T04:00:48Z",
	"created_at": "2015-04-27T03:18:05Z",
	"updated_at": "2016-06-25T02:06:32Z"
}
