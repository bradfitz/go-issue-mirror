{
	"id": 51287474,
	"number": 7970,
	"state": "open",
	"title": "os: race between File.Close, File.Write, and other Opens",
	"body": "\u003cpre\u003eIf you have a goroutine calling f.Close at the same time another calls f.Write, it can\nhappen that the f.Close happens, then an unrelated os.Open reuses the fd, then the\nf.Write writes to the wrong fd. The timing would have to be just right, since Close does\nset f.fd = -1, but it could happen.  We could decide this is not worth protecting\nagainst, or we could introduce an rwlock on the File that must be rlocked across all\nfd-using method implementations and wlocked by Close.\n\nInvestigate for 1.4.\n\nRelated to \u003ca href=\"https://golang.org/issue/5792\"\u003eissue #5792\u003c/a\u003e.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 10,
	"created_at": "2014-05-11T18:25:35Z",
	"updated_at": "2015-11-24T19:24:09Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
