{
	"id": 158642289,
	"number": 15970,
	"state": "closed",
	"title": "os: closing os.Stderr causes panic to write to arbitrary files referenced by fd 2",
	"body": "1. Version: Reproduced on two setups below\r\n(a) 1.7beta1 plan9/amd64\r\n(b) 1.6.2 linux/arm\r\n\r\n2. What did you do?\r\nI first closed standard error, then created a new file, and lastly, called panic(). The panic was written to the created file. \r\n\r\n3. Repeat steps:\r\nThe snippet doesn't produce verifiable results on the Go playground out of the box, compile locally to reproduce. The program creates the file \"/tmp/test2\", if the issue is reproduced then this file will contain panic output from the runtime.\r\n \r\nhttps://play.golang.org/p/D2mIGkI4Oo\r\n\r\n4. What did you expect to see?\r\nI expected no panic output to be written to the newly-created file.\r\n\r\n5. What did you see instead?\r\nThe panic output was written to a newly-created file.\r\n\r\nNotes:\r\n\r\nIn 1.7beta1 (and possibly below) this file contains a function that references fd 2 numerically:\r\n$GOROOT/src/runtime/write_err.go\r\n\r\nThe godoc for os does not mention file descriptor reuse\r\n\r\nNot tested on Windows or other operating systems/architectures.\r\n\r\nPanics are not written if the file is opened with os.Open() or in an explicit read-only mode.",
	"user": {
		"login": "as",
		"id": 8127015,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		}
	],
	"comments": 12,
	"closed_at": "2016-06-09T13:48:24Z",
	"created_at": "2016-06-06T10:03:00Z",
	"updated_at": "2016-06-09T13:48:24Z",
	"milestone": {
		"id": 1714149,
		"number": 40,
		"title": "Go1.7Maybe"
	}
}
