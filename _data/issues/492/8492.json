{
	"id": 51288280,
	"number": 8492,
	"state": "closed",
	"title": "net: LookupNS does not resolve CNAME on windows",
	"body": "\u003cpre\u003ego version devel +d50ba39e60ab Thu Aug 07 13:34:30 2014 +0400 windows/amd64\n\n\u003ca href=\"http://play.golang.org/p/sMfTegpPDk\"\u003ehttp://play.golang.org/p/sMfTegpPDk\u003c/a\u003e\n\n1. run net.LookupNS(\u0026quot;www.golang.com\u0026quot;)\n2. it does not find the NS records on Windows\n\nIt should have returned:\n\u0026amp;{Host:ns2.google.com.}\n\u0026amp;{Host:ns3.google.com.}\n\u0026amp;{Host:ns4.google.com.}\n\u0026amp;{Host:ns1.google.com.}\n\nIt seems that windows syscall.DnsQuery is not resolving the CNAME-s automatically. This\nalso could be my local Windows problem, so someone should check whether it behaves\nsimilarly on other computers.\n\nThis affects all the other windows lookup*() functions as well.\n\nI also noticed that the Windows lookupNS functions contain:\n\n  for p := r; p != nil \u0026amp;\u0026amp; p.Type == syscall.DNS_TYPE_NS; p = p.Next {\n\nWhich could abort before finding the actual record. As an example when the server\ndecides to return [CNAME, A, NS], but I'm not sure whether it is a valid result for\nDnsQuery. (ps. this is not why the resolving in the first example)\u003c/pre\u003e",
	"user": {
		"login": "egonelbre",
		"id": 192964,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 21,
	"closed_at": "2014-12-08T10:47:10Z",
	"created_at": "2014-08-07T12:21:37Z",
	"updated_at": "2016-06-25T01:39:14Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
