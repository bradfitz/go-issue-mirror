{
	"id": 152205068,
	"body": "@dr2chase Sysmon thread can provide such counter, sysmon runs periodically and queries time anyway. However, my plan always was to get rid of sysmon entirely in favor of Windows UMS and Linux fibers. \r\n\r\n@rsc Humm... context switch after unlock is exactly what we want to avoid. The micro benchmark does not test the real thing here. 2 points: (1) the context switch will destroy cache locality (in the benchmark there is no significant data), (2) the context switch will increase latency and memory consumption; consider that a server has 10 requests to process, each takes 1 ms to process, if you process them one-by-one to completion first request will be serviced in 1 ms, second in 2 ms, etc;  if you constantly round-robin between them, all requests will be serviced in 10 ms and working set the sum of 10 requests; servers need to prioritize the oldest work and get rid of it entirely as soon as possible to free all associated resources before switching to new work.\r\nAlso I suspect that in the benchmark most of the goroutines are blocked on the mutex, so there is no significant number of runnable goroutines and you basically switch directly to the just unblocked goroutine. This is faster and also gives false sense of fairness.\r\n\r\n",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-29T14:54:53Z",
	"updated_at": "2015-10-29T14:54:53Z"
}
