{
	"id": 51286070,
	"number": 7009,
	"state": "closed",
	"title": "testing: Assert(...error)",
	"body": "\u003cpre\u003eI have some helper functions that do certain tests and return helpful output as en\nerror. To preserve helpful line numbers I have to do this every time:\n\nif e := test.Equals(obtained, expected); e != nil {\n    t.Fatal(e)\n}\n\nSomething like this would be helpful:\n\nt.Assert(test.Equals(obtained, expected))\n\nCould look something like this:\n\nfunc (c *common) Assert(err ...error) {\n\targs := make([]error, 0, len(errs))\n\tfor _, e := range err {\n\t\tif e != nil {\n\t\t\targs = append(args, e)\n\t\t}\n\t}\n\tif len(args) \u0026gt; 0 {\n\t\tc.log(fmt.Sprintln(args...))\n\t\tc.FailNow()\n\t}\n}\n\nOr even this:\n\nfunc (c *common) Assert(err error) {\n\tif err != nil {\n\t\tc.log(err.Error())\n\t\tc.FailNow()\n\t}\n}\u003c/pre\u003e",
	"user": {
		"login": "lukescott",
		"id": 486224,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:39:04Z",
	"created_at": "2013-12-23T20:18:02Z",
	"updated_at": "2016-06-25T01:24:26Z"
}
