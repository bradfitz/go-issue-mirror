{
	"id": 210242950,
	"body": "This works according to the spec.\r\n\r\nAs @rogpeppe mentioned, in your first example MarshalJSON method is promoted to `base` from `Mes` and is used to encode an instance of `base` type.\r\n\r\nIn your second example (with `Mes1` type) MarshalJSON is not promoted. Relevant parts of the Go spec:\r\n\r\n\u003e A field or method f of an anonymous field in a struct x is called promoted if x.f is a legal **selector** that denotes that field or method f.\r\n\r\nand\r\n\r\n\u003e The following rules apply to selectors:\r\n\u003e\r\n\u003e 1. For a value x of type T or \\*T where T is not a pointer or interface type, x.f denotes the field or method at the shallowest depth in T where there is such an f. **If there is not exactly one f with shallowest depth, the selector expression is illegal.**\r\n",
	"user": {
		"login": "kostya-sh",
		"id": 7126275,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-15T01:40:58Z",
	"updated_at": "2016-04-15T01:41:16Z"
}
