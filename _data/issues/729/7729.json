{
	"id": 51287126,
	"number": 7729,
	"state": "closed",
	"title": "playground: better handling of very large output",
	"body": "\u003cpre\u003eConsider this playground program:\n\n\u003ca href=\"http://play.golang.org/p/0uxQi6r0y7\"\u003ehttp://play.golang.org/p/0uxQi6r0y7\u003c/a\u003e\n\nIt does not, of course, produce 2 billion lines of output. At some point the output is\ntruncated and the program terminated for producing too much output. In my test, the\nresponse JSON object had 43887 elements in the \u0026quot;Events\u0026quot; array.\n\nThe javascript running on the page, though, crashes after printing only part of the\nresponse. In my test, it printed 7948 \u0026quot;asdf\u0026quot;s before crashing with\n\u0026quot;Uncaught RangeError: Maximum call stack size exceeded\u0026quot;. The JS stack trace\nindicates a recursive function 'next' at playground.js:59.\n\nAdditionally, my browser pegs one core for about 20 seconds while producing even this\nmuch output.\n\nI suggest that the limit on output size be truncated more aggressively or the javascript\nbe made more efficient.\u003c/pre\u003e",
	"user": {
		"login": "cespare",
		"id": 318501,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:42:53Z",
	"created_at": "2014-04-08T03:59:34Z",
	"updated_at": "2016-06-25T01:31:42Z"
}
