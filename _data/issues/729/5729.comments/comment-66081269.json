{
	"id": 66081269,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eThe issue is that cgen of a bool value uses bgen (bool jump generator) to compute the\nvalue. For example in 6g the offending code is the call to bgen here:\n\n\t// these call bgen to get a bool value\n\tcase OOROR:\n\tcase OANDAND:\n\tcase OEQ:\n\tcase ONE:\n\tcase OLT:\n\tcase OLE:\n\tcase OGE:\n\tcase OGT:\n\tcase ONOT:\n\t\tp1 = gbranch(AJMP, T, 0);\n\t\tp2 = pc;\n\t\tgmove(nodbool(1), res);\n\t\tp3 = gbranch(AJMP, T, 0);\n\t\tpatch(p1, pc);\n\t\tbgen(n, 1, 0, p2);\n\t\tgmove(nodbool(0), res);\n\t\tpatch(p3, pc);\n\t\tgoto ret;\n\nThe fix would be to introduce a copy of bgen called bvgen that computes a boolean\ninstead of generating a jump, and then call bvgen here. \n\nThe issue exists in the other compilers too.\u003c/pre\u003e\n\n_Labels changed: added **go1.2maybe**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-21T17:01:19Z",
	"updated_at": "2014-12-08T10:31:21Z"
}
