{
	"id": 139511559,
	"number": 14729,
	"state": "closed",
	"title": "cmd/compile: failure to reject embedding of unsafe.Pointer in struct",
	"body": "cmd/compile accepts this invalid Go source file:\r\n\r\n    package p\r\n    import \"unsafe\"\r\n    type s struct { unsafe.Pointer }\r\n\r\ngotype and gccgo correctly reject it:\r\n\r\n    $ gotype p.go\r\n    p.go:3:17: anonymous field type cannot be unsafe.Pointer\r\n    $ gccgo-4.8 -c p.go\r\n    p.go:3:17: error: embedded type may not be a pointer\r\n     type s struct { unsafe.Pointer }\r\n                     ^\r\n\r\nThe Go spec says:\r\n\r\n\u003e A field declared with a type but no explicit field name is an *anonymous field*, also called an *embedded* field or an embedding of the type in the struct. An embedded type must be specified as a type name T or as a pointer to a non-interface type name \\*T, and **T itself may not be a pointer type**.\r\n\r\nAnd later describing package unsafe:\r\n\r\n\u003e **A Pointer is a pointer type** but a Pointer value may not be dereferenced.",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2016-04-21T00:32:22Z",
	"created_at": "2016-03-09T08:36:34Z",
	"updated_at": "2016-04-21T00:32:22Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
