{
	"id": 220817049,
	"body": "Yeah, encoding arbitrary images can be faster, although I wouldn't do it this way. Ideally, we shouldn't call any functions at all per-pixel, inside the inner loop. We want zero calls, rather than one (the AtFunc) or two (At and then RGBA). Instead, I think you'd want something like a\r\n\r\nToRGBA64(dst []color.RGBA64, sRect image.Rectangle) (dRect image.Rectangle)\r\n\r\nmethod (although that name isn't great) to do the conversion in batches, similar to the way that e.g. the io.Reader interface deals with []byte and not byte, and a compress/zlib.Reader implements io.Reader and not io.ByteReader.\r\n\r\nIn hindsight, maybe the core image.Image method should have been this instead of At, but we can't change that until Go 2.\r\n\r\nFor completeness, a separate approach (type switching on the source image type) is taken by the image/draw and golang.org/x/image/draw pacages.",
	"user": {
		"login": "nigeltao",
		"id": 8565232,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-22T06:37:51Z",
	"updated_at": "2016-05-22T06:37:51Z"
}
