{
	"id": 73807675,
	"number": 10736,
	"state": "open",
	"title": "x/tools/refactor: \"Extract\" features",
	"body": "This is a feature request, not a bug.\r\n\r\nIt would be nice to have a command that makes it easy to extract methods and functions from code.\r\n\r\nSomething like: a command that takes a range of code in a file that should be replaced with a function or method call and a name for that function or method (let's just call it \"func\"). \r\n\r\nThe code in the given range would be replaced in the file with a call to the new func (with return values, too) and a definition of the func would be inserted into the current file next door to the current func (or, wherever the struct is defined in the current package if it's only in one place). The arguments and return value for the func would be inferred from the variables the code range uses.\r\n\r\nIt would be nice for the command to infer whether to build a function or method by looking to see if the range of code given is inside a method and if the code refers to the method's target.\r\n\r\nMore magic would be to allow the addition of functions and methods to structs in other packages with this tool.",
	"user": {
		"login": "jmhodges",
		"id": 598,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "alandonovan",
		"id": 8433140,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"created_at": "2015-05-07T02:22:14Z",
	"updated_at": "2016-02-04T14:57:13Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
