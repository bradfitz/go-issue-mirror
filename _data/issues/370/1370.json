{
	"id": 51277713,
	"number": 1370,
	"state": "closed",
	"title": "Effective Go panic example changes error value",
	"body": "by **soniakeys**:\n\n\u003cpre\u003eEffective Go, the \u0026quot;Error\u0026quot; section, \u0026quot;Recover\u0026quot; under that, then the\nsecond block of example code, contains the following line,\n\n            err = e.(Error) // Will re-panic if not a parse error.\n\nThat's technically true, but it's rather sloppy, as it will re-panic with an interface\nconversion error rather than the original error.  The text that follows states,\n\n\u0026quot;...the type assertion will fail, causing a run-time error that continues the stack\nunwinding as though nothing had interrupted it.\u0026quot;\n\nThat's actually not quite true, as the run-time error has now changed to an interface\nconversion error.\n\nI suggest replacing the line of code with something more like,\n\n            var ok bool\n            if err, ok = e.(Error); !ok {\n                panic(Error)   // re-panic if not a parse error.\n            }\n\nand then rewording the text accordingly.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:08:00Z",
	"created_at": "2010-12-24T16:24:43Z",
	"updated_at": "2016-06-24T19:23:30Z"
}
