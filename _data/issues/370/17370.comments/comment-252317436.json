{
	"id": 252317436,
	"body": "The current compiler seems good to eliminate bound checks for constant indices, but does not do much for non-constant not inside a loop.\r\nOne quick thing you can do is to use constant indices, like:\r\n```\r\nfunc blah() {\r\n        b := buf\r\n        l := len(b)\r\n        if l-i \u003c 4 {\r\n                goto fail\r\n        }\r\n        b = b[i:]\r\n        _ = b[3]\r\n        if b[0] \u003e 0x80 {\r\n                goto done\r\n        }\r\n        i++\r\n        if b[1] \u003e 0x80 {\r\n                goto done\r\n        }\r\n        i++\r\n        if b[2] \u003e 0x80 {\r\n                goto done\r\n        }\r\n        i++\r\n        if b[3] \u003e 0x80 {\r\n                goto done\r\n        }\r\n        i++\r\n\r\ndone:\r\n        return\r\nfail:\r\n        panic(\"bad\")\r\n}\r\n```\r\nAt least it can get down to two bound checks.\r\n",
	"user": {
		"login": "cherrymui",
		"id": 14119929,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-07T17:51:02Z",
	"updated_at": "2016-10-07T17:51:02Z"
}
