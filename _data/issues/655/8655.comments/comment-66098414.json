{
	"id": 66098414,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2 by **xofyarg**:\n\n\u003cpre\u003eIf I strip the extension from the import path, then it is not go get-able. Here's a\nquote from `go help importpath':\n\n\u0026gt; For code hosted on other servers, import paths may either be qualified\n\u0026gt; with the version control type, or the go tool can dynamically fetch\n\u0026gt; the import path over https/http and discover where the code resides\n\u0026gt; from a \u0026lt;meta\u0026gt; tag in the HTML.\n\u0026gt; \n\u0026gt; To declare the code location, an import path of the form\n\u0026gt; \n\u0026gt;         repository.vcs/path\n\u0026gt; \n\u0026gt; specifies the given repository, with or without the .vcs suffix,\n\u0026gt; using the named version control system, and then the path inside\n\u0026gt; that repository.  The supported version control systems are:\n\u0026gt; \n\u0026gt;         Bazaar      .bzr\n\u0026gt;         Git         .git\n\u0026gt;         Mercurial   .hg\n\u0026gt;         Subversion  .svn\n\u0026gt; \n\u0026gt; For example,\n\u0026gt; \n\u0026gt;         import \"example.org/user/foo.hg\"\n\nThe go get command has some popular repositories hardcoded, to support custom repo, I\nneed to show the repo type.\n\nThe package is in our private server(sorry, not accessable from outside), and we have\nsome code like this: \u003ca href=\"http://play.golang.org/p/6IiGpjOjgN\"\u003ehttp://play.golang.org/p/6IiGpjOjgN\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-09-04T15:32:16Z",
	"updated_at": "2014-12-22T06:37:12Z"
}
