{
	"id": 216218872,
	"body": "@kostya-sh \r\n\r\n\u003e Term \"repository\" is not defined\r\n\r\nThe first footnote gives details - it's the same definition as assumed [here](https://golang.org/doc/code.html). But I agree the question still remains whether \"repository\" is formally defined somewhere?\r\n\r\n\u003e What if the source code in GOPATH is not coming from a VSC or coming from Subversion that supports checking out a directory?\r\n\r\nOpen question - I admit the only consideration thus far has been for code that is part of a \"repository\". I've added an \"open questions\" section at the bottom referencing this question.\r\n\r\n\u003e if a repository contains multiple public binaries then it is not necessary to copy dependencies multiple times. vendored dependencies can be placed under cmd/vendor\r\n\r\nIndeed that's one approach to share vendored code between binaries. But the \"symlink\" approach helps to facilitate the approach of sharing that \"vendor\" with the library code (see next point)\r\n\r\n\u003e As far as I can tell this proposal doesn't solve \"library and program in the same repository\" problem.\r\n\r\nThis proposal by itself does not, no. But the repository linked to from the \"Motivating example\" section outlines how that problem can be solved by using a combination of \"symlinks\" and GOPATH augmentation.",
	"user": {
		"login": "myitcv",
		"id": 3374574,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-02T12:02:50Z",
	"updated_at": "2016-05-02T12:02:50Z"
}
