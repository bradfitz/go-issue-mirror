{
	"id": 190384083,
	"body": "I was thinking typedmemmove could check t.align but I guess that doesn't\nbuy much over checking the alignment in memmove indeed.\n\nOn 1 March 2016 at 05:18, Keith Randall \u003cnotifications@github.com\u003e wrote:\n\n\u003e typedmemmove is itself generic. So I guess one test/branch in typedmemmove\n\u003e would ensure that both the source and destination are aligned and could\n\u003e call a specialized memmove routine. We can do the same thing in memmove\n\u003e itself with an or/test/branch. Doesn't seem like a big win.\n\u003e\n\u003e I agree with your size feelings. It's more important for Go to get the 1\n\u003e and 2 word memmoves fast. Of course it depends a lot on the benchmark.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/14507#issuecomment-190274023\u003e.\n\u003e\n",
	"user": {
		"login": "mwhudson",
		"id": 672022,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-29T20:53:05Z",
	"updated_at": "2016-02-29T20:53:05Z"
}
