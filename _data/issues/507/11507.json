{
	"id": 92513014,
	"number": 11507,
	"state": "closed",
	"title": "x/tools/cmd/present: playground support leaks goroutines",
	"body": "To reproduce, start `present`, navigate to `localhost:3999` in your browser, and open a presentation. Then hit reload a bunch of times. For each reload, a new playground socket handler gets spun up, each of which permanently leaks a goroutine.\r\n\r\nHitting `present` with a `SIGQUIT` yields lots of these:\r\n\r\n```\r\ngoroutine 52 [chan receive, 6 minutes]:\r\ngolang.org/x/tools/playground/socket.funcÂ·002()\r\n\t$GOPATH/src/golang.org/x/tools/playground/socket/socket.go:125 +0x10b\r\ncreated by golang.org/x/tools/playground/socket.socketHandler\r\n\t$GOPATH/src/golang.org/x/tools/playground/socket/socket.go:131 +0x2b0\r\n```\r\n\r\nNote that in socketHandler.go line 125 there's a range loop reading from a channel that never gets closed.\r\n\r\nNoticed because I added `net/http/pprof` to `present` for a demo and saw the goroutines profile number steadily increasing.\r\n\r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2015-10-30T05:20:39Z",
	"created_at": "2015-07-02T00:12:34Z",
	"updated_at": "2015-10-30T05:20:39Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
