{
	"id": 51283840,
	"number": 5568,
	"state": "closed",
	"title": "go/types: go vet INTERNAL PANIC",
	"body": "\u003cpre\u003eWhat is the expected output?\n\ngo tool vet panics on some of our internal code.\n\nReducing it is quite a big job. If there isn't enough info here, let me know and I'll go\nfor it.\n\nINTERNAL PANIC: runtime error: invalid memory address or nil pointer dereference\npanic: runtime error: invalid memory address or nil pointer dereference [recovered]\n\tpanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x10 pc=0x4eb475]\n\ngoroutine 1 [running]:\ncode.google.com/p/go.tools/go/types.funcÂ·003()\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/go/types/check.go:447 +0x175\ncode.google.com/p/go.tools/go/types.identicalMethods(0xc2001e53e0, 0x1, 0x1,\n0xc2001c9d90, 0x1, ...)\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/go/types/predicates.go:219 +0xe5\ncode.google.com/p/go.tools/go/types.IsIdentical(0xc20008db00, 0xc2001e2d80,\n0xc20008db00, 0xc2001c6760, 0xc2000cd700, ...)\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/go/types/predicates.go:165 +0x8de\ncode.google.com/p/go.tools/go/types.(*operand).isAssignable(0xc2001b7ac0, 0xc2000cd980,\n0xc20008db40, 0xc20020d420, 0xc20016d000, ...)\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/go/types/operand.go:144 +0x172\ncode.google.com/p/go.tools/go/types.(*checker).assignment(0xc2000af160, 0xc2001b7ac0,\n0xc20008db40, 0xc20020d420, 0xc20008db40, ...)\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/go/types/stmt.go:36 +0x1dd\ncode.google.com/p/go.tools/go/types.(*checker).argument(0xc2000af160, 0xc2001c6f60, 0x0,\n0xc2000cd680, 0xc20006dbc0, ...)\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/go/types/expr.go:984 +0x23a\ncode.google.com/p/go.tools/go/types.(*checker).rawExpr(0xc2000af160, 0xc2001b7ac0,\n0xc2000cd700, 0xc2000cd800, 0x0, ...)\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/go/types/expr.go:1577 +0x353a\ncode.google.com/p/go.tools/go/types.(*checker).expr(0xc2000af160, 0xc2001b7ac0,\n0xc2000cd700, 0xc2000cd800, 0x0, ...)\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/go/types/expr.go:1727 +0x88\ncode.google.com/p/go.tools/go/types.(*checker).assignNtoM(0xc2000af160, 0xc20006db40,\n0x2, 0x2, 0xc2000aaa70, ...)\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/go/types/stmt.go:188 +0x1b4\ncode.google.com/p/go.tools/go/types.(*checker).stmt(0xc2000af160, 0xc2000cd7c0,\n0xc2000cd840)\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/go/types/stmt.go:375 +0x3846\ncode.google.com/p/go.tools/go/types.(*checker).stmtList(0xc2000af160, 0xc20006dbe0, 0x2,\n0x2)\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/go/types/stmt.go:247 +0x68\ncode.google.com/p/go.tools/go/types.check(0xc2000cd980, 0x6060a0, 0x1, 0xc2000cd440,\n0xc200000268, ...)\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/go/types/check.go:485 +0x4cf\ncode.google.com/p/go.tools/go/types.(*Context).Check(0xc2000cd980, 0x6060a0, 0x1,\n0xc2000cd440, 0xc200000268, ...)\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/go/types/api.go:112 +0x6c\nmain.(*Package).check(0xc2000cd8c0, 0xc2000cd440, 0xc200000268, 0x1, 0x1, ...)\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/cmd/vet/types.go:32 +0x168\nmain.doPackage(0x6060a0, 0x1, 0xc20006d010, 0x1, 0x1, ...)\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/cmd/vet/main.go:226 +0x8f5\nmain.main()\n\t/home/alberts/go/src/pkg/code.google.com/p/go.tools/cmd/vet/main.go:144 +0x665\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n6g\n\nWhich operating system are you using?\n\nlinux\n\nWhich version are you using?  (run 'go version')\n\ntip\u003c/pre\u003e",
	"user": {
		"login": "alberts",
		"id": 409689,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:30:17Z",
	"created_at": "2013-05-27T15:17:45Z",
	"updated_at": "2016-06-24T22:41:12Z"
}
