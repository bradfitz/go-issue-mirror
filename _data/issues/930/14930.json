{
	"id": 142983707,
	"number": 14930,
	"state": "open",
	"title": "runtime: report \"out of memory\" if Solaris mmap fails with EAGAIN",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\nGo 1.6\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\n```\r\njb@lxslave:~$ go env\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\njb@lxslave:~$ \r\n```\r\n\r\nCross compiled for solaris/amd64.\r\n\r\n3. What did you do?\r\n\r\nRunning latest version (master, v0.13.0-beta.0-147-g31362df) of Syncthing. Used to run stable on Solaris.\r\n\r\n4. What did you expect to see?\r\n\r\nNo unexpected crashes.\r\n\r\n5. What did you see instead?\r\n\r\n```\r\nruntime: address space conflict: map(0xc85b130000) = 0xb\r\nfatal error: runtime: address space conflict\r\n\r\nruntime stack:\r\nruntime.throw(0xc9e8a0, 0x1f)\r\n        /usr/local/go/src/runtime/panic.go:530 +0x99 fp=0xfffffd7ffb5ffc58 sp=0xfffffd7ffb5ffc40\r\nruntime.sysMap(0xc85b130000, 0x100000, 0xfffffd7fff28d500, 0x1152d18)\r\n        /usr/local/go/src/runtime/mem_bsd.go:84 +0x139 fp=0xfffffd7ffb5ffc98 sp=0xfffffd7ffb5ffc58\r\nruntime.(*mheap).sysAlloc(0x1138760, 0x100000, 0xfffffd7ffb5ffda0)\r\n        /usr/local/go/src/runtime/malloc.go:429 +0x191 fp=0xfffffd7ffb5ffd20 sp=0xfffffd7ffb5ffc98\r\nruntime.(*mheap).grow(0x1138760, 0x8, 0x0)\r\n        /usr/local/go/src/runtime/mheap.go:651 +0x63 fp=0xfffffd7ffb5ffd78 sp=0xfffffd7ffb5ffd20\r\nruntime.(*mheap).allocSpanLocked(0x1138760, 0x4, 0xfffffd7ffe5b5268)\r\n        /usr/local/go/src/runtime/mheap.go:553 +0x4e3 fp=0xfffffd7ffb5ffdd0 sp=0xfffffd7ffb5ffd78\r\nruntime.(*mheap).alloc_m(0x1138760, 0x4, 0x10000000042, 0xfffffd7ffe5b5268)\r\n        /usr/local/go/src/runtime/mheap.go:437 +0x122 fp=0xfffffd7ffb5ffe00 sp=0xfffffd7ffb5ffdd0\r\nruntime.(*mheap).alloc.func1()\r\n        /usr/local/go/src/runtime/mheap.go:502 +0x41 fp=0xfffffd7ffb5ffe30 sp=0xfffffd7ffb5ffe00\r\nruntime.systemstack(0xfffffd7ffb5ffe50)\r\n        /usr/local/go/src/runtime/asm_amd64.s:307 +0xc1 fp=0xfffffd7ffb5ffe38 sp=0xfffffd7ffb5ffe30\r\nruntime.(*mheap).alloc(0x1138760, 0x4, 0x10000000042, 0x452818)\r\n        /usr/local/go/src/runtime/mheap.go:503 +0x63 fp=0xfffffd7ffb5ffe80 sp=0xfffffd7ffb5ffe38\r\nruntime.(*mcentral).grow(0x113b710, 0x0)\r\n        /usr/local/go/src/runtime/mcentral.go:209 +0x93 fp=0xfffffd7ffb5ffee8 sp=0xfffffd7ffb5ffe80\r\nruntime.(*mcentral).cacheSpan(0x113b710, 0xfffffd7ffe5b5268)\r\n        /usr/local/go/src/runtime/mcentral.go:89 +0x47d fp=0xfffffd7ffb5fff28 sp=0xfffffd7ffb5ffee8\r\nruntime.(*mcache).refill(0xfffffd7fff10f4b0, 0x42, 0xfffffd7ffe5b5268)\r\n        /usr/local/go/src/runtime/mcache.go:119 +0xd5 fp=0xfffffd7ffb5fff60 sp=0xfffffd7ffb5fff28\r\nruntime.mallocgc.func2()\r\n        /usr/local/go/src/runtime/malloc.go:642 +0x2b fp=0xfffffd7ffb5fff80 sp=0xfffffd7ffb5fff60\r\nruntime.systemstack(0xc820020000)\r\n        /usr/local/go/src/runtime/asm_amd64.s:291 +0x86 fp=0xfffffd7ffb5fff88 sp=0xfffffd7ffb5fff80\r\nruntime.mstart()\r\n        /usr/local/go/src/runtime/proc.go:1048 fp=0xfffffd7ffb5fff90 sp=0xfffffd7ffb5fff88\r\n```\r\n",
	"user": {
		"login": "calmh",
		"id": 125426,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "OS-Solaris"
		}
	],
	"comments": 8,
	"created_at": "2016-03-23T14:58:05Z",
	"updated_at": "2016-09-28T19:19:50Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
