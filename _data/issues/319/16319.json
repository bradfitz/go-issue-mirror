{
	"id": 164835993,
	"number": 16319,
	"state": "closed",
	"title": "Fork/Exec perfomance issue",
	"body": "Good morning, \r\n\r\nI'm reporting what seems to be a performance issue for the Fork Exec of golang.\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\ngo1.5.1 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\nDebian jessie.\r\n\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/faquin/Documents/inria/workspace\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/go\"\r\nGOTOOLDIR=\"/usr/lib/go/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n3. What did you do?\r\n\r\nI try to execute a lot of small commands efficiently.\r\nHere is some runnable code showing the issue :\r\n\r\n```\r\npackage main\r\nimport (\r\n    \"fmt\"\r\n    \"strconv\"\r\n    \"os/exec\"\r\n)\r\n\r\nfunc main() {\r\n    for i:= 0; i\u003c2000; i++{\r\n        var cmd *exec.Cmd = exec.Command(\"echo\", strconv.Itoa(i));\r\n        o, _ := cmd.CombinedOutput();\r\n        fmt.Println(string(o));\r\n    }\r\n}\r\n```\r\n\r\nrunning time :\r\n```\r\n\r\ntime ./main  \u003e output\r\n\r\nreal\t0m2.048s\r\nuser\t0m0.276s\r\nsys\t0m0.704s\r\n\r\n```\r\nWhen not taking care of the output : \r\n```\r\npackage main\r\n\r\nimport (\r\n    \"strconv\"\r\n    \"os/exec\"\r\n)\r\n\r\nfunc main() {\r\n    for i:= 0; i\u003c2000; i++{\r\n        var cmd *exec.Cmd = exec.Command(\"echo\", strconv.Itoa(i));\r\n        cmd.Run();\r\n    }\r\n}\r\n```\r\n\r\nRunning time :\r\n\r\n```\r\ntime ./main \u003e t\r\n\r\nreal\t0m2.035s\r\nuser\t0m0.176s\r\nsys\t0m0.504s\r\n```\r\n\r\n4. What did you expect to see?\r\n\r\nA running time in the same order of magnitude that \r\n```\r\ntime for i in `seq 1 2000`; do echo \"echo $i\" ; done \u003e output\r\n```\r\n\r\n```\r\nreal\t0m0.030s\r\nuser\t0m0.016s\r\nsys\t0m0.012s\r\n```\r\n\r\n5. What did you see instead?\r\n\r\nA running time 100x slower.\r\n\r\nI've manged a tiny hack, enable to obtain a suffisent running time but it present some inconvenient, I cannot get any error code or really separate executions output.\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n    \"strconv\"\r\n    \"fmt\"\r\n    \"bufio\"\r\n    \"os/exec\"\r\n)\r\n\r\nfunc main() {\r\n    var cmd *exec.Cmd = exec.Command(\"/bin/bash\");\r\n    in,_   := cmd.StdinPipe();\r\n    out,_  := cmd.StdoutPipe();\r\n    reader := bufio.NewReader(out);\r\n    cmd.Start();\r\n    for i:= 0; i\u003c2000; i++{\r\n        in.Write([]byte(\"echo \"+strconv.Itoa(i) + \" 2\u003e\u00261 \\n\"));\r\n        s, _ := reader.ReadString('\\n')\r\n        fmt.Println(s);\r\n    }\r\n}\r\n```\r\n\r\n\r\nRunning time :\r\n```\r\ntime ./main \u003e t\r\n\r\nreal\t0m0.076s\r\nuser\t0m0.012s\r\nsys\t0m0.020s\r\n```\r\n\r\nIs there something to do on this subject ?\r\n\r\nThanks for your attention,\r\nThomas\r\n",
	"user": {
		"login": "TLavocat",
		"id": 16318786,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-07-11T13:37:50Z",
	"created_at": "2016-07-11T13:23:53Z",
	"updated_at": "2016-07-11T13:57:01Z"
}
