{
	"id": 189577475,
	"body": "Thanks @randall77. I'm actively trying to track this down. You're right the -N -l is a complete red herring. Apologies for derailing on that.\r\n\r\nI've tried various versions of golang - 1.5.1, 1.5.3 and 1.6 (currently reverted back to 1.5.1). This is all on Windows.\r\n\r\nClone `https://github.com/docker/docker` to `c:\\go\\src\\github.com\\docker\\docker` (e: drive in my case, I use a separate drive for the sources from the system drive)\r\n\r\nFrom `c:\\go\\src\\github.com\\docker\\docker\\docker`, `go build`. This builds the 'client' binary (not the joint client and daemon binary).\r\n\r\nIn liteide, set a breakpoint (F9) on the very first line in `func main()` of c:\\go\\src\\github.com\\docker\\docker\\docker\\docker.go, `if reexec.Init() {`. Hit F5 (run) and the breakpoint triggers.\r\n\r\n![triggers](https://cloud.githubusercontent.com/assets/10522484/13370867/ff3f7c74-dcca-11e5-8288-a443e50847d8.JPG)\r\n\r\nRepeat exactly the same, but this time, include the daemon code conditionally compiled in using `go build -tags daemon`. Same breakpoint, but it just doesn't trigger.\r\n\r\n![notrigger](https://cloud.githubusercontent.com/assets/10522484/13370876/7ce30894-dccb-11e5-83fe-2b8ac72a04ba.JPG)\r\n\r\n[Hopefully that will work, I've got some wrapper scripts which set up some autogen folders needed to compile, and a few utilities such as rsrc installed, so they may be needed. I'd need to sort out instructions for those probably.]\r\n\r\nEdit: Oops, wrong screenshot for second one. I did set exactly the same breakpoint, on the very first line executed.",
	"user": {
		"login": "jhowardmsft",
		"id": 10522484,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-27T04:57:48Z",
	"updated_at": "2016-02-27T05:00:54Z"
}
