{
	"id": 51276335,
	"number": 319,
	"state": "closed",
	"title": "cgo can't handle structs with members named 'map' (or other go keywords possibly)",
	"body": "by **wmundt42**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. Run cgo on the following:\n\npackage main\n\n/*\n   typedef struct { int map; } foo;\n*/\nimport \u0026quot;C\u0026quot;;\nimport \u0026quot;fmt\u0026quot;;\n\nfunc main() {\n        var x C.foo;\n        fmt.Println(x);\n}\n\n2. Attempt to compile the generated files.\n\nWhat is the expected output? What do you see instead?\n\nExpected: executable that prints \u0026quot;0\u0026quot; on a line.\n\nSeen instead, more or less:\n \u0026quot;test4.cgo2.go:9: syntax error near map\u0026quot;\n\nWhat is your $GOOS?  $GOARCH?\n\nGOOS=linux GOARCH=386\n\nWhich revision are you using?  (hg identify)\n\n2f32e74ab96e tip (r4186)\n\nPlease provide any additional information below.\n\nFor a real-world example, I was attempting to write bindings for libidn;\nthe stringprep function takes a struct including such a member.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:04:06Z",
	"created_at": "2009-11-23T21:17:40Z",
	"updated_at": "2016-06-24T19:08:18Z"
}
