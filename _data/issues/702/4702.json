{
	"id": 51282505,
	"number": 4702,
	"state": "closed",
	"title": "cmd/go: fix docs for -test.timeout",
	"body": "by **myannikos**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n\nRun any test that takes longer than 1 minute with\n\n  go test -test.bench . -test.timeout 0\n\nWhat is the expected output?\n\n  The test should run forever OR with the default 10 minutes limit (which is not well documented by the way)\n\nWhat do you see instead?\n\n  The test is aborted after 1 minute\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n  6g\n\nWhich operating system are you using?\n\n  Debian squeeze x86-64\n\nWhich version are you using?  (run 'go version')\n \n  1.0.3\n\nPlease provide any additional information below.\n\nThis is either a documentation issue:\n\n[go test usage info]\n  -test.timeout=0: if positive, sets an aggregate time limit for all tests\n\nOr an implementation issue:\n\npkg/code.google.com/p/go/src/cmd/go/test.go:\n\n    // If a test timeout was given and is parseable, set our kill timeout\n    // to that timeout plus one minute.  This is a backup alarm in case\n    // the test wedges with a goroutine spinning and its background\n    // timer does not get a chance to fire.\n    if dt, err := time.ParseDuration(testTimeout); err == nil {\n        testKillTimeout = dt + 1*time.Minute\n    }\n\n(this should probably be \u0026quot;parseable and positive\u0026quot;)\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Suggested"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:24:54Z",
	"created_at": "2013-01-24T14:30:45Z",
	"updated_at": "2016-06-24T22:31:43Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
