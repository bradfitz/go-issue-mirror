{
	"id": 121002887,
	"body": "The same \"invalid relocation\" error occurred a few more times on build.golang.org over the weekend:\r\n\r\nopenbsd/386 http://build.golang.org/log/e6b76c598ae8232a031d8494e724fd395ba784ef\r\n\r\n    go.string.hdr.\"func(*runtime.wbufptr) *runtime.workbuf\": go.string.hdr.\"func(*runtime.wbufptr) *runtime.workbuf\": invalid relocation 415022496+173 not in [0,8)\r\n\r\nopenbsd/386 http://build.golang.org/log/8a864cdb337aad199245615a5e9e74c62f3e6424\r\n\r\n    go.string.hdr.\"logput\": go.string.hdr.\"logput\": invalid relocation 414345424+173 not in [0,8)\r\n\r\nopenbsd/386 http://build.golang.org/log/f079859ada15356800d9dcba0b1b838901dbd6ed\r\n\r\n    type..alg.runtime.bgMarkSignal: type..alg.runtime.bgMarkSignal: invalid relocation 413976688+173 not in [0,8)\r\n\r\nopenbsd/amd64 http://build.golang.org/log/6d93047a2121ed1c02ca23338a71a566cd48c196\r\n\r\n    type..alg24: type..alg24: invalid relocation 48+0 not in [0,16)\r\n\r\nNo rdint panics, so it's seemingly not file corruption/desync at least.\r\n\r\nIt also occurs to me now that symbols like \"type..alg.runtime.bgMarkSignal\" are only defined in runtime.a, which is only compiled once and reused for all builds/tests.  If the corruption was in the compiler, every link should fail.  So it seems like something must be going wrong in cmd/link.",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-13T17:42:32Z",
	"updated_at": "2015-07-13T17:42:32Z"
}
