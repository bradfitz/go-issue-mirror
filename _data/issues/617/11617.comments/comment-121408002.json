{
	"id": 121408002,
	"body": "Given that the doubleCheck test is passing, it sounds like we might be writing out the bitmap correctly but corrupting it later.\r\n\r\nIf possible, it would be great to get a core dump. Can you tweak your sanity check to also print \u0026s.R and panic, set the environment variable GOTRACEBACK=crash, `ulimit -c unlimited` to enable core dumps, and try to reproduce again? Given that s.R is right at the end of LSym, my best guess at this point is that the object allocated after the LSym is somehow clobbering the last byte of LSym's bitmap, so it would be helpful to see where that bitmap is and what the bitmap around there looks like. In support of this is that LSym is exactly 176 bytes on 32-bit, which is one of the size classes, so it ends right before the next object begins. OTOH, we've also seen this on 64-bit, where LSym is 296 bytes, which should leave plenty of padding between it and the next object.\r\n\r\nDo you have any output from your second sanity check Println handy (ideally a few instances)? I think there's enough there that I could work out some of the answer just from that.",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-14T22:12:45Z",
	"updated_at": "2015-07-14T22:12:45Z"
}
