{
	"id": 54626178,
	"number": 9617,
	"state": "closed",
	"title": "time: parsing reference times seems to ignore three-letter timezones",
	"body": "According to the docs for package time, the RFC822(Z) format of the reference time is\r\n\r\n        RFC822      = \"02 Jan 06 15:04 MST\"\r\n        RFC822Z     = \"02 Jan 06 15:04 -0700\"\r\n\r\nBut when I try to parse these times, the RFC822 one gets parsed as GMT rather than MST:\r\n\r\nrfc822 in RFC850 and unix seconds is Monday, 02-Jan-06 15:04:00 MST 1136214240\r\nrfc822z in RFC850 and unix seconds is Monday, 02-Jan-06 15:04:00 -0700 1136239440\r\nrfc822 == rfc822z: false\r\n\r\nfurthermore, once parsed, the result of Format into RFC850 doesn't conform to its own definition and can't be parsed into RFC850.\r\n\r\nhttp://play.golang.org/p/8q0OkLkNQ-\r\n\r\n(in case that link expires:)\r\n\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"time\"\r\n)\r\n\r\nfunc prt(name string, t time.Time) {\r\n\tfmt.Println(name, \"in RFC850 and unix seconds is\", t.Format(time.RFC850), t.Unix())\r\n}\r\n\r\nfunc main() {\r\n\trfc822, err1 := time.Parse(time.RFC822, time.RFC822)\r\n\trfc822z, err1z := time.Parse(time.RFC822Z, time.RFC822Z)\r\n\r\n\tif err1 != nil || err1z != nil {\r\n\t\tfmt.Println(err1)\r\n\t\tfmt.Println(err1z)\r\n\t\treturn\r\n\t}\r\n\tprt(\"rfc822\", rfc822)\r\n\tprt(\"rfc822z\", rfc822z)\r\n\tfmt.Println(\"rfc822 == rfc822z:\", rfc822.Equal(rfc822z))\r\n\r\n\trfc850, err850 := time.Parse(time.RFC850, rfc822z.Format(time.RFC850))\r\n\tif err850 != nil {\r\n\t\tfmt.Println(err850)\r\n\t\treturn\r\n\t}\r\n\tprt(\"rfc850\", rfc850)\r\n}",
	"user": {
		"login": "jovlinger",
		"id": 10566845,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 9,
	"closed_at": "2015-04-10T04:38:57Z",
	"created_at": "2015-01-16T21:19:08Z",
	"updated_at": "2016-06-25T01:58:44Z"
}
