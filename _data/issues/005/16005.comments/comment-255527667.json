{
	"id": 255527667,
	"body": "I actually don't see `*http.Transport` ever being collected with Go 1.6, Go 1.7, or tip, even ignoring the Expect100Continue logic.\r\n\r\nHere's my version:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"io\"\r\n\t\"io/ioutil\"\r\n\t\"log\"\r\n\t\"net/http\"\r\n\t\"net/http/httptest\"\r\n\t\"runtime\"\r\n\t\"time\"\r\n)\r\n\r\nfunc main() {\r\n\tts := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\r\n\t\tio.WriteString(w, \"Hello\")\r\n\t}))\r\n\tvar ms runtime.MemStats\r\n\tfor {\r\n\t\truntime.ReadMemStats(\u0026ms)\r\n\t\tlog.Printf(\"Before request: %d goroutines, %d heapalloc, %d GC\", runtime.NumGoroutine(), ms.HeapAlloc, ms.NumGC)\r\n\r\n\t\tdoRequest(ts.URL)\r\n\r\n\t\ttime.Sleep(500 * time.Millisecond)\r\n\t\truntime.GC()\r\n\t\truntime.GC()\r\n\r\n\t\truntime.ReadMemStats(\u0026ms)\r\n\t\tlog.Printf(\" After request: %d goroutines, %d heapalloc, %d GC\", runtime.NumGoroutine(), ms.HeapAlloc, ms.NumGC)\r\n\t}\r\n}\r\n\r\nfunc doRequest(url string) {\r\n\ttr := \u0026http.Transport{\r\n\t\tDisableKeepAlives: true,\r\n\t}\r\n\tc := \u0026http.Client{Transport: tr}\r\n\r\n\truntime.SetFinalizer(c, func(*http.Client) { fmt.Println(\"--- http.Client GONE\") })\r\n\truntime.SetFinalizer(tr, func(*http.Transport) { fmt.Println(\"--- http.Transport GONE\") })\r\n\r\n\tresp, err := c.Get(url)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\tfmt.Println(\"got response\")\r\n\r\n\tio.Copy(ioutil.Discard, resp.Body)\r\n\tresp.Body.Close()\r\n\r\n\t// Pointless with DisableKeepAlives above, but:\r\n\ttime.Sleep(10 * time.Millisecond)\r\n\ttr.CloseIdleConnections()\r\n}\r\n```\r\n\r\nAnd the output:\r\n\r\n```\r\n2016/10/22 06:08:44 Before request: 3 goroutines, 298336 heapalloc, 0 GC\r\ngot response\r\n2016/10/22 06:08:45  After request: 3 goroutines, 294680 heapalloc, 2 GC\r\n2016/10/22 06:08:45 Before request: 3 goroutines, 295824 heapalloc, 2 GC\r\n--- http.Client GONE\r\ngot response\r\n2016/10/22 06:08:45  After request: 3 goroutines, 297464 heapalloc, 4 GC\r\n--- http.Client GONE\r\n2016/10/22 06:08:45 Before request: 3 goroutines, 298816 heapalloc, 4 GC\r\ngot response\r\n2016/10/22 06:08:46  After request: 3 goroutines, 300552 heapalloc, 6 GC\r\n2016/10/22 06:08:46 Before request: 3 goroutines, 301872 heapalloc, 6 GC\r\n--- http.Client GONE\r\ngot response\r\n--- http.Client GONE\r\n2016/10/22 06:08:47  After request: 3 goroutines, 302392 heapalloc, 8 GC\r\n2016/10/22 06:08:47 Before request: 3 goroutines, 303744 heapalloc, 8 GC\r\ngot response\r\n2016/10/22 06:08:47  After request: 3 goroutines, 304760 heapalloc, 10 GC\r\n--- http.Client GONE\r\n2016/10/22 06:08:47 Before request: 3 goroutines, 306112 heapalloc, 10 GC\r\ngot response\r\n--- http.Client GONE\r\n2016/10/22 06:08:48  After request: 3 goroutines, 306552 heapalloc, 12 GC\r\n2016/10/22 06:08:48 Before request: 3 goroutines, 307904 heapalloc, 12 GC\r\ngot response\r\n2016/10/22 06:08:48  After request: 3 goroutines, 309304 heapalloc, 14 GC\r\n--- http.Client GONE\r\n2016/10/22 06:08:48 Before request: 3 goroutines, 310656 heapalloc, 14 GC\r\ngot response\r\n2016/10/22 06:08:49  After request: 3 goroutines, 311592 heapalloc, 16 GC\r\n--- http.Client GONE\r\n2016/10/22 06:08:49 Before request: 3 goroutines, 312944 heapalloc, 16 GC\r\ngot response\r\n2016/10/22 06:08:49  After request: 3 goroutines, 313240 heapalloc, 18 GC\r\n--- http.Client GONE\r\n2016/10/22 06:08:49 Before request: 3 goroutines, 314592 heapalloc, 18 GC\r\ngot response\r\n--- http.Client GONE\r\n2016/10/22 06:08:50  After request: 3 goroutines, 317480 heapalloc, 20 GC\r\n2016/10/22 06:08:50 Before request: 3 goroutines, 318832 heapalloc, 20 GC\r\ngot response\r\n2016/10/22 06:08:50  After request: 3 goroutines, 319400 heapalloc, 22 GC\r\n--- http.Client GONE\r\n2016/10/22 06:08:50 Before request: 3 goroutines, 320544 heapalloc, 22 GC\r\ngot response\r\n```\r\n\r\nSo it's not a goroutine leak at least.\r\n\r\nI really wish there were an API like 'runtime.ShowMePathsFromRootsetTo(mem uintptr)` so I could debug retentions like this.\r\n\r\nNot sure whether our heapdump/heapview tooling is good enough for this yet.\r\n\r\nI also suspected that maybe *http.Transport was on the stack which is why I never saw it finalized, but `go tool compile -m` says:\r\n\r\n```\r\nbug16005-garbage.go:36: \u0026http.Transport literal escapes to heap\r\n```\r\n\r\nGo team, any help?\r\n\r\n/cc @randall77 @mdempsky @matloob @aclements ",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-22T13:13:36Z",
	"updated_at": "2016-10-22T13:13:36Z"
}
