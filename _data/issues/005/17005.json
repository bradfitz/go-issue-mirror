{
	"id": 175284913,
	"number": 17005,
	"state": "closed",
	"title": "cmd/compile: internal compiler error: proginfo: unknown instruction 05062 ... BVS\t5072 on ppc64le",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### What version of Go are you using (`go version`)?\r\ngo version devel +6db13e0 Tue Sep 6 04:16:42 2016 +0000 linux/ppc64le\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nUbuntu 16.04 ppc64le\r\n\r\n### What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n\r\nBuilt go from latest master, tried to build this package:\r\ngo get -u github.com/gonum/blas/native\r\n\r\n### What did you expect to see?\r\nA successful build of the packages\r\n\r\n### What did you see instead?\r\n\r\nsrc/github.com/gonum/blas/native/level1double.go:351: internal compiler error: proginfo: unknown instruction 05062 (/home/boger/gocode/src/github.com/gonum/blas/native/level1double.go:423)\tBVS\t5072\r\n\r\ngoroutine 1 [running]:\r\nruntime/debug.Stack(0x0, 0x0, 0x0)\r\n\t/home/boger/golang/test/go/src/runtime/debug/stack.go:24 +0x6c\r\ncmd/compile/internal/gc.Fatalf(0x6c42c3, 0x20, 0xc420d9b0d8, 0x1, 0x1)\r\n\t/home/boger/golang/test/go/src/cmd/compile/internal/gc/subr.go:165 +0x1cc\r\ncmd/compile/internal/ppc64.proginfo(0xc4201368f8)\r\n\t/home/boger/golang/test/go/src/cmd/compile/internal/ppc64/prog.go:150 +0x45c\r\ncmd/compile/internal/gc.newcfg(0xc42012c278, 0xc42012c278, 0xc420eaafe0, 0x2)\r\n\t/home/boger/golang/test/go/src/cmd/compile/internal/gc/plive.go:403 +0x100\r\ncmd/compile/internal/gc.liveness(0xc420892480, 0xc42012c278, 0xc420b1ef50, 0xc420b1efc0)\r\n\t/home/boger/golang/test/go/src/cmd/compile/internal/gc/plive.go:1730 +0x164\r\ncmd/compile/internal/gc.genssa(0xc4204064b0, 0xc42012c278, 0xc420b1ef50, 0xc420b1efc0)\r\n\t/home/boger/golang/test/go/src/cmd/compile/internal/gc/ssa.go:4326 +0xa24\r\ncmd/compile/internal/gc.compile(0xc420892480)\r\n\t/home/boger/golang/test/go/src/cmd/compile/internal/gc/pgen.go:482 +0x880\r\ncmd/compile/internal/gc.funccompile(0xc420892480)\r\n\t/home/boger/golang/test/go/src/cmd/compile/internal/gc/dcl.go:1258 +0x1b4\r\ncmd/compile/internal/gc.Main()\r\n\t/home/boger/golang/test/go/src/cmd/compile/internal/gc/main.go:483 +0x22c0\r\ncmd/compile/internal/ppc64.Main()\r\n\t/home/boger/golang/test/go/src/cmd/compile/internal/ppc64/galign.go:77 +0x380\r\nmain.main()\r\n\t/home/boger/golang/test/go/src/cmd/compile/main.go:41 +0x20c\r\n\r\n\r\nBuilds successfully on go1.7; appears to be related to SSA.\r\nThere are various comments in this area with TODO: in the ppc64 ssa.go file so perhaps there is known work to be done.\r\n\r\nThe BVS only gets generated if invasmun is true, and where that flag is initialized there is this comment:\r\n\r\n // TODO: need to work FP comparisons into block jumps\r\n\r\nAlso, below the code where the BVS is generated, I see this comment:\r\n\r\n                // Pass along what we know so liblink can make use of it.\r\n                // TODO: Once we've fully switched to SSA,\r\n                // make liblink leave our output alone.",
	"user": {
		"login": "laboger",
		"id": 9433228,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "dr2chase",
		"id": 1928999,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2016-09-07T01:30:54Z",
	"created_at": "2016-09-06T15:57:52Z",
	"updated_at": "2016-09-07T01:30:54Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
