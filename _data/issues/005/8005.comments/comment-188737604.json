{
	"id": 188737604,
	"body": "Yes.\n\nOn 25 February 2016 at 21:58, stemar94 \u003cnotifications@github.com\u003e wrote:\n\n\u003e Will vet be able to do these checks then also on composite types, i.e.\n\u003e having\n\u003e\n\u003e type Mutex struct {\n\u003e     state int32 `vet:\"nocopy\"`\n\u003e     sema  uint32\n\u003e }type RWMutex struct {\n\u003e     w           Mutex\n\u003e     writerSem   uint32\n\u003e     readerSem   uint32\n\u003e     readerCount int32\n\u003e     readerWait  int32\n\u003e }\n\u003e\n\u003e Will a copy of an RWMutex be detected as well without an tag of its own?\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/8005#issuecomment-188725646\u003e.\n\u003e\n",
	"user": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-25T11:21:36Z",
	"updated_at": "2016-02-25T11:21:36Z"
}
