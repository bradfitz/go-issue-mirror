{
	"id": 251857150,
	"body": "I think we're on the same page with what you mean by \"grouped cases.\" My\nprevious comment was written with that in mind.\n\nOn Wed, Oct 5, 2016, 9:10 PM ragnese \u003cnotifications@github.com\u003e wrote:\n\n\u003e Well, the logic wouldn't be \"unroll only if all are valid\", the logic\n\u003e would be \"always unroll grouped cases\". Then the compile can fail/succeed\n\u003e as it would have if the author had written the cases individually.\n\u003e\n\u003e I can see how the use cases may be pretty limited, but it would make\n\u003e writing functions that take \"slices of any type that satisfies an\n\u003e interface\" (disguised as interface{}) much nicer.\n\u003e\n\u003e I stumbled across the behavior when writing some code that takes slices of\n\u003e one of several types and stores each of those into a database. But each\n\u003e type has a slightly different way of being stored, and objects that are not\n\u003e one of those types should not get stored at all.\n\u003e\n\u003e â€”\n\u003e You are receiving this because you commented.\n\u003e\n\u003e\n\u003e Reply to this email directly, view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/17351#issuecomment-251856894\u003e, or mute\n\u003e the thread\n\u003e \u003chttps://github.com/notifications/unsubscribe-auth/AAgwpPlNiaB3GNzXY1WV6y9oJzn1e5WHks5qxGa8gaJpZM4KPdZ5\u003e\n\u003e .\n\u003e\n",
	"user": {
		"login": "extemporalgenome",
		"id": 536740,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-06T03:13:17Z",
	"updated_at": "2016-10-06T03:13:17Z"
}
