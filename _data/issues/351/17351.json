{
	"id": 181305450,
	"number": 17351,
	"state": "closed",
	"title": "Two logically equivalent switch structures: one wont compile",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### What version of Go are you using (`go version`)?\r\n1.7.1\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/rob/work/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/go\"\r\nGOTOOLDIR=\"/usr/lib/go/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build437698452=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n\r\n### What did you do?\r\nTried to handle a type assertion from interface{} to a slice of custom types and allow multiple custom types in one case block. The following code works. I make each []CustomType its own case:\r\nhttps://play.golang.org/p/K94vyFfARt\r\n\r\nNotice, starting on line 36, that the two cases have identical bodies. If I collapse them into one case, it will not build:\r\nhttps://play.golang.org/p/7eLDvIjANf\r\n\r\n\r\n\r\n### What did you expect to see?\r\nI expected the second version to build and return identical results to the first version.\r\n\r\n### What did you see instead?\r\nSecond version wont build, despite being provably equivalent.\r\n\r\n\r\nThank you for your time and I hope I submitted this correctly. Please let me know if I can elaborate further.\r\n\r\n\r\n",
	"user": {
		"login": "ragnese",
		"id": 7927565,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2016-10-06T01:40:37Z",
	"created_at": "2016-10-06T01:34:58Z",
	"updated_at": "2016-10-06T03:21:57Z"
}
