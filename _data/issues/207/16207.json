{
	"id": 162834503,
	"number": 16207,
	"state": "closed",
	"title": "net/url: No adequate method exists for encoding a URI component",
	"body": "1. What version of Go are you using (`go version`)?\r\n1.6.2\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nlinux amd64\r\n\r\n3. What did you do?\r\nhttps://play.golang.org/p/loaa8vvCli\r\nAttempted to use net/url to encode a component of a URI which contained both forward-slashes and whitespace.\r\n\r\n4. What did you expect to see?\r\nA method akin to JS `encodeURIcomponent` which would encode the component the way I need.\r\n\r\n5. What did you see instead?\r\nNo solution, as of yet.\r\n\r\n\r\n\r\nI'm interacting with an API where I need to escape individual URI components. In my specific case, I'm escaping components containing whitespace and forward slashes. As demonstrated above, `net/url` seems to have no method which I can use to accomplish this. Any `url.Parse()` related function will ignore forward slashes, as it should. I also can't rely on something such as `url.QueryParse()`, as query string encoding turns whitespace into `+`.\r\n\r\nWould it be possible for `net/url` to add functionality akin to JS's `encodeURIcomponent` to cover cases such as this?",
	"user": {
		"login": "alienth",
		"id": 218431,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-10-07T20:11:19Z",
	"created_at": "2016-06-29T03:38:32Z",
	"updated_at": "2016-10-07T20:11:20Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	}
}
