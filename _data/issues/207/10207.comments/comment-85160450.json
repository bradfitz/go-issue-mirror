{
	"id": 85160450,
	"body": "The bug can only occur when C/C++ code, generated by cgo, calls into Go code before any Go code calls in C/C++ code.  That is, something needs to call runtime·cgocallback_gofunc or runtime·cgocallback.  So you are suggesting that when a signal occurs, it causes C/C++ code to call into Go code, even though nothing has called into C/C++ code.  That would be a problem.  But how could it happen?\r\n\r\nYou say that calling crosscall_arm has something to do with fixing this, but I don't see that.  Perhaps there is a problem there, but I don't see how it could be this problem.  This problem can only happen in a callback from C/C++ code.  And, to be clear, it has to be a callback from code generated by cgo, or something that is behaving the way that cgo behaves.  I don't see any cgo code in os/signal.  So, is there cgo in the darwin/arm support?  cgo code that calls exported Go functions?  I don't see anything but I don't know if I am looking in the right places.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-23T19:34:59Z",
	"updated_at": "2015-03-23T19:34:59Z"
}
