{
	"id": 51286347,
	"number": 7207,
	"state": "closed",
	"title": "cmd/gc: Interface comparisons broken",
	"body": "by **carlchatfielduntrusted**:\n\n\u003cpre\u003espec: \nInterface values are comparable. Two interface values are equal if they have identical\ndynamic types and equal dynamic values or if both have value nil. \n\n  type XI interface { x() }\n  type YI interface { x() }\n  type X int\n  func (X) x() {}\n\n  func main() {\n    var xi XI = X(0)\n    var yi YI = X(0)\n    fmt.Printf(\u0026quot;%v\\n\u0026quot;, xi == yi)\n  }\n\nBoth xi and yi have identical dynamic types X with identical value 0\n\nWhat steps will reproduce the problem?\n\u003ca href=\"http://play.golang.org/p/3x_gbZgg_I\"\u003ehttp://play.golang.org/p/3x_gbZgg_I\u003c/a\u003e\n\nWhat is the expected output?\ntrue\n\nWhat do you see instead?\nfalse\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g/8g\n\nWhich operating system are you using?\nlinux\n\nWhich version are you using?  (run 'go version')\n1.2\n\nPlease provide any additional information below.\nI have also tried with different dynamic types including structs.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:40:02Z",
	"created_at": "2014-01-26T08:20:16Z",
	"updated_at": "2016-06-25T01:26:22Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
