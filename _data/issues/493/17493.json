{
	"id": 183558647,
	"number": 17493,
	"state": "closed",
	"title": "removing 1 package level var results in 300x test run improvement",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### What version of Go are you using (`go version`)?\r\n\r\nhappens in both 1.6 and 1.7\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\nhappens on both osx and linux amd64\r\n\r\n### What did you do?\r\n\r\nrunning `go test` on https://github.com/go-openapi/validate\r\n\r\nWhen https://github.com/go-openapi/loads has the branch borked checked out\r\nhttps://github.com/go-openapi/loads/tree/borked\r\n\r\nto go from this: --- PASS: TestIssue61_ResolvedRef (204.44s) to --- PASS: TestIssue61_ResolvedRef (1.27s), I had to remove 1 package level unexported var in a dependency. That was a bit counter-intuitive\r\n\r\nAnother test does not complete at all and times out eventually.\r\n\r\n### What did you expect to see?\r\n\r\nI expect not to see that much contention when I run tests serially and tests to complete swiftly \r\n\r\n### What did you see instead?\r\n\r\nI see tests timing out and taking a very long time when I don't run them in isolation.\r\n\r\n",
	"user": {
		"login": "casualjim",
		"id": 456109,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-10-18T14:18:56Z",
	"created_at": "2016-10-18T00:02:52Z",
	"updated_at": "2016-10-18T14:18:56Z"
}
