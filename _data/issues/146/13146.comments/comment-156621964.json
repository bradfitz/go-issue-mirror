{
	"id": 156621964,
	"body": "Hi, my understanding is that SO_REUSADDR is meant to relax the rules of address collision at bind. The man says : \r\n\r\n\u003e SO_REUSEADDR indicates that the rules used in validating addresses supplied in a bind(2) call should allow reuse of local addresses.\r\n\r\nThis is not really clear, but what it appears to mean is that you can have collision in your binding : for instance you can bind to '0.0.0.0:80' and then bind to '192.168.1.1:80', something which is disallowed without this flag. But you cannot bind twice to the same exact (addr, port) tuple. \r\n\r\n\u003e SO_REUSEPORT allows completely duplicate bindings by multiple processes\r\n\r\nSO_REUSEPORT on the other hand allows for this behavior. You can bind twice to the syntaxically identical (addr, port) tuple. \r\n\r\nI've tested your (bind/listen/close/bind/listen) example (in C) and indeed, it's working with SO_REUSEPORT but returns EADDRINUSE with SO_REUSEADDR.\r\n\r\nEDIT: this is indeed working on freebsd with SO_REUSEADDR, maybe dfly should match the behavior.",
	"user": {
		"login": "jorisgio",
		"id": 1108145,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-14T03:53:03Z",
	"updated_at": "2015-11-14T04:19:36Z"
}
