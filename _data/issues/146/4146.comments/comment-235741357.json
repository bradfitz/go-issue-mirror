{
	"id": 235741357,
	"body": "I have been considering implementing this for 1.8. There are some details in the runtime's itab code to work through, but that aside I think the API needs a little more consideration. It's not really MakeInterface because it's not making an abstract interface type. Instead the function is creating a new concrete type with a method set.\r\n\r\nWhen writing Go we can add a method set to any named type. So I lean towards a function for creating a new named type, with an optional method set:\r\n\r\n```\r\nfunc NamedOf(t Type, name string, methodNames []string, methods []func(args []Value) results []Value) Type\r\n```\r\n\r\nThis could reuse the reflect.Method struct for what looks like a simpler signature, but it will add a few new states to the Method struct (for example, will the Type field be used when passed to NamedOf?):\r\n\r\n```\r\nfunc NamedOf(t Type, name string, methods []Method) Type\r\n```\r\n\r\n@bradfitz does this work for your http.ResponseWriter case?",
	"user": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-27T22:29:06Z",
	"updated_at": "2016-07-27T22:29:06Z"
}
