{
	"id": 255096026,
	"body": "Thanks very much for taking a look.  I'm very grateful for your time.\r\n\r\nAre you able to elaborate more fully about what you mean by \"Unlikely we are going to solve this.\"  Are you referring to the issue in general, or the DragonFly kernel crash?  Is the \"we\" The Go Team?  \r\n\r\nI believe the implication of a kernel problem in FreeBSD, because of a panic in DragonFly, simply doesn't follow.  I can give a lot more detail about this, but I fear it's redundant, unless requested.\r\n\r\nFor what it's worth, this issue is reliably reproducible enough that I've been able to bisect down to a commit that makes sense (https://github.com/golang/go/commit/e6d8bfe218a5f387d7aceddcaee5067a59181838), in my first go.  Additionally, the commits leading up to the implicated commit in the bisect are documentation-only, and don't reproduce the behaviour.  I have very high confidence in the bisect.\r\n\r\nI haven't yet published this work yet, as I've been asking some new questions based on the bisect.  I was hoping to be able to speak intelligently about this when I reported results, but **I feel now the pressure has increased.**  I've been making progress slowly, but I am making progress (this isn't my daytime gig).  I will post a repo later today with the work and the bisec log, so that others can reference it.\r\n\r\nHere's my thoughts:\r\n\r\n- at first glance, the implicated commit seems to change how far down in the exec call tree the software gets in the /doesnotexist case\r\n    - that raised the question, did it ever work?\r\n        - starting with the tag go1 the /bin/true case has goruntime panic'd, and the issue therefore has always existed\r\n\r\nNew lines of thought are:\r\n- This suggests that the conventions around how something is actually being exec'd are incorrect, for at least the FreeBSD case. \r\n- Presumably, other syscalls work fine, so the syscall interface is likely correct. \r\n- Does darwin exhibit the problem?  (I will test, although I don't have access to an 8-thread darwin machine), this shares a lot of go runtime code with FreeBSD in the exec codepath\r\n- How far down the exec call tree does this commit push the test, in comparison with the older code\r\n\r\nI plan to investigate these questions, but again, this isn't my daytime gig.\r\n\r\nAs I mentioned earlier, I'm very happy to work with others on this.  \r\n\r\nI'd be very interested in more details in the environment you were unable to reproduce in.  Specifically, how many CPUs?  Is the gomote a virtualized environment, or do you have direct access to hardware somewhere?  Perhaps we can compare build artefacts?  i.e. does your artefact crash in my environment, and vice versa\r\n\r\nThanks again for taking a look.",
	"user": {
		"login": "derekmarcotte",
		"id": 12298521,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-20T12:48:20Z",
	"updated_at": "2016-10-20T20:38:19Z"
}
