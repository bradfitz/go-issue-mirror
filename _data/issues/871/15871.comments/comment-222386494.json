{
	"id": 222386494,
	"body": "@ALTree and @josharian \r\n\r\nHm... Well, that definitely does throw a wrench in my plans, but it definitely is great I figured this out in the first week rather than towards the end. I see it now, implementing the concurrent map is a possibility (and I'll go about implementing them on my own in the future), I'll mention the ACTUAL end-goal (which the concurrent hash map was supposedly a proof-of-concept... actually, I'm still not 100% certain of it myself) is to extend on the Garbage Collector to allow it to be lock-free. \r\n\r\nHe mentioned something about extending on the language to allow marking the lower bits of pointers for a lock-free mark-and-sweep collection, however while I've only implemented a basic mark-and-sweep algorithm, I wouldn't know where to begin on that, nor if Go currently uses a lock-free GC, or if it is entirely possible with Go. The Concurrent Map was more to get my \"feet wet\" I suppose, by getting familiar with the source code. I only assumed that it could potentially be one of the improvements to be proposed by the end of the program.\r\n\r\nI'm assuming the reason he wants to make the GC lock-free is for the same reason you can't really implement a lock-free data-structure with malloc in C (experience hurts), if it locks something (I.E the heap) then it simply isn't lock-free. \r\n\r\nNow, once again, I don't know what he actually has in-store, he changes his mind on what I should do a lot, he has a lot more experience in this than I do, so I just trust his judgement and carry on. Would the above even be possible? What would the adverse effects be? I'm assuming this is even more likely to be rejected than the concurrent map because it changes EVERYTHING, plus there is no way to create a  go-getter package for an internal change in the garbage collector.\r\n\r\nI'll definitely have to speak with my mentor on what it is we should do next.\r\n\r\n@josharian \r\n\r\nYou make some interesting suggestions too on other extensions on it, and even helped me on my way to attempting to continue with it even if I wanted to. Definitely will also read up on the language specifications, it was rather lazy of me to not do so.",
	"user": {
		"login": "theif519",
		"id": 4269990,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-29T22:28:02Z",
	"updated_at": "2016-05-29T22:28:02Z"
}
