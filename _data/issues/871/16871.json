{
	"id": 173101576,
	"number": 16871,
	"state": "open",
	"title": "cmd/compile: avoid dead code in escape analysis",
	"body": "Using `go1.7`\r\n\r\nConsider the following function:\r\n```go\r\nfunc Foo(codes []int) int {\r\n\tconst debug = false\r\n\tif debug \u0026\u0026 !sort.IntsAreSorted(codes) {\r\n\t\tpanic(\"input slice is not sorted\")\r\n\t}\r\n\r\n\tvar s int\r\n\tfor _, i := range codes {\r\n\t\ts += i\r\n\t}\r\n\treturn s\r\n}\r\n```\r\n\r\nCurrently, `codes` escapes to the heap. I expect it to not escape since the function where it does escape sort.IntsAreSorted is dead. (the fact that `codes` escapes at all in sort.IntsAreSorted is a separate concern).\r\n\r\n/cc @dr2chase ",
	"user": {
		"login": "dsnet",
		"id": 6354026,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"comments": 1,
	"created_at": "2016-08-25T02:38:44Z",
	"updated_at": "2016-08-25T03:56:29Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
