{
	"id": 178185178,
	"number": 17171,
	"state": "closed",
	"title": "Struct to interface conversion slowness",
	"body": "\r\n\r\n### What version of Go are you using (`go version`)?\r\n\r\n1.7.1\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/stgleb/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build388208242=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n### What did you do?\r\n\r\nI run bechmark that consist of calling function with struct argument,\r\nand second benchmark calls function with interface argument.\r\n\r\nhttps://github.com/stgleb/method_set_test/blob/master/method_set_test.go\r\n\r\n\r\nI wonder why struct to interface is so slow compare to struct as an argument.\r\nOn my computer it yields\r\n\r\nBenchmarkStruct-4       2000000000           0.02 ns/op\r\nBenchmarkInteface-4     2000000000           0.44 ns/op\r\n\r\nSo difference is pretty significant.\r\n\r\n### What did you expect to see?\r\n\r\nI thought that all type checks are made during compile time.\r\nSo there should not be such big difference as far I understand\r\ninterfaces and structs.\r\n\r\n",
	"user": {
		"login": "stgleb",
		"id": 5112367,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2016-09-20T21:49:50Z",
	"created_at": "2016-09-20T21:28:59Z",
	"updated_at": "2016-09-20T22:14:36Z"
}
