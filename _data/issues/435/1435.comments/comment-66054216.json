{
	"id": 66054216,
	"body": "\u003ca id=\"c53\"\u003e\u003c/a\u003eComment 53:\n\n\u003cpre\u003eCalling the C library version of unshare wouldn't make any difference.  The unshare\nfunction in the GNU/Linux libc only applies to the current thread.  Since goroutines\naren't attached to a specific thread, there is no meaningful way to call unshare from a\ngoroutine.  We would have to introduce a mechanism to call unshare from every thread,\nwhich is more or less what we are trying to avoid, and which is in any case impossible\nif cgo code has created new threads.\n\nI think the only way to use unshare from a Go program is to use runtime.LockOSThread. \nOr to arrange to call it just before a fork.  I don't think there is any reasonable way\nto unshare across the whole process, and the same is true of C code.\u003c/pre\u003e",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-06-24T14:47:41Z",
	"updated_at": "2014-12-08T10:08:21Z"
}
