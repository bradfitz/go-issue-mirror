{
	"id": 51286703,
	"number": 7435,
	"state": "closed",
	"title": "cmd/6g: builtin copy() on amd64 runtime uses REP MOV instead of SSE instructions on large blocks",
	"body": "by **byron.rakitzis**:\n\n\u003cpre\u003eI stumbled across this while writing a custom checksum routine with the SSE instructions\nand found myself outrunning the builtin copy(). (to my surprise)\n\nI see that it uses REP MOV for blocks \u0026gt; 256 bytes, which is good for simplicity of\nimplementation but leaves a factor of two on the table, as a small test shows.\nBenchmarked on an Ivy Bridge processor (macbook from last year): 25 ns/loop vs. 50\nns/loop.\n\nTest code attached. Run with \u0026quot;go test -bench .\u0026quot;\n\nMy test code is of course utterly simplistic, however Intel has written volumes on how\nto write an excellent memcpy using their processors.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/7435/0/cpy_test.go\"\u003ecpy_test.go\u003c/a\u003e (465 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/7435/0/cpy.s\"\u003ecpy.s\u003c/a\u003e (631 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 10,
	"closed_at": "2015-01-08T06:18:15Z",
	"created_at": "2014-02-28T20:46:36Z",
	"updated_at": "2016-06-25T01:28:41Z"
}
