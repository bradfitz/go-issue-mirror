{
	"id": 250063927,
	"body": "@minux Well that still runs the tests which is not wanted.  A test that takes more than a trivial amount of time will block.\r\n\r\n`./test_bin -test.v -test.bench=. -test.benchtime=1ns\r\n=== RUN   TestSleep\r\n--- PASS: TestSleep (30.00s)\r\nPASS\r\n`\r\n\r\nFor my use case no filtering is needed and if filtering is required I think grep or other unix utilities would be just fine.  Like you said filtering for subtests really is just showing the match for the top anyway.  I think a simple loop around testing M.tests, m.Benchmarks and m.Examples is all that is really needed. \r\n\r\nHere is all i was originally imagining in m.Run()\r\n\r\n```\r\n\tif *listTests {\r\n\t\tfor _, test := range m.tests {\r\n\t\t\tfmt.Println(test.Name)\r\n\t\t}\r\n\t\tfor _, example := range m.examples {\r\n\t\t\tif example.Output != \"\" {\r\n\t\t\t\tfmt.Println(example.Name)\r\n\t\t\t}\r\n\t\t}\r\n\t\tos.Exit(0)\r\n\t}\r\n\r\n\tif *listBench {\r\n\t\tfor _, bench := range m.benchmarks {\r\n\t\t\tfmt.Println(bench.Name)\r\n\t\t}\r\n\t\tos.Exit(0)\r\n\t}\r\n```\r\n\r\nI am not sure I see anything more than this is really nessisary.  \r\n\r\nThere are examples in other languages / test packages:\r\n\r\nIn Gtests: https://github.com/google/googletest/blob/master/googletest/docs/AdvancedGuide.md#listing-test-names\r\nBoost Tests: http://www.boost.org/doc/libs/1_61_0/libs/test/doc/html/boost_test/utf_reference/rt_param_reference/list_content.html\r\n\r\n\r\nThis is just used our internal the test runner, which is only passed the compiled binary, to get a list of tests to run.",
	"user": {
		"login": "nemith",
		"id": 349360,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-28T03:39:59Z",
	"updated_at": "2016-09-28T03:39:59Z"
}
