{
	"id": 230082212,
	"body": "For the most part, I don't see any effect on reflection. You already cannot access the concrete value “inside” the interface. So, you're just left with exported methods, which is currently already identical.\r\n\r\nI mean, in a real sense, an interface is semantically defined as the set of methods that must be implemented for something to match that interface. So, two interfaces declaring the exact same set of methods are … er… “meta-semantically?” identical interfaces, because they are already identical interfaces by definition. (There is no meaningful way to actually distinguish my Stringer from your Stringer EXCEPT by name.)\r\n\r\nStructs would still compare types by names if either is named, so as far as structs are concerned at worst, we would allow: `var a struct{ context.Context } = struct{ x/net/context.Context }{}` to be a valid assignment… which… is kind of really weird in the first place… (who would be assigning anonymous structs to other anonymous structs in the first place?)\r\n\r\nFunction types would still be different if either is named… so, at worst, we allow `var f func(context.Context) = func(x/net/context.Context){}` to be valid, but then that's already kind of what we're trying to advance with this proposal…\r\n\r\nAnd any intra-interface ( o.O … v_v ) assignments would already be allowed and have no chance of panicing due to failure of one to implement the other, because as noted, they must already have identical method implementations. `var ( ctx context.Context ; ctx2 x/net/context/Context ) ; ctx, ctx2 = ctx2, ctx` is already permitted code, and is already known to be unable to result in a runtime panic.\r\n\r\nIn fact, interfaces ALREADY cannot take named function types. So pretty much the only consequence I can possibly eek out of this mess, is that some unnamed struct types, and some unnamed func types would be able to compare as identical types. The latter of which would allow some named interfaces to compare as identical, which is actually desirable.",
	"user": {
		"login": "puellanivis",
		"id": 10839126,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 2,
		"+1": 2
	},
	"created_at": "2016-07-02T04:06:47Z",
	"updated_at": "2016-07-02T04:06:47Z"
}
