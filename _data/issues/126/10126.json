{
	"id": 60478727,
	"number": 10126,
	"state": "closed",
	"title": "x/net/websocket: The error message doesn't contain the expected string while websocket connect failed.",
	"body": "The error message doesn't contain the expected string while websocket connect failed.\r\n\r\n````go\r\npackage main\r\n\r\nimport (\r\n\t\"errors\"\r\n\t\"fmt\"\r\n\t\"io\"\r\n\t\"net/http\"\r\n\t\"strings\"\r\n\r\n\t\"golang.org/x/net/websocket\"\r\n)\r\n\r\nfunc main() {\r\n\techo := websocket.Server{\r\n\t\tHandshake: func(config *websocket.Config, req *http.Request) error {\r\n\t\t\treturn errors.New(\"handshakeError\")\r\n\t\t},\r\n\t\tHandler: websocket.Handler(func(ws *websocket.Conn) {\r\n\t\t\tio.Copy(ws, ws)\r\n\t\t}),\r\n\t}\r\n\thttp.Handle(\"/echo\", echo)\r\n\r\n\tgo http.ListenAndServe(\":12345\", nil)\r\n\r\n\t_, err := websocket.Dial(\"ws://localhost:12345/echo\", \"\", \"http://localhost/\")\r\n\tif err == nil {\r\n\t\tfmt.Fatal(\"except failed.\")\r\n\t\treturn\r\n\t}\r\n\r\n\tif strings.Contains(err.Error(), \"handshakeError\") {\r\n\t\tfmt.Println(\"ok\") // error message is contains excepted string 'handshakeError'\r\n\t} else {\r\n\t\tfmt.Println(\"failed\") // error message don.t contains excepted string 'handshakeError'\r\n\t}\r\n}\r\n````",
	"user": {
		"login": "runner-mei",
		"id": 1052632,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2015-07-30T02:58:36Z",
	"created_at": "2015-03-10T10:28:43Z",
	"updated_at": "2016-08-05T16:09:16Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
