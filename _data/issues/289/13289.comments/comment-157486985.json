{
	"id": 157486985,
	"body": "I just got another one of these - from the same program, still on go1.5.1 with GOEXPERIMENT=framepointer.\r\n\r\nAgain the span is marked as mSpanInUse, and the pointer is \"weird\" because it's outside of the span's address range.\r\n\r\nThere's no use of package unsafe in our first-party code, but there is use of unsafe in the program via github.com/golang/protobuf/proto (which I trust to be correct, and does not have any GitHub issues related to crashes like this).\r\n\r\n```\r\nruntime:objectstart Span weird: p=0xc843bb6000 k=0x6421ddb s.start=0xc826b24000 s.limit=0xc826b26000 s.state=0\r\nfatal error: objectstart: bad pointer in unexpected span\r\n\r\ngoroutine 40 [running]:\r\nruntime.throw(0xb82480, 0x2b)\r\n\t/usr/local/go/src/runtime/panic.go:527 +0x9b fp=0xc8201cbdf0 sp=0xc8201cbdd0\r\nruntime.heapBitsForObject(0xc843bb6000, 0x0, 0x0, 0xc800000000, 0x7fc7f89f72c0)\r\n\t/usr/local/go/src/runtime/mbitmap.go:217 +0x29b fp=0xc8201cbe30 sp=0xc8201cbdf0\r\nruntime.scanobject(0xc841a24400, 0xc82002e720)\r\n\t/usr/local/go/src/runtime/mgcmark.go:878 +0x253 fp=0xc8201cbf08 sp=0xc8201cbe30\r\nruntime.gcDrainUntilPreempt(0xc82002e720, 0x7d0)\r\n\t/usr/local/go/src/runtime/mgcmark.go:741 +0x162 fp=0xc8201cbf48 sp=0xc8201cbf08\r\nruntime.gcBgMarkWorker(0xc82002d500)\r\n\t/usr/local/go/src/runtime/mgc.go:1329 +0x48a fp=0xc8201cbfb8 sp=0xc8201cbf48\r\nruntime.goexit()\r\n\t/usr/local/go/src/runtime/asm_amd64.s:1696 +0x1 fp=0xc8201cbfc0 sp=0xc8201cbfb8\r\ncreated by runtime.gcBgMarkStartWorkers\r\n\t/usr/local/go/src/runtime/mgc.go:1239 +0x9f\r\n\r\ngoroutine 1 [semacquire, 1175 minutes]:\r\nsync.runtime_Semacquire(0xc82040b1cc)\r\n\t/usr/local/go/src/runtime/sema.go:43 +0x30\r\nsync.(*WaitGroup).Wait(0xc82040b1c0)\r\n\t/usr/local/go/src/sync/waitgroup.go:126 +0xc3\r\nmain.main()\r\n\t/redacted.go:211 +0xfb0\r\n```",
	"user": {
		"login": "rhysh",
		"id": 230685,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-17T19:53:30Z",
	"updated_at": "2015-11-17T19:53:30Z"
}
