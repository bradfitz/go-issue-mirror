{
	"id": 130689788,
	"body": "An alternate way to pack non-pointers into an interface I've been mulling:\r\n\r\nFor each declared type in a program, designate a single pointer from an specially reserved address range. For these non-pointer values, pack the data into the first word, and the sentinel pointer into the second word.\r\n\r\nEvery type check has to look at both words instead of just the first. That is, to determine the type of an interface we ask:\r\n\r\n1. Is the second word of the interface in the sentinel pointer range?\r\n2. If so, look up the offset of the pointer and use that as the type. Use the first word as the data.\r\n3. If not, use the first word as the type, and the second word as the data.\r\n\r\nFrom the GC's perspective, pointers are always in the second word. No extra bits are needed, just extra work on an already-loaded cache line.",
	"user": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-13T14:11:27Z",
	"updated_at": "2015-08-13T14:11:27Z"
}
