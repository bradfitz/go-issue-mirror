{
	"id": 51281884,
	"number": 4261,
	"state": "closed",
	"title": "passing pipes as exec.Command.ExtraFiles doesn't seem to work well",
	"body": "\u003cpre\u003ego version devel +9ef1fd2b7e47 Fri Oct 19 11:02:32 2012 +1100\ndarwin\namd64\n\nThis program hangs:\n\npackage main\nimport (\n        \u0026quot;bufio\u0026quot;; \n        \u0026quot;os\u0026quot;; \u0026quot;os/exec\u0026quot;)\nfunc main() {\n        cmd := exec.Command(\u0026quot;./panicr/panicr\u0026quot;)\n        r, w, err := os.Pipe()\n        if err != nil {\n                panic(err)\n        }\n        cmd.ExtraFiles = []*os.File{w}\n        cmd.Start()\n        back := bufio.NewReader(r)\n        back.ReadString('\\n')\n}\n\nThe panicr program:\n\npackage main\nfunc main() { panic(\u0026quot;\u0026quot;) }\n\nThe main program hangs forever on ReadString. \nI presumed it is because w is a healthy open descriptor for the pipe, so\nthe read sees the pipe as healthy.\nHowever, inserting a w.Close() directly after cmd.Start() seems to kill the pipe\nin the case where instead of calling panicr we call a program that\nwrites some useful data to the pipe.\u003c/pre\u003e",
	"user": {
		"login": "petar",
		"id": 285131,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:22:41Z",
	"created_at": "2012-10-19T03:22:58Z",
	"updated_at": "2016-06-24T22:26:44Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
