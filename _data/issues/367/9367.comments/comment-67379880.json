{
	"id": 67379880,
	"body": "1) It shouldn't be too hard for a compiler to recognize\r\n\r\n```go\r\ni := 0\r\nif b {\r\n   i = 1\r\n}\r\n```\r\n\r\nand create the respective single instruction (or conditional bit set, depending on what happens with i, etc.)\r\n\r\n2) It's trivial to define e.g.\r\n\r\n```go\r\nfunc bool2int(b bool) int {\r\n   if b {\r\n      return 1\r\n   }\r\n   return 0\r\n} \r\n```\r\n\r\nwhere needed.\r\n\r\n3) Together with 1), the bool2int function should become trivial code-wise and then should be inlineable, effectively giving you int(b).\r\n\r\n4) There may still be merit in conversions of bools to numeric values, but using a helper function for now should get you almost all the way there. The rest is optimization.",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-17T19:37:49Z",
	"updated_at": "2015-06-20T02:18:46Z"
}
