{
	"id": 51279115,
	"number": 2367,
	"state": "closed",
	"title": "encoding/gob: cannot decode into top-level interface type",
	"body": "\u003cpre\u003eThis program fails because it cannot decode a (correctly registered) type into a\n*interface{}. I can't see anything in the documentation that prohibits this, though I\nthink it's a reasonable use-case even it does.\n\noutput of program:\nfail: gob: wrong type received for local value *interface { }: Foo = struct { }\n\n06199863489f+ tip\n\npackage main\nimport (\n\t\u0026quot;os\u0026quot;\n\t\u0026quot;fmt\u0026quot;\n\t\u0026quot;gob\u0026quot;\n\t\u0026quot;io\u0026quot;\n)\n\ntype Foo struct {\n}\n\nfunc main() {\n\tgob.Register(Foo{})\n\tr, w := io.Pipe()\n\tgo func() {\n\t\te := gob.NewEncoder(w)\n\t\te.Encode(Foo{})\n\t\tw.Close()\n\t}()\n\td := gob.NewDecoder(r)\n\tfor {\n\t\tvar v interface{}\n\t\tif err := d.Decode(\u0026amp;v); err != nil {\n\t\t\tfmt.Printf(\u0026quot;fail: %v\\n\u0026quot;, err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tfmt.Printf(\u0026quot;got %v of type %T\\n\u0026quot;, v, v)\n\t}\n}\u003c/pre\u003e",
	"user": {
		"login": "rogpeppe",
		"id": 66491,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2014-12-08T10:12:42Z",
	"created_at": "2011-10-14T13:53:13Z",
	"updated_at": "2016-06-24T21:19:28Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
