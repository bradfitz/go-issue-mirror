{
	"id": 66094842,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eI think Go executable should handle all unhandled exceptions. Like we did before. We\nshould print stack trace and exit with some error code. If we cannot print stack trace,\nwe should at least exit. At this moment, we defer to other system tools to exit our\nprocess and that is unacceptable (some of those require user intervention and so).\n\nMy general idea is to split our current exception handler into two:\n\n- first will decide if Go should handle exception, and handle it if possible (anything\nthat gets passed onto Go recover);\n- second will just print stack trace and exit process.\n\nWe should call the second as late as we can on exception handlers chain. I think we\nshould be able to use one of those: AddVectoredExceptionHandler,\nAddVectoredContinueHandler or SetUnhandledExceptionFilter to arrange that.\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-07-18T07:51:50Z",
	"updated_at": "2014-12-08T10:44:22Z"
}
