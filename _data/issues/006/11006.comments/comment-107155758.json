{
	"id": 107155758,
	"body": "@minux  The issue is about the multiple anonymous fields that are ignored due the rule# 3.  The tags have their place but I think that by default the encoder should not ignore these fields. It looks wrong to me to ignore fields/loose data by default. I think they should be encoded and if the developer doesn't like the output it can use tags to alter it(i.e ignore them) just like it does for non-multiple-anonymous fields. Let me know if this makes sense to you.\r\n   I'm aware that I can use tags but sometimes I don't own the types(i.e belong to a 3rd party package) or at the time I've created the embedded type I didn't consider the JSON encoding. This also adds to the cognitive load and looks like a workaround thus the reason I proposed to replace the 3 special rules with the go standard visibility and addressing rules. \r\n  I think a such change is backward compatible becuse it will only encode fields that are currently ignored but the output remains the same for all  the other fields just like the change in Go 1.1",
	"user": {
		"login": "themihai",
		"id": 1800192,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-05-31T10:46:40Z",
	"updated_at": "2015-05-31T10:46:55Z"
}
