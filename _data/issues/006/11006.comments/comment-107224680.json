{
	"id": 107224680,
	"body": "The issue is about the conflicting(aka duplicate) multiple anonymous fields which falls under the special rule # 3. I thought it's enough to specify it at the beginning of the thread.\r\n   It's worth to mention that \"conflicting\" is a \"made up\" term by the json package but the fields themselves are not truly conflicting because they are addressable and they work in Go. I think it was a bad design decision to put them on a conflicting/ignore list thus the reason why I've created this issue. \r\n\r\nConcerning the breaking change I'm wondering how is this different than the change in go 1.1. Was that a breaking change too? It looks same to me. People relying on the fact that the anonymous fields were not marshalled  had to to add explicit `json:\"-\"`.  Quote  from the package doc below[0]. \r\n The fact that a such change made into Go 1.1 makes me think that the proposed fix is not a breaking change either and can be included in a future Go 1.x version.\r\n   Tbh I doubt people were relaying on the conflicts because doing that to have fields ignored is quite a bad practice. Nevertheless my main argument for the backward compatibility is that we already have a such change in Go 1.1.\r\n\r\n[0]\r\n`// Prior to Go 1.1, anonymous struct fields were ignored. To force ignoring of\r\n// an anonymous struct field in both current and earlier versions, give the field\r\n// a JSON tag of \"-\".`",
	"user": {
		"login": "themihai",
		"id": 1800192,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-05-31T17:07:16Z",
	"updated_at": "2015-05-31T17:27:09Z"
}
