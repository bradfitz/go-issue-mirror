{
	"id": 107227962,
	"body": "That makes sense but it begs the same question:  how is the change I propose a breaking change?  It just adds meaning to anonymous (embedded) struct fields that are currently ignored(the \"conflicting\" ones), isn't it?  \r\n It's  the same kind of change we had on Go 1.1 and actually continues the work from Go 1.1 making the anonymous fields finally first class citizens by encoding them regardless the apparent \"conflicting\" status. It aligns the encoding process of the embedded fields to the way they work on internally on Go. ",
	"user": {
		"login": "themihai",
		"id": 1800192,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-05-31T17:57:30Z",
	"updated_at": "2015-05-31T17:57:30Z"
}
