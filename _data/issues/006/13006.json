{
	"id": 112502780,
	"number": 13006,
	"state": "closed",
	"title": "go1.5.1 different appen behavior in linux-x64 and linux-arm and doubt for results",
	"body": "talk is cheap, give you test code:\r\n```golang\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"testing\"\r\n)\r\n\r\ntype S_1 struct {\r\n\tgroup int\r\n\tid    []int\r\n}\r\n\r\nfunc Test_append(t *testing.T) {\r\n\tvar (\r\n\t\tresult []S_1 = nil\r\n\t\texpect []S_1 = []S_1{\r\n\t\t\tS_1{0, []int{0, 0}},\r\n\t\t\tS_1{0, []int{0, 1}},\r\n\t\t\tS_1{0, []int{0, 2}},\r\n\t\t\tS_1{1, []int{0, 1, 0}},\r\n\t\t\tS_1{1, []int{0, 1, 1}},\r\n\t\t\tS_1{1, []int{0, 1, 2}},\r\n\t\t\tS_1{2, []int{0, 1, 2, 0}},\r\n\t\t\tS_1{2, []int{0, 1, 2, 1}},\r\n\t\t\tS_1{2, []int{0, 1, 2, 2}},\r\n\t\t}\r\n\t\tid []int = nil\r\n\t)\r\n\tfor i := 0; i \u003c 3; i++ {\r\n\t\tid = append(id, i)\r\n\t\tfor j := 0; j \u003c 3; j++ {\r\n\t\t\tresult = append(result, S_1{\r\n\t\t\t\tgroup: i,\r\n\t\t\t\tid:    append(id, j),\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tfor i := 0; i \u003c len(result); i++ {\r\n\t\tr := result[i]\r\n\t\te := expect[i]\r\n\t\tif r.group != e.group {\r\n\t\t\tfmt.Println(\"expect\", expect)\r\n\t\t\tfmt.Println(\"result\", result)\r\n\t\t\tt.Fatalf(\"check group failed!\")\r\n\t\t}\r\n\t\tfor j := 0; j \u003c len(r.id); j++ {\r\n\t\t\tri := r.id[j]\r\n\t\t\tei := e.id[j]\r\n\t\t\tif ri != ei {\r\n\t\t\t\tfmt.Println(\"expect\", expect)\r\n\t\t\t\tfmt.Println(\"result\", result)\r\n\t\t\t\tt.Fatalf(\"check id failed!\")\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n```\r\nresult on my PC x86:\r\n```\r\nexpect [{0 [0 0]} {0 [0 1]} {0 [0 2]} {1 [0 1 0]} {1 [0 1 1]} {1 [0 1 2]} {2 [0 1 2 0]} {2 [0 1 2 1]} {2 [0 1 2 2]}]\r\nresult [{0 [0 0]} {0 [0 1]} {0 [0 2]} {1 [0 1 0]} {1 [0 1 1]} {1 [0 1 2]} {2 [0 1 2 2]} {2 [0 1 2 2]} {2 [0 1 2 2]}]\r\n\r\nappend_test.go:52: check id failed!\r\n\r\nexit status 1\r\nFAIL\ttotta/test\t0.003s\r\n```\r\nand result on my arm board:\r\n```\r\nexpect [{0 [0 0]} {0 [0 1]} {0 [0 2]} {1 [0 1 0]} {1 [0 1 1]} {1 [0 1 2]} {2 [0 1 2 0]} {2 [0 1 2 1]} {2 [0 1 2 2]}]\r\nresult [{0 [0 1]} {0 [0 1]} {0 [0 1]} {1 [0 1 0]} {1 [0 1 1]} {1 [0 1 2]} {2 [0 1 2 2]} {2 [0 1 2 2]} {2 [0 1 2 2]}]\r\n--- FAIL: Test_append (0.01s)\r\n\tappend_test.go:52: check id failed!\r\nFAIL\r\n```\r\nthe arm test binary is generate on my PC with shell:\r\n```\r\nGOPATH=$PWD:$GOPATH GOOS=linux GOARM=7 GOARCH=arm CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc go test -c {package name}\r\n```\r\nso is that an issue, or its my mistakeï¼Ÿ\r\n\r\n\r\nthanks!",
	"user": {
		"login": "ywzjackal",
		"id": 5779851,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2015-10-21T03:28:52Z",
	"created_at": "2015-10-21T03:00:55Z",
	"updated_at": "2015-10-21T03:29:04Z"
}
