{
	"id": 240537377,
	"body": "https://golang.org/pkg/unsafe/#Pointer says:\r\n\r\n\u003e (1) Conversion of a *T1 to Pointer to *T2.\r\n\u003e\r\n\u003e Provided that T2 is no larger than T1 and that the two share an equivalent memory layout, this conversion allows reinterpreting data of one type as data of another type.\r\n\r\nMy interpretation of \"equivalent memory layout\" is referring to having the same pointer slots.  Since `uint16` is no larger than `uint64` and neither contain pointers, it seems explicitly documented to be valid.\r\n\r\nIf not, we should clarify the documentation to define \"memory layout\".  That term isn't used in the Go language spec or memory model.",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 2,
		"+1": 2
	},
	"created_at": "2016-08-17T20:28:39Z",
	"updated_at": "2016-08-17T20:28:39Z"
}
