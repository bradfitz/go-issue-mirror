{
	"id": 111009620,
	"number": 12910,
	"state": "closed",
	"title": "encoding/asn1: failed to parse certificate from server: asn1: syntax error: sequence truncated",
	"body": "### Issue\r\n\r\nI use two projects which are built with go: [`docker`](https://github.com/docker/docker) and [`gitlab-ci-runner`](https://gitlab.com/gitlab/gitlab-ci-runner).\r\n\r\nBoth products try to connect to an HTTPS-enabled webservice and fail. In one case it's the docker daemon in the other case it's a NGINX in front of [gitlab](https://gitlab.com/gitlab/gitlab). In both cases I get similar errors:\r\n\r\n~~~\r\n: tls: failed to parse certificate from server: asn1: syntax error: sequence truncated\r\n~~~\r\n\r\n### Setup\r\n\r\nBoth webservices use a (different) certificate issued by an internal Sub-CA:\r\n\r\n~~~\r\nRoot-CA\r\n  Sub-CA\r\n     Sub-CA\r\n       Sub-CA\r\n         Server-CRT\r\n~~~\r\n\r\nI tried the webservices to serve the full chain excluding the Root-CA. \r\n\r\n* Gitlab:\r\n  \r\n  Accessing `gitlab` with Firefox, Chromium, `curl` and `openssl s_client` works fine since I setup `ca-trust` correctly: The root CA certificate is stored at `/etc/(pki|ca-certificates/trust-source/anchor` + `sudo update-ca-trust`.\r\n\r\n* `docker`\r\n  \r\n  This only worked if I added a single CA to the server CRT. This would require to distribute the other Root-/Sub-CAs on quite a few machines where the docker client runs.\r\n\r\n### Expected behaviour\r\n\r\nI expect both programs to support certificate chains including verification.\r\n\r\n### My role\r\n\r\nFrom your perspective I'm a end-user of both products and NOT an developer/maintiner of those products.\r\n\r\n### Information about software products\r\n\r\n#### docker\r\n\r\n~~~\r\nClient:\r\nVersion:      1.8.1\r\nAPI version:  1.20\r\nGo version:   go1.4.2\r\nGit commit:   d12ea79\r\nBuilt:        Thu Aug 13 02:19:43 UTC 2015\r\nOS/Arch:      linux/amd64\r\n\r\nServer:\r\nVersion:      1.8.1\r\nAPI version:  1.20\r\nGo version:   go1.4.2\r\nGit commit:   d12ea79\r\nBuilt:        Thu Aug 13 02:19:43 UTC 2015\r\nOS/Arch:      linux/amd64\r\n~~~\r\n\r\n#### gitlab-ci-runner\r\n\r\nI'm not sure, what `go`-version exactly was used to create the executable, but they use the docker image \"golang:1.4\" from the docker library.\r\n\r\n### Related issues\r\n\r\n* https://gitlab.com/gitlab-org/gitlab-ci-multi-runner/issues/222\r\n* https://github.com/docker/docker/issues/16448\r\n\r\nI opened an issue for the HTTPS-problem at golang as well @ayufan @cpuguy83 \r\n",
	"user": {
		"login": "dg-ratiodata",
		"id": 1267524,
		"type": "User",
		"site_admin": false
	},
	"comments": 18,
	"closed_at": "2015-12-17T07:17:58Z",
	"created_at": "2015-10-12T16:25:56Z",
	"updated_at": "2015-12-17T07:17:58Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
