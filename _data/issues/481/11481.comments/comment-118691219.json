{
	"id": 118691219,
	"body": "Yes, n =5 will fix builder at tip.\n\nYes, that cl will fix the builder.\n\nOn Sun, Jul 5, 2015, 18:54 Alex Brainman \u003cnotifications@github.com\u003e wrote:\n\n\u003e There are two ways to revert to the previous behavior:\n\u003e\n\u003e I will try your second version tonight. Are you saying it fixes your\n\u003e problem at current tip on your builder?\n\u003e\n\u003e However in both cases they cause the current exception handler to work and\n\u003e cause the _AddVectoredContinueHandler to stop working.\n\u003e\n\u003e I noticed that too while debugging. I don't have explanation for that.\n\u003e\n\u003e ... Has the go team published guidelines for interacting with cgo memory,\n\u003e especially in windows? I've heard talk of that but haven't seen anything,\n\u003e and I lack the understanding to derive it unfortunately.\n\u003e\n\u003e I am not sure what you're after. Generally if outside code uses Go memory,\n\u003e Go runtime needs to be aware of that. And it is not \"cgo memory\" - we don't\n\u003e use cgo here - function names in runtime have cgo names because windows\n\u003e uses some similar procedures to cgo. If you have some particular questions,\n\u003e I will try and answer.\n\u003e\n\u003e Here https://go-review.googlesource.com/11888 is my proposal. Let me know\n\u003e if it fixes build on your builder.\n\u003e\n\u003e Alex\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/11481#issuecomment-118690968\u003e.\n\u003e\n",
	"user": {
		"login": "kardianos",
		"id": 755121,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-06T01:57:53Z",
	"updated_at": "2015-07-06T01:57:53Z"
}
