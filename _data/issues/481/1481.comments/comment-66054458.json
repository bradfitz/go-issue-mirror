{
	"id": 66054458,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eI misread the prints in the err file.  The interlaced prints\nare from different channels, so that's okay.\n\nI think your program is wrong.\n\nHere's a typical stack trace I get (sometimes they are longer\nbut this is a typical short one):\n\n\n\nruntime.throw+0x3b /Users/rsc/g/go/src/pkg/runtime/runtime.c:78\n\truntime.throw(0x17c284, 0x21a79)\nnextgandunlock+0x1b9 /Users/rsc/g/go/src/pkg/runtime/proc.c:333\n\tnextgandunlock()\nscheduler+0x16f /Users/rsc/g/go/src/pkg/runtime/proc.c:536\n\tscheduler()\nruntime.mstart+0x74 /Users/rsc/g/go/src/pkg/runtime/proc.c:393\n\truntime.mstart()\nruntime.bsdthread_start+0x32 /Users/rsc/g/go/src/pkg/runtime/darwin/amd64/sys.s:180\n\truntime.bsdthread_start()\n\ngoroutine 25 [4]:\nruntime.gosched+0x77 /Users/rsc/g/go/src/pkg/runtime/proc.c:558\n\truntime.gosched()\nruntime.selectgo+0x351 /Users/rsc/g/go/src/pkg/runtime/chan.c:786\n\truntime.selectgo(0xf8400b96c0, 0xf84013b360)\nmain.*actor·Run+0x369 /Users/rsc/Downloads/bork/actor.go:396\n\tmain.*actor·Run(0xf84013b2a0, 0x0)\nruntime.goexit /Users/rsc/g/go/src/pkg/runtime/proc.c:149\n\truntime.goexit()\n\ngoroutine 14 [4]:\nruntime.gosched+0x77 /Users/rsc/g/go/src/pkg/runtime/proc.c:558\n\truntime.gosched()\nruntime.selectgo+0x351 /Users/rsc/g/go/src/pkg/runtime/chan.c:786\n\truntime.selectgo(0xf840016c00, 0x0)\nmain.*actor·wait+0x2f0 /Users/rsc/Downloads/bork/actor.go:106\n\tmain.*actor·wait(0xf84002b3c0, 0xf84013b2a0, 0xf84013b2a0, 0xf84013a400, 0x40bd, ...)\nmain.*actor·Wait+0x5b /Users/rsc/Downloads/bork/actor.go:93\n\tmain.*actor·Wait(0xf84002b3c0, 0xf840035210, 0xf84013a400, 0xf80000001e, 0xf840003630, ...)\nmain.Wait+0x5f /Users/rsc/Downloads/bork/actor.go:497\n\tmain.Wait(0xf840035210, 0xf84013a400, 0xf840165ae0, 0x100000001, 0xf84013a400, ...)\nmain.testTree+0xb3c /Users/rsc/Downloads/bork/tree_test.go:184\n\tmain.testTree(0x1cd01, 0x46a12)\nmain.TestTreeLinkAll+0x20 /Users/rsc/Downloads/bork/tree_test.go:155\n\tmain.TestTreeLinkAll()\ntesting.tRunner+0x2b /Users/rsc/g/go/src/pkg/testing/testing.go:133\n\ttesting.tRunner(0xf840133c00, 0xf840016828, 0x0, 0x0)\nruntime.goexit /Users/rsc/g/go/src/pkg/runtime/proc.c:149\n\truntime.goexit()\n\ngoroutine 1 [4]:\nruntime.gosched+0x77 /Users/rsc/g/go/src/pkg/runtime/proc.c:558\n\truntime.gosched()\nruntime.chanrecv+0x403 /Users/rsc/g/go/src/pkg/runtime/chan.c:324\n\truntime.chanrecv(0xf840126240, 0xf840005000, 0x0, 0x0, 0x10c78, ...)\nruntime.chanrecv1+0x4a /Users/rsc/g/go/src/pkg/runtime/chan.c:416\n\truntime.chanrecv1(0xf840126240, 0xf840016828)\ntesting.Main+0x290 /Users/rsc/g/go/src/pkg/testing/testing.go:161\n\ttesting.Main(0x4aa0d, 0xf840016810, 0x200000002, 0x10738)\nmain.main+0x49 /Users/rsc/Downloads/bork/_testmain.go:12\n\tmain.main()\nruntime.mainstart+0xf /Users/rsc/g/go/src/pkg/runtime/amd64/asm.s:263\n\truntime.mainstart()\nruntime.goexit /Users/rsc/g/go/src/pkg/runtime/proc.c:149\n\truntime.goexit()\n\nThe top trace is the scheduler stack, so ignore.\ngoroutine 1 is waiting for the test to finish, so ignore.\n\nThat leaves goroutine 14 and goroutine 25.\nWe can see from the arg to main.*actor.wait in goroutine 14\nthat it is waiting for 0xf84013b2a0, which is the receiver\nfor main.*actor.Run in goroutine 25.\nSo 14 is waiting on 25.\n\nThat leaves goroutine 25.  It is in Run, selecting between\nreceiving from act.mailbox and act.exitChan.\nThe only close call in the entire program closes act.downChan,\nso I expect that neither act.mailbox nor act.exitChan\nis closed (ever).  My guess is that a send on act.exitChan\nnever happened.\n\nThere's no wait on a closed channel being missed\nas far as I can tell, because Wait is waiting on a channel\nthat will only be closed when Run terminates, but Run\nis still running.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-02-11T18:24:09Z",
	"updated_at": "2014-12-08T10:08:32Z"
}
