{
	"id": 66066577,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eDespite my \"first blush\" comment, this is not a bug. The template package handles this\ncorrectly.\n\nThe example here is a textbook version of the 'settability' issue described near the end\nof the \"Laws of Reflection\" blog post:\n\u003ca href=\"http://blog.golang.org/2011/09/laws-of-reflection.html\"\u003ehttp://blog.golang.org/2011/09/laws-of-reflection.html\u003c/a\u003e.\n\nWhen p2 is passed to the template library, the library receives a copy of p2, not p2\nitself. It would be incorrect to take its address to discover the method.  Go in general\nbehaves the same way; if you say p2.X() the compiler can take the address of the local\nvariable p2, but that's not the same as passing p2 to a function, calling X, and\nexpecting the original p2 to be updated.\n\nWorking as intended, if subtly.\u003c/pre\u003e\n\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-04-23T01:33:19Z",
	"updated_at": "2014-12-08T10:18:37Z"
}
