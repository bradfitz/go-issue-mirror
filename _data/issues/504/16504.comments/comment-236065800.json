{
	"id": 236065800,
	"body": "If convenience functions are required for compression packages I suggest the alternatives:\r\n\r\n```\r\nfunc Compress(w io.Writer, data []byte) error\r\nfunc Decompress(r io.Reader) (data []byte, err error)\r\n```\r\n\r\nThese functions would have more use cases and are very easy to use with a bytes.Buffer or a bytes.Reader.\r\n\r\n```\r\nvar buf bytes.Buffer\r\nerr := Compress(\u0026buf, data)\r\n```\r\n\r\n```\r\ndata, err := Decompress(bytes.NewReader(compressedData))\r\n```\r\n\r\nBTW Decompression doesn't need the Close call. It doesn't do anything useful. Depending on the compression package Close for a reader either sets the reader to closed or returns the last returned error if its not io.EOF.  IMHO returning a io.ReadCloser for a decompressor is a design error. The bzip2 package does the right thing and returns only an io.Reader.\r\n",
	"user": {
		"login": "ulikunitz",
		"id": 8460565,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-29T00:43:18Z",
	"updated_at": "2016-07-29T00:43:18Z"
}
