{
	"id": 169099485,
	"body": "I'm able to reproduce this with clang 3.8 as well.\r\n\r\nIt appears the magic that reproduces it is:\r\n```\r\nCGO_LDFLAGS='-fsanitize=memory' CGO_CPPFLAGS='-fsanitize=memory' go test -a -msan\r\n```\r\n\r\nI'm using `CGO_{LDFLAGS,CPPFLAGS}` to control compilation of my cgo stuff, but it appears that compiling something in the standard library with these environment variables causes this issue.\r\n\r\nI'm using `clang` as provided by the Chromium team (https://github.com/google/sanitizers/wiki/AddressSanitizerHowToBuild#chrome). The exact version is:\r\n```\r\n$ clang --version\r\nclang version 3.8.0 (trunk 255169)\r\nTarget: x86_64-unknown-linux-gnu\r\nThread model: posix\r\nInstalledDir: /third_party/llvm-build/Release+Asserts/bin\r\n```",
	"user": {
		"login": "tamird",
		"id": 1535036,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-05T19:06:47Z",
	"updated_at": "2016-01-05T19:06:47Z"
}
