{
	"id": 66070705,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3 by **Alexander.Luya**:\n\n\u003cpre\u003einterface{} is literally the interface keyword. No conflict and no need for a new\nkeyword.\n  This unnecessaryã€€\"{}\" is ugly and stupid,and make code verbose.I think the reason \"{}\" was added is because \"interface\" has been used as key word.\n\n* map\u0026lt;key,value\u0026gt; is the Java syntax, you said it was old and ugly\n  Maybe other languages do better then java,but \u0026lt;key,value\u0026gt; is far more better than [key]value.People will be easy to know \"\u0026lt;key,value\u0026gt;\" is a pair at first glance,because it is symmetric,but when seeing \"[key]value\",take a while to recognize it,or must be told.\n\n* Java classes are as verbose as Go structs: class T { int a, b; } versus type T struct\n{ a, b int }\n    I don't mean this but function declaration:func (s *StructName) funcNames(){...},this \"(s *StructName)\" must be repeated in every function,make code verbose.But if this style can benefit other aspects,it is fine,but if not,consideration should be token to how to reduce this repetition.\n\n\n* Go is a lot less messy than C\n  Take a look this sequence:\"..C,X................java...\".You are just saying X is a lot less messy than C,Yes,you are right,but please take a look at this long \"................\".In many aspects,golang do well,but there are also some unbelievable funny designs,I think it is,primary,because of C background of designers.For performance,stare at c,but for syntax,never stay at c,take a look at java,c#,and ruby or other betters. \n\n* Java's one-class-per-file often results in illogical organization.\n  one-class-per-file makes code structure more clear.First,at the first glance at directory,users will know what files or even function may include it in a package,they are implied by file name.Second,if user want to find some \"element\",check package view(or directory if no IDE used),then open,it is linear operations,but for current golang file \"element\" organizing style,it make source file long and messy,hard to find \"element\".Remember many people is IDE guys not vi guys.But honestly,I don't know the drawback of one-class-per-file,can you give examples.\n\n* Go is not limited to a small number of people, it is already popular.\n  First of all,face the truth,directly and directly.I have tried to persuade my colleagues and friends to give golang a try.Few of them tried,and told me this language is verbose,ugly,awkward.And I told them its performance is better,and they got this:\u003ca href=\"http://shootout.alioth.debian.org/u32/which-programming-languages-are-fastest.php,so\"\u003ehttp://shootout.alioth.debian.org/u32/which-programming-languages-are-fastest.php,so\u003c/a\u003e I can just close my mouth.I still used golang,because currency and performance are my primary concerns,even I am not sure whether it do perform better than java,but I think big direction is right:compilation will perform better than byte code.But I must still endure verbose syntax and lonely.Thank goodness,golang's IRC is very good.\n\n* Many Go users including me like the syntax very much\n  Maybe,you aren't sure of this,take a look at:\u003ca href=\"http://uberpython.wordpress.com/2012/09/23/why-im-not-leaving-python-for-go/\"\u003ehttp://uberpython.wordpress.com/2012/09/23/why-im-not-leaving-python-for-go/\u003c/a\u003e and \u003ca href=\"http://news.ycombinator.com/item?id=4562211\"\u003ehttp://news.ycombinator.com/item?id=4562211\u003c/a\u003e. Even I take you are right,take a look at \u003ca href=\"http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html\"\u003ehttp://www.tiobe.com/index.php/content/paperinfo/tpci/index.html\u003c/a\u003e. I think this shamed ranking is still primarily because of google,if not google,golang may have been garbage collected.\n\n* Go 1 syntax is frozen.\n  I am not sure whether any syntax changes have been made from  its birth,or never changed before.I mean syntax,but API\n\n   Science isn't about political,even not habit,it is about productive and beautiful.please,take an investigate and do changes:\n\nInterface{}-------------------to------------------\u0026gt;Interf or more simple words\nmap[key]value-----------------to------------------\u0026gt;map\u0026lt;key,value\u0026gt; or more\nbeautiful syntax\nfor item rang collection------to------------------\u0026gt;for(item::collection),for example\nfor(string::[]string{\"item0\",\"item1\"}) or more simple form\n\nI am sure these three changes will attract more users,but for enforcing one class per\nfile,I am not sure about it,if you guys can give acceptable reasons,it is fine,if you\ncan't,repeating \"(s *StructName)\" in every funcation is definitly unacceptable.And for\nerror handling,it should be simpled,but you may give more workaround if it is hard to\nchange\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-09-28T05:14:22Z",
	"updated_at": "2014-12-22T06:19:11Z"
}
