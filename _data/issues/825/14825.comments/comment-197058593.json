{
	"id": 197058593,
	"body": "Sure, I can take it, but we already have a rule that would undo an AND created from the last two shifts since it's several bytes shorter:\r\n```\r\nfunc foo_ssa(x uint64) uint64 {\r\n        return x \u0026 0x3fffFFFFffffFFFF\r\n}\r\n\r\nTip\r\n        0x0000 00000 (/tmp/m.go:4)      MOVQ    \"\".x+8(FP), AX\r\n        0x0005 00005 (/tmp/m.go:4)      SHLQ    $2, AX\r\n        0x0009 00009 (/tmp/m.go:4)      SHRQ    $2, AX\r\n        0x000d 00013 (/tmp/m.go:4)      MOVQ    AX, \"\".~r1+16(FP)\r\n        0x0012 00018 (/tmp/m.go:4)      RET\r\n```\r\n\r\nvs:\r\n```\r\n        0x0000 00000 (/tmp/m.go:4)      MOVQ    \"\".x+8(FP), BP\r\n        0x0005 00005 (/tmp/m.go:4)      MOVQ    $4611686018427387903, BX\r\n        0x000f 00015 (/tmp/m.go:4)      ANDQ    BP, BX\r\n        0x0012 00018 (/tmp/m.go:4)      MOVQ    BX, \"\".~r1+16(FP)\r\n        0x0017 00023 (/tmp/m.go:4)      RET\r\n```\r\n\r\nSince sz is unsigned though, I think the last two shifts are just a no-op in this case. I'll look into that.",
	"user": {
		"login": "tzneal",
		"id": 64753,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-15T22:52:41Z",
	"updated_at": "2016-03-15T22:52:41Z"
}
