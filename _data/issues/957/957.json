{
	"id": 51277162,
	"number": 957,
	"state": "closed",
	"title": "math.Exp does not handle underflow on darwin/amd64",
	"body": "by **bcfabien**:\n\n\u003cpre\u003eBefore filing a bug, please check whether it has been fixed since\nthe latest release: run \u0026quot;hg pull -u\u0026quot; and retry what you did to\nreproduce the problem.  Thanks.\n\nWhat steps will reproduce the problem?\n\npackage main\nimport (\n    \u0026quot;fmt\u0026quot;\n    \u0026quot;math\u0026quot;\n)\nfunc main() {\n    var y, z float64\n    y = -1.0e3\n    z = math.Exp(y)\n    fmt.Printf(\u0026quot;y: %g, z: %g\\n\u0026quot;, y, z)\n}\n\nWhat is the expected output?\n\ny: -1000, z: 0\n\nWhat do you see instead?\n\ny: -1000, z: -1.6403979450983092e+182\n\nWhat is your $GOOS?  $GOARCH?\n\nGOARCH=amd64\nGOOS=darwin\n\nWhich revision are you using?  (hg identify)\n\n5992bf56aa72 release.2010-07-14/release\n\nPlease provide any additional information below.\n\nI do not see this problem on GOOS = linux, GOARCH = 386\n\nI do not see this problem if I make a local copy of go/src/pkg/math/exp.go and call it\ninstead of math.Exp (see the attached file)\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/957/0/testExp.go\"\u003etestExp.go\u003c/a\u003e (5030 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:06:30Z",
	"created_at": "2010-07-25T23:05:27Z",
	"updated_at": "2016-06-24T19:18:10Z"
}
