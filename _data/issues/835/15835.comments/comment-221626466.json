{
	"id": 221626466,
	"body": "Yes, I'm aware of the problem: To create the builtin export data, one needs a working compiler. That compiler relies on reading the existing builtin data. If the export format changed, the old format (used for the builtins) cannot be read.\r\n\r\nThe problem always existed, even with the textual format, but the textual format was a bit more \"elastic\" in the sense that internal node changes didn't necessarily reflect themselves directly in the export data syntax. The new export format is more directly coupled to the node structure (which is why it's shorter and faster), but any node structure changes more immediately affect the export format.\r\n\r\nThe work-around (for now) is to make the importer to read both a prior and a new export format, and the exporter to produce the new (changed) export format. The importer may be told what to do with a temporary flag, or a marker in the export data (version string can be used). The so adjusted compiler can then be used to create a new builtin.go. After that step, the work-around scaffolding can be removed again.\r\n\r\nAgreed that this is cumbersome. We probably cannot avoid the need to read both an old and a new export format in case of format changes, but it should be possible to provide some internal support to make that step easy.\r\n\r\nWill document for now.\r\n",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-25T16:13:00Z",
	"updated_at": "2016-05-25T16:13:00Z"
}
