{
	"id": 143260556,
	"number": 14942,
	"state": "closed",
	"title": "proposal: function to read all and close io.ReadCloser",
	"body": "**Background** It often comes up, that you need to swallow a reader and close it afterwards. Most popular example is reading a request body in a http.Handler. The close is often forgotten and if it isn't forgotten, people are not always sure whether to handle the error of close or not.\r\n\r\n**Proposed solution** Provide function in ioutils taking an io.ReadCloser, read all content and close it afterwards.\r\n\r\n**Example implementation** http://play.golang.org/p/BF0zJjr05Z\r\n```go\r\nfunc ReadAllClose(rc *io.ReadCloser) ([]byte, error) {\r\n\tdefer rc.Close()\r\n\tb, err := ioutil.ReadAll(rc)\r\n\treturn b, err\r\n}\r\n```",
	"user": {
		"login": "nightlyone",
		"id": 1767118,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		},
		{
			"name": "Proposal-Declined"
		}
	],
	"comments": 3,
	"closed_at": "2016-03-25T02:20:03Z",
	"created_at": "2016-03-24T14:23:19Z",
	"updated_at": "2016-03-25T02:20:10Z"
}
