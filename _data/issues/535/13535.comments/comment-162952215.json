{
	"id": 162952215,
	"body": "This commit has a significant effect on the behavior of the background sweeper, which means the profiling information is largely masked by #13527. In fact, by just about every performance counter, it looks like things should have improved:\r\n\r\nBefore:\r\n```\r\n       5780.387371 task-clock (msec)         #    1.298 CPUs utilized            ( +-  0.14% )\r\n            80,332 context-switches          #    0.014 M/sec                    ( +-  1.42% )\r\n               218 cpu-migrations            #    0.038 K/sec                    ( +-  7.59% )\r\n            98,357 page-faults               #    0.017 M/sec                    ( +-  0.20% )\r\n    21,038,437,476 cycles                    #    3.640 GHz                      ( +-  0.16% )\r\n     8,109,376,876 stalled-cycles-frontend   #   38.55% frontend cycles idle     ( +-  0.52% )\r\n   \u003cnot supported\u003e stalled-cycles-backend  \r\n    44,019,548,586 instructions              #    2.09  insns per cycle        \r\n                                             #    0.18  stalled cycles per insn  ( +-  0.05% )\r\n     7,870,279,001 branches                  # 1361.549 M/sec                    ( +-  0.06% )\r\n        20,604,627 branch-misses             #    0.26% of all branches          ( +-  0.36% )\r\n\r\n        21,155,717 cache-misses              #   32.480 % of all cache refs      ( +-  1.38% )\r\n        65,135,328 cache-references                                              ( +-  1.44% )\r\n\r\n       4.454431364 seconds time elapsed                                          ( +-  0.14% )\r\n```\r\n\r\nAfter:\r\n```\r\n       5501.692468 task-clock (msec)         #    1.159 CPUs utilized            ( +-  1.13% )\r\n            43,624 context-switches          #    0.008 M/sec                    ( +-  1.65% )\r\n               253 cpu-migrations            #    0.046 K/sec                    ( +- 20.66% )\r\n            92,468 page-faults               #    0.017 M/sec                    ( +-  4.19% )\r\n    20,038,538,003 cycles                    #    3.642 GHz                      ( +-  1.00% )\r\n     7,398,799,878 stalled-cycles-frontend   #   36.92% frontend cycles idle     ( +-  2.71% )\r\n   \u003cnot supported\u003e stalled-cycles-backend  \r\n    43,409,563,204 instructions              #    2.17  insns per cycle        \r\n                                             #    0.17  stalled cycles per insn  ( +-  0.10% )\r\n     7,726,564,010 branches                  # 1404.398 M/sec                    ( +-  0.11% )\r\n        19,121,674 branch-misses             #    0.25% of all branches          ( +-  0.19% )\r\n\r\n        20,157,127 cache-misses              #   33.563 % of all cache refs      ( +-  0.19% )\r\n        60,058,099 cache-references                                              ( +-  0.58% )\r\n\r\n       4.748749757 seconds time elapsed                                          ( +-  1.68% )\r\n```\r\n\r\nThe one thing that doesn't improve is the amount of time we spend blocked in futex: it goes from 43528.4 total ms to 45066.6 total ms (though the number of futex calls drops from 272919 to 106681!).\r\n\r\n(The futex stats are computed from `perf trace -- $BENCH -test.bench BinaryTree17 | awk '{N+=$2;T+=$2*$4}END{print N \" \" T}'`.)",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-08T17:24:13Z",
	"updated_at": "2015-12-08T17:24:13Z"
}
