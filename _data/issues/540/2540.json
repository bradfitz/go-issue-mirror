{
	"id": 51279354,
	"number": 2540,
	"state": "closed",
	"title": "encoding/json: ignore mismatched null during unmarshal?",
	"body": "by **dahankzter**:\n\n\u003cpre\u003eBefore filing a bug, please check whether it has been fixed since\nthe latest release: run \u0026quot;hg pull\u0026quot;, \u0026quot;hg update default\u0026quot;, rebuild, and\nretry\nwhat you did to\nreproduce the problem.  Thanks.\n\nWhat steps will reproduce the problem?\n1. Create a struct with a string field\ntype T struct {\n\tS string\n}\n\n2. Create json with the nested string field null\n{\\\u0026quot;s\\\u0026quot; : null}\n\n3. Unmarshal it\n\nWhat is the expected output?\nI expect no error to be returned from the json.Unmarshall\n\nWhat do you see instead?\nError message:\nUnmarshal error: json: cannot unmarshal null into Go value of type string\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nArch Linux x86_64\n\nWhich revision are you using?  (hg identify)\n5190380293e8+ tip\n\nPlease provide any additional information below.\nThe patch:\n\ndiff -r 5190380293e8 src/pkg/encoding/json/decode.go\n--- a/src/pkg/encoding/json/decode.go\tThu Dec 08 15:12:08 2011 +0900\n+++ b/src/pkg/encoding/json/decode.go\tThu Dec 08 18:06:53 2011 +0100\n@@ -592,7 +592,7 @@\n \t\tswitch v.Kind() {\n \t\tdefault:\n \t\t\td.saveError(\u0026amp;UnmarshalTypeError{\u0026quot;null\u0026quot;, v.Type()})\n-\t\tcase reflect.Interface, reflect.Ptr, reflect.Map, reflect.Slice:\n+\t\tcase reflect.Interface, reflect.Ptr, reflect.Map, reflect.Slice, reflect.String:\n \t\t\tv.Set(reflect.Zero(v.Type()))\n \t\t}\n\nShould be tentatively sufficient.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 13,
	"closed_at": "2014-12-08T10:13:33Z",
	"created_at": "2011-12-08T17:10:51Z",
	"updated_at": "2016-06-24T21:21:33Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
