{
	"id": 145748325,
	"number": 15107,
	"state": "open",
	"title": "cmd/godoc: first return value with an unqualified imported type not showing up in documentation output",
	"body": "1. What version of Go are you using (`go version`)?\r\n`go version go1.5.3 linux/amd64`\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/mikeatlas/gopath\"\r\nGORACE=\"\"\r\nGOROOT=\"/home/mikeatlas/golang/go\"\r\nGOTOOLDIR=\"/home/mikeatlas/golang/go/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n3. What did you do?\r\n\r\nUsing `godoc -http=:6060` to generate live documentation, I seem to have an edge case that does not appear to make any sense. Function return values with an imported type without a qualifier as the first value do not appear in documentation, with return order being the only difference and the imported type without a qualifier as the first return value will cause the function to not show up in documentation output HTML. An example is as follows:\r\n\r\n```go\r\npackage xyz\r\n\r\nimport . \"qpackage/q\"\r\n\r\n// TestFn is a test function\r\nfunc TestFn(input string) (Q, error) {}\r\n\r\n// TestFnX is a test function\r\nfunc TestFnX(input string) (error, Q) {}\r\n```\r\nIn this example, only `TestFnX` appears in the documentation output. However, if I qualify the imported package type, both work:\r\n```go\r\npackage xyz\r\n\r\nimport q \"qpackage/q\"\r\n\r\n// TestFn is a test function\r\nfunc TestFn(input string) (q.Q, error) {}\r\n\r\n// TestFnX is a test function\r\nfunc TestFnX(input string) (error, q.Q) {}\r\n```\r\nIn this example, both `TestFn` and `TestFnX` appear in the documentation output.\r\n\r\n4. What did you expect to see?\r\n\r\nBoth examples in the code sample above should have worked - the return order of the imported type seems to be the only difference; I'm able to generate documentation for the function if the first return value type is not from the unqualified imported package.\r\n\r\n5. What did you see instead?\r\n\r\nOnly if a native type is returned first, or if the imported type has a qualifier, will the function appear correctly in the `godoc` output.\r\n\r\n\r\n\r\n",
	"user": {
		"login": "mikeatlas",
		"id": 12704,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"created_at": "2016-04-04T17:18:55Z",
	"updated_at": "2016-04-07T22:51:36Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
