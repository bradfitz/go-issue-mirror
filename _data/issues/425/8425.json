{
	"id": 51288173,
	"number": 8425,
	"state": "closed",
	"title": "cmd/api: Assembly causes API compatibility check to fail",
	"body": "by **qpingu**:\n\n\u003cpre\u003ego version go1.3 darwin/amd64\n\n1. Start with a fresh checkout of go.\n2. Run all.bash and verify that it successfully builds and passes the compatibility test.\n3. Copy pkg/crypto/aes/asm_amd64.s to pkg/crypto/cipher and remove everything but the\ninclude.\n4. Run all.bash again:\n\n  # Checking API compatibility.\n  Error running API checker: exit status 1\n  Go version is \u0026quot;go1.3\u0026quot;, ignoring -next /Users/lcurley/go/root/api/next.txt\n  2014/07/25 16:11:10 error typechecking package crypto/x509:   /Users/lcurley/go/root/src/pkg/crypto/x509/pem_decrypt.go:49:14: cannot use des.NewCipher (value of type func(key []byte) (cipher.Block, error)) as func(key []byte) (cipher.Block, error) value in struct literal (windows-amd64)\n  exit status 1\n\n\nThe inclusion of the assembly file, regardless of the contents, causes the compatibility\ncheck to fail with this bizarre error. The code compiles, passes all tests, and doesn't\nchange exported methods. I believe it works like expected on Linux but I haven't tested\nit in months.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Unfortunate"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"closed_at": "2014-12-08T10:46:48Z",
	"created_at": "2014-07-25T23:27:31Z",
	"updated_at": "2016-06-25T01:38:33Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
