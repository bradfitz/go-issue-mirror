{
	"id": 66058859,
	"body": "\u003ca id=\"c8\"\u003e\u003c/a\u003eComment 8 by **jeff.allen**:\n\n\u003cpre\u003eYes, it is working as designed. The idea is that this standard library should ensure\nthat in the common case where the opened connection has \"gone stale\" because the syslog\nserver has been restarted hours or minutes or seconds before, the application will\nrefresh the connection and send the log message. But, being a piece of the standard\nlibrary, it should not be too heavy, and cover every possible kind of retry logic.\nInstead, it should give a useful error that callers can use.\n\nIn the case where there's a race and the syslog client fails to write because the syslog\nserver is going down, then retries and fails, then the syslog server starts, Write will\nreturn an error one time and the message will be lost. On the next call to Write, it\nwill reconnect and messages will be passed.\n\nIf you need to be absolutely, positively sure the message is logged, you can't use\nsyslog anyway, because the rest of the design of syslog servers is not usually 100%\nsafe. \n\nIf you want to wait and retry when Write returns an error, you'd need to wrap calls to\nWrite to do that; but then you need to consider the impact this could have on callers to\nWrite, who might expect it to return immediately.\n\nHope this is helpful.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-07-17T07:45:10Z",
	"updated_at": "2014-12-08T10:12:12Z"
}
