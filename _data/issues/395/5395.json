{
	"id": 51283563,
	"number": 5395,
	"state": "closed",
	"title": "net: re-implement Interfaces and InterfaceAddrs for IPNet, IPv6 on Windows",
	"body": "by **tom.walsh@expresshosting.net**:\n\n\u003cpre\u003eThe following code returns different results based on the platform:\n\npackage main\n\nimport (\n    \u0026quot;fmt\u0026quot;\n    \u0026quot;net\u0026quot;\n)\n\nfunc main() {\n    addrs, _ := net.InterfaceAddrs()\n    for _, addr := range addrs {\n        fmt.Println(addr.String())\n    }\n}\n\nOn Linux it produces:\n\n127.0.0.1/8\n192.168.1.10/24\n::1/128\nfe80::21b:21ff:fe14:3bd3/64\n\nOn Windows it produces:\n\n192.168.11.71\n\u20290.0.0.0\n\u2029192.168.1.107\n\u2029192.168.56.1\n\nPlease note the lack of CIDR netmasks\n\n\nWhat is the expected output?\nConsistent output no matter which platform. I think that including the CIDR is a better\noption (Linux has it right, Windows has it wrong)\n\n\nWhat do you see instead?\nLinux includes the CIDR with the address. Windows omits the CIDR notation.\n\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g on both platforms\n\n\nWhich operating system are you using?\nLinux and Windows\n\n\nWhich version are you using?  (run 'go version')\nWindows is 1.1rc1 (also tested with 1.0.2 with the same results), Linux 1.0.3\n\n\nPlease provide any additional information below.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "HelpWanted"
		},
		{
			"name": "OS-Windows"
		}
	],
	"comments": 33,
	"closed_at": "2015-02-10T19:12:21Z",
	"created_at": "2013-05-02T20:45:33Z",
	"updated_at": "2016-02-03T00:35:05Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
