{
	"id": 51277256,
	"number": 1027,
	"state": "closed",
	"title": "6prof sometimes fails on Linux amd64 with \"unexpected new tid\" when using goroutines",
	"body": "by **namegduf**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. Copy the following into a file:\n\npackage main\n\nimport \u0026quot;fmt\u0026quot;\n\nfunc main() {\n        wait := make(chan bool)\n        go func() {\n                \u0026lt;-wait\n                fmt.Printf(\u0026quot;Test!\u0026quot;)\n        }()\n        fmt.Println(\u0026quot;Hello World!\u0026quot;)\n}\n\n2. Build the file with 6g file.go; 6l file.go\n2. Run 6prof on the output executable\n\nWhat is the expected output?\n\nThe program's own output, follwed by a sample count and profiling output. Absence of\nerrors.\n\nWhat do you see instead?\n\n\u0026quot;ptrace waitpid: unexpected new tid \u0026lt;some tid\u0026gt; status 0x137f\u0026quot;, followed\nby the program's output, followed by the program hanging. No output from 6prof.\n\nWhat is your $GOOS?  $GOARCH?\n\nGOOS=linux\nGOARCH=amd64\n\nWhich revision are you using?  (hg identify)\n\n58cc2828bfd2 tip\n\n\nIt seems to work sometimes with even an empty goroutine, but removing the channel seems\nto make things inconsistent.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:06:43Z",
	"created_at": "2010-08-13T17:08:05Z",
	"updated_at": "2016-06-24T19:19:07Z"
}
