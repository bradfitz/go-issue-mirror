{
	"id": 183195023,
	"number": 17454,
	"state": "closed",
	"title": "text/template: Templates should be able to access variables outside them",
	"body": "Templates cannot use variables defined outside them, like so:\r\n\r\n    {{$foo := .Foo}}\r\n    {{define \"bar\"}} {{$foo}} {{end}} {{/* error: unknown variable \"foo\" */}}\r\n\r\nThis means the template parameter pipeline must contain all the data needed by the template.\r\n\r\nSo if you've got a slice, and all the elements share some data, and in an iteration of the slice you want to pass everything about an element to a template, you can't factor that data out into a surrounding struct and then pull it into templates with variables:\r\n\r\n    type Names struct {\r\n        First string\r\n        Last []string\r\n    }\r\n\r\n    {{$first := .Names.First}}\r\n    {{range .Names.Last}} {{$first}} {{.}} {{end}} {{/* error: unknown variable \"first\" */}}\r\n\r\n*Note: See below for a correction.*\r\n\r\nYou have to duplicate that shared data and push it down into each element of the slice:\r\n\r\n    type Name struct {\r\n        First string\r\n        Last string\r\n    }\r\n\r\n    {{range .Names}} {{.First}} {{.Last}} {{end}} {{/* .First is the same for all iterations */}}\r\n\r\nI'm lazy and I don't want to do this. [Insert arguments here about DRY, compose-ability, simplicity, power, lexical scoping, etc.]\r\n\r\nNote that this ability to reference outside variables isn't all that different from the ability to reference outside templates within the same \"scope\" (text/template doc term, not mine).",
	"user": {
		"login": "willfaught",
		"id": 63830,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"closed_at": "2016-10-17T21:31:36Z",
	"created_at": "2016-10-15T07:35:02Z",
	"updated_at": "2016-10-18T01:20:37Z"
}
