{
	"id": 66082195,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003ethis is the equivalent code for the ssh/test/ package.\n\n\nfunc TestLargeStderr(t *testing.T) {\n\tserver := newServer(t)\n\tdefer server.Shutdown()\n\tconn := server.Dial(clientConfig())\n\tdefer conn.Close()\n\n\t// Create a session\n\tsession, err := conn.NewSession()\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer session.Close()\n\n\tstdout, err := session.StdoutPipe()\n\tif err != nil {\n\t\tt.Fatalf(\"StdoutPipe: %v\", err)\n\t}\n\tstderr, err := session.StderrPipe()\n\tif err != nil {\n\t\tt.Fatalf(\"StderrPipe: %v\", err)\n\t}\n\n\tobuf := new(bytes.Buffer)\n\tebuf := new(bytes.Buffer)\n\n\t// 16382 - OK.\n\tconst STDERR_SIZE = 16383\n\tcontents := string(bytes.Repeat([]byte(\"A\"), STDERR_SIZE))\n\tcmd := fmt.Sprintf(`echo \"%s\" 1\u003e\u00262`, contents)\n\n\tt.Logf(\"executing %s...%s\\n\", cmd[:20], cmd[len(cmd)-20:])\n\tif err := session.Start(cmd); err != nil {\n\t\tt.Fatalf(\"session.Start: %v\", err)\n\t}\n\n\tio.Copy(obuf, stdout)\n\tio.Copy(ebuf, stderr)\n\n\terr = session.Wait()\n\tif err != nil {\n\t\tt.Fatalf(\"session.Wait: %v\", err)\n\t}\n\n\tfmt.Println(\"STDOUT: \" + obuf.String())\n\tfmt.Println(\"STDERR: \" + ebuf.String())\n}\u003c/pre\u003e",
	"user": {
		"login": "hanwen",
		"id": 31547,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-07-15T17:51:37Z",
	"updated_at": "2014-12-08T10:32:11Z"
}
