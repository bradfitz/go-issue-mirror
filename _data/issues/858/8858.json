{
	"id": 51288793,
	"number": 8858,
	"state": "closed",
	"title": "net: each Read, ReadFrom variants doesn't take care of a shared buffer which is used by multiple goroutines",
	"body": "by **rpzrpzrpz**:\n\n\u003cpre\u003e[root@rpzcentos rpzcache]# go version\ngo version go1.3.1 linux/amd64\n\nnet.ListenUDP(\u0026quot;udp4\u0026quot;,@gsrvaddr)\nglen,grxadd, gerr := gconn.ReadFromUDP(gbuf[0:])\n\ngo funcprocessbytes(grxadd,gbuf[0:glen])\n\nThere is no way to call a go routine after calling ReadFromUDP since those bytes are not\nsafe in the go routine.  \n\nThe go routine will pass along the proper values in grxadd, but the bytes in gbuf \nare sometimes duplicated on successive calls to the funcprocessbytes( ).\n\nChanging the code and removing the \u0026quot;go\u0026quot; directive, the bytes are processed OK\nbecause the bytes are left in the network stack and each call to funcprocessbytes() is\ncalled serially instead of in parallel.\n\nI will try to work on a sample code program for this.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:48:58Z",
	"created_at": "2014-10-03T02:39:39Z",
	"updated_at": "2016-06-25T01:42:34Z"
}
