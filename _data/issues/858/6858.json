{
	"id": 51285834,
	"number": 6858,
	"state": "closed",
	"title": "spec: field tags have to be identical when casting",
	"body": "\u003cpre\u003eRun this:\n\npackage main\n\ntype Message struct {\n\tId   int    `db:\u0026quot;id\u0026quot;`\n\tText string `db:\u0026quot;text\u0026quot;`\n}\n\ntype Message2 struct {\n\tId   int    `json:\u0026quot;id\u0026quot; xml:\u0026quot;id,attr\u0026quot;`\n\tText string `json:\u0026quot;text\u0026quot;`\n}\n\nfunc main() {\n\tmsg := Message{1, \u0026quot;Hello\u0026quot;}\n\tmsg2 := Message2(msg)\n\t_ = msg2\n}\n\nWhat is the expected output?\n\n[no output]\n\nWhat do you see instead?\n\ncannot convert msg (type Message) to type Message2\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\nWhich version are you using?  (run 'go version')\n\ngo version devel +d744da8c8cbf Wed Sep 25 16:18:33 2013 -0400 darwin/amd64\n\nPlease provide any additional information below.\n\nI'm trying to decouple my database layer from my service layer into separate packages.\nTags in one package are only relevant to that package. What I'd like to do is re-define\nthe struct in my service layer and cast it from the database layer. The fields inside\nthe struct are otherwise exactly the same, besides the tags.\n\nUnfortunately it won't cast unless the tags are also exactly the same. The only solution\nI have at this point is put the structs in a \u0026quot;common\u0026quot; package that both the\ndatabase and service layers share. But then I'm mixing tags...\u003c/pre\u003e",
	"user": {
		"login": "lukescott",
		"id": 486224,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "LanguageChange"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 28,
	"closed_at": "2016-10-04T17:08:00Z",
	"created_at": "2013-12-01T17:19:37Z",
	"updated_at": "2016-10-04T17:08:00Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	},
	"reactions": {
		"total_count": 3,
		"+1": 3
	}
}
