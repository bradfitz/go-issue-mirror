{
	"id": 133163067,
	"number": 14306,
	"state": "closed",
	"title": "runtime: SIGILL in runtime.mapiternext on amd64 with 1.6rc2 ",
	"body": "###### What version of Go are you using (go version)?\r\n```\r\ngo version go1.6rc2 darwin/amd64\r\n```\r\n###### What operating system and processor architecture are you using?\r\nMac OS X 10.9.5 on Intel Core i7-3615QM\r\n###### What did you do?\r\n```\r\ngo test ./key -run notest -bench .\r\n```\r\nin the package `github.com/aristanetworks/goarista` checked out at revision tsuna/goarista@d53bff3794620f41b59c1d8fd2f92085ac093e51\r\n###### What did you expect to see?\r\nBenchmarks should pass.\r\n###### What did you see instead?\r\nI've seen this once:\r\n```\r\nSIGILL: illegal instruction\r\nPC=0xa939 m=2\r\n\r\ngoroutine 11 [running]:\r\nruntime.mapiternext(0x820306120)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/runtime/hashmap.go:718 +0x279 fp=0x8203b46e0 sp=0x8203b4650\r\nruntime.mapiterinit(0x147820, 0x820708000, 0x820306120)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/runtime/hashmap.go:666 +0x2af fp=0x8203b4710 sp=0x8203b46e0\r\nreflect.mapiterinit(0x147820, 0x820708000, 0x15)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/runtime/hashmap.go:1014 +0x4a fp=0x8203b4738 sp=0x8203b4710\r\nreflect.Value.MapKeys(0x147820, 0x820708000, 0x15, 0x0, 0x0, 0x0)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/reflect/value.go:1075 +0xec fp=0x8203b47f8 sp=0x8203b4738\r\nfmt.(*pp).printReflectValue(0x82034a1a0, 0x147820, 0x820708000, 0x15, 0x76, 0x0, 0x0)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/fmt/print.go:893 +0x2500 fp=0x8203b4fb0 sp=0x8203b47f8\r\nfmt.(*pp).printArg(0x82034a1a0, 0x147820, 0x820708000, 0x76, 0x0, 0x0)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/fmt/print.go:810 +0x540 fp=0x8203b5138 sp=0x8203b4fb0\r\nfmt.(*pp).doPrintf(0x82034a1a0, 0x1bdf90, 0xc, 0x8203b5568, 0x1, 0x1)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/fmt/print.go:1238 +0x1dcd fp=0x8203b54c0 sp=0x8203b5138\r\nfmt.Sprintf(0x1bdf90, 0xc, 0x8203b5568, 0x1, 0x1, 0x0, 0x0)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/fmt/print.go:203 +0x6f fp=0x8203b5510 sp=0x8203b54c0\r\ngithub.com/aristanetworks/goarista/key.keyImpl.GoString(0x1380e0, 0x820712000, 0x0, 0x0)\r\n\t/Users/tsuna/go/src/github.com/aristanetworks/goarista/key/key.go:134 +0x110 fp=0x8203b55a8 sp=0x8203b5510\r\ngithub.com/aristanetworks/goarista/key.(*keyImpl).GoString(0x820580010, 0x0, 0x0)\r\n\t\u003cautogenerated\u003e:8 +0xa4 fp=0x8203b55e0 sp=0x8203b55a8\r\nfmt.(*pp).handleMethods(0x82034a0d0, 0x800000076, 0x0, 0x1)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/fmt/print.go:707 +0x32e fp=0x8203b56c0 sp=0x8203b55e0\r\nfmt.(*pp).printArg(0x82034a0d0, 0x1a2e40, 0x820580010, 0x76, 0x0, 0x0)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/fmt/print.go:806 +0x4a9 fp=0x8203b5848 sp=0x8203b56c0\r\nfmt.(*pp).doPrintf(0x82034a0d0, 0x1bb9a0, 0x8, 0x8203b5d90, 0x1, 0x1)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/fmt/print.go:1238 +0x1dcd fp=0x8203b5bd0 sp=0x8203b5848\r\nfmt.Sprintf(0x1bb9a0, 0x8, 0x8203b5d90, 0x1, 0x1, 0x0, 0x0)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/fmt/print.go:203 +0x6f fp=0x8203b5c20 sp=0x8203b5bd0\r\ntesting.(*common).Fatalf(0x82038a000, 0x1bb9a0, 0x8, 0x8203b5d90, 0x1, 0x1)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/testing/testing.go:388 +0x49 fp=0x8203b5c70 sp=0x8203b5c20\r\ngithub.com/aristanetworks/goarista/key_test.BenchmarkGetFromMapWithMapKey(0x82038a000)\r\n\t/Users/tsuna/go/src/github.com/aristanetworks/goarista/key/key_test.go:500 +0x2275 fp=0x8203b5f20 sp=0x8203b5c70\r\ntesting.(*B).runN(0x82038a000, 0xf4240)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/testing/benchmark.go:135 +0x9a fp=0x8203b5f40 sp=0x8203b5f20\r\ntesting.(*B).launch(0x82038a000)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/testing/benchmark.go:227 +0x131 fp=0x8203b5f98 sp=0x8203b5f40\r\nruntime.goexit()\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/runtime/asm_amd64.s:1998 +0x1 fp=0x8203b5fa0 sp=0x8203b5f98\r\ncreated by testing.(*B).run\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/testing/benchmark.go:190 +0x54\r\n\r\ngoroutine 1 [chan receive]:\r\ntesting.(*B).run(0x82038a000, 0x0, 0x0, 0x0, 0x0, 0x0)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/testing/benchmark.go:191 +0x7b\r\ntesting.RunBenchmarks(0x204b50, 0x29aa40, 0x3, 0x3)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/testing/benchmark.go:343 +0x76c\r\ntesting.(*M).Run(0x82032fef8, 0xffffffffffffffff)\r\n\t/usr/local/Cellar/go/1.6rc2/libexec/src/testing/testing.go:524 +0x1c9\r\nmain.main()\r\n\tgithub.com/aristanetworks/goarista/key/_test/_testmain.go:74 +0x117\r\n\r\nrax    0xbeaee92d5ea30650\r\nrbx    0xbeaee92d5ea306d8\r\nrcx    0x8202f1080\r\nrdx    0x0\r\nrdi    0x203d40\r\nrsi    0x147820\r\nrbp    0xbeaee92d5ea30650\r\nrsp    0x8203b4650\r\nr8     0x0\r\nr9     0x0\r\nr10    0xbeaee92d5ea30658\r\nr11    0x0\r\nr12    0x8\r\nr13    0x203d3f\r\nr14    0xf\r\nr15    0x8\r\nrip    0xa939\r\nrflags 0x10293\r\ncs     0x2b\r\nfs     0x0\r\ngs     0x0\r\n```\r\n\r\n[The benchmark](https://github.com/tsuna/goarista/blob/d53bff3794620f41b59c1d8fd2f92085ac093e51/key/key_test.go#L472) is very simple and doesn't involve any concurrency.\r\n\r\nI recently switched to 1.6rc2 for my dev env on my laptop, and I've seen another crash with a similar signature in another more complicated test that involves non-open source code.  I blamed the crash on a potential race condition to track down and made a note for later.  But now that this crash happened on a very simple test case in a very small and self-contained library that is open-source, I feel compelled to open a bug to have this investigated.\r\n\r\nThe other crash I've seen was (there are 2 stack frames I \"anonymized\", the other ones involve open-source code too):\r\n```\r\nSIGILL: illegal instruction\r\nPC=0xbaa9 m=9\r\ngoroutine 60 [running]:\r\nruntime.mapiternext(0xc820294360)\r\n    /usr/local/Cellar/go/1.6rc2/libexec/src/runtime/hashmap.go:718 +0x279 fp=0xc820304af8 sp=0xc820304a68\r\nruntime.mapiterinit(0x505120, 0xc8201fa750, 0xc820294360)\r\n    /usr/local/Cellar/go/1.6rc2/libexec/src/runtime/hashmap.go:666 +0x2af fp=0xc820304b28 sp=0xc820304af8\r\nreflect.mapiterinit(0x505120, 0xc8201fa750, 0x1b5)\r\n    /usr/local/Cellar/go/1.6rc2/libexec/src/runtime/hashmap.go:1014 +0x4a fp=0xc820304b50 sp=0xc820304b28\r\nreflect.Value.MapKeys(0x505120, 0xc820500030, 0x1b5, 0x0, 0x0, 0x0)\r\n    /usr/local/Cellar/go/1.6rc2/libexec/src/reflect/value.go:1075 +0xec fp=0xc820304c10 sp=0xc820304b50\r\ngithub.com/aristanetworks/goarista/test.prettyPrintWithType(0x505120, 0xc820500030, 0x1b5, 0xc8204c4ed0, 0x5, 0x101, 0x0, 0x0)\r\n    /Users/tsuna/go/src/github.com/aristanetworks/goarista/test/pretty.go:71 +0x1c72 fp=0xc8203050b0 sp=0xc820304c10\r\ngithub.com/aristanetworks/goarista/test.prettyPrintWithType(0x4e3880, 0xc820500030, 0x36, 0xc8204c4ed0, 0x6, 0x1, 0x0, 0x0)\r\n    /Users/tsuna/go/src/github.com/aristanetworks/goarista/test/pretty.go:63 +0x2732 fp=0xc820305550 sp=0xc8203050b0\r\ngithub.com/aristanetworks/goarista/test.prettyPrintWithType(0x5012e0, 0xc8201f22b0, 0xb4, 0xc8204c4ed0, 0x7, 0x1, 0x0, 0x0)\r\n    /Users/tsuna/go/src/github.com/aristanetworks/goarista/test/pretty.go:65 +0x1a2d fp=0xc8203059f0 sp=0xc820305550\r\ngithub.com/aristanetworks/goarista/test.prettyPrint(0x5012e0, 0xc8201f22b0, 0xb4, 0xc8204c4ed0, 0x7, 0x0, 0x0)\r\n    /Users/tsuna/go/src/github.com/aristanetworks/goarista/test/pretty.go:38 +0x5a fp=0xc820305a38 sp=0xc8203059f0\r\ngithub.com/aristanetworks/goarista/test.prettyPrintWithType(0x63cce0, 0xc8201f22b0, 0x99, 0xc8204c4ed0, 0x8, 0x1, 0x0, 0x0)\r\n    /Users/tsuna/go/src/github.com/aristanetworks/goarista/test/pretty.go:108 +0x3118 fp=0xc820305ed8 sp=0xc820305a38\r\ngithub.com/aristanetworks/goarista/test.prettyPrint(0x63cce0, 0xc8201f22b0, 0x99, 0xc8204c4ed0, 0x8, 0x0, 0x0)\r\n    /Users/tsuna/go/src/github.com/aristanetworks/goarista/test/pretty.go:38 +0x5a fp=0xc820305f20 sp=0xc820305ed8\r\ngithub.com/aristanetworks/goarista/test.PrettyPrintWithDepth(0x63cce0, 0xc8201f22b0, 0x8, 0x0, 0x0)\r\n    /Users/tsuna/go/src/github.com/aristanetworks/goarista/test/pretty.go:23 +0xba fp=0xc820305f78 sp=0xc820305f20\r\ngithub.com/aristanetworks/goarista/test.PrettyPrint(0x63cce0, 0xc8201f22b0, 0x0, 0x0)\r\n    /Users/tsuna/go/src/github.com/aristanetworks/goarista/test/pretty.go:17 +0x43 fp=0xc820305fa8 sp=0xc820305f78\r\narista/xxx.yyy(0x1888db0, 0xc8204e89a0, 0xc8201df880, 0xc820317170)\r\n    /Users/tsuna/go/src/arista/xxx/foo.go:4744 +0xffa fp=0xc820306228 sp=0xc820305fa8\r\narista/xxx.zzz(0xc82009a240)\r\n    /Users/tsuna/go/src/arista/xxx/foo.go:4564 +0x77d95 fp=0xc820319f18 sp=0xc820306228\r\ntesting.tRunner(0xc82009a240, 0xdf5e10)\r\n    /usr/local/Cellar/go/1.6rc2/libexec/src/testing/testing.go:473 +0x98 fp=0xc820319f50 sp=0xc820319f18\r\nruntime.goexit()\r\n    /usr/local/Cellar/go/1.6rc2/libexec/src/runtime/asm_amd64.s:1998 +0x1 fp=0xc820319f58 sp=0xc820319f50\r\ncreated by testing.RunTests\r\n    /usr/local/Cellar/go/1.6rc2/libexec/src/testing/testing.go:582 +0x892\r\n```\r\n\r\nIn 6 days of using Go 1.6rc2 these are the only two weird crashes that I've seen.",
	"user": {
		"login": "tsuna",
		"id": 128281,
		"type": "User",
		"site_admin": false
	},
	"comments": 18,
	"closed_at": "2016-02-12T21:07:37Z",
	"created_at": "2016-02-12T05:50:42Z",
	"updated_at": "2016-02-12T21:07:37Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
