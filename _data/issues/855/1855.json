{
	"id": 51278395,
	"number": 1855,
	"state": "closed",
	"title": "Expires-field in set cookie not parsed properly (=at all) by http package",
	"body": "\u003cpre\u003eParsing of the \u0026quot;expires\u0026quot; field in a set-cookie fails as\nisCookieByte() of cookies.go will mark comma 0x2c and space 0x20\nof the value of the expires field as invalid.\nTo my understanding the value of the expires field of a cookie\nis a RFC1123 formatted time like \u0026quot;Sat, 21 May 2011 12:00:00 GMT\u0026quot;\nwhich is allowed to contain spaces and commas without quoting them.\nThe issue is triggered by trying to validate values for fields\nby calling parseCookieValue(val) which is too restrictive for \nexpires.\n\nWhat steps will reproduce the problem?\npackage main\nimport (\n\t\u0026quot;http\u0026quot;\n\t\u0026quot;fmt\u0026quot;\n)\n\nfunc main() {\n\tresp, _, _ := http.Get(\u0026quot;\u003ca href=\"http://www.google.ch\u0026quot\"\u003ehttp://www.google.ch\u0026quot\u003c/a\u003e;)\n\tfmt.Printf(\u0026quot;%#v\\n\u0026quot;, resp.SetCookie[0].Unparsed)\n}\n\n\nWhat is the expected output?\n\u0026quot;Nothing\u0026quot;: []string{}\n\nWhat do you see instead?\n[]string{\u0026quot;expires=Sun, 19-May-2013 13:06:39 GMT\u0026quot;}\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n8g\n\nWhich operating system are you using?\nwindows\n\nWhich revision are you using?  (hg identify)\nr57.1\u003c/pre\u003e",
	"user": {
		"login": "vdobler",
		"id": 701382,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2014-12-08T10:10:14Z",
	"created_at": "2011-05-20T13:09:23Z",
	"updated_at": "2016-06-24T19:29:36Z"
}
