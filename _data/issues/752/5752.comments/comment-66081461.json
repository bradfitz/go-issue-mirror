{
	"id": 66081461,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3 by **jonas.p**:\n\n\u003cpre\u003eMy use case is the authentication mechanism called WebID+TLS (rebranded from FOAF+SSL),\n\u003ca href=\"https://dvcs.w3.org/hg/WebID/raw-file/tip/spec/tls-respec.html\"\u003ehttps://dvcs.w3.org/hg/WebID/raw-file/tip/spec/tls-respec.html\u003c/a\u003e .\nIt uses an SubjectAltName URI entry to point to a document containing a public key.\nIt is only a draft, so it probably isn't anything I would call sufficiently common. But\nI would argue that crypto/x509 is the right place to expose URIs in the SubjectAltName\nx509 extension.\n\nHere are my arguments:\n1. URIs in SubjectAltName is part of the spec,\n\u003ca href=\"http://tools.ietf.org/html/rfc3280#section-4.2.1.7\"\u003ehttp://tools.ietf.org/html/rfc3280#section-4.2.1.7\u003c/a\u003e and if crypto/x509 tries to follow\nthe spec it is the correct place to expose URIs in the same way other SubjectAltNames\nare exposed.\n\n2. The proposed patch is only mirroring how SAN EmailAddresses are handled. It doesn't\nadd any new fundamentals in how crypto/x509 is used.\n\n3. Actually x509.Certificate already exposes all the certificate content via Raw. But it\nis ASN.1 encoded, so to get the SubjectAltName URI i would have to decode and parse the\ncertificate, effectively duplicating parts of crypto/x509 (which is what I do currently).\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-07-23T10:00:26Z",
	"updated_at": "2014-12-08T10:31:31Z"
}
