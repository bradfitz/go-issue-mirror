{
	"id": 57652721,
	"number": 9869,
	"state": "open",
	"title": "runtime: dead Gs cause span fragmentation",
	"body": "Once we allocate a G, it is allocated forever.  We have no mechanism to free them.\r\nWe should free dead Gs if they sit in the global free queue for long enough.  Or maybe free all of them at each GC?\r\n\r\nI noticed this while debugging #8832.  The stacks for dead Gs **are** freed at GC time.  This leads to a fragmented heap because spans for G storage and stack storage alternate in the heap.  When only the stacks are freed, the resulting free spans won't coalesce because the spans for storing the Gs aren't freed.\r\n",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"created_at": "2015-02-13T20:54:58Z",
	"updated_at": "2015-11-05T17:17:46Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
