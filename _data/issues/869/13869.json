{
	"id": 125539365,
	"number": 13869,
	"state": "closed",
	"title": "Keyword: interface{}",
	"body": "Hi Gophers,\r\n\r\nI just want to propose something that could solve a problem for go-illiterates (like me).. :)\r\n\r\n```go\r\n// yes, interface is interface for usual devs\r\ntype IOWriter interface {\r\n   Write(s string) uint\r\n}\r\ntype IO struct {\r\n   IOWriter // well..\r\n}\r\n```\r\n```go\r\n// but, wtf is that? whoops!! :)\r\n// of course it is clear enough to get/use after some googling \r\nvar m map[string]interface{}\r\n```\r\n\r\nProblem;\r\n\r\n- One keyword for two purposes (use-cases)\r\n- After keyword, \"{}\" required but not for these; `map[string]string`, `map[string]int`, `[]string` etc.\r\n- Also this; `map[string]string{\"foo\"}` but `map[string]interface{}{\"foo\":123}`. Why not just; `map[string]interface{\"foo\":123}`\r\n- It looks like not interface, but class interface, confusing me\r\n- It is too long, I am an old man and it is f**kin'  tiring me :)\r\n- It is really boring to write down each time long and long \r\n- Last: no more keyword else in English? (ok, just kidding)\r\n\r\nYes, I called it as \"problem\" but maybe not for you, I do not know :). I just want to make a suggestion you provide a way to avoid keyword ambiguity. Also, that should be suitable for a -minimalist- language concept.\r\n\r\nSolution;\r\n\r\n```go\r\n// please add an alternative keyword as built-in, for example \"mix\" or \"any\"\r\nvar m map[string]mix\r\n\r\nm := map[string]mix{\"foo\": 123}\r\n```\r\nI know, it could be used in a hack-some way below, but I would prefer using a built-in feature (also it is boring to import `mix` into used files or define each file;\r\n\r\n```go\r\ntype mix interface{\r\n}\r\n\r\nvar m map[string]mix\r\n```\r\n\r\nThanks for reading, and perhaps implementing (yes, sure!).. :)\r\n\r\nNote: Please do not not make us semi-happy like *PHP bosses* after and after years (yes, still we elephants have no `mixed` type).. (what? see: https://wiki.php.net/rfc/scalar_type_hints_v5) \r\n",
	"user": {
		"login": "k-gun",
		"id": 1508306,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-01-08T04:31:16Z",
	"created_at": "2016-01-08T04:17:34Z",
	"updated_at": "2016-01-08T05:04:17Z"
}
