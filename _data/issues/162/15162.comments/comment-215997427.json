{
	"id": 215997427,
	"body": "Reproducible builds only really matter at the binary (main) level. If you're a binary, go ahead and vendor everything, and you have reproducible builds.\r\n\r\nBut if you're a package, other people are using you, and it is their responsibility to vendor the world if they care about such things. If they *are* vendoring everything, there's no need for you to vendor things that appear in your API since typically they'll need to be using that package anyway.\r\n\r\nIn more concrete terms: the etcd package has context.Context in its API. If there's a binary B that imports etcd, it probably also needs to import context (to be able to have a context.Context to pass to etcd). If B is *not* vendoring things, it then has two context.Contexts (the etc copy and the true upstream); if context.Context changes, it'll be broken because those copies will be out of sync, and etcd's vendoring didn't help at all, but probably only hindered since B will need to either use an old version of the true upstream, or else hand-edit etcd. If B *is* vendoring things, there was no need for etcd to vendor context.",
	"user": {
		"login": "dsymonds",
		"id": 31506,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	},
	"created_at": "2016-04-30T21:51:02Z",
	"updated_at": "2016-04-30T21:51:02Z"
}
