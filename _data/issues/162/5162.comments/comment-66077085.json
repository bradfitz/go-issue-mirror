{
	"id": 66077085,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eGetting this output from the testcase on 6g tip:\n\nonesA==onesB is  true; onesB==twos is false\nonesA==onesB is false; onesB==twos is false\nonesA==onesB is  true; onesB==twos is  true; onesA==x is  true\n\nSeeing some interesting generated assembly.\n\n0125 (/home/daniel/src/test/b.go:22) LEAQ    onesA+-232(SP),BX\n0126 (/home/daniel/src/test/b.go:22) MOVQ    BX,CX\n0127 (/home/daniel/src/test/b.go:22) LEAQ    onesB+-168(SP),BX\n0128 (/home/daniel/src/test/b.go:22) MOVQ    BX,AX\n0129 (/home/daniel/src/test/b.go:22) LEAQ    autotmp_0015+-233(SP),BX\n0130 (/home/daniel/src/test/b.go:22) MOVQ    BX,(SP)\n0131 (/home/daniel/src/test/b.go:22) MOVQ    $56,8(SP)\n0132 (/home/daniel/src/test/b.go:22) MOVQ    CX,16(SP)\n0133 (/home/daniel/src/test/b.go:22) MOVQ    AX,24(SP)\n0134 (/home/daniel/src/test/b.go:22) CALL    ,runtime.memequal+0(SB)\n0135 (/home/daniel/src/test/b.go:22) LEAQ    onesB+-168(SP),BX\n0136 (/home/daniel/src/test/b.go:22) MOVQ    BX,CX\n0137 (/home/daniel/src/test/b.go:22) LEAQ    twos+-88(SP),BX\n0138 (/home/daniel/src/test/b.go:22) MOVQ    BX,AX\n0139 (/home/daniel/src/test/b.go:22) LEAQ    autotmp_0015+-233(SP),BX\n0140 (/home/daniel/src/test/b.go:22) MOVQ    BX,(SP)\n0141 (/home/daniel/src/test/b.go:22) MOVQ    $56,8(SP)\n0142 (/home/daniel/src/test/b.go:22) MOVQ    CX,16(SP)\n0143 (/home/daniel/src/test/b.go:22) MOVQ    AX,24(SP)\n0144 (/home/daniel/src/test/b.go:22) CALL    ,runtime.memequal+0(SB)\n\nHere the autotmp_0015 temporary is clobbered before it is read, meaning that all  array\ncomparisons in an expression will have the result of the last comparison.\n\nIf you introduce boolean variables to hold the results, you get the correct results.\u003c/pre\u003e",
	"user": {
		"login": "DanielMorsing",
		"id": 545573,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-03-30T23:10:20Z",
	"updated_at": "2014-12-08T10:27:38Z"
}
