{
	"id": 177926160,
	"number": 17162,
	"state": "closed",
	"title": "runtime: segmentation fault with Go 1.7.1",
	"body": "### What version of Go are you using (`go version`)?\r\n\r\n```\r\ngo version go1.7.1 darwin/amd64\r\n```\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"/Users/michaeldesa/go/bin\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/michaeldesa/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/Cellar/go/1.7.1/libexec\"\r\nGOTOOLDIR=\"/usr/local/Cellar/go/1.7.1/libexec/pkg/tool/darwin_amd64\"\r\nCC=\"clang\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/gs/ppbkd_gd0njbysrt1mxkg7vw0000gn/T/go-build172969900=/tmp/go-build -gno-record-gcc-switches -fno-common\"\r\nCXX=\"clang++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\nWe saw the same panic when either running with a Darwin build, or running on Linux with a build cross compiled from Darwin.\r\n\r\n### What did you do?\r\n\r\nThis setup process is slightly involved. I tried to capture all the relevant details on the first pass here; but I'm eager to get this fixed, so I'll try and respond quickly if there's any trouble reproducing the issue.\r\n\r\nIf you don't want to go through building and running InfluxDB, we have [a 206MB gzipped core dump]( https://s3-us-west-2.amazonaws.com/influxd-core-dump/core_influxd_dump.gz) from linux/amd64, running with `GOTRACEBACK=crash`, and the corresponding [binary](https://s3-us-west-2.amazonaws.com/influxd-core-dump/influxd), built from https://github.com/influxdata/influxdb/commit/7e515cf5f7c298abd8aae62ed1f7bb85601a4b4d.\r\n\r\nIf you want to go through building from source to reproduce the crash:\r\n\r\n```\r\ngo get github.com/sparrc/gdm # dependency management tool we use\r\ngo get -d github.com/influxdata/influxdb\r\ncd $GOPATH/src/github.com/influxdata/influxdb\r\n$GOPATH/bin/gdm restore # Configures dependencies into $GOPATH\r\ngo run cmd/influxd/main.go\r\n# Alternatively, cross compiled with:\r\n# GOBIN=\"\" GOOS=linux GOARCH=amd64 go install ./...\r\n```\r\n\r\nOn OSX, we've seen the crash with and without SSA enabled. We didn't try linux without SSA.\r\n\r\nIn a separate shell, run [this load generator](https://gist.github.com/desa/075832fd09ce57f57e6f307f5c197eea) against the influxdb instance. It reliably (\u003e80% of the time?) panics within the first iteration of the tool, which completes in around 30 seconds.\r\n\r\n### What did you expect to see?\r\n\r\nNo panic. The [offending part of the stack trace](https://github.com/influxdata/influxdb/blob/7e515cf5f7c298abd8aae62ed1f7bb85601a4b4d/tsdb/meta.go#L596-L603) looks like it may be susceptible to a nil pointer dereference, but Go should prevent a segfault, right?\r\n\r\n### What did you see instead?\r\n\r\nPanic starting with:\r\n\r\n```\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x20 pc=0x5fa88f]\r\n\r\ngoroutine 5490 [running]:\r\npanic(0x9b6480, 0xc42000a090)\r\n\t/usr/local/Cellar/go/1.7.1/libexec/src/runtime/panic.go:500 +0x1a1 fp=0xc47a811b18 sp=0xc47a811a88\r\nruntime.panicmem()\r\n\t/usr/local/Cellar/go/1.7.1/libexec/src/runtime/panic.go:62 +0x6d fp=0xc47a811b48 sp=0xc47a811b18\r\nruntime.sigpanic()\r\n\t/usr/local/Cellar/go/1.7.1/libexec/src/runtime/sigpanic_unix.go:24 +0x214 fp=0xc47a811ba0 sp=0xc47a811b48\r\ngithub.com/influxdata/influxdb/tsdb.(*Measurement).AppendSeriesKeysByID(0xc420332960, 0xc47ad44c80, 0x0, 0x1, 0xc420331120, 0x1, 0x1, 0x0, 0x0, 0x0)\r\n\t/Users/michaeldesa/go/src/github.com/influxdata/influxdb/tsdb/meta.go:600 +0xff fp=0xc47a811c18 sp=0xc47a811ba0\r\ngithub.com/influxdata/influxdb/tsdb.(*seriesIterator).nextKeys(0xc47ab56180, 0xc47a811ce8, 0x44233b)\r\n\t/Users/michaeldesa/go/src/github.com/influxdata/influxdb/tsdb/shard.go:1050 +0x138 fp=0xc47a811c88 sp=0xc47a811c18\r\ngithub.com/influxdata/influxdb/tsdb.(*seriesIterator).Next(0xc47ab56180, 0xc4a7c31810, 0x1, 0x1)\r\n\t/Users/michaeldesa/go/src/github.com/influxdata/influxdb/tsdb/shard.go:1007 +0x1f6 fp=0xc47a811cf8 sp=0xc47a811c88\r\ngithub.com/influxdata/influxdb/influxql.(*floatSortedMergeIterator).pop(0xc477b0f0e0, 0x0, 0xc420320c40, 0x10)\r\n\t/Users/michaeldesa/go/src/github.com/influxdata/influxdb/influxql/iterator.gen.go:388 +0x3d9 fp=0xc47a811dc0 sp=0xc47a811cf8\r\ngithub.com/influxdata/influxdb/influxql.(*floatSortedMergeIterator).Next(0xc477b0f0e0, 0x0, 0xc47a811f10, 0x68784e)\r\n\t/Users/michaeldesa/go/src/github.com/influxdata/influxdb/influxql/iterator.gen.go:350 +0x2b fp=0xc47a811df0 sp=0xc47a811dc0\r\ngithub.com/influxdata/influxdb/influxql.(*floatInterruptIterator).Next(0xc47ab52c80, 0x0, 0x0, 0x0)\r\n\t/Users/michaeldesa/go/src/github.com/influxdata/influxdb/influxql/iterator.gen.go:761 +0x52 fp=0xc47a811e20 sp=0xc47a811df0\r\ngithub.com/influxdata/influxdb/influxql.(*floatFastDedupeIterator).Next(0xc47ab52ca0, 0x0, 0x0, 0x0)\r\n\t/Users/michaeldesa/go/src/github.com/influxdata/influxdb/influxql/iterator.go:1191 +0x48 fp=0xc47a811ef0 sp=0xc47a811e20\r\ngithub.com/influxdata/influxdb/influxql.(*bufFloatIterator).Next(0xc47ab52cc0, 0x1, 0x1, 0xdc2860)\r\n\t/Users/michaeldesa/go/src/github.com/influxdata/influxdb/influxql/iterator.gen.go:96 +0x3c fp=0xc47a811f20 sp=0xc47a811ef0\r\ngithub.com/influxdata/influxdb/influxql.(*floatAuxIterator).stream(0xc47a4aa4e0)\r\n\t/Users/michaeldesa/go/src/github.com/influxdata/influxdb/influxql/iterator.gen.go:880 +0x38 fp=0xc47a811fa8 sp=0xc47a811f20\r\nruntime.goexit()\r\n\t/usr/local/Cellar/go/1.7.1/libexec/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc47a811fb0 sp=0xc47a811fa8\r\ncreated by github.com/influxdata/influxdb/influxql.(*floatAuxIterator).Start\r\n\t/Users/michaeldesa/go/src/github.com/influxdata/influxdb/influxql/iterator.gen.go:844 +0x3f\r\n```\r\n\r\nFull panic attached: [panic.txt](https://github.com/golang/go/files/481333/panic.txt)",
	"user": {
		"login": "mark-rushakoff",
		"id": 290647,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-09-20T01:57:06Z",
	"created_at": "2016-09-19T23:38:14Z",
	"updated_at": "2016-09-20T01:57:07Z"
}
