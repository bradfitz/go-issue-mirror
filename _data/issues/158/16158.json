{
	"id": 161798234,
	"number": 16158,
	"state": "closed",
	"title": "encoding/xml: Unmarshal ignores error return from Decoder.unmarshalAttr",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\n1.6.2\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\nGOOS=GNU/Linux\r\nGOARCH=amd64\r\n\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n\r\nhttps://play.golang.org/p/wAByp2MpkB\r\n\r\n4. What did you expect to see?\r\n\r\nOne of two things, in order of preference:\r\n\r\n~~1.) Since `C` is one byte long I'd expect to see `foo.B` set to 0x43 (and also error out if the attribute is longer than one byte long.)~~\r\n2.) An error since `C` is an invalid number and `Decoder.unmarshalAttr` calls `strconv.ParseUint` yet decides to ignore the return value of `copyValue`.\r\n\r\n5. What did you see instead?\r\n\r\nNothing -- it doesn't touch `foo.B` and `foo.B` remains 0x0.\r\n\r\n",
	"user": {
		"login": "EricLagergren",
		"id": 5894247,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2016-08-22T18:33:52Z",
	"created_at": "2016-06-22T22:07:50Z",
	"updated_at": "2016-08-22T18:33:52Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
