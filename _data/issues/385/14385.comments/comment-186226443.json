{
	"id": 186226443,
	"body": "Hi, thanks for all the replies.\r\n\r\nI think a quick and easy solution would be:\r\n\r\n1. Enable directory listing on the bucket (this effectively allows the user to parse out what versions are available)\r\n2. Upload a `.sha256` file alongside each binary as @adg suggested.\r\n\r\nTo get a better idea here is a sample of how I parse out Dart versions currently from their storage bucket:\r\n```\r\n$ STABLE_VERSIONS=$(gsutil ls gs://dart-archive/channels/stable/release/1.*/sdk/dartsdk-linux-x64-release.zip | sed 's|gs://dart-archive/channels/stable/release/||g' | sed  's|/sdk/dartsdk-linux-x64-release.zip||g')\r\n$ echo $STABLE_VERSIONS                                                                                                                                                                              \r\n```\r\n\r\nAfter you have that list it's easy to just add start and end strings for the final url's (if a sha256 upload exists). The start and end of url I think is okay to hardcode as they are unlikely to change and trivial to update. \r\n\r\nEven better than the bucket listing would be a REST endpoint that simply returned the equivalent of `$STABLE_VERSIONS` above, that would indeed be convenient, it does not need to be that complicated, just a list of versions and the url pattern can be described on the download page.\r\n\r\nAs a reference, the manual SDK download page of [Dart looks like this](https://www.dartlang.org/downloads/archive/), the last section \"Direct download URLs\" is a nice adition I think ([code for that page](https://github.com/dart-lang/www.dartlang.org/tree/master/src/site/downloads)).",
	"user": {
		"login": "Scorpiion",
		"id": 1047298,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-19T14:04:30Z",
	"updated_at": "2016-02-19T14:04:30Z"
}
