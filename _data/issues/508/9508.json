{
	"id": 53401543,
	"number": 9508,
	"state": "closed",
	"title": "x/mobile: build tool and configuration across android and iOS",
	"body": "Over the holiday break I got Go building .apk files: github.com/crawshaw/apk\r\n\r\nThis could theoretically be embedded directly in the go tool, so go build produces a .apk when GOOS=android. However there is another issue: it should be possible to build an app without an AndroidManfiest.xml, with a shared configuration across iOS.\r\n\r\nThis could be a tool, golang.org/x/mobile/cmd/gombile. My original design doc described such a thing, but I have been avoiding it until we got closer to a working iOS build. Now we are getting closer, it's worth thinking about.\r\n\r\nSeveral of the gomobile properties are straightforward: it should look as much like the Go tool as possible, it should produce a .apk for android, and a .app for iOS. It should know how to use ios-deploy if you have it installed. It should build the platform-specific configuration files for you.\r\n\r\nFirst question: what (if any) of the configuration parameters in AndroidManfiest.xml need to be exposed through the build system? https://go-review.googlesource.com/#/c/2162/ brings up the fullscreen attribute. What else?\r\n\r\nSecond question: what should the configuration look like? It should be easily determinable at build time, and involve the least amount of invention. One very minimal possibility:\r\n\r\npackage main\r\n\r\nimport (\r\n        _ \"golang.org/x/mobile/config/fullscreen\"\r\n)",
	"user": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 19,
	"closed_at": "2015-07-14T00:02:51Z",
	"created_at": "2015-01-05T14:34:46Z",
	"updated_at": "2016-07-13T16:06:05Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
