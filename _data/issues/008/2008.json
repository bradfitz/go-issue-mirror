{
	"id": 51278606,
	"number": 2008,
	"state": "closed",
	"title": "runtime/pprof: cpu profiling broken on OS X",
	"body": "\u003cpre\u003eRunning godoc on OS X 10.6.7 with the changes shown below, the CPU profile only lists\ncalls to __cgo_allocate. This has been reported on the list, too.\n\n\n$ gopprof godoc godoc.prof\nWelcome to pprof!  For help, type 'help'.\n(pprof) top10\nTotal: 7200 samples\n    7200 100.0% 100.0%     7200 100.0% __cgo_allocate\n\n\n\ndiff -r b295b8bda20b src/cmd/godoc/godoc.go\n--- a/src/cmd/godoc/godoc.go\tSun Jun 26 11:24:28 2011 +1000\n+++ b/src/cmd/godoc/godoc.go\tMon Jun 27 08:41:25 2011 +1000\n@@ -20,6 +20,7 @@\n \t\u0026quot;path/filepath\u0026quot;\n \t\u0026quot;regexp\u0026quot;\n \t\u0026quot;runtime\u0026quot;\n+\t\u0026quot;runtime/pprof\u0026quot;\n \t\u0026quot;sort\u0026quot;\n \t\u0026quot;strings\u0026quot;\n \t\u0026quot;template\u0026quot;\n@@ -1279,6 +1280,7 @@\n \t\t\tlog.Printf(\u0026quot;before GC: bytes = %d footprint = %d\u0026quot;, runtime.MemStats.HeapAlloc, runtime.MemStats.Sys)\n \t\t\truntime.GC()\n \t\t\tlog.Printf(\u0026quot;after  GC: bytes = %d footprint = %d\u0026quot;, runtime.MemStats.HeapAlloc, runtime.MemStats.Sys)\n+\t\t\tpprof.StopCPUProfile()\n \t\t}\n \t\tvar delay int64 = 60 * 1e9 // by default, try every 60s\n \t\tif *testDir != \u0026quot;\u0026quot; {\ndiff -r b295b8bda20b src/cmd/godoc/main.go\n--- a/src/cmd/godoc/main.go\tSun Jun 26 11:24:28 2011 +1000\n+++ b/src/cmd/godoc/main.go\tMon Jun 27 08:41:25 2011 +1000\n@@ -39,6 +39,7 @@\n \t\u0026quot;path/filepath\u0026quot;\n \t\u0026quot;regexp\u0026quot;\n \t\u0026quot;runtime\u0026quot;\n+\t\u0026quot;runtime/pprof\u0026quot;\n \t\u0026quot;strings\u0026quot;\n \t\u0026quot;time\u0026quot;\n )\n@@ -218,10 +219,21 @@\n }\n \n \n+var cpuprofile = flag.String(\u0026quot;cpuprofile\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;\u0026quot;)\n+\n func main() {\n \tflag.Usage = usage\n \tflag.Parse()\n \n+\tif *cpuprofile != \u0026quot;\u0026quot; {\n+\t\tf, err := os.Create(*cpuprofile)\n+\t\tif err != nil {\n+\t\t\tlog.Fatal(err)\n+\t\t}\n+\t\tpprof.StartCPUProfile(f)\n+\t\tdefer pprof.StopCPUProfile()\n+\t}\n+\n \t// Determine file system to use.\n \t// TODO(gri) Complete this - for now we only have one.\n \tfs = OS\u003c/pre\u003e",
	"user": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "ExpertNeeded"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:10:55Z",
	"created_at": "2011-06-26T22:42:39Z",
	"updated_at": "2016-06-24T19:31:31Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
