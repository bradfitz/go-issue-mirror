{
	"id": 183545731,
	"number": 17490,
	"state": "open",
	"title": "cmd/link: link against libsystem_kernel.dylib or libSystem.dylib on macOS",
	"body": "As I understand it, Go currently has its own syscall wrappers for Darwin. This is explicitly against what [Apple recommends](https://developer.apple.com/library/content/qa/qa1118/_index.html), precisely because they're not willing to commit to a particular syscall ABI. This leads to issues like https://github.com/golang/go/issues/16570, and although we've been lucky in that things have generally been backward-compatible so far, there's no guarantee that it'll continue to happen. It doesn't seem inconceivable to me that we'd at some point end up having to specify \"build for macOS 10.13+\" vs. \"build for 10.12 and below\", for example.\r\n\r\nLinking against libsystem_kernel.dylib (or the broader libSystem.dylib) would put Go back in line with Apple's recommendations for the platform, and the library is guaranteed to exist on all macOS boxes.\r\n\r\nApologies if this has been suggested before and people have already gone over good reasons not to do it, but I'm currently struggling to figure out what appears to be another Sierra incompatibility related to #16570 above (still haven't figured it out enough to post a reproducible bug) and am wishing we didn't have to deal with these issues.",
	"user": {
		"login": "copumpkin",
		"id": 2623,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsDecision"
		},
		{
			"name": "OS-Darwin"
		}
	],
	"comments": 3,
	"created_at": "2016-10-17T22:32:26Z",
	"updated_at": "2016-10-20T22:18:15Z",
	"milestone": {
		"id": 2073599,
		"number": 50,
		"title": "Go1.9Maybe"
	},
	"reactions": {
		"total_count": 3,
		"+1": 3
	}
}
