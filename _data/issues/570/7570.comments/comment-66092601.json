{
	"id": 66092601,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eNow thinking about this again. If you mark this as WorkingAsIntended because you \"see no\ndesire to mimic\" \"the current directory in $PATH is a security problem\", then here is a\nsimple variation on my original test where you do \"mimic\"  \"the current directory in\n$PATH is a security problem\".\n\npackage main_test\n\nimport (\n        \"io/ioutil\"\n        \"os\"\n        \"os/exec\"\n        \"os\"\n        \"os/exec\"\n        \"path/filepath\"\n        \"testing\"\n)\n\nfunc testALEX(t *testing.T, exe string) {\n        tmp, err := ioutil.TempDir(\"\", \"TestALEX\")\n        if err != nil {\n                t.Fatal(err)\n        }\n        defer os.RemoveAll(tmp)\n\n        err = os.Symlink(\"/bin/echo\", filepath.Join(tmp, \"c\"))\n        if err != nil {\n                t.Fatal(err)\n        }\n\n        wd, err := os.Getwd()\n        if err != nil {\n                t.Fatal(err)\n        }\n        err = os.Chdir(tmp)\n        if err != nil {\n                t.Fatal(err)\n        }\n        defer os.Chdir(wd)\n\n        cmd := exec.Command(exe, \"-n\", \"foo\")\n        out, err := cmd.CombinedOutput()\n        if err != nil {\n                t.Error(err)\n                return\n        }\n        want := \"foo\"\n        if got := string(out); got != want {\n                t.Errorf(\"exec: want %q, got %q\", want, got)\n        }\n}\n\nfunc TestALEX(t *testing.T) {\n        testALEX(t, \"./c\")\n        testALEX(t, \"c\")\n}\n\nThe test PASSes now:\n\n# PATH=.:$PATH go test -v\n=== RUN TestALEX\n--- PASS: TestALEX (0.00 seconds)\nPASS\nok      t       0.004s\n\nI think we have a problem here. I think our lib is inconsistent in how it behaves with\nand without Command.Dir parameter. I think we should make this consistent or document\nwhy they are different regardless of what we will decide about \"the current directory in\n$PATH is a security problem\".\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-03-18T22:40:38Z",
	"updated_at": "2014-12-08T10:42:04Z"
}
