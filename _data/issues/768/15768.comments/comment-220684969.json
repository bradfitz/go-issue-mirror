{
	"id": 220684969,
	"body": "@chriwup I believe what you want to do is set the loop count to 1 and not -1. IMO -1 doesn't make sense for a loop count to mean no loop. I have a small script that you can use to play around with the loop count values here https://play.golang.org/p/zIPjxYjuCV and using 1 should cut the deal. Here is the code below inlined\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"flag\"\r\n\t\"fmt\"\r\n\t\"image/gif\"\r\n\t\"net/http\"\r\n\t\"os\"\r\n)\r\n\r\nfunc exitIfError(err error) {\r\n\tif err == nil {\r\n\t\treturn\r\n\t}\r\n\r\n\tfmt.Fprintf(os.Stderr, \"%v\\n\", err)\r\n\tos.Exit(1)\r\n}\r\n\r\nfunc main() {\r\n\tgifURL := flag.String(\"url\", \"https://brobible.files.wordpress.com/2016/03/joker1.gif\", \"the URL of the GIF\")\r\n\tloopCount := flag.Int(\"loop-count\", 1, \"the max loop count of the GIF\")\r\n\tflag.Parse()\r\n\r\n\tres, err := http.Get(*gifURL)\r\n\texitIfError(err)\r\n\tgifImg, err := gif.DecodeAll(res.Body)\r\n\t_ = res.Body.Close()\r\n\texitIfError(err)\r\n\r\n\tgifImg.LoopCount = *loopCount\r\n\t_ = gif.EncodeAll(os.Stdout, gifImg)\r\n}\r\n```\r\n\r\n```shell\r\n$ go run gif-loop-count.go --url https://j.gifs.com/Z6ozLJ.gif --loop-count 2 \u003e lc2.gif # Make it loop twice\r\n$ go run gif-loop-count.go --loop-count 1 \u003e lc1.gif # Should loop only once.\r\n```\r\n\r\nLet me know what you think.",
	"user": {
		"login": "odeke-em",
		"id": 4898263,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-20T18:35:05Z",
	"updated_at": "2016-05-20T18:41:21Z"
}
