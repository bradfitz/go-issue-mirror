{
	"id": 91541087,
	"body": "The TSC counter is not monotonic unless your process is pinned to a CPU\ncore.\n\nOn Fri, Apr 10, 2015 at 10:38 PM, Brad Fitzpatrick \u003cnotifications@github.com\n\u003e wrote:\n\n\u003e From my comment on https://go-review.googlesource.com/#/c/8736/2 :\n\u003e\n\u003e I think this is too specific. It's not just IN_QEMU. And it's not all VMs.\n\u003e\n\u003e We probably should have per-builder lists of tests to skip or something.\n\u003e Or just make the runtime itself detect things going backwards and set a\n\u003e flag we can check here. e.g.:\n\u003e\n\u003e    func TestFoo(t *testing.T) {\n\u003e         if err := testFoo(t); err != nil {\n\u003e             if runtime.TimerEverWentBackwards() {\n\u003e                t.Skip(\"test failed, but ignoring, since runtime reports timer sucks on this machine\")\n\u003e             } else {\n\u003e               t.Fatal(err)\n\u003e             }\n\u003e      }\n\u003e\n\u003e Obviously not exactly like that, but I'm wondering if we can ask the runtime if\n\u003e it ever detected a problem with the clocks, if the clocks aren't fixable.\n\u003e\n\u003e Then we can also make \"go test -trace\" and friends print a nicer message saying,\n\u003e\n\u003e     \"Sorry, tracing is not supported in this environment. Your clocks don't work.\"\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/8976#issuecomment-91540235\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-10T12:39:27Z",
	"updated_at": "2015-04-10T12:39:27Z"
}
