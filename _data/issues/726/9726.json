{
	"id": 55894953,
	"number": 9726,
	"state": "open",
	"title": "cmd/godoc: -src option prints wrong source",
	"body": "godoc works fine for docs:\r\n```\r\n$ godoc github.com/bradfitz/http2 Frame\r\ntype Frame interface {\r\n    Header() FrameHeader\r\n    // contains filtered or unexported methods\r\n}\r\n    A Frame is the base interface implemented by all frame types. Callers\r\n    will generally type-assert the specific frame type: *HeadersFrame,\r\n    *SettingsFrame, *WindowUpdateFrame, etc.\r\n\r\n    Frames are only valid until the next call to Framer.ReadFrame.\r\n```\r\n\r\nBut fails oddly if you pass the `-src` flag:\r\n\r\n```\r\n$ godoc -src github.com/bradfitz/http2 Frame\r\n// a frameParser parses a frame given its FrameHeader and payload\r\n// bytes. The length of payload will always equal fh.Length (which\r\n// might be 0).\r\ntype frameParser func(fh FrameHeader, payload []byte) (Frame, error)// A Frame is the base interface implemented by all frame types.\r\n// Callers will generally type-assert the specific frame type:\r\n// *HeadersFrame, *SettingsFrame, *WindowUpdateFrame, etc.\r\n//\r\n// Frames are only valid until the next call to Framer.ReadFrame.\r\ntype Frame interface {\r\n    Header() FrameHeader\r\n\r\n    // invalidate is called by Framer.ReadFrame to make this\r\n    // frame's buffers as being invalid, since the subsequent\r\n    // frame will reuse them.\r\n    invalidate()\r\n}\r\n```",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"created_at": "2015-01-29T12:50:27Z",
	"updated_at": "2015-07-14T19:26:36Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
