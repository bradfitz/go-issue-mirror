{
	"id": 51279621,
	"number": 2726,
	"state": "closed",
	"title": "compress/flate: make compressor faster",
	"body": "by **jgrahamc**:\n\n\u003cpre\u003eI have tried a number of different documents by compressing them with the Linux gzip\ncommand and using the compress/gzip package.  This occurs even if the same compression\nlevel is used in both programs.  \n\nThe following code is used for gzipping using Go:\n\npackage main\n\nimport (\n       \u0026quot;compress/gzip\u0026quot;\n       \u0026quot;io\u0026quot;\n       \u0026quot;os\u0026quot;\n)\n\nfunc main() {\n       c, _ := gzip.NewWriter(os.Stdout)\n\n       io.Copy(c, os.Stdin)\n}\n\nSome representative examples of HTML of home pages of various web sites and the King\nJames Bible from Project Gutenberg.\n\nBBC News original size = 98830, Linux gzip size = 21095, Go gzip size \n= 21612 \nCNN  original size = 92084, Linux gzip size = 19971, Go gzip size = \n20473 \nWikipedia  original size = 55846, Linux gzip size = 15149, Go gzip \nsize = 15551 \nKing James Bible: original size = 4452097, Linux gzip \nsize = 1404452, Go gzip size = 1503220 \n\nAnother user reported similar results on Mac OS X using the native gzip there\ncompressing /usr/share/dict/words:\n\nthe default compression level for my gzip (osx) is 6. curiously the\ncompressed /usr/share/dict/words for that level is 60 bytes less than\nthe one compressed with the best compression level, 9. the difference\nbetween 6 and 9 in Go's gzip/flate is ~320 bytes.\n\n768586  --\u0026gt; go gzip, 9 (BestCompression)\n768266 --\u0026gt; go gzip, 6 (default)\n\n754615 --\u0026gt; osx gzip, 9 (best)\n754546 --\u0026gt; osx gzip, 6 (default)\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n6g\n6g version release.r60.3 9516\nDebian Linux\n\nThe native gzip is producing files of somewhere between 93% and 98% of the Google Go\ngzip.  This probably indicates a problem in the DEFLATE implementation\n(compress/deflate) as the gzip part is just the header.  Thus is will also affect\ncompress/zlib.  Thus three of the four implemented compression algorithms are probably\nworse than expected.\n\nThis is a serious issue for the project I am working on where compression is an integral\npart.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 52,
	"closed_at": "2014-12-08T10:14:29Z",
	"created_at": "2012-01-18T11:38:31Z",
	"updated_at": "2016-06-24T21:23:47Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
