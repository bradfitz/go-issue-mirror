{
	"id": 66061637,
	"body": "\u003ca id=\"c26\"\u003e\u003c/a\u003eComment 26:\n\n\u003cpre\u003eWhat I like about this change (\u003ca href=\"http://golang.org/cl/5569048/)\"\u003ehttp://golang.org/cl/5569048/)\u003c/a\u003e is that it\nchanges the profile in a very clear way: fixes non-productive findMatch calls in case if\nthe data is already compressed (like avi).\n\nBefore change:\n\navi:\n\nTotal: 10769 samples\n    3276  30.4%  30.4%     9896  91.9% compress/flate.(*compressor).deflate\n    1866  17.3%  47.7%     1866  17.3% compress/flate.(*compressor).findMatch\n     473   4.4%  52.1%     4818  44.7% compress/flate.(*huffmanBitWriter).writeBlock\n     425   3.9%  56.1%     2256  20.9% runtime.mallocgc\n     420   3.9%  60.0%      420   3.9% hash/crc32.update\n     331   3.1%  63.1%     2590  24.1% compress/flate.(*huffmanEncoder).bitCounts\n     328   3.0%  66.1%      328   3.0% compress/flate._func_001\n     304   2.8%  68.9%      803   7.5% sweep\n     300   2.8%  71.7%      966   9.0% compress/flate.(*literalNodeSorter).Less\n     238   2.2%  73.9%      793   7.4% compress/flate.literalNodeSorter.Less\n\ntext:\n\nTotal: 5969 samples\n    4594  77.0%  77.0%     4594  77.0% compress/flate.(*compressor).findMatch\n     643  10.8%  87.7%     5781  96.9% compress/flate.(*compressor).deflate\n     207   3.5%  91.2%      563   9.4% compress/flate.(*huffmanBitWriter).writeBlock\n     127   2.1%  93.3%      127   2.1% hash/crc32.update\n      95   1.6%  94.9%      167   2.8% compress/flate.(*huffmanBitWriter).writeBits\n      68   1.1%  96.1%      157   2.6% compress/flate.(*huffmanBitWriter).writeCode\n      40   0.7%  96.7%       77   1.3% compress/flate.(*huffmanBitWriter).flushBits\n      26   0.4%  97.2%       26   0.4% compress/flate.offsetCode\n      25   0.4%  97.6%       29   0.5% syscall.Syscall\n      12   0.2%  97.8%       80   1.3% runtime.mallocgc\n\n\nAfter change:\n\navi:\n\nTotal: 8885 samples\n    2721  30.6%  30.6%     8061  90.7% compress/flate.(*compressor).deflate\n     652   7.3%  38.0%      652   7.3% compress/flate.(*compressor).findMatch\n     506   5.7%  43.7%     4719  53.1% compress/flate.(*huffmanBitWriter).writeBlock\n     429   4.8%  48.5%     2210  24.9% runtime.mallocgc\n     414   4.7%  53.1%      414   4.7% hash/crc32.update\n     324   3.6%  56.8%      324   3.6% compress/flate._func_001\n     309   3.5%  60.3%      806   9.1% sweep\n     307   3.5%  63.7%     2489  28.0% compress/flate.(*huffmanEncoder).bitCounts\n     303   3.4%  67.1%      934  10.5% compress/flate.(*literalNodeSorter).Less\n     225   2.5%  69.7%      727   8.2% runtime.MCache_Alloc\n\ntext:\n\nTotal: 5875 samples\n    4594  78.2%  78.2%     4594  78.2% compress/flate.(*compressor).findMatch\n     585  10.0%  88.2%     5697  97.0% compress/flate.(*compressor).deflate\n     198   3.4%  91.5%      541   9.2% compress/flate.(*huffmanBitWriter).writeBlock\n     107   1.8%  93.3%      107   1.8% hash/crc32.update\n      87   1.5%  94.8%      153   2.6% compress/flate.(*huffmanBitWriter).writeBits\n      58   1.0%  95.8%      148   2.5% compress/flate.(*huffmanBitWriter).writeCode\n      32   0.5%  96.4%       71   1.2% compress/flate.(*huffmanBitWriter).flushBits\n      28   0.5%  96.8%       35   0.6% syscall.Syscall\n      22   0.4%  97.2%       22   0.4% compress/flate.offsetCode\n      21   0.4%  97.6%       91   1.5% compress/flate.(*huffmanEncoder).bitCounts\n\n(I'm sorry for a lot of small updates on this issue. Feel free to unsubscribe. I would\nlike to continue posting my progress here)\u003c/pre\u003e",
	"user": {
		"login": "krasin",
		"id": 21159,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-01-24T07:25:40Z",
	"updated_at": "2014-12-08T10:14:30Z"
}
