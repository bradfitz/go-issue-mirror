{
	"id": 132179590,
	"number": 14257,
	"state": "closed",
	"title": "hash/crc32: Use \"slice-by-8\" for Castagnoli and smaller payloads.",
	"body": "We should add https://github.com/klauspost/crc32 which uses  \"slicing by 8\" optimization to Castagnoli tables which will speed  up CRC32 calculation on systems without assembler (all but AMD64). \r\n\r\nIn my tests, it is faster to use \"slicing by 8\" for sizes all down to \r\n16 bytes, so the switchover point has been adjusted. \r\n\r\nThere are no benchmarks for small sizes, so I have added one for 40 bytes, \r\nas well as one for bigger sizes (32KB). \r\n\r\n```\r\nCastagnoli, No assembler, 40 Byte payload: (before, after) \r\nBenchmarkCastagnoli40B-4   10000000               161 ns/op         246.94   MB/s \r\nBenchmarkCastagnoli40B-4   20000000               100 ns/op         398.01   MB/s \r\n\r\nCastagnoli, No assembler, 32KB payload: (before, after) \r\nBenchmarkCastagnoli32KB-4     10000            115426 ns/op         283.89   MB/s \r\nBenchmarkCastagnoli32KB-4     30000             45171 ns/op         725.41   MB/s \r\n\r\nIEEE, No assembler, 1KB payload: (before, after) \r\nBenchmarkCrc1KB-4              500000              3604 ns/op           284.10 MB/s \r\nBenchmarkCrc1KB-4             1000000              1463 ns/op           699.79 MB/s \r\n```",
	"user": {
		"login": "klauspost",
		"id": 5663952,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2016-05-18T00:35:56Z",
	"created_at": "2016-02-08T15:53:35Z",
	"updated_at": "2016-05-18T00:35:56Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
