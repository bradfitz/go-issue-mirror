{
	"id": 119801730,
	"number": 13444,
	"state": "closed",
	"title": "x/net/http2: bidirection streams, write request body data as available",
	"body": "In [Kubernetes](http://kubernetes.io/), we are currently using [spdystream](https://github.com/docker/spdystream/) as a means to support bidirectional stream-based communication over HTTP connections. We use this to enable ssh-like connectivity and port forwarding from the user's system into a Docker container running in Kubernetes.\r\n\r\nThe spdystream APIs enable us to create streams at will in both the client and server handler code. For remote command execution, the client creates streams representing stdin, stdout, and stderr. Once the server receives all the streams, it performs a `docker exec` of whatever process the user wishes, and data is copied between the container process's stdin/stdout/stderr and the spdy streams.\r\n\r\nWe're hoping that we can eventually move to HTTP/2 and achieve the same functionality; namely, full control over stream creation and data flow in a \"hijacked\" fashion.\r\n\r\ncc @bradfitz @smarterclayton @thockin @lavalamp\r\n\r\n(forked from #13443)",
	"user": {
		"login": "ncdc",
		"id": 354,
		"type": "User",
		"site_admin": false
	},
	"comments": 10,
	"closed_at": "2015-12-08T22:01:34Z",
	"created_at": "2015-12-01T20:32:44Z",
	"updated_at": "2015-12-08T22:01:34Z"
}
