{
	"id": 52875026,
	"number": 9444,
	"state": "closed",
	"title": "fmt: scan mishandles width for %d",
	"body": "http://play.golang.org/p/WlMpKiMGIv fails but if the format for the integer is %d rather than %5d, it works fine.\r\n\r\nSnippet here reproduced here for clarity:\r\n\r\npackage main\r\n\r\nimport \"fmt\"\r\n\r\nfunc main() {\r\n\tformat := \"%6s%5d\"\t\r\n\t//      \"ssssssddddd\"\r\n\tline := \"some      3\"\r\n\r\n\tvar str string\r\n\tvar numb int64\r\n\r\n\tn, err := fmt.Sscanf(line, format, \u0026str, \u0026numb)\r\n\r\n\tfmt.Println(n, err)\r\n\tfmt.Println(str, numb)\t\r\n}\r\n\r\n\r\n\r\nThe use of widths vs. space-separated tokens confuses. It's possible this is working as intended but if so it needs to be explained. I believe it's a bug.\r\n",
	"user": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2015-06-13T04:33:52Z",
	"created_at": "2014-12-26T00:04:01Z",
	"updated_at": "2016-06-25T01:57:18Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
