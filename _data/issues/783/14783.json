{
	"id": 140299901,
	"number": 14783,
	"state": "closed",
	"title": "cmd/link: panic during go test on tip",
	"body": "\u003e Please answer these questions before submitting your issue. Thanks!\r\n\u003e \r\n\u003e 1. What version of Go are you using (`go version`)?\r\n\r\n`go version devel +de4317c`\r\n\r\n\u003e 2. What operating system and processor architecture are you using (`go env`)?\r\n\r\n`linux/amd64`\r\n\r\n\u003e 3. What did you do?\r\n\u003e If possible, provide a recipe for reproducing the error.\r\n\u003e A complete runnable program is good.\r\n\u003e A link on play.golang.org is best.\r\n\r\nTravis CI ran the tests for my project, here is the job: https://travis-ci.org/go-kit/kit/jobs/115414128\r\n\r\n\u003e 4. What did you expect to see?\r\n\r\nTests pass.\r\n\r\n\u003e 5. What did you see instead?\r\n\r\n```\r\n# testmain\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal 0xb code=0x1 addr=0xf0 pc=0x4bd077]\r\ngoroutine 1 [running]:\r\npanic(0x5a4c40, 0xc820018180)\r\n\t/home/travis/.gimme/versions/go/src/runtime/panic.go:500 +0x189\r\ncmd/link/internal/ld.decodetype_funcincount(0x0, 0x28)\r\n\t/home/travis/.gimme/versions/go/src/cmd/link/internal/ld/decodesym.go:182 +0x27\r\ncmd/link/internal/ld.decode_methodsig(0xc82119fad0, 0x40070, 0x30, 0x1, 0x1, 0x0, 0x4)\r\n\t/home/travis/.gimme/versions/go/src/cmd/link/internal/ld/decodesym.go:281 +0x121\r\ncmd/link/internal/ld.decodetype_methods(0xc82119fad0, 0x0, 0x0, 0x0)\r\n\t/home/travis/.gimme/versions/go/src/cmd/link/internal/ld/decodesym.go:355 +0x169\r\ncmd/link/internal/ld.(*deadcodepass).flood(0xc820041ce0)\r\n\t/home/travis/.gimme/versions/go/src/cmd/link/internal/ld/deadcode.go:296 +0xd50\r\ncmd/link/internal/ld.deadcode(0xc82059e000)\r\n\t/home/travis/.gimme/versions/go/src/cmd/link/internal/ld/deadcode.go:56 +0xc5\r\ncmd/link/internal/ld.Ldmain()\r\n\t/home/travis/.gimme/versions/go/src/cmd/link/internal/ld/pobj.go:190 +0x1349\r\ncmd/link/internal/amd64.Main()\r\n\t/home/travis/.gimme/versions/go/src/cmd/link/internal/amd64/obj.go:44 +0x19\r\nmain.main()\r\n\t/home/travis/.gimme/versions/go/src/cmd/link/main.go:27 +0x27c\r\n```\r\n\r\nThe build output is a little confusing, mea culpa. It looks like the test that triggers this panic is from package kit/log, you can find that by searching that page for \"build failed\".",
	"user": {
		"login": "peterbourgon",
		"id": 114509,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2016-03-12T01:23:45Z",
	"created_at": "2016-03-11T21:45:57Z",
	"updated_at": "2016-03-12T01:23:45Z",
	"milestone": {
		"id": 1414136,
		"number": 32,
		"title": "Go1.7Early"
	}
}
