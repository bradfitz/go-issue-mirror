{
	"id": 66084326,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2 by **kbsriram**:\n\n\u003cpre\u003eI'm a newcomer to Go, and can't speak for whether it affects real programs. Also as a\nresult, my advance apologies for conceptual misunderstandings (though I have been a\nprogrammer for longer than I care to remember :-)\n\nI'm wondering whether a Go programmer should code with the assumption that multiple\ngoroutines waiting to read or write on a channel can potentially starve?\n\nFor instance, taking this example from one of the google i/o presentations\n\n\u003ca href=\"http://talks.golang.org/2013/advconc.slide#6\"\u003ehttp://talks.golang.org/2013/advconc.slide#6\u003c/a\u003e\n\nClearly it terminates in practice, but it appears to rely on the ability for the main()\nroutine to eventually get a chance to read from the \"table\" channel, since one of the\nother player goroutines is always reading from that channel as well.\n\nI'm wondering if I'm missing some basic assumption about interactions between the\nscheduler, blocking calls and goroutines that lets this sort of situation work in\npractice?\n\nTo crystallize my question even further[1]\n\n\u003ca href=\"http://pastebin.com/FgwrTid1\"\u003ehttp://pastebin.com/FgwrTid1\u003c/a\u003e\n\nfails to terminate on my local go install (go version go1.1.1 darwin/386)\n\nhowever, this one *does* terminate\n\n\u003ca href=\"http://pastebin.com/UQpZFs5D\"\u003ehttp://pastebin.com/UQpZFs5D\u003c/a\u003e\n\nwith the only difference being changing the sleep in the \"stopper\" goroutine from Micro\nto Milliseconds.\n\n[1] I appreciate that select'ing on secondary control channel could be used to \"stop\"\nthe primality test. It's more about demonstrating seemingly minor interactions between\nblocking calls and the scheduler do result in significant changes in the behavior of the\ngoroutines, rather than how to \"fix\" the example.\n\n[2] I've placed the results from my local go install rather than from play.golang.org,\nbecause it shows a different set of behaviors; and I'm not familiar with any additional\nrestrictions it may be employing.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-21T20:24:45Z",
	"updated_at": "2014-12-08T10:34:08Z"
}
