{
	"id": 51278887,
	"number": 2205,
	"state": "open",
	"title": "cmd/compile: read-only escape analysis and avoiding string \u003c-\u003e []byte copies",
	"body": "\u003cpre\u003eMany functions take a []byte but only read from it.\n\nIf the escape analysis code could flag parameters of a function as read-only, then code\nwhich passes in a []byte(string) conversion could be cheaper.\n\nbytes.IndexByte is one example.\n\nFor example, http/sniff.go does:\n\n// -------------------\n  // Index of the first non-whitespace byte in data.                                                                                               \n  firstNonWS := 0\n  for ; firstNonWS \u0026lt; len(data) \u0026amp;\u0026amp; isWS(data[firstNonWS]); firstNonWS++ {\n  }\n\nfunc isWS(b byte) bool {\n        return bytes.IndexByte([]byte(\u0026quot;\\t\\n\\x0C\\n \u0026quot;), b) != -1\n}\n\n// -------------------\n\nBut it's faster to avoid re-creating the []byte:\n\nfunc BenchmarkIndexByteLiteral(b *testing.B) {\n        for i := 0; i \u0026lt; b.N; i++ {\n\t\tIndexByte([]byte(\u0026quot;\\t\\n\\x0C\\n \u0026quot;), 'x')\n        }\n}\n\nfunc BenchmarkIndexByteVariable(b *testing.B) {\n        var whitespace = []byte(\u0026quot;\\t\\n\\x0C\\n \u0026quot;)\n        for i := 0; i \u0026lt; b.N; i++ {\n                IndexByte(whitespace, 'x')\n        }\n}\n\nbytes_test.BenchmarkIndexByteLiteral\t20000000\t       125 ns/op\nbytes_test.BenchmarkIndexByteVariable\t100000000\t        25.4 ns/op\n\nRelated is \u003ca href=\"https://golang.org/issue/2204\"\u003eissue #2204\u003c/a\u003e.\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "GarbageCollector"
		},
		{
			"name": "Performance"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 18,
	"created_at": "2011-08-29T22:35:43Z",
	"updated_at": "2015-06-08T06:23:46Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	},
	"reactions": {
		"total_count": 2,
		"+1": 2
	}
}
