{
	"id": 130864983,
	"number": 14205,
	"state": "closed",
	"title": "`log.Logger` should be a interface instead of a struct",
	"body": "**What version of Go are you using (go version)?**\r\n\r\n1.5.3.\r\n\r\n**What operating system and processor architecture are you using?**\r\n\r\nLinux. AMD 64.\r\n\r\n**What did you do?**\r\n\r\nWe've been using [logrus](https://github.com/Sirupsen/logrus) for structural logging which is good for querying and stuff. And we would like [`httputil.ReverseProxy.ErrorLog`](https://github.com/golang/go/blob/master/src/net/http/httputil/reverseproxy.go#L48) to log in the same format as logrus which is used in the application code. Since `log.Logger` is a struct instead of a interface, there's no way to adapt logrus to `log.Logger`.\r\n\r\n**What did you expect to see?**\r\n\r\nI would expect `log.Logger` to be a interface which defines a bunch of methods, e,g. `Fatal(v ...interface{})` and allow different implementations. This way, even the Go standard library can log in same way as application code.\r\n\r\n**What did you see instead?**\r\n\r\nWell, `log.Logger` is a struct and the log format is different from our application code. We need to have other ways to query the log for stdlib.",
	"user": {
		"login": "jingweno",
		"id": 169064,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Go2"
		}
	],
	"comments": 4,
	"closed_at": "2016-02-03T00:27:46Z",
	"created_at": "2016-02-03T00:23:48Z",
	"updated_at": "2016-02-03T00:53:32Z"
}
