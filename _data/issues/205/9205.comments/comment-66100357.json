{
	"id": 66100357,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eRuss told me to.\n\n\u003ca href=\"https://golang.org/cl/4530054/diff/19001/src/pkg/mime/multipart/writer.go#newcode48\"\u003ehttps://golang.org/cl/4530054/diff/19001/src/pkg/mime/multipart/writer.go#newcode48\u003c/a\u003e\n\n\"I know it seems like overkill but I think you'd be better\noff importing and using crypto/rand here.  Package rand is\nnot great if your goal is to avoid collisions.  For example\nsince the generator is not typically seeded this will use\nthe same boundary for the first message each time it gets run.  Even if it is\nseeded, you're only getting 64 bits of\nrandomness out of this, and you're trying to pull out \nquite a bit more.\"\n\nAnd I still agree with that.\n\nI also have no clue why /dev/urandom would be temporarily unavailable. \n\nIf there was a well-seeded random mechanism available, I would use it, but I don't\nbelieve there is.\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-04T17:43:39Z",
	"updated_at": "2014-12-08T10:50:14Z"
}
