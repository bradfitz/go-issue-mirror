{
	"id": 190087056,
	"body": "@dlsniper -- \"May\" doesn't only refer to optional features because the context isn't always \"implementations may.\"\r\n\r\nEven the [text of RFC 2119 itself](https://www.ietf.org/rfc/rfc2119.txt) uses 'may' to refer to, e.g. how security issues \"may be\" tricky (and trickiness certainly isn't an optional feature; the sentence is just saying security issues turn out tricky sometimes). In RFCs, you sometimes see the distinction between the RFC 2119 use and others in some uses of the key words being capitalized. \r\n\r\nIn your example, and most other uses when I search the spec, \"may\" refers to what your program may do, not something a Go implementer may choose whether or not to do. Your program may rely on integer wraparound, omit most semicolons, use newlines in backtick-delimited raw strings, and so on. When your programs may use a feature, all compilers must implement it, no ambiguity. (If compilers didn't all have it, you couldn't rely on it, right?) There's a \"may\" because, as minux said, it would be wrong to say every Go program _has_ to use every feature.\r\n\r\n\"Implementation restriction\" refers to explicitly allowed _limitations_ that a compiler can have, i.e. permitted variations. For example, compilers can choke on NUL bytes in source if they want to. So it's the reverse of how you were parsing it in the comment -- \"may\" on its own does not mean there can be inter-compiler variation, \"implementation restriction\" means there can be. \r\n\r\n(Implementation restrictions don't take up much of the spec; more commonly, when a topic (the type of garbage collector, say) is implementation-dependent, the spec just doesn't discuss it at all.)\r\n\r\nI hope that helps parse the spec. It's hard to say what would clarify it. I don't think capitalizing the few uses that refer to implementation variations would help much, and it just seems inevitable you have to think \"_what_ may do X?\" when you see the word \"may.\" ",
	"user": {
		"login": "twotwotwo",
		"id": 328644,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-29T08:09:30Z",
	"updated_at": "2016-02-29T08:10:38Z"
}
