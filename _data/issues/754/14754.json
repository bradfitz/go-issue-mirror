{
	"id": 139956729,
	"number": 14754,
	"state": "closed",
	"title": "cmd/vet: Always errors if printf-style function from an imported package is used",
	"body": "This is a regression pointed out by @valyala in https://github.com/golang/go/issues/12294#issuecomment-194829863. \r\n\r\nhttps://golang.org/cl/20163 does not work. vet is unable to find the signature of any functions or methods which aren't defined in the current package being vetted, so it flags these functions/methods as always having 'no formatting directive'.\r\n\r\nThe ideal answer, from a vet user's perspective, would seem to be to have vet import those packages and look up their function signature, but (as far as I can understand) that would expand what vet does pretty dramatically and could make it slower. Right now, it doesn't seem to have a build context, so importing isn't straightforward. I would be happy to be wrong about this, though!\r\n\r\nIf I'm not wrong and importing is not in the cards, then the right thing might be to just revert the changes introduced in https://golang.org/cl/20163, or we could just assume sane defaults if we're unable to find the function signature, using the old, pre-CL20163 `printfList` which hardcoded the expected position of the format param.",
	"user": {
		"login": "spenczar",
		"id": 880413,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2016-03-29T23:41:30Z",
	"created_at": "2016-03-10T17:21:28Z",
	"updated_at": "2016-03-29T23:41:30Z"
}
