{
	"id": 51288648,
	"number": 8754,
	"state": "closed",
	"title": "time: == on time.Time values compiles but doesn't work",
	"body": "\u003cpre\u003eWhen we permitted == on structs in an earlier release of Go, we accidentally made\ntime.Time values comparable this way. However, because time.Time values contain a\n*Location pointer, it's possible (and easy) to have two time.Times represent the same\ninstant, even in the same time zone, yet compare unequal. This is a serious bug, as it\nenables subtle bugs if a time.Time is used as a key in a map or database.\n\nWe need to find a way either to to break == statically or make it work dynamically.\n\nToo late for 1.4, as the issue is subtle. Marking for 1.5.\u003c/pre\u003e",
	"user": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2015-04-28T20:54:18Z",
	"created_at": "2014-09-16T20:48:46Z",
	"updated_at": "2016-06-25T01:41:42Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
