{
	"id": 165907486,
	"number": 16391,
	"state": "closed",
	"title": "x/text/collate: Infinite loop in Collator.Key() triggered by invalid UTF-8",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\n    ```\r\n    go version go1.6.2 linux/amd64\r\n    ```\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\n    ```\r\n    GOARCH=\"amd64\"\r\n    GOOS=\"linux\"\r\n    ```\r\n\r\n3. What did you do?\r\n\r\n    Passed random binary data into `Collator.Key()`:\r\n\r\n    ```go\r\n    package main\r\n\r\n    import (\r\n            \"golang.org/x/text/collate\"\r\n            \"golang.org/x/text/language\"\r\n    )\r\n\r\n    func main() {\r\n            input := []byte(\"\\x99\\xeb\\x9d\\x18\\xa4G\\x84\\x04]\\x87\\xf3\\xc6|\\xf2'F\")\r\n            collator := collate.New(language.English, collate.Loose)\r\n            collator.Key(new(collate.Buffer), input)\r\n    }\r\n    ```\r\n\r\n4. What did you expect to see?\r\n\r\n    The program should terminate, or the docs for [x/text/collate](https://godoc.org/golang.org/x/text/collate) should warn that inputs must be validated before calling `Collator.Key()`.\r\n\r\n5. What did you see instead?\r\n\r\n    The call to `Collator.Key()` never returns. The program eats all available memory. My workstation locks up. My interns laugh at me.\r\n",
	"user": {
		"login": "enisoc",
		"id": 6733629,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "mpvl",
		"id": 6445383,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"closed_at": "2016-07-16T06:20:09Z",
	"created_at": "2016-07-16T04:17:59Z",
	"updated_at": "2016-07-16T06:20:09Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
