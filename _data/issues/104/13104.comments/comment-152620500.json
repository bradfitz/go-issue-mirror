{
	"id": 152620500,
	"body": "If we go beyond just termios, into terminfo parsing and so forth, yes, this\nwould be quite a bit bigger.\n\nI wrote a fairly complete terminfo parser in tcell see\ngithub.com/gdamore/tcell\n\n(Its a little special purpose, because I don’t pick up all terminfo\nkeywords for storage, because most terminfo capabilities are useless in\nmodern terminals.  But I have a full parser and expander, including a\ncomplete implementation of TParm and TGoto.)\n\nThe low level half of tcell (basically everything in the base tcell\npackage) is probably what you’d want if you’re going to be doing rich\nterminal work.  This API may still be a little higher level than we’d like\nto express in the core Go library though.  (For example it has fairly rich\ncolor mapping support, mapping any RGB value into the supported colors of\nthe terminal, including best-match color on 256 color terminals.)  The\nentirety of the base tcell package is about 7KLOC, plus a few KLOC for the\npreparsed embedded terminfo database.  (Basically I precompile the most\nlikely terminals into the code in an attempt to minimize dependencies on\nexternal database files.)\n\nOn Fri, Oct 30, 2015 at 11:52 AM, Peter Harris \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e With respect, I disagree that there isn't enough terminal handling to\n\u003e warrant its own subrepo. The termcap/terminfo parser alone would probably\n\u003e be a decent size, in addition to all the other things already mentioned.\n\u003e Plus all the os-specific versions of the interfaces for output\n\u003e (colours/styles/cursor positioning) and input (Ctrl-, Alt-, Fn-, Arrow-,\n\u003e etc keys) on non-Unix-like OSes.\n\u003e\n\u003e I looked at the links in the proposal, and (like my own liner\n\u003e \u003chttps://github.com/peterh/liner\u003e) none appear to support terminfo (or...\n\u003e is there a Plan 9 equivalent?). That's probably because everybody\n\u003e independently figured it wasn't worth the effort to write a terminfo parser\n\u003e for a single project. If the library and the effort are going to be shared,\n\u003e I'd be more likely to help.\n\u003e\n\u003e —\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/13104#issuecomment-152615292\u003e.\n\u003e\n",
	"user": {
		"login": "gdamore",
		"id": 1295229,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-30T19:10:25Z",
	"updated_at": "2015-10-30T19:10:25Z"
}
