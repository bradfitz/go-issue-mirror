{
	"id": 239314478,
	"body": "The line `f2 := a.PrintSomething` makes a function closure which captures `a`.  The `-fm` function is a wrapper that reads `a` out of the closure and passes it as an argument to `PrintSomething`.\r\n\r\nSo there is a real function there on the stack, and the traceback is showing it to you.  The line number looks correct, it mentions the line where the wrapper is generated.  Just like if you had defined a func(){} inside your function and then later called it.\r\n\r\nSo yes, the line number is somewhat strange.  But I don't think it's incorrect.  I'm not sure what would be a better line number.  For instance, if you did:\r\n```\r\n1:    f2 := a.PrintSomething\r\n2:    f2(\"a\")\r\n3:    f2(\"b\")\r\n```\r\nThe current code reports line 1 for the `-fm` entry if either call panics.  It sounds like you want it to report line 2 when the first call panics and line 3 when the second call panics.  But the PC is the same for both of those instances, so that wouldn't be easy to manage with the current traceback setup.\r\n\r\n```\r\n1:    f := func(s string) { ... maybe panic ... }\r\n2:    f(\"a\")\r\n3:    f(\"b\")\r\n```\r\nWith an explicit function `f`, reporting line 1 is ok, right?\r\n",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-11T22:36:44Z",
	"updated_at": "2016-08-11T22:36:44Z"
}
