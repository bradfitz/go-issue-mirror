{
	"id": 174924326,
	"number": 16985,
	"state": "closed",
	"title": "sync/atomic, cmd/compile: stack corruption with AddUint32",
	"body": "### What version of Go are you using (`go version`)?\r\ndevel +fd41951\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nAMD64 Linux\r\n\r\n### What did you do?\r\nCompile and run this program:\r\n```go\r\npackage main\r\n\r\nimport \"sync/atomic\"\r\n\r\nvar count uint32\r\n\r\nfunc main() {\r\n\tbuffer := []byte(\"T\")\r\n\tfor i := 0; i \u003c len(buffer); {\r\n\t\tatomic.AddUint32(\u0026count, 1)\r\n\t\t_ = buffer[i]\r\n\t\ti++\r\n\t\ti++\r\n\t}\r\n}\r\n```\r\n\r\n\r\n### What did you expect to see?\r\nNo output. This is what happens in Go 1.7.\r\n\r\n### What did you see instead?\r\n```\r\npanic: runtime error: index out of range\r\n\r\ngoroutine 1 [running]:\r\npanic(0x458f40, 0xc42000a150)\r\n\t/go/src/runtime/panic.go:500 +0x1a0\r\nmain.main()\r\n\tinc_panic_example/main.go:11 +0x76\r\n```\r\n\r\n",
	"user": {
		"login": "iangudger",
		"id": 7056530,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-09-06T14:26:36Z",
	"created_at": "2016-09-04T00:22:03Z",
	"updated_at": "2016-09-06T14:26:36Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	}
}
