{
	"id": 66094719,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eFeeding random noise is extremely unlikely to parse w/o errors, and even less likely to\ncompile. That said, feeding random noise to a compiler is an extremely good way to test\na compiler against crashes.\n\nIf it's just random noise (text) the parser is likely to bail quickly and thus the test\nwon't be very good. Here's a few ideas for this first step:\n\n- create random sequences of valid Go tokens\n- make sure the parser passes at least the very first check (package clause present)\n- use existing programs (std lib) and modify randomly (parse, and then make a few random\nAST changes)\n\nThese all would test robustness of parsers/compilers in the presence of syntactically\nerroneous input.\n\ndvyukov's suggestion for generation of random programs would be the next step. Those\nprograms should always parse, but may not compile due to semantic requirements.\n\nThe hard part is to track scope contents and types; that information must be used when\ngenerating random programs that actually compile.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-05-13T20:18:12Z",
	"updated_at": "2014-12-08T10:44:15Z"
}
