{
	"id": 66094722,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eRe #5: I'm not sure there are any packages one would need. One could use go/ast and thus\nrandomly generate an ast rather than source text, but the difference in effort seems\nsmall. As mentioned before, the \"hard\" part is tracking of scopes and types; expression\ngeneration will have to choose random identifiers from those scopes and combine them\nusing random (but valid) operations depending on the types. One could use go/types to\nget a scope and type representation, but I'm not sure the (minor) gain is worth the\ndependency - the operations on those data structures are likely quite different from\nwhat go/types provides.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-05-14T15:56:38Z",
	"updated_at": "2014-12-08T10:44:15Z"
}
