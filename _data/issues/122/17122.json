{
	"id": 177225292,
	"number": 17122,
	"state": "closed",
	"title": "import order when import \"C\" in cause error",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### What version of Go are you using (`go version`)?\r\n\r\n1.7.1\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/gstepanov/workspace/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build148165501=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\nI have a code snipped https://play.golang.org/p/hyTNhSJ-eI where i import python.h and use objects from there using C. \r\n\r\nBut when using multiline import like code snippet https://play.golang.org/p/7Fo_k4qLT2 do.\r\nbuild failed with\r\n\r\n``could not determine kind of name for C.PyLong_FromLongLong``\r\n``could not determine kind of name for C.PyObject``\r\n\r\nCommand used for buiild\r\n\r\ngo build -buildmode=c-shared -o bin/main.go.so main.go\r\n\r\nFull version of code can be found at https://github.com/stgleb/py_to_go\r\n\r\nIt seems pretty weird  that way of import syntax affect in such way, i've spent a few hours to\r\nfigure out that issue was in simple import syntax.\r\n\r\n\r\n\r\n\r\n",
	"user": {
		"login": "stgleb",
		"id": 5112367,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-09-15T17:01:17Z",
	"created_at": "2016-09-15T16:33:19Z",
	"updated_at": "2016-09-15T17:12:17Z"
}
