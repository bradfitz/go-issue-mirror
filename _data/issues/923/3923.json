{
	"id": 51281358,
	"number": 3923,
	"state": "closed",
	"title": "cmd/gc: result of comparison should be comparable to any boolean type",
	"body": "\u003cpre\u003eThe following code should compile:\n\ntype mybool bool\nvar m mybool = x \u0026lt; y\nvar _ = (x \u0026lt; y) == m\n\ngc complains with:\n\ninvalid operation: invalid operation: x \u0026lt; y == m (mismatched types bool and mybool)\n\nThe spec says ( \u003ca href=\"http://golang.org/ref/spec#Comparison_operators\"\u003ehttp://golang.org/ref/spec#Comparison_operators\u003c/a\u003e ):\n\n1) \u0026quot;The result of a comparison can be assigned to any boolean type.\u0026quot;\n2) \u0026quot;In any comparison, the first operand must be assignable to the type of the\nsecond operand, or vice versa.\u0026quot;\n\nPer 1), (x \u0026lt; y) can be assigned to any boolean type, and thus it can be assigned to\nmybool. Per 2), in (x \u0026lt; y) == m the first operand (x \u0026lt; y) must be assignable to\nthe type of the 2nd operand (m, of type mybool), which is possible (as just\nestablished). Thus the entire comparison should be legal.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Suggested"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 10,
	"closed_at": "2014-12-08T10:20:45Z",
	"created_at": "2012-08-07T23:18:12Z",
	"updated_at": "2016-06-24T22:22:45Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
