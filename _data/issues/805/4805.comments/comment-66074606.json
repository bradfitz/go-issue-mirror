{
	"id": 66074606,
	"body": "\u003ca id=\"c9\"\u003e\u003c/a\u003eComment 9 by **chrisfarms**:\n\n\u003cpre\u003eThis really is quite an issue. At the moment I am having to use *sql.Tx as a hack to\nensure that app is always using the same underlying connection.\n\nHow about this for a what-if...\n\nWhat if sql.DB was an interface, (defining all of the methods that the current *sql.DB\ntype does now).\n\nWhat if the current *sql.DB type was renamed *sql.Conn and stripped of all of it's\nconnection pooling magic. So a single *sql.Conn is _always_ using a single connection.\nMaybe it can handle auto-reconnecting itself, but that's it. No Pooling for *sql.Conn.\nFor users *sql.Conn could be synonymous with \"single blocking database connection\".\n*sql.Conn satisfies sql.DB.\n\nWhat if we then had an *sql.Pool type. This would act a little more like the current\n*sql.DB type, it manages a pool of sql.DB and itself satisfies sql.DB so in many cases\ncould be a direct swap between *sql.Conn / *sql.Pool. This might pave the way to offer\ndifferent Pooling strategies, or maybe delegate some decisions to the sql.Driver.\n\n\u0026lt;/whatif\u0026gt;\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-04-23T10:07:14Z",
	"updated_at": "2014-12-22T06:22:02Z"
}
