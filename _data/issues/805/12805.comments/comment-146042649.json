{
	"id": 146042649,
	"body": "For the runtime at least, I don't think we can use a separate package.  The\nruntime needs to know very early on some of the processor flags so that it\ncan initialize properly (alg tables in particular, maybe other things).\nThe runtime package shouldn't be allowed to import any other packages.\nCurrently the runtime only imports unsafe (which is, paradoxically, safe to\nimport because it contains no code, no initializers, ...).  It sounds dicey\nto allow anything more substantial.  How would that package get\ninitialized?  Where would it get a stack?\n\nThat said, runtime will always be special.  This proposal sounds reasonable\nfor use by all other packages.  Maybe the implementation can be in package\nruntime and runtime/cpu gets magic unexported access to runtime (ala\nreflect).  At that point, though, why not just add the API to runtime\ndirectly?\n\nOn Tue, Oct 6, 2015 at 5:07 PM, Minux Ma \u003cnotifications@github.com\u003e wrote:\n\n\u003e The main problem is that a lot of packages issue their own\n\u003e CPUID instruction. We can't override that without refactor\n\u003e them to use a centralized cpu feature detection facility.\n\u003e\n\u003e I'm wondering if we could have a runtime/cpu package that\n\u003e provide a public interface to query CPU capabilities?\n\u003e we can't just have an internal package because some of\n\u003e the code in sub-repo also needs CPU feature detection.\n\u003e\n\u003e If we have a standard interface, then 3rdparty code will also\n\u003e benefit from this kind of testing without forcing to test on\n\u003e a large variety of machines.\n\u003e\n\u003e If you think this standard interface is reasonable, I can write\n\u003e a proposal.\n\u003e\n\u003e Basically, the runtime/cpu package will provide overridable\n\u003e runtime cpu feature detection.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/12805#issuecomment-146040214\u003e.\n\u003e\n",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-07T00:22:14Z",
	"updated_at": "2015-10-07T00:22:14Z"
}
