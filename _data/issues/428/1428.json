{
	"id": 51277792,
	"number": 1428,
	"state": "closed",
	"title": "regexp: a bare ? should be treated as an error",
	"body": "by **benlynn**:\n\n\u003cpre\u003eThis program (attached):\n\npackage main\nimport \u0026quot;regexp\u0026quot;\nfunc main() {\n  f := func(pattern, s string) {\n    switch b, err := regexp.Match(pattern, []byte(s)); err {\n    case nil: { println(\u0026quot;Got a match?\u0026quot;, b) }\n    default:  { println(\u0026quot;FAIL:\u0026quot;, err.String()) }\n    }\n  }\n  f(\u0026quot;a+b\u0026quot;, \u0026quot;a+b\u0026quot;)\n  f(\u0026quot;a*b\u0026quot;, \u0026quot;a*b\u0026quot;)\n  f(\u0026quot;a?b\u0026quot;, \u0026quot;a?b\u0026quot;)\n  f(\u0026quot;+b\u0026quot;, \u0026quot;+b\u0026quot;)\n  f(\u0026quot;*b\u0026quot;, \u0026quot;*b\u0026quot;)\n  f(\u0026quot;?b\u0026quot;, \u0026quot;?b\u0026quot;)\n}\n\noutputs this:\n\n  Got a match? false\n  Got a match? true\n  Got a match? true\n  FAIL: closure applies to nothing\n  FAIL: closure applies to nothing\n  Got a match? true\n\nbut the last case should also trigger an error.\n\nThe fix is obvious and trivial. I'll post a CL shortly.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/1428/0/bug.go\"\u003ebug.go\u003c/a\u003e (688 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:08:16Z",
	"created_at": "2011-01-18T13:58:13Z",
	"updated_at": "2016-06-24T19:24:15Z"
}
