{
	"id": 66097259,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eI think this is related to the heuristic that was used to address \u003ca href=\"https://golang.org/issue/2806\"\u003eissue #2806\u003c/a\u003e, but I'm\nstill trying to grok exactly what's going on.\n\nFor what it's worth, as a workaround, if the structs are defined using proper C99\nflexible array members (i.e., \"char data[];\" instead of \"char data[0];\"), then cgo is\nconsistently uses [0]_Ctype_char for both structs.\n\nThe problem seems to be that for \"struct { void *next; char flag; char data[0]; }\"'s\ndata member, debug/dwarf is returning a dwarf.ArrayType with Count==-1, whereas changing\n\"[0]\" to \"[]\" or removing the \"next\" field causes debug/dwarf to return one with\nCount==0 instead.\u003c/pre\u003e",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-08-06T07:12:54Z",
	"updated_at": "2014-12-08T10:46:52Z"
}
