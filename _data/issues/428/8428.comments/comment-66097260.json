{
	"id": 66097260,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eNevermind, the flexible array members \"workaround\" is actually just a side effect of a\nbug in debug/dwarf.  debug/dwarf keeps a cache of already processed DWARF types, but it\nthen calls zeroArray() to mutate parsed dwarf.Type values based on their presence within\na particular struct.  However, that mutation might be invalid if the dwarf.Type is\nshared by other structs that don't meet the same criteria to invoke zeroArray().\n\nE.g., either disabling the type cache or removing any Go references to\nC.struct_result1_t will cause C.struct_result2_t to be generated with [0]byte again\ninstead of [0]_Ctype_char.\u003c/pre\u003e",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-08-06T07:42:15Z",
	"updated_at": "2014-12-08T10:46:52Z"
}
