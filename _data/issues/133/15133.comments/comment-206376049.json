{
	"id": 206376049,
	"body": "Thanks for the detained info!\r\n\r\nThis confirms that the main issue is the global timers mutex. siftdown/up consume ~3% of time. If we distribute timers, then siftdown/up should become faster as well (smaller per-P heap + better locality).\r\nUnfortunately this is not trivial to do. There is #6239 for this.\r\n\r\n\u003e FYI, this is not an OS scalability problem, since the CPU usage graph above until 15:33 corresponds to 'app process per CPU core' mode of the app with enabled connection deadlines. We had to switch to this mode due to the issue with timer scalability in Go runtime.\r\n\r\nSounds pretty bad. @rsc @aclements \r\n",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-06T13:34:26Z",
	"updated_at": "2016-04-06T13:34:26Z"
}
