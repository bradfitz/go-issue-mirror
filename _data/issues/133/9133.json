{
	"id": 51289135,
	"number": 9133,
	"state": "closed",
	"title": "cmd/ld: external linker can reorder noptrdata, data, bss, noptrbss",
	"body": "\u003cpre\u003eVarious pieces of code (SetFinalizer, tsan, maybe others) assume the order of Go data\nsections is noptrdata, data, bss, noptrbss. The pointer-containing stuff is contiguous. \n\nIf you build hello world with go build -ldflags -linkmode=external on Linux, you can see\nthat the sections are reordered: data before noptrdata. It must be that the external\nlinker decided to arrange the sections from the _go_.o file in a different order than\nthey appeared in the .o file. This breaks anything that makes the ordering assumption,\nin subtle ways.\n\nFor Ian:\nIs that legal in ELF linking?\nIs there a way to control the order?\n\nI am looking into whether it is easy to merge noptrdata+data and bss+noptrbss into\nsingle ELF sections in _go_.o in the external linking mode.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 9,
	"closed_at": "2015-04-10T03:53:01Z",
	"created_at": "2014-11-19T19:43:57Z",
	"updated_at": "2016-06-25T01:44:40Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
