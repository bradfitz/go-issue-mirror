{
	"id": 59473705,
	"number": 10052,
	"state": "closed",
	"title": "runtime: check syscall errors on *BSD",
	"body": "go version go1.4.2 freebsd/amd64\r\n\r\nOn FreeBSD, a program in a chroot may start with fd 2 closed.\r\nBad things happen when fd 2 is reused later and the program\r\nwrites to stderr.\r\n(I got bitten by this on FreeBSD/amd64, but the same thing will happen\r\non other BSD systems and other archs.)\r\n\r\nMy chroot did not have /dev/urandom.\r\nThe open(2) syscall returns ENOENT, which is 2.\r\nOn FreeBSD/amd64, the return value and errno from a system call are\r\noverloaded on EAX, and the carry flag is used to distinguish them.\r\nThe runtime.open (in src/runtime/sys_freebsd_amd64.s) do not check\r\nthe error condition, so ENOENT (2) is returned to the\r\nruntime.get_random_data (in syc/runtime/os_freebsd.c) function.\r\nThen, it closes fd 2 unconditionally.\r\n",
	"user": {
		"login": "kamadak",
		"id": 4836155,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"closed_at": "2015-03-03T17:48:12Z",
	"created_at": "2015-03-02T12:14:38Z",
	"updated_at": "2016-06-25T02:02:27Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
