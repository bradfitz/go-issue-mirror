{
	"id": 66076355,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eI realize that clearing O_NONBLOCK affects the original fd on many systems. File is\nmeant for use passing a network connection as a file when exec'ing a subprocess. Other\nuses - such as for fiddling with flags - are explicitly not supported. That is what this\npart of the comment is saying:\n\n// The returned os.File's file descriptor is different from the connection's.\n// Attempting to change properties of the original using this duplicate\n// may or may not have the desired effect.\n\nIn the context of passing an fd to a subprocess, we made the decision that it was\nimportant for the subprocess to start with its fd in blocking mode, so that\nnon-network-aware subprocesses can still interact with network fds using ordinary\n(blocking) read and write calls.\n\nThe code snippet you quoted makes clear that it understands the aliasing:\n\n\t// We want blocking mode for the new fd, hence the double negative.\n\t// This also puts the old fd into blocking mode, meaning that\n\t// I/O will block the thread instead of letting us use the epoll server.\n\t// Everything will still work, just with more threads.\n\nFor what it's worth, the File method uses dup primarily so that the returned *os.File\ncan be closed independently of the original net.Conn. Not doing so would create a\nsituation where it is possible to close a net.Conn accidentally by closing the file, or\nvice versa, and it would be the only call anywhere that returns an open *os.File that\nmust not be closed.\n\nYour report does not suggest any changes, so I am closing it as working as intended.\u003c/pre\u003e\n\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-03-15T03:23:56Z",
	"updated_at": "2014-12-08T10:27:00Z"
}
