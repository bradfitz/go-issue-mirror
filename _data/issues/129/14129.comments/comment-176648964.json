{
	"id": 176648964,
	"body": "@agl: I read your [post](https://www.imperialviolet.org/2012/03/16/rsae.html) regarding rsa exponent size and agree that there are likely no security benefits in using exponents larger than 2^31-1. However, I think it would be great if go could handle certificates with reasonably large exponents for compatibility reasons. There is crypto hardware (e.g. some athena smartcards) that generate RSA keys with larger randomly chosen exponents. That means that if they are used for issuer certificates in a PKI chain, go programs will not be able to make TLS connections to any certificates signed by these issuers.\r\n\r\nSuch certificates work with openssl (and therefore python, ruby, ...) and in current browsers (IE, Firefox, Chrome) which means that the PKI likely won't run into any problems with these certificates. And since they work \"everywhere else\", it might be easy for them to ignore the issue with go compatiblity.\r\n\r\nOpenSSL limits the public exponent at [64 Bit](https://github.com/openssl/openssl/blob/349807608f31b20af01a342d0072bb92e0b036e2/include/openssl/rsa.h#L175), maybe this would be a reasonable compromise between compatibility and performance for go too?",
	"user": {
		"login": "nurio",
		"id": 135987,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-29T08:53:57Z",
	"updated_at": "2016-01-29T08:53:57Z"
}
