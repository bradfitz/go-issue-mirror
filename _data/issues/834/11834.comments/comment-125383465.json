{
	"id": 125383465,
	"body": "@aclements: I assume you're talking about the recently committed ones. They appear to make the problem significantly worse for me (in particular, 510fd13 does). Here are the throughputs reported by my benchmark at a selection of commits. It's slightly noisy so I wouldn't worry about single-digit changes, but it looks like the change at 510fd13 is significant:\r\n\r\n*   4c94645: 179.30 MiB/s\r\n*   dff9108: 172.54 MiB/s\r\n*   64a32ff: 178.15 MiB/s\r\n*   f5e67e5: 175.60 MiB/s\r\n*   510fd13: 146.35 MiB/s\r\n*   c1f7a56: 142.06 MiB/s\r\n\r\n(The numbers above are for an old version of the program, detailed below and mostly matching the one in my previous posts, where I was still using `sync.Pool`. In a modern version where I've stopped using `sync.Pool` and cut out a bunch of allocations, I get a steady 255 MiB/s at both 4c94645 and c1f7a56.)\r\n\r\nHere is a sample of `GODEBUG=gctrace=1` output at c1f7a56 (without the logging I had previously added for falling through the freelist):\r\n\r\n```\r\ngc 475 @14.155s 5%: 1.7+1.1+0.021+0.19+0.41 ms clock, 5.1+1.1+0+1.3/0.030/0.66+1.2 ms cpu, 33-\u003e33-\u003e33 MB, 34 MB goal, 4 P\r\ngc 476 @14.160s 5%: 0.048+0.23+0.33+0.79+0.29 ms clock, 0.097+0.23+0+0/0.60/1.7+0.59 ms cpu, 33-\u003e34-\u003e33 MB, 66 MB goal, 4 P\r\ngc 477 @14.162s 5%: 2.3+0.47+0.53+0.18+0.27 ms clock, 9.3+0.47+0+0.95/0.001/1.1+1.0 ms cpu, 49-\u003e49-\u003e33 MB, 66 MB goal, 4 P\r\ngc 478 @14.184s 5%: 0.051+0.33+0.029+2.3+0.29 ms clock, 0.15+0.33+0+0/0.64/1.8+0.87 ms cpu, 58-\u003e74-\u003e49 MB, 66 MB goal, 4 P\r\ngc 479 @14.189s 5%: 2.0+0.28+0.004+0.48+0.28 ms clock, 6.1+0.28+0+0.10/0.36/1.4+0.84 ms cpu, 66-\u003e66-\u003e33 MB, 66 MB goal, 4 P\r\ngc 480 @14.220s 5%: 0.071+2.6+0.17+0.22+0.28 ms clock, 0.21+2.6+0+0.023/0.031/2.7+0.86 ms cpu, 65-\u003e81-\u003e49 MB, 66 MB goal, 4 P\r\ngc 481 @14.225s 5%: 1.7+0.27+0.42+0.22+0.28 ms clock, 7.0+0.27+0+0.13/0.087/1.7+1.1 ms cpu, 65-\u003e65-\u003e33 MB, 66 MB goal, 4 P\r\ngc 482 @14.233s 5%: 0.71+0.30+0.004+0.64+0.26 ms clock, 2.8+0.30+0+0.042/0.50/1.8+1.0 ms cpu, 65-\u003e65-\u003e33 MB, 66 MB goal, 4 P\r\ngc 483 @14.238s 5%: 2.0+0.38+0.24+0.67+0.26 ms clock, 8.3+0.38+0+0.76/0.62/1.2+1.0 ms cpu, 65-\u003e65-\u003e33 MB, 66 MB goal, 4 P\r\ngc 484 @14.245s 5%: 2.0+0.44+0.50+0.29+0.26 ms clock, 8.2+0.44+0+0.48/0.096/1.4+1.0 ms cpu, 65-\u003e65-\u003e33 MB, 66 MB goal, 4 P\r\ngc 485 @14.251s 5%: 1.9+0.45+0.70+0.33+0.39 ms clock, 7.9+0.45+0+0.60/0.038/1.3+1.5 ms cpu, 65-\u003e65-\u003e33 MB, 66 MB goal, 4 P\r\ngc 486 @14.261s 5%: 0.068+3.2+0.001+0.18+0.27 ms clock, 0.27+3.2+0+0.39/0.049/1.2+1.0 ms cpu, 66-\u003e82-\u003e49 MB, 66 MB goal, 4 P\r\ngc 487 @14.266s 5%: 0.044+0.24+0.020+0.60+0.32 ms clock, 0.17+0.24+0+0.009/0.48/1.5+1.2 ms cpu, 49-\u003e49-\u003e33 MB, 65 MB goal, 4 P\r\ngc 488 @14.278s 5%: 0.033+2.5+0.16+0.27+0.27 ms clock, 0.13+2.5+0+0.17/0.11/2.4+1.0 ms cpu, 53-\u003e70-\u003e49 MB, 66 MB goal, 4 P\r\ngc 489 @14.282s 5%: 1.9+0.86+0.001+0.22+0.25 ms clock, 7.9+0.86+0+0.90/0.028/1.1+1.0 ms cpu, 65-\u003e65-\u003e33 MB, 66 MB goal, 4 P\r\ngc 490 @14.288s 5%: 2.0+1.0+0.043+0.27+1.2 ms clock, 8.1+1.0+0+1.2/0.020/1.1+5.0 ms cpu, 65-\u003e65-\u003e33 MB, 66 MB goal, 4 P\r\ngc 491 @14.296s 5%: 2.1+0.34+0.009+0.51+0.26 ms clock, 8.4+0.34+0+0.095/0.39/1.5+1.0 ms cpu, 65-\u003e65-\u003e33 MB, 66 MB goal, 4 P\r\ngc 492 @14.302s 5%: 1.9+1.0+0.008+0.30+0.24 ms clock, 7.6+1.0+0+1.1/0.026/0.91+0.98 ms cpu, 65-\u003e65-\u003e33 MB, 66 MB goal, 4 P\r\ngc 493 @14.310s 5%: 2.0+2.1+0.001+0.21+0.26 ms clock, 8.0+2.1+0+1.9/0.026/0.019+1.0 ms cpu, 65-\u003e65-\u003e49 MB, 66 MB goal, 4 P\r\ngc 494 @14.315s 5%: 0.20+0.26+0.020+2.4+2.4 ms clock, 0.61+0.26+0+0/0.62/1.3+7.4 ms cpu, 49-\u003e65-\u003e49 MB, 98 MB goal, 4 P\r\ngc 495 @14.323s 5%: 0.038+2.5+1.7+0.27+0.46 ms clock, 0.15+2.5+0+1.7/0.079/0.086+1.8 ms cpu, 49-\u003e65-\u003e33 MB, 66 MB goal, 4 P\r\n```\r\n\r\nFor my records, I am running the following with GoogleCloudPlatform/gcsfuse@d4bbf69:\r\n\r\n    go version \u0026\u0026 go install -v \u0026\u0026 gcsfuse jacobsa-standard-asia ~/mp\r\n    go version \u0026\u0026 go build ./benchmarks/sequential_read \u0026\u0026 ./sequential_read --dir ~/mp --file_size 67108864 --read_size 1048576 --duration 10s",
	"user": {
		"login": "jacobsa",
		"id": 202895,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-28T00:10:11Z",
	"updated_at": "2015-07-28T00:10:11Z"
}
