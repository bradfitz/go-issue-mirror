{
	"id": 51285795,
	"number": 6834,
	"state": "closed",
	"title": "gdb: micro patch for gdb stepping",
	"body": "\u003cpre\u003eSeen on linux/amd64 with golang 1.2rc3, suspected still there with 1.2rc5\n\nOpening a new ticket, related to 6776 [\n\u003ca href=\"https://golang.org/issue/6776\"\u003ehttps://golang.org/issue/6776\u003c/a\u003e ], in case you wish to both consider\nlong-term issues in 6776, and take care of the immediate gdb-debugging issue now with a\ntrivial fix, using this ticket.\n\nProposed: change go1.2rc3/go/src/pkg/runtime/sys_x86.c:36 from\n    if(pc[0] == 0xeb) { // jmp 1-byte offset\nto\n    if(pc[0] == 0xeb || pc[0] == 0xcc) { // jmp 1-byte offset     \n\nAs in the comments on 6776, the check for a debugger interrupt 0xcc allows gdb debugging\nto continue stepping (or just continue) and not invoke the panic that follows in\nsys_x86.c because gdb has set a breakpoint 0xcc.\n\nIt's not necessary to fix the gdb debugging experience as soon as possible. But it's so\nvaluable that I thought it worth considering for inclusion.\n\nI would appreciate any thoughts on correctness. Note however that there are only two\npossible acceptable values at pc[0] now (0xeb or 0xe9) in runtime*rewindmorestack() at\nthe moment, so it is easy to construct a proof that the above patch cannot regress any\nexisting code.\u003c/pre\u003e",
	"user": {
		"login": "glycerine",
		"id": 445247,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 11,
	"closed_at": "2014-12-08T10:38:00Z",
	"created_at": "2013-11-25T20:36:30Z",
	"updated_at": "2016-06-25T01:22:58Z"
}
