{
	"id": 170281061,
	"body": "Please note that this issue is not for Go 1.6. It is marked as a crazy idea\nfor Go 1.7, one that we could try early and see (or not).\n\nPlease also note that the suggestion is to flip a coin to decide the order\nof equal values. Shuffling the input was an implementation detail, and Ian\ncame up with a simpler, cheaper implementation. But the implementation is\nnot important, just the effect. I've retitled the bug accordingly.\n\nThe only possible visible difference between sorting algorithms is how they\narrange equal values. There was discussion on the CL about whether to\naccept the Go 1.6 change at all, exactly because it would break things. I\ndecided that we couldn't reasonably turn down a 10-20% improvement for fear\nof breaking code depending on unspecified behavior. But as expected it does\nbreak things.\n\nRe \"now I have to update all my code and check my tests\", that's basically\ntrue for Go 1.6 with just the algorithmic change. The idea in this issue -\nflipping a coin for equal values, so that all future algorithmic changes\nare invisible - is meant to make it possible to respond \"and this is the\nlast time you'll need to do that when you update to a new Go version.\"\n\nBut again, it's a crazy idea, and it's not for Go 1.6.\n",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-09T21:07:13Z",
	"updated_at": "2016-01-09T21:07:13Z"
}
