{
	"id": 66086473,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eIIRC, the term \"reference type\" originally _was_ used in the specs and was later\nevicted. IMHO rightfully, because the term is a bit confusing. Eg. IINM the slice was\noriginally called a reference type even though for example a (non pointer to) slice\nreceiver methods exhibit some value semantics so it was even somehow controversial.\n\nOTOH, terms \"value\" and \"pointer\" are simple and clear. Even when there's a struct value\ncontaining a pointer - which is the case of a slice value. I understand that the specs\nshould try to not mandate implementation details to allow other implementations to\nexperiment with eg. slice being a single word pointer. However, that's actually\nincompatible with existing Go code so the don't-specify-the-details rule applies no more\nin this case.\n\nSumm: I suggest to avoid the 'reference type' term and specify semantics of slices, maps\nand channels using, in no particular order, 'value', 'pointer' and 'structured value\ncontaining a pointer' etc.\u003c/pre\u003e",
	"user": {
		"login": "cznic",
		"id": 729580,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-10-03T07:53:35Z",
	"updated_at": "2014-12-08T10:36:06Z"
}
