{
	"id": 106914450,
	"body": "Here is some more details about this issue:  If you run this code:\r\n\r\nhttps://play.golang.org/p/EucDh59yiB\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"encoding/xml\"\r\n\t\"fmt\"\r\n)\r\n\r\ntype HouseType struct {\r\n\tXMLName   xml.Name `xml:\"prefix11 House\"`\r\n\tMessageId string   `xml:\"message_id,attr\"`\r\n}\r\n\r\nfunc main() {\r\n\r\n\tvar tm HouseType\r\n\ttm.MessageId = \"test1234\"\r\n\r\n\tvar data1 []byte\r\n\tdata1, _ = xml.MarshalIndent(tm, \"\", \"    \")\r\n\r\n\tfmt.Println(\"Marshal\")\r\n\tfmt.Println(string(data1))\r\n\r\n\trawxml := `\u003cprefix11:House message_id=\"1466\" in_response_to=\"1\"\u003e\u003c/prefix11:House\u003e`\r\n\r\n\tvar tm2 HouseType\r\n\txml.Unmarshal([]byte(rawxml), \u0026tm2)\r\n\tfmt.Println(\"\\nUnmarshal\")\r\n\tfmt.Println(\"Message ID\", tm2.MessageId)\r\n}\r\n```\r\n\r\nIt will print out:\r\n\r\n```\r\nMarshal\r\n\u003cHouse xmlns=\"prefix11\" message_id=\"test1234\"\u003e\u003c/House\u003e\r\n\r\nUnmarshal\r\nMessage ID 1466\r\n```\r\n\r\nYou will see that the marshal command does not make use of the prefix correctly.  It should be prefix11:House.   If I change the struct to look like the following then the marshal command will work but the unmarshal will not. NOTE the \":\" in the XMLName field.  So I can either marshal or unmarshal, but not both with prefixed XML\r\n\r\nhttps://play.golang.org/p/44CMHXb3YM\r\n\r\n```\r\ntype HouseType struct {\r\n\tXMLName   xml.Name `xml:\"prefix11:House\"`\r\n\tMessageId string   `xml:\"message_id,attr\"`\r\n}\r\n```\r\n\r\nMaking this change, changes the output to:\r\n\r\n```\r\nMarshal\r\n\u003cprefix11:House message_id=\"test1234\"\u003e\u003c/prefix11:House\u003e\r\n\r\nUnmarshal\r\nMessage ID\r\n```",
	"user": {
		"login": "jordan2175",
		"id": 10040856,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-05-29T19:51:41Z",
	"updated_at": "2015-05-29T19:51:41Z"
}
