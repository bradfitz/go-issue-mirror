{
	"id": 118272394,
	"body": "Dealing with cookies from malformed web applications is always possible by manually processing the {Set,}Cookie header. This is painful as one has to reimplement the functionalities of net/http's cookie handling. But as it _is_ doable there is no fundamental need weaken the standard library.\r\n\r\nIMHO there is a _qualitative_ difference between malformed values and malformed names (e.g. almost no programming language allows names with spaces). The malformed values were allowed because such values are _very_ common and work on all major browsers (with appropriate quoting). E.g. not all values are allowed, bytes with the high bit set are considered invalid (even if Firefox handles UTF-8 encoded cookie values very well) because they are not that common in the wwild.\r\n\r\nI didn't think it through, but I could imagine that allowing spaces in names could produce parsing ambiguities. So please no.",
	"user": {
		"login": "vdobler",
		"id": 701382,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-03T08:22:51Z",
	"updated_at": "2015-07-03T08:22:51Z"
}
