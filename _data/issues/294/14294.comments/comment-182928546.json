{
	"id": 182928546,
	"body": "OK, it's getting stuck in ```- (void)drawRect```.\r\n\r\nApproximately: Cocoa wants the first frame to be drawn before displaying the window, which means the main thread is blocked until w.Publish() is called on the new window.\r\n\r\nSo a quick workaround is to start the event loop for the first window before opening the second:\r\n\r\n```\r\npackage main                                                                         \r\n                                                                                     \r\nimport (                                                                             \r\n        \"log\"                                                                        \r\n                                                                                     \r\n        \"golang.org/x/exp/shiny/driver\"                                              \r\n        \"golang.org/x/exp/shiny/screen\"                                              \r\n        \"golang.org/x/mobile/event/paint\"                                            \r\n)                                                                                    \r\n                                                                                     \r\nfunc main() {                                                                        \r\n        driver.Main(func(s screen.Screen) {                                          \r\n                openWindow(s, \"window 1\")                                            \r\n                openWindow(s, \"window 2\")                                            \r\n                select {}                                                            \r\n        })                                                                           \r\n}                                                                                    \r\n                                                                                     \r\nfunc openWindow(s screen.Screen, name string) {                                      \r\n        w, err := s.NewWindow(nil)                                                   \r\n        if err != nil {                                                              \r\n                log.Fatal(err)                                                       \r\n        }                                                                            \r\n        go func() {                                                                  \r\n                for {                                                                \r\n                        e := w.NextEvent()                                           \r\n                        log.Printf(\"%s: %#+v\", name, e)                              \r\n                        switch e.(type) {                                            \r\n                        case paint.Event:                                            \r\n                                w.Publish()                                          \r\n                        }                                                            \r\n                }                                                                    \r\n        }()                                                                          \r\n}                                                                                    \r\n```",
	"user": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-11T15:52:37Z",
	"updated_at": "2016-02-11T15:52:37Z"
}
