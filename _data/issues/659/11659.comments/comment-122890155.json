{
	"id": 122890155,
	"body": "@dpiddy Of note, I've had at least one person explicitly want to vendor \"main\" packages. What the kardianos/vendor tool does it to categorize packages by a \"status\":\r\n\r\nMissing (packages referenced but not found)\r\nStandard (in standard library)\r\nLocal (package is under \"project\" and not rewritten or in vendor dir)\r\nExternal (package is outside of \"project\" but referenced)\r\nInternal (package is rewritten under \"internal\" but still a vendor package)\r\nUnused (package is rewritten under \"internal\" or in vendor folder but unused)\r\nProgram (package is a \"main\" package but rewritten or in vendor folder)\r\nVendor (package is in vendor folder)\r\n\r\nThese are two overlapping issues I hope to address soon (location and status), but that's the general idea. Then my tool can work on package status rather then just paths. For instance, if vendor added an install command, you could run \"vendor install -status local\".\r\n\r\nI'm not convinced that adding a \"status\" concept to the go tool would ever be a desirable thing. \"go\" already supports \"std\". The syntax \"go install ./...!local\" could be interesting I think.\r\n",
	"user": {
		"login": "kardianos",
		"id": 755121,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-20T13:45:44Z",
	"updated_at": "2015-07-20T13:45:44Z"
}
