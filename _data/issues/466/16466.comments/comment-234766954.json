{
	"id": 234766954,
	"body": "\u003e With the help from iota (1\u003c\u003ciota), the bitset implementations\r\n\u003e in Go are quite straightforward to write and use.\r\n\r\nAre they?\r\n\r\nConsider flag parameter in https://golang.org/pkg/os/#OpenFile\r\n\r\nfunc OpenFile(name string, flag int, perm FileMode) (*File, error)\r\n\r\nWhat are flag's possible values? What will happen if I pass 999 as flag parameter?\r\n\r\nPascal sets eliminate both of these issues. (I am making things up here):\r\n```\r\ntype OpenFileFlag enum (O_RDONLY, O_WRONLY, O_RDWR, O_APPEND, O_CREATE, O_EXCL, O_SYNC, O_TRUNC)\r\n\r\ntype OpenFileFlags set of OpenFileFlag\r\n\r\nfunc OpenFile(name string, flag OpenFileFlags, perm FileMode) (*File, error)\r\n```\r\n\r\nAlex",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-24T09:24:02Z",
	"updated_at": "2016-07-24T09:24:02Z"
}
