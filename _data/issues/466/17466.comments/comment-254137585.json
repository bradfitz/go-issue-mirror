{
	"id": 254137585,
	"body": "@ianlancetaylor ,  I agree, life with generics will be much easier.\r\nBut this is not only \"another request for ... generics\".\r\n\r\nGo is a language tailored towards concurency. It has light threads, channels. It even has mutexes and condition variables.\r\n\r\nBut it lacks well known, useful and broadly adopted (though in many different forms) communication and synchronization primitive - future.\r\nGiven, its runtime implementation gently fits in already written code of channels, why not introduce it?\r\n\r\nWhy people need to implement it over and over, often with mistakes and in-efficiency?\r\nPeople, who understand what futures are for, write very high-loaded services/storages. They need fast and correct solution.",
	"user": {
		"login": "funny-falcon",
		"id": 249427,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-17T07:56:05Z",
	"updated_at": "2016-10-17T07:57:02Z"
}
