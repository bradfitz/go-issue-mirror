{
	"id": 66088237,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eThe problem is in the fmt package internal synchronized cache. When the goroutines are\nexecutes sequentially one-by-one, the cache's mutex looks exactly as if it synchronizes\naccesses to the buf.\n\nIf I increase number of goroutines to 1000 and runt with GOMAXPROCS=16, then the race is\ndetected -- some goroutines happen to run concurrently in the racy section of code.\n\nsync.Pool would help here, because it may expose less synchronization to the race\ndetector.\nAnother counter-measure can be to introduce more random preemption when running under\nrace detector.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-11-19T06:23:31Z",
	"updated_at": "2014-12-08T10:37:45Z"
}
