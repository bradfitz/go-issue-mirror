{
	"id": 83827505,
	"number": 11030,
	"state": "closed",
	"title": "compress/flate: reader is not RFC1951 compliant",
	"body": "Running the following produces an error:\r\n```go\r\npackage main\r\n\r\nimport \"bytes\"\r\nimport \"compress/flate\"\r\n\r\nfunc main() {\r\n\tb := bytes.NewBuffer([]byte{\r\n\t\t0x05, 0xc0, 0x07, 0x06, 0x00, 0x00, 0x00, 0x80, 0x40, 0x0f, 0xff, 0x37, 0xa0, 0xca,\r\n\t})\r\n\tr := flate.NewReader(b)\r\n\t_, err := r.Read(nil)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n}\r\n```\r\n\r\nThe byte slice above represents a single valid DEFLATE block compressed with a dynamic huffman tree, consisting of 257 literal/length codes and 1 distance codes. It should decompresses to nothing.\r\n\r\nIn the last byte (0xCA), the bit sequence (with LSB on left) is  01010011. The 11 at the end is the EOM marker in DEFLATE; the 0 to the left of that is the single code used for the distance tree.\r\n\r\nAccording to RFC1951 section 3.2.7, it says the following:\r\n\u003e One distance code of zero bits means that there are no distance codes used at all (the data is all literals).\r\n\r\nAs can be seen above, the tree section terminates immediately with an EOM marker (11) and never uses the distance codes. Thus, this should properly decompress.",
	"user": {
		"login": "dsnet",
		"id": 6354026,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 12,
	"closed_at": "2015-06-17T03:22:22Z",
	"created_at": "2015-06-02T04:12:11Z",
	"updated_at": "2016-06-25T02:10:02Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
