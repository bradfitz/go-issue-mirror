{
	"id": 66071015,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4 by **temotor**:\n\n\u003cpre\u003eHello. I'm sorry if this may be inappropriate or i misunderstood something.\n\nI came across a blog post [1] where author argues that \"modern CPUs have full-sized\nhardware multiplier\" and \"in x86 architecture, multiplication by constant can combine\nloading operand from memory and storing the result into register\". As shown in his\nbenchmark, these factors result in multiplication actually being faster than shifts.\n\nHere i am only suggesting to perform a thorough benchmark to confirm that shift-based\noptimization would actually improve performance.\n\nI have run several variations of benchmark in C [2] (linked version only has tests,\nwithout benchmark code) but did not get definitive results (that is, sometimes each one\nis faster over another). Also i did each instruction in loop which is very different\nfrom use case in this issue.\n\nThanks for your attention.\n\n[1]\n\u003ca href=\"http://translate.google.com/translate?hl=en\u0026sl=auto\u0026tl=en\u0026prev=_dd\u0026u=http%3A%2F%2Felizarov.livejournal.com%2F23957.html\"\u003ehttp://translate.google.com/translate?hl=en\u0026sl=auto\u0026tl=en\u0026prev=_dd\u0026u=http%3A%2F%2Felizarov.livejournal.com%2F23957.html\u003c/a\u003e\n[2] \u003ca href=\"https://gist.github.com/temoto/4722289\"\u003ehttps://gist.github.com/temoto/4722289\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-02-06T13:26:47Z",
	"updated_at": "2014-12-08T10:22:22Z"
}
