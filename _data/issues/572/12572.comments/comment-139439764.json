{
	"id": 139439764,
	"body": "Hmm the compatibility promise says \"It is intended that programs written to the Go 1 specification will continue to compile and run correctly, unchanged, over the lifetime of that specification.\" It makes no mention of deprecating functionality, which would still maintain backwards compatibility and thus the promise. PHP is a good example of similar behavior, granted they do remove deprecated functionality after awhile (read several years). I'd assume the same would happen when the Go 2 spec arrives, whenever that is :P\r\n\r\nIt seems the larger issue to be solved is how do you work with a frozen specification if you're not willing to deprecate things. I'm not sure how to answer that and until it gets sorted out I guess this change is a non-starter.\r\n\r\n@nigeltao I was aware of those additional codecs but chose not to address them since they aren't part of core. I suspect it wouldn't be hard to make them match the interface I defined though.",
	"user": {
		"login": "jimdoescode",
		"id": 546125,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-11T03:18:05Z",
	"updated_at": "2015-09-11T03:18:05Z"
}
