{
	"id": 67422603,
	"number": 10400,
	"state": "closed",
	"title": "os/exec: close read end of stdout/stderr pipe when copy loop stops",
	"body": "Writer set to `exec.Cmd.Stdout` (or `Stderr`) may fail. When that happens, underlying pipe is not closed, and command continues to run without noticing that something is wrong.\r\n\r\nHere is an example. This little program starts \"ls -lR /\", which (usually) runs for a long time and produces lot of output. When our `brokenWriter` returns error, `ls` command continues to run. Buffer associated with the pipe in the kernel eventually gets filled, which in turn blocks `ls`, which will then never finish.\r\n\r\nI think the solution is to close underlying `pr` pipe when goroutine created by [Cmd.writerDescriptor](https://github.com/golang/go/blob/master/src/os/exec/exec.go#L220) detects error, similar to what goroutine in [`stdin` method](https://github.com/golang/go/blob/master/src/os/exec/exec.go#L178) does\r\n\r\n```go\r\npackage main\r\n\r\nimport \"os\"\r\nimport \"os/exec\"\r\nimport \"io\"\r\nimport \"log\"\r\nimport \"fmt\"\r\n\r\ntype brokenWriter struct {\r\n\tw io.Writer\r\n\tc int\r\n}\r\n\r\nfunc (bw *brokenWriter) Write(data []byte) (int, error) {\r\n\tif bw.c \u003e 0 {\r\n\t\tbw.c = bw.c - 1\r\n\t\treturn bw.w.Write(data)\r\n\t}\r\n\tlog.Println(\"returning error from broken writer\")\r\n\treturn 0, fmt.Errorf(\"broken writer\")\r\n}\r\n\r\nfunc main() {\r\n\tcmd := exec.Command(\"ls\", \"-lR\", \"/\")\r\n\r\n\tcmd.Stdout = \u0026brokenWriter{os.Stdout, 1}\r\n\t\r\n\terr := cmd.Run()\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n}\r\n```",
	"user": {
		"login": "pstibrany",
		"id": 895919,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2015-07-22T21:39:03Z",
	"created_at": "2015-04-09T18:26:38Z",
	"updated_at": "2016-08-05T16:09:25Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
