{
	"id": 112981551,
	"number": 13034,
	"state": "closed",
	"title": "runtime: signal_amd64x.go:76 SIGINT on darwin/amd64 causes segfault under c-shared library",
	"body": "A refinement of the report in https://github.com/golang/go/issues/13028 to focus on the OSX-only segfault that happens when I send SIGINT to program that has a c-shared library loaded.\r\n\r\nDetails:\r\njaten@Jasons-MacBook-Pro:~$ go version  # at tip. Also happens in go1.5.1.\r\ngo version devel +79a3b56 Thu Oct 22 21:19:43 2015 +0000 darwin/amd64\r\n\r\nOn OSX Yosemite, 10.10.5, darwin amd64.\r\n\r\nI built a c-shared library (source code: https://github.com/glycerine/rmq), loaded it under R (a large C program), then called from C into the c-shared go library. Inside the library we start a web-server and the do ListenAndServe(). I have established signal handlers in the go code for SIGINT. However pressing ctrl-c and sending SIGINT to the process results in a segfault on OSX, but not on linux.\r\n\r\nUnder gdb on osx, I observe that the segfault is isolated to go1.6-dev/src/runtime/signal_amd64x.go:76, the value of c is out of bounds in the line `if c.sigcode() != _SI_USER \u0026\u0026 flags\u0026_SigPanic != 0 {`. \r\n~~~\r\ncontext of the segfault, at signal_amd64x.go:76 \r\n...\r\n// May run during STW, so write barriers are not allowed.                                                \r\n//go:nowritebarrier                                                                                      \r\nfunc sighandler(sig uint32, info *siginfo, ctxt unsafe.Pointer, gp *g) {\r\n    _g_ := getg()\r\n    c := \u0026sigctxt{info, ctxt}\r\n\r\n    if sig == _SIGPROF {\r\n        sigprof(uintptr(c.rip()), uintptr(c.rsp()), 0, gp, _g_.m)\r\n        return\r\n    }\r\n\r\n    if GOOS == \"darwin\" {\r\n        // x86-64 has 48-bit virtual addresses. The top 16 bits must echo bit 47.                        \r\n        // The hardware delivers a different kind of fault for a malformed address                       \r\n        // than it does for an attempt to access a valid but unmapped address.   \r\n        // OS X 10.9.2 mishandles the malformed address case, making it look like                        \r\n        // a user-generated signal (like someone ran kill -SEGV ourpid).                                 \r\n        // We pass user-generated signals to os/signal, or else ignore them.                             \r\n        // Doing that here - and returning to the faulting code - results in an                          \r\n        // infinite loop. It appears the best we can do is rewrite what the kernel                       \r\n        // delivers into something more like the truth. The address used below                           \r\n        // has very little chance of being the one that caused the fault, but it is                      \r\n        // malformed, it is clearly not a real pointer, and if it does get printed                       \r\n        // in real life, people will probably search for it and find this code.                          \r\n        // There are no Google hits for b01dfacedebac1e or 0xb01dfacedebac1e                             \r\n        // as I type this comment.                                                                       \r\n        if sig == _SIGSEGV \u0026\u0026 c.sigcode() == _SI_USER {\r\n            c.set_sigcode(_SI_USER + 1)\r\n            c.set_sigaddr(0xb01dfacedebac1e)\r\n        }\r\n    }\r\n\r\n    flags := int32(_SigThrow)\r\n    if sig \u003c uint32(len(sigtable)) {\r\n        flags = sigtable[sig].flags\r\n    }\r\n=\u003e  if c.sigcode() != _SI_USER \u0026\u0026 flags\u0026_SigPanic != 0 {   \u003c\u003c\u003c\u003c\u003c segfaulting here\r\n        // Make it look like a call to the signal func.                                                  \r\n        // Have to pass arguments out of band since                                                      \r\n        // augmenting the stack frame would break                                                        \r\n        // the unwinding code.                                                                           \r\n        gp.sig = sig\r\n        gp.sigcode0 = uintptr(c.sigcode())\r\n ...\r\n~~~\r\n\r\n~~~\r\n(gdb) handle SIGINT pass\r\nSIGINT is used by the debugger.\r\nAre you sure you want to change it? (y or n) y\r\nSignal        Stop  Print   Pass to program Description\r\nSIGINT        Yes   Yes Yes     Interrupt\r\n(gdb) c\r\nContinuing.\r\n\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x00000001053b89a9 in runtime.sighandler (sig=537083904, info=0x14003b, ctxt=0x38000051901,\r\n    gp=0xffffffff0538a380) at /Users/jaten/pkg/go1.6-dev/src/runtime/signal_amd64x.go:76\r\n(gdb) p c\r\n$1 = (runtime.sigctxt *) 0x53be72f\r\n(gdb) p flags\r\n$2 = 4\r\n(gdb) p _SigPanic\r\nNo symbol \"_SigPanic\" in current context.\r\n(gdb) p _SI_USER\r\nNo symbol \"_SI_USER\" in current context.\r\n(gdb) p *c\r\nCannot access memory at address 0x53be72f\r\n(gdb) \r\n~~~\r\na backtrace from gdb:\r\n~~~\r\n(gdb) bt\r\n#0  0x00000001053b89a9 in runtime.sighandler (sig=537083904, info=0x14003b, ctxt=0x38000051901, \r\n    gp=0xffffffff0538a380) at /Users/jaten/pkg/go1.6-dev/src/runtime/signal_amd64x.go:76\r\n#1  \u003csignal handler called\u003e\r\n#2  0x00000001053d630c in runtime.mach_semaphore_wait ()\r\n    at /Users/jaten/pkg/go1.6-dev/src/runtime/sys_darwin_amd64.s:407\r\n#3  0x00000001053a2a15 in runtime.semasleep1 (ns=-1, ~r1=0)\r\n    at /Users/jaten/pkg/go1.6-dev/src/runtime/os1_darwin.go:385\r\n#4  0x00000001053c9f89 in runtime.semasleep.func1 ()\r\n    at /Users/jaten/pkg/go1.6-dev/src/runtime/os1_darwin.go:401\r\n#5  0x00000001053d2b4b in runtime.systemstack ()\r\n    at /Users/jaten/pkg/go1.6-dev/src/runtime/asm_amd64.s:278\r\n#6  0x00000001053a2a96 in runtime.semasleep (ns=-1, ~r1=0)\r\n    at /Users/jaten/pkg/go1.6-dev/src/runtime/os1_darwin.go:402\r\n#7  0x00000001053893b0 in runtime.notesleep (n=0xc820034110)\r\n    at /Users/jaten/pkg/go1.6-dev/src/runtime/lock_sema.go:169\r\n#8  0x00000001053ab37e in runtime.stoplockedm () at /Users/jaten/pkg/go1.6-dev/src/runtime/proc.go:1586\r\n#9  0x00000001053ac38e in runtime.schedule () at /Users/jaten/pkg/go1.6-dev/src/runtime/proc.go:1908\r\n#10 0x00000001053ac80b in runtime.park_m (gp=0xc820000600)\r\n    at /Users/jaten/pkg/go1.6-dev/src/runtime/proc.go:2016\r\n#11 0x00000001053d2a7b in runtime.mcall () at /Users/jaten/pkg/go1.6-dev/src/runtime/asm_amd64.s:204\r\n#12 0x00007fff5fbfd2b8 in ?? ()\r\n#13 0x00000001053d469a in runtime.cgocallback ()\r\n    at /Users/jaten/pkg/go1.6-dev/src/runtime/asm_amd64.s:712\r\n#14 0x0000000105373f28 in _cgoexp_7e71d05b448d_ListenAndServe (a=0x7fff5fbfd378, n=32)\r\n    at rmq/_obj/_cgo_gotypes.go:490\r\n#15 0x00000001054fa43d in crosscall2 () at /Users/jaten/pkg/go1.6-dev/src/runtime/cgo/asm_amd64.s:36\r\n#16 0x00007fff5fbfd378 in ?? ()\r\n#17 0x0000000000000020 in ?? ()\r\n#18 0x0000000103c9bff8 in ?? ()\r\n#19 0x00007fff5fbfd3b0 in ?? ()\r\n#20 0x0000000104d2ad80 in ?? ()\r\n#21 0x0000000104d2abc0 in ?? ()\r\n#22 0x0000000104d2b6d0 in ?? ()\r\n#23 0x0000000104d241c8 in ?? ()\r\n#24 0x0000000104d2b6d0 in ?? ()\r\n#25 0x0000000104d241c8 in ?? ()\r\n#26 0x00007fff5fbfd3b0 in ?? ()\r\n#27 0x000000010537087e in ListenAndServe (p0=0x2203, p1=0x8, p2=0x9)\r\n    at /var/folders/2x/hm9gp5ys3k9gmm5f_vzm_6wc0000gn/T/go-build514057958/rmq/_obj/_cgo_export.c:21\r\nBacktrace stopped: previous frame inner to this frame (corrupt stack?)\r\n(gdb) \r\n~~~\r\n\r\nThe signal handling Go code for SIGINT consisted of either one or two prior calls to signal.Notify().\r\n\r\nA full stack dump from pressing ctrl-c generates a seg-fault with this stack trace not under gdb:\r\n~~~\r\n\r\nR version 3.2.2 (2015-08-14) -- \"Fire Safety\"\r\nCopyright (C) 2015 The R Foundation for Statistical Computing\r\nPlatform: x86_64-apple-darwin14.5.0 (64-bit)\r\n\r\nR is free software and comes with ABSOLUTELY NO WARRANTY.\r\nYou are welcome to redistribute it under certain conditions.\r\nType 'license()' or 'licence()' for distribution details.\r\n\r\n  Natural language support but running in an English locale\r\n\r\nR is a collaborative project with many contributors.\r\nType 'contributors()' for more information and\r\n'citation()' on how to cite R or R packages in publications.\r\n\r\nType 'demo()' for some demos, 'help()' for on-line help, or\r\n'help.start()' for an HTML browser interface to help.\r\nType 'q()' to quit R.\r\n\r\n\u003e options(STERM='iESS', editor='emacsclient')\r\n\u003e require(rmq)\r\nLoading required package: rmq\r\n\u003e require(testthat)\r\nLoading required package: testthat\r\n\u003e handler = function(x) {\r\n+   print(paste(\"handler called back with argument x = \", paste(collapse=\" \",sep=\" \",x)))\r\n+   reply=list()\r\n+   reply$hi = \"there!\"\r\n+   reply$yum = c(1.1, 2.3)\r\n+   reply$input = x\r\n+   reply\r\n+ }\r\n\u003e options(error=recover)\r\n\u003e r = .Call(\"ListenAndServe\", \"127.0.0.1:9090\", handler, new.env(), package=\"rmq\")\r\nListenAndServe listening on address '127.0.0.1:9090'...\r\n  C-c C-cfatal error: unexpected signal during runtime execution\r\n[signal 0xb code=0x1 addr=0x140043 pc=0x10bb1d9a9]\r\n\r\nruntime stack:\r\nruntime.throw(0x10c206480, 0x2a)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/panic.go:527 +0x90\r\nruntime.sigpanic()\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/sigpanic_unix.go:12 +0x5a\r\nruntime.sighandler(0xc820032000, 0x14003b, 0xd800051001, 0xffffffff0bb24260)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/signal_amd64x.go:76 +0x139\r\n\r\ngoroutine 17 [select, locked to thread]:\r\nruntime.gopark(0x10c24d868, 0xc82005de00, 0x10c152430, 0x6, 0xc82017a218, 0x2)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/proc.go:202 +0x163 fp=0xc82005dad0 sp=0xc82005daa8\r\nruntime.selectgoImpl(0xc82005de00, 0x0, 0x18)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/select.go:392 +0xa64 fp=0xc82005dc78 sp=0xc82005dad0\r\nruntime.selectgo(0xc82005de00)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/select.go:212 +0x12 fp=0xc82005dc98 sp=0xc82005dc78\r\nmain.ListenAndServe(0x7ffb64cba578, 0x7ffb648dc548, 0x7ffb648e5120, 0x7ffb648e4840)\r\n\t/Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/rmq/rmq.go:178 +0x866 fp=0xc82005ded0 sp=0xc82005dc98\r\nruntime.call32(0x0, 0x7fff5687b3d8, 0x7fff5687b468, 0x20)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/asm_amd64.s:442 +0x3e fp=0xc82005def8 sp=0xc82005ded0\r\nruntime.cgocallbackg1()\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/cgocall.go:264 +0x10c fp=0xc82005df30 sp=0xc82005def8\r\nruntime.cgocallbackg()\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/cgocall.go:177 +0xd7 fp=0xc82005df90 sp=0xc82005df30\r\nruntime.cgocallback_gofunc(0x0, 0x0, 0x0)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/asm_amd64.s:799 +0x60 fp=0xc82005dfa0 sp=0xc82005df90\r\nruntime.goexit()\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/asm_amd64.s:1805 +0x1 fp=0xc82005dfa8 sp=0xc82005dfa0\r\n\r\ngoroutine 6 [syscall]:\r\nos/signal.signal_recv(0x0)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/sigqueue.go:112 +0x132\r\nos/signal.loop()\r\n\t/Users/jaten/pkg/go1.6-dev/src/os/signal/signal_unix.go:22 +0x18\r\ncreated by os/signal.init.1\r\n\t/Users/jaten/pkg/go1.6-dev/src/os/signal/signal_unix.go:28 +0x37\r\n\r\ngoroutine 18 [select, locked to thread]:\r\nruntime.gopark(0x10c24d868, 0xc82002ef28, 0x10c152430, 0x6, 0x10bb0c118, 0x2)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/proc.go:202 +0x163\r\nruntime.selectgoImpl(0xc82002ef28, 0x0, 0x18)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/select.go:392 +0xa64\r\nruntime.selectgo(0xc82002ef28)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/select.go:212 +0x12\r\nruntime.ensureSigM.func1()\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/signal1_unix.go:227 +0x324\r\nruntime.goexit()\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/asm_amd64.s:1805 +0x1\r\n\r\ngoroutine 19 [chan receive]:\r\nmain.init.1.func1(0xc820144180)\r\n\t/Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/rmq/rmq.go:43 +0x44\r\ncreated by main.init.1\r\n\t/Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/rmq/rmq.go:48 +0xd3\r\n\r\ngoroutine 34 [syscall, locked to thread]:\r\nruntime.goexit()\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/asm_amd64.s:1805 +0x1\r\n\r\ngoroutine 35 [IO wait]:\r\nnet.runtime_pollWait(0x10ce01118, 0x72, 0xc820014210)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/netpoll.go:157 +0x60\r\nnet.(*pollDesc).Wait(0xc820147a30, 0x72, 0x0, 0x0)\r\n\t/Users/jaten/pkg/go1.6-dev/src/net/fd_poll_runtime.go:73 +0x3a\r\nnet.(*pollDesc).WaitRead(0xc820147a30, 0x0, 0x0)\r\n\t/Users/jaten/pkg/go1.6-dev/src/net/fd_poll_runtime.go:78 +0x36\r\nnet.(*netFD).accept(0xc8201479d0, 0x0, 0x10cab1888, 0xc8200bb1e0)\r\n\t/Users/jaten/pkg/go1.6-dev/src/net/fd_unix.go:408 +0x27c\r\nnet.(*TCPListener).AcceptTCP(0xc82013a028, 0xc820192d78, 0x0, 0x0)\r\n\t/Users/jaten/pkg/go1.6-dev/src/net/tcpsock_posix.go:254 +0x4d\r\nnet.(*TCPListener).Accept(0xc82013a028, 0x0, 0x0, 0x0, 0x0)\r\n\t/Users/jaten/pkg/go1.6-dev/src/net/tcpsock_posix.go:264 +0x3d\r\nnet/http.(*Server).Serve(0xc820182000, 0x10cd7c070, 0xc82013a028, 0x0, 0x0)\r\n\t/Users/jaten/pkg/go1.6-dev/src/net/http/server.go:1907 +0x118\r\nvendor/github.com/glycerine/go-tigertonic.(*Server).Serve(0xc820182000, 0x10cd7c070, 0xc82013a028, 0x0, 0x0)\r\n\t/Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/vendor/github.com/glycerine/go-tigertonic/server.go:160 +0xe1\r\nvendor/github.com/glycerine/go-tigertonic.(*Server).ListenAndServe(0xc820182000, 0x0, 0x0)\r\n\t/Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/vendor/github.com/glycerine/go-tigertonic/server.go:144 +0x1e2\r\nmain.(*WebServer).Start.func1(0xc820170080)\r\n\t/Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/rmq/web.go:54 +0x25\r\ncreated by main.(*WebServer).Start\r\n\t/Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/rmq/web.go:60 +0x4e\r\n\r\nProcess R exited abnormally with code 2 at Fri Oct 23 01:03:07 2015\r\n\u000c\r\n\r\nR version 3.2.2 (2015-08-14) -- \"Fire Safety\"\r\nCopyright (C) 2015 The R Foundation for Statistical Computing\r\nPlatform: x86_64-apple-darwin14.5.0 (64-bit)\r\n\r\nR is free software and comes with ABSOLUTELY NO WARRANTY.\r\nYou are welcome to redistribute it under certain conditions.\r\nType 'license()' or 'licence()' for distribution details.\r\n\r\n  Natural language support but running in an English locale\r\n\r\nR is a collaborative project with many contributors.\r\nType 'contributors()' for more information and\r\n'citation()' on how to cite R or R packages in publications.\r\n\r\nType 'demo()' for some demos, 'help()' for on-line help, or\r\n'help.start()' for an HTML browser interface to help.\r\nType 'q()' to quit R.\r\n\r\n\u003e options(STERM='iESS', editor='emacsclient')\r\n\u003e require(rmq)\r\nLoading required package: rmq\r\n\u003e require(testthat)\r\nLoading required package: testthat\r\n\u003e handler = function(x) {\r\n+   print(paste(\"handler called back with argument x = \", paste(collapse=\" \",sep=\" \",x)))\r\n+   reply=list()\r\n+   reply$hi = \"there!\"\r\n+   reply$yum = c(1.1, 2.3)\r\n+   reply$input = x\r\n+   reply\r\n+ }\r\n\u003e options(error=recover)\r\n\u003e r = .Call(\"ListenAndServe\", \"127.0.0.1:9090\", handler, new.env(), package=\"rmq\")\r\nListenAndServe listening on address '127.0.0.1:9090'...\r\nrequire(rmq)\r\n  C-c C-cfatal error: unexpected signal during runtime execution\r\n[signal 0xb code=0x1 addr=0x140043 pc=0x1108849a9]\r\n\r\nruntime stack:\r\nruntime.throw(0x110f6d480, 0x2a)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/panic.go:527 +0x90\r\nruntime.sigpanic()\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/sigpanic_unix.go:12 +0x5a\r\nruntime.sighandler(0xc820032000, 0x14003b, 0x23000025101, 0xffffffff00000000)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/signal_amd64x.go:76 +0x139\r\n\r\ngoroutine 17 [select, locked to thread]:\r\nruntime.gopark(0x110fb4868, 0xc820061e00, 0x110eb9430, 0x6, 0xc82001e518, 0x2)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/proc.go:202 +0x163 fp=0xc820061ad0 sp=0xc820061aa8\r\nruntime.selectgoImpl(0xc820061e00, 0x0, 0x18)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/select.go:392 +0xa64 fp=0xc820061c78 sp=0xc820061ad0\r\nruntime.selectgo(0xc820061e00)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/select.go:212 +0x12 fp=0xc820061c98 sp=0xc820061c78\r\nmain.ListenAndServe(0x7f9f3ab02578, 0x7f9f39f44748, 0x7f9f39f4a920, 0x7f9f39f4a040)\r\n\t/Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/rmq/rmq.go:178 +0x866 fp=0xc820061ed0 sp=0xc820061c98\r\nruntime.call32(0x0, 0x7fff51b0f3d8, 0x7fff51b0f468, 0x20)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/asm_amd64.s:442 +0x3e fp=0xc820061ef8 sp=0xc820061ed0\r\nruntime.cgocallbackg1()\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/cgocall.go:264 +0x10c fp=0xc820061f30 sp=0xc820061ef8\r\nruntime.cgocallbackg()\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/cgocall.go:177 +0xd7 fp=0xc820061f90 sp=0xc820061f30\r\nruntime.cgocallback_gofunc(0x0, 0x0, 0x0)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/asm_amd64.s:799 +0x60 fp=0xc820061fa0 sp=0xc820061f90\r\nruntime.goexit()\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/asm_amd64.s:1805 +0x1 fp=0xc820061fa8 sp=0xc820061fa0\r\n\r\ngoroutine 6 [syscall]:\r\nos/signal.signal_recv(0x0)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/sigqueue.go:112 +0x132\r\nos/signal.loop()\r\n\t/Users/jaten/pkg/go1.6-dev/src/os/signal/signal_unix.go:22 +0x18\r\ncreated by os/signal.init.1\r\n\t/Users/jaten/pkg/go1.6-dev/src/os/signal/signal_unix.go:28 +0x37\r\n\r\ngoroutine 18 [select, locked to thread]:\r\nruntime.gopark(0x110fb4868, 0xc82002ef28, 0x110eb9430, 0x6, 0x110873118, 0x2)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/proc.go:202 +0x163\r\nruntime.selectgoImpl(0xc82002ef28, 0x0, 0x18)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/select.go:392 +0xa64\r\nruntime.selectgo(0xc82002ef28)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/select.go:212 +0x12\r\nruntime.ensureSigM.func1()\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/signal1_unix.go:227 +0x324\r\nruntime.goexit()\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/asm_amd64.s:1805 +0x1\r\n\r\ngoroutine 19 [chan receive]:\r\nmain.init.1.func1(0xc820140180)\r\n\t/Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/rmq/rmq.go:43 +0x44\r\ncreated by main.init.1\r\n\t/Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/rmq/rmq.go:48 +0xd3\r\n\r\ngoroutine 34 [syscall, locked to thread]:\r\nruntime.goexit()\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/asm_amd64.s:1805 +0x1\r\n\r\ngoroutine 8 [IO wait]:\r\nnet.runtime_pollWait(0x111819850, 0x72, 0xc820014210)\r\n\t/Users/jaten/pkg/go1.6-dev/src/runtime/netpoll.go:157 +0x60\r\nnet.(*pollDesc).Wait(0xc820064220, 0x72, 0x0, 0x0)\r\n\t/Users/jaten/pkg/go1.6-dev/src/net/fd_poll_runtime.go:73 +0x3a\r\nnet.(*pollDesc).WaitRead(0xc820064220, 0x0, 0x0)\r\n\t/Users/jaten/pkg/go1.6-dev/src/net/fd_poll_runtime.go:78 +0x36\r\nnet.(*netFD).accept(0xc8200641c0, 0x0, 0x111a60100, 0xc8200bb200)\r\n\t/Users/jaten/pkg/go1.6-dev/src/net/fd_unix.go:408 +0x27c\r\nnet.(*TCPListener).AcceptTCP(0xc820030098, 0xc820040d78, 0x0, 0x0)\r\n\t/Users/jaten/pkg/go1.6-dev/src/net/tcpsock_posix.go:254 +0x4d\r\nnet.(*TCPListener).Accept(0xc820030098, 0x0, 0x0, 0x0, 0x0)\r\n\t/Users/jaten/pkg/go1.6-dev/src/net/tcpsock_posix.go:264 +0x3d\r\nnet/http.(*Server).Serve(0xc82001a0c0, 0x1118199d0, 0xc820030098, 0x0, 0x0)\r\n\t/Users/jaten/pkg/go1.6-dev/src/net/http/server.go:1907 +0x118\r\nvendor/github.com/glycerine/go-tigertonic.(*Server).Serve(0xc82001a0c0, 0x1118199d0, 0xc820030098, 0x0, 0x0)\r\n\t/Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/vendor/github.com/glycerine/go-tigertonic/server.go:160 +0xe1\r\nvendor/github.com/glycerine/go-tigertonic.(*Server).ListenAndServe(0xc82001a0c0, 0x0, 0x0)\r\n\t/Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/vendor/github.com/glycerine/go-tigertonic/server.go:144 +0x1e2\r\nmain.(*WebServer).Start.func1(0xc820017800)\r\n\t/Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/rmq/web.go:54 +0x25\r\ncreated by main.(*WebServer).Start\r\n\t/Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/rmq/web.go:60 +0x4e\r\n\r\nProcess R exited abnormally with code 2 at Fri Oct 23 01:06:56 2015\r\n~~~\r\n\r\nanother, earlier, example of the same thing:\r\n~~~\r\n$ R\r\nR version 3.2.2 (2015-08-14) -- \"Fire Safety\"\r\nCopyright (C) 2015 The R Foundation for Statistical Computing\r\nPlatform: x86_64-apple-darwin14.5.0 (64-bit)\r\n\r\nR is free software and comes with ABSOLUTELY NO WARRANTY.\r\nYou are welcome to redistribute it under certain conditions.\r\nType 'license()' or 'licence()' for distribution details.\r\n\r\n  Natural language support but running in an English locale\r\n\r\nR is a collaborative project with many contributors.\r\nType 'contributors()' for more information and\r\n'citation()' on how to cite R or R packages in publications.\r\n\r\nType 'demo()' for some demos, 'help()' for on-line help, or\r\n'help.start()' for an HTML browser interface to help.\r\nType 'q()' to quit R.\r\n\r\n\u003e options(STERM='iESS', editor='emacsclient')\r\n\u003e require(rmq)\r\nLoading required package: rmq\r\n\u003e require(testthat)\r\nLoading required package: testthat\r\n\u003e handler = function(x) {\r\n+   print(paste(\"handler called back with argument x = \", paste(collapse=\" \",sep=\" \",x)))\r\n+   reply=list()\r\n+   reply$hi = \"there!\"\r\n+   reply$yum = c(1.1, 2.3)\r\n+   reply$input = x\r\n+   reply\r\n+ }\r\n\u003e options(error=recover)\r\n\u003e r = .Call(\"ListenAndServe\", \"127.0.0.1:9090\", handler, new.env(), package=\"rmq\")\r\nListenAndServe listening on address '127.0.0.1:9090'...\r\n  C-c C-cfatal error: unexpected signal during runtime execution\r\n[signal 0xb code=0x1 addr=0x8 pc=0x10dd976d9]\r\n\r\nruntime stack:\r\nruntime.throw(0x10e425c20, 0x2a)\r\n    /usr/local/go/src/runtime/panic.go:527 +0x90\r\nruntime.sigpanic()\r\n    /usr/local/go/src/runtime/sigpanic_unix.go:12 +0x5a\r\nruntime.sighandler(0xc820032000, 0x0, 0x0, 0x3)\r\n    /usr/local/go/src/runtime/signal_amd64x.go:76 +0x139\r\n\r\ngoroutine 17 [select, locked to thread]:\r\nruntime.gopark(0x10e468a70, 0xc820061e00, 0x10e37e638, 0x6, 0xc82001e718, 0x2)\r\n    /usr/local/go/src/runtime/proc.go:185 +0x163 fp=0xc820061ad0 sp=0xc820061aa8\r\nruntime.selectgoImpl(0xc820061e00, 0x0, 0x18)\r\n    /usr/local/go/src/runtime/select.go:392 +0xa64 fp=0xc820061c78 sp=0xc820061ad0\r\nruntime.selectgo(0xc820061e00)\r\n    /usr/local/go/src/runtime/select.go:212 +0x12 fp=0xc820061c98 sp=0xc820061c78\r\nmain.ListenAndServe(0x7ffd733c4178, 0x7ffd730ddd48, 0x7ffd730e3920, 0x7ffd730e3040)\r\n    /Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/rmq/rmq.go:161 +0x865 fp=0xc820061ed0 sp=0xc820061c98\r\nruntime.call32(0x0, 0x7fff545f43d8, 0x7fff545f4468, 0x20)\r\n    /usr/local/go/src/runtime/asm_amd64.s:437 +0x3e fp=0xc820061ef8 sp=0xc820061ed0\r\nruntime.cgocallbackg1()\r\n    /usr/local/go/src/runtime/cgocall.go:252 +0x10c fp=0xc820061f30 sp=0xc820061ef8\r\nruntime.cgocallbackg()\r\n    /usr/local/go/src/runtime/cgocall.go:177 +0xd7 fp=0xc820061f90 sp=0xc820061f30\r\nruntime.cgocallback_gofunc(0x0, 0x0, 0x0)\r\n    /usr/local/go/src/runtime/asm_amd64.s:801 +0x60 fp=0xc820061fa0 sp=0xc820061f90\r\nruntime.goexit()\r\n    /usr/local/go/src/runtime/asm_amd64.s:1696 +0x1 fp=0xc820061fa8 sp=0xc820061fa0\r\n\r\ngoroutine 8 [select, locked to thread]:\r\nruntime.gopark(0x10e468a70, 0xc82002f728, 0x10e37e638, 0x6, 0x18, 0x2)\r\n    /usr/local/go/src/runtime/proc.go:185 +0x163\r\nruntime.selectgoImpl(0xc82002f728, 0x0, 0x18)\r\n    /usr/local/go/src/runtime/select.go:392 +0xa64\r\nruntime.selectgo(0xc82002f728)\r\n    /usr/local/go/src/runtime/select.go:212 +0x12\r\nruntime.ensureSigM.func1()\r\n    /usr/local/go/src/runtime/signal1_unix.go:227 +0x323\r\nruntime.goexit()\r\n    /usr/local/go/src/runtime/asm_amd64.s:1696 +0x1\r\n\r\ngoroutine 6 [syscall]:\r\nos/signal.loop()\r\n    /usr/local/go/src/os/signal/signal_unix.go:22 +0x18\r\ncreated by os/signal.init.1\r\n    /usr/local/go/src/os/signal/signal_unix.go:28 +0x37\r\n\r\ngoroutine 9 [IO wait]:\r\nnet.runtime_pollWait(0x10edd6950, 0x72, 0xc820014210)\r\n    /usr/local/go/src/runtime/netpoll.go:157 +0x60\r\nnet.(*pollDesc).Wait(0xc82011c060, 0x72, 0x0, 0x0)\r\n    /usr/local/go/src/net/fd_poll_runtime.go:73 +0x3a\r\nnet.(*pollDesc).WaitRead(0xc82011c060, 0x0, 0x0)\r\n    /usr/local/go/src/net/fd_poll_runtime.go:78 +0x36\r\nnet.(*netFD).accept(0xc82011c000, 0x0, 0x10f061038, 0xc8201200e0)\r\n    /usr/local/go/src/net/fd_unix.go:408 +0x27c\r\nnet.(*TCPListener).AcceptTCP(0xc820122000, 0xc82003cd88, 0x0, 0x0)\r\n    /usr/local/go/src/net/tcpsock_posix.go:254 +0x4d\r\nnet.(*TCPListener).Accept(0xc820122000, 0x0, 0x0, 0x0, 0x0)\r\n    /usr/local/go/src/net/tcpsock_posix.go:264 +0x3d\r\nnet/http.(*Server).Serve(0xc82008f040, 0x10f061000, 0xc820122000, 0x0, 0x0)\r\n    /usr/local/go/src/net/http/server.go:1887 +0xb3\r\nvendor/github.com/glycerine/go-tigertonic.(*Server).Serve(0xc82008f040, 0x10f061000, 0xc820122000, 0x0, 0x0)\r\n    /Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/vendor/github.com/glycerine/go-tigertonic/server.go:160 +0xd8\r\nvendor/github.com/glycerine/go-tigertonic.(*Server).ListenAndServe(0xc82008f040, 0x0, 0x0)\r\n    /Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/vendor/github.com/glycerine/go-tigertonic/server.go:144 +0x1e2\r\nmain.(*WebServer).Start.func1(0xc820017d80)\r\n    /Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/rmq/web.go:54 +0x25\r\ncreated by main.(*WebServer).Start\r\n    /Users/jaten/pkg/R-3.2.2/src/library/Recommended/rmq/src/rmq/web.go:60 +0x4e\r\n\r\ngoroutine 18 [syscall, locked to thread]:\r\nruntime.goexit()\r\n    /usr/local/go/src/runtime/asm_amd64.s:1696 +0x1\r\n\r\nProcess R exited abnormally with code 2 at Thu Oct 22 13:47:58 2015\r\n$\r\n~~~",
	"user": {
		"login": "glycerine",
		"id": 445247,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "OS-Darwin"
		}
	],
	"comments": 3,
	"closed_at": "2016-01-05T00:26:11Z",
	"created_at": "2015-10-23T09:02:56Z",
	"updated_at": "2016-01-05T00:26:11Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
