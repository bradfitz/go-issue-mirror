{
	"id": 157873419,
	"number": 15916,
	"state": "closed",
	"title": "runtime: defer in shared library on 386 panics",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\n1.6\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\nlinux/386\r\n\r\n3. What did you do?\r\n\r\n```\r\n(master)mwhudson@aeglos:/opt/opensource/go/src$ cat $GOPATH/src/t1/t1.go\r\npackage t1\r\n\r\nfunc F() {\r\n\tdefer func() {}()\r\n}\r\n(master)mwhudson@aeglos:/opt/opensource/go/src$ cat /opt/opensource/go-test-cases/triv1.go\r\npackage main\r\n\r\nimport \"t1\"\r\n\r\nfunc main() {\r\n\tt1.F()\r\n}\r\n(master)mwhudson@aeglos:/opt/opensource/go/src$ go install -buildmode=shared std\r\n(master)mwhudson@aeglos:/opt/opensource/go/src$ go install -linkshared -buildmode=shared t1\r\n(master)mwhudson@aeglos:/opt/opensource/go/src$ go run -linkshared /opt/opensource/go-test-cases/triv1.go\r\n```\r\n\r\n4. What did you expect to see?\r\n\r\nno output\r\n\r\n5. What did you see instead?\r\n\r\n```\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x0]\r\n\r\ngoroutine 1 [running]:\r\npanic(0xf74d3c80, 0xd6512018)\r\n\t/opt/opensource/go/src/runtime/panic.go:500 +0x59a\r\nt1.F()\r\n\t/opt/opensource/gopath/src/t1/t1.go:5 +0x52\r\nmain.main()\r\n\t/opt/opensource/go-test-cases/triv1.go:6 +0x23\r\nexit status 2\r\n```\r\n\r\nI was sure there was a test for this, but there is only one for using defer in a dynamically linked executable, not a shared object. No idea what the issue is yet.",
	"user": {
		"login": "mwhudson",
		"id": 672022,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-06-03T02:51:21Z",
	"created_at": "2016-06-01T10:26:54Z",
	"updated_at": "2016-06-03T02:51:21Z"
}
