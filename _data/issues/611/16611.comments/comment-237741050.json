{
	"id": 237741050,
	"body": "You're program has an infinite loop, it's blocking the scheduler scheduling\nthe main goroutine so the program doesn't exit.\n\nOn Fri, 5 Aug 2016, 12:27 Aditya Relangi \u003cnotifications@github.com\u003e wrote:\n\n\u003e Please answer these questions before submitting your issue. Thanks!\n\u003e\n\u003e    1.\n\u003e\n\u003e    What version of Go are you using (go version)?\n\u003e    go version go1.6 darwin/amd64\n\u003e    2.\n\u003e\n\u003e    What operating system and processor architecture are you using (go env\n\u003e    )?\n\u003e\n\u003e GOARCH=\"amd64\"\n\u003e GOBIN=\"/usr/local/go/bin\"\n\u003e GOEXE=\"\"\n\u003e GOHOSTARCH=\"amd64\"\n\u003e GOHOSTOS=\"darwin\"\n\u003e GOOS=\"darwin\"\n\u003e GOPATH=\"/usr/local/golibs\"\n\u003e GORACE=\"\"\n\u003e GOROOT=\"/usr/local/go\"\n\u003e GOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"\n\u003e GO15VENDOREXPERIMENT=\"1\"\n\u003e CC=\"clang\"\n\u003e GOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fno-common\"\n\u003e CXX=\"clang++\"\n\u003e CGO_ENABLED=\"1\"\n\u003e\n\u003e\n\u003e    1. What did you do?\n\u003e\n\u003e package main\n\u003e import (\n\u003e     \"fmt\"\n\u003e     \"time\"\n\u003e )\n\u003e func main() {\n\u003e     ticker := time.NewTicker(time.Millisecond)\n\u003e     cond := false\n\u003e     go func() {\n\u003e         for {\n\u003e             time.Sleep(time.Microsecond)\n\u003e             //fmt.Print(\".\") // This can be any set of operations after sleep, just to show that the porgram is running\n\u003e         }\n\u003e     }()\n\u003e\n\u003e     go func() {\n\u003e         for {\n\u003e             if cond {\n\u003e                 select {\n\u003e                 case v := \u003c-ticker.C:\n\u003e                     fmt.Println(\"Ticker ticking \", v)\n\u003e                 }\n\u003e             }\n\u003e         }\n\u003e     }()\n\u003e\n\u003e     time.Sleep(time.Second)\n\u003e     fmt.Println(\"Exiting\")\n\u003e }\n\u003e\n\u003e link on play.golang.org \u003chttps://play.golang.org/p/gNBp6Oc9Eh\u003e\n\u003e\n\u003e    1.\n\u003e\n\u003e    What did you expect to see?\n\u003e\n\u003e\n\u003e    -\n\u003e\n\u003e    I expected the program to terminate after printing \"Exiting\", but it\n\u003e    doesn't.\n\u003e\n\u003e\n\u003e    1.\n\u003e\n\u003e    What did you see instead?\n\u003e\n\u003e\n\u003e    - The program just hangs, it doesn't terminate but consumes cpu. If\n\u003e    the comment is removed on the fmt.Print(\".\"), you will see output\n\u003e    being printed for sometime after which we do not see anything being printed\n\u003e    and the program just hangs.\n\u003e    - If the cond is changed to true instead of false, the programs runs\n\u003e    fine.\n\u003e\n\u003e â€”\n\u003e You are receiving this because you are subscribed to this thread.\n\u003e Reply to this email directly, view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/16611\u003e, or mute the thread\n\u003e \u003chttps://github.com/notifications/unsubscribe-auth/AAAcA267KA1xrx7klWDkuTLRaPJKMhuOks5qcp-YgaJpZM4JdTNC\u003e\n\u003e .\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-05T02:38:34Z",
	"updated_at": "2016-08-05T02:38:34Z"
}
