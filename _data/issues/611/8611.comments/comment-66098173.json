{
	"id": 66098173,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eLooking at that _cgo_.o file with llvm-dwarfdump-3.5, it looks like this field:\n\n        char y[3][0][1][2];\n\nis generating this DW_TAG_array_type entry:\n\n0x00000193:   DW_TAG_array_type [4] *\n                DW_AT_sibling [DW_FORM_ref4]    (cu + 0x01b5 =\u003e {0x000001b5})\n                DW_AT_type [DW_FORM_ref4]       (cu + 0x00c0 =\u003e {0x000000c0})\n\n0x0000019c:     DW_TAG_subrange_type [5]  \n                  DW_AT_type [DW_FORM_ref4]     (cu + 0x008b =\u003e {0x0000008b})\n                  DW_AT_upper_bound [DW_FORM_data1]     (0x02)\n\n0x000001a2:     DW_TAG_subrange_type [5]  \n                  DW_AT_type [DW_FORM_ref4]     (cu + 0x008b =\u003e {0x0000008b})\n                  DW_AT_upper_bound [DW_FORM_data1]     (0x00)\n\n0x000001a8:     DW_TAG_subrange_type [5]  \n                  DW_AT_type [DW_FORM_ref4]     (cu + 0x008b =\u003e {0x0000008b})\n                  DW_AT_upper_bound [DW_FORM_data1]     (0x00)\n\n0x000001ae:     DW_TAG_subrange_type [5]  \n                  DW_AT_type [DW_FORM_ref4]     (cu + 0x008b =\u003e {0x0000008b})\n                  DW_AT_upper_bound [DW_FORM_data1]     (0x01)\n\nWhereas GCC 4.8.2 and Clang 3.5 generate this:\n\n0x000000aa:   DW_TAG_array_type [4] *\n                DW_AT_type [DW_FORM_ref4]       (cu + 0x0082 =\u003e {0x00000082})\n                DW_AT_sibling [DW_FORM_ref4]    (cu + 0x00cb =\u003e {0x000000cb})\n\n0x000000b3:     DW_TAG_subrange_type [5]  \n                  DW_AT_type [DW_FORM_ref4]     (cu + 0x007b =\u003e {0x0000007b})\n                  DW_AT_upper_bound [DW_FORM_data1]     (0x02)\n\n0x000000b9:     DW_TAG_subrange_type [6]  \n                  DW_AT_type [DW_FORM_ref4]     (cu + 0x007b =\u003e {0x0000007b})\n\n0x000000be:     DW_TAG_subrange_type [5]  \n                  DW_AT_type [DW_FORM_ref4]     (cu + 0x007b =\u003e {0x0000007b})\n                  DW_AT_upper_bound [DW_FORM_data1]     (0x00)\n\n0x000000c4:     DW_TAG_subrange_type [5]  \n                  DW_AT_type [DW_FORM_ref4]     (cu + 0x007b =\u003e {0x0000007b})\n                  DW_AT_upper_bound [DW_FORM_data1]     (0x01)\n\nI.e., for the [0] sized entry, they omit the DW_AT_upper_bound entry.\n\nLooking quickly through LLVM commit history, it seems like this commit on Dec 2012 was\nprobably when they fixed this behavior:\n\u003ca href=\"http://llvm.org/viewvc/llvm-project?view=revision\u0026revision=169312\"\u003ehttp://llvm.org/viewvc/llvm-project?view=revision\u0026revision=169312\u003c/a\u003e\n\nIt looks like Clang 3.3 was the first release to include that fix.  So presumably this\ntest will be broken on any version of OS X that uses an older (i.e., buggy) version of\nClang, such as Lion.\u003c/pre\u003e",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-08-28T23:59:31Z",
	"updated_at": "2014-12-08T10:47:47Z"
}
