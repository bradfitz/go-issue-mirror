{
	"id": 51287773,
	"number": 8161,
	"state": "open",
	"title": "cmd/go: building cross compilers sets the default CC/CXX to whatever was built last",
	"body": "\u003cpre\u003eWhat does 'go version' print?\ngo version go1.3rc1 linux/amd64\n(built from tip on 2014-06-07 5:50pm CST)\n\nWhat steps reproduce the problem?\n\n1. cd $GOROOT/src\n2. CC=gcc ./make.bash\n3. GOOS=windows GOARCH=386 CC_FOR_TARGET=i686-w64-mingw32-gcc CGO_ENABLED=1 ./make.bash\n4. go env | grep CC=\n\nWhat happened?\nIt prints CC=\u0026quot;i686-w64-mingw32-gcc\u0026quot;, trying to compile a native (linux/amd64)\nexecutable that uses cgo fails with cc1: sorry, unimplemented: 64-bit mode not compiled\nin.\n\nWhat should have happened instead?\nIt should've print CC=\u0026quot;gcc\u0026quot; and GOOS=windows GOARCH=386 go env | grep CC=\nshould print CC=\u0026quot;i686-w64-mingw32-gcc\u0026quot;.\n\nPlease provide any additional information below.\nMinimal example : \u003ca href=\"http://play.golang.org/p/FYOPuqiZey\"\u003ehttp://play.golang.org/p/FYOPuqiZey\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "OneOfOne",
		"id": 1080443,
		"type": "User",
		"site_admin": false
	},
	"comments": 15,
	"created_at": "2014-06-06T22:56:39Z",
	"updated_at": "2016-03-16T21:14:27Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
