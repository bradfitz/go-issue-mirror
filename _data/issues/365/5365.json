{
	"id": 51283527,
	"number": 5365,
	"state": "closed",
	"title": "Short hand assignment should be intelligent to detect the assignments in both if and else blocks",
	"body": "by **madhusudancs**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\nHave the following code snippet\nif valid {\n  a, b := doSomething()\n} else {\n  a, b := doSomethingElse()\n}\nfmt.Printf(\u0026quot;Return values - a: %d, b: %d\\n\u0026quot;, a, b)\n\nWhat is the expected output?\nExpect go compiler to be intelligent enough to determine that a short hand assignment is\nused in all the possible paths of the control flow and hence know what types\n\u0026quot;a\u0026quot; and \u0026quot;b\u0026quot; are.\n\n\nWhat do you see instead?\nCompiler complain instead with:\n# command-line-arguments\n./client.go:208: undefined: a\n./client.go:209: undefined: b\n\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\nI know I am not using gccgo, but how do I know if I am using 5g, 6g or 8g? I use the go\ncommand line \u0026quot;go build\u0026quot; and this comes from the go1.1 beta binary download\nfrom this website.\n\nWhich operating system are you using?\nLinux AMD64 (Ubuntu 12.10)\n\nWhich version are you using?  (run 'go version')\ngo version devel +267bb9854177 Wed Apr 03 18:23:43 2013 -0700 linux/amd64\n\nPlease provide any additional information below.\nIs this compile time analysis too hard to implement? Fairly cheap, I am assuming?\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:29:00Z",
	"created_at": "2013-04-29T00:39:33Z",
	"updated_at": "2016-06-24T22:38:57Z"
}
