{
	"id": 68482715,
	"body": "Modifying the language for optional security feature won't work well, because that ultimately\r\ndepends on the author of a package, who can't control where the package is going to be\r\nused.\r\n\r\nThe author of a package might think that a certain map in this package is not going to hold\r\nvalues controllable by external attackers, but that really depends on where the package is\r\nused. What if the package is later used to receive inputs controlled by external attackers?\r\n\r\nEven if we had such a feature of optionally using hardened hash functions for certain maps,\r\nthe only safe option for a package author is to always enable that for every map, because\r\nthe author can't be certain all the use cases of the package.\r\n\r\nThat said, I don't think there is any evidence that the current hash functions are insecure\r\nagainst algorithmic DDoS. Unless there is concrete proofs, I don't think we need to do any\r\nthing for this.\r\n(By concrete proof, I really mean that you need to at least point out how the attacker can\r\nreasonably get around of the per-map seed. Don't just cite some papers discussing some\r\nother hashes, read the source, and see if the attack in those papers are applicable to ours.)",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-01-01T08:53:37Z",
	"updated_at": "2015-01-01T08:54:23Z"
}
