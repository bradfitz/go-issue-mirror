{
	"id": 76242966,
	"body": "That would make it difficult to hunt cacheline pingpong issues in shared structs. Those can also happen in imported packages. Also handover to C, kernel API, wire-formats, etc. might become hairy and even lead to surprising bugs.\r\n\r\nI would switch the default or make it even a new keyword, since it technically is no struct as we know it from C family languages anymore, but something else. That will be very surprising.\r\n\r\nA struct has the following three important properties for me:\r\n * I control memory layout down to the bit level when composing them using {u,}int{,8,16,32,64} float32, float64 and fixed sized arrays of those\r\n * padding is zeroed on allocation\r\n * alignment is documented in spec\r\n\r\nBut a tool like http://linux.die.net/man/1/pahole might prove to be very useful for Go.",
	"user": {
		"login": "nightlyone",
		"id": 1767118,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-26T18:54:42Z",
	"updated_at": "2015-02-26T18:54:42Z"
}
