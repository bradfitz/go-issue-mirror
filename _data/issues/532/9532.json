{
	"id": 53715671,
	"number": 9532,
	"state": "closed",
	"title": "cmd/go: remote import path meta tag format should accept multiple paths",
	"body": "The meta tag has this format: (from http://golang.org/cmd/go/#hdr-Remote_import_paths)\r\n```\r\n\u003cmeta name=\"go-import\" content=\"import-prefix vcs repo-root\"\u003e\r\n```\r\n\r\nUnfortunately, this doesn't permit multiple equivalent roots, where the repo is the same but has multiple access methods. For instance, https://github.com/robpike/filter is canonically `robpike.io/filter`, and is accessible via at least *two* methods:\r\n   * `https://github.com/robpike/filter.git` (no auth required to fetch)\r\n   * `git@github.com:robpike/filter.git` (will use your SSH keys for push auth)\r\n\r\nHowever, his meta tag has to look like\r\n```\r\n\u003cmeta name=\"go-import\" content=\"robpike.io/filter git https://github.com/robpike/filter.git\"\u003e\r\n```\r\nso that Joe Random can run `go get robpike.io/filter`.\r\n\r\nIt would be ideal if, say, @robpike could interact wholly with the repo via `git@github.com:robpike/filter.git` (since his SSH keys will be used when pushing), but he can still use `go get -u robpike.io/filter` too.\r\n\r\n\r\nOne obvious fix is to expand the meta tag format to have multiple repo roots. The first is semantically the default, but all are considered equivalent and permitted by the `go` tool's vanity URL enforcement mechanism. Then @robpike can have a meta tag like\r\n```\r\n\u003cmeta name=\"go-import\" content=\"robpike.io/filter git https://github.com/robpike/filter.git git@github.com:robpike/filter.git\"\u003e\r\n```\r\n",
	"user": {
		"login": "dsymonds",
		"id": 31506,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 17,
	"closed_at": "2015-04-10T03:40:44Z",
	"created_at": "2015-01-08T05:17:39Z",
	"updated_at": "2016-06-25T01:58:00Z"
}
