{
	"id": 165581951,
	"body": "\u003e We already have C.GoBytes that converts a unsafe.Pointer\r\n\u003e and a length to []byte, why do we need another?\r\n\r\n1) My understanding was that C.GoBytes makes a copy.  Is that not the case?\r\n(If correct, that implies less efficiency - particularly for large arrays - and no mutative APIs such as io.Reader.Read.)\r\n \r\n2) It doesn't work for element types other than byte.  (For example, you could envision a C API that wants to use an array of wchar_t or uint32_t.)\r\n\r\n\u003e After converting the pointer to a byte slice, it's very easy to convert to []T for arbitrary T.\r\n\r\nNot without copying the underlying array.  Or am I missing something?",
	"user": {
		"login": "bcmills",
		"id": 5200974,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-17T21:05:33Z",
	"updated_at": "2015-12-17T21:05:33Z"
}
