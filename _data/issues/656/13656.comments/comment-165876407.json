{
	"id": 165876407,
	"body": "You'd do something like this:\r\n\r\n    var s []T\r\n    unsafe.MakeSlice(unsafe.Pointer(\u0026s), ptr, len, cap)\r\n    ...use s...\r\n\r\nDoing it this way gets around the polymorphic return type you would need if MakeSlice returned a slice, or the allocation you would need if MakeSlice returned an unsafe.Pointer to a slice.\r\n\r\nI agree that this is functionality that unsafe hasn't had historically.  But I think it would be the right place for this operation.  On the other hand, reflect.NewAt has a similar feel, and maybe both it and MakeSlice should be together.",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-18T19:25:16Z",
	"updated_at": "2015-12-18T19:25:16Z"
}
