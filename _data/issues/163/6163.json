{
	"id": 51284767,
	"number": 6163,
	"state": "closed",
	"title": "net/http: possible issues with temporary errors from Accept",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n\nnet/http's accept loop does this check on errors from Accept:\n\n\u003ca href=\"http://golang.org/src/pkg/net/http/server.go#L1544\"\u003ehttp://golang.org/src/pkg/net/http/server.go#L1544\u003c/a\u003e\n\nif ne, ok := e.(net.Error); ok \u0026amp;\u0026amp; ne.Temporary() {\n\nwhich ends up calling into Temporary here:\n\n\u003ca href=\"http://golang.org/src/pkg/syscall/syscall_unix.go#L108\"\u003ehttp://golang.org/src/pkg/syscall/syscall_unix.go#L108\u003c/a\u003e\n\nreturn e == EINTR || e == EMFILE || e.Timeout()\n\nTimeout does:\n\nreturn e == EAGAIN || e == EWOULDBLOCK || e == ETIMEDOUT\n\nWith other Go services, under certain rapid connection setup/teardown conditions, I've\nseen Accept return ECONNRESET (connection reset by peer) on kernel 3.3.8. According to\nthe man page, it could also return ECONNABORTED.\n\nI think at least ECONNRESET and maybe also ECONNABORTED should be treated as Temporary\nby net/http's accept loop.\n\nIf Temporary() can't be changed, it would be nice to add some code somewhere (maybe in\nnet?) to help other people to write accept loops correctly.\n\nOne other minor note: if a process runs out of file descriptors for another reason than\naccepting too many connections, the programmer might want EMFILE to be a fatal error,\nespecially if you have a Listener that limits the number of open HTTP connections. I've\nseen this in the real world with a net/http server on top of a misbehaving LevelDB using\nthe levigo wrapper with the C implementation and large databases. EMFILE might also fall\nout in other places in the program where it can be handled as a fatal error, but it\nmight not. I guess fixing this might be too complicated for Go 1.\u003c/pre\u003e",
	"user": {
		"login": "alberts",
		"id": 409689,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 13,
	"closed_at": "2014-12-08T10:33:54Z",
	"created_at": "2013-08-16T06:01:03Z",
	"updated_at": "2016-06-24T22:55:25Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
