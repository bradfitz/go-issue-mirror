{
	"id": 60761657,
	"number": 10143,
	"state": "open",
	"title": "x/tools/cmd/eg: allow multiple refactorings in a single template",
	"body": "While working on `Node` refactoring leading up to CL 7360, I found myself applying 8 different templates (one per relevant field) sequentially. It would be nicer to use--and I think faster to execute--to apply them all in a single pass.\r\n\r\nThe template could look like a sequence of alternating pairs of `before` and `after`:\r\n\r\n```go\r\npackage P\r\n\r\nfunc before(s string) error { return fmt.Errorf(\"%s\", s) }\r\nfunc after(s string)  error { return errors.New(s) }\r\n\r\nfunc before(msg string) { log.Fatalf(\"%s\", msg) }\r\nfunc after(msg string)  { log.Fatal(msg) }\r\n```\r\n\r\nThe semantics would be that the output would be equivalent to applying each of the pairs sequentially as a template.\r\n\r\nThoughts? I'm happy to help with implementation.\r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "alandonovan",
		"id": 8433140,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2015-03-12T02:26:59Z",
	"updated_at": "2015-04-14T19:37:36Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
