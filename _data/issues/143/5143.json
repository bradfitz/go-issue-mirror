{
	"id": 51283190,
	"number": 5143,
	"state": "closed",
	"title": "go/types: Const objects from other packages have nil spec (and panic on .GetPos())",
	"body": "by **qslack**:\n\n\u003cpre\u003eUsing go/types' Check on the following program:\n\npackage p\nimport \u0026quot;unicode/utf8\u0026quot;\nvar foo = utf8.UTFMax\n\nwith a types.Context.Ident func results in the func being called for the UTFMax ident.\nHowever, the types.Const object associated with the ident has a nil spec member and\ntherefore panics when .GetPos() is called on it.\n\nThe following test (place in go.exp/go/types/objects_test.go) reproduces this bug:\n\npackage types\n\nimport (\n\t\u0026quot;go/ast\u0026quot;\n\t\u0026quot;go/parser\u0026quot;\n\t\u0026quot;go/token\u0026quot;\n\t\u0026quot;testing\u0026quot;\n)\n\nfunc TestConstGetPos(t *testing.T) {\n\tfset := token.NewFileSet()\n\tfile, _ := parser.ParseFile(fset, \u0026quot;test.go\u0026quot;, `package p; import \u0026quot;unicode/utf8\u0026quot;; var foo = utf8.UTFMax`, 0)\n\tobjs := make([]Object, 0)\n\tc := Context{\n\t\tIdent: func(id *ast.Ident, obj Object) {\n\t\t\tobjs = append(objs, obj)\n\t\t},\n\t}\n\tc.Check(fset, []*ast.File{file})\n\tfor _, obj := range objs {\n\t\tobj.GetPos() // should not panic\n\t}\n}\n \nThe panic output is:\n\n$ go test go.exp/go/types\npanic: runtime error: invalid memory address or nil pointer dereference [recovered]\n\tpanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x8 pc=0x454fc0]\n\ngoroutine 7 [running]:\ntesting.func��004()\n\t/home/sqs/src/go/src/pkg/testing/testing.go:341 +0xbc\ngo.exp/go/types.(*Const).GetPos(0xc2003efa50, 0x13)\n\t/home/sqs/src/go.exp/go/types/objects.go:101 +0x20\ngo.exp/go/types.TestConstGetPos(0xc200431900)\n\t/home/sqs/src/go.exp/go/types/objects_test.go:21 +0x247\ntesting.tRunner(0xc200431900, 0x71fee8)\n\t/home/sqs/src/go/src/pkg/testing/testing.go:346 +0x8a\ncreated by testing.RunTests\n\t/home/sqs/src/go/src/pkg/testing/testing.go:426 +0x86b\n\ngoroutine 1 [chan receive]:\ntesting.RunTests(0x644028, 0x71fea0, 0x8, 0x8, 0x5f5001, ...)\n\t/home/sqs/src/go/src/pkg/testing/testing.go:427 +0x88e\ntesting.Main(0x644028, 0x71fea0, 0x8, 0x8, 0x7250c0, ...)\n\t/home/sqs/src/go/src/pkg/testing/testing.go:358 +0x8a\nmain.main()\n\tgo.exp/go/types/_test/_testmain.go:57 +0x9a\nFAIL\tgo.exp/go/types\t0.244s\n\n\n\nWhat is the expected output? Calling obj.GetPos() should return the Pos of the UTFMax\ndeclaration.\n\n\nWhat do you see instead? Calling obj.GetPos() causes a panic.\n\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)? 6g\n\n\nWhich operating system are you using? Linux\n\n\nWhich version are you using? go version devel +0ab15b04070e Wed Mar 13 07:45:31 2013\n-0700 linux/amd64\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:27:31Z",
	"created_at": "2013-03-28T05:19:01Z",
	"updated_at": "2016-06-24T22:36:33Z"
}
