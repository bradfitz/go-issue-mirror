{
	"id": 66100134,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003eFirst, I want to say huge thank you for fixing this issue. It makes me feel happy and\nrelieved!\n\nRob Pike, you said this earlier:\n\n\u003e That said, I am unconvinced that this is an actual problem that needs to be\naddressed.\n\n\u003e To be fair, if you're going to have a stupid long line\n\u003e it's not a bad bet you'll want to run it through go\n\u003e generate, because it's some embeddable asset that\n\u003e has been machine generated. (One could ask why\n\u003e that generation process didn't add a newline or two,\n\u003e but we should cope anyway.)\n\nAnd I wanted to share why I feel that handling these stupid long lines is so valuable.\n\nOne of my favorite things about Go is its simplicity, and how few \"exceptions to the\nrules\" it has.\nThis is great because it lowers my cognitive load and allows me to spend more resources\nfor the\ntask at hand. I really like that I can have a comma after the last line (unlike in JSON)\nin slice declarations,\nbecause it means the last line is not any different from the first or fifth. Why should\nit be? It lets\nme cut and paste lines and not have to fix that last comma.\n\nSimilarly, before this problem, I could not worry about how long each line is. Most\nlines are\nprobably less than 100 characters, but if for whatever reason I end up writing valid Go\ncode\nthat spans thousands of characters on one line, I don't have to have the following train\nof\nthought: \"Oh, wait, is this line too long? What was the limit? 32 or 64 KB? How many\ncharacters\nis this line I pasted? But wait, I'm not using go generate, so it's okay. On the other\nhand, what if I\nwant to use it tomorrow, I should (spend time and) add some newlines here... just\nbecause there's\nthat issue.\"\n\nHere's a silly exaggeration of the situation: imagine in go1.5 a new feature is added\nand it makes it\nso that one cannot have a function name a multiple of 79, but only when there are at\nleast three _test.go\nfiles. It's a situation that is extremely unlikely, but the cognitive load of having to\nthink and worry about\nhitting some artificial limit would be there - I'd much rather not have it.\n\nI understand long lines are probably hard to deal with for editors, they're not\noptimized, but I'm okay\nwith that - if I see my editor is sluggish, I will choose to make a line shorter if I\nwant to. But I don't want\nto worry about an artificial limitation.\n\nSo with that said, you can see why I think such a small detail matters and why I really\nappreciate that it's\ngoing to be fixed. Thank you (and sorry for my inability to convey small details that\nhappen to be important\nto me with fewer words)!\u003c/pre\u003e",
	"user": {
		"login": "shurcooL",
		"id": 1924134,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-04T05:45:50Z",
	"updated_at": "2014-12-08T10:49:59Z"
}
