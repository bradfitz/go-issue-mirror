{
	"id": 51277365,
	"number": 1112,
	"state": "closed",
	"title": "encoding/xml: Parsing of CDATA yields incorrect error.",
	"body": "by **jimteeuwen**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\nBuild and run the following code:\n\npackage main\n\nimport \u0026quot;xml\u0026quot;\nimport \u0026quot;strings\u0026quot;\nimport \u0026quot;fmt\u0026quot;\nimport \u0026quot;os\u0026quot;\n\nfunc main() {\n\tfragment := `\u0026lt;test\u0026gt;\u0026lt;![CDATA[ \u0026amp;val=foo ]]\u0026gt;\u0026lt;/test\u0026gt;`\n\tparser := xml.NewParser(strings.NewReader(fragment))\n\t\n\tvar err os.Error\n\n\tfor {\n\t\tif _, err = parser.Token(); err != nil {\n\t\t\tif err == os.EOF {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tfmt.Fprintf(os.Stderr, \u0026quot;Xml Error: %s\\n\u0026quot;, err)\n\t\t\treturn\n\t\t}\n\t}\n}\n\nWhat is the expected output?\nProgram should run without error.\n\nWhat do you see instead?\nXml Error: XML syntax error on line 1: invalid character entity \u0026amp;val;\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\n64-bit ArchLinux\n\nWhich revision are you using?  (hg identify)\ne1752be5d932 tip\n\nPlease provide any additional information below.\nThe XML parser in the Go xml package should ignore special tokens like \u0026amp; and \u0026lt; or\n\u0026gt; when they are inside a \u0026lt;![CDATA[ ... ]]\u0026gt; tag.\nThe current implementation does not and consequently yields parse errors where it should\nnot.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:07:02Z",
	"created_at": "2010-09-16T01:00:19Z",
	"updated_at": "2016-06-24T19:20:14Z"
}
