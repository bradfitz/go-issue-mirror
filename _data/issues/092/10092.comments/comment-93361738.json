{
	"id": 93361738,
	"body": "The go cmd does not find my compiler.  I do not have root and it is not installed. Without the PATH I get this :\r\n```\r\nbuilddist.sh: line 4: gccgo: command not found\r\n```\r\nWithout setting the GCCGO, I get \r\n```\r\nrun: /home/h4ck3rm1k3/go/pkg/bootstrap /home/h4ck3rm1k3/go/bin/go install bootstrap/...\r\ngo build bootstrap/internal/gc/big: : fork/exec : no such file or directory\r\n```\r\n\r\nI added a -n build to the dist too and that  show this : \r\n```\r\ncd /home/h4ck3rm1k3/go/pkg/bootstrap/src/bootstrap/old9a\r\n\"\" -I $WORK -I /home/h4ck3rm1k3/go/pkg/bootstrap/pkg/gccgo_linux_ppc64le -c -g -fgo-relative-import-path=_/home/h4ck3rm1k3/go\\\r\n/pkg/bootstrap/src/bootstrap/old9a -o $WORK/bootstrap/old9a/_obj/_go_.o ./lex.go ./y.go\r\nar cru $WORK/bootstrap/libold9a.a $WORK/bootstrap/old9a/_obj/_go_.o\r\n```\r\nIt does not find the compiler. \r\n\r\nSo the flags that I absolutly need for my building of gccgo from source and installing it in my homedir are :\r\n```\r\nexport GCCGO=${HOME}/install/bin/gccgo\r\nexport LD_LIBRARY_PATH=${HOME}/install/lib64\r\nexport PATH=${PATH}:${HOME}/go/bin:${HOME}/install/bin\r\nexport GOROOT_BOOTSTRAP=${HOME}/go\r\n```\r\n\r\nBTW, If I run the compilation again with the new go, I get :\r\n```\r\ngo tool: no such tool \"9g\"\r\n```",
	"user": {
		"login": "h4ck3rm1k3",
		"id": 34903,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-15T12:09:22Z",
	"updated_at": "2015-04-15T12:09:22Z"
}
