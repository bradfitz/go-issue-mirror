{
	"id": 51277727,
	"number": 1380,
	"state": "closed",
	"title": "scanner: Init() unexpectedly prints error to stderr if first byte of src is illegal",
	"body": "by **rothspec**:\n\n\u003cpre\u003eGiven:\n  package main\n  import (\n    \u0026quot;bytes\u0026quot;\n    \u0026quot;scanner\u0026quot;\n  )\n\n  func main() {\n    buf := bytes.NewBufferString(\u0026quot;\u0026quot;)\n    buf.WriteByte(0x80) // invalid unicode code point\n\n    s := new(scanner.Scanner)\n    s.Init(buf)\n    s.Error = func(s *scanner.Scanner, msg string) {\n      // don't print to stderr\n    }\n  }\n\n\nWhat is the expected output?\nNothing is printed.\n\nWhat do you see instead?\n\u0026quot;illegal UTF-8 encoding\u0026quot; on stderr\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n8g\n\nWhich operating system are you using?\nLinux 2.6.35\n\nWhich revision are you using?  (hg identify)\nf6ebabf0cc00+ tip\n\nPlease provide any additional information below.\nSurprising that Init() can cause anything to print on stderr. The line \u0026quot;s.ch =\ns.next()\u0026quot; in Init() triggers the stderr print when the first src byte is an illegal\nUTF-8 encoding or NUL.\n\nWorkaround for preventing the scanner from printing to stderr is to pre-initialize the\nscanner.Error func before calling Init(), and then set it again after Init().\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:08:03Z",
	"created_at": "2011-01-03T22:41:07Z",
	"updated_at": "2016-06-24T19:23:37Z"
}
