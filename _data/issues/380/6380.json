{
	"id": 51285098,
	"number": 6380,
	"state": "closed",
	"title": "crypto/tls: clientHandshake does not properly select the cert to send when len(certReq.certificateAuthorities) != 0",
	"body": "by **andrew@spacemonkey.com**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1.  Create a cert chain where A -\u0026gt; B -\u0026gt; C (A signs B signs C)\n2.  Start an https server which asks for A in its cert request during handshake\n3.  Create an https client which loads C, then B into its tls.Certificate\n4.  Connect the client to the server\n\nWhat is the expected output?\nclientHandshake() should present certificate C (the leaf) by identifying that C is\nsigned by B and B is signed by A, which matches the request.\n\nWhat do you see instead?\nAn empty cert is presented.\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nDebian wheezy\n\nWhich version are you using?  (run 'go version')\ngo version 1.1\n\nPlease provide any additional information below.\nAssume you have the following chain of trust:  A -\u0026gt; B -\u0026gt; C, where A signs B signs\nC.  During the handshake, the remote end sends a certificate request with A in its\ncertificateAuthorities.  The client side tls.Certificate structure has C and then B (so\nthat C will be properly identified as the leaf). When clientHandshake() runs, it\ndiscards C as a candidate (since the issuer is B, which is not A) and then also discards\nB since it again compares the leaf issuer to A.  The result is that an empty certificate\nis sent and the handshake fails.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:35:07Z",
	"created_at": "2013-09-13T16:04:42Z",
	"updated_at": "2016-06-25T01:18:39Z"
}
