{
	"id": 115058196,
	"body": "@kardianos your program prints:\r\n```\r\nC:\\dev\\src\\foo\u003ego run main.go\r\nSKIP PPROF TESTS\r\n```\r\non my windows xp. windows xp (and maybe others) cannot do ticks better then 15ms. I expect all windows pcs have either 1ms or 15ms tick resolution. Maybe you can look for \"missing ticks\". Do a set of measurements like yours and see if there are any variations.\r\n\r\nKeep in mind that Go prof is not running by default - it is started on request. But when started, it runs on a separate thread with high priority (see profileloop1 func in runtime). Mind you, now that I am looking at this code again, it used to work like that when in C. Now that runtime is written in Go, I am not sure that profileloop1 is not rescheduled onto a different thread as it runs. Even worse, the thread that profileloop1 has started with (with high priority), might be running some things that should not be running with high priority? @dvyukov what do you think?\r\n\r\nAlex",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-25T00:55:00Z",
	"updated_at": "2015-06-25T00:55:00Z"
}
