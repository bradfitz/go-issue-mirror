{
	"id": 143632975,
	"body": "@adg: the variance:\r\n\r\n* [plan9](https://github.com/golang/go/blob/b7fa4f27ba0c127512f2c4808c628efe842ff660/src/cmd/go/env.go#L94-L105)\r\n* [windows](https://github.com/golang/go/blob/b7fa4f27ba0c127512f2c4808c628efe842ff660/src/cmd/go/env.go#L108) (e.g. `set GOARCH=amd64`) \r\n* [all other platforms](https://github.com/golang/go/blob/b7fa4f27ba0c127512f2c4808c628efe842ff660/src/cmd/go/env.go#L92) (e.g. `GOARCH=\"amd64\"`)\r\n\r\nThe variance is explained by the fact that `go env` output is interpretable as a shell script (and this is a perfectly valid reason to have variance).\r\n\r\nThe rationale for JSON is that some tools (e.g. editor packages / plugins) aren't interested in shell scripts as output; they're interested in a structured format that does not vary by platform. Unsurprisingly, the output of `go env` can be used to detect many things about a user's go installation(s) that can then minimize the amount of explicit configuration they need to do it their tool(s) of choice.\r\n\r\nIn some respects, adding a json option will just add code to such tools (if they wish to function correctly with prior versions of go, they'll still need to handle the shell script output variant), but at least it makes future releases easier to work with.",
	"user": {
		"login": "joefitzgerald",
		"id": 744740,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-28T03:43:59Z",
	"updated_at": "2015-09-28T04:20:42Z"
}
