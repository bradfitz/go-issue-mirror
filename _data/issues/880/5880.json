{
	"id": 51284334,
	"number": 5880,
	"state": "closed",
	"title": "encoding/xml: bad UTF-8 coercion",
	"body": "\u003cpre\u003eThe program below asks encoding/xml to marshal the byte \u0026quot;string\u0026quot;\n{192,168,0,1}. That's C0 A8 00 01 in hex. C0 A8 has the right upper bits to be a valid\n2-byte UTF-8 sequence, but it is not one, because the encoded value is too small (0x28,\nwhich should be encoded as a single byte). encoding/xml appears to pass the bytes\nthrough unaltered (or else does the check badly, which would be worse). It does replace\nthe 00 with U+FFFD. It should replace other invalid UTF-8 sequences too.\n\n\u003ca href=\"http://play.golang.org/p/xFXcF-2Hpb\"\u003ehttp://play.golang.org/p/xFXcF-2Hpb\u003c/a\u003e\n\npackage main\n\nimport (\n\t\u0026quot;encoding/hex\u0026quot;\n\t\u0026quot;encoding/xml\u0026quot;\n\t\u0026quot;fmt\u0026quot;\n\t\u0026quot;unicode/utf8\u0026quot;\n)\n\ntype T []byte\n\nfunc main() {\n\tdata, _ := xml.Marshal(T{192,168,0,1})\n\tfmt.Println(hex.Dump(data))\n\tfmt.Println(utf8.Valid(data)) // should always be true for result of xml.Marshal!\n}\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:32:21Z",
	"created_at": "2013-07-13T01:31:53Z",
	"updated_at": "2016-06-24T22:51:50Z"
}
