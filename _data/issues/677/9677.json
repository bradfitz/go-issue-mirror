{
	"id": 55352126,
	"number": 9677,
	"state": "closed",
	"title": "net/url: escaping parenthesis",
	"body": "Hi all!\r\n\r\nI have a question, the package `URL` implements the `RFC 3986` although if I read it correctly in section `2.2` it says about reserved chars:\r\n\r\n```\r\n      reserved    = gen-delims / sub-delims\r\n\r\n      gen-delims  = \":\" / \"/\" / \"?\" / \"#\" / \"[\" / \"]\" / \"@\"\r\n\r\n      sub-delims  = \"!\" / \"$\" / \"\u0026\" / \"'\" / \"(\" / \")\"\r\n                  / \"*\" / \"+\" / \",\" / \";\" / \"=\"\r\n```\r\n\r\nHowever, checking the source of the [current go implementation](https://github.com/golang/go/blob/release-branch.go1.4/src/net/url/url.go#L67-L108)\r\n\r\nI don't see the `'('` and `')'` part of reserved.\r\n\r\nSo this is causing some problems when I do `http.Get()` with urls that contains parens because they get escaped from `http://example.com/fit-in/236x345/filters:quality(90):fill(ffffff)` into `http://example.com/fit-in/236x345/filters:quality%2890%29:fill%28ffffff%29` and the web server seems doesn't like it.\r\n\r\nP.s. note that I'm not the author of these kind of urls nor able to upgrade the web-server to a recent version that probably could be able to unescape the path again. ",
	"user": {
		"login": "DAddYE",
		"id": 6537,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2015-01-24T01:18:50Z",
	"created_at": "2015-01-24T00:57:13Z",
	"updated_at": "2016-06-25T01:59:14Z"
}
