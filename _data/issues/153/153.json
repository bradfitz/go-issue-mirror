{
	"id": 51276114,
	"number": 153,
	"state": "closed",
	"title": "SetReadTimeout is ineffective",
	"body": "by **azummo-google@towertech.it**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n\nfunc main()\n{\n        conn, _ := net.ListenPacket(\u0026quot;udp\u0026quot;, \u0026quot;0.0.0.0:1234\u0026quot;);\n\n        conn.SetReadTimeout(10000000e6);\n\n        fmt.Printf(\u0026quot;waiting.. %s\\n\u0026quot;, conn.LocalAddr().String());\n\n        var buf [100]byte;\n\n        for {\n                n, _, err := conn.ReadFrom(\u0026amp;buf);\n\n                if err == os.EAGAIN {\n                        fmt.Printf(\u0026quot;EAGAIN\\n\u0026quot;);\n                        continue;\n                }\n\n                fmt.Printf(\u0026quot;got %d bytes\\n\u0026quot;, n);\n        }\n}\n\n\n\nWhat is the expected output? What do you see instead?\n\nAccording to the doc, SetReadTimeout influences ReadFrom.\nThe default is zero, which means that the call must block.\nInstead it immediately returns EAGAIN, regardless of SetReadTimeout.\n\nThis happens because the socket is always set up\nin NONBLOCK mode.\n\nWhat is your $GOOS?  $GOARCH?\nlinux/686\n\nWhich revision are you sync'ed to?  (hg log -l 1)\nchangeset:   4030:52ad1606d994\ntag:         tip\nuser:        Rob Pike \u0026lt;r@golang.org\u0026gt;\ndate:        Fri Nov 13 13:15:18 2009 -0800\nsummary:     Explain why\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:03:27Z",
	"created_at": "2009-11-13T22:26:34Z",
	"updated_at": "2016-06-24T19:01:15Z"
}
