{
	"id": 229998750,
	"body": "My -sort of- fix was to use \r\n`_\"golang.org/x/crypto/ripemd160\"`\r\nin my imports.\r\n\r\nAlas, still unsuccessful, as the code then generates: \r\n  `openpgp: invalid argument: cannot encrypt to public key of type 17`\r\n\r\nDigging further (and showing my ignorance, most likely), the culprit is that this public key I am using is a DSA key, not RSA.\r\n\r\nPerhaps not germane to this issue, but the error might be more useful if it indicated that DSA keys cannot be used for encryption, only signing.\r\n\r\nAs an aside, I'm new to Go, and your examples are very helpful jfrazelle.  Thank you.\r\n\r\n(Adding more - forgive if this isn't the right place):  I've discovered that DSA keys -usually- have ElGamal sub keys, which can be used for encryption.  However, the default 'Encrypt' won't work unless you promote the ElGamal sub key up to the top, and then it works.\r\n\r\nWould a reasonable feature request be that if the DSA key is used AND it has an ElGamal sub key, that the Encrypt should attempt to use that, rather than return 'Cannot encrypt...type 17'?",
	"user": {
		"login": "ProtoFly",
		"id": 17436598,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-01T17:06:00Z",
	"updated_at": "2016-07-07T20:08:39Z"
}
