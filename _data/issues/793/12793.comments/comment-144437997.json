{
	"id": 144437997,
	"body": "Thank you Brad,\r\nI think it's hard to solve the problem without breaking backward compatibility.. for current apps solution could be to use `interface{}` instead of `json.Number` and then do conversion manually or reassign `json.Number` value to a new one right after `Unmarshall`ing.\r\n\r\nThat `type Number string` makes things very difficult.\r\n\r\nI can think of an option for `json.Decoder` which would accept callback to validate `json.Number` or an option which would provide a regex to validate it.\r\nThis would help with `Unmarshall`ing.\r\nAs about your example - I think `json.Number` should be defined as a struct/interface and assigning to a Number would be possible only by creating a new struct. Automatic `Number \u003c-\u003e String` should never happen.",
	"user": {
		"login": "dyatlov",
		"id": 360998,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-30T14:58:56Z",
	"updated_at": "2015-09-30T14:58:56Z"
}
