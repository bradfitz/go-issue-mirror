{
	"id": 51282645,
	"number": 4793,
	"state": "closed",
	"title": "spec: result of comparison should always be untyped bool",
	"body": "\u003cpre\u003eRevision 3c646c4b3299 claims to have fixed \u003ca href=\"https://golang.org/issue/3915\"\u003eissue #3915\u003c/a\u003e and \u003ca href=\"https://golang.org/issue/3923\"\u003eissue #3923\u003c/a\u003e. I believe this is\nnot correct. This program:\n\npackage p\nconst c = 3 \u0026lt; 4\ntype mybool bool\nvar x mybool = c\n\nnow compiles w/o errors, i.e., the type of c is an untyped boolean (otherwise the\nassignment to x would fail). However, the spec  says:\n\n\u003ca href=\"http://tip.golang.org/ref/spec#Comparison_operators\"\u003ehttp://tip.golang.org/ref/spec#Comparison_operators\u003c/a\u003e:\n\n\u0026quot;The result of a comparison can be assigned to any boolean type. If the context\ndoes not demand a specific boolean type, the result has type bool.\u0026quot;\n\nIn the definition of c, the context does not demand a specific boolean type, and thus\nthe type of c should be bool. This should make the assignment to x invalid.\n\nI believe the compilers are doing the right thing now, but now the spec's wording is\nincorrect: The result of a comparison should always be untyped bool, not just if used in\nan assignment where the context requires another bool type.\n\n(Unrelated, but in a similar vain, this might tie in with \u003ca href=\"https://golang.org/issue/4336\"\u003eissue #4336\u003c/a\u003e: It would make\nsense for \u0026amp;\u0026amp; and || to permit arbitrary booleans as operands, and the result\nshould always be an untyped bool.)\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:25:24Z",
	"created_at": "2013-02-12T00:00:16Z",
	"updated_at": "2016-06-24T22:32:46Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
