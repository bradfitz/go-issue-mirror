{
	"id": 51279841,
	"number": 2888,
	"state": "closed",
	"title": "cmd/cgo: gcc attribute unavailable breaks cgo",
	"body": "by **mcphail_colin@hotmail.com**:\n\n\u003cpre\u003eIf a C header contains a function declaration such as\n    extern const char *class_getName(Class cls);\nwhere Class is the typedef name for struct objc_class * then the C wrapper code\ngenerated by cgo uses type struct objc_class * for unmarshalling the function argument\nrather than type Class.  Normally this is fine but in this case the definition of struct\nobjc_class has the 'unavailable' attribute attached to it, so the generated code fails\nto compile.\n\nWhat steps will reproduce the problem?\n1. Unzip/untar attached cgo_example.tar.gz and cd to cgo_example.\n2. cgo main.go\n3. gcc -c -I. _obj/main.cgo2.c\n\nWhat is the expected output?\nNo output - compilation succeeds silently.\n\nWhat do you see instead?\nmain.go: In function ‘_cgo_451c23f32582_Cfunc_class_getName’:\nmain.go:30: error: ‘objc_class’ is unavailable (declared at ./c_header.h:1)\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\ncgo\n\nWhich operating system are you using?\nMac OS X 10.7.3\n\nWhich revision are you using?  (hg identify)\nweekly.2012-01-27 11507\n\nPlease provide any additional information below.\nI produced a modified version of cgo by deleting the *dwarf.TypedefType switch case in\nfunc (c *typeConv) FuncArg() at approx line 1275 in src/cmd/cgo/gcc.go .  This had the\neffect of using the argument type as given in the C header and allowed compilation of\nthe generated wrapper code to succeed.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/2888/0/cgo_example.tar.gz\"\u003ecgo_example.tar.gz\u003c/a\u003e (445 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:15:11Z",
	"created_at": "2012-02-06T15:02:20Z",
	"updated_at": "2016-06-24T21:25:47Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
