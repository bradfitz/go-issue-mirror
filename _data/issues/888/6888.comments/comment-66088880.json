{
	"id": 66088880,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eThat test for the domain error appears to be misguided. If I remove it and let the code\nfall through to the general case (diff below), then I get 0 + 1.316958i, the same answer\nas Wolfram Alpha. My complex math is a bit rusty. Can you explain why the negative\ncoefficient should be preferred?\n\ndiff -r b1edf8faa5d6 src/pkg/math/cmplx/asin.go\n--- a/src/pkg/math/cmplx/asin.go\tWed Nov 13 21:29:34 2013 -0500\n+++ b/src/pkg/math/cmplx/asin.go\tWed Dec 04 16:58:54 2013 -0500\n@@ -49,10 +49,7 @@\n \n // Asin returns the inverse sine of x.\n func Asin(x complex128) complex128 {\n-\tif imag(x) == 0 {\n-\t\tif math.Abs(real(x)) \u0026gt; 1 {\n-\t\t\treturn complex(math.Pi/2, 0) // DOMAIN error\n-\t\t}\n+\tif imag(x) == 0 \u0026\u0026 math.Abs(real(x)) \u0026lt;= 1 {\n \t\treturn complex(math.Asin(real(x)), 0)\n \t}\n \tct := complex(-imag(x), real(x)) // i * x\n@@ -65,11 +62,7 @@\n \n // Asinh returns the inverse hyperbolic sine of x.\n func Asinh(x complex128) complex128 {\n-\t// TODO check range\n-\tif imag(x) == 0 {\n-\t\tif math.Abs(real(x)) \u0026gt; 1 {\n-\t\t\treturn complex(math.Pi/2, 0) // DOMAIN error\n-\t\t}\n+\tif imag(x) == 0 \u0026\u0026 math.Abs(real(x)) \u0026lt;= 1 {\n \t\treturn complex(math.Asinh(real(x)), 0)\n \t}\n \txx := x * x\u003c/pre\u003e\n\n\n\n_Status changed to **Thinking**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-12-04T22:02:42Z",
	"updated_at": "2014-12-22T06:30:26Z"
}
