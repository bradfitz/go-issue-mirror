{
	"id": 242959815,
	"body": "Three choices how to resolve this (as I see):\r\n\r\n1. Do nothing (and add a comment to https://github.com/golang/go/blob/7c5f33b173d7bde6b3ae33bab940b76b4c991556/src/crypto/x509/pkix/pkix.go#L67 why it's done like this)\r\n\r\n2. Fail fast â€“ Reject certificate with bad RDN structure (`len(rdn) \u003e 1`)\r\n\r\n    Potential for breaking currently working cases (I guess if CN is first, it would work\r\n    even if followed by entries ignored by go)\r\n\r\n    Would it only be an error for the certificate being validated or also would a bad subject\r\n    for a CA break parsing the CA certificate?\r\n\r\n3. Accept the bad structure\r\n\r\n    I think this is a potentially dangerous option; different parsers could interpret the\r\n    subject differently and well, if there's a way to make different parsers read the\r\n    CN differently, that's obviously a security concern. ðŸ‘Ž \r\n\r\n    Although old OpenSSL and SecureTransport seem to do this?\r\n\r\n@agl thoughts?",
	"user": {
		"login": "joneskoo",
		"id": 305104,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-28T06:57:46Z",
	"updated_at": "2016-08-28T06:57:46Z"
}
