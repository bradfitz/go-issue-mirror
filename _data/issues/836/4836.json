{
	"id": 51282705,
	"number": 4836,
	"state": "closed",
	"title": "runtime: split stackoverflow on SIGINT + -QUIT + -INT",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n1. run a fuse daemon on OS X\n2. try to catch SIGINT and SIGQUIT (this works on Linux)\n3. send SIGINT (nothing)\n4. send SIGQUIT (nothing)\n5. send SIGINT again (runtime crash)\n\nWhat is the expected output? What do you see instead?\nGraceful shutdown.\n\n2013/02/17 10:42:55 CAMLI StatFS\n2013/02/17 10:42:55 Root lookup of \u0026quot;Backups.backupdb\u0026quot; = \u0026lt;nil-BlobRef\u0026gt;\n2013/02/17 10:42:55 Root lookup of \u0026quot;mach_kernel\u0026quot; = \u0026lt;nil-BlobRef\u0026gt;\n2013/02/17 10:42:55 Root lookup of \u0026quot;Backups.backupdb\u0026quot; = \u0026lt;nil-BlobRef\u0026gt;\n2013/02/17 10:42:55 CAMLI StatFS\n2013/02/17 10:42:55 Root lookup of \u0026quot;Backups.backupdb\u0026quot; = \u0026lt;nil-BlobRef\u0026gt;\n2013/02/17 10:42:55 CAMLI StatFS\n2013/02/17 10:42:55 Root lookup of \u0026quot;._.\u0026quot; = \u0026lt;nil-BlobRef\u0026gt;\n2013/02/17 10:42:55 Root lookup of \u0026quot;._.\u0026quot; = \u0026lt;nil-BlobRef\u0026gt;\n^C^\\^C^\\runtime: split stack overflow: 0xc20010cab0 \u0026lt; 0xc20010e000\nfatal error: runtime: split stack overflow\n\ngoroutine 1 [syscall]:\nruntime.entersyscall()\n\t/Users/bradfitz/go/src/pkg/runtime/proc.c:1052 +0x19a\nsyscall.Syscall()\n\t/Users/bradfitz/go/src/pkg/syscall/asm_darwin_amd64.s:14 +0x5\nsyscall.read(0x4, 0xc20011b000, 0x2000, 0x2000, 0xc20010e3c8, ...)\n\t/Users/bradfitz/go/src/pkg/syscall/zsyscall_darwin_amd64.go:905 +0x70\nsyscall.Read(0x4, 0xc20011b000, 0x2000, 0x2000, 0x2000, ...)\n\t/Users/bradfitz/go/src/pkg/syscall/syscall_unix.go:132 +0x5a\ncamlistore.org/third_party/code.google.com/p/rsc/fuse.(*Conn).ReadRequest(0xc20010d000,\n0xc2000b3e40, 0xc2000bad70, 0xc200119340)\n\t/Users/bradfitz/src/camlistore.org/third_party/code.google.com/p/rsc/fuse/fuse.go:287 +0xe3\n----- stack segment boundary -----\ncamlistore.org/third_party/code.google.com/p/rsc/fuse.(*Conn).Serve(0xc20010d000,\n0xc2000b3e40, 0xc2000bad70, 0x0, 0x0, ...)\n\t/Users/bradfitz/src/camlistore.org/third_party/code.google.com/p/rsc/fuse/serve.go:242 +0x3ba\nmain.main()\n\t/Users/bradfitz/src/camlistore.org/cmd/cammount/cammount.go:91 +0x669\nruntime.main()\n\t/Users/bradfitz/go/src/pkg/runtime/proc.c:255 +0x8f\nruntime.goexit()\n\t/Users/bradfitz/go/src/pkg/runtime/proc.c:284\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n\t/Users/bradfitz/go/src/pkg/os/signal/signal_unix.go:20 +0x1c\ncreated by os/signal.init·1\n\t/Users/bradfitz/go/src/pkg/os/signal/signal_unix.go:26 +0x2f\n\ngoroutine 4 [chan receive]:\nmain.func·002(0xc2000b6438, 0x0)\n\t/Users/bradfitz/src/camlistore.org/cmd/cammount/cammount.go:83 +0x31\ncreated by main.main\n\t/Users/bradfitz/src/camlistore.org/cmd/cammount/cammount.go:84 +0x47e\nba12:~ bradfitz$ \nba12:~ bradfitz$ \nba12:~ bradfitz$ \nba12:~ bradfitz$ \n\n\n$ go version\ngo version devel +bad13530d9b3 Fri Feb 08 09:20:05 2013 -0800 darwin/amd64\n\n\nWhittling down Camlistore's cammount program, this should reproduce it:  (FUSE crashing\nseems to have wedged this machine, so I can't test until I've rebooted...)\n\n$ cat splitstack.go\npackage main\n\nimport (\n\t\u0026quot;io/ioutil\u0026quot;\n\t\u0026quot;log\u0026quot;\n\t\u0026quot;os\u0026quot;\n\t\u0026quot;os/signal\u0026quot;\n\t\u0026quot;syscall\u0026quot;\n\n\t\u0026quot;camlistore.org/third_party/code.google.com/p/rsc/fuse\u0026quot;\n)\n\nfunc main() {\n\tdir, err := ioutil.TempDir(\u0026quot;\u0026quot;, \u0026quot;\u0026quot;)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tsigc := make(chan os.Signal, 1)\n\tgo func() {\n\t\tlog.Fatalf(\u0026quot;Signal %s received, shutting down.\u0026quot;, \u0026lt;-sigc)\n\t}()\n\tsignal.Notify(sigc, syscall.SIGQUIT, syscall.SIGTERM)\n\n\tconn, err := fuse.Mount(dir)\n\tif err != nil {\n\t\tlog.Fatalf(\u0026quot;Mount: %v\u0026quot;, err)\n\t}\n\n\terr = conn.Serve(fs{})\n\tif err != nil {\n\t\tlog.Fatalf(\u0026quot;Serve: %v\u0026quot;, err)\n\t}\n\tlog.Printf(\u0026quot;fuse process ending.\u0026quot;)\n}\n\ntype fs struct{}\n\nfunc (fs) Root() (fuse.Node, fuse.Error) {\n\treturn fs{}, nil\n}\n\nfunc (fs) Attr() fuse.Attr {\n\treturn fuse.Attr{\n\t\tMode: os.ModeDir | 0700,\n\t\tUid:  uint32(os.Getuid()),\n\t\tGid:  uint32(os.Getgid()),\n\t}\n}\n\nfunc (fs) ReadDir(intr fuse.Intr) ([]fuse.Dirent, fuse.Error) {\n\treturn []fuse.Dirent{{Name: \u0026quot;Hello FUSE\u0026quot;}}, nil\n}\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:25:42Z",
	"created_at": "2013-02-17T19:12:21Z",
	"updated_at": "2016-06-24T22:33:13Z"
}
