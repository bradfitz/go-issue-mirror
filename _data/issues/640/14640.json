{
	"id": 138482949,
	"number": 14640,
	"state": "closed",
	"title": "encoding/json: decoding a null value does not replace previous value",
	"body": "Decoding a JSON value into an already populated struct replaces the previous value stored in the struct as long as the key is present.\r\n\r\nExample of working behaviour:\r\nhttp://play.golang.org/p/pGaGDSbVMy\r\n\r\nHowever, if the decoded value is null the previous value is not replaced.\r\n\r\nExample of incorrect behaviour:\r\nhttp://play.golang.org/p/i25WkqFrW-\r\n\r\nIs this intended behaviour for `json.Unmarshal`, `json.Decoder.Decode` \u0026 co.?\r\n\r\nAdditionally, if this is intended behaviour the `json.Decoder.Decode` example at golang.org might need fixing. It currently shows the following example which will exhibit incorrect results if either `Name` or `Text` is null: http://play.golang.org/p/wfoi8On0DX\r\n\r\nA fixed version without possibility of incorrect results: http://play.golang.org/p/zVM9xzqIz4\r\n\r\nGo version: `go version go1.6 linux/amd64`\r\nGo environment:\r\n```plaintext\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"[redacted]\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/go\"\r\nGOTOOLDIR=\"/usr/lib/go/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"```",
	"user": {
		"login": "AntiPaste",
		"id": 4379220,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "NeedsFix"
		}
	],
	"comments": 4,
	"closed_at": "2016-05-26T22:40:44Z",
	"created_at": "2016-03-04T14:00:11Z",
	"updated_at": "2016-05-26T22:40:44Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
