{
	"id": 51288238,
	"number": 8463,
	"state": "closed",
	"title": "cmd/cgo: randomly produces spurious errors involving incompatible C types",
	"body": "by **ianremmler**:\n\n\u003cpre\u003eWhat does 'go version' print?\n\ngo version go1.3 linux/amd64\n\nWhat steps reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\n\u003ca href=\"http://play.golang.org/p/gQM33-crSr\"\u003ehttp://play.golang.org/p/gQM33-crSr\u003c/a\u003e\n\nRunning go build will, about 15% of the time, produce a seemingly spurious error.\n\nWhat happened?\n\nian@tau:~/devel/go/src/github.com/ianremmler/foobar% go build\n# github.com/ianremmler/foobar\n./foobar.go:31: cannot use f (type *C.foo) as type *C.struct_foo in argument to toGo\n./foobar.go:32: cannot use gf.toC() (type *C.struct_foo) as type *C.foo in argument to\n_Cfunc_foofunc\n\nWhat should have happened instead?\n\nNo error.\n\nPlease provide any additional information below.\n\nThis is a pared down example based on a wrapper for the chipmunk physics library that I\nforked and have been (mildy) maintaining:\n\n\u003ca href=\"https://github.com/ianremmler/chipmunk\"\u003ehttps://github.com/ianremmler/chipmunk\u003c/a\u003e\n\nThe error did not occur in earlier Go versions.  The cyclically dependent C structs seem\nto be implicated as the error goes away if the bar pointer is removed from foo, or vice\nversa.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:47:02Z",
	"created_at": "2014-08-02T03:22:13Z",
	"updated_at": "2016-06-25T01:38:52Z"
}
