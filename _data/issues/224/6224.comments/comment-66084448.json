{
	"id": 66084448,
	"body": "\u003ca id=\"c7\"\u003e\u003c/a\u003eComment 7 by **atkaaz**:\n\n\u003cpre\u003eThat's a great idea, I kinda wanted to do that, thank you for this opportunity.\n\n\u003ca href=\"http://play.golang.org/p/g4MD29_6JT\"\u003ehttp://play.golang.org/p/g4MD29_6JT\u003c/a\u003e\n\nor pasting it here just in case:\npackage main\n\nimport \"os\"\nimport \"os/exec\"\n\nfunc main() {\n\ttestEXE()\n\ttestBAT()\n}\n\nfunc setup(extensions string) {\n\tsetEnv(\"PATHEXT\", extensions)\n\tsetEnv(\"PATH\", \"C:\\\\windows\\\\system32\")\n}\n\nfunc findWhere() {\n\tlookPath(\"where\")\n\tlookPath(\"where.exe\")\n\tlookPath(\"c:\\\\windows\\\\system32\\\\where.exe\")\n}\n\nfunc testEXE() { //all work\n\tsetup(\".EXE\")\n\tfindWhere()\n}\n\nfunc testBAT() { //all fail\n\tsetup(\".BAT\")\n\tfindWhere()\n}\n\nfunc lookPath(file string) {\n\tif ffile, err := exec.LookPath(file); err != nil {\n\t\tprintln(\"Not found:\", err.Error())\n\t} else {\n\t\tprintln(\"    Found:\", ffile)\n\t}\n}\n\nfunc setEnv(key, value string) {\n\tos.Setenv(key, value)\n\tif now_val := os.Getenv(key); value != now_val {\n\t\tprintln(\"Couldn't set `\", key, \"` env var, current value `\", now_val, \"`, wanted value `\", value, \"`\")\n\t}\n}\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-23T10:36:27Z",
	"updated_at": "2014-12-08T10:34:14Z"
}
