{
	"id": 66090768,
	"body": "\u003ca id=\"c32\"\u003e\u003c/a\u003eComment 32:\n\n\u003cpre\u003e\u003e But there are three signals that the Go runtime must catch itself in order to\ncorrectly implement the Go language spec: SIGSEGV, SIGBUS, SIGFPE. \n\nAnd thus SIGCHLD which is the signal we receive here must make the program crash?\n\nAlso, please point me to where in the language spec these requirements are mentioned as\nI'm having trouble locating them.\n\n\u003e As an aside, why would a C library disable the signal alternate stack?  What kind of\nsense does that make?  If the library is expected to be called by other programs, it\nsure seems like a bug in the library.\n\nIs that what it does though? I think it calls setjmp which in turn calls sigaltstack.\u003c/pre\u003e",
	"user": {
		"login": "quarnster",
		"id": 1230389,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-04-04T07:02:46Z",
	"updated_at": "2014-12-08T10:40:09Z"
}
