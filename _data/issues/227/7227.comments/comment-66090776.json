{
	"id": 66090776,
	"body": "\u003ca id=\"c40\"\u003e\u003c/a\u003eComment 40:\n\n\u003cpre\u003eOh, I see, it's because Go's making use of the syscall directly and expecting its own\ntrampoline entrypoint. The struct provided to the libc sigaction function does not have\nthe sa_tramp field, likely resulting in the trampoline resetting to whatever the libc\nimplementation uses.\n\npkg/runtime/os_linux.c does this in runtime·setsig:\n\tif(fn == runtime·sighandler)\n\t\tfn = (void*)runtime·sigtramp;\n\nAnd thus Linux doesn't have an have an issue with chained signal handlers as the\ntrampoline will be what's set as the function pointer when the user queries the current\nfunction via sigaction.\u003c/pre\u003e",
	"user": {
		"login": "quarnster",
		"id": 1230389,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-04-05T18:59:13Z",
	"updated_at": "2014-12-08T10:40:09Z"
}
