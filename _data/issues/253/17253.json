{
	"id": 179554215,
	"number": 17253,
	"state": "closed",
	"title": "time.Parse fails at parsing time.String",
	"body": "time.Parse can not parse the default format produced by time.String()\r\n\r\n### What version of Go are you using (`go version`)?\r\ngo1.7.1 linux/amd64\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"$HOME/.local/share/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/go\"\r\nGOTOOLDIR=\"/usr/lib/go/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build766838131=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n### What did you do?\r\nhttps://play.golang.org/p/wmfQP5wX0S\r\n```\r\nfunc main() {\r\n\tt := time.Now().UTC()\r\n\ts := t.String()\r\n\t\r\n\tt, err := time.Parse(s,s)\r\n\tif err != nil {\r\n\t\tfmt.Println(s, \"parsed with error\", err)\r\n\t} else {\r\n\t\tfmt.Println(s, \"equals\", t.String())\r\n\t}\r\n}\r\n```\r\n\r\n### What did you expect to see?\r\n```\r\n2016-09-27 16:53:03.13465009 +0000 UTC equals 2016-09-27 16:53:03.13465009 +0000 UTC\r\n```\r\n### What did you see instead?\r\nThere were different out comes, local:\r\n```\r\n2016-09-27 16:53:03.13465009 +0000 UTC parsed with error parsing time \"2016-09-27 16:53:03.13465009 +0000 UTC\": month out of range\r\n```\r\n\r\ngo playground:\r\n```\r\n2009-11-10 23:00:00 +0000 UTC parsed with error parsing time \"2009-11-10 23:00:00 +0000 UTC\" as \"2009-07-10 23:00:00 +0000 UTC\": cannot parse \"9-11-10 23:00:00 +0000 UTC\" as \"009\"\r\n```\r\n\r\n\r\n",
	"user": {
		"login": "Yndoendo",
		"id": 13036096,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2016-09-27T17:30:04Z",
	"created_at": "2016-09-27T17:06:45Z",
	"updated_at": "2016-09-27T17:30:05Z"
}
