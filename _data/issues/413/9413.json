{
	"id": 52612986,
	"number": 9413,
	"state": "open",
	"title": "x/mobile: allow api users to decide when to SwapBuffers.",
	"body": "While fixing app on x11/egl and porting it to x11/glx I found some need for a redesign.\r\nSee https://go-review.googlesource.com/#/c/1851 for some discussion.\r\n\r\nRight now the idea is to always vsync on back buffer swap.\r\nThis will make any app run at the display devices (probably) fixed refresh rate.\r\nAn app that takes 1.1 frames to render will wait 0.9 frames for the next vblank causing your app to run at half of the display's refresh rate when you could be running much faster.\r\nRefresh rates are not required to be 60hz, so you would have to measure your framerate every frame to figure out if you are running slower or faster.\r\n\r\nI recommend letting the user trigger a draw and swap and the user running their own timer.\r\nThe triggers for draw and swap should be separate so people have the choice to use single buffered contexts (which may be making a comeback oddly).  \r\nFor running your own timer I recommend timer.NewTicker().  \r\nI found it works perfectly as a frame timer with desktop gl.\r\n\r\nFor controlling whether SwapBuffers() vsync's\r\nThis simple function is available with nearly the same definition for egl/glx/wgl.\r\nhttps://www.khronos.org/registry/egl/sdk/docs/man/html/eglSwapInterval.xhtml\r\nIt just takes an integer \u003e= 0 that is the number of vblanks SwapBuffers should wait for.\r\nSomething similar exists for darwin but ios looks a bit ugly.\r\n",
	"user": {
		"login": "bryanturley",
		"id": 1634211,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2014-12-22T01:35:28Z",
	"updated_at": "2015-04-14T19:20:01Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
