{
	"id": 119108978,
	"number": 13413,
	"state": "open",
	"title": "cmd/pprof: -weblist and -output don't play well together",
	"body": "This issue isn't very serious but can be annoying nevertheless.\r\n\r\n#### What version of Go are you using (go version)?\r\ngo 1.5.1 (the issue also exists in tip)\r\n#### What operating system and processor architecture are you using?\r\nnot applicable\r\n#### What did you do?\r\nI was working on a headless system.\r\nI wanted to analyse profiling output by running `go tool pprof -weblist=. -output=listing.html myprogram myprogram.pprof` and copying the resulting listing.html file to my workstation for viewing.\r\n#### What did you expect to see?\r\nI expected that there would be a file named listing.html containing the profiling report.\r\n#### What did you see instead?\r\n```\r\n$ go tool pprof -weblist=. -output=listing.html myprogram myprogram.pprof\r\nGenerating report in listing.html\r\nexec: \"firefox\": executable file not found in $PATH\r\n```\r\nThe file listing.html was created, but remained empty.\r\n\r\nNote that the same command works if I use `-list` instead of `-weblist`.\r\n\r\nI think that the default behaviour of opening a browser to display the report is very convenient. But if the user specifies `-output`, that choice should either be respected or a warning (e.g. \"warning : flag -output ignored for -weblist output format\") should be printed. In no case an empty listing.html file should be generated.\r\n\r\nAs a workaround, I placed a small script named `firefox` in my $PATH; the script copies the report to a directory of my choice.",
	"user": {
		"login": "lorenzb",
		"id": 1148586,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"created_at": "2015-11-26T23:03:42Z",
	"updated_at": "2015-11-29T16:47:26Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
