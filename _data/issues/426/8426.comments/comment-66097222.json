{
	"id": 66097222,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2 by **jason@eggnet.com**:\n\n\u003cpre\u003eNo, connect still returns EINPROGRESS. But adding the descriptor to epoll prior to\ncalling connect causes an event for this descriptor to show up in epoll_wait being\nexecuted in another thread.\n\nThat causes go to believe the descriptor is ready after calling connect later on. go\nthen calls getsockopt which clearly doesn't consider EINPROGRESS an error, thus\nreturning 0. go believes connect succeeded and moves on to to the write.\n\nOnly looking for EPOLLIN is against the man page. The proper flag to look for is\nEPOLLOUT like go already does.\n\nThe problem is simply that go is polling a file descriptor prior to connect, which\nappears to lead to undefined behavior.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-07-26T16:40:49Z",
	"updated_at": "2014-12-08T10:46:48Z"
}
