{
	"id": 51279109,
	"number": 2363,
	"state": "closed",
	"title": "Cannot detect a failed interface type assertion when underlying pointer is nil",
	"body": "by **casey.marshall**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1.Compile the attached standalone main\n2.Run\n\nWhat is the expected output?\nThe function \u0026quot;RelPath\u0026quot; follows the FsNode parent references, building a\nrelative path string, using fsNode, isFsNode = fsNode.Parent().(FsNode). At the top of\nthe tree, fsNode will be assigned nil and the loop should break on this condition.\n\nWhat do you see instead?\nWhen fsNode is nil, the condition test fsNode == nil \u0026amp;\u0026amp; isFsNode is evaulating\nfalse. This only happens for a type assertion to an interface though.\n\nRelPath2 does a type assertion to a struct pointer, and that does compare nil correctly.\n\nIf an interface variable can be type asserted from a pointer which could be nil, one\nneeds to be able to test for when such a failed assertion at runtime.\n\nIn my example, it feels natural for fsNode to be undefined (which it seems to be) when\nthe underlying pointer is nil, but isFsNode should be assigned 'false' in this case.\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nUbuntu 11.04\nLinux yaoguai 2.6.38-11-generic #50-Ubuntu SMP Mon Sep 12 21:17:25 UTC 2011 x86_64\nx86_64 x86_64 GNU/Linux\n\nWhich revision are you using?  (hg identify)\ncasey@yaoguai:~$ cd $GOROOT\ncasey@yaoguai:~/go$ hg identify\n8af9a425d907 tip\n\nPlease provide any additional information below.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/2363/0/typeassert.go\"\u003etypeassert.go\u003c/a\u003e (4893 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:12:41Z",
	"created_at": "2011-10-12T14:45:51Z",
	"updated_at": "2016-06-24T21:19:25Z"
}
