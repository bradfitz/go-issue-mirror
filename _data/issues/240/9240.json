{
	"id": 51580720,
	"number": 9240,
	"state": "closed",
	"title": "syscall: cannot call Win32 API functions that spawn new threads",
	"body": "It is not possible to call Win32 API functions that spawn new threads because the callback wrapper generated by `syscall.NewCallback` does not perform the needed steps to set up the call stack as needed by the Go runtime for a new thread.  Attempting to call such functions will cause the new thread to hang forever.  This can be easily reproduced with the following simple test program:\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"syscall\"\r\n)\r\n\r\nfunc ThreadProc(p uintptr) uintptr {\r\n\tfmt.Println(\"FOO\")\r\n\treturn 0\r\n}\r\n\r\nfunc main() {\r\n\tmodkernel32 := syscall.MustLoadDLL(\"kernel32.dll\")\r\n\tprocCreateThread := modkernel32.MustFindProc(\"CreateThread\")\r\n\tr1, _, _ := procCreateThread.Call(0, 0, syscall.NewCallback(ThreadProc), 0, 0, 0)\r\n\th := syscall.Handle(r1)\r\n\tsyscall.WaitForSingleObject(h, syscall.INFINITE)\r\n\tsyscall.CloseHandle(h)\r\n}\r\n```\r\n\r\nThis will hang forever in Go.  Translating this program into C/C++ and compiling it with an adequate compiler such as Microsoft Visual C++ will give the expected output of printing `FOO` and terminating.",
	"user": {
		"login": "dgolub",
		"id": 5299,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "OS-Windows"
		}
	],
	"comments": 8,
	"closed_at": "2015-05-31T23:58:17Z",
	"created_at": "2014-12-10T16:43:08Z",
	"updated_at": "2016-06-25T01:55:51Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
