{
	"id": 87111945,
	"body": "Hi Dmitry,\r\n\r\nthanks for having a look at this.\r\n\r\nI re-ran the code above again and couldn't reproduce it; I probably posted the wrong version, but here's the one I can reproduce it with in 50% of the runs:\r\nhttps://raw.githubusercontent.com/artjomsimon/go-bots/5531c21c36f636f6f0a290abf62a25da9be6af32/sparselu-crash-mwe.go\r\n\r\nI re-ran this 20 times after exporting the environment variables you've specified.\r\n\r\n```bash\r\n\u003e export GOTRACEBACK=2\r\n\u003e export GODEBUG=scheddetail=1\r\n\u003e for i in {1..20}; do go run sparselu-crash-mwe.go -n 201 -m 69 \u0026\u003e bugs/invalid-p-state/invalid-p-state-$i.txt; done\r\n```\r\n\r\nOut of 20 runs: 3 ran ok, 7 segfaulted, and 10 crashed, generating the traces here:\r\n\r\nhttps://raw.githubusercontent.com/artjomsimon/go-bots/5531c21c36f636f6f0a290abf62a25da9be6af32/bugs/invalid-p-state/invalid-p-state-2.txt\r\nhttps://raw.githubusercontent.com/artjomsimon/go-bots/5531c21c36f636f6f0a290abf62a25da9be6af32/bugs/invalid-p-state/invalid-p-state-4.txt\r\nhttps://raw.githubusercontent.com/artjomsimon/go-bots/5531c21c36f636f6f0a290abf62a25da9be6af32/bugs/invalid-p-state/invalid-p-state-7.txt\r\nhttps://raw.githubusercontent.com/artjomsimon/go-bots/5531c21c36f636f6f0a290abf62a25da9be6af32/bugs/invalid-p-state/invalid-p-state-8.txt\r\nhttps://raw.githubusercontent.com/artjomsimon/go-bots/5531c21c36f636f6f0a290abf62a25da9be6af32/bugs/invalid-p-state/invalid-p-state-9.txt\r\nhttps://raw.githubusercontent.com/artjomsimon/go-bots/5531c21c36f636f6f0a290abf62a25da9be6af32/bugs/invalid-p-state/invalid-p-state-11.txt\r\nhttps://raw.githubusercontent.com/artjomsimon/go-bots/5531c21c36f636f6f0a290abf62a25da9be6af32/bugs/invalid-p-state/invalid-p-state-15.txt\r\nhttps://raw.githubusercontent.com/artjomsimon/go-bots/5531c21c36f636f6f0a290abf62a25da9be6af32/bugs/invalid-p-state/invalid-p-state-16.txt\r\nhttps://raw.githubusercontent.com/artjomsimon/go-bots/5531c21c36f636f6f0a290abf62a25da9be6af32/bugs/invalid-p-state/invalid-p-state-18.txt\r\nhttps://raw.githubusercontent.com/artjomsimon/go-bots/5531c21c36f636f6f0a290abf62a25da9be6af32/bugs/invalid-p-state/invalid-p-state-20.txt\r\n\r\n\r\nI have another version of the benchmark, using channels instead of sync/WaitGroup for synchronization. This version crashes too, but with the error message **fatal error: bad g-\u003estatus in ready**, also in 50% of the cases.\r\n\r\nThis other version consists of the following two files:\r\nhttps://raw.githubusercontent.com/artjomsimon/go-bots/8e237669f6f5285f8a703717a09e8500acf671cc/sparselu-crash-mwe-chan.go\r\nhttps://raw.githubusercontent.com/artjomsimon/go-bots/b4c00a28d590bb1668a1ad523335a2bad3043827/taskpool-simple-queue-chan.go\r\n\r\nI ran them like this, again:\r\n```bash\r\n\u003e export GOTRACEBACK=2\r\n\u003e export GODEBUG=scheddetail=1\r\n\u003e for i in {1..20}; do\r\n\u003e\tgo run sparselu-crash-mwe-chan.go taskpool-simple-queue-chan.go -n 201 -m 69 \u0026\u003e bugs/bad-g-status-in-ready/bug-go-$i.txt;\r\n\u003e done\r\n```\r\n\r\nOut of 20 runs: 4 ran ok, 6 segfaulted, and 10 crashed, generating varying errors.\r\n\r\n**fatal error: bad g-\u003estatus in ready**:\r\nhttps://github.com/artjomsimon/go-bots/blob/master/bugs/bad-g-status-in-ready/bug-go-3.txt\r\nhttps://github.com/artjomsimon/go-bots/blob/master/bugs/bad-g-status-in-ready/bug-go-5.txt\r\nhttps://github.com/artjomsimon/go-bots/blob/master/bugs/bad-g-status-in-ready/bug-go-10.txt\r\nhttps://github.com/artjomsimon/go-bots/blob/master/bugs/bad-g-status-in-ready/bug-go-15.txt\r\nhttps://github.com/artjomsimon/go-bots/blob/master/bugs/bad-g-status-in-ready/bug-go-18.txt\r\n\r\n\r\n**fatal error: acquirep: invalid p state**:\r\nhttps://github.com/artjomsimon/go-bots/blob/master/bugs/bad-g-status-in-ready/bug-go-4.txt\r\nhttps://github.com/artjomsimon/go-bots/blob/master/bugs/bad-g-status-in-ready/bug-go-6.txt\r\nhttps://github.com/artjomsimon/go-bots/blob/master/bugs/bad-g-status-in-ready/bug-go-7.txt\r\nhttps://github.com/artjomsimon/go-bots/blob/master/bugs/bad-g-status-in-ready/bug-go-17.txt\r\n\r\n**fatal error: fault**\r\nhttps://github.com/artjomsimon/go-bots/blob/master/bugs/bad-g-status-in-ready/bug-go-14.txt\r\n\r\n---\r\n\r\nHere's more information about the CPU and memory on the machine:\r\n```bash\r\nstsimon@leo:~/golang-parallel/src/benchmarks\u003e lscpu\r\nArchitecture:          x86_64\r\nCPU op-mode(s):        32-bit, 64-bit\r\nByte Order:            Little Endian\r\nCPU(s):                48\r\nOn-line CPU(s) list:   0-47\r\nThread(s) per core:    1\r\nCore(s) per socket:    12\r\nSocket(s):             4\r\nNUMA node(s):          8\r\nVendor ID:             AuthenticAMD\r\nCPU family:            16\r\nModel:                 9\r\nModel name:            AMD Opteron(tm) Processor 6172\r\nStepping:              1\r\nCPU MHz:               800.000\r\nBogoMIPS:              4199.97\r\nVirtualization:        AMD-V\r\nL1d cache:             64K\r\nL1i cache:             64K\r\nL2 cache:              512K\r\nL3 cache:              5118K\r\nNUMA node0 CPU(s):     0-5\r\nNUMA node1 CPU(s):     6-11\r\nNUMA node2 CPU(s):     12-17\r\nNUMA node3 CPU(s):     18-23\r\nNUMA node4 CPU(s):     24-29\r\nNUMA node5 CPU(s):     30-35\r\nNUMA node6 CPU(s):     36-41\r\nNUMA node7 CPU(s):     42-47\r\n\r\n\u003e free -m\r\n             total       used       free     shared    buffers     cached\r\nMem:        128562       6322     122239         46        204       4676\r\n-/+ buffers/cache:       1441     127120\r\nSwap:         8197          0       8197\r\n```\r\n\r\nPlease tell me if I can do anything else.",
	"user": {
		"login": "artjomsimon",
		"id": 2609170,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-27T22:45:33Z",
	"updated_at": "2015-03-27T22:45:33Z"
}
