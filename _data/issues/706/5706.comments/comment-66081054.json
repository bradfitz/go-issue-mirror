{
	"id": 66081054,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003eWe should not expect getting true for the second return value of FieldByName to imply\nthat s.m will compile in the example above. There are other reasons we might not be able\nto SEE a field, even if it exists (e.g., it is unexported in a different package).\n\nThe real problem, I think, is the comment at\n\u003ca href=\"http://golang.org/src/pkg/reflect/type.go?#L860\"\u003ehttp://golang.org/src/pkg/reflect/type.go?#L860\u003c/a\u003e that says \"This uses the same condition\nthat the Go language does\", because it is not even close to true. I don't think people\neven want that to be true, unless they don't want to be able to use reflection to\nexamine unexported fields of struct types from other packages.\n\nThis is related to \u003ca href=\"https://golang.org/issue/4876\"\u003ehttps://golang.org/issue/4876\u003c/a\u003e as well, which has\nbeen marked fixed simply because the confusing behavior is now documented (by a comment\nin the code starting with \"BUG\", I might add).\n\nThe real problem is that we don't seem to be sure whether we want reflection to show us\nall the internals or just the stuff we can get at.\u003c/pre\u003e",
	"user": {
		"login": "davidthomas426",
		"id": 1478120,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-10-14T20:50:20Z",
	"updated_at": "2014-12-08T10:31:11Z"
}
