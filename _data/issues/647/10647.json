{
	"id": 72291280,
	"number": 10647,
	"state": "closed",
	"title": "x/tools/cmd/vet: detect simple parallel goroutine race conditions",
	"body": "A trap I commonly fall into is to parallelize a loop by doing something like:\r\n```\r\nfor i := ... {\r\n  ...\r\n  go func() {\r\n    \u003csome use of i\u003e\r\n  }\r\n}\r\n```\r\nA similar example is:\r\n```\r\nfor i, v := range ... {\r\n  go func() {\r\n   \u003csome use of i or v\u003e\r\n  }\r\n}\r\n```\r\nIt would be awesome if go vet would catch these simple problems. There is a more general case where the body of the goroutine refers to other variables from the environment but that can't be reliably detected using static analysis. However, I would expect that the simple checks against use of the index variables will flag many of the problematic situations.\r\nThanks!",
	"user": {
		"login": "tve",
		"id": 39480,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2015-05-01T17:58:57Z",
	"created_at": "2015-04-30T21:50:27Z",
	"updated_at": "2016-06-25T02:07:04Z"
}
