{
	"id": 74180353,
	"body": "Now that we have trybots, and trybots require VMs, this bug is now high priority, so we're able to get ARM-based trybots.\r\n\r\nTest sharding is coming soon, too, so I don't care much about speed.\r\n\r\nI also found https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Virtual_ARM_Linux_environment which is basically what I did before (and I lost my old notes) but uses the Cortex A9 processor. Maybe it's faster.\r\n\r\nI would now like to see a Dockerfile which generates an x86 Debian or Ubuntu container which is bootable using docker2boot (like our Linux VMs), which uses qemu-system-arm to then boot an ARM system (can also be Debian, or whatever) that then downloads the buildlet from the GCE metadata service and runs it.\r\n\r\nSo the coordinator will also be interacting with an emulated buildlet.  I hope that's fast enough.\r\n\r\nOr since we have to do OS X differently anyway, maybe we focus on OS X first (which will connect to the coordinator to register idle VMs) and then have ARM do the same thing as OS X, but use a bunch of real ARM machines (I have some idle ones), or ARM machines on online.net, and then we make the coordinator just send VM create/destroy requests to online.net as needed.\r\n\r\nBut if somebody wants to work on the GCE qemu-system-arm thing, I would love it.  Even if you get it to the point of working mostly in Docker, I can do the docker2boot + buildlet-downloading parts.  Just make sure to make the ARM filesystem have curl installed already, and configure the ARM system to run a shell script at boot, and I can take it from there.\r\n\r\n/cc @adg \r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-13T00:04:49Z",
	"updated_at": "2015-02-13T00:04:49Z"
}
