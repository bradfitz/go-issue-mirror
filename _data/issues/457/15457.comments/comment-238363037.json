{
	"id": 238363037,
	"body": "Ian,\n  I think it may involve more than go env.  My problem is with cross-compiling a popular C/Fortran library called OpenBLAS. Here's what I did:\n\nI've got the OpenBLAS make to cross-compile the library by doing this:\n\n  *   Find all installed packages for the ARM compiler: sudo aptitude search arm-linux-gnueabi\n  *   Purge ALL gnueabi versions: sudo apt-get purge --auto-remove gfortran-arm-linux-gnueabi, etc for any \"installed\"\n  *   Install only gnueabihf versions: sudo aptitude install gfortran-arm-linux-gnueabihf (this also installs gnueabihf gcc)\n  *   From the OpenBLAS directory: make CC=arm-linux-gnueabihf-gcc FC=arm-linux-gnueabihf-gfortran HOSTCC=gcc TARGET=CORTEXA9\n  *   Install the ARM libs: sudo make PREFIX=/usr/local install\n\nThe make runs to completion and I can install the ARM OpenBLAS library. I followed similar steps to get FFTW to cross-compile if anyone is interested.\n\nNext, installing go for cross-compiling I did this:\n\n  *\n  *    export CGO_ENABLED=1\n  *    export CC_FOR_TARGET=arm-linux-gnueabihf-gcc\n  *    export GOGCCFLAGS=\"-fPIC -pthread -mfpu=vfp -mfloat-abi=hard --static\"\n  *    export GOOS=linux\n  *    export GOARCH=arm\n  *    export GOARM=7\n  *    bash ./all.bash\n  *\n  *   go env shows:\n  *\n  *   GOARCH=\"arm\"\n  *   GOBIN=\"\"\n  *   GOEXE=\"\"\n  *   GOHOSTARCH=\"amd64\"\n  *   GOHOSTOS=\"linux\"\n  *   GOOS=\"linux\"\n  *   GOPATH=\"/opt/Projects/Golang\"\n  *   GORACE=\"\"\n  *   GOROOT=\"/usr/local/go\"\n  *   GOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\n  *   CC=\"arm-linux-gnueabihf-gcc\"\n  *   GOGCCFLAGS=\"-fPIC -marm -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build149148529=/tmp/go-build -gno-record-gcc-switches\"\n  *   CXX=\"g++\"\n  *   CGO_ENABLED=\"1\"\n\nNotice the GOGCCFLAGS get mangled (see golang go issues 8161). I can work around that by specifying GOGCCFLAGS on the command line:\nGOOS=linux GOARCH=arm GOARM=7 GOGCCFLAGS=\"-fPIC -pthread -mfpu=vfp -mfloat-abi=hard  --static\" CC=arm-linux-gnueabihf-gcc CGO_LDFLAGS=\"-L/usr/local/lib -lopenblas \" go build -x rand_zgeev.go\n\nHowever, when I copy this to the arm system, it does not run:\n ./rand_zgeev\n-sh: ./rand_zgeev: not found\n\nAny ideas why this won't run?\n________________________________\nFrom: Ian Lance Taylor [notifications@github.com]\nSent: Thursday, August 04, 2016 18:51\nTo: golang/go\nCc: davem@ltsnet.net; Mention\nSubject: Re: [golang/go] cmd/go: `go env` discards all but the first word of $CC (#15457)\n\n\n@davmaz\u003chttps://github.com/davmaz\u003e This issue just talks about go env. If this affects more than that, can you show the problem in detail, or open a new issue for the problem you are having? Thanks.\n\nâ€”\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\u003chttps://github.com/golang/go/issues/15457#issuecomment-237707818\u003e, or mute the thread\u003chttps://github.com/notifications/unsubscribe-auth/AAgSBmJOyHpR6JZxYalVP8M2gg97nHi4ks5qcmzxgaJpZM4IQdm1\u003e.\n",
	"user": {
		"login": "davmaz",
		"id": 528902,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-08T20:17:34Z",
	"updated_at": "2016-08-08T20:17:34Z"
}
