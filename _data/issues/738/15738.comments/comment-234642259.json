{
	"id": 234642259,
	"body": "There is another reason your first suggestion (single build per package) won't work: in some cases the _test.go files have `init` functions that set things up for the tests, but will break things for the real package.  For example, the time package does this--see the `init` function in time/internal_test.go.\r\n\r\nIf you force the testing package to have a priority of zero, I'm a little worried about correct initialization of the testing package itself vs. packages that the testing package imports.  The testing package doesn't currently have any `init` functions but it does have some flags.  I think it's important that the flag package be initialized before the testing package's initialization function is run.\r\n\r\nThe package import graph is a DAG, and we need to run the initialization functions from the leafs up.  We actually have all the information we need to build that DAG, by reading the `import` statements in the export data.  Maybe we should just build the DAG and use it to sort the initialization functions, rather than trying to use the priority as an overly-simple workaround.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-22T20:03:00Z",
	"updated_at": "2016-07-22T20:03:00Z"
}
