{
	"id": 51288605,
	"number": 8723,
	"state": "closed",
	"title": "cmd/5l: cross-compiling on Windows 64 for arm with CGO_ENABLED=1 5l.exe always fails with \"stack overflow\" exception",
	"body": "by **mike0berg**:\n\n\u003cpre\u003eDescription:\n\ngo version go1.3.1 windows/amd64 built with x86_64-w64-mingw32 (gcc version 4.8.2),\ncross environment targeting linux/arm (cross compiler Linaro gcc version 4.8.4 20140811)\n\nWhen biding simple cgo program (go build test) on Windowss 64 targetting linux/arm:\n\npackage main\n\n/*\nchar* foo(void) { return \u0026quot;hello, world!\u0026quot;; }\n*/\nimport \u0026quot;C\u0026quot;\n\nimport \u0026quot;fmt\u0026quot;\n\nfunc main() {\n  fmt.Println(C.GoString(C.foo()))\n} \n\nlast build step (5l) always fails with 0xC00000FD - Stack overflow. Running windbg shows\nvery long stack trace (same addresses, different parameters). Checking with mingw gdb\nshows SEGFAULT.\n\nThis happens after external linked has been invoked and all work already done, basically\nduring call to errorexit() in pobj.c program segfaults on call to exit(0).\n\nIf I specify linkmode=internal build succeeds and resulting ./test properly runs on\ntargeted arm environment.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 11,
	"closed_at": "2014-12-08T10:48:20Z",
	"created_at": "2014-09-14T01:18:48Z",
	"updated_at": "2016-06-25T01:41:24Z"
}
