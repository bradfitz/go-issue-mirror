{
	"id": 51283470,
	"number": 5324,
	"state": "closed",
	"title": "Ticker change in behavior from 1.0.3 to 1.1 when GOMAXPROCS=1",
	"body": "\u003cpre\u003eSee code here:\n\u003ca href=\"http://play.golang.org/p/50TI5VuWHN\"\u003ehttp://play.golang.org/p/50TI5VuWHN\u003c/a\u003e\n\nWhat is the expected output?\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMloop: tick tsecs=1.001247, secs=1.001247, cnt=32412156\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMloop: tick tsecs=2.002406, secs=1.001159, cnt=34743305\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMloop: tick tsecs=3.001494, secs=0.999088, cnt=3168060\n\nWhat do you see instead?\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM ...\n\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\n\nWhich operating system are you using?\nMacOS X 10.7.5\n\n\nWhich version are you using?  (run 'go version')\n1.0.3\n1.1 (go version devel +13e00572ed0b Thu Apr 18 17:37:21 2013 -0700 darwin/amd64)\n\nPlease provide any additional information below.\nWith Go 1.0.3 this program works the same with GOMAXPROCS=1 or GOMAXPROC \u0026gt; 1\nWith Go 1.1 this program works the same as 1.0.3 when GOMAXPROC \u0026gt; 1\nWith Go 1.1 when GOMAXPROC=1 the Ticker never ticks.\n\nThis represents a change in behavior from 1.0.3 to 1.1.\n\nIn my mental model of the Go runtime, at least when GOMAXPROCS=1, the \u0026quot;select\u0026quot;\nstatement *must* call the scheduler to allow other goroutines to run. If this is not the\ncase, then it should be documented what one needs to do in order to get scheduling to\noccur.\n\nQuestions:\n\n1. Is it really the case that I must insert a call to runtime.Gosched() to get the\ncorrect behavior in Go 1.1? I find that a very unappealing solution to say the least.\n\n2. Are there any guarantees at the language reference specification level of what one\nmust do to prevent goroutine scheduling starvation, especially when GOMAXPROCS=1? If\nnot, should there be?\n\nThis simple program was distilled down from a larger program that does I/O and compute\nin the spot where the example does cnt++.. The larger program is collecting I/O metrics\nand the Ticker is used to decide when to collect the metrics and reset the them. With Go\n1.1 and GOMAXPROCS=1 I saw some bizarre behavior. The Ticker (set at 1s duration) would\ntick fine for 300 seconds and then it would stop for a long time. Occasionally it would\nsend something down the channel. Really it was very strange.\u003c/pre\u003e",
	"user": {
		"login": "tildeleb",
		"id": 834628,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 19,
	"closed_at": "2014-12-08T10:28:44Z",
	"created_at": "2013-04-21T07:23:32Z",
	"updated_at": "2016-06-24T22:38:30Z"
}
