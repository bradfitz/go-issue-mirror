{
	"id": 238138818,
	"body": "\u003e I did further investigations, and i cant figure it out. ...\r\n\r\nI would try to get a stack trace. For example, I made these changes:\r\n```\r\ndiff --git a/src/net/http/httptest/server.go b/src/net/http/httptest/server.go\r\nindex a2573df..12494c6 100644\r\n--- a/src/net/http/httptest/server.go\r\n+++ b/src/net/http/httptest/server.go\r\n@@ -174,7 +174,7 @@ func (s *Server) Close() {\r\n \t\t\t}\r\n \t\t}\r\n \t\t// If this server doesn't shut down in 5 seconds, tell the user why.\r\n-\t\tt := time.AfterFunc(5*time.Second, s.logCloseHangDebugInfo)\r\n+\t\tt := time.AfterFunc(5*time.Nanosecond, s.logCloseHangDebugInfo)\r\n \t\tdefer t.Stop()\r\n \t}\r\n \ts.mu.Unlock()\r\n@@ -190,6 +190,7 @@ func (s *Server) Close() {\r\n }\r\n \r\n func (s *Server) logCloseHangDebugInfo() {\r\n+\tpanic(\"AAAA\")\r\n \ts.mu.Lock()\r\n \tdefer s.mu.Unlock()\r\n \tvar buf bytes.Buffer\r\n```\r\n\r\nYou will not need to change `t := time.AfterFunc(5*time.Second, s.logCloseHangDebugInfo)` line, because your system is calling into `Server.logCloseHangDebugInfo` anyway.\r\n\r\nI also set `GOTRACEBACK` to `all` so I can see all goroutines (including system and all). I get this:\r\n```\r\nC:\\dev\\src\\issues\\issue16555\u003eset GOTRACEBACK=all\r\n\r\nC:\\dev\\src\\issues\\issue16555\u003ego run main.go\r\nHello, client\r\npanic: AAAA\r\n\r\ngoroutine 5 [running]:\r\npanic(0x62a480, 0x10a1a068)\r\n        c:/dev/go1.6/src/runtime/panic.go:464 +0x326\r\nnet/http/httptest.(*Server).logCloseHangDebugInfo(0x10a2e380)\r\n        c:/dev/go1.6/src/net/http/httptest/server.go:193 +0x58\r\nnet/http/httptest.(*Server).(net/http/httptest.logCloseHangDebugInfo)-fm()\r\n        c:/dev/go1.6/src/net/http/httptest/server.go:177 +0x20\r\ncreated by time.goFunc\r\n        c:/dev/go1.6/src/time/sleep.go:129 +0x36\r\n\r\ngoroutine 1 [semacquire]:\r\nsync.runtime_Semacquire(0x10a2e3a4)\r\n        c:/dev/go1.6/src/runtime/sema.go:47 +0x26\r\nsync.(*WaitGroup).Wait(0x10a2e398)\r\n        c:/dev/go1.6/src/sync/waitgroup.go:127 +0xa4\r\nnet/http/httptest.(*Server).Close(0x10a2e380)\r\n        c:/dev/go1.6/src/net/http/httptest/server.go:189 +0x1e7\r\nmain.main()\r\n        C:/dev/src/issues/issue16555/main.go:28 +0x2f9\r\n\r\ngoroutine 18 [runnable, locked to thread]:\r\nsyscall.Syscall(0x7c82f122, 0x1, 0x75c, 0x0, 0x0, 0x10a2e280, 0x10a13fbc, 0x554f01)\r\n        c:/dev/go1.6/src/runtime/syscall_windows.go:128 +0x4a\r\nsyscall.CancelIo(0x75c, 0x0, 0x0)\r\n        c:/dev/go1.6/src/syscall/zsyscall_windows.go:550 +0x5f\r\nnet.(*ioSrv).ProcessRemoteIO(0x10a30428)\r\n        c:/dev/go1.6/src/net/fd_windows.go:143 +0x13f\r\ncreated by net.startServer\r\n        c:/dev/go1.6/src/net/fd_windows.go:239 +0xc9\r\n\r\ngoroutine 19 [chan receive, locked to thread]:\r\nnet.(*ioSrv).ProcessRemoteIO(0x10a30430)\r\n        c:/dev/go1.6/src/net/fd_windows.go:139 +0xcc\r\ncreated by net.startServer\r\n        c:/dev/go1.6/src/net/fd_windows.go:241 +0x11e\r\n\r\ngoroutine 20 [chan receive]:\r\nnet.(*ioSrv).ExecIO(0x10a30428, 0x10a52738, 0x6c6cb0, 0x8, 0x10a020e0, 0x10aa22a0, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/fd_windows.go:210 +0x422\r\nnet.(*netFD).acceptOne(0x10a52700, 0x10aa21c0, 0x2, 0x2, 0x10a52738, 0x10a15f0c, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/fd_windows.go:583 +0x1d4\r\nnet.(*netFD).accept(0x10a52700, 0x0, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/fd_windows.go:613 +0x11f\r\nnet.(*TCPListener).AcceptTCP(0x10a30438, 0x10a15f44, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/tcpsock_posix.go:254 +0x47\r\nnet.(*TCPListener).Accept(0x10a30438, 0x0, 0x0, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/tcpsock_posix.go:264 +0x39\r\nnet/http.(*Server).Serve(0x10a4e140, 0x8b43a8, 0x10a30438, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/http/server.go:2117 +0x100\r\nnet/http/httptest.(*Server).goServe.func1(0x10a2e380)\r\n        c:/dev/go1.6/src/net/http/httptest/server.go:238 +0x66\r\ncreated by net/http/httptest.(*Server).goServe\r\n        c:/dev/go1.6/src/net/http/httptest/server.go:239 +0x50\r\n\r\ngoroutine 23 [chan send]:\r\nnet.(*ioSrv).ExecIO(0x10a30428, 0x10a52818, 0x6b2368, 0x7, 0x737108, 0x140, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/fd_windows.go:209 +0x403\r\nnet.(*netFD).Read(0x10a527e0, 0x10a59000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/fd_windows.go:482 +0x129\r\nnet.(*conn).Read(0x10a30470, 0x10a59000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/net.go:172 +0xb9\r\nnet/http.noteEOFReader.Read(0x8b5430, 0x10a30470, 0x10a50a44, 0x10a59000, 0x1000, 0x1000, 0x10a25dbc, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/http/transport.go:1683 +0x55\r\nnet/http.(*noteEOFReader).Read(0x10a8b8a0, 0x10a59000, 0x1000, 0x1000, 0x10a10000, 0x0, 0x0)\r\n        \u003cautogenerated\u003e:284 +0xae\r\nbufio.(*Reader).fill(0x10a48360)\r\n        c:/dev/go1.6/src/bufio/bufio.go:97 +0x172\r\nbufio.(*Reader).Peek(0x10a48360, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)\r\n        c:/dev/go1.6/src/bufio/bufio.go:132 +0xad\r\nnet/http.(*persistConn).readLoop(0x10a50a10)\r\n        c:/dev/go1.6/src/net/http/transport.go:1069 +0x13e\r\ncreated by net/http.(*Transport).dialConn\r\n        c:/dev/go1.6/src/net/http/transport.go:853 +0xe21\r\n\r\ngoroutine 4 [chan send]:\r\nnet.(*ioSrv).ExecIO(0x10a30428, 0x10aa2118, 0x6b2368, 0x7, 0x737108, 0x0, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/fd_windows.go:209 +0x403\r\nnet.(*netFD).Read(0x10aa20e0, 0x10aa6000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/fd_windows.go:482 +0x129\r\nnet.(*conn).Read(0x10a1a048, 0x10aa6000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/net.go:172 +0xb9\r\nnet/http.(*connReader).Read(0x10a064c0, 0x10aa6000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/http/server.go:526 +0x189\r\nbufio.(*Reader).fill(0x10a042d0)\r\n        c:/dev/go1.6/src/bufio/bufio.go:97 +0x172\r\nbufio.(*Reader).ReadSlice(0x10a042d0, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0)\r\n        c:/dev/go1.6/src/bufio/bufio.go:328 +0x1b4\r\nbufio.(*Reader).ReadLine(0x10a042d0, 0x0, 0x0, 0x0, 0x6a4100, 0x0, 0x0)\r\n        c:/dev/go1.6/src/bufio/bufio.go:357 +0x4b\r\nnet/textproto.(*Reader).readLineSlice(0x10a06520, 0x0, 0x0, 0x0, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/textproto/reader.go:55 +0x59\r\nnet/textproto.(*Reader).ReadLine(0x10a06520, 0x0, 0x0, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/textproto/reader.go:36 +0x39\r\nnet/http.readRequest(0x10a042d0, 0x0, 0x10aa01c0, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/http/request.go:721 +0x9a\r\nnet/http.(*conn).readRequest(0x10a08280, 0x0, 0x0, 0x0)\r\n        c:/dev/go1.6/src/net/http/server.go:705 +0x3b7\r\nnet/http.(*conn).serve(0x10a08280)\r\n        c:/dev/go1.6/src/net/http/server.go:1425 +0x985\r\ncreated by net/http.(*Server).Serve\r\n        c:/dev/go1.6/src/net/http/server.go:2137 +0x394\r\nexit status 2\r\n\r\nC:\\dev\\src\\issues\\issue16555\u003e\r\n```\r\n\r\nWhat do you see, if you just add `panic(\"AAAA\")` in `Server.logCloseHangDebugInfo`?\r\n\r\nAlex",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-08T04:19:05Z",
	"updated_at": "2016-08-08T04:19:05Z"
}
