{
	"id": 51279377,
	"number": 2555,
	"state": "closed",
	"title": "badVerb should not recur",
	"body": "\u003cpre\u003eThis simple code reveals an infinite print loop (reported by i3dmaster)\n\npackage main\n\nimport \u0026quot;fmt\u0026quot;\nimport \u0026quot;log\u0026quot;\nimport \u0026quot;runtime/debug\u0026quot;\n\nvar count = 0\n\ntype foo struct {\n  i int\n}\n\nfunc (f foo) String() string {\n  count++\n  if count \u0026gt; 10 {\n    debug.PrintStack()\n    panic(\u0026quot;call stack too large\u0026quot;)\n  }\n  return fmt.Sprintf(\u0026quot;foo@%p value: %d\u0026quot;, f, f.i)\n}\n\nfunc main() {\n  f := foo{i: 3}\n  // ok\n  log.Println(fmt.Sprintf(\u0026quot;foo@%p value: %d\u0026quot;, \u0026amp;f, f.i))\n\n  // inf loop\n  log.Printf(\u0026quot;foo@%p, value: %d\\n\u0026quot;, f, f.i)\n}\n\n\nr: the problem is that badVerb should not recur into the String routine.\u003c/pre\u003e",
	"user": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:13:37Z",
	"created_at": "2011-12-12T18:20:35Z",
	"updated_at": "2016-06-24T21:21:44Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
