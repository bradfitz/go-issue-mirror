{
	"id": 66079312,
	"body": "\u003ca id=\"c23\"\u003e\u003c/a\u003eComment 23:\n\n\u003cpre\u003eI think this needs to be fixed. This affects binary distribution, and, I suspect, most\nwindows users go for that option. Everything that uses symbol paths is broken on binary\ndistro. For example, (using go version go1.1.2 windows/386) this simple program\n\npackage main\n\nimport (\n    \"net/http\"\n)\n\nfunc handler(w http.ResponseWriter, r *http.Request) {\n\tpanic(\"A\")\n}\n\nfunc main() {\n    http.HandleFunc(\"/\", handler)\n    http.ListenAndServe(\":8080\", nil)\n}\n\nprints this stack trace\n\nC:\\go\\path\\mine\\src\\t\u003ego run main.go\n2013/08/21 16:03:46 http: panic serving 127.0.0.1:4668: A\ngoroutine 5 [running]:\nnet/http.funcÂ·007()\n        C:/Users/ADMINI~1/AppData/Local/Temp/2/bindist465310315/go/src/pkg/net/http/server.go:1022 +0x9e\nmain.handler(0x110403a0, 0x110154c0, 0x1101c620)\n        C:/go/path/mine/src/t/main.go:10 +0x10f\nnet/http.HandlerFunc.ServeHTTP(0x5cd9b4, 0x110403a0, 0x110154c0, 0x1101c620)\n        C:/Users/ADMINI~1/AppData/Local/Temp/2/bindist465310315/go/src/pkg/net/http/server.go:1149 +0x3b\nnet/http.(*ServeMux).ServeHTTP(0x11025b40, 0x110403a0, 0x110154c0, 0x1101c620)\n        C:/Users/ADMINI~1/AppData/Local/Temp/2/bindist465310315/go/src/pkg/net/http/server.go:1416 +0xdc\nnet/http.serverHandler.ServeHTTP(0x11016420, 0x110403a0, 0x110154c0, 0x1101c620)\n        C:/Users/ADMINI~1/AppData/Local/Temp/2/bindist465310315/go/src/pkg/net/http/server.go:1517 +0x120\nnet/http.(*conn).serve(0x110182d0)\n        C:/Users/ADMINI~1/AppData/Local/Temp/2/bindist465310315/go/src/pkg/net/http/server.go:1096 +0x652\ncreated by net/http.(*Server).Serve\n        C:/Users/ADMINI~1/AppData/Local/Temp/2/bindist465310315/go/src/pkg/net/http/server.go:1564 +0x241\nexit status 2\n\nAs you can see, all stdlib paths are as they where when Andrew built the distro - all\nrefer to his tmp directory. It looks silly.\n\nRuss was going to fix this for 1.3. But I think we should fix it for 1.2 instead. I am\nhappy to do it. The only concern I have is there many places:\n\n# pwd\n/root/go/root/src/cmd\n# grep 'static.*goroot_final' * -r\n5a/lex.c:       static char *goroot, *goroot_final;\n5c/swt.c:       static char *goroot, *goroot_final;\n6a/lex.c:       static char *goroot, *goroot_final;\n6c/swt.c:       static char *goroot, *goroot_final;\n8a/lex.c:       static char *goroot, *goroot_final;\n8c/swt.c:       static char *goroot, *goroot_final;\ngc/obj.c:       static char *goroot, *goroot_final;\n\nthat code needs to change. If I write a common function that does rewriting, is there a\nway to share that function between different commands? Where does such shared code lives?\n\nRob, you removed Go1.3 label of this issue. Why?\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-21T06:35:19Z",
	"updated_at": "2014-12-08T10:29:36Z"
}
