{
	"id": 51282174,
	"number": 4458,
	"state": "closed",
	"title": "cmd/gc: compiler accepts invalid method expressions",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\n$ cat tst.go\npackage main\n\ntype T struct {}\nfunc (T) foo() {}\n\nfunc main() {\n  av := T{};\n  pav := \u0026amp;av\n  (**T).foo(\u0026amp;pav);\n}\n$ ~/src/go/bin/go build tst.go \n# command-line-arguments\nmain.main: undefined: go.(**T).main.foo\n\n\u003ca href=\"http://play.golang.org/p/urNH8Xyx-c\"\u003ehttp://play.golang.org/p/urNH8Xyx-c\u003c/a\u003e\n\n\nWhat is the expected output?\n\nI think the correct behavior is to not accept |(**T).foo| at compile time, as the only\naccepted spellings of MethodExpressions are TypeName \u0026quot;.\u0026quot; identifier and '('\n'*' TypeName ')' identifier.\n\n\u003ca href=\"https://golang.org/issue/4457\"\u003eissue #4457\u003c/a\u003e is probably related.\n\n\nWhat do you see instead?\n\nThe file compiles, but the resulting program doesn't link.\n\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n6g\n\n\nWhich operating system are you using?\n\nOS X\n\nWhich version are you using?  (run 'go version')\n\nYesterday's:\n$ ~/src/go/bin/go version\ngo version devel +616adac0bb59 Mon Nov 26 17:17:49 2012 -0800\u003c/pre\u003e",
	"user": {
		"login": "nico",
		"id": 3487,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:23:43Z",
	"created_at": "2012-11-28T01:02:12Z",
	"updated_at": "2016-06-24T22:28:57Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
