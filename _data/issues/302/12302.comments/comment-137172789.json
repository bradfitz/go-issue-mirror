{
	"id": 137172789,
	"body": "\u003e As for the 'v' prefix, this is one place the Go way will deviate from SemVer. SemVer does not use the 'v' prefix and it's been noted that if it's there to ignore it in the implementations out there. The 'v' is a deviation from the SemVer spec. I'm not disagreeing with the deviation, just making sure it's noted.\r\n\r\nThe 'v' character is (or perhaps ought be) specified merely as a prefix to the actual semver string. It's there because (as explicitly stated in the proposal) the biggest Go projects already use it _in their VCS tags_, and (as discussed on the list beforehand) some VCS systems may balk at a tag that doesn't begin with a letter.\r\n\r\nNotably, semver.org apparently draws the same distinction, and does the same thing:\r\n\r\nhttps://cloud.githubusercontent.com/assets/114509/9638719/75c0e0da-51a8-11e5-896b-e15738ee9529.png\r\n\r\n— – -\r\n\r\n\u003e I remain concerned about the word project. This is a new idea, and not an entirely obvious one. This versioning scheme won't work if projects ever span more than one repository, or if there are two projects in one repository. Do we know those cases never happen? I can certainly imagine ways they can happen.\r\n\r\nThis was discussed on the list beforehand, but indeed, this proposal declares that one repo == one project. Certain existing repos (notably golang.org/x) are noncompliant, and would need to be split out to conform. This and other ramifications were considered to be acceptable costs for the benefit of the simplifying abstraction.\r\n",
	"user": {
		"login": "peterbourgon",
		"id": 114509,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-02T17:05:20Z",
	"updated_at": "2015-09-02T23:12:48Z"
}
