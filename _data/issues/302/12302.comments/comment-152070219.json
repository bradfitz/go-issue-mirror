{
	"id": 152070219,
	"body": "Hi @client9, thanks for your reply. I'll try to address all your points.\r\n\r\n\u003e Its not clear what problem you are actually solving or who its for.\r\n\r\nThis proposal is for people who want to consume _a_ version of a go package. As it stands today, go packages do not have versions because go packages are not released. You can pull from head, like go get does, but few find that acceptable.\r\n\r\n\u003e The use of a \"top-down\" approach and why this needs to discussed in this way.\r\n\r\nI don't understand what you mean by \"top down\". This proposal is the _absolutely_ smallest proposal I think it is possible to make; it has exactly one step -- tag your releases.\r\n\r\nIf you are referring to the use of the Go proposal process -- Go has a proposal process, I figured I'd propose something through it. I'm also working on other parts of this problem, getgb.io, as are dozens of others who have proposed their spectrum of tools.\r\n\r\n\u003e Not clear that SemVer will solve the actual problem for which I'm guessing it's OS vendor packaging issues.\r\n\r\nI'm sorry to point you back to the proposal, but that's the best explanation of why _a_ versioning methodology (the on chosen happens to be semver) is necessary. I not really able to say it in a different way.\r\n\r\n\u003e The vast majority of golang projects do this by \"git push\" and don't bother with release versions. So having a SemVer spec will do nothing for all these packages, who are free to make \"versioned releases\" but choose not to. Who is this proposal for? What problem are we solving?\r\n\r\nThere are many projects, who want to be able to depend on _a_ version of a go package, not head. At the risk of repeating myself, go packages as they stand today do not have a version number; they might be tracked in vcs with a revision number, but that is a poor proxy.\r\n\r\n\u003e No one is \"reduced to doing\" anything. Debian and Ubuntu are completely free to contact the the owner and ask him to add a release tag. Or not include the project. Or make a fork. This proposal won't make the owner add a release tag. Numerous people ask repo owners to add license files to solve various compliance issues. I don't see why this is any different or what this proposal buys us beyond being polite and asking the owner.\r\n\r\nIn a word, _convention_. Look at what our friends in Rust have with a simple convention, backed by cargo, look at what our friends in Javascript land have, with a simple convention.\r\n\r\nAll I'm asking for is a convention, an agreement that _if_ you choose to release your software, _when_ you do that you use _one_ specific tag form (I point to the utter mess not having a singular tag format has been for python). That specific form, which happens to be semver, then enables tools to consume that version information.\r\n\r\nNobody has to write to authors, nobody has to write to authors again to remind them, nobody has to write to authors to appologise that they actually need a `v` prefix, or that the author included some editorial commentary at the end of the tag which technically makes it non conformant.\r\n\r\n\u003e It sounds like OS vendors are the ones with the real problems with the status quo but this is never stated as the main issue. Is this the main use case, to make it easier for OS distributions? \r\n\r\nIt is one use case, but there are others. I outlined them in the proposal, as well as in my reply to @rsc a few comments above.\r\n\r\nThe proposal I've written represents the best way I know how to express the problem. I'm sorry if I have been unable to convince you. If you don't agree with this proposal, I doubt you have much to worry about at this point.\r\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-29T04:04:24Z",
	"updated_at": "2015-10-29T04:04:24Z"
}
