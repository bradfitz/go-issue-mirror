{
	"id": 137194851,
	"body": "@mattfarina I agree with everything you've said. I just like to build at the very least a throwaway implementation before trying to stabilize something, usually more than one.\r\n\r\ngopkg.in is very nice but as it is implemented argues for a much stronger notion of versions (major versions mean API changes, smaller versions provide compatibility), so it's interesting to this proposal in that it's different: why is it different and does it suggest any changes? Are they compatible? Are there longer term plans to add meaning to the versions in this proposal like gopkg.in? All good questions from an implementation not even spurred by the desire for this proposal.\r\n\r\n@peterbourgon I don't follow how writing code will get bogged down in standards decisions. I appreciate the tight scope of this proposal, it's great. But code could do anything and doesn't need a proposal, and it's existence could help inform a standard.\r\n\r\nI'm not going to step up to write any of the tools I want to see, so I'm going to bow out of this discussion as I don't think I have anything more to add. Thanks for hearing me out.",
	"user": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-02T18:10:40Z",
	"updated_at": "2015-09-02T18:10:40Z"
}
