{
	"id": 151548932,
	"body": "Since there is so much talk about the version being part of the import path it's worth talking about for a moment.\r\n\r\nFirst, is anyone actually doing this for publicly shared packages? I'm not aware of any but I would be interested in seeing how it's working.\r\n\r\nSecond, there is the practical developer workflow for those using GitHub or similar experiences. Let's assume you only change path based on breaking changes. In SemVer that's the major number change. That would mean major changes cause the use of a new GitHub (or other) repo for each major version increment. This would be an unusual workflow.\r\n\r\nIf the version in the path happened at a more refined level (e.g., minor or patch increments) how would that be maintainable? You wouldn't use a new repo for each minor version. That's not practical. We would end up resorting to import path rewriting. Or, is there another method I'm not thinking of.\r\n\r\nSo, why would we want to do this via a changed import path? Is there a case other than using 2 versions of a package side by side? How often is that the case in practice for the community?\r\n\r\nBeing that changing the import path due to version number changes is unusual in software development, what's the case for doing it?",
	"user": {
		"login": "mattfarina",
		"id": 62991,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-27T15:54:40Z",
	"updated_at": "2015-10-27T15:54:40Z"
}
