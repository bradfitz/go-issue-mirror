{
	"id": 161394584,
	"body": "This [proposal](https://github.com/golang/proposal/blob/master/design/12302-release-proposal.md) would ratify what many people and tools are already doing. Docker, Kubernetes, and CoreOS were mentioned. When I [wrote about tagging repositories](https://nathany.com/os-release/) **over two years ago**, there were already third-party tools that worked with the `v\u003cSemVer\u003e` format.\r\n\r\nThe fsnotify library [currently uses gopkg.in](http://gopkg.in/fsnotify.v1) to turn tagged releases into new import paths for each major version. One feature gopkg.in provides is the distinction between released code and what's sitting on master. The url http://gopkg.in/fsnotify.v1 retrieves the latest v1.x.y tag. Code sitting on master while preparing a release is not made available until tagged. It also has experimental support for prerelease versions. Adding a v2.0.0-unstable tag would provide an opt-in way to retrieve an upcoming release.\r\n\r\nWhile gopkg.in has been useful, I think it is quickly becoming unnecessary. Many people vendor code now, and GO15VENDOREXPERIMENT is further formalizing that recommendation. Everything gopkg.in provides can be replaced with tools such as [Godep](https://github.com/tools/godep) and [gb](https://getgb.io/) ***if*** they can retrieve the latest tag rather than master, or pull in prerelease versions or previous versions.\r\n\r\nGopkg.in is built on the idea of taking a common VCS practice of tagging releases and providing multiple import paths, derived from the [recommendation in the Go FAQ](https://golang.org/doc/faq#get_version). @davecheney has already [listed the issues](https://github.com/golang/go/issues/12302#issuecomment-135252971) his colleagues at Canonical had with the multiple import path approach. \r\n\r\nThere are situations where creating an entirely new library with a new name is appropriate. But for bumping a major version to remove deprecated APIs, there are better alternatives to \"create a new package with a new import path\", and I believe the FAQ deserves an update.\r\n\r\nProviding more visibility into \"a release process for Go repositories\" will allow third-party tools to start expecting `v\u003cSemVer\u003e` tags, using them to benefit their users. \r\n\r\nUpdating [GoDoc.org](https://godoc.org/) to show documentation for any version may or may not be worth the effort involved. A more reasonable start would be to simply display the version number for the most current release. That will help make this recommendation to tag releases more visible. The distinction between tagged and untagged repositories could also be used to help ranking, by boosting released libraries higher than hobby projects.\r\n\r\nWhat comes after that? I don't know the future, but I believe this is a good step, and one worth taking. Thanks @davecheney.\r\n",
	"user": {
		"login": "nathany",
		"id": 4566,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-02T18:45:11Z",
	"updated_at": "2015-12-02T19:04:04Z"
}
