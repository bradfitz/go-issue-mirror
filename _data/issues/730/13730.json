{
	"id": 123875977,
	"number": 13730,
	"state": "closed",
	"title": "Reading a huge file line-by-line, Go is eightfold slower than PHP7?",
	"body": "@lixuancn started a thread (in Chinese) at astaxie/build-web-application-with-golang#578, saying that he has written two equivalent programs, one in Go, one in PHP, to read a 13GB text file, split by space into an array, and sum up one of the fields.\r\n\r\nHe asked the same question on http://www.oschina.net/question/938918_2145778 with posted source code.  The rough benchmark that he posted is as follows:\r\n\r\n\u003e Go: 300 seconds\r\n\u003e PHP5.6: 200 seconds\r\n\u003e PHP7: 47 seconds\r\n\r\nAnother user did a similar test, albeit on a much smaller 200MB file, and noticed that:\r\n\r\n* Go, `bufio.ReadBytes('\\n')`: 0.6 second\r\n* Go, `bufio.ReadLine()`: 0.1 second\r\n* PHP: 5.5.9-1ubuntu4.9, Zend Engine v2.5.0: 0.3 second\r\n\r\nYet another noted that the discrepancy between `Readline()` and `ReadBytes('\\n')` may have to do with the fact the latter does an extra copy operation.\r\n\r\nI have not done any testing personally—No, @liuxuancn did not provide actual test data—but if @lixuancn's test result that Go could be eightfold slower than PHP7 is indeed true, that is rather disconcerting indeed.\r\n\r\nIf `ReadBytes('\\n')` were indeed 6 times slower than `ReadLine()`, then perhaps the following \"advice\" in https://golang.org/pkg/bufio/#Reader.ReadLine is not too be relied on in performance-critical situation?\r\n\r\n\u003e ReadLine is a low-level line-reading primitive. Most callers should use ReadBytes('\\n') or ReadString('\\n') instead or use a Scanner.\r\n\r\nSorry for not digging into this further, but I thought I should report this issue here.\r\nHope you can point out any possible way of optimizing @liuxuancn's code, or see if any optimization can be done in Go itself.\r\n\r\nMany thanks!\r\nAnthony",
	"user": {
		"login": "anthonyfok",
		"id": 1274764,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2015-12-25T14:09:17Z",
	"created_at": "2015-12-25T12:00:19Z",
	"updated_at": "2015-12-28T02:40:58Z"
}
