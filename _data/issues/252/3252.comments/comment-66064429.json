{
	"id": 66064429,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eHere's a program which uses archive/zip to read a good zip file (cli.zip) and writes a\nbad copy of it (go.zip).\n\npackage main\n\nimport (\n\t\"archive/zip\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\tf, err := os.Open(\"cli.zip\")\n\tif err != nil {\n\t\tlog.Fatalf(\"open: %v\", err)\n\t}\n\tfi, _ := f.Stat()\n\tr, err := zip.NewReader(f, fi.Size())\n\tif err != nil {\n\t\tlog.Fatalf(\"NewReader: %v\", err)\n\t}\n\tos.Remove(\"go.zip\")\n\toutf, err := os.Create(\"go.zip\")\n\tif err != nil {\n\t\tlog.Fatalf(\"Create: %v\", err)\n\t}\n\tzw := zip.NewWriter(outf)\n\tfor _, zf := range r.File {\n\t\tw, err := zw.CreateHeader(\u0026zf.FileHeader)\n\t\tif err != nil {\n\t\t\tlog.Fatalf(\"CreateHeader: %v\", err)\n\t\t}\n\t\trc, err := zf.Open()\n\t\tif err != nil {\n\t\t\tlog.Fatalf(\"zf.Open: %v\", err)\n\t\t}\n\t\tn, err := io.Copy(w, rc)\n\t\tlog.Printf(\"copyed %d bytes\", n)\n\t\tif err != nil {\n\t\t\tlog.Fatalf(\"io.Open: %v\", err)\n\t\t}\n\t}\n\tzw.Close()\n}\n\nGood and bad zips are attached.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/3252/1/cli.zip\"\u003ecli.zip\u003c/a\u003e (314 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/3252/1/go.zip\"\u003ego.zip\u003c/a\u003e (330 bytes)",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-03-09T01:13:52Z",
	"updated_at": "2014-12-08T10:16:54Z"
}
