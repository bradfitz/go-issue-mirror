{
	"id": 51286239,
	"number": 7137,
	"state": "closed",
	"title": "spec: evaluation order and initialization order specs are in contradiction",
	"body": "\u003cpre\u003e\u003ca href=\"http://tip.golang.org/ref/spec#Order_of_evaluation\"\u003ehttp://tip.golang.org/ref/spec#Order_of_evaluation\u003c/a\u003e says that function calls (etc) are\nevaluated in left-to-write order in assignments.\n\n\u003ca href=\"http://tip.golang.org/ref/spec#Program_execution\"\u003ehttp://tip.golang.org/ref/spec#Program_execution\u003c/a\u003e says that top-level variables are\ninitialized in the order of their dependencies.\n\nHere's an example where these rules contradict each other:\n\n\u003ca href=\"http://play.golang.org/p/Tg-9f8zlNy\"\u003ehttp://play.golang.org/p/Tg-9f8zlNy\u003c/a\u003e\n\nBy the section on evaluation order, f should be called before g, but by the section on\ninitialization order, g must be called before f, and that is what's happening.\n\nThe section on evaluation order needs to be amended.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"closed_at": "2014-12-08T10:39:40Z",
	"created_at": "2014-01-16T19:22:19Z",
	"updated_at": "2016-06-25T01:25:43Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
