{
	"id": 51278936,
	"number": 2243,
	"state": "closed",
	"title": "exec.Command can't get exit code from batch files on windows.",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n1.put test.go and test.bat in same directory.\n2.compile test.go \u0026amp; run.\n\nWhat is the expected output?\n\nfalse\ntrue\nfalse\ntrue\n\n\nWhat do you see instead?\n\ntrue\ntrue\nfalse\ntrue\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n8g\n\nWhich operating system are you using?\n\nWindowsXP SP3\n\nWhich revision are you using?  (hg identify)\n\n5323e969c66a+ tip\n\nPlease provide any additional information below.\n\n\u003ca href=\"https://groups.google.com/d/topic/golang-dev/ujtLlrp8e_c/discussion\"\u003ehttps://groups.google.com/d/topic/golang-dev/ujtLlrp8e_c/discussion\u003c/a\u003e\n\nThis cause:\n1. Batch files don't pass exit code to parent process.\n   You can only get %ERRORLEVEL%.\n2. Batch file is kicked with new console in cmd.exe.\n3. If use 'call' command, cmd.exe can get the exit code.\n\nSee LINE3 and LINE4 in test.go.\nThey can get exit code from batch files.\n\nAnd 'call' command is used for 'exe' files.\n\nThus, go have to better to provide new Command object.\nFor example,\n\n  out, err := exec.ShellCommand(command).ConbineOutput()\n\nThis object runs command with \u0026quot;cmd.exe /c call\u0026quot;.\n\nFor unix, it works with \u0026quot;sh -c \u0026quot;\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/2243/0/test.bat\"\u003etest.bat\u003c/a\u003e (23 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/2243/0/test.go\"\u003etest.go\u003c/a\u003e (351 bytes)",
	"user": {
		"login": "mattn",
		"id": 10111,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 17,
	"closed_at": "2014-12-08T10:12:04Z",
	"created_at": "2011-09-09T03:39:58Z",
	"updated_at": "2016-06-24T19:34:34Z"
}
