{
	"id": 96848718,
	"body": "sent a CL https://go-review.googlesource.com/#/c/9375/ \r\n\r\nWould it be OK to break parsing of certificates generated with the previous / \"buggy\" version of crypto/ssh?  Do we need to introduce some sort of backward compatibility?  We can  \"sniff\" the type of certiicate (old vs new) by checking if the second 4-byte group has (the value of the first 4-byte)-4, if yes, consider it \"new\" = \"fixed\" format, otherwise \"old\" and \"broken\".  If an \"old format\" certificate is detected, we could give a warning asking to regenerate certificates with the new version and verify them with ssh-keygen (which does not work with the \"old\" format if critical options are involved).\r\n\r\nBut maybe it affects very small group of people and it is OK to give a parsing error?  If so, maybe it would be worth to give a heads-up to golang-dev and golang-nuts (something like \"[ANN] certificate format modified in the upcoming release of x/crypto/ssh\")?",
	"user": {
		"login": "dmitris",
		"id": 31205,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-27T23:19:26Z",
	"updated_at": "2015-04-27T23:19:26Z"
}
