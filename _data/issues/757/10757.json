{
	"id": 74400488,
	"number": 10757,
	"state": "closed",
	"title": "Provide a builtin for population counting / hamming distance",
	"body": "This feature was requested before https://github.com/golang/go/issues/4988 but the bug was closed as WAI. I believe having popcnt part of standard library would benefit greatly many libraries.\r\n\r\nFor example there are two popcnt implementation in the golang tools:\r\nhttps://github.com/golang/go/blob/dev.ssa/src/cmd/internal/ssa/regalloc.go#L39\r\nhttps://github.com/golang/tools/blob/master/container/intsets/util.go#L22\r\n\r\nIt is also provided by several third party libraries\r\nhttp://go-search.org/search?q=popcnt\r\nhttp://go-search.org/search?q=popcount\r\n\r\nThese implementation are incomplete: the libraries provide assembly for one platform (amd64 in the best case), may not be not inlined (function call will dominate the benchmarks http://stackoverflow.com/questions/25471369/performance-discrepancy-in-compiled-vs-hand-written-assembly), are not well test, or are under a restrictive licence. \r\n\r\nThere is also a long standing bug https://github.com/golang/go/issues/4816 which requests the POPCNT instruction on amd64. With POPCNT instruction population counting can be turned into a single instruction similarly to math.Sqrt (https://go-review.googlesource.com/#/c/8465/).\r\n\r\npopcnt is very often used by chess, go (the game), checkers engines, all of them would benefit from a fast popcnt. https://github.com/golang/go/issues/7357 provides another real word usage. Also a Go developer expressed his wish for popcnt (and other similar operations) to be provided by the standard library (https://go-review.googlesource.com/#/c/9761/1/src/cmd/internal/ssa/regalloc.go@41).\r\n\r\n",
	"user": {
		"login": "brtzsnr",
		"id": 57079,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2015-05-08T17:26:14Z",
	"created_at": "2015-05-08T15:25:44Z",
	"updated_at": "2016-06-25T02:07:57Z"
}
