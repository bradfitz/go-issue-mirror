{
	"id": 95720172,
	"number": 11757,
	"state": "closed",
	"title": "net/http: ServeMux unexpectedly redirecting to add trailing slash",
	"body": "`http.ServeMux` unexpectedly redirects to add a trailing slash if there is a route that matches with a trailing slash.\r\n\r\nGiven the following `ServeMux`, I expect that a request for `/a` would match the path rooted as `/`.\r\n\r\n```go\r\nhttp.HandleFunc(\"/\", ...)\r\nhttp.HandleFunc(\"/a/\", ...)\r\n```\r\nInstead, a 301 redirect is returned redirecting to `/a/` (see http://play.golang.org/p/65Skm2I5hq).\r\n\r\nThe docs describe redirects as happening in path sanitization cases (ie: requests with `.` or `..` elements), but no mention of transparently adding slashes. The docs also describe the match as a `\"rooted subtree\"` so it's also unexpected that a pattern for `/a/` would affect requests that don't have that prefix (ie: w/o the trailing slash).\r\n\r\nIn researching if this situation was reported before, I found a mailing list from 2010 implying this [was expected](https://groups.google.com/d/msg/golang-nuts/P-uq-cN4tjA/Mw9Ns2no35gJ) as well as a [code comment](http://golang.org/src/net/http/server.go#L1566). If that is still the case, then i think the docs should reflect that. (though i personally consider this a bug, i could understand that for some this could be a feature).\r\n",
	"user": {
		"login": "jehiah",
		"id": 45028,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2015-12-17T17:03:22Z",
	"created_at": "2015-07-17T18:54:49Z",
	"updated_at": "2015-12-17T17:03:22Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
