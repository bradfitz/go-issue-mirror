{
	"id": 150758649,
	"body": "I don't think midnight is a compelling example. The vast majority of truncation/rounding of times happens on units of 1 hour or smaller, and those are typically not sensitive to time zone. Round and Truncate had to specify a zone for calls that pass in larger durations, but it does not seem to be worth additional methods.\n\nFor the motivating example of finding midnight, truncation doesn't even work. The obvious call is Truncate(24*time.Hour). That means to return a time that is a multiple of 24 hours since some base time (presumably derived from the location). But in any location with daylight savings, if you just consider times that are 24 hours apart from each other starting with some midnight, for half the year you'll be getting 11pm or 1am depending on when you started and where you are.\n\nIf you want to find midnight (or in general change to a specific time on the same day), use:\n\n\tyy, mm, dd := t.Date()\n\tt = time.Date(yy, mm, dd, 0, 0, 0, 0, t.Location())",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-24T05:36:03Z",
	"updated_at": "2015-10-24T05:36:03Z"
}
