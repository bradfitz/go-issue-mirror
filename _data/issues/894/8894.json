{
	"id": 51288839,
	"number": 8894,
	"state": "open",
	"title": "runtime: replace span freelist with free bitmap",
	"body": "\u003cpre\u003eThe slowest parts of mallocgc and sweeping are freelist manipulation.\nThe idea is to replace the freelist with bitmap of free blocks. For spans with objects\n\u0026gt;= 128 bytes, we allocate an additional word in MSpan for this; for spans \u0026lt; 128\nbytes, we reserve the necessary amount of words at the end of the span.\n\nHere is a prototype CL:\n\u003ca href=\"https://golang.org/cl/113640043/\"\u003ehttps://golang.org/cl/113640043/\u003c/a\u003e\n\nThis has several advantages:\n1. We always allocate in memory order.\n2. We don't touch MSpan nor memory blocks themselves in mallocgc (freemap is cached in\nMCache).\n3. We don't touch blocks at all in MSpan_Sweep (only mark bits and free bitmap).\n4. We don't work with linked lists in MSpan_Sweep.\n5. We don't walk freelist in MSpan_Sweep to mark already free objects (bitmap set is\nidempotent).\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"comments": 2,
	"created_at": "2014-10-07T12:56:28Z",
	"updated_at": "2015-04-14T19:45:25Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
