{
	"id": 110745404,
	"number": 12894,
	"state": "closed",
	"title": "runtime: gcAssistAlloc can call itself recursively",
	"body": "This occurs in Go 1.5.1 possibly 1.5.0 as well.\r\ngcAssistAlloc may decide to sleep for 200us. This results in allocating a timer object and eventually ending up in gcAssistAlloc again.\r\n\r\ngcAssistAlloc -\u003e time.Sleep -\u003e builtin.new -\u003e mallocgc -\u003e gcAssistAlloc -\u003e ...\r\n\r\nsanitized snippet from debug/pprof/heap?debug=1\r\n    #       0x123456        time.Sleep+0x37                 go/gc/src/runtime/time.go:53\r\n    #       0x123456        runtime.gcAssistAlloc+0x23e     go/gc/src/runtime/mgcmark.go:295\r\n    #       0x123456        runtime.mallocgc+0x535          go/gc/src/runtime/malloc.go:711\r\n    #       0x123456        runtime.newobject+0x42          go/gc/src/runtime/malloc.go:760\r\n    #       0x123456        time.Sleep+0x37        go/gc/src/runtime/time.go:53\r\n    #       0x123456        runtime.gcAssistAlloc+0x23e     go/gc/src/runtime/mgcmark.go:295\r\n    #       0x123456        runtime.mallocgc+0x535       go/gc/src/runtime/malloc.go:711\r\n    #       0x123456        runtime.newobject+0x42      go/gc/src/runtime/malloc.go:760",
	"user": {
		"login": "deft-code",
		"id": 1154883,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"closed_at": "2015-10-16T19:14:52Z",
	"created_at": "2015-10-09T22:22:14Z",
	"updated_at": "2016-10-17T08:03:08Z",
	"milestone": {
		"id": 1295987,
		"number": 27,
		"title": "Go1.5.2"
	}
}
