{
	"id": 111229130,
	"number": 12919,
	"state": "open",
	"title": "time: Parse too greedy when parsing some formats",
	"body": "1. What version of Go are you using (`go version`)?\r\n\r\n    `$ go version go version devel +2d823fd Tue Oct 13 01:04:42 2015 +0000 linux/amd64`\r\n\r\n2. What operating system and processor architecture are you using?\r\n\r\n    linux/amd64\r\n\r\n3. What did you do?\r\n\r\n    Attempted to parse this time: `\"618 AM MDT TUE OCT 13 2015\"` with this format string: `\"304 PM MST Mon Jan 02 2006`\"\r\n\r\n4. What did you expect to see?\r\n\r\n    No parsing error, and a time.Time representing that moment.\r\n\r\n5. What did you see instead?\r\n\r\n    The parsing fails, and the error reported: `parsing time \"618 AM MDT TUE OCT 13 2015\": hour out of range`.  The hour is interpreted as `61`.\r\n\r\n    The format works properly with a two digit hour.  It seems `getnum()` in time/format.go takes up to two characters whenever the second character is valid which leads to the issue.\r\n\r\n6. Playground example with examples that fail and pass for the given format:\r\n\r\n    http://play.golang.org/p/mZ-m7gJlvy\r\n\r\nApologies if my code is messy...\r\n\r\nThe format is used as a time/version stamp for the US National Weather Service in their forecast discussion products, for a real world example, http://www.wrh.noaa.gov/total_forecast/getprod.php?wfo=boi\u0026pil=AFD\u0026sid=BOI\u0026version=1\r\n\r\nThank you.",
	"user": {
		"login": "ksshannon",
		"id": 791821,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"created_at": "2015-10-13T17:28:44Z",
	"updated_at": "2015-10-22T09:01:55Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
