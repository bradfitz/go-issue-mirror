{
	"id": 51287346,
	"number": 7879,
	"state": "closed",
	"title": "question about the channel",
	"body": "by **jikai507**:\n\n\u003cpre\u003epackage main\n\nimport (\n\t\u0026quot;fmt\u0026quot;\n)\n\nfunc foo(ch chan string) {\n\tdefer func() {\n\t\tch \u0026lt;- \u0026quot;finish\u0026quot;\n\t}()\n\n\t// do some process\n\t// ...\n}\n\nfunc main() {\n\tch := make(chan string)\n\tfor i := 0; i \u0026lt;= 100; i++ {\n\t\tch \u0026lt;- \u0026quot;start\u0026quot;\n\t\tgo foo(ch)\n\t}\n\n\tvar (\n\t\tmsg        string\n\t\tallroutine int\n\t\tfinished   int\n\t)\n\t// In this loop, I record two flags of goroutines.\n\t// If a routine start, a \u0026quot;start\u0026quot; message will emit \n\t// to the channel.\n\t// If a routine finish, a \u0026quot;finish\u0026quot; message will emit\n\t// to the channel.\n\t// The variable allroutine always bigger than variable\n\t// finished because routine first start and finish\n\t// later.\n\t// If finished equal to the allroutine, it means\n\t// that all routines finished already. \n\tfor {\n\t\tmsg = \u0026lt;-ch\n\t\tif msg == \u0026quot;start\u0026quot; {\n\t\t\tallroutine++\n\t\t}\n\t\tif msg == \u0026quot;finish\u0026quot; {\n\t\t\tfinished++\n\t\t}\n\t\tfmt.Println(\u0026quot;allroutine:\u0026quot;, allroutine, \u0026quot;finished:\u0026quot;, finished)\n\t\tif finished == allroutine {\n\t\t\tbreak\n\t\t}\n\t}\n}\n\n\nWhat does 'go version' print?\ngo v1.2.1\n\nWhat happened?\ndeadlock...\n\nWhat should have happened instead?\nIt will finished with the output \u0026quot;allroutine: 100 finished: 100\u0026quot;.\n\nPlease provide any additional information below.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:43:43Z",
	"created_at": "2014-04-27T13:09:41Z",
	"updated_at": "2016-06-25T01:33:13Z"
}
