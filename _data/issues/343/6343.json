{
	"id": 51285041,
	"number": 6343,
	"state": "closed",
	"title": "runtime: scheduling problem with time.Sleep",
	"body": "by **kerridgejon**:\n\n\u003cpre\u003eThe code is as follows\n\npackage main \n\nimport (\n\t\u0026quot;fmt\u0026quot;\n//\t\u0026quot;time\u0026quot;\t \n)\n\nfunc Prefix(in chan int,\n\tout chan int,\n\tinitial int) {\n\tout \u0026lt;- initial\n\tfor {\n\t\tout \u0026lt;- (\u0026lt;-in)\n\t}\n}\n\nfunc Plus1(in chan int,\n\tout chan int) {\n\tfor {\n\t\tout \u0026lt;- (\u0026lt;-in) + 1\n\t}\n}\n\nfunc SendValue(value int,\n\tout chan int) {\n\tout \u0026lt;- value\n}\n\nfunc Copy2(in chan int,\n\tout1 chan int,\n\tout2 chan int) {\n\tfor {\n\t\tv := \u0026lt;-in\n\t\tgo SendValue(v, out1)\n\t\tgo SendValue(v, out2)\n\t}\n}\n\nfunc Delay(in chan int,\n\tout chan int ) {\n\tfor {\n\t\tout \u0026lt;- (\u0026lt;- in)\n// A\t\ttime.Sleep(time.Second) \n\t}\n} \n\nfunc main() {\n\ta := make(chan int)\n\tb := make(chan int)\n\tc := make(chan int)\n\td := make(chan int)\n\te := make(chan int)\n\tfmt.Printf(\u0026quot;Starting\\n\u0026quot;)\n\tgo Prefix(c, a, 1)\n\tgo Copy2(a, b, d)\n\tgo Plus1(b, c)\n\tgo Delay(d, e)\n\tfor {\n\t\tfmt.Printf(\u0026quot;%v\\n\u0026quot;, \u0026lt;-e)\n// B\t\ttime.Sleep(time.Second) \n\t}\n\tfmt.Printf(\u0026quot;terminating\\n\u0026quot;)\n}\n\n\n\n\n\nWhat is the expected output?\nIf the program is run as is it works producing a stream in increasing integer values. \nThe program is  stopped by ctrl-C as all the go routines are forever loops!  I would\nnever expect to see the line 'terminating'\n\nWhat do you see instead?\nif the  time import is enabled and either or both the lines with the //A or //B comments\nare enabled then the program prints\n\nStarting\n1\n\nand then hangs ; nothing will interrupt the running of the program ctrl-C does not work\nnor does ctrl-alt-del.  The only way I can stop the program is to switch the computer\noff.  The front 'restart' button does not work either.\n\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\nMSI installer version for windows\n\nWhich operating system are you using?\nWindows 7\n\nWhich version are you using?  (run 'go version')\nVersion used to generate problem including a run of hello.go to show it is working!\n\nD:\\GOfiles\u0026gt;go version\ngo version go1.1.2 windows/amd64\n\nD:\\GOfiles\u0026gt;go run hello.go\nhello, world\n\nD:\\GOfiles\u0026gt;\n\n\nPlease provide any additional information below.\nThe aim of the go routine delay is to introduce a one second delay into the stream of\nintegers so that you can see the numbers appearing more easily.  \nAs you can see I am trying to rewrite some simple Occam derived processes as go\nroutines.  My intention is to deliver my current module in concurrent and parallel\nprogramming using JCSP to use go but I seem to have fallen at the first hurdle!\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 7,
	"closed_at": "2014-12-08T10:34:54Z",
	"created_at": "2013-09-06T15:50:57Z",
	"updated_at": "2016-06-25T01:18:19Z"
}
