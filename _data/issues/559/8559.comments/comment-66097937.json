{
	"id": 66097937,
	"body": "\u003ca id=\"c11\"\u003e\u003c/a\u003eComment 11:\n\n\u003cpre\u003eSorry if I haven't been clear.  I understand how it currently works -- a main package is\nimported (by the runtime) using two different paths depending on whether it is built as\na command or imported into another package.  What is not clear to me is _why_ it is done\nthis way.  Why do they need to be different packages?\n\nI guess I'm missing some important detail, but this is how I see it:  One feature is\nthat you can import a package using different paths (thus producing different packages\nfor the same code).  Another feature is that a package can be imported or it can run the\nprogram.  The problem with the current implementation, in my mind, is that it couples\nthese two features, making them in effect non-orthogonal when they should be orthogonal.\n They are coupled at the point of package main:  When I build a package main to run the\nprogram, I no longer get to choose the import path (it's just \"main\").\n\nWhat is the purpose of making the import path == \"main\"?\u003c/pre\u003e",
	"user": {
		"login": "gordonklaus",
		"id": 1638352,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-08-22T06:15:28Z",
	"updated_at": "2014-12-08T10:47:32Z"
}
