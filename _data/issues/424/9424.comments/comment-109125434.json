{
	"id": 109125434,
	"body": "Hi guys!\r\n\r\nJust wanted to share that this issue is happening to me. I started receiving as error value \"EOF\".\r\n\r\n```bash\r\ngo version go1.4.2 darwin/amd64\r\n```\r\n\r\nI copied this Google go-github [Do function](https://github.com/google/go-github/blob/master/github/github.go#L296-L323) and made little modifications to it like: \r\n\r\n```go\r\nfunc (c *Client) Do(req *http.Request, v interface{}) (*http.Response, error) {\r\n  tr := \u0026http.Transport{\r\n   TLSClientConfig:    \u0026tls.Config{InsecureSkipVerify: true},\r\n   DisableCompression: true,\r\n  }\r\n\r\n  client := \u0026http.Client{Transport: tr}\r\n\r\n  resp, err := client.Do(req)\r\n  ...\r\n```\r\n\r\nI have even followed the go-github implementation creating a `http.Client` and assigning it to a property in the `Client` struct to see if initializing client just once would make any change. But no matter what I do, I keep receiving that value specifically [while checking err returned by Do](https://github.com/google/go-github/blob/master/github/github.go#L297-L300).\r\n\r\nThe thing is that this code worked, I am working with an API and I test using curl and it works and somehow I just continued adding more code that worked with that `Do` method and it just started to return `EOF` (yeah, I now how stupid that sounds). I am new coding in Go and I don't know how to debug or find what is causing this issue. What's weird for me is this:\r\n\r\n```go\r\n  resp, err := c.client.Do(req)\r\n  fmt.Println(resp) // has the response: \u0026{201 Created 201 HTTP/1.0 1 0....\r\n  if err != nil {\r\n    fmt.Println(\"failed do...\")\r\n    return nil, err\r\n  }\r\n```\r\nThe response is actually there, so can you please point me out where could be a good place to start researching about this?\r\n\r\nThanks and sorry for this newbie question, but I am blank right now.",
	"user": {
		"login": "vanhalt",
		"id": 1271610,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-05T02:04:20Z",
	"updated_at": "2015-06-05T02:04:20Z"
}
