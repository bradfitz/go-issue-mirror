{
	"id": 67920062,
	"body": "Use a type assertion to see if the error value implements Temporary() bool\r\nor Timeout() bool, and if it does, use that method to choose to retry or\r\nnot.\r\nOn 23 Dec 2014 13:48, \"Bryan C. Mills\" \u003cnotifications@github.com\u003e wrote:\r\n\r\n\u003e @davecheney \u003chttps://github.com/davecheney\u003e It is not possible to use\r\n\u003e http.Client robustly without being able to check for (and retry) temporary\r\n\u003e errors, which are not part of the method's signature. Unless you are\r\n\u003e proposing a broader refactoring to move the retry logic into the Client\r\n\u003e implementation, documenting errors is about the best we can do.\r\n\u003e\r\n\u003e I can understand not wanting to promise that http.Client returns only\r\n\u003e certain errors (e.g. only url.Error), but it should at least have some\r\n\u003e indication in that direction. Without knowing to check for that and\r\n\u003e net.Error, one cannot implement anything resembling a reasonable\r\n\u003e caller-side retry loop.\r\n\u003e\r\n\u003e â€”\r\n\u003e Reply to this email directly or view it on GitHub\r\n\u003e \u003chttps://github.com/golang/go/issues/9424#issuecomment-67916782\u003e.\r\n\u003e",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-23T04:04:47Z",
	"updated_at": "2014-12-23T04:04:47Z"
}
