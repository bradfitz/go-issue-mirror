{
	"id": 51282431,
	"number": 4648,
	"state": "closed",
	"title": "spec: order of initialization needs more detail",
	"body": "\u003cpre\u003eThis section of the spec:\n\u003ca href=\"http://golang.org/ref/spec#Program_initialization_and_execution\"\u003ehttp://golang.org/ref/spec#Program_initialization_and_execution\u003c/a\u003e states that 'var'\ndeclarations are initialized in topological order, tracing through functions and\ndefinitions.  (The term used is \u0026quot;data-dependent\u0026quot; order which I think is\nincorrect because the order is an entirely static property of the topology of the\nreference graph, not dependent on values.)\n\nIt says that two items not related by this partial order are initialized \u0026quot;in the\norder they appear in the source\u0026quot;.  I assume (and gri and iant concur) that this is\nanother partial order such that two vars in the same file are ordered but two vars in\ndifferent files of the same package are unordered.  It would be good to be more explicit\nabout this.\n\niant adds: \u0026quot;Since there\nis no explicit dependence between the variables in different files, in\nprinciple it should not matter what order they are initialized in,\nalthough of course it is possible to construct cases where it does\nmatter.\u0026quot;\u003c/pre\u003e",
	"user": {
		"login": "adonovan",
		"id": 5658175,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:24:39Z",
	"created_at": "2013-01-11T19:45:25Z",
	"updated_at": "2016-06-24T22:31:07Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
