{
	"id": 169987726,
	"body": "\u003e It's not clear to me why we should cater to poorly-written programs, thereby decreasing their incentive to move to the go.sys package even more.\r\n\r\nOk, I didn't know about go.sys. However, the same problems are there too. People who need Epoll will use EpollCreate() instead of EpollCreate1() because nothing hints that the former is deprecated. We can:\r\n\r\n1) whenever a arm64 user compiles the affected code, send a patch upstream to change it\r\n- this is the current somewhat inconvenient state\r\n2) add a EpollCreate -\u003e EpollCreate1 wrapper to go.sys \r\n- this is the \"cater poorly written programs choice\"\r\n3) remove legacy syscalls like EpollCreate from go.sys\r\n- this breaks backward compatibility\r\n\r\nI would assume 2, is preferred choice, since the current arm64 has a bunch already, example:\r\n\r\nhttps://github.com/golang/sys/blob/master/unix/syscall_linux_arm64.go#L132",
	"user": {
		"login": "suihkulokki",
		"id": 4199201,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-08T12:39:52Z",
	"updated_at": "2016-01-08T12:39:52Z"
}
