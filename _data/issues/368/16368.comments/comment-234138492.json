{
	"id": 234138492,
	"body": "\u003e\u003e I was thinking of the case where someone has GOOS set in their environment already, and it will be passed through no matter which file the go:generate is in.\r\n\u003e I don't understand the scenario you are describing. Please provide a particular example.\r\n\u003e \r\n\u003e We use \"go run ...\" command here. So if you set GOOS != GOHOSTOS, then it will not work - you will get confusing error message just like mine above.\r\n\r\nI was thinking of:\r\n\r\n```\r\nexport GOOS=windows\r\ngo generate std\r\ngo build std\r\n```\r\n\r\nor something along those lines. I was thinking that a fix would be to make the go:generate comment be something like\r\n\r\n```\r\nenv GOOS=$GOHOSTOS  GOARCH=$GOHOSTARCH go run ...\r\n```\r\n",
	"user": {
		"login": "quentinmit",
		"id": 115761,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-21T02:17:24Z",
	"updated_at": "2016-07-21T02:17:24Z"
}
