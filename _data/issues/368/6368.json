{
	"id": 51285083,
	"number": 6368,
	"state": "closed",
	"title": "cmd/cgo: struct size calculation error OS X 10.9 Mavericks",
	"body": "by **mazdak@chango.com**:\n\n\u003cpre\u003eOn OS X 10.9 Mavericks, when building the following code snippet, I get the following\nerror:\n\n# command-line-arguments\nxxxx.go:190:12: struct size calculation error off=40 bytesize=32\n\nThe same go file (which is actually a cgo file) works on older versions of OS X and\nLinux.\n\nTo assist, here is a snippet that reproduces the above problem:\n\n----------\n\npackage main\n\n/*\n\n#include \u0026lt;stdlib.h\u0026gt;\n\nenum ct { A = 0x00, B = 0x01};\ntypedef enum ct ct;\n\ntypedef struct cobject_s {\n  enum ct    type;\n  size_t      sz;\n  union {\n    char    *str; // note for str: sz is strlen (not strlen+1\n    void    *blob;\n    int64_t   i64;   // easiest to have one large int type\n  } u;\n\n  void *free; // if this is set, this must be freed on destructuion\n\n} cobject;\n\n\ntypedef struct cbin_s {\n  char    bin_name[32];\n  cobject object;\n} cbin;\n\n*/\nimport \u0026quot;C\u0026quot;\n\nfunc main() {\n\tvar a C.cbin\n}\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 7,
	"closed_at": "2014-12-08T10:35:04Z",
	"created_at": "2013-09-11T18:59:48Z",
	"updated_at": "2016-06-25T01:18:33Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
