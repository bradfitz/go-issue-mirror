{
	"id": 180456467,
	"body": "On Thu, Feb 4, 2016 at 8:17 PM, Kevin Gillette \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e type unexported struct { X string }\n\u003e\n\u003e func DoSomething(opts unexported) {}\n\u003e\n\u003e A more convoluted example which does get at your point might be:\n\ntype unexportedA struct { X string }\ntype unexportedB struct { Y unexportedA }\n\nfunc DoSomething(opts unexportedB) {}\n\nI don't believe it is currently possible to call that function from outside\nits package. (Other than, maybe, by using reflection.)\n\nI'm inclined to say that it if we permitted eliding the type on composite\nliterals, it would be less complicated to allow calling that function with\nDoSomething({}) than to prohibit it.\n",
	"user": {
		"login": "neild",
		"id": 52544,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-05T17:32:20Z",
	"updated_at": "2016-02-05T17:32:20Z"
}
