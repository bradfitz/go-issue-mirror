{
	"id": 66094070,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eThe problem that triggered this issue is in a WAN optimization tool we've written.\n\nIt consists of 2 parts, an HTTP server that sits on our edge caches and a HTTP client\nthat sits on the client network. We get a request on the server, do some magic on the\nrequest and then send it to the client.\n\nOn the client end, we convert the request it into the original form and send the it to\nthe origin server.\n\nThe problem comes when we need to use TLS to reach the origin HTTP server. We can't rely\non the original hostname (it points to our edge caches), so we send along a hostname for\nthe backend with the request and then dial to that instead. Since the customer has set\nup their certs to their public name, the verification fails. \n\nWe've worked around this for now by encoding the information in the req.URL.Host string,\nbut it is a really ugly hack.\n\nYou're right in that this is more about wanting control over the dial step than the\nverification step, but the dial function cannot get to the information that it needs to\ndo this trick. Ideally, I want to add a couple of parameters to the dial function, but\ncan't do that because of go1 compatibility.\u003c/pre\u003e",
	"user": {
		"login": "DanielMorsing",
		"id": 545573,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-07-23T18:24:46Z",
	"updated_at": "2014-12-08T10:43:35Z"
}
