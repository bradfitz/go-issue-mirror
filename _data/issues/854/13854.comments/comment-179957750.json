{
	"id": 179957750,
	"body": "@apinski-cavium, thanks for the errata.\r\n\r\nI'm inclined to simply not fix this, since it sounds like this hardware is quite rare and it's not even fixed in GCC. Also, since Go is not JITed, we would have to add a branch to all of the ARM64 atomics to implement the workaround, which would incur a (small) performance penalty on *all* ARM64 devices.\r\n\r\n\u003e Also golang is not a jit so it should not be checking /proc/cpuinfo at all unless someone says he wants a native compiling.\r\n\r\nI'm not sure what you mean by this. There is nothing but native compilation, so if we wanted to work around this, we would *have* to check /proc/cpuinfo (or somehow get the CPU variant and part) at runtime and optionally enable this workaround. We can't make this decision at compile time or let the user make this decision at compile time because they may compile on a machine that doesn't have this errata and then run on a machine that does. (We do this sort of thing for hardware features on ARM and x86, though so far we get everything from auxv sections or direct detection.)",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-04T17:30:22Z",
	"updated_at": "2016-02-04T17:30:22Z"
}
