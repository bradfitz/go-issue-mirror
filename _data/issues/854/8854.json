{
	"id": 51288789,
	"number": 8854,
	"state": "open",
	"title": "x/tools/playground: Child processes not killed on terminate",
	"body": "\u003cpre\u003eIn the online presentations (through the \u0026quot;present\u0026quot; tool), if the executing\ncode snippet starts up a child process (see end of report for a trivial example), the\nchild process will remain running in the background even if the parent (original\nprocess) is killed or terminates gracefully.\n\nThis is especially an issue if a user kills a running snippet, which will leave\nstale/dangling processes running on the host machine.\n\n---\nE.g.\n\npackage main\n\nimport \u0026quot;os/exec\u0026quot;\n\nfunc main() {\n\tcmd := exec.Command(\u0026quot;sleep\u0026quot;, \u0026quot;100\u0026quot;)\n\tcmd.Start()\n}\n\nIf you run this inside present, and kill the process, the sleep will happily run in the\nbackground until it finishes.\u003c/pre\u003e",
	"user": {
		"login": "karalabe",
		"id": 129561,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"created_at": "2014-10-02T08:16:01Z",
	"updated_at": "2015-04-14T19:38:34Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
