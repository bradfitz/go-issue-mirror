{
	"id": 105710995,
	"body": "\u003e The problem of inserting artificial preemption points is reduced\r\n\u003e numerical performance.\r\n\r\nTrue. That's why I suggested unrolling loops, which AFAIK is a standard solution to this problem.\r\n\r\nHowever, I think the check can be done in just two instructions, even without adding Ian's loop counter. Just CMP the preempt flag and branch if it's set. That branch will almost never be hit, so it will be highly predictable, and the preempt flag should be in the L1, so the check may in fact be extremely cheap.\r\n\r\n\u003e No pointer writes to the heap. But maybe this is enough?\r\n\r\nThis certainly reduces the set of programs that have this problem, but I don't think it actually helps with either of the examples I gave, since numerical kernels probably won't have heap pointer writes, and the runtime test that can deadlock the GC certainly has no pointer writes.\r\n",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-05-27T01:24:08Z",
	"updated_at": "2015-05-27T01:24:08Z"
}
