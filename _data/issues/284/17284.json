{
	"id": 180105347,
	"number": 17284,
	"state": "closed",
	"title": "go usage and help messages write to stderr instead of stdout",
	"body": "\r\n----------------------------\r\n\r\n### Version\r\n\r\ngo 1.7 darwin/amd64\r\n\r\n### OS + Architecture\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/Cellar/go/1.7/libexec\"\r\nGOTOOLDIR=\"/usr/local/Cellar/go/1.7/libexec/pkg/tool/darwin_amd64\"\r\nCC=\"clang\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -gno-record-gcc-switches -fno-common\"\r\nCXX=\"clang++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n### What did I do?\r\n\r\n`go --help` and `go [subcommand] --help`\r\n\r\n### What did you expect to see?\r\n\r\nI expected these commands to write to stdout. I was trying to see what the `-i` flag in `go build -i` does, so I ran the command `go build --help | grep -- -i`. \r\n\r\n### What did you see instead?\r\n\r\nMy buffer was flooded with the entire `go build --help` message because it writes to `stderr` instead of `stdout`. This means I have to run `go {subcommand} --help 2\u003e\u00261 | grep -- -{flag}` when figuring out what a flag does.\r\n\r\nHowever, when running commands like `go env` and `go version`, output is written to `stdout`. This leads to confusion: when should I have to combine `stderr` and `stdout`? What if there was a genuine error in the `go {subcommand}` that I run? I don't want to pipe that through grep and miss it, **it may be important**.\r\n\r\nI think `go` should pick a file descriptor---either `stdout` or `stderr`---to write all `go` output to. In my opinion, `go` should only ever write to `stderr` if the binary itself fails in some respect. That way I don't miss any errors because I'm piping all of `stderr` through `grep`, `head`, and the like.\r\n",
	"user": {
		"login": "gragas",
		"id": 8144986,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-09-29T20:53:07Z",
	"created_at": "2016-09-29T16:56:25Z",
	"updated_at": "2016-09-29T20:53:07Z"
}
