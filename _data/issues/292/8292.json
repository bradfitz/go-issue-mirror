{
	"id": 51287984,
	"number": 8292,
	"state": "closed",
	"title": "net/http: doFollowingRedirects changes URL on redirect",
	"body": "\u003cpre\u003eWhen following a redirect (e.g. 302), doFollowingRedirects will call URL.Parse() on the\nvalue of the Location header, then use URL.String() from the resulting object as the new\nURL. URL.String(URL.Parse(x)) doesn't round-trip. In particular, %2F gets flattened to\n\u0026quot;/\u0026quot; but never converted back. This caveat is noted here:\n\u003ca href=\"http://golang.org/pkg/net/url/#URL\"\u003ehttp://golang.org/pkg/net/url/#URL\u003c/a\u003e.\n\nAs a result, a server can't actually redirect a Go client to a URL with %2F in it. This\ndisagrees with the behavior of at least Chrome and curl.\n\nI expect the best option here is to make URL.Parse / URL.String round-trip, since the\n%2F exception is weird and surprising. At the very least, net/http should keep the\nverbatim URL when redirecting.\u003c/pre\u003e",
	"user": {
		"login": "mattdr",
		"id": 9790637,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2015-06-22T16:47:06Z",
	"created_at": "2014-06-27T01:34:55Z",
	"updated_at": "2016-06-25T01:37:16Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
