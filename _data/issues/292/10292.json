{
	"id": 65338263,
	"number": 10292,
	"state": "open",
	"title": "cmd/compile: inline function calls that return a closure",
	"body": "https://go-review.googlesource.com/#/c/8200/ added a benchmark to the strings package that shows strings.Trim and its variants allocate memory. The allocation is caused by the call to makeCutsetFunc \u003ca href=\"https://github.com/golang/go/blob/master/src/strings/strings.go#L625\"\u003ehere\u003c/a\u003e. Inlining this call removes the allocation and provides a nice performance boost to Trim. You can see the effect on the benchmark using Go Tip (commit 6262192cd0fb98d6bb80752de70ae33fc10dc33e) below:\r\n\r\n```\r\nbenchmark         old ns/op     new ns/op     delta\r\nBenchmarkTrim     3204          2323          -27.50%\r\n\r\nbenchmark         old allocs     new allocs     delta\r\nBenchmarkTrim     11             0              -100.00%\r\n\r\nbenchmark         old bytes     new bytes     delta\r\nBenchmarkTrim     352           0             -100.00%\r\n```\r\n\r\nmakeCutsetFunc is a pretty simple function (all it does is return a closure), and it was pointed out in review that it might be nice to inline functions like it in the compiler rather than changing strings.Trim explicitly. ",
	"user": {
		"login": "potocnyj",
		"id": 2791006,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"comments": 2,
	"created_at": "2015-03-31T01:03:06Z",
	"updated_at": "2015-06-08T06:23:04Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
