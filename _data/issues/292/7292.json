{
	"id": 51286489,
	"number": 7292,
	"state": "closed",
	"title": "archive/zip: Error zip reader test ",
	"body": "by **iacob.campia**:\n\n\u003cpre\u003eBy curiosity I was looking over the source code and spotted an error in the\n/archive/zip/reader_test.go that when fixed, the test fails.\n\n\u003ca href=\"https://code.google.com/p/go/source/browse/src/pkg/archive/zip/reader_test.go#358\"\u003ehttps://code.google.com/p/go/source/browse/src/pkg/archive/zip/reader_test.go#358\u003c/a\u003e\n\n\n340:  func readTestFile(t *testing.T, zt ZipTest, ft ZipTestFile, f *File) {\n       // ....\n\n358:    size0 := f.UncompressedSize\n\n        var b bytes.Buffer\n        r, err := f.Open()\n        if err != nil {\n                t.Errorf(\u0026quot;%s: %v\u0026quot;, zt.Name, err)\n                return\n        }\n\n367:    if size1 := f.UncompressedSize; size0 != size1 {\n                t.Errorf(\u0026quot;file %q changed f.UncompressedSize from %d to %d\u0026quot;, f.Name, size0, size1)\n        }\n\nAs seen in there, first it saves UncompresedSize value in size0 then compares it with\nitself as size1 and not to the length of the uncompressed bytes.\n\nIf you fix it, the test will fail with:\n\n--- FAIL: TestReader (0.01 seconds)\n        reader_test.go:367: file \u0026quot;README\u0026quot; changed f.UncompressedSize from 4294967295 to 36\n\nYhe value of UncompresedSize is actually 4294967295 bytes and of the uncompressed data\n36 bytes.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2014-12-08T10:40:35Z",
	"created_at": "2014-02-09T03:16:55Z",
	"updated_at": "2016-06-25T01:27:12Z"
}
