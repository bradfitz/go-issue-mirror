{
	"id": 150665260,
	"body": "\u003e When you have a vendored package with the same name as a package in \n\u003e GOROOT (e.g. `net/http`), behavior is inconsistent. It seems like \n\u003e other packages within GOROOT get the package in GOROOT, but things \n\u003e not in GOROOT (e.g. your app, other vendored packages) get the \n\u003e vendored version.\n\nThis is exactly what is supposed to happen. Vendoring affects imports in the directory tree rooted just above the vendor directory. It does NOT reach out and change imports elsewhere in your program.\n\nYou can control which net/http your code uses. You cannot control which net/http other people's code uses.\n\nIn general this is a very hard problem: what if two different packages you are importing both vendored their own net/http? If the semantics were that vendoring replaced every instance in the whole binary, which one should be used? Not having those semantics avoids that question.\n\nQuoting golang.org/s/go15vendor:\n\n\u003e The second is that this does not attempt to solve the problem of vendoring resulting in multiple copies of a package being linked into a single binary. Sometimes having multiple copies of a library is not a problem; sometimes it is. At least for now, it doesnâ€™t seem that the go command should be in charge of policing or solving that problem.",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-23T19:05:56Z",
	"updated_at": "2015-10-23T19:05:56Z"
}
