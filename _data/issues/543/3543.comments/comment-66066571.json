{
	"id": 66066571,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003elukemauldin,\n\nWhat I do, I put special comment starting with \\\\sys in winapi.go. For example:\n\n//sys GetModuleHandle(modname *uint16) (handle syscall.Handle, err error) =\nGetModuleHandleW\n\nThen I run\n\nmake zwinapi.go\n\nThis command will regenerate zwinapi.go file based on these //sys comments in winapi.go.\n\nzwinapi.go: winapi.go\n        (echo '// +build windows'; \\\n        $(GOROOT)/src/pkg/syscall/mksyscall_windows.pl $\u0026lt;) \\\n                | gofmt \\\n                \u0026gt; $@\n\nis the rule in Makefile. So it calls mksyscall_windows.pl to do the work. There are some\ncomments describing format of //sys lines in mksyscall_windows.pl.\n\nAlternatively look at different //sys lines in winapi.go (and compare them with\ngenerated proxies in zwinapi.go) to get the gist of it. There are many more in\n$GOROOT\\src\\pkg\\syscall\\syscall_windows.go. You will need a unix computer to do it since\nmksyscall_windows.pl is a perl script.\n\nYou will also need to translate some consts and structs from C to Go.\n\nAll this is manual and bit tedious to do, but once it is done it is done. Also, it is\nimportant, there are no mistakes - arguments / fields have correct types and sizes -\notherwise your program will start crashing without good reason. I hope it is not too\nmuch. If you need any help, just ask. I would do it myself, but I do not have urgent\nneed to connect to database. And you only find problems with your code when you use it.\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-04-20T01:53:15Z",
	"updated_at": "2014-12-22T06:13:58Z"
}
