{
	"id": 241566803,
	"body": "@dr2chase \"Starting with the S/390 G5 in 1998,[5] IBM mainframes have also included IEEE binary floating-point units which conform to the IEEE 754 Standard for Floating-Point Arithmetic.\"\r\n\r\n@mwhudson This is not about Go constants, this is about the compiler optimizing float32/64 variables that it recognizes as constants.\r\n\r\nThe spec requires IEEE floats (definition of float32, float64). I'd be ok with stating that the rounding mode used should be round-to-nearest even. I'm pretty sure we can't guarantee anything if it's changed. And we'd have to carefully rewrite a lot of code if we'd support changing the rounding mode underneath.\r\n\r\nThe other rounding modes are useful to implement things such as interval arithmetic, but it would be rather tedious to do this in Go for float32/64's.\r\n\r\nThat all said, it's nowhere written that math.Sqrt(2) cannot return the exact rounded result, internally stored as a constant (and that instead it must return the possibly incorrect, computed value).",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-22T22:09:04Z",
	"updated_at": "2016-08-22T22:09:04Z"
}
