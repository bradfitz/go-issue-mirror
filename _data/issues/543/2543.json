{
	"id": 51279359,
	"number": 2543,
	"state": "closed",
	"title": "//line directive does not support source file names containing colons",
	"body": "by **jmillikin**:\n\n\u003cpre\u003eThe //line directive used for altering error location strings is not parsed properly by\nthe Go compiler, if the filename it sets contains colons.\n\nGiven an original file named \u0026quot;support/lang:go.def\u0026quot;, which is processed to\ngenerate a Go source file, an example // line directive would be:\n\n//line support/lang:go.def:1\n\nWhich cannot be parsed.\n\nThree proposed solutions:\n\n1. Introduce an escape character, such as \\, so that colons in the filename may be\nescaped.\n\n2. Use full string literal syntax for the filename, similar to C's #line directive. This\nwould include escape characters as above.\n\n3. Read the lexbuf until EOF. Split on position of the last colon found. Everything\nbefore the last colon is the filename, anything after is the line.\n\n#3 seems like the easiest and safest to implement, because the only cases where it\nchanges the behavior are currently invalid anyway.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:13:34Z",
	"created_at": "2011-12-09T03:35:03Z",
	"updated_at": "2016-06-24T21:21:35Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
