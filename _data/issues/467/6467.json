{
	"id": 51285231,
	"number": 6467,
	"state": "closed",
	"title": "encoding/gob: more detail in interface assignment error message",
	"body": "\u003cpre\u003eI was hoping\n\n// setInterfaceValue sets an interface value to a concrete value,\n// but first it checks that the assignment will succeed.\nfunc setInterfaceValue(ivalue reflect.Value, value reflect.Value) {\n\tif !value.Type().AssignableTo(ivalue.Type()) {\n\t\terrorf(\u0026quot;cannot assign value of type %s to %s\u0026quot;, value.Type(), ivalue.Type())\n\t}\n\tivalue.Set(value)\n}\n\nCould be changed to \nerrorf(\u0026quot;%s is not assignable to type %s\u0026quot;, value.Type(), ivalue.Type(),\nvalue.Type(), ivalue.Type())\n\nI feel that the documentation on gob could be improved, though from previous discussions\nit sounds like there is disagreement on adding examples for interfaces. While perhaps\nindependently this error seems sufficient, I found it confusing in the set of errors I\nencountered while trying to understand how to correctly use the interface encoding, and\nI did not fully realize what that meant until I looked at the source to see\nreflect.AssignableTo was being used. I feel like changing the wording in this way makes\nit more clear that \u0026quot;assign\u0026quot; is being used like in the language of the spec,\nand not in a less precise manner.\u003c/pre\u003e",
	"user": {
		"login": "btracey",
		"id": 3680859,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 7,
	"closed_at": "2014-12-08T10:35:41Z",
	"created_at": "2013-09-24T07:11:43Z",
	"updated_at": "2016-06-25T01:19:32Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
