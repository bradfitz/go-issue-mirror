{
	"id": 155096944,
	"body": "You probably considered this, but everything flows through the sudog, so we could add a lock there.  Once the sudog is selected for a channel op, we can lock it.  Stack shrinking already knows about the sudogs associated with the channel, it could lock all of them first.  If stack shrinking sees that a sudog is already locked, it can punt and wait until next time.  If the channel op sees that the sudog is locked, we know there can be at must one channel op pending for a goroutine, so the channel op can sleep on a note until the stack shrinking is complete.  So I think the sudog lock can be a single atomic integer managed through cas, plus a note.  I think the overhead in the normal case is one additional atomic cas and one atomic store per channel send.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-09T15:32:11Z",
	"updated_at": "2015-11-09T15:32:11Z"
}
