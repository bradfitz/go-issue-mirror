{
	"id": 117708147,
	"number": 13318,
	"state": "closed",
	"title": "Wrong type in syscall type Utsname: uint8 instead of int8",
	"body": "* What version of Go are you using (go version)?\r\n\r\ngo version go1.4.3 linux/arm\r\n\r\n* What operating system and processor architecture are you using?\r\n\r\n$ uname -a\r\nLinux ef19e7655f61 4.2.5-263 #1 SMP Wed Nov 4 17:03:17 UTC 2015 armv7l armv7l armv7l GNU/Linux\r\n\r\n$ cat /etc/os-release \r\nNAME=\"Ubuntu\"\r\nVERSION=\"14.04.2 LTS, Trusty Tahr\"\r\nID=ubuntu\r\nID_LIKE=debian\r\nPRETTY_NAME=\"Ubuntu 14.04.2 LTS\"\r\nVERSION_ID=\"14.04\"\r\nHOME_URL=\"http://www.ubuntu.com/\"\r\nSUPPORT_URL=\"http://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"http://bugs.launchpad.net/ubuntu/\"\r\n\r\n* What did you do?\r\n\r\nI want to compile Docker for ARM but stumbled upon a problem that the type of Utsname is different for linux/arm to all other intel platforms.\r\nAlso the official golang docs says that it uses `[65]int8` but for linux/arm it is `[65]uint8`.\r\n\r\n* What did you expect to see?\r\n\r\nTo have the same types for linux/arm\r\n\r\n* What did you see instead?\r\n\r\nI had to add a workaround to read the value into a string in two different ways, one for intel, one for linux/arm.\r\n\r\n* linux/386: https://github.com/golang/go/blob/master/src/syscall/ztypes_linux_386.go#L555-L560\r\n* linux/amd64: https://github.com/golang/go/blob/master/src/syscall/ztypes_linux_amd64.go#L571-L576\r\n* **linux/arm**: https://github.com/golang/go/blob/master/src/syscall/ztypes_linux_arm.go#L543-L548\r\n* linux/arm64: https://github.com/golang/go/blob/master/src/syscall/ztypes_linux_arm64.go#L549-L554\r\n\r\nIs there any reason that the type is different here?\r\n",
	"user": {
		"login": "StefanScherer",
		"id": 207759,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2015-11-19T00:35:50Z",
	"created_at": "2015-11-18T23:44:57Z",
	"updated_at": "2015-11-19T05:20:22Z"
}
