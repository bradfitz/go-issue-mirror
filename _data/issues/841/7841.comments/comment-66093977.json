{
	"id": 66093977,
	"body": "\u003ca id=\"c29\"\u003e\u003c/a\u003eComment 29 by **toffaletti**:\n\n\u003cpre\u003eI found another place where we were using CGO I had forgotten about because we retired\nthat code, but it was still being called once during setup. I removed that also but it\nstill crashes and it still has pointers that look like C heap pointers:\n\nreflect.(*rtype).Implements(0xc2082c9540, 0x7fc332e9f1d8, 0x987400, 0xc2082c9540)\n        /go/src/pkg/reflect/type.go:1134 +0x177 fp=0xc209cf33a8\nencoding/json.newTypeEncoder(0x7fc332e9f1d8, 0xc208835d40, 0xc209cf3401, 0xc209cf33f8)\n\nAll of our CGO code was C++, and I'm not seeing libstdc++ linked anymore so I'm pretty\nsure I've gotten rid of all our CGO calls now.\n\n        linux-vdso.so.1 =\u003e  (0x00007fff405fe000)\n        libpthread.so.0 =\u003e /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f8dc8bac000)\n        libc.so.6 =\u003e /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8dc87e4000)\n        /lib64/ld-linux-x86-64.so.2 (0x00007f8dc8ddd000)\n\nIs CGO used in the std library at all? Those are the only packages I haven't audited for\nCGO usage.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-05-14T18:34:43Z",
	"updated_at": "2014-12-08T10:43:29Z"
}
