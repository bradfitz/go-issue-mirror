{
	"id": 66093992,
	"body": "\u003ca id=\"c44\"\u003e\u003c/a\u003eComment 44 by **toffaletti**:\n\n\u003cpre\u003eI'd love to be able to figure out a reproducer, but I've spent days trying with no luck.\nThe only thing I've discovered is how to make it more difficult to reproduce because\nafter doing these things I haven't been able to make it crash.\n\n- Run with GOGC=off\n- Run with GODEBUG=allocfreetrace=1\n- Run with GODEBUG=efence=1\n- Don't make concurrent requests\n\nHere's where it gets weird.\n\nIf I remove certain lines of code inside a goroutine, or if I don't spawn that goroutine\nbut just call the code serially the crash behavior changes. Depending on how many lines\nI remove it goes from taking seconds to crash to minutes or not crashing for hours. I've\ntried to figure out what, if anything, is buggy in that code, but it all looks fine to\nme. In fact, none of the functions being called access any non-local variables or\nallocate memory beyond function arguments on the stack or return values. None of that\ncode has access to the structure being serialized to JSON in the goroutine that crashes.\n\nMy best guess at this point is that there is no bug in the code I'm removing, but that\nhaving it active raises the memory usage just enough in the right area to trigger the\nbug. The goroutine seems special only because it is at the deepest level of the call\nstack.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-05-16T08:27:36Z",
	"updated_at": "2014-12-08T10:43:29Z"
}
