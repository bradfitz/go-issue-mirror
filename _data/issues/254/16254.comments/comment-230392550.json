{
	"id": 230392550,
	"body": "I'm sorry, I cannot see how you could write down the rules for how the\ndiscovery of a default implementation would work. And even if they could be\ndescribed in sure this would be backwards incompatible with a significant\nportion of existing go code.\n\nI vote to close this proposal.\n\nOn Tue, 5 Jul 2016, 15:42 王仕晋 \u003cnotifications@github.com\u003e wrote:\n\n\u003e Here is an exmaple from package io:\n\u003e\n\u003e // src/io.gotype Writer interface {\n\u003e     Write(b []byte) (n int, err error)\n\u003e }\n\u003e type stringWriter interface {\n\u003e     WriteString(s string) (n int, err error)\n\u003e }\n\u003e func WriteString(w Writer, s string) (n int, err error) {\n\u003e     if sw, ok := w.(stringWriter); ok {\n\u003e         return sw.WriteString(s)\n\u003e     }\n\u003e     return w.Write([]byte(s))\n\u003e }\n\u003e\n\u003e But, if we have this feature(Default implementation for interface), we\n\u003e can rewrite like below:\n\u003e\n\u003e type Writer interface {\n\u003e     Write(b []byte) (n int, err error)\n\u003e }\n\u003e func (w Writer) WriteString(s string) (n int, err error) {\n\u003e     return w.Write([]byte(s))\n\u003e }\n\u003e\n\u003e The strange interface stringWriter not needed because if your Writer can\n\u003e overides WriteString method. And using WriteString as a method of Writer\n\u003e better than a package-level function.\n\u003e\n\u003e —\n\u003e You are receiving this because you were mentioned.\n\u003e Reply to this email directly, view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/16254#issuecomment-230391769\u003e, or mute\n\u003e the thread\n\u003e \u003chttps://github.com/notifications/unsubscribe/AAAcA-KCxmX_ZbT1Qlrr2-ghhpM-TrExks5qSe7BgaJpZM4JD1Cm\u003e\n\u003e .\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-05T05:49:20Z",
	"updated_at": "2016-07-05T05:49:20Z"
}
