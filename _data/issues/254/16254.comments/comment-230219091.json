{
	"id": 230219091,
	"body": "\u003e\u003e What problem does this proposal solve?\r\n\r\nPossible the idea of this proposal (default implementation for interface) is useful but this is impossible in the Go language, with it it structural type system.\r\nInitially, I also cannot undestood why Go language does not allowed some concepts (based on the inheritance) wihich are works very well in the nominative type systems.\r\n\r\nThis is because nominal subtyping means that one type is a subtype of another if and only if it is explicitly declared to be so in its definition.\r\n\r\nIn structural typing, an element is considered to be compatible with another if, for each feature within the second element's type, a corresponding and identical feature exists in the first element's type. \r\n\r\nThat is, this is impossible to have a default implementation only because it (implementation of the interface, as the first element) should be defined explictly in the second element (interface implementer) to be compatible with the interface, as the first element.",
	"user": {
		"login": "mezoni",
		"id": 2311549,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-04T06:59:55Z",
	"updated_at": "2016-07-04T06:59:55Z"
}
