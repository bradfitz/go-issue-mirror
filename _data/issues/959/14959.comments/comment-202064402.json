{
	"id": 202064402,
	"body": "I checked loading dll from go.\r\n\r\n```c\r\n#include \u003cwindows.h\u003e\r\n\r\nBOOL WINAPI DllMain(HINSTANCE hinstDll, DWORD dwReason, LPVOID lpReserved) {\r\n\tswitch (dwReason) {\r\n\tcase DLL_PROCESS_ATTACH:\r\n\t\tMessageBox(0, \"Evil\", \"Wow!\", MB_OK);\r\n\t\tbreak;\r\n\tcase DLL_THREAD_ATTACH:\r\n\t\tbreak;\r\n\tcase DLL_THREAD_DETACH:\r\n\t\tbreak;\r\n\tcase DLL_PROCESS_DETACH:\r\n\t\tbreak;\r\n\t}\r\n\treturn TRUE;\r\n}\r\n```\r\nbuild kernel32.dll\r\n```\r\ngcc -static -o kernel32.dll -shared kernel32.c\r\n```\r\nloader written in go\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"os\"\r\n\t\"syscall\"\r\n)\r\n\r\nfunc main() {\r\n\tkernel32 := syscall.NewLazyDLL(os.Args[1])\r\n\tprocGetCurrentThreadId := kernel32.NewProc(\"GetCurrentThreadId\")\r\n\tprocGetCurrentThreadId.Call()\r\n}\r\n```\r\nthen, pass argument pointed path to kernel32.dll like below\r\n\r\n```\r\ngo run main.go [Argument]\r\n```\r\n\r\n|Argument      |Result     |\r\n|--------------|-----------|\r\n|kernel32      |OK         |\r\n|kernel32.dll  |OK         |\r\n|./kernel32    |Evail      |\r\n|./kernel32.dll|Evail      |\r\n\r\nproblems seem to not occur unless the program point to kernel32.dll relatively or point to kernel32.dll directly.",
	"user": {
		"login": "mattn",
		"id": 10111,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-27T13:27:21Z",
	"updated_at": "2016-03-27T13:27:21Z"
}
