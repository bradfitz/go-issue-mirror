{
	"id": 114591068,
	"body": "OpenAL allows you to create multiple process-wide valid context instances. Contexts need to be made current before they became the operating active context, and there could be only a single current context. What AL listener hears is the sources that have been created on the current context.\r\n\r\nI can prepare multiple contexts and register multiple audio sources by buffering data to these sources and keep them in memory before they are used.\r\n\r\nIn a game, if I have two different screens, I can switch back and forth between different contexts just by calling al.MakeContextCurrent. This is great for latency issues that may occur if I need to prepare a new context as I switch to a new screen (which should happen in milliseconds).\r\n\r\nI also don't support the idea of limitation the OpenAL APIs if we don't have a good reason. We limited opening multiple devices, because there are very few instances a mobile device have multiple audio devices. I think that's a fair reason, but still I am open to relax it if we failed to see a major use case.",
	"user": {
		"login": "rakyll",
		"id": 108380,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-23T17:59:06Z",
	"updated_at": "2015-06-23T17:59:06Z"
}
