{
	"id": 91434821,
	"body": "If you want this, it is easy to create:\n\n\ttype funcSorter struct {\n\t\tlen int\n\t\tless func(int, int) bool\n\t\tswap func(int, int)\n\t}\n\t\n\tfunc (f *funcSorter) Len() int { return f.len }\n\tfunc (f *funcSorter) Less(i, j int) bool { return f.less(i, j) }\n\tfunc (f *funcSorter) Swap(i, j int) { f.swap(i, j) }\n\t\n\tfunc SortF(len int, less func(int, int) bool, swap func(int, int)) {\n\t\tsort.Sort(\u0026funcSorter{len, less, swap})\n\t}\n\nIt doesn't need to be in the standard library. There is already one way to write a sort, and that's better than two.",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-10T05:25:12Z",
	"updated_at": "2015-04-10T05:25:12Z"
}
