{
	"id": 52178176,
	"number": 9357,
	"state": "closed",
	"title": "cmd/go: get $VANITYDOMAIN is flaky",
	"body": "`go get $VANITYDOMAIN` doesn't work (doesn't even do any network request):\r\n\r\n    user@host:~$ GOPATH=`mktemp -d` go get -x gogetplayground1.github.io\r\n    package gogetplayground1.github.io: unrecognized import path \"gogetplayground1.github.io\"\r\n    user@host:~$ \r\n\r\nOn the other hand, `go get $VANITYDOMAIN/$PKG` works and the sub-package can import the package at the root of $VANITYDOMAIN that was got together with it as well:\r\n\r\n    user@host:~$ GOPATH=`mktemp -d` go get -x gogetplayground1.github.io/sub\r\n    cd .\r\n    git clone https://github.com/gogetplayground1/gogetplayground1.github.io /tmp/tmp.gVMaZncb1g/src/gogetplayground1.github.io\r\n    cd /tmp/tmp.gVMaZncb1g/src/gogetplayground1.github.io\r\n    git show-ref\r\n    cd /tmp/tmp.gVMaZncb1g/src/gogetplayground1.github.io\r\n    git checkout master\r\n    WORK=/tmp/go-build238190946\r\n    mkdir -p $WORK/gogetplayground1.github.io/_obj/\r\n    mkdir -p $WORK/\r\n    cd /tmp/tmp.gVMaZncb1g/src/gogetplayground1.github.io\r\n    /opt/pkg/go/pkg/tool/linux_amd64/6g -o $WORK/gogetplayground1.github.io.a -trimpath $WORK -p gogetplayground1.github.io -complete -D _/tmp/tmp.gVMaZncb1g/src/gogetplayground1.github.io -I $WORK -pack ./root.go\r\n    mkdir -p /tmp/tmp.gVMaZncb1g/pkg/linux_amd64/\r\n    mv $WORK/gogetplayground1.github.io.a /tmp/tmp.gVMaZncb1g/pkg/linux_amd64/gogetplayground1.github.io.a\r\n    mkdir -p $WORK/gogetplayground1.github.io/sub/_obj/\r\n    mkdir -p $WORK/gogetplayground1.github.io/\r\n    cd /tmp/tmp.gVMaZncb1g/src/gogetplayground1.github.io/sub\r\n    /opt/pkg/go/pkg/tool/linux_amd64/6g -o $WORK/gogetplayground1.github.io/sub.a -trimpath $WORK -p gogetplayground1.github.io/sub -complete -D _/tmp/tmp.gVMaZncb1g/src/gogetplayground1.github.io/sub -I $WORK -I /tmp/tmp.gVMaZncb1g/pkg/linux_amd64 -pack ./sub.go\r\n    mkdir -p /tmp/tmp.gVMaZncb1g/pkg/linux_amd64/gogetplayground1.github.io/\r\n    mv $WORK/gogetplayground1.github.io/sub.a /tmp/tmp.gVMaZncb1g/pkg/linux_amd64/gogetplayground1.github.io/sub.a\r\n    user@host:~$ \r\n\r\nIt seems that the implementation doesn't make a request unless the cleaned import path contains a '/', but the current behavior is clearly inconsistent, so I believe it should also get the repo when using the first command (some people may be relying on the behavior of the second command already -- even unknowingly).",
	"user": {
		"login": "speter",
		"id": 450945,
		"type": "User",
		"site_admin": false
	},
	"comments": 10,
	"closed_at": "2015-07-15T04:45:09Z",
	"created_at": "2014-12-16T22:48:05Z",
	"updated_at": "2015-12-29T06:00:28Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
