{
	"id": 66066208,
	"body": "\u003ca id=\"c15\"\u003e\u003c/a\u003eComment 15:\n\n\u003cpre\u003ejdp: What my example was meant to show was that, with llvm, the DWARF output does not\nprovide enough detail to be able to distinguish the [], [0], and [1] cases.  Calling\nsizeof() would work, but that cannot be done by simply reading the DWARF output.\n\nThe \"simplest\" way that I can think of to solve this once and for all would be to make\nit a two-step process: the first one is the current process that useses DWARF to\ndetermine the structs and their fields and generates C code to dumps sizeof() for each\nstruct and sizeof and offsetof each member.  This leveragaes two assumptions: (1) all\ncompilers will be able to generate DWARF output containing correct struct names and\nfield names and (2) all compilers will correctly implement sizeof() and offsetof().\n\nFor the record, I'm also using a patched libusb.h because maintaining runtime changes\nwas a pain.\u003c/pre\u003e",
	"user": {
		"login": "kylelemons",
		"id": 322213,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-01-22T19:09:36Z",
	"updated_at": "2014-12-08T10:18:20Z"
}
