{
	"id": 66066203,
	"body": "\u003ca id=\"c10\"\u003e\u003c/a\u003eComment 10:\n\n\u003cpre\u003eJust wondering if anyone has looked into this since the last post? I tried to compile\nKyle's gousb package on OSX today but ran into this problem; the quick hack was to\nchange the struct's flexible member size to 1 in libusb.h.\n\nAFAIK, a zero length array (struct { type field[0]; }) has never been valid C code for\nan ANSI compliant compiler, it's a GCC extension. C99 introduced the empty array size\nfor flexible members but prior to C99 the array size would be set to 1 when using the\nstruct hack, for compiler's other than GCC that is.\n\nQuestion, is the statement \"DWARF writes out 0-length arrays as if they were 1-length\narrays.\" in type.go strictly DWARF version 2; the GCC asm output with debug info that I\nget contradicts this statement. My output shows the zero length flexible members as size\n0 and the one length flexible member as non-zero. There's a gist with snippets of the C\ncode structures, all three variants, and the asm output here\n\"\u003ca href=\"https://gist.github.com/3764752\"\u003ehttps://gist.github.com/3764752\u003c/a\u003e\" where DW_AT_byte_size shows the byte size of the\nstructure, including the flexible member.\u003c/pre\u003e",
	"user": {
		"login": "jpoirier",
		"id": 490350,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-09-22T01:45:31Z",
	"updated_at": "2014-12-08T10:18:20Z"
}
