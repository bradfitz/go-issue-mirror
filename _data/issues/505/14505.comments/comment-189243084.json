{
	"id": 189243084,
	"body": "```\r\n- RFC1123 = \"Mon, 02 Jan 2006 15:04:05 MST\"\r\n+ RFC1123 = \"Mon, 2 Jan 2006 15:04:05 MST\"\r\n```\r\nSolves the day parsing issue and formatting is still RFC compliant.\r\n```\r\n- RFC1123 = \"Mon, 02 Jan 2006 15:04:05 MST\"\r\n+ RFC1123 = \"Mon, 2 Jan 06 15:04:05 MST\"\r\n```\r\nFrom parsing perspective this would be the fully RFC compliant version, however the [Time.parse line 783](https://golang.org/src/time/format.go#L783) case stdYear part fails to parse year correctly with length greater than 2. Fixing that would break RFC822's year, since it only accepts year with length of 2. Maybe a new notation could solve the year problem, which accepts year with length of 2 or 4 and formats year with 4 digits.\r\n\r\nRFC822 on the other hand can be easily fixed, since it has the day issue only.\r\n```\r\n- RFC822 = \"02 Jan 06 15:04 MST\"\r\n- RFC822Z = \"02 Jan 06 15:04 -0700\"\r\n+ RFC822 = \"2 Jan 06 15:04 MST\"\r\n+ RFC822Z = \"2 Jan 06 15:04 -0700\"\r\n```",
	"user": {
		"login": "Ecsy",
		"id": 255498,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-26T11:56:28Z",
	"updated_at": "2016-02-26T11:56:28Z"
}
