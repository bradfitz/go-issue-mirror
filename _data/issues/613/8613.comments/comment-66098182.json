{
	"id": 66098182,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eThe spec doesn't say that assignments to _ can be \"optimized away\". It's an assignment\nlike any other. It just says that the value, once assigned to a _, cannot be  recovered\nfrom the _. That said, perhaps we should be more explicit about it,\n\nAn implementation is free to optimize as much as it wants as long as there's no semantic\nchange. If an expression panics upon evaluation, it needs to keep panicking after the\noptimization.\n\nI believe we've had issues with this in the past (_ = f()). I'd say this is an\nimplementation bug. Always good to check what gccgo does.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-08-29T03:32:22Z",
	"updated_at": "2014-12-08T10:47:47Z"
}
