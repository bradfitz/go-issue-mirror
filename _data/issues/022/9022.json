{
	"id": 51288998,
	"number": 9022,
	"state": "closed",
	"title": "Debugging symbols not emitted when using cgo (OS X / Darwin)",
	"body": "by **aChrisSmith**:\n\n\u003cpre\u003eIt appears that go does not emit DWARF debugging information when building programs\nusing cgo. (At least not on OS X / Darwin; haven't checked on another other OS.) Ideally\ndebugging information would be present regardless of using cgo. And, if I could have a\npony too, I'd love the DWARF information for the C-code as well.\n\nI've included two versions of a toy app (fizzbuzz), one which uses cgo and one which\ndoes not. When using `dwarfdump` to inspect the debugging info, the .debug_contents\nsection of the Mach-O binary appear to be empty.\n\ngo version prints \u0026quot;go version go1.3.3 darwin/amd64\u0026quot;\n\nRepro:\n\n# Verify debugging symbols are generated when not using cgo\n1. $ go build without_cgo.go\n2. $ dwarfdump without_cgo\n3. \u0026lt; Look at all the wonderful debugging symbols \u0026gt;\n\n# Verify debugging symbols NOT generated when using cgo\n1. $ go build with_cgo.go\n2. $dwarfdump with_cgo\n3. \u0026lt;Look in dismay at the lack of precious debugging information \u0026gt;\n\nOutput:\n\n----------------------------------------------------------------------\n File: with_cgo (x86_64)\n----------------------------------------------------------------------\n.debug_info contents:\n\u0026lt; EMPTY \u0026gt;\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/9022/0/with_cgo.go\"\u003ewith_cgo.go\u003c/a\u003e (474 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/9022/0/without_cgo.go\"\u003ewithout_cgo.go\u003c/a\u003e (321 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:49:35Z",
	"created_at": "2014-10-30T02:56:47Z",
	"updated_at": "2016-06-25T01:43:49Z"
}
