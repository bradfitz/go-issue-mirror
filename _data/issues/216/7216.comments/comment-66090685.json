{
	"id": 66090685,
	"body": "\u003ca id=\"c12\"\u003e\u003c/a\u003eComment 12:\n\n\u003cpre\u003eI did not intend to be obnoxious. I was just asking you to be precise (just as you are\nasking of us), so that everyone is clear on what is being discussed.\n\nAs for io.Reade, what \"available\" means depends on the context. io.Reader is a general\ninterface implemented by many different things. For instance, a Read from a network\nconnection might just return whatever data has appeared on the wire (as handed to the Go\nprogram from the kernel by a read syscall).\n\nBut then another io.Reader implementation might decide to wait until the Read buffer is\nfull before returning (this is unusual, and as such should be documented by the\nimplementor, hence the \"conventionally\" in the io.Reader docs).\n\nBoth are valid implementations of io.Reader.\n\nBut as a user of io.Reader, you must always repeatedly call Read until you get io.EOF.\nI'm not seeing how this is \"pathalogical\" though.\n\nTake a look at the various io.Reader implementations in the tree to get an idea of how\nthis works in practice.\u003c/pre\u003e",
	"user": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-01-28T04:02:44Z",
	"updated_at": "2014-12-08T10:40:06Z"
}
