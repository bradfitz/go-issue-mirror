{
	"id": 66049769,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eThere are several possible definitions for % that satisfy the property\n\n(a / b) * b + a % b == a\n\n\u003ca href=\"http://portal.acm.org/citation.cfm?id=128862\"\u003ehttp://portal.acm.org/citation.cfm?id=128862\u003c/a\u003e discusses various options in detail. \nSpecifically, the Euclidian definition of the modulo operation is particularly useful in \nmany contexts and also would permit more optimizations (strength reduction when \nthe divisor is a power of two is always possible, not just when the dividend is \npositive).\n\nThere are a several reasons for the current definition:\n- the current semantics for % is directly available as a result from x86 architectures\n- it would be confusing to change the meaning of the elementary operator % and not \nchange its name\n- it's fairly easy to compute another modulus from the % result\n\nNote that % computes the \"remainder\" as opposed to the \"modulus\". A definition of \nthe \"modulus\" according to the Euclidian definition would make a lot of sense. In \ncontrast, the remainder is simply what remains left after the division.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2009-12-21T22:06:34Z",
	"updated_at": "2014-12-08T10:04:37Z"
}
