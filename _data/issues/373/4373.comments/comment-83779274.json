{
	"id": 83779274,
	"body": "Thanks for clarifying.\n\nThe error philosophy for Go is that errors should be opaque to the caller\nand from what I am hearing you can already do this.\n\nAre there cases currently that you consider an error cause to be temporary\nthat you are not able to identify? From the description you have provided\nwhenever an error is returned the handling code must close and reopen the\nsocket so it sounds like no change is necessary.\n\nThe case of closing the socket concurrently in the shutdown situation\nshould probably be handled with a flag on the retry loop of your program,\nnot by pushing more logic down into the net package.\n\nYes, any error would be logged as a warning, ErrClosed would not be logged.\nGetting ErrClosed causes the readers/writers to exit (this *could* be in\nresponse to a shutdown, or alternately, it could be to restart a\nconnection).\n\nâ€”\nReply to this email directly or view it on GitHub\n\u003chttps://github.com/golang/go/issues/4373#issuecomment-83776675\u003e.\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-19T22:10:43Z",
	"updated_at": "2015-03-19T22:10:43Z"
}
