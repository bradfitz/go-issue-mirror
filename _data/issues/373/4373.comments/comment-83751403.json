{
	"id": 83751403,
	"body": "\u003e In both use cases, I want to be able to detect these errors as io.EOF\n(use case 1) or io.ErrClosed (use case 2) and handle them accordingly.\n\nCan you please explain how you would handle these cases specifically if you\ncould identify them ?\n\nOn Fri, Mar 20, 2015 at 7:18 AM, smithwinston \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e I also have two use cases for detecting a closed connection when using\n\u003e goroutines:\n\u003e\n\u003e    1. Remote end has closed the connection normally\n\u003e    2. Closing a connection locally in order to stop a service\n\u003e\n\u003e In both cases, my goroutine is blocked on a Read() and errors out with an\n\u003e *errors.errorString with the text \"use of closed network connection\".\n\u003e\n\u003e In both use cases, I want to be able to detect these errors as io.EOF (use\n\u003e case 1) or io.ErrClosed (use case 2) and handle them accordingly. With the\n\u003e current errClosing, I can't cleanly detect the error and if the error\n\u003e message were to change, my code wouldn't detect it.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/4373#issuecomment-83748662\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-19T20:24:48Z",
	"updated_at": "2015-03-19T20:24:48Z"
}
