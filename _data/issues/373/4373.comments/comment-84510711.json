{
	"id": 84510711,
	"body": "We introduced io.EOF into the net package (a disadvantage: it prevents to convey additional network information with net.OpError in the case of returning io.EOF), and we agreed with it because we thought that the result of any read operation on connection-oriented protocol: nread==0 \u0026\u0026 err==nil is equivalent to io.EOF. \r\n\r\nBut in this case, I'm not sure your proposal is the way to go. Here are my random thoughts.\r\n\r\n1. At the moment, we provide io.EOF and net.Error compliant values for part of error notification protocol/contact on IO operations of connection-oriented protocol endpoints.\r\n2. If we need to introduce a new signal for error notification, it should follow io package because net.Conn implements io.Reader/Writer interfaces and it would be a rationale for introducing a disadvantage the same as io.EOF.\r\n3. net.OpError or other net.Error compliant types/values are important for making diagnostics after disaster happened; I mean, for management plane stuff. IMHO, for control plane stuff, determining the failure from error notifications come from service access points/APIs of network protocols doesn't matter because SAPs/APIs usually don't satisfy such soft/hard error determination. (anyone shows me the perfect compliant of RFC 5461?)\r\n",
	"user": {
		"login": "mikioh",
		"id": 92117,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-22T03:30:17Z",
	"updated_at": "2015-03-22T04:00:55Z"
}
