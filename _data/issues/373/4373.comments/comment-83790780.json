{
	"id": 83790780,
	"body": "\u003e That would be OK by me, but I thought I had read elsewhere on one of\nthese issues that people wanted to know the difference between\nlocal-Close() [ErrClosing] and remote disconnection [io.EOF].\n\nBased on the use case provided above the requirement to distinguish between\nlocal closed (ie, this error is expected because I asked for it in another\ngoroutine) and unexpected remote disconnection (hey, where did you go ?)\ndoes not change the logic of the program; any non nil error is considered\nnon temporary and will cause the same logic to be executed.\n\nWhat remains from this request is to be able to mute errors of the former\nvariety from being logged. By removing errClosing and always returning\nio.EOF, this requirement is met.\n\nOn Fri, Mar 20, 2015 at 9:48 AM, smithwinston \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e What if instead of returning errClosing we fixed the concurrent close\n\u003e behaviour to return io.EOF ?\n\u003e\n\u003e That would be OK by me, but I thought I had read elsewhere on one of these\n\u003e issues that people wanted to know the difference between local-Close()\n\u003e [ErrClosing] and remote disconnection [io.EOF].\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/4373#issuecomment-83789631\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-19T22:53:04Z",
	"updated_at": "2015-03-19T22:53:04Z"
}
