{
	"id": 144949704,
	"number": 15046,
	"state": "closed",
	"title": "reflect: Type.Field does not panic when out of range",
	"body": "In both Go 1.6 and at tip, reflect.Type.Field is documented to panic when out of range:\r\n\r\n```\r\n// Field returns a struct type's i'th field.\r\n// It panics if the type's Kind is not Struct.\r\n// It panics if i is not in the range [0, NumField()).\r\n```\r\n\r\nIt doesn't. The program\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"reflect\"\r\n)\r\n\r\nfunc main() {\r\n\tt := reflect.TypeOf(struct{ X int }{})\r\n\tfmt.Println(t.NumField())\r\n\tfmt.Println(t.Field(0))\r\n\tfmt.Println(t.Field(1))\r\n}\r\n```\r\n\r\nprints\r\n\r\n```\r\n1\r\n{X  int  0 [0] false}\r\n{  \u003cnil\u003e  0 [] false}\r\n```\r\n\r\nhttp://play.golang.org/p/G-NOR9EMrB\r\n\r\n",
	"user": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-05-10T15:16:54Z",
	"created_at": "2016-03-31T16:27:02Z",
	"updated_at": "2016-05-10T15:16:54Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
