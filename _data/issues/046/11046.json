{
	"id": 84732835,
	"number": 11046,
	"state": "open",
	"title": "encoding/json: Decoder internally buffers full input",
	"body": "When using the JSON package, if I encode a struct like\r\n\r\n```go\r\ntype Data struct {\r\n    Count int\r\n    Names []string\r\n}\r\n```\r\n\r\nand then decode it into\r\n\r\n```go\r\ntype SmallData struct {\r\n    Count int\r\n}\r\n```\r\n\r\nit will still allocate memory for the list of names, even though it just gets thrown away.  This becomes an annoyance when I have several multigigabyte JSON files like this.  It would be neat if the JSON parser could identify what fields it cares about, or somehow be told what fields to ignore, and chuck them.",
	"user": {
		"login": "kurin",
		"id": 90267,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"comments": 7,
	"created_at": "2015-06-03T19:25:08Z",
	"updated_at": "2016-04-14T02:19:34Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
