{
	"id": 66074262,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eYes, numeric constants represent values of arbitrary precision and do not\noverflow. That is why line 10 compiles without complaint. However, when you\ntry to use a constant as a value stored at run time by the program (such as\nin a var or as an expression), it must be converted to a type that exists\nat run time. In the absence of type information to the contrary, an integer\nconstant defaults to type int. The constants in this program do not fit in\nan int, so you get the compile-time error message. If you want the constant\nto have a different type, you must give it, as in:\n\u003ca href=\"http://play.golang.org/p/-kksqjnknj\"\u003ehttp://play.golang.org/p/-kksqjnknj\u003c/a\u003e\u003c/pre\u003e\n\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-02-03T15:54:36Z",
	"updated_at": "2014-12-08T10:25:11Z"
}
