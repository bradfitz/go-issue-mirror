{
	"id": 51287150,
	"number": 7746,
	"state": "closed",
	"title": "cmd/gc: 800-bit constant converted to zero",
	"body": "\u003cpre\u003eThe big program at the very bottom of this note constructs a sequence of 100-, 200-,\n400-, 800-, 1600-, ..., 2¹⁰⁰×100-bit constants.\n\nThere's no perfect way to handle this program.\nA compiler with precision limits should print a graceful error about constants being too\nlarge.\nA compiler or type-checker without precision limits (like gotype) will grow until it\nruns out of memory. (So probably all implementations should have some precision limit.)\n\ncmd/gc handles this program particularly poorly, though. The 800-bit constant c3 is\nsomehow equal to zero, so that the println(c3/c3) line prints a \u0026quot;division by\nzero\u0026quot; compilation error.\n\nSimilarly, this shorter program prints 0:\n\npackage main\n\nconst (\n\tc0   = 1 \u0026lt;\u0026lt; 100\n\tc1   = c0 * c0\n\tc2   = c1 * c1\n\tc3   = c2 * c2\n)\n\nfunc main() { \n\tprintln(c3)\n}\n\n\n\u003ca href=\"http://play.golang.org/p/qCpwgSrhCE\"\u003ehttp://play.golang.org/p/qCpwgSrhCE\u003c/a\u003e\n\n--- big program ---\n\npackage main\n\nconst (\n\tc0   = 1 \u0026lt;\u0026lt; 100\n\tc1   = c0 * c0\n\tc2   = c1 * c1\n\tc3   = c2 * c2\n\tc4   = c3 * c3\n\tc5   = c4 * c4\n\tc6   = c5 * c5\n\tc7   = c6 * c6\n\tc8   = c7 * c7\n\tc9   = c8 * c8\n\tc10  = c9 * c9\n\tc11  = c10 * c10\n\tc12  = c11 * c11\n\tc13  = c12 * c12\n\tc14  = c13 * c13\n\tc15  = c14 * c14\n\tc16  = c15 * c15\n\tc17  = c16 * c16\n\tc18  = c17 * c17\n\tc19  = c18 * c18\n\tc20  = c19 * c19\n\tc21  = c20 * c20\n\tc22  = c21 * c21\n\tc23  = c22 * c22\n\tc24  = c23 * c23\n\tc25  = c24 * c24\n\tc26  = c25 * c25\n\tc27  = c26 * c26\n\tc28  = c27 * c27\n\tc29  = c28 * c28\n\tc30  = c29 * c29\n\tc31  = c30 * c30\n\tc32  = c31 * c31\n\tc33  = c32 * c32\n\tc34  = c33 * c33\n\tc35  = c34 * c34\n\tc36  = c35 * c35\n\tc37  = c36 * c36\n\tc38  = c37 * c37\n\tc39  = c38 * c38\n\tc40  = c39 * c39\n\tc41  = c40 * c40\n\tc42  = c41 * c41\n\tc43  = c42 * c42\n\tc44  = c43 * c43\n\tc45  = c44 * c44\n\tc46  = c45 * c45\n\tc47  = c46 * c46\n\tc48  = c47 * c47\n\tc49  = c48 * c48\n\tc50  = c49 * c49\n\tc51  = c50 * c50\n\tc52  = c51 * c51\n\tc53  = c52 * c52\n\tc54  = c53 * c53\n\tc55  = c54 * c54\n\tc56  = c55 * c55\n\tc57  = c56 * c56\n\tc58  = c57 * c57\n\tc59  = c58 * c58\n\tc60  = c59 * c59\n\tc61  = c60 * c60\n\tc62  = c61 * c61\n\tc63  = c62 * c62\n\tc64  = c63 * c63\n\tc65  = c64 * c64\n\tc66  = c65 * c65\n\tc67  = c66 * c66\n\tc68  = c67 * c67\n\tc69  = c68 * c68\n\tc70  = c69 * c69\n\tc71  = c70 * c70\n\tc72  = c71 * c71\n\tc73  = c72 * c72\n\tc74  = c73 * c73\n\tc75  = c74 * c74\n\tc76  = c75 * c75\n\tc77  = c76 * c76\n\tc78  = c77 * c77\n\tc79  = c78 * c78\n\tc80  = c79 * c79\n\tc81  = c80 * c80\n\tc82  = c81 * c81\n\tc83  = c82 * c82\n\tc84  = c83 * c83\n\tc85  = c84 * c84\n\tc86  = c85 * c85\n\tc87  = c86 * c86\n\tc88  = c87 * c87\n\tc89  = c88 * c88\n\tc90  = c89 * c89\n\tc91  = c90 * c90\n\tc92  = c91 * c91\n\tc93  = c92 * c92\n\tc94  = c93 * c93\n\tc95  = c94 * c94\n\tc96  = c95 * c95\n\tc97  = c96 * c96\n\tc98  = c97 * c97\n\tc99  = c98 * c98\n\tc100 = c99 * c99\n)\n\nfunc main() { \n\tprintln(c1/c1)\n\tprintln(c2/c2)\n\tprintln(c3/c3)\n\tprintln(c4/c4)\n\tprintln(c5/c5)\n\tprintln(c6/c6)\n\tprintln(c7/c7)\n\tprintln(c8/c8)\n\tprintln(c9/c9)\n\tprintln(c10/c10)\n\tprintln(c20/c20)\n\tprintln(c30/c30)\n\tprintln(c40/c40)\n\tprintln(c50/c50)\n\tprintln(c60/c60)\n\tprintln(c70/c70)\n\tprintln(c80/c80)\n\tprintln(c90/c90)\n\tprintln(c100/c100)\n}\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2015-05-13T17:38:52Z",
	"created_at": "2014-04-09T23:51:44Z",
	"updated_at": "2016-06-25T01:31:55Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
