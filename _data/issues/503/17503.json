{
	"id": 183696905,
	"number": 17503,
	"state": "open",
	"title": "runtime: eliminate stack rescanning",
	"body": "One of the largest remaining contributors to GC STW time is stack rescanning. I have an approach for eliminating this entirely. This is a tracking bug for implementing this approach.\r\n\r\nI will upload a design document and proof soon, and I have a working implementation that I plan to have cleaned up and mailed out in a day or two.\r\n\r\nI'm marking this Go 1.9. My current plan is to get the change in for Go 1.8, but have a GODEBUG flag to fall back to the current algorithm for debugging purposes (and in case something goes wrong). Assuming things go smoothly, we'll actually rip out the stack rescanning code when Go 1.9 opens.\r\n\r\nEdit: [Design doc CL](https://golang.org/cl/31362)\r\n\r\n/cc @RLH ",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"comments": 26,
	"created_at": "2016-10-18T14:07:55Z",
	"updated_at": "2016-10-24T02:55:36Z",
	"milestone": {
		"id": 2038341,
		"number": 47,
		"title": "Go1.9Early"
	},
	"reactions": {
		"total_count": 25,
		"+1": 12,
		"heart": 11,
		"hooray": 2
	}
}
