{
	"id": 51276708,
	"number": 609,
	"state": "closed",
	"title": "Bad data alignment with nested C structs using amd64 cgo",
	"body": "\u003cpre\u003eBefore filing a bug, please check whether it has been fixed since\nthe latest release: run \u0026quot;hg pull -u\u0026quot; and retry what you did to\nreproduce the problem.  Thanks.\n\nWhat steps will reproduce the problem?\n1. Using the attached files, do \u0026quot;make run\u0026quot;, the call \u0026quot;./run\u0026quot;\n\nWhat is the expected output? What do you see instead?\n\nThe C code fills a facsimile of SDL's keyboard event structure with\nascending numbers. Then the contents of the structure are printed using a C\nfunction and a Go function. The printout should be\n\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n\ninstead it's \n\n1 2 3 4 5 6 7\n1 2 3 5 6 7 0\n\nThe values for the fields in the nested struct that Go sees via cgo are all\noff by one position. When told to print the whole struct, Go prints\n\n{1 2 3 [0] {5 [0 0 0] 6 7 0 [0 0]}}\n\nWhat is your $GOOS?  $GOARCH?\n\nlinux amd64\n\nWhich revision are you using?  (hg identify)\n\n07fd78fe1d78 tip\n\nPlease provide any additional information below.\n\nThe test case replicates the issue I had with the actual SDL KeyboardEvent\nstruct without requiring the SDL headers. I did not have the same issue\nwith linux/386 Go.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/609/0/struct.go\"\u003estruct.go\u003c/a\u003e (1115 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/609/0/run.go\"\u003erun.go\u003c/a\u003e (59 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/609/0/Makefile\"\u003eMakefile\u003c/a\u003e (203 bytes)",
	"user": {
		"login": "rsaarelm",
		"id": 41840,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:05:13Z",
	"created_at": "2010-02-17T16:51:41Z",
	"updated_at": "2016-06-24T19:13:49Z"
}
