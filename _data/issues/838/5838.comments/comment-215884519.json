{
	"id": 215884519,
	"body": "@ianlancetaylor The return address needs to be preserved because `SYSCALL` returns two times, once for the child and once for the parent. However, when using `CLONE_VM` there is just one stack which both use. `CLONE_VFORK` blocks the parent thread, so the child goes first. It executes `RET` and thus pops the return address from the stack. It eventually calls `SYS_EXECVE` which makes it detach from the shared memory space and thus the parent may continue execution. The parent now hits `RET` again, but the return address would not be there any more, except if you restore it from a register. I got that trick from glibc.",
	"user": {
		"login": "neelance",
		"id": 16184,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-29T21:18:45Z",
	"updated_at": "2016-04-29T21:18:45Z"
}
