{
	"id": 176199919,
	"number": 17054,
	"state": "open",
	"title": "x/mobile/exp/audio/al: Crash when running al.CloseDevice() on OSX",
	"body": "### What version of Go are you using (`go version`)?\r\n\r\n    go version go1.7 darwin/amd64\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\nMac OS X 10.11.5\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/ejf3/workspace/gowork\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"\r\nCC=\"clang\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/zn/6y_5b8214sdg_1zzx907x3kh0000gn/T/go-build694490723=/tmp/go-build -gno-record-gcc-switches -fno-common\"\r\nCXX=\"clang++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n### What did you do?\r\n\r\n```\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"golang.org/x/mobile/exp/audio/al\"\r\n)\r\n\r\nfunc main() {\r\n\tfmt.Println(\"Hello, playground\")\r\n\r\n\terr := al.OpenDevice()\r\n\tif err != nil {\r\n\t\tfmt.Println(\"failed to open device \" + err.Error())\r\n\t\treturn\r\n\t}\r\n\tdefer al.CloseDevice()\r\n}\r\n```\r\n\r\nThe line `defer al.CloseDevice()` causes the crash. Removing that line allows the program to run without printing an error.\r\n\r\n### What did you expect to see?\r\n\r\nI expected not to see a crash.\r\n\r\n### What did you see instead?\r\n\r\n```\r\nfatal error: unexpected signal during runtime execution\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x41f1927]\r\n\r\nruntime stack:\r\nruntime.throw(0x40ae810, 0x2a)\r\n        /usr/local/go/src/runtime/panic.go:566 +0x95\r\nruntime.sigpanic()\r\n        /usr/local/go/src/runtime/sigpanic_unix.go:12 +0x2cc\r\n\r\ngoroutine 1 [syscall, locked to thread]:\r\nruntime.cgocall(0x4080c00, 0xc420053e10, 0x0)\r\n        /usr/local/go/src/runtime/cgocall.go:131 +0x110 fp=0xc420053de0 sp=0xc420053da0\r\ngolang.org/x/mobile/exp/audio/al._Cfunc_alcDestroyContext(0x19)\r\n        golang.org/x/mobile/exp/audio/al/_obj/_cgo_gotypes.go:666 +0x41 fp=0xc420053e10 sp=0xc420053de0\r\ngolang.org/x/mobile/exp/audio/al.alcDestroyContext(0x19)\r\n        /Users/ejf3/workspace/gowork/src/golang.org/x/mobile/exp/audio/al/alc_notandroid.go:61 +0x75 fp=0xc420053e58 sp=0xc420053e10\r\ngolang.org/x/mobile/exp/audio/al.CloseDevice()\r\n        /Users/ejf3/workspace/gowork/src/golang.org/x/mobile/exp/audio/al/alc.go:70 +0xa9 fp=0xc420053e80 sp=0xc420053e58\r\nmain.main()\r\n        /Users/ejf3/workspace/gowork/src/ejf.io/gosoundwave/noise/noise.go:29 +0x3c7 fp=0xc420053f48 sp=0xc420053e80\r\nruntime.main()\r\n        /usr/local/go/src/runtime/proc.go:183 +0x1f4 fp=0xc420053fa0 sp=0xc420053f48\r\nruntime.goexit()\r\n        /usr/local/go/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc420053fa8 sp=0xc420053fa0\r\n\r\ngoroutine 17 [syscall, locked to thread]:\r\nruntime.goexit()\r\n        /usr/local/go/src/runtime/asm_amd64.s:2086 +0x1\r\n```\r\n\r\nThis appears similar to the following two issues:\r\n\r\n* [x/mobile/exp/audio/al: Flaky crash on Mac OS X](https://github.com/golang/go/issues/15075)\r\n* [runtime: OpenReader: Invalid heap pointer in both 1.4rc2 and 1.4rc1](https://github.com/golang/go/issues/9191)",
	"user": {
		"login": "emil10001",
		"id": 542733,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2016-09-10T20:05:13Z",
	"updated_at": "2016-09-12T19:26:45Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
