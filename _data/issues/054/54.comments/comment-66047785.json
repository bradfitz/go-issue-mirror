{
	"id": 66047785,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4 by **dowobeha**:\n\n\u003cpre\u003e\u003e Nesting /* /* */ */ are hard to read, because you can never be sure that you saw all \n/* when you see a */. Without nesting */ is definitely the end of the comment.\n\nIt's fairly trivial to add support for nested comments into a well-written compiler.\nFairly little is required beyond maintaining an additional variable to record nesting\ndepth.\n\n\"Nested\" comments by using multiple layers of // is certainly one option, and many\npeople choose to do that. Most editors will certainly help you do that.\n\nBut, using multiple layers of // is a personal coding choice, one that for many\nlanguages is the only way of nesting comments, because the language doesn't support\ntruly nested multi-line comments. The availability of using multiple layers of\nsingle-line comments does not mean that a language should not also support truly\nnested multi-line comments.\n\n\u003e How do you translate /* /*/ ?\n\nIt depends on how you implement the lexical specification for nested multi-line\ncomments, but the most straightforward lexical semantics for this would be to mean\nthat two levels of comments were started, and neither has yet been closed.\n\n\n\u003e By the way commenting out block of code for later use, is littering.\nUse a source version tool for that purposes.\n\nAgain, this is a matter of personal coding preference. In most of the occasions where\nI've wanted multi-line comments, I wanted to temporarily comment out vast swaths of a\nfile. In those situations, if you're using a DVCS like git or hg maybe your logic\ncould have worked (check in a copy, delete the commented out section) - but even in\nthose cases that's not really what I would have wanted to have to do.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2009-11-13T20:18:41Z",
	"updated_at": "2014-12-08T10:03:04Z"
}
