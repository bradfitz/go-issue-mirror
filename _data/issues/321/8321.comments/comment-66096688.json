{
	"id": 66096688,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eThis seems to me to be correct.  You have a []interface{}.  You can take the address of\nelement 0 and you can set element 0.  But what your program is trying to do is to take\nthe address of the value stored in the interface{} that is element 0, and that you can\nnot do.  There is no way to write Go code to do that.\n\nMoreover, if you could do it, then you could, in different code, change the interface\nvalue to hold different type, and then you would have a pointer to the interior of an\ninterface that was not the type of the value actually stored in the interface.  So if\nthis were permitted it would not be type safe.\u003c/pre\u003e\n\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-07-02T23:37:18Z",
	"updated_at": "2014-12-08T10:46:16Z"
}
