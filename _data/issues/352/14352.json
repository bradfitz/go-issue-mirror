{
	"id": 134080418,
	"number": 14352,
	"state": "closed",
	"title": "A wrong way to insert into a slice?",
	"body": "I was trying to insert an entry into a slice and was puzzled why it wasn't working correctly. Turns out I was appending slices in a wrong order in comparison to the canonical way from SliceTricks. However, I think the behaviour I noticed should be considered a bug. Here is the code:\r\n\r\n```\r\npackage main\r\n\r\nimport \"fmt\"\r\n\r\nfunc main() {\r\n\t//My approach\r\n\ttest:=[]string{\"A\", \"B\", \"C\"}\r\n\ttest = append(append(test[:1], \"1\"), test[1:]...)\r\n\tfmt.Printf(\"%v\\n\", test)\r\n\t\r\n\t//Canonical approach\r\n\ttest2:=[]string{\"A\", \"B\", \"C\"}\r\n\ttest2 = append(test2[:1], append([]string{\"1\"}, test2[1:]...)...)\r\n\tfmt.Printf(\"%v\\n\", test2)\r\n}\r\n```\r\n\r\nAnd the results are:\r\n\r\n```\r\n[A 1 1 C]\r\n[A 1 B C]\r\n```\r\n\r\nAs I understand, my approach should behave as follows:\r\n\r\n- Take first entry from `test`\r\n- Append to it entry \"1\", keep that slice in memory\r\n- To the slice in memory, append entries at position 1+ from `test`\r\n- Store the result in `test`\r\n\r\nBut it looks like something is messed up and the entry \"1\" is stored into `test` somewhere in-between the two `append`s.",
	"user": {
		"login": "ThePiachu",
		"id": 964559,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2016-02-16T20:25:43Z",
	"created_at": "2016-02-16T19:51:27Z",
	"updated_at": "2016-02-16T20:25:43Z"
}
