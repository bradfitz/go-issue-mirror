{
	"id": 51289008,
	"number": 9031,
	"state": "closed",
	"title": "testing: an import cycle in a test file exposes an infinite loop in the go test command or the go cover tool",
	"body": "by **mdwhatcott**:\n\n\u003cpre\u003eWhat does 'go version' print?\n\ngo version go1.3.3 darwin/amd64\n\nWhat steps reproduce the problem?\n\n1. go get github.com/mdwhatcott/cycle\n2. cd $GOPATH/src/github.com/mdwhatcott/cycle\n3. go test -cover\n\nWhat happened? The go test command hangs indefinitely.\n\nWhat should have happened instead? It should report a build failure due to an import\ncycle.\n\nPlease provide any additional information below.\n\nSee the README.md file in the \u0026quot;github.com/mdwhatcott/cycle\u0026quot; package for more\ndetails.\n\nI understand that coverage information is only useful when the tests successfully\ncompile and execute, but in every other failure to compile, the command in step 3 above\nreports the problem and exits with a non-zero return status. Why should an import cycle\nnot cause the same behavior?\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:49:36Z",
	"created_at": "2014-10-30T22:34:33Z",
	"updated_at": "2016-06-25T01:43:54Z"
}
