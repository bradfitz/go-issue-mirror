{
	"id": 66049420,
	"body": "\u003ca id=\"c34\"\u003e\u003c/a\u003eComment 34:\n\n\u003cpre\u003eIt's only magic before it's defined and specified. You can think of this:\n\n    v, err := f()\n\nas exactly the same as this:\n\n    :v, :err = f()\n\nWhich looks like \"distributing the operator\".\n\nSome time after we introduce this logic, we can then prevent from *reusing*\nvariables entirely, and force calls like this:\n\n    v, err := f()\n\nto be made instead as the following when the intention is to reuse a\nprevious definition of \"err\":\n\n    :v, err = f()\n\nThis, in turn, enables us to consistently use the former/current version of :=\nto always mean \"shadow/define everything, and error out if the variable isn't\nused\".\n\nIf I'm not missing any details (quite possible) I believe these steps can be\nmade gradually and in a compatible way, and would address good part of the\nreasons why people reach this issue.\u003c/pre\u003e",
	"user": {
		"login": "niemeyer",
		"id": 378683,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-07-26T16:06:39Z",
	"updated_at": "2014-12-08T10:04:20Z"
}
