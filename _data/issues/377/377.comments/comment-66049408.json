{
	"id": 66049408,
	"body": "\u003ca id=\"c22\"\u003e\u003c/a\u003eComment 22 by **james@abneptis.com**:\n\n\u003cpre\u003eThanks;  It's not so much that I don't understand with it, or even disagree with it; \nIt's that it's a frequent source of errors that are hard to physically see (differing\nonly in colon can have a dramatically different result).\n\n(snip much longer ramble)\n\nI have no problem with\n\nvar v; \nfunc(){ v := 3 }\n\nIt's \n\nfoo()(err os.Error){\n  for err := bar(); err != nil; err = bar() {\n\n  }\n}\n\nbeing substantially different than\n\nfoo()(err os.Error){\n  for err = bar(); err != nil; err = bar() {\n\n  }\n}\n\nand both being semantically correct.\n\nEssentially, my argument is w/r/t ONLY: \"In some contexts such as the initializers for\nif, for, or switch statements, [short variable declarations] can be used to declare\nlocal temporary variables\";  I would argue that since these are special cases to begin\nwith, that in multi-variable := usage, resolving those local temporary variables should\nbe handled via the same scope as the containing block, but stored in the inner scope if\ncreation is necessary;\n\nI've got no problem with how it works, just been bitten by this more times than I'd care\nto admit, and surprised when I'd realized how many others had been as well.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-12-11T21:46:23Z",
	"updated_at": "2014-12-08T10:04:20Z"
}
