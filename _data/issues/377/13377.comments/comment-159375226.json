{
	"id": 159375226,
	"body": "We are setting the CC environment variable. Go strips off all of the\nparameters from it and only uses the compiler name. We have CC set as\n\narm-phytec-linux-gnueabi-gcc -march=armv7-a -marm -mthumb-interwork\n-mfloat-abi=hard -mfpu=neon -mtune=cortex-a8\n--sysroot=/opt/yogurt/AM335x-PD15.1.1/sysroots/cortexa8t2hf-vfp-neon-phytec-linux-gnueabi\n\n\nHere is the output when Go compiles What we get when Go compiles cgo (go\nbuild -x test.go):\n\n\nWORK=/tmp/go-build861803713\nmkdir -p $WORK/runtime/cgo/_obj/\nmkdir -p $WORK/runtime/\ncd /usr/local/go/src/runtime/cgo\nCGO_LDFLAGS=\"-g\" \"-O2\" \"-lpthread\" /usr/local/go/pkg/tool/linux_amd64/cgo\n-objdir $WORK/runtime/cgo/_obj/ -importpath runtime/cgo\n-import_runtime_cgo=false -import_syscall=false -- -I\n$WORK/runtime/cgo/_obj/ -Wall -Werror cgo.go\narm-phytec-linux-gnueabi-gcc -I . -fPIC -marm -pthread -fmessage-length=0\n-print-libgcc-file-name\narm-phytec-linux-gnueabi-gcc -I . -fPIC -marm -pthread -fmessage-length=0\n-I $WORK/runtime/cgo/_obj/ -g -O2 -Wall -Werror -o\n$WORK/runtime/cgo/_obj/_cgo_main.o -c $WORK/runtime/cgo/_obj/_cgo_main.c\narm-phytec-linux-gnueabi-gcc -I . -fPIC -marm -pthread -fmessage-length=0\n-I $WORK/runtime/cgo/_obj/ -g -O2 -Wall -Werror -o\n$WORK/runtime/cgo/_obj/_cgo_export.o -c $WORK/runtime/cgo/_obj/_cgo_export.c\narm-phytec-linux-gnueabi-gcc -I . -fPIC -marm -pthread -fmessage-length=0\n-I $WORK/runtime/cgo/_obj/ -g -O2 -Wall -Werror -o\n$WORK/runtime/cgo/_obj/cgo.cgo2.o -c $WORK/runtime/cgo/_obj/cgo.cgo2.c\n# runtime/cgo\nIn file included from\n/opt/yogurt/AM335x-PD15.1.1/sysroots/cortexa8t2hf-vfp-neon-phytec-linux-gnueabi/usr/include/features.h:389:0,\n                 from\n/opt/yogurt/AM335x-PD15.1.1/sysroots/cortexa8t2hf-vfp-neon-phytec-linux-gnueabi/usr/include/errno.h:28,\n                 from /usr/local/go/src/runtime/cgo/cgo.go:50:\n/opt/yogurt/AM335x-PD15.1.1/sysroots/cortexa8t2hf-vfp-neon-phytec-linux-gnueabi/usr/include/gnu/stubs.h:7:29:\nfatal error: gnu/stubs-soft.h: No such file or directory\n # include \u003cgnu/stubs-soft.h\u003e\n                             ^\ncompilation terminated.\n\n\n\n\nGo used the compiler we specified, but replaced all of the command line\narguments with it's own. Is there something else we should be doing?\n\n\n\n\n*Greg Strange*\nSoftware Engineering Program Lead\nSynapse Product Development\n\nmail 1511 6th Ave Suite 400, Seattle, WA 98101\ndirect 206-832-1269 ext. 3505 \u003c206-832-1269,3505\u003e | office 206-381-0898 |\nmobile 206-240-5605\ngreg@synapse.com | http://www.synapse.com\n\nThis email and any files transmitted with it are confidential. Unauthorized\npublication, use or dissemination of this email is prohibited.\nPlease consider the environment before printing.\n\nOn Tue, Nov 24, 2015 at 10:31 AM, Ian Lance Taylor \u003cnotifications@github.com\n\u003e wrote:\n\n\u003e You should be able to address this without modifying Go by setting the CC\n\u003e environment variable when running the go tool. I don't know of any simple\n\u003e way that the Go distribution can get this right for all the possible ARM\n\u003e cases.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/13377#issuecomment-159364091\u003e.\n\u003e\n",
	"user": {
		"login": "gjstrange",
		"id": 15988955,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-24T19:08:14Z",
	"updated_at": "2015-11-24T19:08:14Z"
}
