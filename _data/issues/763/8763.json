{
	"id": 51288659,
	"number": 8763,
	"state": "open",
	"title": "go/types: need way to get from function type to function decl",
	"body": "\u003cpre\u003eFrom a mail conversation:\n\nOn Fri, Sep 12, 2014 at 12:09 PM, Peter Collingbourne \u0026lt;pcc@google.com\u0026gt; wrote:\nThis information is significant for name mangling and is therefore needed. If there were\na convenient way to ask a named type for its enclosing function, I think it would be\npossible to get rid of this traversal. Robert might have opinions on this.\n\nOn Fri, Sep 12, 2014 at 5:05 PM, Robert Griesemer \u0026lt;gri@google.com\u0026gt; wrote:\n You should be able to get the scope for each variable (Object) via Parent(). Furthermore, Info.Scopes should give you a mapping of nodes to scopes, which should make this simpler. But perhaps I am missing something.\n\nPeter Collingbourne:\nI looked at Info.Scopes. I imagine that I could potentially make that work if I built my\nown scope-to-function map from that mapping.\n\nAccording to the documentation, I might expect to find (among other things) ast.FuncType\nkeys in the map. Is this what I should expect functions to be represented as? I looked\nup ast.FuncType and could not see any way to get the function's name. It seems like it\nwould be more useful for me if that map stored FuncDecl keys. (If that wouldn't work for\nwhatever reason, it seems better to me for go/types to maintain the mapping from scopes\nto objects, maybe just by adding an Object field to Scope).\n\n--------------------\n\nNeed to rethink connection between function types/decls and scopes.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Thinking"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2014-09-17T18:01:11Z",
	"updated_at": "2015-07-31T17:15:49Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
