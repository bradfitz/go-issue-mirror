{
	"id": 142418514,
	"number": 14897,
	"state": "closed",
	"title": "net: DNS lookups do not include host name suffix as a search domain",
	"body": "src/net/dnsconfig_unix.go has this comment:\r\n\r\n// See resolv.conf(5) on a Linux machine.\r\n// TODO(rsc): Supposed to call uname() and chop the beginning\r\n// of the host name to get the default search domain.\r\n\r\n...which succinctly describes the issue.\r\n\r\nHere's an example: Given a server with uname -n \"foo.x.y.z\" where /etc/resolv.conf only has nameserver lines, and with another server with hostname \"bar.x.y.z\", net.LookupHost(\"bar\") results in \"no such host\" when using the built-in DNS resolver, but succeeds when running with \"GODEBUG=netdns=cgo\".\r\n\r\ngo version: go version go1.6 linux/amd64\r\n\r\ngo env:\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/ben/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/go\"\r\nGOTOOLDIR=\"/usr/lib/go/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"x86_64-pc-linux-gnu-gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"x86_64-pc-linux-gnu-g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n",
	"user": {
		"login": "bhiggins",
		"id": 1166061,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-04-27T21:15:13Z",
	"created_at": "2016-03-21T17:38:17Z",
	"updated_at": "2016-04-27T21:15:13Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
