{
	"id": 51282660,
	"number": 4802,
	"state": "closed",
	"title": "bufio: reading lines is too cumbersome",
	"body": "\u003cpre\u003eReading lines from a file is too cumbersome in Go.\n\nPeople are often drawn to bufio.Reader.ReadLine because of its name, but it has a weird\nsignature, returning (line []byte, isPrefix bool, err error), and requires a lot of work.\n\nReadSlice and ReadString require a delimiter byte, which is almost always the obvious\nand unsightly '\\n', and also can return both a line and an EOF:\n\u003ca href=\"http://play.golang.org/p/LSl2Aketpg\"\u003ehttp://play.golang.org/p/LSl2Aketpg\u003c/a\u003e\n\nThis bug is about designing a nicer API for bufio to do the common task of looping over\nlines from an io.Reader.\n\nThings to think about:\n\n-- functional or not, like my earlier \u003ca href=\"https://golang.org/cl/6870052/\"\u003ehttps://golang.org/cl/6870052/\u003c/a\u003e proposal\nand filepath.Walk.\n\n-- if an iterator: return either a line OR an error, but never both?\n\n-- auto-strip line endings before giving it to the caller?\n\n-- CRLF vs LF\n\n-- treat the final line without line endings the same as a line with a line ending?\n\n-- skip, fail early, or truncate lines that are longer than the bufio Reader size?\n\n-- string or []byte? (copy or not?)\n\netc.\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:25:30Z",
	"created_at": "2013-02-13T22:21:07Z",
	"updated_at": "2016-06-24T22:32:51Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
