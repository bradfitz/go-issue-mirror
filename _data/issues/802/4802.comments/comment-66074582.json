{
	"id": 66074582,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003ePersonally I would feel that an iterator would be more convenient when reading lines.\n\nThe error could be similar to that of io.ReadFull:\n\"The error is EOF only if no bytes were read. If an EOF happens after reading some but\nnot all the bytes, ReadFull returns ErrUnexpectedEOF. On return, n == len(buf) if and\nonly if err == nil.\"\n\nReturn ErrUnexpectedEOF (or similar) if the line didn't end with a new line. Only return\nEOF when no line was read.\n\nPossibly return an error for truncated lines, ErrLineTruncated (or similar).\n\nLine rog already pointed out: \"You almost always want to strip off the final newline\"\nref: \u003ca href=\"https://golang.org/cl/6870052/#msg8\"\u003ehttps://golang.org/cl/6870052/#msg8\u003c/a\u003e\n\nIf a copy should be made or not is a hard choice. Can't tell at this point what my\nthoughts are. It is always easy to provide a wrapper function to make the copy. The\nquestion is, do we want to limit the need of such wrapper functions?\u003c/pre\u003e",
	"user": {
		"login": "mewmew",
		"id": 1414531,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-02-15T08:45:21Z",
	"updated_at": "2014-12-08T10:25:30Z"
}
