{
	"id": 181454685,
	"number": 17358,
	"state": "closed",
	"title": "spec: is package name _ allowed; compiler refuses it",
	"body": "We all know _ can be used as constant and variable identifier.\r\nAnd it looks using _ as function name is also allowed, but a function named with _ is almost useless.\r\nThe only usefulness I can image is put some interface assertions in it to check if a concrete type implements an interface to avoid allocing memory in package scope.\r\n\r\n```go\r\npackage main\r\n\r\ntype I interface {F()}\r\n\r\ntype T [2^32]int\r\n\r\nfunc (T) F(){}\r\n\r\nfunc _ (){var _ I = T{}}\r\n  \r\nfunc main(){\r\n\t// _() // compiling error: cannot use _ as value\r\n}\r\n```",
	"user": {
		"login": "golang101",
		"id": 22589241,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2016-10-06T16:07:09Z",
	"created_at": "2016-10-06T15:53:01Z",
	"updated_at": "2016-10-06T16:47:09Z"
}
