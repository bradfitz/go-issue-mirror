{
	"id": 88482431,
	"body": "Passing pointers to C prevents (or if one prefers breaks) optimizations\nthat affect your entire Go program. It interferes with whole classes of GC\noptimizations, some related to making GC run faster while others, such as\nimproving cache locality, are related to making application code run\nfaster. The only reasonable solution seems to be for C code to malloc any\nmemory it uses and share those pointers with Go, not the other way around.\nUsing Go as a path to adding garbage collection to C code is not the way\nforward.\n\nThe runtime team has chosen to port all of its code, including the entire\nruntime and compiler, to Go to avoid these problems. Your choice may be\ndifferent and well founded but the C / Go barrier is going to come with\nsharp edges.\n\nOn Wed, Apr 1, 2015 at 3:44 AM, Dmitry Vyukov \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e Syscalls also accept uintptr's, so they should not promote pointers to\n\u003e heap.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/10303#issuecomment-88382473\u003e.\n\u003e\n",
	"user": {
		"login": "RLH",
		"id": 972447,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-01T13:34:43Z",
	"updated_at": "2015-04-01T13:34:43Z"
}
