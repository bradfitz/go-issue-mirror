{
	"id": 106512460,
	"body": "whoops, so sorry, i read way wrong. *forbid* stack copying. that's probably great. i thought you were saying new special stack for every cgo call.\r\n\r\nit definitely seems like there's two concerns that may have different solutions\r\n\r\nbasically I think cgo has the same two dimensions that syscalls have: (1) whether or not memory passed in escapes (syscalls definitely don't squirrel away memory, cgo could (saved callbacks references, etc)), and (2) whether or not the stack can shrink under cgo calls invalidating passed in memory.\r\n\r\nseems like dimension 2 could be solved a number of ways (forcing to the heap, or yeah, forbid stack copying while in cgo) separately from how dimension 1 is solved, but yeah it would be nice if it was pretty snappy at least for my case.\r\n\r\nforcing stuff to the heap seems necessary for dimension 1, but perhaps that's not the common case and could be opt in?",
	"user": {
		"login": "jtolds",
		"id": 109603,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-05-28T17:34:11Z",
	"updated_at": "2015-05-28T17:35:42Z"
}
