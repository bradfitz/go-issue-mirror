{
	"id": 91146196,
	"body": "@alexbrainman \r\n\u003eOur asm code writes into c.r1, c.r2, c.err just before syscall returns.\r\n\r\nIf the asm code saves c pointer on Go stack, then it should be updated as well, provided that the stack slow is marked pointer.\r\n\r\nLooking at the code:\r\n```\r\n// void runtime\u003cC2\u003e\u003cB7\u003easmstdcall(void *c);\r\nTEXT runtime\u003cC2\u003e\u003cB7\u003easmstdcall(SB),NOSPLIT,$0\r\n        // asmcgocall will put first argument into CX.\r\n        PUSHQ   CX                      // save for later\r\n        MOVQ    libcall_fn(CX), AX\r\n        MOVQ    libcall_args(CX), SI\r\n        MOVQ    libcall_n(CX), CX\r\n```\r\nIt seems that c is saved on stack, however, I don't see anything that marks this stack slot as pointer...\r\n",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-09T08:13:26Z",
	"updated_at": "2015-04-09T08:13:26Z"
}
