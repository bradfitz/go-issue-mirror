{
	"id": 206098643,
	"body": "Of course `top` will tell you the plain bald truth as well as `/proc/\u003cpid\u003e/map` and friends.\r\nAnd pprof heap dump will *not* tell you the truth since there are quite a few layers yet to commit memory back to kernel.\r\n\r\nYou may also detect that something is wrong by trying to move your mouse and observe kswapd being crazy, but that's of course not the real truth, since gctrace will tell you something like dumb below, while proxy eats 4+ Gb of resident ram.\r\n\r\n```\r\ngc 191 @17.189s 17%: 1.3+6.1+5.4+4.5+4.3 ms clock, 10+6.1+0+7.8/0.020/0.019+34 ms cpu, 703-\u003e833-\u003e802 MB, 1039 MB goal, 8 P\r\ngc 192 @17.221s 17%: 2.9+7.0+11+4.7+4.5 ms clock, 23+7.0+0+6.5/2.0/0.001+36 ms cpu, 752-\u003e933-\u003e512 MB, 993 MB goal, 8 P\r\ngc 193 @17.435s 17%: 0.11+0+0+0+4.3 ms clock, 0.93+0+0+6.5/2.0/0.001+34 ms cpu, 111-\u003e111-\u003e0 MB, 111 MB goal, 8 P (forced)\r\ngc 194 @18.440s 16%: 0.072+0+0+0+2.9 ms clock, 0.58+0+0+6.5/2.0/0.001+23 ms cpu, 0-\u003e0-\u003e0 MB, 0 MB goal, 8 P (forced)\r\ngc 195 @19.443s 15%: 0.18+0+0+0+3.2 ms clock, 1.4+0+0+6.5/2.0/0.001+25 ms cpu, 0-\u003e0-\u003e0 MB, 0 MB goal, 8 P (forced)\r\ngc 196 @20.447s 15%: 0.12+0+0+0+2.8 ms clock, 0.99+0+0+6.5/2.0/0.001+22 ms cpu, 0-\u003e0-\u003e0 MB, 0 MB goal, 8 P (forced)\r\n```\r\n\r\nAs you may expect the real truth told you by heap dump and pprof is a little bit misleading, since go proxy has eaten the memory and hasn't returned it back, at least kswapd and OS performance degrade heavily. It *can* be that this is some memory used by c++ libraries, but I doubt so since there are virtually no such number of allocations in the c++ library used for 10k requests even if it leaks like hell. Second, subsequent run of the same test eats noticeably less additional memory.\r\nRunning this test (gc.1.5.3) on wheezy results in 2Gb of resident memory used for the first run and 2.7Gb after the second.\r\nRunning it on fedora23 ends up with 4.3/4.4 Gb, but fedora is a bit faster server, I suspect concurrency in the web server is the issue who is in charge for that memory consumption.\r\n\r\n```\r\npprof) top10\r\n2048.59kB of 2048.59kB total (  100%)\r\nDropped 82 nodes (cum \u003c= 10.24kB)\r\n      flat  flat%   sum%        cum   cum%\r\n 1536.56kB 75.01% 75.01%  1536.56kB 75.01%  runtime.malg\r\n  512.03kB 24.99%   100%   512.03kB 24.99%  runtime.deferproc.func1\r\n         0     0%   100%   512.19kB 25.00%  runtime.mcommoninit\r\n         0     0%   100%   512.19kB 25.00%  runtime.mpreinit\r\n```",
	"user": {
		"login": "bioothod",
		"id": 1847575,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-06T03:23:02Z",
	"updated_at": "2016-04-06T03:23:02Z"
}
