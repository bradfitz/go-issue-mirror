{
	"id": 173923178,
	"body": "When I submitted original CL (https://golang.org/cl/16434),\r\nConvention was to specify argument size not in register, but in an instruction itself:\r\nMOV[B,W,L,Q]  BX,CX instead of mov rbx/ecx/cx/cl\r\nSo I wanted to follow the same convention with xmm/ymm\r\nAs far as I understand O in MOVOU stands for Octa (8,), so\r\nHD was supposed to mean HexaDeca (16).\r\nI was hoping that this would be discussed during review, but it went in, surprisingly, \r\nwithout much discussion.\r\nI didn't think that we need to support 128-bit version (unlike with MOV*), so I've used names for 256-bit version without changes. Using 256-bit version in place of 128 is not okay for all instructions, not only VPTEST, if memory operand is used.\r\nAs for distinguishing 128/256 bits, I'm not sure.\r\nIn favor of .X,.Y suffixes: Gnu assembler already uses the same solution for e.g. vcvtpd2ps.\r\n(there are vcvtpd2psx and vcvtpd2psy), plus it's similar to current Go convention (register names are the same).\r\nOn the other hand, adding Y registers simplifies porting from gas to go asm.\r\nAs far as I can this both solutions (suffixes and new registers) are extensible enough\r\nto handle Z (512-bit) registers.\r\nOverall keeping everything closer to manuals/other asm dialects, bu introducing Y registers  is  IMHO a better alternative.\r\n\r\n\r\n\r\n\r\n\r\n",
	"user": {
		"login": "TocarIP",
		"id": 16836375,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-22T13:35:49Z",
	"updated_at": "2016-01-22T13:35:49Z"
}
