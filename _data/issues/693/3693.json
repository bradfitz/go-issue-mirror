{
	"id": 51281004,
	"number": 3693,
	"state": "closed",
	"title": "revise operator precedence grouping in gofmt",
	"body": "\u003cpre\u003egofmt uses spacing to group operands/operators with the same precedence to show order\ne.g. \u0026quot;a+b | c\u0026quot;. At the same time, it avoids the grouping if parentheses are\nbeing used, e.g. \u0026quot;(a + b) | c\u0026quot;.\n\nOne place, where this doesn't work as expected, however, is in function calls (and by\nextension type conversions). gofmt produces the following output: \u0026quot;foo(a+b) |\nc\u0026quot;, even though \u0026quot;a + b\u0026quot; is already grouped by parentheses. While this\nmight be okay generally, it produces very unreadable output when working with bit masks.\nE.g. \u0026quot;foo(someVariable\u0026amp;someBitmask) | c\u0026quot; is hard to read and especially\nhard to recognize as a bitwise operation from a distance.\n\nMy request is to either generally accept that function calls already group the operands,\nso that there is no need to group them with the lack of spacing, or to add special\ntreating for \u0026amp;, \u0026amp;\u0026amp;, | and || because they do not read well without spacing.\u003c/pre\u003e",
	"user": {
		"login": "dominikh",
		"id": 39825,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:19:28Z",
	"created_at": "2012-06-01T17:15:18Z",
	"updated_at": "2016-06-24T22:19:53Z"
}
