{
	"id": 51284836,
	"number": 6210,
	"state": "open",
	"title": "time: now.Before(time.Unix(math.MaxInt64, 0)) should return true",
	"body": "by **tim.olsen@10gen.com**:\n\n\u003cpre\u003eBefore filing a bug, please check whether it has been fixed since the\nlatest release. Search the issue tracker and check that you're running the\nlatest version of Go:\n\nRun \u0026quot;go version\u0026quot; and compare against\n\u003ca href=\"http://golang.org/doc/devel/release.html\"\u003ehttp://golang.org/doc/devel/release.html\u003c/a\u003e  If a newer version of Go exists,\ninstall it and retry what you did to reproduce the problem.\n\nThanks.\n\nWhat steps will reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n1. run program at \u003ca href=\"http://play.golang.org/p/cvez19tXfE\"\u003ehttp://play.golang.org/p/cvez19tXfE\u003c/a\u003e\n\nWhat is the expected output?\n\u0026quot;Cool, not the end of the world yet\u0026quot;\n\n\nWhat do you see instead?\n\u0026quot;uh oh\u0026quot;\n\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\ndarwin (Mac OS X 10.8.4\n\nWhich version are you using?  (run 'go version')\ngo version go1.1.2 darwin/amd64\n\nPlease provide any additional information below.\nSubtracting 1 or 1000 from MaxInt64 does not change the behavior.  Dividing by 2 does\nhowever suggesting time.Time cannot accommodate the last bit (before the sign) of int64\nwhen converting from unix epoch time.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"created_at": "2013-08-21T21:44:18Z",
	"updated_at": "2015-04-14T19:45:20Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
