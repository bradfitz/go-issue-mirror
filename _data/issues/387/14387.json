{
	"id": 134659726,
	"number": 14387,
	"state": "closed",
	"title": "runtime: cgo check of []byte checks every element uselessly",
	"body": "This program\r\n\r\n    package main\r\n    \r\n    // void f(void* p) {}\r\n    import \"C\"\r\n    \r\n    import (\r\n    \t\"fmt\"\r\n    \t\"time\"\r\n    \t\"unsafe\"\r\n    )\r\n    \r\n    func main() {\r\n    \tb := make([]byte, 1e6)\r\n    \tt := time.Now()\r\n    \tfor i := 0; i \u003c 1e3; i++ {\r\n    \t\tC.f(unsafe.Pointer(\u0026b[0]))\r\n    \t}\r\n    \tfmt.Println(time.Since(t))\r\n    }\r\n\r\ntakes 4 seconds on my laptop.  Setting GODEBUG=cgocheck=0 it takes 430 microseconds.  This is a []byte that should not take any time to check.\r\n\r\nI have a simple fix.  Opening this issue so that the fix goes into a future 1.6.1 release, if there is one.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-02-19T16:07:47Z",
	"created_at": "2016-02-18T18:40:30Z",
	"updated_at": "2016-04-19T23:13:50Z",
	"milestone": {
		"id": 1688612,
		"number": 37,
		"title": "Go1.6.2"
	}
}
