{
	"id": 51286397,
	"number": 7236,
	"state": "closed",
	"title": "go.tools/go/types: cycles not detected for cyclic types used as parameters",
	"body": "\u003cpre\u003eThe following program type-checks w/o errors:\n\npackage main\nfunc (T) m() {}\ntype T struct { T }\n\nWithout the method m, we get:\n\nx.go:2:6: illegal cycle in declaration of T\n\nMore generally, if T is used in a cycle, and the (out-of-cycle) use of T is a type that\npermits cycles, cycle error are missing:\n\npackage main\ntype P *T\ntype T struct { T }\n\npackage main\ntype M map[int]T\ntype T struct { T }\n\netc.\n\nFinally, the following loops forever:\n\npackage main\ntype P *T\ntype T T\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:40:14Z",
	"created_at": "2014-01-29T22:42:38Z",
	"updated_at": "2016-06-25T01:26:37Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
