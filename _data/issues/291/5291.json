{
	"id": 51283419,
	"number": 5291,
	"state": "closed",
	"title": "cmd/gc: go1.0.3 clean code crashes in scanblock()",
	"body": "\u003cpre\u003eI have a codebase that runs without issues when built with go1.0.3 while crashes\nconsistently with below revision.\nI do not have a reproducible smaller sample as of now.\n\n\u0026gt; go version\ngo version devel +2a50b4f1d9f9 Sat Apr 13 23:09:08 2013 -0700 linux/amd64\n(This is on RHEL6.3)\n\n\u0026gt; hg tip\nchangeset:   16658:2a50b4f1d9f9\ntag:         tip\nuser:        Brad Fitzpatrick \u0026lt;bradfitz@golang.org\u0026gt;\ndate:        Sat Apr 13 23:09:08 2013 -0700\nsummary:     crypto/ecdsa: doc cleanup\n\nPanic stack:\n\nunexpected fault address 0xc1c4824a60\nfatal error: fault\n[signal 0xb code=0x1 addr=0xc1c4824a60 pc=0x419d2a]\n\ngoroutine 1 [running]:\n[fp=0xc20021ee08] runtime.throw(0x8888b7)\n\t/sources/golang/src/pkg/runtime/panic.c:473 +0x67\n[fp=0xc20021ee20] runtime.sigpanic()\n\t/sources/golang/src/pkg/runtime/os_linux.c:239 +0xe7\n[fp=0xc20021f1c0] scanblock(0x7f24b96ce000, 0x7f24b96ce300, 0x1f, 0xc20021f100)\n\t/sources/golang/src/pkg/runtime/mgc0.c:911 +0x5ca\n[fp=0xc20021f210] markroot(0xc2000b2000, 0x1000000004)\n\t/sources/golang/src/pkg/runtime/mgc0.c:1269 +0xab\n[fp=0xc20021f288] runtime.parfordo(0xc2000b2000)\n\t/sources/golang/src/pkg/runtime/parfor.c:105 +0x9b\n[fp=0xc20021f3b8] gc(0x7f24ca91ad64)\n\t/sources/golang/src/pkg/runtime/mgc0.c:2000 +0x29d\n----- stack segment boundary -----\n[fp=0x7f24ca91ad78] runtime.gc(0xc200000000)\n\t/sources/golang/src/pkg/runtime/mgc0.c:1927 +0x11b\n[fp=0x7f24ca91add0] runtime.mallocgc(0x20, 0x100000000, 0x1)\n\t/sources/golang/src/pkg/runtime/zmalloc_linux_amd64.c:101 +0x1e4\n[fp=0x7f24ca91ae00] runtime.new()\n\t/sources/golang/src/pkg/runtime/zmalloc_linux_amd64.c:628 +0x5b\n[fp=0x7f24ca91ae58] regexp.(*machine).alloc(0xc2000f2e10, 0xc200167b18, 0x42a2a3)\n\t/sources/golang/src/pkg/regexp/exec.go:97 +0xa3\n[fp=0x7f24ca91aee0] regexp.(*machine).add(0xc2000f2e10, 0xc2000f2e50, 0x1a00000007, 0x5,\n0xc200210fa0, ...)\n\t/sources/golang/src/pkg/regexp/exec.go:302 +0x48a\n[fp=0x7f24ca91af68] regexp.(*machine).add(0xc2000f2e10, 0xc2000f2e50, 0x6, 0x5,\n0xc200210fa0, ...)\n\t/sources/golang/src/pkg/regexp/exec.go:295 +0x385\n----- stack segment boundary -----\n[fp=0xc2001201e8] regexp.(*machine).step(0xc2000f2e10, 0xc2000f2e20, 0xc2000f2e50, 0x4,\n0x5, ...)\n\t/sources/golang/src/pkg/regexp/exec.go:247 +0x4f2\n[fp=0xc200120270] regexp.(*machine).match(0xc2000f2e10, 0xc200128d70, 0xc2000f2ed0, 0x4,\n0x1, ...)\n\t/sources/golang/src/pkg/regexp/exec.go:165 +0x400\n[fp=0xc200120300] regexp.(*Regexp).doExecute(0xc200209500, 0x0, 0x0, 0x0, 0x0, ...)\n\t/sources/golang/src/pkg/regexp/exec.go:333 +0xfa\n[fp=0xc2001203b0] regexp.(*Regexp).FindStringSubmatch(0xc200209500, 0xc200126229, 0x10,\n0x33, 0x0, ...)\n\t/sources/golang/src/pkg/regexp/regexp.go:872 +0x7a\n[fp=0xc200121b00] tool/UploadConfig/RCParse.GenerateRCConfig(0xc2000c3310, 0x0, 0x0)\n\t/sources/gopath.xyz/src/tool/UploadConfig/RCParse/RCParse.go:133 +0xb13\n----- stack segment boundary -----\n[fp=0xc2000edb98] main.main()\n\t/sources/gopath.xyz/src/tool/UploadConfig/UploadConfig.go:82 +0x15d3\n----- stack segment boundary -----\n[fp=0x7f24ca90efb8] runtime.main()\n\t/sources/golang/src/pkg/runtime/proc.c:182 +0x92\n[fp=0x7f24ca90efc0] runtime.goexit()\n\t/sources/golang/src/pkg/runtime/proc.c:1223\n\ngoroutine 2 [syscall]:\u003c/pre\u003e",
	"user": {
		"login": "shivakumargn",
		"id": 171191,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 16,
	"closed_at": "2014-12-08T10:28:31Z",
	"created_at": "2013-04-15T12:53:26Z",
	"updated_at": "2016-06-24T22:38:08Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
