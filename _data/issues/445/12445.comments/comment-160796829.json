{
	"id": 160796829,
	"body": "@randall77, probably the best thing to do is look at the [docs linked above](https://github.com/gonum/matrix/commit/63ca8d2aafe3fb0cff6ceba412081418a686fa85) and the implementation of the checkOverlap methods in the [code linked above](https://github.com/gonum/matrix/commit/2340d863e8d0f0a36f5cda59912a92a77fb0fdd6). However, in brief we need to be able to detect overlap in views of a 2-d matrix. An overlap is when two matrices share an element in the backing store - this is more complex that just a trivial overlap as described in minux's first proposal and also more complex than a stride\u003e1 overlap, since a description of a matrix is `struct { data []float64; rows, cols, stride int }`, not just `struct { data []float64; stride int }`. To assess the overlap of two blocks when the stride-only bool-returning function, you would require (AFAICS) O(rows) operations for a row major storage.",
	"user": {
		"login": "kortschak",
		"id": 275221,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-30T23:28:11Z",
	"updated_at": "2015-11-30T23:32:16Z"
}
