{
	"id": 51281439,
	"number": 3966,
	"state": "closed",
	"title": "compiler: 8g: incorrect negative float to uint underflow behavior",
	"body": "\u003cpre\u003e53116ca07207+ tip\n\nThis is a bit of a silly example, but the behavior is different on Linux and Windows\nnonetheless, and I'm wondering if it might be part of a bigger issue:\n\npackage main\n\nimport \u0026quot;fmt\u0026quot;\n\nfunc main() {\n        n := uint8(0)    // or uint16, uint32, uint64...                                                                             \n        f := float64(-1) // or float32, but not int32/int64                                                                          \n        on := uint8(f)   // does not underflow on Windows                                                                            \n        // on := uint8(int32(f)) // this works on both platforms                                                                     \n        fmt.Printf(\u0026quot;on is %d\\n\u0026quot;, on)\n        n += on\n        if n != 255 {\n                fmt.Printf(\u0026quot;n is not 255: %d\\n\u0026quot;, n)\n        }\n}\n\nOn Linux (x64):\n\n# uintunderflow \non is 255\n\nOn Windows (x64):\n\n# uintunderflow.exe\non is 0\nn is not 255: 0\u003c/pre\u003e",
	"user": {
		"login": "patrickmn",
		"id": 72885,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:21:02Z",
	"created_at": "2012-08-17T11:11:29Z",
	"updated_at": "2016-06-24T22:23:15Z"
}
