{
	"id": 233375572,
	"body": "Haven't dug much, but I see at least two issues here.\r\n\r\n(1) The sparse phi locator is slow on this. Determined by sending SIGQUIT a few times after letting the compilation run for a while. Running with `GO_SSA_PHI_LOC_CUTOFF=-1` gets past the SSA construction phase quickly, and lets you reach problem 2.\r\n\r\n(2) Memory blowup in regalloc during liveness computation. There are lots of values live across lots of blocks, leading to O(n^2) behavior. That's what causes the machine instability.\r\n\r\nThere might be some cheap additional heuristics we can use for selecting whether to use the sparse phi locator. That'd probably be safe for 1.7.\r\n\r\nThe quadratic memory usage in liveness is a general, important, known problem, and way out of scope for 1.7. (David, might an SCC-based representation of liveness help here?)\r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-18T16:07:15Z",
	"updated_at": "2016-07-18T16:07:15Z"
}
