{
	"id": 237860567,
	"body": "I think something is wrong in the export data generated by the compiler.\r\n\r\na.go:\r\n\r\n    package a\r\n\r\n    import \"fmt\"\r\n\r\n    func F(v struct { i int }) {\r\n\t    fmt.Printf(\"F: %d\\n\", v.i)\r\n    }\r\n\r\nmain.go:\r\n\r\n    package main\r\n\r\n    import (\r\n\t    \"fmt\"\r\n\t    \"reflect\"\r\n\r\n\t    \"issue16616/a\"\r\n    )\r\n\r\n    func main() {\r\n\t    s := struct{i int}{1}\r\n\t    v := reflect.ValueOf(a.F)\r\n\t    fmt.Printf(\"%#v\\n\", reflect.ValueOf(s).Type().Field(0))\r\n\t    fmt.Printf(\"%#v\\n\", v.Type().In(0).Field(0))\r\n\t    v.Call([]reflect.Value{reflect.ValueOf(s)})\r\n    }\r\n\r\nI would expect the `PkgPath` field of the first line to be `main`, and the `PkgPath` field of the second line to be `a`.  But instead, with 1.6 I see this:\r\n\r\n    reflect.StructField{Name:\"i\", PkgPath:\"issue16616/a\", Type:(*reflect.rtype)(0x4b84e0), Tag:\"\", Offset:0x0, Index:[]int{0}, Anonymous:false}\r\n    reflect.StructField{Name:\"i\", PkgPath:\"issue16616/a\", Type:(*reflect.rtype)(0x4b84e0), Tag:\"\", Offset:0x0, Index:[]int{0}, Anonymous:false}\r\n    F: 1\r\n\r\nand with 1.7 I see this:\r\n\r\n    reflect.StructField{Name:\"i\", PkgPath:\"main\", Type:(*reflect.rtype)(0x4adc40), Tag:\"\", Offset:0x0, Index:[]int{0}, Anonymous:false}\r\n    reflect.StructField{Name:\"i\", PkgPath:\"main\", Type:(*reflect.rtype)(0x4adc40), Tag:\"\", Offset:0x0, Index:[]int{0}, Anonymous:false}\r\n    F: 1\r\n\r\nCurrent guess: the type descriptors for the two different types are being merged even though that should not happen.\r\n\r\nCC @griesemer @crawshaw ",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-05T14:10:49Z",
	"updated_at": "2016-08-05T14:10:49Z"
}
