{
	"id": 51285674,
	"number": 6755,
	"state": "closed",
	"title": "image: basic resizing framework",
	"body": "\u003cpre\u003eFeature request.\n\nRequested on golang-nuts:\n\u003ca href=\"https://groups.google.com/d/msg/golang-nuts/rL1ATqYBECU/3UYlNCBgEaUJ\"\u003ehttps://groups.google.com/d/msg/golang-nuts/rL1ATqYBECU/3UYlNCBgEaUJ\u003c/a\u003e\n\nBy: Alberto García Hierro:\n\n\u0026gt;\u0026gt; There are many different resizing algorithms and approaches. I would\n\u0026gt;\u0026gt; imagine that pure Go image resizing can and should be done by a \u0026quot;go\n\u0026gt;\u0026gt; get\u0026quot;table third party library. Not everything has to be in the\n\u0026gt;\u0026gt; standard library.\n\nI totally agree, resizing algorithms should be pluggable. However, I think the standard\nlibrary should provide a basic framework for them, so users could write only the code\nfor the interpolation.\n\ne.g.\n\ntype Interpolator interface... or type Interpolator func... for better performance\n\nfunc Resize(im Image, width, height int, inter Interpolator) (Image, error)\n\n\n\nBest regards,\nDobrosław Żybort\u003c/pre\u003e",
	"user": {
		"login": "matrixik",
		"id": 201930,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:37:32Z",
	"created_at": "2013-11-13T08:44:21Z",
	"updated_at": "2016-06-25T01:22:13Z"
}
