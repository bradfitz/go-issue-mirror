{
	"id": 51288909,
	"number": 8954,
	"state": "closed",
	"title": "encoding/csv: If the user provides a bufio.Reader then use it rather than creating a new one.",
	"body": "by **brady**:\n\n\u003cpre\u003eIn the csv.NewReader() call the input should be checked to see if it already is a\nbufio.Reader and if so it should be used directly rather than creating a new buffered\nreader. This would allow a reader to continue in the stream where a previous reader\nmight have failed.\n\nIn this example [ \u003ca href=\"http://play.golang.org/p/j7B5yzdsdC\"\u003ehttp://play.golang.org/p/j7B5yzdsdC\u003c/a\u003e ] It would be nice if we could get\nthe remaining file after the read call failed but it is completely consumed by the\nreader.\n\nThis would require the following change on this line (or whatever more readable version\nof this you prefer).\n\u003ca href=\"http://golang.org/src/pkg/encoding/csv/reader.go?s=3686:3721#L106\"\u003ehttp://golang.org/src/pkg/encoding/csv/reader.go?s=3686:3721#L106\u003c/a\u003e\n\n// NewReader returns a new Reader that reads from r.\nfunc NewReader(r io.Reader) *Reader {\n\tif bufr, ok := r.(*bufio.Reader); ok {\n\t\treturn \u0026amp;Reader{\n\t\t\tComma: ',',\n\t\t\tr: bufr,\n\t\t}\n\t}\n\treturn \u0026amp;Reader{\n\t\t\tComma: ',',\n\t\t\tr:     bufio.NewReader(r),\n \t}\n }\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:49:16Z",
	"created_at": "2014-10-17T21:13:17Z",
	"updated_at": "2016-06-25T01:43:13Z"
}
