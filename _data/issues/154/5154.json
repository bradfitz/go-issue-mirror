{
	"id": 51283208,
	"number": 5154,
	"state": "closed",
	"title": "bytes: bytes.Buffer uses an unbounded amount of memory even if its length stays bounded",
	"body": "by **robryk**:\n\n\u003cpre\u003eIf I read and write from/to a buffer in such a way that buffer's length remains bounded,\nbut it is never empty, the buffer's underlying byte slice will grow unboundedly.\n\nWhat steps will reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\u003ca href=\"http://play.golang.org/p/SsC896Kwd-\"\u003ehttp://play.golang.org/p/SsC896Kwd-\u003c/a\u003e runs out of memory, instead of running out of time.\n\nWhat is the expected output?\nI would expect the buffer to consume a bounded and small amount of memory, as it happens\nwhen the buffer occasionally runs dry. \n\nI believe this problem is caused by the bytes.Buffer always allocating a larger buffer\nin grow(n); even if the buffer's capacity is larger than twice the required size.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2014-12-08T10:27:36Z",
	"created_at": "2013-03-29T03:29:15Z",
	"updated_at": "2016-06-24T22:36:40Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
