{
	"id": 247558334,
	"body": "\u003e So to make an int into an interface we have to allocate an int on the heap and store a *int in the interface data word\r\n\r\nBut benchmark results say there are no memory allocations when passing `int` via `interface{}`:\r\n```\r\nBenchmarkEfaceArg-4     100000000           16.3 ns/op         0 B/op          0 allocs/op\r\n```\r\n\r\nedit:\r\nI noticed that the `i` may be allocated on heap only once per benchmark, so I changed the benchmark to:\r\n\r\n```go\r\nfunc BenchmarkEfaceArg(b *testing.B) {\r\n        n := 0\r\n        for i := 0; i \u003c b.N; i++ {\r\n                x := i\r\n                n += fEface(x)\r\n        }\r\n        if b.N \u003e 0 \u0026\u0026 n == 0 {\r\n                b.Fatalf(\"n shouldn't be zero. b.N=%d\", b.N)\r\n        }\r\n}\r\n```\r\n\r\nNo `x` must be allocated during each iteration, but benchmark results still say there are no allocations.",
	"user": {
		"login": "valyala",
		"id": 283442,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-16T09:32:56Z",
	"updated_at": "2016-09-16T09:37:17Z"
}
