{
	"id": 151019785,
	"number": 15443,
	"state": "closed",
	"title": "runtime/race: externally link, PIE, race-enabled executable crashes on startup",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\ngo version devel +91824fb Fri Apr 22 10:21:03 2016 +1200 linux/amd64\r\n\r\nor \r\n\r\ngo version go1.6.1 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\nlinux/amd64, 16.04 or 16.10\r\n\r\n3. What did you do?\r\n\r\ngo run -ldflags='-linkmode=external -extldflags=-pie' -race /opt/opensource/go-test-cases/trivial.go\r\n\r\n4. What did you expect to see?\r\n\r\nNo output.\r\n\r\n5. What did you see instead?\r\n\r\n==12590==ERROR: ThreadSanitizer failed to allocate 0x2698000 (40468480) bytes at address 1765924f4c680 (errno: 12)\r\nsignal: segmentation fault (core dumped)\r\n\r\nThis came to my attention because the development release of Ubuntu has enabled PIE by default on amd64 and ./all.bash fails in the \"Testing race detector\" step. This could be patched around by passing -no-pie to the external linker when -race is passed to the linker but that seems like a short term hack only.",
	"user": {
		"login": "mwhudson",
		"id": 672022,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "RaceDetector"
		}
	],
	"assignee": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2016-04-26T21:05:40Z",
	"created_at": "2016-04-26T01:36:12Z",
	"updated_at": "2016-04-26T21:05:40Z"
}
