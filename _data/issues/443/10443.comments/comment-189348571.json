{
	"id": 189348571,
	"body": "One idea is to implement this using rebase `--autosquash` and `--autostash` options. But as with any rebase, we may hit conflicts, i.e. I have two CLs, and make an extra change, that I want to be applied in the first CL, but if this change depends (in terms of textual diffs) on the second CL.\r\n\r\nWhen there's a conflict, rebase will stop and let the user fix the issue, then user calls `git rebase --continue` or `git rebase --abort`. It's not clear we want `git change` to leave the user in that state by default. Would we rather fail with something like: \"couldn't apply change, use -f to fix conflicts\"?",
	"user": {
		"login": "cmarcelo",
		"id": 10478,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-26T16:14:00Z",
	"updated_at": "2016-02-26T16:14:00Z"
}
