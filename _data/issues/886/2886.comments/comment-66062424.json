{
	"id": 66062424,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eCurrent golang-nuts discussion:\n\u003ca href=\"https://groups.google.com/d/topic/golang-nuts/XS42mnv2Et0/discussion\"\u003ehttps://groups.google.com/d/topic/golang-nuts/XS42mnv2Et0/discussion\u003c/a\u003e\n\nFor many cases, ServeContent already counts as a way of transparently handling both HEAD\nand GET methods if an io.ReadSeeker can be provided. Between DetectContentType and\nknowing the type ahead of time (i.e. always application/json) covers many of the other\ncases.\n\nIf sniffing support for HEAD in ResponseWriter were added, it may be wise to have it\npanic with a sentinel on the first Write after sniffLen bytes had already been written\n(so a Write of 513 bytes won't panic, but the next Write of 1 byte will). This will\nprevent naive apps from wasting cpu time writing megabytes of data as if it were a GET\nrequest. The sentinel could be detected in the existing panic-recovery mechanism and log\nan informative \"fix this app\" message, but otherwise consider the response successful.\u003c/pre\u003e",
	"user": {
		"login": "extemporalgenome",
		"id": 536740,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-12-16T17:27:29Z",
	"updated_at": "2014-12-08T10:15:11Z"
}
