{
	"id": 97518846,
	"number": 11886,
	"state": "closed",
	"title": "runtime: address space conflict on Linux/Arm64",
	"body": "I'm attempting to build the golang 1.5 beta2 on the Arm64 port of CentOS 7, however I appear to be running into memory issues. The initial cross-compile completes successfully on an x86_64 CentOS-7 host via the following command\r\n\r\n```\r\nGOOS=linux GOARCH=arm64 GOROOT_BOOTSTRAP=/opt/go1.4.2 ./bootstrap.bash\r\n```\r\n\r\nHowever when I move the resulting bootstrap tarball to the arm64 box, I immediately get a memory address space conflict no matter what go command I run. \r\n\r\n```\r\n[jperrin@apma3 go-linux-arm64-bootstrap]$ ./bin/go help\r\nruntime: address space conflict: map(0x481fff8000) = 0x481fff0000\r\nfatal error: runtime: address space conflict\r\n\r\nruntime stack:\r\nruntime.throw(0x599ec0, 0x1f)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/panic.go:527 +0x80 fp=0x3fff9b7bd60 sp=0x3fff9b7bd40\r\nruntime.sysMap(0x481fff8000, 0x8000, 0x4820000000, 0x7b7fb8)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/mem_linux.go:147 +0x134 fp=0x3fff9b7bda0 sp=0x3fff9b7bd60\r\nruntime.mHeap_MapBits(0x7997a0, 0x4820100000)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/mbitmap.go:141 +0xec fp=0x3fff9b7bdd0 sp=0x3fff9b7bda0\r\nruntime.mHeap_SysAlloc(0x7997a0, 0x100000, 0x792954)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/malloc.go:424 +0x15c fp=0x3fff9b7be50 sp=0x3fff9b7bdd0\r\nruntime.mHeap_Grow(0x7997a0, 0x8, 0x0)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/mheap.go:625 +0x70 fp=0x3fff9b7beb0 sp=0x3fff9b7be50\r\nruntime.mHeap_AllocSpanLocked(0x7997a0, 0x1, 0x0)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/mheap.go:529 +0x6bc fp=0x3fff9b7bf10 sp=0x3fff9b7beb0\r\nruntime.mHeap_Alloc_m(0x7997a0, 0x1, 0x15, 0x0)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/mheap.go:422 +0x14c fp=0x3fff9b7bf40 sp=0x3fff9b7bf10\r\nruntime.mHeap_Alloc.func1()\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/mheap.go:481 +0x50 fp=0x3fff9b7bf70 sp=0x3fff9b7bf40\r\nruntime.systemstack(0x3fff9b7bfa8)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/asm_arm64.s:251 +0xb8 fp=0x3fff9b7bf80 sp=0x3fff9b7bf70\r\nruntime.mHeap_Alloc(0x7997a0, 0x1, 0x10000000015, 0x97880)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/mheap.go:482 +0x60 fp=0x3fff9b7bfd0 sp=0x3fff9b7bf80\r\nruntime.mCentral_Grow(0x7a2170, 0x9322c)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/mcentral.go:205 +0xc0 fp=0x3fff9b7c040 sp=0x3fff9b7bfd0\r\nruntime.mCentral_CacheSpan(0x7a2170, 0x4000)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/mcentral.go:101 +0x700 fp=0x3fff9b7c090 sp=0x3fff9b7c040\r\nruntime.mCache_Refill(0x3ff970d0000, 0x15, 0x7b7fa8)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/mcache.go:118 +0xf4 fp=0x3fff9b7c0d0 sp=0x3fff9b7c090\r\nruntime.mallocgc.func2()\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/malloc.go:611 +0x34 fp=0x3fff9b7c0f0 sp=0x3fff9b7c0d0\r\nruntime.systemstack(0x3fff9b7c1a8)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/asm_arm64.s:251 +0xb8 fp=0x3fff9b7c100 sp=0x3fff9b7c0f0\r\nruntime.mallocgc(0x180, 0x5208a0, 0x8800000000, 0x4000000000)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/malloc.go:612 +0x874 fp=0x3fff9b7c1e0 sp=0x3fff9b7c100\r\nruntime.newobject(0x5208a0, 0xb32b0)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/malloc.go:742 +0x78 fp=0x3fff9b7c210 sp=0x3fff9b7c1e0\r\nruntime.malg(0x8000, 0xb325c)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/proc1.go:2165 +0x28 fp=0x3fff9b7c250 sp=0x3fff9b7c210\r\nruntime.mpreinit(0x793a60)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/os1_linux.go:188 +0x24 fp=0x3fff9b7c270 sp=0x3fff9b7c250\r\nruntime.mcommoninit(0x793a60)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/proc1.go:114 +0x114 fp=0x3fff9b7c2c0 sp=0x3fff9b7c270\r\nruntime.schedinit()\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/proc1.go:57 +0x74 fp=0x3fff9b7c310 sp=0x3fff9b7c2c0\r\nruntime.rt0_go(0x3fff9b7f690, 0x3fff9b7f699, 0x0, 0x3fff9b7f69e, 0x3fff9b7f6af, 0x3fff9b7f6be, 0x3fff9b7f6d6, 0x3fff9b7f6ea, 0x3fff9b7f6fa, 0x3fff9b7f708, ...)\r\n\t/home/jperrin/code/github/go-linux-arm64-bootstrap/src/runtime/asm_arm64.s:73 +0xbc fp=0x3fff9b7c340 sp=0x3fff9b7c310\r\n\r\n```\r\n\r\nI've tried a number of variations on the build theme, but they all fail in the same manner. \r\nI *think* this is go assuming/forcing a 4K PAGESIZE rather than the 64K PAGESIZE we have on linux/arm64, but I don't know enough to verify this. Any help would be greatly appreciated. ",
	"user": {
		"login": "jperrin",
		"id": 8331520,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 17,
	"closed_at": "2015-07-28T19:59:14Z",
	"created_at": "2015-07-27T17:56:55Z",
	"updated_at": "2016-09-22T15:54:35Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
