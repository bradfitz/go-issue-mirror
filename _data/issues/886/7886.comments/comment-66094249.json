{
	"id": 66094249,
	"body": "\u003ca id=\"c9\"\u003e\u003c/a\u003eComment 9 by **Zteve.Powell**:\n\n\u003cpre\u003e| The feature of using a non-exported method in an interface, which ensures that all\nimplementations of the\n| interface are within the same package, is by design, is well-understood, is used by\nstandard Go packages.\n| It is not an accident.\n\nI thought this was something that surprised Robert.\n\n| (Robert Griesemer is an employee of Google and one of the initial designers of the Go\nprogramming\n| language.) - Wikipedia\n\nPresumably this was a bit of the design that got past him. Possibly he only read the\nspec.\n\nI'm sure it is well understood, by those close to the language implementation, or\nimplementing standard Go packages.\n\nI can see it might be useful for built-in or critical system/language packages, but for\nnormal development, it impedes testability.  I cannot stub the use of an interface in\nanother component/package if it has a restricted implementation. Which then makes it\nhard for me to see how a tool like mockgen can cope with it -- unless it finds a way\nround it. (One which is well understood, designed in, and undocumented, no doubt.)\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-05-23T14:30:08Z",
	"updated_at": "2014-12-08T10:43:46Z"
}
