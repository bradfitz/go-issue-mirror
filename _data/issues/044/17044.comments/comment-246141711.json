{
	"id": 246141711,
	"body": "I started a CL to do the lowering in the backend when not instrumenting as it is more direct than expressing *(*string)(unsafe.Pointer(\u0026b)) in the frontend and then hope the ssa optimizations figure out that indirections are not needed.\r\n\r\nCan we let the frontend generate code to use the runtime function when ssaEnabled is not true since the non-ssa backend is likely to be removed for 1.8 anyway or would that be a violation of the separation between the stages?\r\n\r\nOARRAYBYTESTRTMP does not sound like a good name to me. Something like OSLICEBYTETOSTRTMP or OSLICEBYTETOSTRNOCOPY might be better? Later sounds more universal and can be used for all kinds of mappings in the compiler which we deem save and where we keep either byteslice or str around afterwards.\r\n\r\nOther string functions (e.g. stringtoslicebytetmp) seem to be also good candidates to be handled directly by either frontend or backend instead of a runtime function.",
	"user": {
		"login": "martisch",
		"id": 184995,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-10T21:34:42Z",
	"updated_at": "2016-09-10T21:34:42Z"
}
