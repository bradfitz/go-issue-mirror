{
	"id": 149737668,
	"body": "@jmcauley people may be relying on the current behavior, which is the truthiness of pointers being whether they are nil or not (and nothing to do with their underlying value). \r\n\r\nhttp://play.golang.org/p/JjXCYt8fFb\r\n\r\nThinking about it in a slightly different context: in terms of template truthiness, the integers 1 and 0 are true and false. But what if someone relies on a pointer to an int being non-nil in their template logic?\r\n\r\n```\r\n{{with .UserCount}}Users: {{.UserCount}}{{end}}\r\n```\r\nIf you pass in a `struct { UserCount *int }` it is possible to display `UserCount: 0`. With your proposed change, you could not longer to that.",
	"user": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-20T23:51:36Z",
	"updated_at": "2015-10-20T23:52:04Z"
}
