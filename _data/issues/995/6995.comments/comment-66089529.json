{
	"id": 66089529,
	"body": "\u003ca id=\"c12\"\u003e\u003c/a\u003eComment 12:\n\n\u003cpre\u003eHi Dave,\n\nI disagree with your assessment of that piece of code. Quoting from the Go memory model\ndocument:\n\n\"Within a single goroutine, the happens-before order is the order expressed by the\nprogram.\"\n\n\"A send on a channel happens before the corresponding receive from that channel\ncompletes.\"\n\nCombining these two properties, it seems to me that the assignment to resp and err does,\nin fact, happen before any reads of those variables later on in the code.\n\nFurthermore, the race detector did not find concurrent access to these; only in net/http\ncode as indicated (I understand that this is not proof of the absence of a race).\n\nTo double-check, I made your suggested change in \u003ca href=\"http://play.golang.org/p/OQrSxQZPsq\"\u003ehttp://play.golang.org/p/OQrSxQZPsq\u003c/a\u003e,\nand verified that I see the same data race as in the original post.\u003c/pre\u003e",
	"user": {
		"login": "cespare",
		"id": 318501,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-12-27T21:36:49Z",
	"updated_at": "2014-12-08T10:38:58Z"
}
