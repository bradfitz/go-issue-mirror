{
	"id": 66089534,
	"body": "\u003ca id=\"c17\"\u003e\u003c/a\u003eComment 17:\n\n\u003cpre\u003eHey Brad, I appreciate you taking a look at this. I can confirm that the patch fixes the\nrace in my app.\n\nCan you describe the race that you see in my code from comment #8\n(\u003ca href=\"http://play.golang.org/p/OFIt2wXIr_)?\"\u003ehttp://play.golang.org/p/OFIt2wXIr_)?\u003c/a\u003e Looking at the change you made, it seems like\nyou're thinking that two goroutines in handleProxy can race on err (declared on line 58)\nbut I don't see how that can be, since all code paths to get to the read of err on line\n78 must first have received from finished (\u0026lt;-finished).\n\nIn fact, it seems to me that your version (\u003ca href=\"http://play.golang.org/p/WQwK-PhpiK)\"\u003ehttp://play.golang.org/p/WQwK-PhpiK)\u003c/a\u003e doesn't\nalways close the response body; consider the sequence:\n\n- Timer fires\n- In the other goroutine, transport.RoundTrip (line 63) has completed successfully\n- transport.CancelRequest in line 73 runs (doesn't do anything)\n\nNow resp.Body is never closed.\u003c/pre\u003e",
	"user": {
		"login": "cespare",
		"id": 318501,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-12-31T00:42:01Z",
	"updated_at": "2014-12-22T06:31:01Z"
}
