{
	"id": 202474771,
	"body": "```\r\nimport \"math\"\r\n\r\nfunc f(x []float64) int {\r\n\tmax := 0.0\r\n\tidx := 0\r\n\tfor i, v := range x {\r\n\t\tabsV := math.Abs(v)\r\n\t\tif absV \u003e max {\r\n\t\t\tmax = absV\r\n\t\t\tidx = i\r\n\t\t}\r\n\t}\r\n\treturn idx\r\n}\r\n```\r\nIt looks like SSA is spilling `i` during the loop.  Kind of an unfortunate consequence of how registers are picked for phi ops.  It registerizes i correctly at the top of the loop, but then it decides to also allocate `(Phi idx i)` to the same register.  At the Phi it basically flips a coin as to whether to use the register of `idx` or `i` for the phi, and picks the wrong one.  Not sure what the right fix would be yet.  Some sort of lookahead might help.\r\n",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-28T16:35:12Z",
	"updated_at": "2016-03-28T16:35:12Z"
}
