{
	"id": 66053185,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3 by **w.d.hubbs**:\n\n\u003cpre\u003eThis #if directive, which I have found needs to be added at the end of the .S files I\nlisted above, marks the stack region to be non-executable, so that if someone tries to\nexecute machine code in the stack region of memory it will cause an exception.  Without\nit, for assembly code, gcc assumes that it is ok for the stack to be executable.\n\nDoes Go ever need to execute machine code that is directly stored in the stack region?\n\nFor more info on this, you might want to take a look at the article on wikipedia about\n\"Executable space protection\".\n\nWhat do you think?  Do you need more information?  Can you please consider adding this\nif Go does not need the stack to be executable?\n\nThanks much,\n\nWilliam\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-11-03T18:51:29Z",
	"updated_at": "2014-12-08T10:07:30Z"
}
