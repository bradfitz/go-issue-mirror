{
	"id": 51286226,
	"number": 7125,
	"state": "open",
	"title": "net/http/cookiejar: figure out canonicalization resposibility",
	"body": "\u003cpre\u003eNigel's comments on \u003ca href=\"https://golang.org/cl/47560044/\"\u003ehttps://golang.org/cl/47560044/\u003c/a\u003e :\n\n\u0026quot;\u0026quot;\u0026quot;\nOK, but this means that e.g., in the\ncode.google.com/p/go.net/publicsuffix implementation, it's perfectly\nvalid thatPublicSuffix(\u0026quot;example.com.au\u0026quot;) is \u0026quot;com.au\u0026quot; but\nPublicSuffix(\u0026quot;EXAMPLE.COM.AU\u0026quot;) is \u0026quot;AU\u0026quot;.\n\nWhat happens if, somewhere out there in the wild internet, a anchor's\nhref contains a domain in ALL.CAPS? A naive HTTP client implementation\nmight end up associating any returned cookies with the wrong public\nsuffix, unless somewhere along the line the domains are canonicalized to\nlower case. Is this a cookie security problem, and a particularly\ninsidious one since it 'works' 99.999% of the time?\n\nThis particular CL says that the PublicSuffixList is not responsible for\ncanonicalization (lower-casing, punycode), but the bigger question of\nwho *is* responsible is left unanswered. Having different parts of a\nprogram each do their own ad hoc canonicalization can be precarious,\ne.g. if some separate part of the program then lower-cases the \u0026quot;AU\u0026quot; to\n\u0026quot;au\u0026quot;. It's not exactly related to cookie jars, but I am reminded of\n\u003ca href=\"http://labs.spotify.com/2013/06/18/creative-usernames/\"\u003ehttp://labs.spotify.com/2013/06/18/creative-usernames/\u003c/a\u003e\n\nPersonally, I would not have removed the TODO without first building\nconsensus (presumably as a new discussion on golang-dev) about how to\napproach domain canonicalization and cookies so that it's always right,\nnot just almost always right.\n\u0026quot;\u0026quot;\u0026quot;\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"created_at": "2014-01-14T20:26:41Z",
	"updated_at": "2015-04-14T19:45:22Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
