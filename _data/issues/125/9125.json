{
	"id": 51289126,
	"number": 9125,
	"state": "closed",
	"title": "go1.4rc1 on Windows: garbage collector found invalid heap pointer",
	"body": "\u003cpre\u003eWith \u0026quot;go version go1.4rc1 windows/amd64\u0026quot;, I occasionally receive a\n\u0026quot;garbage collector found invalid heap pointer\u0026quot; error. It appears to happen if\nthe garbage collector triggers during a (pascal-style) callback, although not if I add\nan unconditional runtime.GC() to the callback function.\n\n\u003ca href=\"http://play.golang.org/p/LW045v1RiH\"\u003ehttp://play.golang.org/p/LW045v1RiH\u003c/a\u003e reproduces the problem on my machine during the 2nd\ncall to dump(). I've tried to reduce the test case as much as possible. If I reduce\ndump() to just listWindows(), or if I remove the call to getName(), the problem does not\nreproduce on my machine (presumably due to reduced garbage), although it may depend on\nthe exact number of windows open at the time you run the example.\n\n\n\nruntime: garbage collector found invalid heap pointer *(0xc082023ab8+0x0)=0xc082067d38\nspan=0xc082056000-0x0-0xc082068000 state=4\nfatal error: invalid heap pointer\n\nruntime stack:\nruntime.throw(0x56f823)\n        c:/go/src/runtime/panic.go:491 +0xad fp=0x6f7b8 sp=0x6f788\nscanblock(0xc082023ab8, 0x90, 0x51f30c)\n        c:/go/src/runtime/mgc0.c:378 +0x558 fp=0x6f8f8 sp=0x6f7b8\nscanframe(0x6fa00, 0x0, 0x1)\n        c:/go/src/runtime/mgc0.c:719 +0x16b fp=0x6f968 sp=0x6f8f8\nruntime.gentraceback(0x438520, 0xc0820238f0, 0x0, 0xc08201a000, 0x0, 0x0, 0x7fffffff,\n0x6fab0, 0x0, 0x0, ...)\n        c:/go/src/runtime/traceback.go:311 +0x7af fp=0x6fa58 sp=0x6f968\nscanstack(0xc08201a000)\n        c:/go/src/runtime/mgc0.c:777 +0x22a fp=0x6fac8 sp=0x6fa58\nmarkroot(0xc082014000, 0xc000000005)\n        c:/go/src/runtime/mgc0.c:553 +0xee fp=0x6fb28 sp=0x6fac8\nruntime.parfordo(0xc082014000)\n        c:/go/src/runtime/parfor.c:76 +0xb9 fp=0x6fba8 sp=0x6fb28\ngc(0x6fce0)\n        c:/go/src/runtime/mgc0.c:1439 +0x26c fp=0x6fcc0 sp=0x6fba8\nruntime.gc_m()\n        c:/go/src/runtime/mgc0.c:1368 +0x103 fp=0x6fcf8 sp=0x6fcc0\nruntime.onM(0x6ff08)\n        c:/go/src/runtime/asm_amd64.s:257 +0x6d fp=0x6fd00 sp=0x6fcf8\nruntime.mstart()\n        c:/go/src/runtime/proc.c:786 fp=0x6fd08 sp=0x6fd00\n\ngoroutine 1 [garbage collection, locked to thread]:\nruntime.switchtoM()\n        c:/go/src/runtime/asm_amd64.s:198 fp=0xc0820238f8 sp=0xc0820238f0\nruntime.gogc(0x0)\n        c:/go/src/runtime/malloc.go:469 +0x1d6 fp=0xc082023930 sp=0xc0820238f8\nruntime.mallocgc(0xc000, 0x4e1580, 0x0, 0xc082023a40)\n        c:/go/src/runtime/malloc.go:341 +0x398 fp=0xc0820239e0 sp=0xc082023930\nruntime.newarray(0x4e1580, 0x22e, 0x463396)\n        c:/go/src/runtime/malloc.go:365 +0xc8 fp=0xc082023a18 sp=0xc0820239e0\nruntime.growslice(0x4b1bc0, 0xc082048000, 0x117, 0x117, 0x1, 0x0, 0x0, 0x0)\n        c:/go/src/runtime/slice.go:87 +0x2c2 fp=0xc082023a78 sp=0xc082023a18\nmain.perWindow(0x1025c, 0xc082067d38, 0x573ae0)\n        S:/go/src/spy/example.go:71 +0x159 fp=0xc082023b50 sp=0xc082023a78\nruntime.call32(0x522530, 0x6fd80, 0x18)\n        c:/go/src/runtime/asm_amd64.s:402 +0x4c fp=0xc082023b78 sp=0xc082023b50\nruntime.cgocallbackg1()\n        c:/go/src/runtime/cgocall.go:239 +0x131 fp=0xc082023bd8 sp=0xc082023b78\nruntime.cgocallbackg()\n        c:/go/src/runtime/cgocall.go:193 +0x6e fp=0xc082023c08 sp=0xc082023bd8\nruntime.cgocallback_gofunc(0x439bcf, 0x403793, 0x43aeb0)\n        c:/go/src/runtime/asm_amd64.s:766 +0x64 fp=0xc082023c18 sp=0xc082023c08\nasmcgocall()\n        c:/go/src/runtime/asm_amd64.s:649 +0x3c fp=0xc082023c20 sp=0xc082023c18\nruntime.asmcgocall_errno(0x43aeb0, 0xc082023c68)\n        c:/go/src/runtime/asm_amd64.s:626 +0xf fp=0xc082023c28 sp=0xc082023c20\nruntime.cgocall_errno(0x43aeb0, 0xc082023c68, 0x0)\n        c:/go/src/runtime/cgocall.go:131 +0xf3 fp=0xc082023c50 sp=0xc082023c28\nruntime.syscall_Syscall(0x76c04ce0, 0x3, 0x0, 0x43b630, 0xc082067d38, 0x522530, 0x1,\n0x43b630)\n        c:/go/src/runtime/syscall_windows.go:128 +0x6c fp=0xc082023cb0 sp=0xc082023c50\ngithub.com/lxn/win.EnumChildWindows(0x0, 0x43b630, 0xc082067d38, 0x57ecf8)\n        S:/go/src/github.com/lxn/win/user32.go:1927 +0x58 fp=0xc082023cf8 sp=0xc082023cb0\nmain.listWindows(0x0, 0x0, 0x0, 0x0)\n        S:/go/src/spy/example.go:79 +0xf6 fp=0xc082023d60 sp=0xc082023cf8\nmain.dump()\n        S:/go/src/spy/example.go:22 +0x39 fp=0xc082023f60 sp=0xc082023d60\nmain.main()\n        S:/go/src/spy/example.go:36 +0x4b fp=0xc082023f98 sp=0xc082023f60\nruntime.main()\n        c:/go/src/runtime/proc.go:63 +0xfa fp=0xc082023fe0 sp=0xc082023f98\nruntime.goexit()\n        c:/go/src/runtime/asm_amd64.s:2232 +0x1 fp=0xc082023fe8 sp=0xc082023fe0\n\ngoroutine 2 [force gc (idle)]:\nruntime.gopark(0x430920, 0x5733c0, 0x4fda10, 0xf)\n        c:/go/src/runtime/proc.go:130 +0x10c fp=0xc082021f98 sp=0xc082021f68\nruntime.goparkunlock(0x5733c0, 0x4fda10, 0xf)\n        c:/go/src/runtime/proc.go:136 +0x4f fp=0xc082021fc0 sp=0xc082021f98\nruntime.forcegchelper()\n        c:/go/src/runtime/proc.go:99 +0xd5 fp=0xc082021fe0 sp=0xc082021fc0\nruntime.goexit()\n        c:/go/src/runtime/asm_amd64.s:2232 +0x1 fp=0xc082021fe8 sp=0xc082021fe0\ncreated by runtime.init┬À4\n        c:/go/src/runtime/proc.go:87 +0x2c\n\ngoroutine 3 [runnable]:\nruntime.gopark(0x430920, 0x57ec88, 0x4f9cf0, 0xd)\n        c:/go/src/runtime/proc.go:130 +0x10c fp=0xc08201ff98 sp=0xc08201ff68\nruntime.goparkunlock(0x57ec88, 0x4f9cf0, 0xd)\n        c:/go/src/runtime/proc.go:136 +0x4f fp=0xc08201ffc0 sp=0xc08201ff98\nruntime.bgsweep()\n        c:/go/src/runtime/mgc0.go:98 +0xc3 fp=0xc08201ffe0 sp=0xc08201ffc0\nruntime.goexit()\n        c:/go/src/runtime/asm_amd64.s:2232 +0x1 fp=0xc08201ffe8 sp=0xc08201ffe0\ncreated by gc\n        c:/go/src/runtime/mgc0.c:1383\n\ngoroutine 4 [finalizer wait]:\nruntime.gopark(0x430920, 0x57ec80, 0x4fd590, 0xe)\n        c:/go/src/runtime/proc.go:130 +0x10c fp=0xc082045f30 sp=0xc082045f00\nruntime.goparkunlock(0x57ec80, 0x4fd590, 0xe)\n        c:/go/src/runtime/proc.go:136 +0x4f fp=0xc082045f58 sp=0xc082045f30\nruntime.runfinq()\n        c:/go/src/runtime/malloc.go:720 +0xc1 fp=0xc082045fe0 sp=0xc082045f58\nruntime.goexit()\n        c:/go/src/runtime/asm_amd64.s:2232 +0x1 fp=0xc082045fe8 sp=0xc082045fe0\ncreated by runtime.createfing\n        c:/go/src/runtime/malloc.go:700 +0x65\u003c/pre\u003e",
	"user": {
		"login": "peterh",
		"id": 79339,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 7,
	"closed_at": "2014-12-08T10:49:54Z",
	"created_at": "2014-11-18T18:37:38Z",
	"updated_at": "2016-06-25T01:44:37Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
