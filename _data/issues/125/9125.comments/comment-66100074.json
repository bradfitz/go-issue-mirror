{
	"id": 66100074,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eThanks for all the great information.\n\nHere is the code that is breaking:\n\n\tfunc listWindows(hwnd win.HWND) []window {\n\t\tvar d cbData\n\t\td.list = make([]window, 0)\n\t\td.pid = make(map[uint32]string)\n\t\twin.EnumChildWindows(hwnd, syscall.NewCallback(perWindow), uintptr(unsafe.Pointer(\u0026d)))\n\t\treturn d.list\n\t}\n\nThe problem is that listWindows is passing \u0026d to win.EnumChildWindows as a uintptr. That\nmakes it look like d does not escape, so d stays on the stack. If a stack growth occurs\nduring the call to EnumChildWindows, the uintptr(\u0026d) argument is not updated; it still\npoints back at the old stack even once we're executing on the new stack. Then the\nperWindow callback converts the uintptr back into a pointer and ends up with a pointer\nback at the old stack. Since the old stack hasn't been cleared and probably hasn't been\nreused, perWindow is scribbling on memory it doesn't own but probably won't crash just\nyet. But then a garbage collection happens, and that garbage collection finds this\ninvalid pointer and (correctly) stops the program before more damage occurs.\n\nTo make this work, you need to make sure that d does not move. Today, only stack data\nmoves. You need to make sure d ends up in the heap instead. It's not enough to say d :=\nnew(cbData), because d looks like it doesn't escape and will be allocated on the stack\neven in that form. The easiest thing to do is to make d actually escape.\n\n\tvar blackhole *cbData // write-only, to make compiler see that a pointer escapes\n\t\n\tfunc listWindows(hwnd win.HWND) []window {\n\t\tvar d cbData\n\t\tblackhole = \u0026d\n\t\td.list = make([]window, 0)\n\t\td.pid = make(map[uint32]string)\n\t\twin.EnumChildWindows(hwnd, syscall.NewCallback(perWindow), uintptr(unsafe.Pointer(\u0026d)))\n\t\treturn d.list\n\t}\n\nThat will force d into the heap, where it will not move (for now), making the\npointer-\u003euintptr-\u003epointer work (for now).\n\nRuss\u003c/pre\u003e\n\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-11-19T20:32:39Z",
	"updated_at": "2014-12-08T10:49:54Z"
}
