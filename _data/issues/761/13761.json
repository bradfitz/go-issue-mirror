{
	"id": 124161266,
	"number": 13761,
	"state": "closed",
	"title": "proposal: Add runtime.Free() for GOGC=off",
	"body": "There is a desire by some to disable Garbage Collection in Go. There are various reasons why someone might want to do this, but when someone DOES disable Garbage Collection through the use of environment variables, there's an issue one might run into:\r\n\r\nThere's no built in way to implicitly deallocate memory. But the runtime package does have a sysFree() function. I'm proposing to have this function exported by the package, by making a runtime.Free(v interface{}) function that calls sysFree with the proper pointers and all.\r\n\r\nWhile it's great to not have to worry about memory management, garbage collection has some draw backs, and if you're going to implement a feature to disable Garbage Collection, I feel it's necessary to also allow the ability to free up memory manually.",
	"user": {
		"login": "TUSF",
		"id": 8594356,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2015-12-29T05:26:33Z",
	"created_at": "2015-12-29T04:19:38Z",
	"updated_at": "2015-12-29T05:26:33Z"
}
