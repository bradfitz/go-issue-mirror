{
	"id": 51279671,
	"number": 2761,
	"state": "closed",
	"title": "Marshaler cannot work with omitempty in encoding/json",
	"body": "by **ianster**:\n\n\u003cpre\u003eBefore filing a bug, please check whether it has been fixed since\nthe latest release: run \u0026quot;hg pull\u0026quot;, \u0026quot;hg update default\u0026quot;, rebuild, and\nretry\nwhat you did to\nreproduce the problem.  Thanks.\n\nWhat steps will reproduce the problem?\n1.  Create a type with a custom Marshaler implementation, one that only marshals to the\nempty value\n2.  Put that type as the only field in a struct and tag the field as\n`json:\u0026quot;,omitempty\u0026quot;`\n3.  json.Marshal the struct\n\nWhat is the expected output?\n{}\n\nWhat do you see instead?\n\n{ fieldName: somethingRepresentingAnEmptyValue}\n\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\ndarwin\n\nWhich revision are you using?  (hg identify)\n63a6abde14b1 tip\n\nPlease provide any additional information below.\n\nI'd be happy to supply a patch if you want to change this behavior.\n\nI think the simplest solution is to add a return value to Marshal that indicates the\nencoded value represents empty for this type.  Then the json encoder can take\nappropriate action only in cases where it is needed.\n\nThe problem \u0026quot;occurs at\u0026quot; around line 265 in encode.go because the check there\nhas been called recursively from around line 342 and by that point it is too late to not\noutput for this value.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Unfortunate"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:14:41Z",
	"created_at": "2012-01-23T08:14:40Z",
	"updated_at": "2016-06-24T21:24:13Z"
}
