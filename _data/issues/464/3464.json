{
	"id": 51280648,
	"number": 3464,
	"state": "closed",
	"title": "spec: Order of multiple assignment using range is not clear",
	"body": "\u003cpre\u003epackage main\n\nfunc main() {\n\tvar s [10]int\n\tvar i int\n\tfor i, s[i] = range [...]int{0, 1, 2, 3, 4} {\n\t\tprintln(i, s[i])\n\t}\n}\n\nIn the range clause, it's not clear what value of i is used when setting s[i].  Is it\nthe new value for i or the previous one?\n\nThe description in the spec of multiple assignments suggests that the value used for\ns[i] in the assignment should be determined before i is set.  However, that description\nis in a paragraph describing the multiple assignment case in which the number of\noperands on the left is the same as the number of operands on the right.  It's not clear\nwhether that description also applies to range, or for that matter to the other\noperations that can produce multiple results.\n\nIf range should act like other multiple assignments, then the spec should be clarified\nand there is a bug in 6g (but not in gccgo).  If range should not act like other\nmultiple assignments, then how should it act?\u003c/pre\u003e",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2014-12-08T10:18:07Z",
	"created_at": "2012-04-03T04:55:59Z",
	"updated_at": "2016-06-24T22:17:10Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
