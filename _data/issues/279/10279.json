{
	"id": 64940412,
	"number": 10279,
	"state": "open",
	"title": "x/playground: stdout and stderr not interleaved with defer",
	"body": "Consider the following program:\r\n\r\n    package main\r\n\r\n    import \"fmt\"\r\n\r\n    var z = 1\r\n\r\n    func main() {\r\n\r\n        defer increaseZ(10)\r\n        defer fmt.Println(\"z =\", increaseZ(20), \"Deferred Value 1\")\r\n         defer fmt.Println(\"z =\", increaseZ(30), \"Deferred Value 2\")\r\n\r\n       fmt.Println(\"z =\", z, \"Main Value\")\r\n    }\r\n\r\n    func increaseZ(y int) int {\r\n        z += y\r\n        println(\"z =\", z, \"Inside Increase Function\")\r\n        return z\r\n    }\r\n\r\nOn my machine (amd64 Linux), this program prints as expected:\r\n\r\n    z = 21 Inside Increase Function\r\n    z = 51 Inside Increase Function\r\n    z = 51 Main Value\r\n    z = 51 Deferred Value 2\r\n    z = 21 Deferred Value 1\r\n    z = 61 Inside Increase Function\r\n\r\nwhereas [on Playground](http://play.golang.org/p/6yi3bJ83K2), it prints the following incorrect output:\r\n\r\n    z = 21 Inside Increase Function\r\n    z = 51 Inside Increase Function\r\n    z = 61 Inside Increase Function\r\n    z = 51 Main Value\r\n    z = 51 Deferred Value 2\r\n    z = 21 Deferred Value 1\r\n\r\nI have no idea what causes this effect but it seems that the first deferred function call is executed before the final `fmt.Println` call in `main`.",
	"user": {
		"login": "fuzxxl",
		"id": 328433,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"created_at": "2015-03-28T12:59:01Z",
	"updated_at": "2015-04-14T19:21:32Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
