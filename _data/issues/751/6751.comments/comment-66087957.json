{
	"id": 66087957,
	"body": "\u003ca id=\"c9\"\u003e\u003c/a\u003eComment 9:\n\n\u003cpre\u003eI wanted to use Windows COM (specifically the MMDevice and EndpointVolume APIs) from a\nGo project. If this sounds like a bad idea, it is. So I wrote a simple DLL in C++ for\nthe COM stuff and exported the relevant functions. I have the DLL start another thread\nand run the COM stuff from there, to avoid worrying about how COM was going to interact\nwith Go's thread-hopping, etc.\n\nI use IAudioEndpointVolume::RegisterEndpointNotificationCallback to get notifications\nwhen the system volume changes. I wanted to use a Go callback here.\n\nSo the issue is that the DLL runs a separate thread but needs to use a Go callback in\nthat thread. I was not otherwise using Cgo, instead using syscall to call my DLL.\n\nLike I said, using import \"C\" solved the issue. It works like a champ. But I spent some\nhours trying to figure it out beforehand (the Go executable just crashed with no\nmessage) until I found this on the issue tracker.\n\nPossibly you don't hear about this issue much because most Go programmers don't use\ncallbacks in a separate thread in a DLL on Windows. Furthermore, people who ARE doing\nthis might already use import \"C\", which would hide the problem.\u003c/pre\u003e",
	"user": {
		"login": "chowey",
		"id": 991221,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-11-27T00:10:27Z",
	"updated_at": "2014-12-08T10:37:31Z"
}
