{
	"id": 66074292,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eHere is a minimal test case that Remy and me worked on\n\npackage foo\n\ntype Op struct {\n\tId     string\n\tInsert *cleanupDoc\n}\n\ntype cleanupDoc struct {\n\tId     string\n}\n\nfunc F() Op {\n\tcDoc := \u0026cleanupDoc{\n\t\tId:     \"hello\",\n\t}\n\treturn Op{\n\t\tId:     cDoc.Id,\n\t\tInsert: cDoc,\n\t}\n}\n\nThe problem is that escwalk doesn't rewalk cDoc. The second walk would mean that cDoc\ngot a lower level and marked as escaping.\n\nI'm not sure how you could rewalk without going into infinite recursion.\u003c/pre\u003e",
	"user": {
		"login": "DanielMorsing",
		"id": 545573,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-02-04T23:10:40Z",
	"updated_at": "2014-12-08T10:25:14Z"
}
