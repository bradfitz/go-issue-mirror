{
	"id": 125792308,
	"body": "So the arguments are: 1. it is simpler to understand in isolation, and 2. it is used by other projects.\r\n\r\nThat's a start, but I think it's worth exploring the interactions a bit to see how well those arguments hold up. It is simpler in isolation, yes, on the assumption that algorithms on pixels don't exhibit the same properties general numerics do that justify all those floating point bells and whistles. (And I believe that is true.) But it won't be isolated, it has to interact with geom.Pt, or we have to redefine it. It has to interact with darwin, which is all float32/float64. Is that going to be easy enough for it still to be on the whole simpler?\r\n\r\nAs to justifying it by other projects using it, why is it widely absent in OS X, except for WebKit, which they inherited from KHTML? Is this a historical mistake made by NeXT, or was it uninteresting on their hardware? Why did WebKit introduce it, would they do so again today?\r\n\r\nI realize your code has widely used fixed-point before, and I'm not opposed to it. But as this is a fresh proposal, I think it's a good opportunity to make a clear justification for fixed point arithmetic in a world where micro-controllers come with an FPU.",
	"user": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-29T00:45:39Z",
	"updated_at": "2015-07-29T01:13:03Z"
}
