{
	"id": 51281460,
	"number": 3978,
	"state": "closed",
	"title": "Per-loop defer statements",
	"body": "by **edje@google.com**:\n\n\u003cpre\u003eThis is actually a feature request -- not a bug.\n\nI like the defer statements Go has to offer. Still, I think it would be nice if the\nlanguage also offered something like loop-local defer statements:\n\n        for _, f := range files {\n            fd := open(f)\n            defer close(fd)\n            ...\n        }\n\nThe disadvantage of this piece of code would be that it only closes all the file\ndescriptors at the end of the invocation of the function. We already have label scopes,\nso technically speaking there is room to allow something like:\n\nMyLoop: for _, f := range files {\n            fd := open(f)\n            defer MyLoop close(fd)\n            ...\n        }\n\nEspecially when interacting with C code it would be quite comfortable to have (e.g. call\nfree() at the end of a loop iteration).\n\nAny thoughts?\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:21:06Z",
	"created_at": "2012-08-20T09:38:52Z",
	"updated_at": "2016-06-24T22:23:24Z"
}
