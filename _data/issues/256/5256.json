{
	"id": 51283363,
	"number": 5256,
	"state": "open",
	"title": "cmd/cgo: godefs shouldnt try to guess which struct field's identifier prefixes preceding `_` is okay to strip.",
	"body": "by **Mortdeus@gocos2d.org**:\n\n\u003cpre\u003eGodef may produce structs with multiple declarations of the same field identifiers if\nits allowed to automatically strip the prefix of a C struct's field identifier. For\nexample,\n\nWhen this C struct\n\nstruct drm_drawable_info {\n\tunsigned int num_rects;\n        struct drm_clip_rect *rects;\n};\n\nis run through godefs it produces the following Go struct.\n\nDrawableInfo struct {\n\tRects uint32\n\tPad_cgo_0 [4]byte\n\tRects     *ClipRect\n}\n\nWhich obviously isnt correct. \n\nThe problem with this approach is...\n\nA. I have to open the C source code to find out what the old identifier name used to be.\nB. Obviously the tool isnt smart enough to know what prefixes are okay and which should\nbe stripped. \nC. This kind of \u0026quot;magic\u0026quot; implicit functionality is much better implemented as\nexplicit command line flag with the developer in control.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"created_at": "2013-04-10T08:57:21Z",
	"updated_at": "2015-04-14T19:45:19Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
