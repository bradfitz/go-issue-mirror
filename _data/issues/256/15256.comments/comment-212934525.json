{
	"id": 212934525,
	"body": "```\r\npackage main\r\n\r\nimport (\r\n    \"crypto/x509\"\r\n    \"encoding/pem\"\r\n    \"fmt\"\r\n)\r\n\r\nconst (\r\n    rootPEM = `-----BEGIN CERTIFICATE-----\r\nMIIFAzCCAuugAwIBAgIJAKz32tiViz0mMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNV\r\nBAMMDWt1YmVybmV0ZXMtY2EwHhcNMTYwNDEyMTczMDUzWhcNNDMwODI5MTczMDUz\r\nWjAYMRYwFAYDVQQDDA1rdWJlcm5ldGVzLWNhMIICIjANBgkqhkiG9w0BAQEFAAOC\r\nAg8AMIICCgKCAgEAy9lt2HQuLwO/r1aAI8JiucwHnJpKFKWbkkXHMvwVkX0xXAGZ\r\nTKYWK7sUb/EppkI646Dioj3/Prs55XTXL8j7TXzAhZt8cb/+iztxRs1BsPZVE1KS\r\nBgYEoViu1304T0LBnSPF1B3+2Y+9TpfSFA5Xjww3901xqrfHWAiV1pqJCX9IeqUA\r\nWar2aKWSz2Gd1mDlTST9BLp3eQJizR9XYIsudb2nvDj4IRfRg4yOJ4ObD02qv3sr\r\nX90DUTbsD2FJYGHUF5XClyjTW9cazVwEsDa3qw6yfAJxoOhQ26vaZP1AiuIvnFXX\r\nN+nQ+5i6u9qe+67L/ycbDXQrkHm5s8yhsAUxbvvYOITKa5P0fj+1B9cRKDO20hVl\r\nNR6gHguQF4EHTOMdroH0XGzHsGT6S9WGrdpUcVk6j8WWZzquPednli2tDr8iYpbY\r\n75n20APp23/rBWLcz+7PB2S/CRa9UlEWQI2lyOYbSb011sMuQ7ifxomU0qe5MpFH\r\nSN1gmQkuTaFMA81lQMLWr4/bFYs+mS7c84zOpeGKLU6xa41kw2fEnBvplAkgGdQu\r\nAmSNfPUwdHqRDa7hL31gxGsHn6IefOQFaX6hUu8QQmdz5QMDpFdPQCdmkf2dQX2p\r\nC3R5rrAqrmybxHhOei1SFbQFIbwFsuuu63Bv7tu/HbCBXznwFPKodTLuUiMCAwEA\r\nAaNQME4wHQYDVR0OBBYEFA01sBq/HwalGXUiPuze2ps2zZ/GMB8GA1UdIwQYMBaA\r\nFA01sBq/HwalGXUiPuze2ps2zZ/GMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEL\r\nBQADggIBAG2xfevRdJTq/bPCnuN+Zifz3OBnXRkYfaeRvjnItqG0pdk0kJU/zE1d\r\n6crPDXqo2/gUkR2XVRqT+cqvcB5Zb4LvfKFU86uQdIhxmsEwM2WG2ZCyaJJhbUaO\r\n3AgWP6NvvwIkpNBAheyfS9Ur84I2uEjmaZ/JKy7VPxWVCrMp2angF8SkJLBnIaqe\r\nWsfHsAbYqPRdQVAycvhzSiwpt2uke6D+PXaVJzIVHLuOm0ASh/CmFl5BJPtMNHIG\r\nVw7AcDilSLZtXVKS2CU+nKiFzRAFMCCIBMMNWGfxfB6f5yXc4FxpLNLcFZRhlzqT\r\nftdVtgYb6aLsij/SKYX+BucdtM2RoF2Z+BbrK38PUVmcJkqwTunh2/xJYz2P3jHv\r\nwXSGFa00WOsp482OwA565i6MK6NE8NeTlKOoPWq9tu45UblwIlpUr3bkB38BEJiI\r\nwue5kyUn0qbR2z5Pv7evqwpG+dbra9kGUXd/3kbbSclyruq1VzFHgtczNdzr+tSA\r\nM8P1Peh+GK4DtTtOcNhG5Qw8ZWvKpNhzdMpqsNeeVPdT2U/wPYdSFDI4iU1qK2Tk\r\neNJ+g1CBCzMqfLPj/71SA0f1w7CkVw/M8+NEhSB9B69ONlzsa79Q2Ww/4eWXB5iC\r\nktOtUpQojpzkO7+zgUzIWtTYgn8cOPwss5ddN95JzDKtEskl11+n\r\n-----END CERTIFICATE-----`\r\n\r\n    certPEM = `-----BEGIN CERTIFICATE-----\r\nMIIFBDCCAuygAwIBAgIJALkqNYr4cRp7MA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNV\r\nBAMMDWt1YmVybmV0ZXMtY2EwHhcNMTYwNDEyMTczMTAwWhcNMjAwNTIxMTczMTAw\r\nWjBSMQ8wDQYDVQQDDAZjbGllbnQxPzA9BgkqhkiG9w0BCQEWMGRlOWM1ZWMxYzRh\r\nZjJkOWJkYmJlZmNiYzcxMzRmOTAzMmUzYjVkYjg4YmVhNTZhMzCCAiIwDQYJKoZI\r\nhvcNAQEBBQADggIPADCCAgoCggIBAO7wJiK0BddedeKg2gjExTfzloPmae+0us7s\r\nMPIsRtVzmXLCjj2iTmv/+12hYbGruX6F5owUW9ugOwChLZLhc2zRuau83GSEstCU\r\nsK/qbmPWX+3l18rxUvNE9QFy15AelTzDzy3DfV4dhJhO5kc4Hd3O20ZeKevnBgPb\r\nZtngo9nxNthiXT1RQpLOmSjUdPK3uwKwF1+rKqCmBJLumghdzLUNgzIaN97u60jz\r\n+mTW43dfCq99ggofL654x6jWGyRNreQODSAbwF0d50YAabIjgObvRm3zWYijlGf/\r\nNl+Y3OtlRj/gHnXbJ/L1uDjtlFpk6Zgn+/x3+KQ+5YPpI/JmbfoOPYjhce7pft8J\r\n5Q7fG9BTsTw/fubIf3FCj/yKZrqkySBzR+/TvRGukH8bDaDZDX7yXcL7LG1uwssZ\r\n5ByhPUHrfEQU/Pa2W7xKUY685rWAocOY9DY2g5eusBsG1kYc+CorfDew44B1KeU/\r\nYQywap2Iw5RB1tSAK/JO/ckzEYBEBhV+o1M/PtDg/1511LyBy3mx3KroyAE5Ipee\r\naeJABllP02mDmj6mnWQ3Z6+LAmPThSCBZDdwLAaQOiwvqa1XJ7pcXJ5l5iS/kLIL\r\nFDbAdxhcrStLdtsvW7KqLBBAkzA7qL47HUDU0d2MtaP5HeED0HIa1dqEwo+78ye8\r\nXcmxsqtzAgMBAAGjFzAVMBMGA1UdJQQMMAoGCCsGAQUFBwMCMA0GCSqGSIb3DQEB\r\nCwUAA4ICAQCQD4txBFLvpKoaYYOvUlYgQqTbuxE0bR+ACqZMAIGDM9O6+WAxnKss\r\n90Y1NtMLHkAtO8V8ShepH8Xx1opKBsPHgEGsQuUgufdY1Cvqc0S3tG45VJqfj0qw\r\nwX8VeKTlF9p33Anr2OGCDl+6fBiOrdSrayV0Az405ZK7GU1ReKlcGL0Ako/QMBOM\r\nn1EUGnnGg+YPQK0x120TRUElxY7GmAXl6qiG9PFecC8ZrCeZQu/KohwfSz3r5+lJ\r\no2XFRfOrhqVXpWJn76/qEeFZPt6s6hUxK7/SePKtDFmkbViF9FF0m7OJgWRCXB6j\r\nyVkz/Yd975psziOXSdSRSo6LsfQPh7QEL8Va33sm7SWgESgCFummQm/xcqxhPPs1\r\n9QKf7jMB8blRXnDNaoZxAOH7Kx7WShDJcc6vc2JRI7sm2+RmdXIh41Wbg/TnCOHB\r\nYqLxnTcsc6/SnnJRNl+VGNvNnjHjvUPYx6r9iWm5il17PBi3mUioT2KByKyDOTc1\r\nyzE3hgzibIxEoDTQSlyxngoNuCHRf09zvOD/Ayd3ATqEYdHG2IO2wxGzDEyHCmt2\r\n9uMheuBFrYEjQ1PWGfvr02Zuqm+K2jVPIZRF4UT0zz5td2R3Hjdnjf3xgIRrF1xZ\r\n5Fo3w92ReqSYLRAXE/1vSyUusn11vc4DsODvfB8Z8hEZQhanbjI9ag==\r\n-----END CERTIFICATE-----`\r\n)\r\n\r\nfunc main() {\r\n    roots := x509.NewCertPool()\r\n    ok := roots.AppendCertsFromPEM([]byte(rootPEM))\r\n    if !ok {\r\n        panic(\"failed to parse root cert\")\r\n    }\r\n\r\n    block, _ := pem.Decode([]byte(certPEM))\r\n    if block == nil {\r\n        panic(\"failed to parse cert\")\r\n    }\r\n\r\n    cert, err := x509.ParseCertificate(block.Bytes)\r\n    if err != nil {\r\n        panic(\"failed to parse cert: \" + err.Error())\r\n    }\r\n\r\n    opts := x509.VerifyOptions{\r\n        KeyUsages: []x509.ExtKeyUsage{x509.ExtKeyUsageAny},\r\n        Roots:     roots,\r\n    }\r\n\r\n    chains, err := cert.Verify(opts)\r\n    if err != nil {\r\n        panic(\"failed to verify cert: \" + err.Error())\r\n    }\r\n\r\n    for _, chain := range chains {\r\n        fmt.Printf(\"%+v\\n\", chain[0].Subject.CommonName)\r\n    }\r\n}\r\n```",
	"user": {
		"login": "huang195",
		"id": 8008677,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-21T14:03:35Z",
	"updated_at": "2016-04-21T14:03:35Z"
}
