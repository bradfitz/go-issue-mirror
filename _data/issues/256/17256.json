{
	"id": 179626035,
	"number": 17256,
	"state": "open",
	"title": "x/text: support API for Unicode word breaking and word extraction (Annex #29)",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### What version of Go are you using (`go version`)?\r\n`go version go1.7 linux/amd64`\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/ioe/sources/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/user/1000/go-build353744209=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n### What did you do?\r\nTrying to split text at word boundaries like mentioned at http://unicode.org/reports/tr29/#Word_Boundaries and also trying to extract words from strings as mentioned in the same document.\r\n### What did you expect to see?\r\nGiven the sentence \"The quick (“brown”) fox can’t jump 32.3 feet, right?\"\r\n* detecting word boundaries at all places marked with \"|\"\r\n```none\r\nThe| |quick| |(|“|brown|”|)| |fox| |can’t| |jump| |32.3| |feet|,| |right|?\r\n```\r\n* support word extraction to a string slice with the following content\r\n```go\r\nwords := []string{\"The\", \"quick\", \"brown\", \"fox\", \"can’t\", \"jump\", \"32.3\", \"feet\", \"right\"}\r\n``` \r\n\r\n### What did you see instead?\r\nThat depends on the API used. example with strings.Fields at https://play.golang.org/p/dhJtlR-b3w displays:\r\n```none\r\n[]string{\"The\", \"quick\", \"(“brown”)\", \"fox\", \"can’t\", \"jump\", \"32.3\", \"feet,\", \"right?\"}\r\n```\r\n\r\nNote: Proper test vectors are here: Test vectors are here: http://www.unicode.org/Public/UCD/latest/ucd/auxiliary/WordBreakTest.txt\r\n\r\nAn implementation using Ruby magic and a state machine generated by Ragel can be found here: [github.com/blevesearch/segment](https://godoc.org/github.com/blevesearch/segment)",
	"user": {
		"login": "nightlyone",
		"id": 1767118,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2016-09-27T21:59:34Z",
	"updated_at": "2016-10-04T22:46:43Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
