{
	"id": 91683295,
	"number": 11455,
	"state": "closed",
	"title": "go/types: whence this constant value?",
	"body": "I [attempted](https://github.com/golang/lint/commit/b55059174c9f0cda51e7a12038ba79644d158bf3) and [ultimately failed](https://github.com/golang/lint/commit/4946cea8b6efd778dc31dc2dbeb919535e1b7529) to write a [lint check](https://github.com/golang/lint/issues/130) that analyzed `time.Duration` constants, to ensure that they were defined using a unit (that is, like `3 * time.Second`, not like `3e9`).\r\n\r\nThe crux of the issue was being able to identify, for a constant expression, where/how its components were defined.\r\n\r\nFor example, given:\r\n\r\n```go\r\nconst (\r\n  a = iota\r\n  b\r\n  c = b * 2\r\n  d = c * time.Second\r\n  e = d - 1\r\n)\r\n```\r\n\r\nI'd like to be able to trace from `e` all the way back to the other expressions from which `e`'s value is derived. This might extend across files and packages. As far as I can tell, there's no reasonable way to get this information now. But this information must be available during typechecking.\r\n\r\nThis is not a high priority, and there are obviously API questions. Just putting this on the wishlist. :)\r\n\r\n/cc @griesemer @alandonovan \r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2015-06-29T17:35:28Z",
	"created_at": "2015-06-29T03:23:22Z",
	"updated_at": "2016-06-28T21:53:54Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
