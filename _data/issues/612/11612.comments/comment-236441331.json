{
	"id": 236441331,
	"body": "\u003e All the things described as \"phi optimizations\" in the Braun paper are done during phi construction.\r\n\r\nCan you point me to the corresponding code?\r\n\r\nAgain, the crucial question (regarding memory usage) is: When do we optimize the phi functions (or FwdRefs)? In my understanding of the code, this happens after the CFG construction rather than during the CFG construction.\r\n\r\n\u003e The one exception is that we don't do the recursive removal they do in tryRemoveTrivialPhi, as we don't have pointers to users in our IR. I'm open to suggestions as to how to make that work.\r\n\r\nYou can catch some (but not all) cases when optimizing the unique operand instead (if it is a phi function).\r\nExample:\r\n`x = 42`\r\n`do {`\r\n`  if (...) {`\r\n`  } else {`\r\n`  }`\r\n`} while (...);`\r\n`use(x)`",
	"user": {
		"login": "UniQP",
		"id": 1321557,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-31T16:54:26Z",
	"updated_at": "2016-07-31T16:54:26Z"
}
