{
	"id": 232525560,
	"body": "I'm sorry, I don't understand what you mean by a loosely-ordered channel.  Can you explain more precisely?\r\n\r\nIn Go it is already possible for many goroutines to read from a single channel (and for many goroutines to write to a single channel) so I don't understand what a sharded channel would look like.\r\n\r\nAre you suggesting that when a buffered channel has many readers, we implement several different buffers for the channel, and let each goroutine read from one buffer?  Thus there would theoretically be less lock contention?  How would we decide when to use multiple buffers?",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-14T00:33:20Z",
	"updated_at": "2016-07-14T00:33:20Z"
}
