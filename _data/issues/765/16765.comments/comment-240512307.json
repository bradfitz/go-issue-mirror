{
	"id": 240512307,
	"body": "\u003e Yet another idea: we could make the write barrier itself unpreemptible, which would let the compiler check runtime.writeBarrier just once per atomic sequence and coalesce some of the control flow. Would that help?\r\n\r\nYes, I think it would. And there's a [TODO in the compiler for it already](https://github.com/golang/go/blob/master/src/cmd/compile/internal/gc/ssa.go#L2271).\r\n\r\nI think the secondary effects (code size, eliminated jumps, resulting new SSA backend optimization opportunities, etc.) are non-trivial. One recent data point is from [CL 26666](https://go-review.googlesource.com/#/c/26666/). A minor compiler change removed a single write barrier from the maps implementation and got a 5-8% perf boost on a few benchmarks that hit that code path hard.",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-17T18:58:34Z",
	"updated_at": "2016-08-17T18:58:34Z"
}
