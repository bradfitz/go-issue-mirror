{
	"id": 147361560,
	"body": "Your example is not the same as the original code, because in this line\r\n\r\n```\r\ndefer f.Close()\r\n```\r\n\r\nthe name `f` is evaluated at the time theÂ function is deferred (not when it is executed). So even if `f` is reassigned later, the `Close` method is still called on the original value of `f`.\r\n\r\nIn this line\r\n\r\n```\r\ndefer func() { f.Close() }()\r\n```\r\n\r\nthe value of `f` is evaluated at the time the deferred function is executed. Since the function captures the *name* `f`, not its value, it will call `Close` on whatever `f` is when the function returns.\r\n",
	"user": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-12T10:32:45Z",
	"updated_at": "2015-10-12T10:33:03Z"
}
