{
	"id": 51284284,
	"number": 5848,
	"state": "closed",
	"title": "cmd/go: allow cross-compiling with cgo",
	"body": "by **lexszero**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\nBuild any package using cgo wtih following command:\nGOARM=5 GOARCH=arm go build -x\n\nWhat is the expected output?\nPackage build process\n\nWhat do you see instead?\nlexs@nyapad ~/.go/src/code.google.com/p/gosqlite/sqlite \u0026gt; GOARM=5 GOARCH=arm go build\n-x\nWORK=/tmp/go-build982624259\n\nand nothing more. return code is 0\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n5g\n\nWhich operating system are you using?\nlinux/amd64\n\nWhich version are you using?  (run 'go version')\ngo version devel +1fcddf5fd778 Wed May 22 14:22:50 2013 -0700 linux/amd64\n\nPlease provide any additional information below.\nBuilding packages that doesn't using cgo with command above works fine. Manual running\nbuilding commands analogous to those issued by 'GOARCH=amd64 go build -x' for the same\npackage (with replacing 6g to 5g, gcc to arm-none-linux-gnueabi-gcc, fixing cflags, etc)\nalso works fine, except for absent package 'runtime/cgo', which silently wasn't built\nduring go installation process for the same reason.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 10,
	"closed_at": "2014-12-08T10:32:06Z",
	"created_at": "2013-07-08T00:04:42Z",
	"updated_at": "2016-06-24T22:51:30Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
