{
	"id": 51287299,
	"number": 7848,
	"state": "closed",
	"title": "net/http or io: panic (reduced test case included)",
	"body": "\u003cpre\u003eWhat does 'go version' print?\no version go1.2 darwin/amd64\n\nserver.go:\npackage main\n\nimport (\n\t\u0026quot;io\u0026quot;\n\t\u0026quot;net/http\u0026quot;\n)\n\nfunc main() {\n\thttp.HandleFunc(\u0026quot;/\u0026quot;, func(w http.ResponseWriter, req *http.Request) {\n\t\tio.WriteString(w, \u0026quot;Hello World\\n\u0026quot;)\n\t})\n\thttp.ListenAndServe(\u0026quot;:8100\u0026quot;, nil)\n}\n\n\ncrashproxy.go:\npackage main\n\nimport (\n\t\u0026quot;net/http\u0026quot;\n\t\u0026quot;net/http/httputil\u0026quot;\n\t\u0026quot;net/url\u0026quot;\n)\n\nfunc main() {\n\tserver, _ := url.Parse(\u0026quot;\u003ca href=\"http://127.0.0.1:8100\u0026quot\"\u003ehttp://127.0.0.1:8100\u0026quot\u003c/a\u003e;)\n\thttp.Handle(\u0026quot;/\u0026quot;, httputil.NewSingleHostReverseProxy(server))\n\thttp.ListenAndServe(\u0026quot;:11111\u0026quot;, nil)\n}\n\n\n% go run server.go \u0026amp;\n% go build crashproxy.go # we need the executable below\n% ./crashproxy\n\n\nWith these running, we'll POST a file to the hello server through the reverse proxy.\nWe'll send the crashproxy binary (5-10 MBs).\n\n% curl -i -F \u0026quot;file=@crashproxy;filename=crashproxy\u0026quot; \u003ca href=\"http://localhost:11111\"\u003ehttp://localhost:11111\u003c/a\u003e\n\nRun that curl command a number of times (drum arrow-up / enter quickly) until crashproxy\npanics. I believe the crash is unrelated to the reverse proxy code but it was easier to\ndemonstrate using it.\n\n[My real-world code that triggered this panic had a (node.js) server process that\nsometimes crashed (upon file POST) and then sometimes took a (golang) reverse proxy with\nit. This test case doesn't feature a crashing server process because one that just\nresponded directly seemed to do the trick as well]\n\nPanic log follows:\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x20 pc=0x518c0]\n\ngoroutine 40 [running]:\nruntime.panic(0x1f8d60, 0x476df9)\n\t/usr/local/go/src/pkg/runtime/panic.c:266 +0xb6\nbufio.(*Reader).Read(0xc210037660, 0xc2100ca000, 0x1000, 0x1000, 0x1000, ...)\n\t/usr/local/go/src/pkg/bufio/bufio.go:152 +0x100\nio.(*LimitedReader).Read(0xc2100a8ee0, 0xc2100ca000, 0x1000, 0x1000, 0x1000, ...)\n\t/usr/local/go/src/pkg/io/io.go:398 +0xbb\nnet/http.(*body).Read(0xc2100c7030, 0xc2100ca000, 0x1000, 0x1000, 0x1000, ...)\n\t/usr/local/go/src/pkg/net/http/transfer.go:534 +0x96\nnet/http.(*expectContinueReader).Read(0xc2100a8f00, 0xc2100ca000, 0x1000, 0x1000,\n0xc2100ca000, ...)\n\t/usr/local/go/src/pkg/net/http/server.go:520 +0x11a\nio.(*LimitedReader).Read(0xc2100a8060, 0xc2100ca000, 0x1000, 0x1000, 0xbf, ...)\n\t/usr/local/go/src/pkg/io/io.go:398 +0xbb\nbufio.(*Writer).ReadFrom(0xc21004e4c0, 0x55f458, 0xc2100a8060, 0xa6ed1, 0x0, ...)\n\t/usr/local/go/src/pkg/bufio/bufio.go:622 +0x15a\nio.Copy(0x55f588, 0xc21004e4c0, 0x55f458, 0xc2100a8060, 0x0, ...)\n\t/usr/local/go/src/pkg/io/io.go:348 +0x124\nnet/http.(*transferWriter).WriteBody(0xc2100c62a0, 0x55f588, 0xc21004e4c0, 0x0, 0x0)\n\t/usr/local/go/src/pkg/net/http/transfer.go:196 +0x57c\nnet/http.(*Request).write(0xc2100361a0, 0x55f588, 0xc21004e4c0, 0x0, 0xc2100c7150, ...)\n\t/usr/local/go/src/pkg/net/http/request.go:400 +0x7e4\nnet/http.(*persistConn).writeLoop(0xc210058780)\n\t/usr/local/go/src/pkg/net/http/transport.go:797 +0x185\ncreated by net/http.(*Transport).dialConn\n\t/usr/local/go/src/pkg/net/http/transport.go:529 +0x61e\n\ngoroutine 1 [IO wait]:\nnet.runtime_pollWait(0x55f300, 0x72, 0x0)\n\t/private/tmp/bindist142506725/go/src/pkg/runtime/netpoll.goc:116 +0x6a\nnet.(*pollDesc).Wait(0xc21004f140, 0x72, 0x55e098, 0x23)\n\t/usr/local/go/src/pkg/net/fd_poll_runtime.go:81 +0x34\nnet.(*pollDesc).WaitRead(0xc21004f140, 0x23, 0x55e098)\n\t/usr/local/go/src/pkg/net/fd_poll_runtime.go:86 +0x30\nnet.(*netFD).accept(0xc21004f0e0, 0x2a8fb8, 0x0, 0x55e098, 0x23)\n\t/usr/local/go/src/pkg/net/fd_unix.go:382 +0x2c2\nnet.(*TCPListener).AcceptTCP(0xc2100001e0, 0x3760b, 0x59ee10, 0x3760b)\n\t/usr/local/go/src/pkg/net/tcpsock_posix.go:233 +0x47\nnet.(*TCPListener).Accept(0xc2100001e0, 0x55f3a8, 0xc210000aa0, 0xc210058580, 0x0)\n\t/usr/local/go/src/pkg/net/tcpsock_posix.go:243 +0x27\nnet/http.(*Server).Serve(0xc21001e410, 0x55e360, 0xc2100001e0, 0x0, 0x0)\n\t/usr/local/go/src/pkg/net/http/server.go:1622 +0x91\nnet/http.(*Server).ListenAndServe(0xc21001e410, 0xc21001e410, 0xc21004b4a0)\n\t/usr/local/go/src/pkg/net/http/server.go:1612 +0xa0\nnet/http.ListenAndServe(0x237c00, 0x6, 0x0, 0x0, 0x0, ...)\n\t/usr/local/go/src/pkg/net/http/server.go:1677 +0x6d\nmain.main()\n\t/Users/olov/projects/mcs/goproxy/src/crashproxy.go:12 +0xad\n\ngoroutine 3 [IO wait]:\nnet.runtime_pollWait(0x55f258, 0x72, 0x0)\n\t/private/tmp/bindist142506725/go/src/pkg/runtime/netpoll.goc:116 +0x6a\nnet.(*pollDesc).Wait(0xc21004f300, 0x72, 0x55e098, 0x23)\n\t/usr/local/go/src/pkg/net/fd_poll_runtime.go:81 +0x34\nnet.(*pollDesc).WaitRead(0xc21004f300, 0x23, 0x55e098)\n\t/usr/local/go/src/pkg/net/fd_poll_runtime.go:86 +0x30\nnet.(*netFD).Read(0xc21004f2a0, 0xc21005a000, 0x1000, 0x1000, 0x0, ...)\n\t/usr/local/go/src/pkg/net/fd_unix.go:204 +0x2a0\nnet.(*conn).Read(0xc210000200, 0xc21005a000, 0x1000, 0x1000, 0x0, ...)\n\t/usr/local/go/src/pkg/net/net.go:122 +0xc5\nnet/http.(*liveSwitchReader).Read(0xc2100582a8, 0xc21005a000, 0x1000, 0x1000, 0x5bab48,\n...)\n\t/usr/local/go/src/pkg/net/http/server.go:204 +0xa5\nio.(*LimitedReader).Read(0xc21004b4e0, 0xc21005a000, 0x1000, 0x1000, 0xb434, ...)\n\t/usr/local/go/src/pkg/io/io.go:398 +0xbb\nbufio.(*Reader).fill(0xc2100370c0)\n\t/usr/local/go/src/pkg/bufio/bufio.go:91 +0x110\nbufio.(*Reader).ReadSlice(0xc2100370c0, 0xa, 0x0, 0x0, 0x0, ...)\n\t/usr/local/go/src/pkg/bufio/bufio.go:274 +0x204\nbufio.(*Reader).ReadLine(0xc2100370c0, 0x0, 0x0, 0x0, 0x0, ...)\n\t/usr/local/go/src/pkg/bufio/bufio.go:305 +0x63\nnet/textproto.(*Reader).readLineSlice(0xc21001da50, 0x555000, 0x199fe0, 0x5bace8,\n0x20752, ...)\n\t/usr/local/go/src/pkg/net/textproto/reader.go:55 +0x61\nnet/textproto.(*Reader).ReadLine(0xc21001da50, 0xc2100441a0, 0x0, 0xc21005b000, 0x0)\n\t/usr/local/go/src/pkg/net/textproto/reader.go:36 +0x27\nnet/http.ReadRequest(0xc2100370c0, 0xc2100441a0, 0x0, 0x0)\n\t/usr/local/go/src/pkg/net/http/request.go:526 +0x88\nnet/http.(*conn).readRequest(0xc210058280, 0x0, 0x0, 0x0)\n\t/usr/local/go/src/pkg/net/http/server.go:575 +0x1bb\nnet/http.(*conn).serve(0xc210058280)\n\t/usr/local/go/src/pkg/net/http/server.go:1123 +0x3b4\ncreated by net/http.(*Server).Serve\n\t/usr/local/go/src/pkg/net/http/server.go:1644 +0x28b\n\ngoroutine 33 [sleep]:\ntime.Sleep(0x1dcd6500)\n\t/private/tmp/bindist142506725/go/src/pkg/runtime/time.goc:31 +0x31\nnet/http.(*conn).closeWriteAndWait(0xc210058480)\n\t/usr/local/go/src/pkg/net/http/server.go:1072 +0x75\nnet/http.(*conn).serve(0xc210058480)\n\t/usr/local/go/src/pkg/net/http/server.go:1174 +0x81d\ncreated by net/http.(*Server).Serve\n\t/usr/local/go/src/pkg/net/http/server.go:1644 +0x28b\n\ngoroutine 37 [sleep]:\ntime.Sleep(0x1dcd6500)\n\t/private/tmp/bindist142506725/go/src/pkg/runtime/time.goc:31 +0x31\nnet/http.(*conn).closeWriteAndWait(0xc210058580)\n\t/usr/local/go/src/pkg/net/http/server.go:1072 +0x75\nnet/http.(*conn).serve(0xc210058580)\n\t/usr/local/go/src/pkg/net/http/server.go:1174 +0x81d\ncreated by net/http.(*Server).Serve\n\t/usr/local/go/src/pkg/net/http/server.go:1644 +0x28b\nexit status 2\u003c/pre\u003e",
	"user": {
		"login": "olov",
		"id": 19247,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:43:33Z",
	"created_at": "2014-04-23T13:01:06Z",
	"updated_at": "2016-06-25T01:32:55Z"
}
