{
	"id": 208654174,
	"body": "@bradfitz\r\n\r\nThat would work, but there are some detriments:\r\n* If w.WriteString is implemented, then it is not used, which is unfortunate.\r\n* If w.ReadFrom is not implemented, this always allocates 32KiB, even if `s` is very short.\r\n\r\nIn regard to your comments on [CL/19754](https://go-review.googlesource.com/#/c/19754/):\r\n* The benefit of the special casing is that there is 2x speed boost (probably due to better caching), and a guaranteed bound on the memory allocation (i.e. never greater than 32KiB).\r\n* Also, I don't think this optimization will end up appearing in all io.WriterTo since strings.Reader is *the* way to convert a `string` to an `io.Reader`. Other readers typically represent a buffer under-the-hood as a `[]byte`, in which case, string writing isn't an issue.",
	"user": {
		"login": "dsnet",
		"id": 6354026,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-12T01:20:16Z",
	"updated_at": "2016-04-12T01:27:46Z"
}
