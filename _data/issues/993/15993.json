{
	"id": 158965736,
	"number": 15993,
	"state": "open",
	"title": "x/tools/cmd/goimports: does not consider \"internal\" restrictions",
	"body": "1. What version of Go are you using (`go version`)?\r\n`go version go1.6 windows/amd64`\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n```\r\nset GOARCH=amd64\r\nset GOBIN=\r\nset GOEXE=.exe\r\nset GOHOSTARCH=amd64\r\nset GOHOSTOS=windows\r\nset GOOS=windows\r\nset GOPATH=D:\\dev\r\nset GORACE=\r\nset GOROOT=C:\\Go\r\nset GOTOOLDIR=C:\\Go\\pkg\\tool\\windows_amd64\r\nset GO15VENDOREXPERIMENT=1\r\nset CC=gcc\r\nset GOGCCFLAGS=-m64 -mthreads -fmessage-length=0\r\nset CXX=g++\r\nset CGO_ENABLED=1\r\n```\r\n3. What did you do?\r\n\r\nI created two internal packages with the same name, but in different trees.  I was able to reproduce the problem with the following small example.\r\n`D:\\dev\\src\\github.com\\issue\\package1\\internal\\foo\\foo.go`\r\n```\r\npackage foo\r\n\r\nfunc Bar() {\r\n}\r\n```\r\nand\r\n`D:\\dev\\src\\github.com\\issue\\package2\\internal\\foo\\foo.go`\r\n```\r\npackage foo\r\n\r\nfunc Bar() {\r\n}\r\n```\r\nThen create a file that uses the internal package.\r\n`D:\\dev\\src\\github.com\\issue\\package1\\main\\main.go`\r\n```\r\npackage main\r\n\r\nfunc main() {\r\n\tfoo.Bar()\r\n}\r\n```\r\n\r\nFinally, run goimports on main.go.\r\n\r\n4. What did you expect to see?\r\nI expected `import \"github.com/issue/package1/internal/foo\"` to be added to main.go.  Which foo to choose should have been unambiguous since the other is not importable from package1/main.\r\n\r\n5. What did you see instead?\r\ngoimports added `import \"github.com/issue/package2/internal/foo\"`.  I deleted the import statement and ran goimports several times.  The package imported appeared to be random.\r\n",
	"user": {
		"login": "fedyakin",
		"id": 9011301,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2016-06-07T16:20:16Z",
	"updated_at": "2016-06-07T17:42:21Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
