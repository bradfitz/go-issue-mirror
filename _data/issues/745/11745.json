{
	"id": 95575485,
	"number": 11745,
	"state": "open",
	"title": "net/http: provide way to get Request write error and HTTP response?",
	"body": "(As Brad mentioned on go-nuts, this is likely a race between two different responses and may not be a bug.  Nonetheless, here is a report to track it if you want to consider changing the behavior in the future.)\r\n\r\nOn linux x64, the following program will go test -v with \"Failed 0 out of 100\" with go1.4.  In go1.5beta1, I often get results like\r\n\r\n    ...\r\n    http_test.go:33: 98 Put http://localhost:8080/: write tcp 127.0.0.1:50310-\u003e127.0.0.1:8080: write: connection reset by peer\r\n    http_test.go:38: Failed 68 out of 100\r\n\r\nThis seems to be caused by commit 1045351cef21a64d954b4477af9f5105ea4287d3 and reverting that commit makes the test pass again.\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n        \"net/http\"\r\n        \"strings\"\r\n        \"testing\"\r\n)\r\n\r\nconst contentLengthLimit = 1024 * 1024 // 1MB                                                                                                                             \r\n\r\nfunc handler(w http.ResponseWriter, r *http.Request) {\r\n        if r.ContentLength \u003e= contentLengthLimit {\r\n                w.WriteHeader(http.StatusBadRequest)\r\n                r.Body.Close()\r\n                return\r\n        }\r\n        w.WriteHeader(http.StatusOK)\r\n}\r\n\r\nfunc TestHandler(t *testing.T) {\r\n        http.HandleFunc(\"/\", handler)\r\n        go http.ListenAndServe(\":8080\", nil)\r\n\r\n        fail := 0\r\n        count := 100\r\n        for i := 0; i \u003c count; i++ {\r\n                r := strings.NewReader(strings.Repeat(\"a\", 10000000))\r\n                req, err := http.NewRequest(\"PUT\", \"http://localhost:8080/\", r)\r\n                client := \u0026http.Client{}\r\n                resp, err := client.Do(req)\r\n                if err != nil {\r\n                        fail++\r\n                        t.Log(i, err)\r\n                        //t.Fatal(err)                                                                                                                                    \r\n                } else if resp.StatusCode != 400 {\r\n                        t.Fatalf(\"Expected the status 400, got %v instead.\", resp.StatusCode)\r\n                }\r\n        }\r\n        t.Logf(\"Failed %v out of %v\\n\", fail, count)\r\n}\r\n```",
	"user": {
		"login": "tarm",
		"id": 476641,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Thinking"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 9,
	"created_at": "2015-07-17T03:13:17Z",
	"updated_at": "2015-07-28T13:26:01Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
