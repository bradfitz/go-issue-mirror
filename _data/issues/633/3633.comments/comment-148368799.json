{
	"id": 148368799,
	"body": "I've started to port my Ruby EPUB tool to Go and I'm having trouble with gathering up the book [OPF] Metadata due to there being an arbitrary number/type of nodes, with an arbitrary number/type of attributes. So being able to use `Attrs []xml.Attr` to collect them up would be a great feature. Is there any possibility of this feature being added?\r\n\r\nHere's an example of the kind of data that needs parsing:\r\n\r\n```\r\n\u003cmetadata xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:opf=\"http://www.idpf.org/2007/opf\"\u003e\r\n  \u003cdc:identifier id=\"pub-identifier\"\u003e_simple_book\u003c/dc:identifier\u003e\r\n  \u003cmeta refines=\"#pub-identifier\" property=\"dcterms:identifier\"\u003e_simple_book\u003c/meta\u003e\r\n  \u003cdc:title id=\"pub-title\"\u003eA Book\u003c/dc:title\u003e\r\n  \u003cmeta refines=\"#pub-title\" property=\"dcterms:title\"\u003eA Book: Subtitle\u003c/meta\u003e\r\n  \u003cdc:date opf:event=\"original-publication\"\u003e2015-10-10\u003c/dc:date\u003e\r\n  \u003cdc:date opf:event=\"publication\"\u003e2015-10-10\u003c/dc:date\u003e\r\n  \u003cdc:language\u003een\u003c/dc:language\u003e\r\n  \u003cdc:creator opf:role=\"aut\" opf:file-as=\"Doe, Jon\"\u003eJon Doe\u003c/dc:creator\u003e\r\n  \u003cdc:subject\u003eFiction\u003c/dc:subject\u003e\r\n  \u003cdc:description\u003eSome description\u003c/dc:description\u003e\r\n  \u003cdc:publisher\u003eA Publisher\u003c/dc:publisher\u003e\r\n  \u003cdc:rights\u003eCopyright\u003c/dc:rights\u003e\r\n  \u003cmeta content=\"cover-image\" name=\"cover\"/\u003e\r\n\u003c/metadata\u003e\r\n```\r\n\r\n",
	"user": {
		"login": "mrcook",
		"id": 1093101,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-15T12:16:09Z",
	"updated_at": "2015-10-15T12:22:35Z"
}
