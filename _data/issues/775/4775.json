{
	"id": 51282624,
	"number": 4775,
	"state": "closed",
	"title": "spec: control flow of recover is not specified",
	"body": "\u003cpre\u003eNone of these docs specify the control flow of recover:\n\n\u003ca href=\"http://golang.org/ref/spec#Handling_panics\"\u003ehttp://golang.org/ref/spec#Handling_panics\u003c/a\u003e\n  \u0026quot;manage behavior of a panicking goroutine\u0026quot;\n  \u0026quot;restoring normal execution\u0026quot;\n\n\u003ca href=\"http://golang.org/pkg/builtin/#recover\"\u003ehttp://golang.org/pkg/builtin/#recover\u003c/a\u003e\n  \u0026quot;manage behavior of a panicking goroutine\u0026quot;\n  \u0026quot;restoring normal execution\u0026quot;\n\n\u003ca href=\"http://golang.org/doc/articles/defer_panic_recover.html\"\u003ehttp://golang.org/doc/articles/defer_panic_recover.html\u003c/a\u003e\n  \u0026quot;regains control of a panicking goroutine\u0026quot;\n  \u0026quot;resume normal execution\u0026quot;\n\nWhere does normal execution resume?  Here are three plausible interpretations:\n\n1) if a statement form panicked, control jumps to the immediately following statement;\nif an expression form panicked, the expression evaluates to its zero value.\n\n2) the function that deferred the call to recover returns immediately with the zero\nvalue of its result type.\n\n3) the function that deferred the call to recover returns immediately, with the zero\nvalue of its result type iff the result parameters were unnamed, or as if by a\nzero-argument \u0026quot;return\u0026quot; statement otherwise.\n\nThe implementation seems to follow #3.\u003c/pre\u003e",
	"user": {
		"login": "adonovan",
		"id": 5658175,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2014-12-08T10:25:22Z",
	"created_at": "2013-02-08T18:42:05Z",
	"updated_at": "2016-06-24T22:32:34Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
