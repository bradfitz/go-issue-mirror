{
	"id": 66094432,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003e\u003e The unrolled version is basically trading code size for some performance improvement.\n\nA data point here: I ran 'go tool 6g -S 7927.go 2\u003e\u00261 | grep \"Elems\\.Swap.*locals\"' for a\nfew different sizes of the Elem array.\n\nFor 16 elements:\n\n\"\".Elems.SwapIdiom t=1 size=240 value=0 args=0x28 locals=0x80\n\"\".Elems.SwapSingle t=1 size=368 value=0 args=0x28 locals=0x8\n\nFor 8 elements:\n\n\"\".Elems.SwapIdiom t=1 size=208 value=0 args=0x28 locals=0x40\n\"\".Elems.SwapSingle t=1 size=240 value=0 args=0x28 locals=0x8\n\nFor 6 elements:\n\n\"\".Elems.SwapIdiom t=1 size=208 value=0 args=0x28 locals=0x30\n\"\".Elems.SwapSingle t=1 size=208 value=0 args=0x28 locals=0x8\n\nFor 4 elements (the smallest size for which DUFFCOPY is used):\n\n\"\".Elems.SwapIdiom t=1 size=208 value=0 args=0x28 locals=0x20\n\"\".Elems.SwapSingle t=1 size=160 value=0 args=0x28 locals=0x8\n\nFor 1 element:\n\n\"\".Elems.SwapIdiom t=1 size=128 value=0 args=0x28 locals=0\n\"\".Elems.SwapSingle t=1 size=112 value=0 args=0x28 locals=0x8\n\nSo for moderate numbers of elements, there's both a code size and a perf win.\u003c/pre\u003e",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-05-05T20:02:47Z",
	"updated_at": "2014-12-08T10:43:56Z"
}
