{
	"id": 66068594,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003eThe spec says:\n\n---\nWhen evaluating the elements of an assignment or expression, all\nfunction calls, method calls and communication operations are\nevaluated in lexical left-to-right order.\n\nFor example, in the assignment\n    y[f()], ok = g(h(), i()+x[j()], \u0026lt;-c), k()\nthe function calls and communication happen in the order f(), h(),\ni(), j(), \u0026lt;-c, g(), and k(). However, the order of those events\ncompared to the evaluation and indexing of x and the evaluation of y\nis not specified.\n---\n\nIt explicitly calls out that variable evaluations can happen at any\ntime compared to function calls in the list, so I think it already\nsays that for:\n\n        a := 7\n        return a, func() string { a = 42; return \"foo\" }()\n\nthere is no guarantee about whether you get 7, \"foo\" or 42, \"foo\" (but\nyou do get one of those).\n\nThe only potential fix I see is to add \"or return statement\" to the\nfirst sentence.\n\nRuss\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-08-03T17:54:52Z",
	"updated_at": "2014-12-22T06:16:31Z"
}
