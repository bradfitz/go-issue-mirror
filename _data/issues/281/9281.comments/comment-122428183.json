{
	"id": 122428183,
	"body": "This is something that worked fine in 1.4 that is now broken in 1.5 (b2) for me.\r\nI checked in 1.5 beta 2 (we check in our tooling..) and if users fetch it on a windows system (our vcs gets 'text' files in local os default format) then they can't build.  An example go install fails with:\r\n```\r\ngo\\src\\runtime\\cgocall.go:144: args escapes to heap, not allowed in runtime.\r\ngo\\src\\runtime\\chan.go:91: t escapes to heap, not allowed in runtime.\r\ngo\\src\\runtime\\chan.go:295: c escapes to heap, not allowed in runtime.\r\ngo\\src\\runtime\\chan.go:582: t escapes to heap, not allowed in runtime.\r\ngo\\src\\runtime\\chan.go:632: t escapes to heap, not allowed in runtime.\r\ngo\\src\\runtime\\env_posix.go:34: arg escapes to heap, not allowed in runtime.\r\ngo\\src\\runtime\\env_posix.go:45: arg escapes to heap, not allowed in runtime.\r\ngo\\src\\runtime\\extern.go:119: rpc escapes to heap, not allowed in runtime.\r\ngo\\src\\runtime\\hashmap.go:272: t escapes to heap, not allowed in runtime.\r\ngo\\src\\runtime\\hashmap.go:320: t escapes to heap, not allowed in runtime.\r\ngo\\src\\runtime\\hashmap.go:320: too many errors\r\n```\r\n\r\nI'm kind of dumbstruck that the go compiler is getting confused about simple line endings when reading .go files.  It doesn't seem to care at all about user source line endings.",
	"user": {
		"login": "pbennett",
		"id": 170563,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-17T21:50:47Z",
	"updated_at": "2015-07-17T21:50:47Z"
}
