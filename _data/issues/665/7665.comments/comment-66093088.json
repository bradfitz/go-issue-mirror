{
	"id": 66093088,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eThe static init code in cmd/gc assumes that if you have\n\nvar x = 1\nvar y = x\n\nthen it is okay to infer that var y = 1.\n\nSimilarly it assumes that if you have\n\nvar x int\nvar y = x\n\nthen it is okay to infer that y = 0. It can't see that you intend to set x behind the\ncompiler's back.\n\nThe workaround is to initialize the variable in a func init block:\n\nvar x int\nvar y int\n\nfunc init() {\n    // x set elsewhere\n    y = x\n}\n\nI think that's fine for now, honestly. This does not come up very often, as evidenced by\nthe fact that the behavior produced no complaints for years.\n\nLogically you can think about it as C.f being initialized during an init block itself,\nso you have to wait until init blocks to use it.\u003c/pre\u003e\n\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-04-03T17:28:21Z",
	"updated_at": "2014-12-08T10:42:33Z"
}
