{
	"id": 138735755,
	"number": 14665,
	"state": "closed",
	"title": "encoding/json: Unmarshalling *websocket.Conn over a websocket with JSON crashes",
	"body": "1. What version of Go are you using (`go version`)?\r\ngo version go1.6 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/dolanor/.local/gopath/\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n\r\n3. What did you do?\r\nI sent a *websocket.Conn on a websocket in JSON (by pure laziness, without caring about having it on the other side).\r\n\r\n4. What did you expect to see?\r\nI expected to get unmarshalling kind of working, even if the *websocket.Conn wouldn't work: I didn't really wanted to get this information on the other side, but it was part of a struct I wanted to send over the wire.\r\n\r\nIf I put this *websocket.Conn to nil, then I don't get problems on the other side.\r\n\r\n5. What did you see instead?\r\n\r\n```\r\n    panic: reflect: reflect.Value.Set using value obtained using unexported field [recovered]\r\n        panic: interface conversion: string is not error: missing method Error\r\n    \r\n    goroutine 7 [running]:\r\n    panic(0x752c40, 0xc820010680)\r\n        /usr/local/go/src/runtime/panic.go:464 +0x3e6\r\n    encoding/json.(*decodeState).unmarshal.func1(0xc8200dbd98)\r\n        /usr/local/go/src/encoding/json/decode.go:156 +0xba\r\n    panic(0x6c2ba0, 0xc8200e8650)\r\n        /usr/local/go/src/runtime/panic.go:426 +0x4e9\r\n    reflect.flag.mustBeAssignable(0x1d4)\r\n        /usr/local/go/src/reflect/value.go:226 +0x161\r\n    reflect.Value.Set(0x762fa0, 0xc82008c430, 0x1d4, 0x762fa0, 0xc8200e8640, 0x94)\r\n        /usr/local/go/src/reflect/value.go:1328 +0x25\r\n    encoding/json.(*decodeState).literalStore(0xc820106000, 0xc8201040f9, 0x4, 0x507, 0x762fa0, 0xc82008c430, 0x1d4, 0xc8200da700)\r\n        /usr/local/go/src/encoding/json/decode.go:786 +0x3549\r\n    encoding/json.(*decodeState).literal(0xc820106000, 0x762fa0, 0xc82008c430, 0x1d4)\r\n        /usr/local/go/src/encoding/json/decode.go:717 +0xe9\r\n    encoding/json.(*decodeState).value(0xc820106000, 0x762fa0, 0xc82008c430, 0x1d4)\r\n        /usr/local/go/src/encoding/json/decode.go:370 +0x37b\r\n    encoding/json.(*decodeState).object(0xc820106000, 0x7a7320, 0xc82008c3f0, 0x199)\r\n        /usr/local/go/src/encoding/json/decode.go:684 +0x116a\r\n    encoding/json.(*decodeState).value(0xc820106000, 0x7a9260, 0xc820010648, 0x196)\r\n        /usr/local/go/src/encoding/json/decode.go:367 +0x3a1\r\n    encoding/json.(*decodeState).object(0xc820106000, 0x795d40, 0xc820010640, 0x199)\r\n        /usr/local/go/src/encoding/json/decode.go:684 +0x116a\r\n    encoding/json.(*decodeState).value(0xc820106000, 0x7a19e0, 0xc8200c5da0, 0x196)\r\n        /usr/local/go/src/encoding/json/decode.go:367 +0x3a1\r\n    encoding/json.(*decodeState).array(0xc820106000, 0x6c3220, 0xc8200c5d60, 0x197)\r\n        /usr/local/go/src/encoding/json/decode.go:518 +0xa6b\r\n    encoding/json.(*decodeState).value(0xc820106000, 0x6c3220, 0xc8200c5d60, 0x197)\r\n        /usr/local/go/src/encoding/json/decode.go:364 +0x3c1\r\n    encoding/json.(*decodeState).object(0xc820106000, 0x741a80, 0xc8200c5d60, 0x199)\r\n        /usr/local/go/src/encoding/json/decode.go:684 +0x116a\r\n    encoding/json.(*decodeState).value(0xc820106000, 0x6a6400, 0xc820056b78, 0x196)\r\n        /usr/local/go/src/encoding/json/decode.go:367 +0x3a1\r\n    encoding/json.(*decodeState).object(0xc820106000, 0x79e600, 0xc820056b60, 0x199)\r\n        /usr/local/go/src/encoding/json/decode.go:684 +0x116a\r\n    encoding/json.(*decodeState).value(0xc820106000, 0x6a61c0, 0xc820056b60, 0x16)\r\n        /usr/local/go/src/encoding/json/decode.go:367 +0x3a1\r\n    encoding/json.(*decodeState).unmarshal(0xc820106000, 0x6a61c0, 0xc820056b60, 0x0, 0x0)\r\n        /usr/local/go/src/encoding/json/decode.go:168 +0x196\r\n    encoding/json.Unmarshal(0xc820104000, 0x23b, 0x600, 0x6a61c0, 0xc820056b60, 0x0, 0x0)\r\n        /usr/local/go/src/encoding/json/decode.go:96 +0x12b\r\n    golang.org/x/net/websocket.jsonUnmarshal(0xc820104000, 0x23b, 0x600, 0x201, 0x6a61c0, 0xc820056b60, 0x0, 0x0)\r\n        /home/dolanor/.local/gopath/src/golang.org/x/net/websocket/websocket.go:390 +0x57\r\n    golang.org/x/net/websocket.Codec.Receive(0x861560, 0x861568, 0xc82008c240, 0x6a61c0, 0xc820056b60, 0x0, 0x0)\r\n        /home/dolanor/.local/gopath/src/golang.org/x/net/websocket/websocket.go:331 +0x34d\r\n    \r\n```",
	"user": {
		"login": "dolanor",
		"id": 928722,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-04-10T00:41:56Z",
	"created_at": "2016-03-06T00:03:09Z",
	"updated_at": "2016-04-10T00:41:57Z"
}
