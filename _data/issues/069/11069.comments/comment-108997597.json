{
	"id": 108997597,
	"body": "The docs for `LockOSThread` say\r\n\r\n\u003e LockOSThread wires the *calling* goroutine to its current operating system thread. \r\n\r\n(emphasis mine)\r\n\r\nSo in your program it is the main goroutine (the one executing the `main` function) that is locked to a specific OS thread (and no other goroutine may execute in that thread).\r\n\r\nIt is just a coincidence that the other two goroutines execute in the same thread. There is no facility to ensure that a group of goroutines all execute in the same thread (although the scheduler is likely smart enough to run related goroutines in the same thread).\r\n\r\nClosing this issue because the docs are explicit about which goroutine is locked to the thread.",
	"user": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-04T18:19:49Z",
	"updated_at": "2015-06-04T18:19:49Z"
}
