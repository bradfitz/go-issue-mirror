{
	"id": 218321798,
	"body": "@jbardin, sorry for the slow reply. Yes, we can't really change the old behavior. As @odeke-em pointed out, for #8633 I just documented the status quo in https://golang.org/cl/21364.\r\n\r\nSome possibilities I see for this bug:\r\n\r\n* make a new magic return value from CheckRedirect which causes the redirect to stop, and causes it to return `(*Response, nil)` with the Response.Body not closed or consumed.\r\n\r\n* add a pointer to the Request type, pointing to the Response which caused it. This is somewhat consistent with the Response already having a pointer to its Request. It could be named `Request.ForRedirect *Response`, perhaps.\r\n\r\n* add a new hook (i.e. `CheckRedirect2`, but with a better name) which provides the Response.\r\n\r\nI think it's probably too late for major new API surface in Go 1.7, sadly, so I think the third option is out (and I don't like having two so-similar things anyway), but I think the `Request.ForRedirect *Response` field along with the magic return value from CheckRedirect might be sufficient.\r\n\r\n@JamesDunne?\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-10T23:31:16Z",
	"updated_at": "2016-05-10T23:31:16Z"
}
