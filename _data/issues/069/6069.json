{
	"id": 51284628,
	"number": 6069,
	"state": "closed",
	"title": "builtin: trace function",
	"body": "\u003cpre\u003eI often need to see what's really going on in a specific function, so I drop a quick\n`fmt.Println` in the code to output the data I want to investigate.\n\nThis has 2 disadvantages:\n\n1) I always need to jump to the header and import \u0026quot;fmt\u0026quot; and remove it when the\nlog is removed\n2) If I need more context information, I also have to import \u0026quot;runtime\u0026quot; to get\na call stack trace\n\nI propose a built in function\n\n    trace(args...interface{})\n\nand/or\n\n    tracef(format string, args...interface{})\n\nthat does this without requiring fmt or runtime. The output would look like the `panic`\nstack trace with the custom information attached.\u003c/pre\u003e",
	"user": {
		"login": "eaigner",
		"id": 112197,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:33:22Z",
	"created_at": "2013-08-07T11:11:29Z",
	"updated_at": "2016-06-24T22:53:58Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
