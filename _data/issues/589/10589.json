{
	"id": 71425413,
	"number": 10589,
	"state": "closed",
	"title": "runtime/race: TestRaceRange is not always detected as a race",
	"body": "It seems to me that TestRaceRange should always be detected as a race. The code is:\r\n\r\n\tfunc TestRaceRange(t *testing.T) {\r\n\t\tconst N = 2\r\n\t\tvar a [N]int\r\n\t\tvar x, y int\r\n\t\tdone := make(chan bool, N)\r\n\t\tfor i, v := range a {\r\n\t\t\tgo func(i int) {\r\n\t\t\t\t// we don't want a write-vs-write race\r\n\t\t\t\t// so there is no array b here\r\n\t\t\t\tif i == 0 {\r\n\t\t\t\t\tx = v\r\n\t\t\t\t} else {\r\n\t\t\t\t\ty = v\r\n\t\t\t\t}\r\n\t\t\t\tdone \u003c- true\r\n\t\t\t}(i)\r\n\t\t}\r\n\t\tfor i := 0; i \u003c N; i++ {\r\n\t\t\t\u003c-done\r\n\t\t}\r\n\t}\r\n\r\nThe actual execution is\r\n\r\n\tv = a[0]\r\n\tgo func() { x = v }()\r\n\tv = a[1]\r\n\tgo func() { y = v }()\r\n\r\nand the race is between the x = v and the v = a[1].\r\n\r\nWhen Austin tweaked the goroutine scheduler behavior, the race detector stopped detecting this race. Adding a Gosched brought the detection of the race back, but it seems like it should be detected even without a Gosched.\r\n\r\n@aclements",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2015-11-12T21:28:57Z",
	"created_at": "2015-04-27T23:03:27Z",
	"updated_at": "2015-11-12T21:28:57Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
