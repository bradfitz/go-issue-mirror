{
	"id": 66098082,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eHow about the related issue of elision of explicit types for fields in struct literals?\n\nGiven a type:\ntype A struct {\n\ts string\n}\n\nThis is not accepted:\nvar _ = struct{A}{\n\t{\"foo\"},\n}\n\nInstead one must write:\nvar _ = struct{A}{\n\tA{\"foo\"},\n}\n\nThis also feels inconsistent to me.  After all the compiler knows that the field must be\nassignable to type A, just like it knows the target types of map keys and elements.  If\nwe were to choose to make this change, it would also be backwards-compatible.\u003c/pre\u003e",
	"user": {
		"login": "tatatodd",
		"id": 5453737,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-09-26T00:08:41Z",
	"updated_at": "2014-12-08T10:47:43Z"
}
