{
	"id": 245120849,
	"body": "If you've figured out a way to add the id to the comment span, you should probably just go that route and ignore what I said about LinkifyText.  LinkifyText is currently only responsible for adding links that anchor directly to an identifier. For example, when you link to https://golang.org/pkg/net/http/#ErrContentLength, it's anchored at the identifier, not the associated comment block.\r\n\r\nI agree that adding the anchor at the top of the comment block is nicer from the user's perspective, but it wasn't clear to me how to get the context required to generate the id at the time the comments are rendered.\r\n\r\nOne problem with the approach of adding an `id` attribute to the first comment `span` tag is that it doesn't scale when multiple fields share the same doc comment. Consider, for example:\r\n\r\n    type Foo struct {\r\n        // T1, T2, and T3 are templates.\r\n\t    T1, T2, T3 *text.Template\r\n    }\r\n\r\nIn a case like this, if you go the route of adding an `id` attribute to the comment tag, you'd have to pick one of the identifiers to make linkable. Alternatively, you could possibly generate separate tags for the anchors prior to writing the comment block.\r\n\r\nAnother edge-case to keep in mind is fields without an associated doc comment. For example, see the first few fields of the [godoc.Presentation](https://godoc.org/golang.org/x/tools/godoc#Presentation) struct.",
	"user": {
		"login": "appleby",
		"id": 86076,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-06T22:52:31Z",
	"updated_at": "2016-09-06T22:52:31Z"
}
