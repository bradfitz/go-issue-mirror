{
	"id": 51278919,
	"number": 2232,
	"state": "closed",
	"title": "Channel send blocks indefinitely on empty struct with type assertion",
	"body": "by **jnwhiteh**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. git clone git://gist.github.com/1195562.git gist-1195562 or retrieve and unzip the\nattached file\n2. cd gist-1195562\n3. gotest\n\nWhat is the expected output?\n\n2011/09/05 19:11:19 Got an square message\n2011/09/05 19:11:19 Got a cube message\n2011/09/05 19:11:19 Got a close message\nPASS\n\nWhat do you see instead?\n\n2011/09/05 19:10:39 Got an square message\n2011/09/05 19:10:39 Got a cube message\n2011/09/05 19:10:39 Got a close message\nthrow: all goroutines are asleep - deadlock!\n\ngoroutine 1 [chan receive]:\ntesting.RunTests(0x2000, 0xf0de8, 0x100000001, 0x219c)\n\t/Users/jnwhiteh/scm/golang.hg/src/pkg/testing/testing.go:201 +0x440\ntesting.Main(0x2000, 0xf0de8, 0x100000001, 0xfc528, 0x0, ...)\n\t/Users/jnwhiteh/scm/golang.hg/src/pkg/testing/testing.go:168 +0x54\nmain.main()\n\t/Users/jnwhiteh/Desktop/gist-1195562/_testmain.go:29 +0x6d\n\ngoroutine 2 [chan receive]:\nfoo.TestShutdown(0x421363a0, 0x0)\n\t/Users/jnwhiteh/Desktop/gist-1195562/foo_test.go:21 +0x193\ntesting.tRunner(0x421363a0, 0xf0de8, 0x0, 0x0)\n\t/Users/jnwhiteh/scm/golang.hg/src/pkg/testing/testing.go:156 +0x2b\ncreated by testing.RunTests\n\t/Users/jnwhiteh/scm/golang.hg/src/pkg/testing/testing.go:200 +0x420\n\ngoroutine 3 [chan send]:\nfoo.(*Server).loop(0x42136360, 0x0)\n\t/Users/jnwhiteh/Desktop/gist-1195562/foo.go:41 +0x2e1\ncreated by foo.NewServer\n\t/Users/jnwhiteh/Desktop/gist-1195562/foo.go:20 +0xb4\ngotest: \u0026quot;./6.out\u0026quot; failed: exit status 2\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n6g\n\nWhich operating system are you using?\n\nMac OS X 10.7.1\n\nWhich revision are you using?  (hg identify)\n\n02cfad1793be tip\n\nPlease provide any additional information below.\n\nI tried to create a (more) minimal test case, but I was having trouble reproducing the\nissue with smaller cases, so this is a very simple program that directly mirrors the\nstructure of a part of my code and demonstrates the issue.\n\nThe main problem is that the following code blocks indefinitely:\n\n\tres := (\u0026lt;-s.out).(m_res_close)\n\nwhereas this version works correctly\n\n\t\u0026lt;-s.out\n\nas does this version (showing the types do in fact match):\n\n\tmsg := \u0026lt;-s.out\n        res := msg.(m_res_close)\n\nAdditionally it appears that if the struct (m_res_close) contains an item such as an\nint, the problem goes away and the code that fails above will succeed.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/2232/0/gist-1195562.zip\"\u003egist-1195562.zip\u003c/a\u003e (1663 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:12:00Z",
	"created_at": "2011-09-05T18:20:53Z",
	"updated_at": "2016-06-24T19:34:27Z"
}
