{
	"id": 55391774,
	"number": 9681,
	"state": "closed",
	"title": "spec: Complex number types should support \" \u003e  \u003c \u003c= \u003e=\" operators (greater than, less than)",
	"body": "Implementation in Go.\r\n\r\nCurrently one has to do this to compare complex numbers:\r\n```\r\nreal(a)*real(a) + imag(a)*imag(a) \u003e real(b)*real(b) + imag(b)*imag(b)\r\n```\r\nThis is comparing what is called the magnitude of a complex number and is essentially comparing the distance from zero because in a complex number plane, 0 is the smallest magnitude.\r\nTo draw the similarity between normal greater than and complex, instead of comparing numbers by cutting a line in the number line and checking either direction for smaller or greater than eg. 1234 \u003c 5678.\r\nIt doesn't make sense to check greater than and less than in a 1 dimensional sense as there is no 1 dimensional order to complex numbers.\r\nWith complex numbers you cut a circle on the complex plane and check either direction of the circle (inside and outside) if a complex number is greater than or less than the circle.\r\n![complex](https://cloud.githubusercontent.com/assets/2015791/5889565/f12e8ca4-a492-11e4-8de7-c9379487b5a9.jpg)\r\nIn the above diagram the following would evaluate to true\r\n```\r\nB \u003e A \u0026\u0026 A \u003e C \u0026\u0026 B \u003e C \r\n```\r\nIf another point (P) was on the unit circle this would evaluate true\r\n```\r\nP \u003e= A \u0026\u0026 P \u003c= A\r\n! P \u003e A \u0026\u0026 ! P \u003c A\r\n```\r\nThis would be nice to be builtin to the language as it would bring a better consistency with the number types supporting the \" \u003e  \u003c \u003c= \u003e=\" operators.\r\n",
	"user": {
		"login": "Splizard",
		"id": 2015791,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2015-01-25T01:39:19Z",
	"created_at": "2015-01-25T01:35:31Z",
	"updated_at": "2016-06-25T01:59:16Z"
}
