{
	"id": 139619821,
	"body": "What about something like per-request events? Those report any life-cycle events of a request.\r\n\r\nDefining a `born` and `dead` event, but reserving the right to insert any events in between.\r\n\r\nAll events deliver timing information and an request identification valid between born and dead (ideally valid forever).\r\n\r\nIf events could no be delivered, the amount of missed events will be counted and the first event transmitted next will be a \"you missed X events\" event (the `miss-event`), where X will be incremented every time that `miss-event` could not be delivered, too.\r\n\r\nA private, buffered channel could be that API. It would be delivered as an read-only channel to the consumer.\r\n\r\nRoundTrippers could then insert any kind of event at any point, provided they at least provide `born`, `dead` and `miss-event`. And they would not slowed down by slow consumers.\r\n\r\nNote: I am not sure how to solve request identification.",
	"user": {
		"login": "nightlyone",
		"id": 1767118,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-11T18:25:51Z",
	"updated_at": "2015-09-11T18:25:51Z"
}
