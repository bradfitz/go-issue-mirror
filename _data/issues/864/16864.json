{
	"id": 173008231,
	"number": 16864,
	"state": "closed",
	"title": "cmd/vet: detect situations in which runtime.KeepAlive() must be added",
	"body": "There have been a couple of CLs in which @ianlancetaylor has manually added `runtime.KeepAlive()` after careful code inspection:\r\n\r\n * http://golang.org/cl/27637\r\n * http://golang.org/cl/27650\r\n\r\nIn Ian's words:\r\n\r\n\u003e The cases that matter are where you have a parameter or local variable that is pointer to some type, there is or might be a finalizer on the object, the last reference to the object in the function is passing a field to some other function, and the finalizer might in some way invalidate that field value.\r\n\r\nIt would be nice if `go vet` could detect these situations, especially if it ends up being run on `std` regularly (eg. on trybots).\r\n\r\nMy proposal to make it possible is to add a tag `vet:‚Äùfinalizer_invalidate\"` to struct fields that matter in this context; with this tag, `vet` should be able to detect the missing calls to `KeepAlive` with no false positives.\r\n\r\n",
	"user": {
		"login": "rasky",
		"id": 1014109,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-08-24T23:55:01Z",
	"created_at": "2016-08-24T17:09:53Z",
	"updated_at": "2016-08-24T23:55:01Z"
}
