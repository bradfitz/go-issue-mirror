{
	"id": 51279264,
	"number": 2475,
	"state": "closed",
	"title": "Language spec should specify complexity of append operation",
	"body": "by **spoon.reloaded**:\n\n\u003cpre\u003eThe \u0026quot;container/vector\u0026quot; package was recently. The package implemented a vector\nusing the standard dynamic array structure, doubling each time size needed to expand,\nthus guaranteeing an amortized constant time (O(1)) push operation. This can be seen\neasily by clicking the method to see the source in the documentation. The complexity is\na very important consideration for programs using this data structure for large amounts\nof data.\n\nNow we are supposed to use append on slices for this. However, append is defined in the\nlanguage spec, and the language spec does not say that appending one element is done in\namortized constant time (O(1)). (One could imagine it growing by a constant number each\ntime, which would be really bad complexity-wise.) It may be true that it happens to be\nimplemented in a way that has amortized constant time, but digging through the compiler\ncode to find its behavior is not trivial. Plus, since it is part of the core language,\nother implementations and also future versions could potentially do it differently. It\nis essential that this complexity be guaranteed in the language spec; otherwise, it is\nnot a suitable replacement for the \u0026quot;container/vector\u0026quot; package.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2014-12-08T10:13:12Z",
	"created_at": "2011-11-16T23:10:29Z",
	"updated_at": "2016-06-24T21:20:46Z"
}
