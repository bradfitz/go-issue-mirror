{
	"id": 51282479,
	"number": 4684,
	"state": "closed",
	"title": "cmd/vet: silence struct tag warning for slice types",
	"body": "\u003cpre\u003e\u0026gt; What steps will reproduce the problem?\nGiven there are 2 go source files.\n\n// source in ./foo/foo.go\npackage foo\n\ntype Elem struct {\n    Name string\n}\n\ntype Elems []Elem\n\n// source in ./main.go\npackage main\n\nimport \u0026quot;./foo\u0026quot;\nimport \u0026quot;fmt\u0026quot;\n\nfunc main() {\n    fmt.Println(foo.Elems{\n        foo.Elem{Name: \u0026quot;name\u0026quot;},\n    })\n}\n\n# run go tool vet in command line\n$ go tool vet main.go\nmain.go:7:17: ./foo.Elems struct literal uses untagged fields\n\n\u0026gt; What is the expected output?\nNo vet error.\n\n\u0026gt; What do you see instead?\nVet reports error as described above.\n\n\u0026gt; Which compiler are you using (5g, 6g, 8g, gccgo)?\nn/a\n\n\u0026gt; Which operating system are you using?\n$ uname -a\nDarwin Huans-MacBook-Pro.local 12.2.0 Darwin Kernel Version 12.2.0: Sat Aug 25 00:48:52\nPDT 2012; root:xnu-2050.18.24~1/RELEASE_X86_64 x86_64\n\n\u0026gt; Which version are you using?  (run 'go version')\ngo 1.0.3\n\n\u0026gt; Please provide any additional information below.\nIf I rewrite main.go as following, go tool vet will stop complaining.\n\nfunc main() {\n    fmt.Println(foo.Elems([]foo.Elem{  // explicitly write []foo.Elem here\n        foo.Elem{Name: \u0026quot;name\u0026quot;},\n    }))\n}\u003c/pre\u003e",
	"user": {
		"login": "huandu",
		"id": 239739,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:24:48Z",
	"created_at": "2013-01-22T04:05:43Z",
	"updated_at": "2016-06-24T22:31:31Z"
}
