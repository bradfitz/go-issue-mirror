{
	"id": 158686900,
	"body": "Does it break without -N ?\n\nOn Sun, Nov 22, 2015 at 9:20 AM, Shawn Burke \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e If I do go build -i -gcflags \"-N -l\" -a, I get stuck into this state with\n\u003e the following stack. -a alone or -gcflags \"-N -l\" is fine. But this combo\n\u003e gets me into this state so even go build will fail going forward...some\n\u003e binary is getting rebuilt in a bad way, can't figure out which one.\n\u003e\n\u003e If I brew uninstall, brew install, then go build, it's fine until I run\n\u003e the above command again.\n\u003e\n\u003e shawn:[ thrift-gen ]\u003e go build\n\u003e # thrift-gen\n\u003e runtime.cgocallbackg: nosplit stack overflow\n\u003e     504 assumed on entry to runtime.cgocallbackg (nosplit)\n\u003e     416 after runtime.cgocallbackg (nosplit) uses 88\n\u003e     408 on entry to runtime.exitsyscall (nosplit)\n\u003e     288 after runtime.exitsyscall (nosplit) uses 120\n\u003e     280 on entry to runtime.exitsyscallfast (nosplit)\n\u003e     120 after runtime.exitsyscallfast (nosplit) uses 160\n\u003e     112 on entry to runtime.writebarrierptr (nosplit)\n\u003e     64  after runtime.writebarrierptr (nosplit) uses 48\n\u003e     56  on entry to runtime.writebarrierptr_nostore1 (nosplit)\n\u003e     0   after runtime.writebarrierptr_nostore1 (nosplit) uses 56\n\u003e     -8  on entry to runtime.acquirem (nosplit)\n\u003e reflect.typelinks: nosplit stack overflow\n\u003e     504 assumed on entry to reflect.typelinks (nosplit)\n\u003e     352 after reflect.typelinks (nosplit) uses 152\n\u003e     344 on entry to runtime.typedmemmove (nosplit)\n\u003e     320 after runtime.typedmemmove (nosplit) uses 24\n\u003e     312 on entry to runtime.heapBitsBulkBarrier (nosplit)\n\u003e     192 after runtime.heapBitsBulkBarrier (nosplit) uses 120\n\u003e     184 on entry to runtime.throw (nosplit)\n\u003e     160 after runtime.throw (nosplit) uses 24\n\u003e     152 on entry to runtime.dopanic (nosplit)\n\u003e     72  after runtime.dopanic (nosplit) uses 80\n\u003e     64  on entry to runtime.getcallerpc (nosplit)\n\u003e     56  after runtime.getcallerpc (nosplit) uses 8\n\u003e     48  on entry to runtime.nextBarrierPC (nosplit)\n\u003e     8   after runtime.nextBarrierPC (nosplit) uses 40\n\u003e     0   on entry to runtime.panicindex\n\u003e     -8  on entry to runtime.morestack (nosplit)\n\u003e runtime.cgocallback_gofunc: nosplit stack overflow\n\u003e     504 assumed on entry to runtime.cgocallback_gofunc (nosplit)\n\u003e     496 after runtime.cgocallback_gofunc (nosplit) uses 8\n\u003e     488 on entry to runtime.cgocallbackg (nosplit)\n\u003e     400 after runtime.cgocallbackg (nosplit) uses 88\n\u003e     392 on entry to runtime.exitsyscall (nosplit)\n\u003e     272 after runtime.exitsyscall (nosplit) uses 120\n\u003e     264 on entry to runtime.exitsyscallfast (nosplit)\n\u003e     104 after runtime.exitsyscallfast (nosplit) uses 160\n\u003e     96  on entry to runtime.writebarrierptr (nosplit)\n\u003e     48  after runtime.writebarrierptr (nosplit) uses 48\n\u003e     40  on entry to runtime.writebarrierptr_nostore1 (nosplit)\n\u003e     -16 after runtime.writebarrierptr_nostore1 (nosplit) uses 56\n\u003e\n\u003e I tried setting CGO_ENABLED=0, no change.\n\u003e\n\u003e GOARCH=\"amd64\"\n\u003e GOBIN=\"\"\n\u003e GOEXE=\"\"\n\u003e GOHOSTARCH=\"amd64\"\n\u003e GOHOSTOS=\"darwin\"\n\u003e GOOS=\"darwin\"\n\u003e GOPATH=\"/Users/shawn/go\"\n\u003e GORACE=\"\"\n\u003e GOROOT=\"/usr/local/Cellar/go/1.5.1/libexec\"\n\u003e GOTOOLDIR=\"/usr/local/Cellar/go/1.5.1/libexec/pkg/tool/darwin_amd64\"\n\u003e GO15VENDOREXPERIMENT=\"\"\n\u003e CC=\"clang\"\n\u003e GOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fno-common\"\n\u003e CXX=\"clang++\"\n\u003e CGO_ENABLED=\"1\"\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/13354\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-21T22:28:34Z",
	"updated_at": "2015-11-21T22:28:34Z"
}
