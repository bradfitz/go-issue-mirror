{
	"id": 66090654,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eI think this is because of the interface{}. The compiler doesn't know what io.Reader is:\nIt could be a pointer or a value. Either way r is tied to Thing, and it has to fit on\nthe stack as well, whether that be a pointer or a value. At compile time the compiler\ndoesn't know which.\n\nFor some reason this seems to make a difference (not sure why):\n\nfunc (t Thing) Read() error {\n        _, err := t.r.Read(nil)\n        return err\n}\n\n# command-line-arguments\n./test.go:9: leaking param: t\n\nI observed something similar with issue #7661. I am still unsure why bytes.Buffer is\nalways heap allocated.\u003c/pre\u003e",
	"user": {
		"login": "lukescott",
		"id": 486224,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-05-01T20:05:55Z",
	"updated_at": "2014-12-08T10:40:03Z"
}
