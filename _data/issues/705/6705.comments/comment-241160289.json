{
	"id": 241160289,
	"body": "FWIW, we use example code like the following inside of any package where we want leaks testing:\r\n\r\n```\r\npackage foobar\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"testing\"\r\n\r\n\t\"github.com/uber/tchannel-go/testutils/goroutines\"\r\n)\r\n\r\nfunc TestMain(m *testing.M) {\r\n\texitCode := m.Run()\r\n\tif err := goroutines.IdentifyLeaks(\u0026goroutines.VerifyOpts{\r\n\t\tExcludes: []string{\r\n\t\t\t// Raven: https://github.com/getsentry/raven-go/issues/90\r\n\t\t\t\"getsentry/raven-go\",\r\n\t\t},\r\n\t}); err != nil \u0026\u0026 exitCode == 0 {\r\n\t\tfmt.Fprintf(os.Stderr, \"Found goroutine leaks on successful test run: %v\", err)\r\n\t\texitCode = 1\r\n\t}\r\n\tos.Exit(exitCode)\r\n}\r\n```\r\n\r\nWe haven't yet pulled this out as a separate library, but here's the source for reference: https://github.com/uber/tchannel-go/tree/dev/testutils/goroutines",
	"user": {
		"login": "malandrew",
		"id": 141789,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-19T23:34:52Z",
	"updated_at": "2016-08-19T23:34:52Z"
}
