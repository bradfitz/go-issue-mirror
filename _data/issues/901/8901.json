{
	"id": 51288846,
	"number": 8901,
	"state": "open",
	"title": "runtime: squeeze Hchan into 64 bytes ",
	"body": "\u003cpre\u003eCurrently Hchan is 12 words (on 64-bit machine). It would be nice to squeeze it into 8\nwords. First it's just memory consumption reduction, and second it will be exactly cache\nline (and due to malloc alignment, it will be also cache line aligned) which will\nspeedup contented synchronization - ping-pong only one line instead of two + no false\nsharing.\n\nelemtype goes away as it is not needed.\ndataqsiz is a derivative of qcount/sendx/recvx, so it just goes away as well.\nrecvq/sendq can be reduced to 1 pointer to a head of doubly-linked cycle of waiters.\nThis gives exactly 8 words.\n\nFTR, here is a CL that lowers OCAP/OLEN for chans into runtime calls (necessary to\nremove dataqsiz):\n\u003ca href=\"https://golang.org/cl/54570046/\"\u003ehttps://golang.org/cl/54570046/\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"comments": 2,
	"created_at": "2014-10-07T14:29:21Z",
	"updated_at": "2015-06-08T06:13:03Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
