{
	"id": 66084394,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3 by **lucio.dere**:\n\n\u003cpre\u003eAccording to Russ:\n\n        // TODO(rsc): The moves back and forth to memory\n        // here are for truncating the value to 32 bits.\n        // This handles 32-bit comparison but presumably\n        // all the other ops have the same problem.\n        // We need to figure out what the right general\n        // solution is, besides telling people to use float64.\n        tempname(\u0026t1, types[TFLOAT32]);\n        tempname(\u0026t2, types[TFLOAT32]);\n        cgen(nr, \u0026t1);\n        cgen(nl, \u0026t2);\n        gmove(\u0026t2, \u0026tmp);\n        gins(AFCOMFP, \u0026t1, \u0026tmp);\n        gins(AFSTSW, N, \u0026ax);\n        gins(ASAHF, N, N);\n\nand I note from \u003ca href=\"http://www.posix.nl/linuxassembly/nasmdochtml/nasmdoca.html\"\u003ehttp://www.posix.nl/linuxassembly/nasmdochtml/nasmdoca.html\u003c/a\u003e that:\n\n\"The FCMOV conditions test the main processor's status flags, not the FPU status flags,\nso using FCMOV directly after FCOM will not work. Instead, you should either use FCOMI\nwhich writes directly to the main CPU flags word, or use FSTSW to extract the FPU flags.\n\nAlthough the FCMOV instructions are flagged P6 above, they may not be supported by all\nPentium Pro processors; the CPUID instruction (section A.22) will return a bit which\nindicates whether conditional moves are supported.\"\n\nWhereas:\n\nFSTSW mem16                   ; 9B DD /0             [8086,FPU] \nFSTSW AX                      ; 9B DF E0             [286,FPU]\n\nseem to be supported on all architectures (even way back when the FPU was a separate\nchip, if I read the above correctly).\n\nLooking at 8l:\n\nuchar   ystsw[] =\n{\n    Ynone,  Ym, Zo_m,   2,\n    Ynone,  Yax,    Zlit,   1,\n    0\n};\n\nNow, it seems likely that the code commented on by Russ above and conditional on 32-bit\nfloating point operation is only used or generated on one of the two hosts I'm using and\nthus breaks only on that host.  But the exact cause of the problem remains a mystery to\nme.  I looked at the 6[gl] instances, but they don't seem to add any clarity.  As things\nstand now, I have found:\n\nlucio@quadrangle:~/.../cmd/8g$ grep -in FSTSW *\nggen.c:1117:\t\tgins(AFSTSW, N, \u0026ax);\nreg.c:303:\t\tcase AFSTSW:\nlucio@quadrangle:~/.../cmd/8g$ cd ../8l\nlucio@quadrangle:~/.../cmd/8l$ grep -in FSTSW *\n8.out.h:356:\tAFSTSW,\nenam.c:307:\t\"FSTSW\",\noptab.c:797:\t{ AFSTSW,\tystsw,\tPx, 0xdd,(07),0xdf,0xe0 },\nlucio@quadrangle:~/.../cmd/8l$ cd ../6l\nlucio@quadrangle:~/.../cmd/6l$ grep -in FSTSW *\n6.out.h:360:\tAFSTSW,\noptab.c:1275:\t{ AFSTSW,\tystsw,\tPx, 0xdd,(07),0xdf,0xe0 },\nlucio@quadrangle:~/.../cmd/6l$ grep -in ystsw *\noptab.c:410:uchar\tystsw[] =\noptab.c:1275:\t{ AFSTSW,\tystsw,\tPx, 0xdd,(07),0xdf,0xe0 },\n\nWhether any of those produce invalid object code is beyond my ability to determine.\n\nLucio.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-23T05:15:16Z",
	"updated_at": "2014-12-08T10:34:12Z"
}
