{
	"id": 66066311,
	"body": "\u003ca id=\"c7\"\u003e\u003c/a\u003eComment 7:\n\n\u003cpre\u003eThis bug has nothing to do with interning except that if I were to implement interning\nmyself in pure Go, without the help of the runtime (which is \u003ca href=\"https://golang.org/issue/5160\"\u003eissue #5160\u003c/a\u003e), then I'd want\nto lookup interned strings from []byte from the network, without making copies.\n\nThat is, I'd have:\n\n  var internTable map[string]string  // identity map. from key to same value.\n\nBut I'd want to access it like:\n\n   var b []byte = slice of bytes from the network in a bytes.Buffer\n   _ = internTable[string(b)]\n\n... reusing memory from another similar request (e.g. caching HTTP Request MIME headers)\n\nI'm only talking about indexing m[string(b)] in this bug, for Go-\u003eruntime maps.\n\nFor Go-\u003eGo, that is \u003ca href=\"https://golang.org/issue/2205\"\u003eissue #2205\u003c/a\u003e (cmd/gc: read-only escape analysis and avoiding string -\u003e\n[]byte copies)\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-03-31T19:41:37Z",
	"updated_at": "2014-12-08T10:18:24Z"
}
