{
	"id": 219909704,
	"body": "FWIW, on a careful re-reading of Dmitriy's description of the races, it does seem like Reset is not possible to use correctly. The fundamental issue is that if Reset tells the caller that there is an event to read, there is now a race between the caller consuming that event in order to fully reset the channel and the new timer expiring, which will attempt to send a new event to the channel. For a long timeout this is likely never going to be an issue, but for short timeouts you could imagine it happening.\n\nNot thinking about what to do about this right now. It might be that we have to change Reset to reach in and drain the channel itself, as if implemented to start with `if !t.Stop() { select { case \u003c-t.C: ; default: } }`. As I commented in #11513, this would be a visible change. But it might be justified by Reset being fundamentally unusable otherwise.\n\nMaybe for Go 1.8. I'd like to think about this again when I've had a good week's sleep.",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-18T02:34:14Z",
	"updated_at": "2016-05-18T02:34:14Z"
}
