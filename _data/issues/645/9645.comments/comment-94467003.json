{
	"id": 94467003,
	"body": "To be very clear, let me restate the behavior I am proposing. Today, 'go build' with no arguments in a command directory foo writes a binary 'foo' (or foo.exe on Windows). 'go install' with no arguments in that directory writes 'foo' to a bin directory. I propose that it also remove ./foo (or ./foo.exe on Windows).\r\n\r\nTo respond to @dominikh, there is no need to check PWD because this only applies to 'go install' with no arguments, which always means the current directory.\r\n\r\nAnother way to view this change is that it is no different than if 'go install' (again, with no arguments) were implemented as 'go build' followed by 'mv foo $GOBIN/foo'. Using the current directory as an intermediate staging area is very common when using build tools like make. The command to install in that case is cp, not mv, but the effect is the same: the current directory never has a stale binary. This situation where you end up with a stale binary in the current directory is peculiar to the go command, and the go command can correct it.",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-20T14:26:26Z",
	"updated_at": "2015-04-20T14:26:26Z"
}
