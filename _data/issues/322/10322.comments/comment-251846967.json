{
	"id": 251846967,
	"body": "@rsc The magic search keyword is \"gitdir\" and you can read more about it in `man gitrepository-layout`:\r\n\r\n\u003e Note: Also you can have a plain text file .git at the root of your working tree, containing gitdir: \u003cpath\u003e to point at the real directory that has the repository. This mechanism is often used for a working tree of a submodule checkout, to allow you in the containing superproject to git checkout a branch that does not have the submodule. The checkout has to remove the entire submodule working tree, without losing the submodule repository.\r\n\r\nFor me, simply adding a submodule creates this situation (the submodule has a .git file that points to inside the enclosing repo's .git directory as described above). I'm using git 2.1.0 but I believe this is true for any recent-ish git.\r\n\r\n```\r\n$ mkdir -p /tmp/g \u0026\u0026 cd /tmp/g\r\n$ git init\r\nInitialized empty Git repository in /tmp/g/.git/\r\n$ git submodule add https://github.com/golang/snappy\r\nCloning into 'snappy'...\r\nremote: Counting objects: 494, done.\r\nremote: Total 494 (delta 0), reused 0 (delta 0), pack-reused 494\r\nReceiving objects: 100% (494/494), 2.22 MiB | 1.05 MiB/s, done.\r\nResolving deltas: 100% (302/302), done.\r\nChecking connectivity... done.\r\n$ cat snappy/.git\r\ngitdir: ../.git/modules/snappy\r\n```",
	"user": {
		"login": "cespare",
		"id": 318501,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-06T01:43:48Z",
	"updated_at": "2016-10-06T01:43:48Z"
}
