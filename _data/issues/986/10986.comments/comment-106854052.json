{
	"id": 106854052,
	"body": "runtime.GC() does not do a concurrent GC, it does a STW GC which accounts\nfor the pause the program is printing.\n\nBelow is the same program that prints out some diagnostics, there are 14\nGCs, 13 are concurrent and one is not. The (forced) at the end of the last\ndiagnostic message indicating a call to runtime.GC() to do a STW GC. This\nis the pause the program prints out. The STW pauses are the first and last\nnumbers of the ms clock numbers. These are truncated ints so 0 means all\nSTW pauses in the first 13 GCs, the concurrent ones, are \u003c 1 millisecond.\n\n.rlh@rlh0:~/work/code/bugs/latency1/src$ ./latency\n\ngc #1 @0.038s 9%: 0+0+0+3+0 ms clock, 0+0+0+0/3/0+0 ms cpu, 4-\u003e7-\u003e3\nMB, 4 MB goal, 1 P\ngc #2 @0.048s 17%: 0+0+0+4+0 ms clock, 0+0+0+0/4/0+0 ms cpu, 4-\u003e4-\u003e4\nMB, 7 MB goal, 1 P\ngc #3 @0.062s 27%: 0+0+0+8+0 ms clock, 0+0+0+0/8/0+0 ms cpu, 6-\u003e10-\u003e10\nMB, 8 MB goal, 1 P\ngc #4 @0.104s 27%: 0+0+0+11+0 ms clock, 0+0+0+0/11/0+0 ms cpu,\n13-\u003e13-\u003e9 MB, 20 MB goal, 1 P\ngc #5 @0.125s 36%: 0+0+0+17+0 ms clock, 0+0+0+0/17/0+0 ms cpu,\n15-\u003e20-\u003e20 MB, 18 MB goal, 1 P\ngc #6 @0.296s 30%: 0+0+0+102+0 ms clock, 0+0+0+22/21/0+0 ms cpu,\n32-\u003e48-\u003e40 MB, 40 MB goal, 1 P\ngc #7 @0.489s 25%: 0+0+0+149+0 ms clock, 0+0+0+0/34/0+0 ms cpu,\n41-\u003e47-\u003e34 MB, 80 MB goal, 1 P\ngc #8 @0.739s 29%: 0+0+0+197+0 ms clock, 0+0+0+43/47/0+0 ms cpu,\n42-\u003e84-\u003e81 MB, 58 MB goal, 1 P\ngc #9 @1.123s 27%: 0+0+0+379+0 ms clock, 0+0+0+0/91/0+0 ms cpu,\n80-\u003e87-\u003e85 MB, 161 MB goal, 1 P\ngc #10 @1.615s 30%: 0+0+0+321+0 ms clock, 0+0+0+80/104/0+0 ms cpu,\n116-\u003e192-\u003e162 MB, 158 MB goal, 1 P\ngc #11 @2.442s 28%: 0+0+0+818+0 ms clock, 0+0+0+0/201/0+0 ms cpu,\n161-\u003e171-\u003e169 MB, 322 MB goal, 1 P\ngc #12 @3.356s 32%: 0+0+0+539+0 ms clock, 0+0+0+154/238/0+0 ms cpu,\n234-\u003e385-\u003e323 MB, 319 MB goal, 1 P\ngc #13 @5.241s 29%: 0+0+0+1867+0 ms clock, 0+0+0+0/465/0+0 ms cpu,\n322-\u003e344-\u003e341 MB, 644 MB goal, 1 P\ngc #14 @6.311s 40%: 0+0+0+0+568 ms clock, 0+0+0+0/465/0+568 ms cpu,\n401-\u003e401-\u003e281 MB, 401 MB goal, 1 P (forced)\nGC pause with 3 million map entries: 540.676752ms\nrlh@rlh0:~/work/code/bugs/latency1/src$\n\n\nOn Fri, May 29, 2015 at 10:30 AM, Ian Lance Taylor \u003cnotifications@github.com\n\u003e wrote:\n\n\u003e @RLH \u003chttps://github.com/RLH\u003e @aclements \u003chttps://github.com/aclements\u003e\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/10986#issuecomment-106828311\u003e.\n\u003e\n",
	"user": {
		"login": "RLH",
		"id": 972447,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-05-29T15:49:42Z",
	"updated_at": "2015-05-29T15:49:42Z"
}
