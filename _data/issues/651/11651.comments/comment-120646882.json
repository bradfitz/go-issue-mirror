{
	"id": 120646882,
	"body": "**Updated**: I had `ClientCAs` confused with `RootCAs`, now this reads correctly\r\n\r\nI got my demo implemented and then I realized that there's not a way to specify the `x509.CertPool` with `tls.Conn.GetCertificate`.\r\n\r\nI could keep `tlsConfig.RootCAs` and add to it, but then I have no way to manage it and the docs specify that I must not modify it, so I couldn't replace it.\r\n\r\nI could solve this problem manually, but again, there's no way for me to cast `net.Conn` or `tls.Conn` to `http.Server.Conn`, so again, I can't.\r\n\r\nWhy would I want to manage `tlsConfig.RootCAs` myself?\r\n\r\nLet's say that I'm loading hundreds or thousands of certificates over a long period of time - many of which are transient, occasionally I may want to flush the pool and start over (kilobytes turn to megabytes and so on).\r\n\r\nAlso, I assume that the `x509.CertPool` is inspected in such a way that duplicate chains are ignored and not added and that the only the necessary chain is sent to the browser based on the request, but the documentation doesn't explicitly state either for [tls.Conn.RootCAs](https://golang.org/src/crypto/tls/common.go#L273) or [x509.CertPool](https://golang.org/pkg/crypto/x509/#CertPool).",
	"user": {
		"login": "coolaj86",
		"id": 122831,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-11T17:34:01Z",
	"updated_at": "2015-07-11T19:26:01Z"
}
