{
	"id": 66077386,
	"body": "\u003ca id=\"c13\"\u003e\u003c/a\u003eComment 13:\n\n\u003cpre\u003eMy getaddrinfo crash is in strncasecmp:\n\nDump of assembler code for function strncasecmp:\n   0xb6ef5c34 \u0026lt;+0\u0026gt;:\tldr\tr3, [pc, #84]\t; 0xb6ef5c90 \u0026lt;strncasecmp+92\u0026gt;\n   0xb6ef5c38 \u0026lt;+4\u0026gt;:\tcmp\tr0, r1\n   0xb6ef5c3c \u0026lt;+8\u0026gt;:\tcmpne\tr2, #0\n   0xb6ef5c40 \u0026lt;+12\u0026gt;:\tpush\t{r4, r5}\n   0xb6ef5c44 \u0026lt;+16\u0026gt;:\tmrc\t15, 0, r12, cr13, cr0, {3}\n=\u0026gt; 0xb6ef5c48 \u0026lt;+20\u0026gt;:\tldr\tr3, [pc, r3]\n   0xb6ef5c4c \u0026lt;+24\u0026gt;:\tmoveq\tr0, #0\n   0xb6ef5c50 \u0026lt;+28\u0026gt;:\tldr\tr3, [r12, r3]\n   0xb6ef5c54 \u0026lt;+32\u0026gt;:\tbeq\t0xb6ef5c88 \u0026lt;strncasecmp+84\u0026gt;\n   0xb6ef5c58 \u0026lt;+36\u0026gt;:\tldr\tr5, [r3, #56]\t; 0x38\n   0xb6ef5c5c \u0026lt;+40\u0026gt;:\tsub\tr4, r0, #1\n   0xb6ef5c60 \u0026lt;+44\u0026gt;:\tldrb\tr12, [r4, #1]!\n   0xb6ef5c64 \u0026lt;+48\u0026gt;:\tldrb\tr3, [r1], #1\n   0xb6ef5c68 \u0026lt;+52\u0026gt;:\tldr\tr0, [r5, r12, lsl #2]\n   0xb6ef5c6c \u0026lt;+56\u0026gt;:\tldr\tr3, [r5, r3, lsl #2]\n   0xb6ef5c70 \u0026lt;+60\u0026gt;:\tsubs\tr0, r0, r3\n   0xb6ef5c74 \u0026lt;+64\u0026gt;:\tbne\t0xb6ef5c88 \u0026lt;strncasecmp+84\u0026gt;\n   0xb6ef5c78 \u0026lt;+68\u0026gt;:\tcmp\tr12, #0\n   0xb6ef5c7c \u0026lt;+72\u0026gt;:\tbeq\t0xb6ef5c88 \u0026lt;strncasecmp+84\u0026gt;\n   0xb6ef5c80 \u0026lt;+76\u0026gt;:\tsubs\tr2, r2, #1\n   0xb6ef5c84 \u0026lt;+80\u0026gt;:\tbne\t0xb6ef5c60 \u0026lt;strncasecmp+44\u0026gt;\n   0xb6ef5c88 \u0026lt;+84\u0026gt;:\tpop\t{r4, r5}\n   0xb6ef5c8c \u0026lt;+88\u0026gt;:\tbx\tlr\n   0xb6ef5c90 \u0026lt;+92\u0026gt;:\tandeq\tr3, r11, r8, lsl #8\n\nIf I understand correctly, the mrc instruction reads the address of TLS, here it's\nlocale info:\n\n__thread __locale_t __libc_tsd_LOCALE = \u0026_nl_global_locale;\n\nHere is the correct sequence:\n\n(gdb) run\nStarting program: /storage/remy/go/bin/go get code.google.com/p/rsc/xmpp\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/usr/lib/libthread_db.so.1\".\n[New Thread 0xb69f5470 (LWP 19608)]\n[New Thread 0xb60f4470 (LWP 19609)]\n[New Thread 0xb56ff470 (LWP 19610)]\n[New Thread 0xb4cff470 (LWP 19611)]\n[New Thread 0xb44ff470 (LWP 19612)]\n\nBreakpoint 1, 0xb6ef5c34 in strncasecmp () from /usr/lib/libc.so.6\n(gdb) nexti\n0xb6ef5c38 in strncasecmp () from /usr/lib/libc.so.6\n(gdb) \n0xb6ef5c3c in strncasecmp () from /usr/lib/libc.so.6\n(gdb) \n0xb6ef5c40 in strncasecmp () from /usr/lib/libc.so.6\n(gdb) \n0xb6ef5c44 in strncasecmp () from /usr/lib/libc.so.6\n(gdb) \n0xb6ef5c48 in strncasecmp () from /usr/lib/libc.so.6\n(gdb) print/x $r3\n$1 = 0xb3408\n(gdb) x/32xw ($pc+$r3)\n0xb6fa9050:\t0xb6f8d888\t0xb6fa9dfc\t0x00000010\t0xb6fac538\n0xb6fa9060:\t0xb6fa9938\t0xb6faabbc\t0xb6fff000\t0xb6fa9934\n0xb6fa9070:\t0xb6fa92f8\t0x00000024\t0xb6fac2a8\t0xb6fac48c\n0xb6fa9080:\t0xb6fac52c\t0xb6ffeee8\t0xb6fac418\t0xb6eef250\n0xb6fa9090:\t0xb6eaa270\t0xb6fac2e0\t0xb6f49fd8\t0xb6fa992c\n0xb6fa90a0:\t0xb6faa958\t0xb6fa9190\t0x00000044\t0xb6ffed48\n0xb6fa90b0:\t0x00000018\t0xb6fac2f4\t0xb6fac494\t0xb6fac448\n0xb6fa90c0:\t0xb6eb7600\t0xb6fac32c\t0xb6faa744\t0xb6faabbc\n(gdb) x/32xw ($r12)\n0xb6ffc4c0:\t0xb6ffcb98\t0x00000000\t0x1065ef30\t0x004e0868\n0xb6ffc4d0:\t0xb6fa9958\t0xb6fab870\t0x00000000\t0xb6f8228c\n0xb6ffc4e0:\t0xb6f81c8c\t0xb6f82b8c\t0xb6fa94cc\t0x00000000\n0xb6ffc4f0:\t0x00000000\t0x00000000\t0x00000000\t0x00000000\n0xb6ffc500:\t0x00000000\t0x00000000\t0x00000000\t0x00000000\n0xb6ffc510:\t0x00000000\t0x00000000\t0x00000000\t0x00000000\n0xb6ffc520:\t0x00000000\t0x00000000\t0x00000000\t0x00000000\n0xb6ffc530:\t0x00000000\t0x00000000\t0x00000000\t0x00000000\n(gdb) nexti\n0xb6ef5c4c in strncasecmp () from /usr/lib/libc.so.6\n(gdb) \n0xb6ef5c50 in strncasecmp () from /usr/lib/libc.so.6\n(gdb) \n0xb6ef5c54 in strncasecmp () from /usr/lib/libc.so.6\n(gdb) print/x $r3\n$2 = 0xb6fa9958\n\nAnd the incorrect sequence (in the objcopied binary)\n\n(gdb) run\nStarting program: /storage/remy/go/bin/go.s get code.google.com/p/rsc/xmpp\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/usr/lib/libthread_db.so.1\".\n[New Thread 0xb69f5470 (LWP 19598)]\n[New Thread 0xb60f4470 (LWP 19599)]\n[New Thread 0xb56ff470 (LWP 19600)]\n[New Thread 0xb4cff470 (LWP 19601)]\n[New Thread 0xb44ff470 (LWP 19602)]\n\nBreakpoint 1, 0xb6ef5c34 in strncasecmp () from /usr/lib/libc.so.6\n(gdb) disas\nDump of assembler code for function strncasecmp:\n=\u0026gt; 0xb6ef5c34 \u0026lt;+0\u0026gt;:\tldr\tr3, [pc, #84]\t; 0xb6ef5c90 \u0026lt;strncasecmp+92\u0026gt;\n   0xb6ef5c38 \u0026lt;+4\u0026gt;:\tcmp\tr0, r1\n   0xb6ef5c3c \u0026lt;+8\u0026gt;:\tcmpne\tr2, #0\n   0xb6ef5c40 \u0026lt;+12\u0026gt;:\tpush\t{r4, r5}\n   0xb6ef5c44 \u0026lt;+16\u0026gt;:\tmrc\t15, 0, r12, cr13, cr0, {3}\n   0xb6ef5c48 \u0026lt;+20\u0026gt;:\tldr\tr3, [pc, r3]\n   0xb6ef5c4c \u0026lt;+24\u0026gt;:\tmoveq\tr0, #0\n   0xb6ef5c50 \u0026lt;+28\u0026gt;:\tldr\tr3, [r12, r3]\n   0xb6ef5c54 \u0026lt;+32\u0026gt;:\tbeq\t0xb6ef5c88 \u0026lt;strncasecmp+84\u0026gt;\n   0xb6ef5c58 \u0026lt;+36\u0026gt;:\tldr\tr5, [r3, #56]\t; 0x38\n   0xb6ef5c5c \u0026lt;+40\u0026gt;:\tsub\tr4, r0, #1\n   0xb6ef5c60 \u0026lt;+44\u0026gt;:\tldrb\tr12, [r4, #1]!\n   0xb6ef5c64 \u0026lt;+48\u0026gt;:\tldrb\tr3, [r1], #1\n   0xb6ef5c68 \u0026lt;+52\u0026gt;:\tldr\tr0, [r5, r12, lsl #2]\n   0xb6ef5c6c \u0026lt;+56\u0026gt;:\tldr\tr3, [r5, r3, lsl #2]\n   0xb6ef5c70 \u0026lt;+60\u0026gt;:\tsubs\tr0, r0, r3\n   0xb6ef5c74 \u0026lt;+64\u0026gt;:\tbne\t0xb6ef5c88 \u0026lt;strncasecmp+84\u0026gt;\n   0xb6ef5c78 \u0026lt;+68\u0026gt;:\tcmp\tr12, #0\n   0xb6ef5c7c \u0026lt;+72\u0026gt;:\tbeq\t0xb6ef5c88 \u0026lt;strncasecmp+84\u0026gt;\n   0xb6ef5c80 \u0026lt;+76\u0026gt;:\tsubs\tr2, r2, #1\n   0xb6ef5c84 \u0026lt;+80\u0026gt;:\tbne\t0xb6ef5c60 \u0026lt;strncasecmp+44\u0026gt;\n   0xb6ef5c88 \u0026lt;+84\u0026gt;:\tpop\t{r4, r5}\n   0xb6ef5c8c \u0026lt;+88\u0026gt;:\tbx\tlr\n   0xb6ef5c90 \u0026lt;+92\u0026gt;:\tandeq\tr3, r11, r8, lsl #8\nEnd of assembler dump.\n(gdb) nexti\n0xb6ef5c38 in strncasecmp () from /usr/lib/libc.so.6\n(gdb) \n0xb6ef5c3c in strncasecmp () from /usr/lib/libc.so.6\n(gdb) \n0xb6ef5c40 in strncasecmp () from /usr/lib/libc.so.6\n(gdb) \n0xb6ef5c44 in strncasecmp () from /usr/lib/libc.so.6\n(gdb) \n0xb6ef5c48 in strncasecmp () from /usr/lib/libc.so.6\n(gdb) print/x $r3\n$1 = 0xb3408\n(gdb) x/32xw ($pc+$r3)\n0xb6fa9050:\t0xb6f8d888\t0xb6fa9dfc\t0x00000008\t0xb6fac538\n0xb6fa9060:\t0xb6fa9938\t0xb6faabbc\t0xb6fff000\t0xb6fa9934\n0xb6fa9070:\t0xb6fa92f8\t0x0000001c\t0xb6fac2a8\t0xb6fac48c\n0xb6fa9080:\t0xb6fac52c\t0xb6ffeee8\t0xb6fac418\t0xb6eef250\n0xb6fa9090:\t0xb6eaa270\t0xb6fac2e0\t0xb6f49fd8\t0xb6fa992c\n0xb6fa90a0:\t0xb6faa958\t0xb6fa9190\t0x0000003c\t0xb6ffed48\n0xb6fa90b0:\t0x00000010\t0xb6fac2f4\t0xb6fac494\t0xb6fac448\n0xb6fa90c0:\t0xb6eb7600\t0xb6fac32c\t0xb6faa744\t0xb6faabbc\n(gdb) x/32xw ($r12)\n0xb6ffc4c0:\t0xb6ffcb98\t0x00000000\t0x1065ef30\t0x004e0868\n0xb6ffc4d0:\t0x00000000\t0xb6f8228c\t0xb6f81c8c\t0xb6f82b8c\n0xb6ffc4e0:\t0xb6fa94cc\t0x00000000\t0x00000000\t0x00000000\n0xb6ffc4f0:\t0x00000000\t0x00000000\t0x00000000\t0x00000000\n0xb6ffc500:\t0x00000000\t0x00000000\t0x00000000\t0x00000000\n0xb6ffc510:\t0x00000000\t0x00000000\t0x00000000\t0x00000000\n0xb6ffc520:\t0x00000000\t0x00000000\t0x00000000\t0x00000000\n0xb6ffc530:\t0x00000000\t0x00000000\t0x00000000\t0x00000000\n(gdb) quit\n\nIt loads 0x1065ef30 instead of the current locale pointer stored in the TLS. Then\ncrashes.\nIs it a bug in CGO/ARM support? minux, do you know how to decode this?\u003c/pre\u003e",
	"user": {
		"login": "remyoudompheng",
		"id": 175246,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-04-06T12:23:48Z",
	"updated_at": "2014-12-22T06:23:56Z"
}
