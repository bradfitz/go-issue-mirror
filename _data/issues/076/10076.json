{
	"id": 59804733,
	"number": 10076,
	"state": "open",
	"title": "runtime: move fast path of newdefer/freedefer to goroutine stack",
	"body": "This is a follow up to change https://go-review.googlesource.com/#/c/3967\r\nThe change moves freedefer from goroutine stack to system stack, because otherwise nosplit stack overflows with -N as:\r\n\r\nruntime.cgocallbackg: nosplit stack overflow\r\n\t504\tassumed on entry to runtime.cgocallbackg\r\n\t456\tafter runtime.cgocallbackg uses 48\r\n\t448\ton entry to runtime.cgocallbackg1\r\n\t512\tafter runtime.cgocallbackg1 uses -64\r\n\t504\ton entry to runtime.deferreturn\r\n\t408\tafter runtime.deferreturn uses 96\r\n\t400\ton entry to runtime.freedefer\r\n\t64\tafter runtime.freedefer uses 336\r\n\t56\ton entry to runtime.writebarrierptr\r\n\t32\tafter runtime.writebarrierptr uses 24\r\n\t24\ton entry to runtime.writebarrierptr_shadow\r\n\t-16\tafter runtime.writebarrierptr_shadow uses 40\r\n\r\nnewdefer is already on system stack.\r\nFor performance reasons we would like to move fast paths of both newdefer and freedefer to goroutine stack.\r\n\r\n@randall77 ",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2015-03-04T14:29:06Z",
	"updated_at": "2015-07-21T00:34:13Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
