{
	"id": 51276883,
	"number": 743,
	"state": "closed",
	"title": "an issue in GO programming language spec",
	"body": "by **unix.sh**:\n\n\u003cpre\u003eThe follow is from GO programming lanugage spec:\n\n//spec starts\n\nType declarations\n...\n// A Mutex is a data type with two methods Lock and Unlock.\ntype Mutex struct         { /* Mutex fields */ }\nfunc (m *Mutex) Lock()    { /* Lock implementation */ }\nfunc (m *Mutex) Unlock()  { /* Unlock implementation */ }\n\n// NewMutex has the same composition as Mutex but its method set is empty.\ntype NewMutex Mutex\n\n// PrintableMutex's method set contains the methods\n// Lock and Unlock bound to its anonymous field Mutex.\ntype PrintableMutex struct {\n        Mutex\n}\n\n//spec ends\n\nI think the method set in anonymous field Mutex of PrintableMutex doesn't\nhave two methods: Lock and Unlock, only *Mutex does(the receiver is of *T).\nSo the comments of PrintableMutex are wrong. It should be *Mutex instead.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:05:41Z",
	"created_at": "2010-04-23T16:09:24Z",
	"updated_at": "2016-06-24T19:15:31Z"
}
