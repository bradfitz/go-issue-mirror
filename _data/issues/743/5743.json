{
	"id": 51284116,
	"number": 5743,
	"state": "closed",
	"title": "spec: type switch ranges",
	"body": "\u003cpre\u003eConsider the following example:\n\nYou have a function that accepts an argument list of type `interface{}`\n\n    fmt(format string, args...interface{})\n\nIf you want to find out the type of an arg, we just loop over `args` and process each\n`arg` in a type switch.\n\n    swtich t := arg.(type) {\n      case int:\n        // handle int\n      case int8:\n        // handle int8 etc...\n    }\n\nIn most cases you just want to know if a value is of a certain type class like `u/int`\nto `u/int64`.\nIn that case you have to explicitly write a `case` statement for every type.\n\nI don't know if that was explicitly avoided when defining the Go spec, but here is a\nproposal for type ranges\n\n    switch t := arg.(type) {\n      case intish:\n        // t is cast to an int64 here\n      case floatish:\n        // t is cast to a float64 here\n      ...\n    }\u003c/pre\u003e",
	"user": {
		"login": "eaigner",
		"id": 112197,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "LanguageChange"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:31:27Z",
	"created_at": "2013-06-20T21:04:57Z",
	"updated_at": "2016-06-24T22:42:58Z"
}
