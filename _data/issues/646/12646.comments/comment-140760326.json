{
	"id": 140760326,
	"body": "You're right since I'm 'wait=no\" xinetd does the accept.\n /* If it's a TCP socket, and we're set to wait, the accept is\n       * done by the child process.  Don't set NEW_DESCRIPTOR, since\n       * there isn't one.  The descriptor will be/was removed from\n       * the descriptor set in svc_suspend and re-enabled in svc_resume.\n       */\n\nSo is there a way to is there a way to create a http server with a Conn?\n\nOn Wed, Sep 16, 2015 at 9:08 AM, Ian Lance Taylor \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e xinetd sends the connected socket to the program. It doesn't send the\n\u003e listening socket. The whole point of xinetd is that it does the listening\n\u003e for you.\n\u003e\n\u003e This is not the same as net/http/fcgi.Server. That function sets up a\n\u003e server to listen for connections.\n\u003e\n\u003e You don't want FileListener, you want FileConn.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/12646#issuecomment-140752333\u003e.\n\u003e\n",
	"user": {
		"login": "tedx",
		"id": 51880,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-16T14:34:12Z",
	"updated_at": "2015-09-16T14:34:12Z"
}
