{
	"id": 51285197,
	"number": 6446,
	"state": "closed",
	"title": "Heap about 10% slower in Go 1.2rc1",
	"body": "\u003cpre\u003eDear all, \n\nI have tested the container/heap package in the new Go1.2 with a program I made and I\nnoticed it runs about 20% slower than in Go 1.1.2, and the difference seems to be in\nheap.Pop(). I've commented it in the go-nuts list and I've been suggested to put it here.\n\nAll the tests have been done in amd64.\n\nAttached I'm sending a modified version of the IntHeap example of container/heap with a\nBenchmark to show the difference (only heap.Pop timing is accounted). I'm getting about\n10% slowdown in the new Go release.\n\nDoing a binary search in the Go repository, I've narrowed the issue to\n\u003ca href=\"https://code.google.com/p/go/source/detail?r=84e8898f7eca\"\u003ehttps://code.google.com/p/go/source/detail?r=84e8898f7eca\u003c/a\u003e . The revision just before\nthis one runs at the same speed than 1.1.2, and this one it runs like Go1.2rc1. \n\nI have run a modified version of Dave Cheney's autobench-next software to compare just\nthese two revisions, and I've not noticed an important change, so may be the issue is\nsomewhere else. You can see the comparison here: \u003ca href=\"http://pastebin.com/a1unb1RZ\"\u003ehttp://pastebin.com/a1unb1RZ\u003c/a\u003e\n\nAny ideas? \n\nThanks a lot!\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/6446/0/intheap.tgz\"\u003eintheap.tgz\u003c/a\u003e (10240 bytes)",
	"user": {
		"login": "siritinga",
		"id": 3969105,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Unfortunate"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:35:34Z",
	"created_at": "2013-09-22T09:46:51Z",
	"updated_at": "2016-06-25T01:19:19Z"
}
