{
	"id": 171488572,
	"body": "Yes, sorry I want not precise enough. My suggestion isn't a direct analog\nof the GOARM=5 situation, or the old darwin version scenario. Our GOARM=5\nbuilder does catch some things, certainly when the soft fp code is broken,\nbut it won't catch the major limitation of arm5, no support for unaligned\naccesses. Similarly, we have a GO386=387 builder, which will check that the\nolder code generation is sane, but won't stop us from accidentally\nreferencing an old 387 instruction.\n\nThe problem that cropped up apparently was introduced in 1.1 and took until\nnow for someone to hit. My suggestion is, given the difficulty in testing\nthese older platforms, and the fact that nobody is making them any more,\nnot to expend extra effort above what we have so far.\n\nOn Thu, Jan 14, 2016 at 11:51 AM, Brad Fitzpatrick \u003cnotifications@github.com\n\u003e wrote:\n\n\u003e @davecheney \u003chttps://github.com/davecheney\u003e, but we kinda have an GOARM=5\n\u003e builder at least (admittedly on ARMier hardware than ARM=5), which catches\n\u003e some stuff.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/13946#issuecomment-171486763\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-14T00:59:52Z",
	"updated_at": "2016-01-14T00:59:52Z"
}
