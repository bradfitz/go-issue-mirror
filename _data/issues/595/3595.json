{
	"id": 51280861,
	"number": 3595,
	"state": "closed",
	"title": "net/http: write error from swiftly dropped connection",
	"body": "\u003cpre\u003eThe following program prints:\n\ngot err: \u0026lt;nil\u0026gt;\ngot body: \u0026quot;the bar is closed\\n\u0026quot;\ngot err: write tcp 127.0.0.1:8080: connection reset by peer\n\nI think the second error is a bug - the http package\nisn't waiting for the response before printing the\nerror from writing to the server.\n\npackage main\n\nimport (\n\t\u0026quot;bytes\u0026quot;\n\t\u0026quot;fmt\u0026quot;\n\t\u0026quot;io\u0026quot;\n\t\u0026quot;io/ioutil\u0026quot;\n\t\u0026quot;log\u0026quot;\n\t\u0026quot;net/http\u0026quot;\n\t\u0026quot;strings\u0026quot;\n)\n\nfunc main() {\n\thttp.HandleFunc(\u0026quot;/bar\u0026quot;, func(w http.ResponseWriter, r *http.Request) {\n\t\thttp.Error(w, \u0026quot;the bar is closed\u0026quot;, 404)\n\t})\n\tgo http.ListenAndServe(\u0026quot;:8080\u0026quot;, nil)\n\tpost(strings.NewReader(\u0026quot;hello\u0026quot;))\n\tpost(bytes.NewBuffer(make([]byte, 4e6)))\n}\n\nfunc post(r io.Reader) {\n\tresp, err := http.Post(\u0026quot;\u003ca href=\"http://localhost:8080/bar\u0026quot\"\u003ehttp://localhost:8080/bar\u0026quot\u003c/a\u003e;, \u0026quot;text/utf8\u0026quot;, r)\n\tfmt.Printf(\u0026quot;got err: %v\\n\u0026quot;, err)\n\tif resp != nil {\n\t\tdata, err := ioutil.ReadAll(resp.Body)\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t\tfmt.Printf(\u0026quot;got body: %q\\n\u0026quot;, data)\n\t}\n}\u003c/pre\u003e",
	"user": {
		"login": "rogpeppe",
		"id": 66491,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 17,
	"closed_at": "2014-12-08T10:18:58Z",
	"created_at": "2012-05-07T03:17:04Z",
	"updated_at": "2016-06-24T22:18:43Z"
}
