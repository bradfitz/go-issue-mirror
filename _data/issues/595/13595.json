{
	"id": 121872833,
	"number": 13595,
	"state": "closed",
	"title": "spec: Variadic receiver types",
	"body": "This is a defect/deficiency in the specification.\r\nThe following changeset https://github.com/golang/go/commit/187ee2cf2bfd221d8c03daf69a08adb9ede44c84\r\ndefers parsing a `Receiver` to parsing `Parameters`, which *syntactically* allows a receiver to be variadic. Yet the additional receiver-related rules do not explicitly state that a receiver cannot be variadic. \r\n\r\nI propose the grammar production for `Receiver` to be changed to:\r\n```\r\nReceiver  = \"(\" [identifier] Type [\",\"] \")\"\r\n```\r\nwhich still allows for a parenthesized type and an optional trailing comma and at the same time more clearly conveys the intent that the receiver is exactly one.\r\nIf the above suggestion is accepted, no code changes whatsoever would be needed and the specification text can be reverted back to \r\n```html\r\nThe receiver type must be of the form \u003ccode\u003eT\u003c/code\u003e or \u003ccode\u003e*T\u003c/code\u003e where\r\n\u003ccode\u003eT\u003c/code\u003e is a type name. The type denoted by \u003ccode\u003eT\u003c/code\u003e is called\r\nthe receiver \u003ci\u003ebase type\u003c/i\u003e; it must not be a pointer or interface type and\r\nit must be declared in the same package as the method.\r\n```",
	"user": {
		"login": "momchil-velikov",
		"id": 5541560,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2015-12-15T21:58:25Z",
	"created_at": "2015-12-12T19:18:38Z",
	"updated_at": "2015-12-15T21:58:25Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
