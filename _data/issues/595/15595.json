{
	"id": 153621333,
	"number": 15595,
	"state": "closed",
	"title": "cmd/objdump: bad disassembly for 8-bit operations",
	"body": "The disassembly for some 8-bit operations is wrong.  (The code is correct, just the disassembler is wrong.)\r\n\r\nTest file:\r\n```\r\npackage main\r\n\r\n//go:noinline\r\nfunc f(a, b uint8) uint8 {\r\n\treturn a + b\r\n}\r\nfunc main() {\r\n\tprintln(f(3, 5))\r\n}\r\n```\r\n\r\nThen run:\r\n```\r\ngo build tmp.go\r\ngo tool objdump tmp\r\n```\r\ngives:\r\n```\r\nTEXT main.f(SB) /Users/khr/go/tmp.go\r\n        tmp.go:5       0x2040  0fb6442409      MOVZX 0x9(SP), AX       \r\n        tmp.go:5       0x2045  0fb64c2408      MOVZX 0x8(SP), CX       \r\n        tmp.go:5       0x204a  01c8            ADDL CX, AX             \r\n        tmp.go:5       0x204c  88442410        MOVL AL, 0x10(SP)       \r\n        tmp.go:5       0x2050  c3              RET                     \r\n```\r\nThe MOVL at the end should be a MOVB.  Notice that the register is named AL (correctly? AX would also a fine name there).\r\n\r\nThe bug doesn't happen for 16-bit stores, it generates `MOVW AX, 0x10(SP)` correctly.",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "HelpWanted"
		}
	],
	"comments": 3,
	"closed_at": "2016-09-07T20:08:26Z",
	"created_at": "2016-05-07T22:24:57Z",
	"updated_at": "2016-09-07T20:08:26Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
