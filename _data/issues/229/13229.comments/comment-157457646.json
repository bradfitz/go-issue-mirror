{
	"id": 157457646,
	"body": "Re using a different base for BPSW, the biggest issue is that we have a complete list of all base-2 strong pseudoprimes to 2^64.  That lets us quickly check actual results for different solutions.  Without base 2, we're limited to ~2^48 given a few months of computation.  Also, everyone else has been using base 2 -- I'm not sure you want to start deviating.  I think you should also use the standard methods for selecting the Lucas parameters -- Selfridge method for strong test, Baillie method if extra strong (Pari/GP does something different, so I suppose that's ok also since it's been used a lot).\r\n\r\n3825123056546413051 is the only counterexample for bases 2-23 below 2^64.\r\n\r\nThere are more efficient bases at the [best known SPRP bases](http://miller-rabin.appspot.com/) page.  You have to use some care using the smaller sets since the base will typically be larger than the input (read the remarks).  Naive solution -- just use the 7-base solution which is two fewer than {2,3,5,7,11,13,17,19,23} and doesn't need a check for 3825123056546413051.  Only 3 bases needed for 32-bit inputs.  If you have BPSW, then it ought to be more efficient than the 7-base or your first-9-prime-bases method, unless your users are always testing base-2 pseudoprimes.",
	"user": {
		"login": "danaj",
		"id": 125502,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-17T18:15:47Z",
	"updated_at": "2015-11-17T18:15:47Z"
}
