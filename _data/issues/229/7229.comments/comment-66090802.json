{
	"id": 66090802,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eFrom -R -v output:\n\n// pass 4\n1:0032 (/home/dmorsing/src/test/main.go:10) MOVQ    BX,\"\".err+0(SP)\t s:err u1:.BX rb:.BX\n.SP e autotmp_0000 e+8 autotmp_0000+8 err err+8  ra:.SP e autotmp_0000 e+8\nautotmp_0000+8 err err+8  cb:foo e e+8 \"\".err1 \"\".err2 f f+8  ca:foo e e+8 \"\".err1\n\"\".err2 f f+8  d:.BX err \n\n// pass 5\n1:0032 (/home/dmorsing/src/test/main.go:10) NOP     ,\t s:err rb:e autotmp_0000 e+8\nautotmp_0000+8 err err+8  ra:e autotmp_0000 e+8 autotmp_0000+8 err err+8  cb:foo e e+8\n\"\".err1 \"\".err2 f f+8  ca:foo e e+8 \"\".err1 \"\".err2 f f+8  d:err  a:e autotmp_0000 e+8\nautotmp_0000+8 err err+8 \n\nSomewhere, the MOVQ gets changed to a NOP without updating the regopt bitvectors. I\nhaven't found the place where this happens yet.\u003c/pre\u003e",
	"user": {
		"login": "DanielMorsing",
		"id": 545573,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-02-02T14:50:19Z",
	"updated_at": "2014-12-08T10:40:13Z"
}
