{
	"id": 175563140,
	"number": 17016,
	"state": "closed",
	"title": "encoding/json: cannot use json:\"-\" to omit a shadowed field of an embedded type.",
	"body": "### What version of Go are you using (`go version`)?\r\nGo 1.7\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nLocally I use:\r\n\u003e GOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/bhcleek/develop/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"\r\nCC=\"clang\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/86/4lzvmk8s5mschgm8s7scwxhh0000gn/T/go-build783586116=/tmp/go-build -gno-record-gcc-switches -fno-common\"\r\nCXX=\"clang++\"\r\nCGO_ENABLED=\"1\"\r\n\r\nBut the playground also exhibits this behavior.\r\n\r\n\r\n### What did you do?\r\nEmbed a struct, shadow one of its fields, and add the `json:\"-\"` tag to omit the shadowed field.\r\n\r\nhttps://play.golang.org/p/AaXoSAfRTj\r\n\r\n\r\n### What did you expect to see?\r\nI expected the json to not include a property for the shadowed field.\r\n\r\n### What did you see instead?\r\nThe shadowed field was included in the json.\r\n\r\nAfter consideration, I believe the behavior is correct, because it allows the unmarshal case to work as one would expect, but the documentation doesn't lead one to expect the current behavior for marshalling.\r\n",
	"user": {
		"login": "bhcleek",
		"id": 1958864,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "NeedsFix"
		}
	],
	"comments": 3,
	"closed_at": "2016-10-20T18:49:21Z",
	"created_at": "2016-09-07T17:38:30Z",
	"updated_at": "2016-10-20T18:49:21Z",
	"milestone": {
		"id": 1748849,
		"number": 42,
		"title": "Go1.8Maybe"
	}
}
