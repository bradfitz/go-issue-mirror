{
	"id": 51286079,
	"number": 7016,
	"state": "closed",
	"title": "misc/benchcmp: incorrect output with identical benchmark names",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n\n1. go test -test.run=NONE -test.bench=BenchmarkEncrypt std \u0026gt; enc.txt\n\nThe standard library has two BenchmarkEncrypt benchmarks, so this yields:\n\n$ grep \u0026quot;BenchmarkEncrypt\u0026quot; enc.txt \nBenchmarkEncrypt\t100000000\t        19.5 ns/op\t 822.23 MB/s\nBenchmarkEncrypt\t 5000000\t       515 ns/op\t  15.50 MB/s\n\n2. misc/benchcmp enc.txt enc.txt  # compare this run against itself\n\n\nWhat is the expected output? What do you see instead?\n\nWant:\n\nCorrect BenchmarkEncrypt comparisons for each BenchmarkEncrypt, showing zero change in\nthis case.\n\nHave:\n\nbenchmark           old ns/op    new ns/op    delta\nBenchmarkEncrypt           19          515  +2541.03%\n\nbenchmark            old MB/s     new MB/s  speedup\nBenchmarkEncrypt       822.23        15.50    0.02x\n\n\nPlease use labels and text to provide additional information.\n\nPerhaps a good candidate for a \u0026quot;HelpWanted\u0026quot; / easy-pickings label.\n\nShould benchcmp get rewritten in Go? (If so, I'll volunteer to do so and in the process,\nfix this myself. If not, I'll leave the awk fun to someone else.)\n\nIn the stdlib alone, impacts: BenchmarkHash8K, BenchmarkHash8Bytes, BenchmarkHash1K,\nBenchmarkParse, BenchmarkExp, BenchmarkEncrypt, BenchmarkDecrypt, BenchmarkCosh,\nBenchmarkCos, BenchmarkAtanh, BenchmarkAtan, BenchmarkAsinh, BenchmarkAsin,\nBenchmarkAcosh, BenchmarkAcos.\u003c/pre\u003e",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 14,
	"closed_at": "2014-12-08T10:39:05Z",
	"created_at": "2013-12-26T18:04:19Z",
	"updated_at": "2016-06-25T01:24:31Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
