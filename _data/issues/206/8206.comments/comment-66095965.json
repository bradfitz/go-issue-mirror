{
	"id": 66095965,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4 by **lucio.dere**:\n\n\u003cpre\u003eFor the purposes of this test, the result of invoking geppid have to match what the\nUnixes deliver.  If this isn't implicit for Plan 9, then the problem has already been\nresolved by removing the test.\n\nOf course, only until some application assumes a working os.Getppid() and the Plan 9\nimplementation gets bitten (we have an outstanding issue in this vein that Gustavo\nNiemeyer promised to look at: \"undefined: syscall.WaitStatus\" when trying his new \"pipe\"\npackage).\n\nIt seems to me that either we ensure that the PID syscalls are consistent with Unix\n(Posix?) expectations across their semantic effect, or we declare Plan 9 anomalous and\nmake sure this is carefully and clearly documented so that we don't get caught again.\n\nLastly, maybe I missed a suggestion that we put on a thinking cap and figure what\ncombination of flags will produce Unix-y behaviour for getpid and getppid; I can't think\nthat anyone will know this better than Rob and Russ.\n\nLucio.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-06-14T15:30:23Z",
	"updated_at": "2014-12-08T10:45:30Z"
}
