{
	"id": 51289235,
	"number": 9206,
	"state": "open",
	"title": "cmd/go, cmd/cgo: repeatable builds on OS X with external linker",
	"body": "\u003cpre\u003eRight now, on unix, building a pure Go program multiple times will generate\nidentical binaries.\n\nHowever, once cgo is used, the binary will contain $WORK path in the DWARF\nsections (I checked on Darwin/amd64 that if I strip the binaries, they are\nagain identical.)\n\n\nProducing identical binaries for the same source is very valuable in a lot\ncircumstances.\n\nFor example, it will allow us to track down the exact revision of the code\nused to produce the binary. (Note the runtime version is already embedded\ninto every Go binary.)\n\nIt will also help producing binary releases that could be trusted (see\n\u003ca href=\"https://gitian.org/\"\u003ehttps://gitian.org/\u003c/a\u003e for a similar attempt for legacy C/C++ builds).\n\nThis time, we should add tests (for example, build two versions of misc/cgo/test\nand see if they are identical.)\n\nCurrent problems:\n1. $WORK path leakage in cgo builds.\n2. $WORK path leakage in -cover and tests.\n\nFor those two, I propose that if -work is not used, strip out the io/ioutil.TempDir()\npart of the paths (work directory is not preserved, those paths won't be meaningful\nanyway).\n\n\nPlease triage this issue, thanks.\u003c/pre\u003e",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		},
		{
			"name": "OS-Darwin"
		}
	],
	"comments": 15,
	"created_at": "2014-12-04T21:08:58Z",
	"updated_at": "2016-10-21T14:32:36Z",
	"milestone": {
		"id": 2053058,
		"number": 49,
		"title": "Go1.9"
	}
}
