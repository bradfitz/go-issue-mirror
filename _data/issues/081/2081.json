{
	"id": 51278702,
	"number": 2081,
	"state": "closed",
	"title": "net/http: newConn() copies the tls.ConnectionState before TLS handshake is completed",
	"body": "by **crest@tzi.de**:\n\n\u003cpre\u003eI tried to use X.509 client certificates to control access to a HTTP server. I\ndiscovered that req.TLS in the request passed to a HandlerFunc called by a http.Server\nis invalid.\n\nWhat steps will reproduce the problem?\n1. Fetch the project from github.com (\u003ca href=\"https://github.com/Crest/gresec)\"\u003ehttps://github.com/Crest/gresec)\u003c/a\u003e\n2. Create a CA certificate in cacert.pem and a keypair in key.pem,cert.pem.\n3. cat key.pem cert.pem \u0026gt; both.pem for usage by curl\n4. (gomake \u0026amp;\u0026amp; ./gresec) \u0026amp;\n5. curl \u003ca href=\"http://127.0.0.1:8080\"\u003ehttp://127.0.0.1:8080\u003c/a\u003e\n\nWhat is the expected output?\nWith the patch applied it will print a valid tls.ConnectionState.\n\nWhat do you see instead?\nWith release-branch.r58 it gresec will print the invalid tls.ConnectionState cached by\nhttp.newConn().\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nFreeBSD 8.2\n\nWhich revision are you using?  (hg identify)\n1b38d90eebcd+ (release-branch.r58) release/release.r58\n\nPlease provide any additional information below.\nThe attached patch is just a first try by a go noob. It increases the overhead per HTTP\nrequest by at least one new() and copy.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:11:15Z",
	"created_at": "2011-07-18T22:16:07Z",
	"updated_at": "2016-06-24T19:32:26Z"
}
