{
	"id": 154245201,
	"body": "According to the [original commit that introduced pooling](https://github.com/golang/go/commit/517f4a96837e345609aca6f5bdf1fbeb92c70647), this was to prevent the trash generated by a single large zip file (which I believe is the far more common use case). It is probably sufficient to just reset the compressor within a given ```zip.Writer```.\r\n\r\nThere is another benefit here. The API for ```zip.Writer``` forbids concurrent calls to its methods, so you wouldn't even need a ```sync.Pool``` anymore, and can just store a local reference to a single compressor and reset the compressor for every call to ```zip.Writer.Create``` or ```zip.Writer.CreateHeader```.",
	"user": {
		"login": "dsnet",
		"id": 6354026,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-06T00:32:07Z",
	"updated_at": "2015-11-06T00:38:46Z"
}
