{
	"id": 51280469,
	"number": 3359,
	"state": "closed",
	"title": "net/http: Documentation of implementation details for clients",
	"body": "by **elazarl**:\n\n\u003cpre\u003eIn the net/http package there are three ways to send a request and receive a response.\n\nThe first one is, writing and reading the request directly from socket\n\nThe second one, using Transport.RoundTrip,\n\nAnd the third is using Client.Do\n\nThe documentation is lacking as to what each of these is doing in edge cases.\n\nFor example, all will handle chunked encoding for you. The response.Body will never\nreturn a non-chunked encoding you have to parse.\n\nIf you did not add directly Accept-Encoding:gzip, Transport is going to add that for\nyou, and will wrap the repsonse.Body with gzip.NewReader (sort of, it will also close\nthe original stream when closed).\n\nFinally, client.Do, will also follow redirect responses (301 moved response will trigger\nanother request).\n\nThere may be more differences I didn't notice.\n\nThis behavior, kind-of makes sense, but it must be documented in the appropriate\nfunctions.\n\nSee attached file for a demonstration of the different behaviours (note: leaks tcp\nconnection if using it too much). Run it with `go run sendreq.go` and see the response.\nChange the code to discover more cases of different behavior.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/3359/0/sendreq.go\"\u003esendreq.go\u003c/a\u003e (1503 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 10,
	"closed_at": "2014-12-08T10:17:28Z",
	"created_at": "2012-03-20T10:37:36Z",
	"updated_at": "2016-06-24T22:15:55Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
