{
	"id": 66049328,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eAlthough allowing new type kinds to be constants still may not be justifiably useful,\nit's now rather trivial to describe what could be reasonably allowable as a const:\n\nAny type for which equality is fully defined could be safely be the type of a constant\nvalue, with the transitive exception being pointers (so neither *struct{int} nor\nstruct{*int} would be valid constant types), and all constants would remain\nnon-addressable.\n\nThe implications of this would be that arrays and structs following the above rules\ncould be used in constant declarations, and those constants could in turn be used as map\nkeys, passed to functions, or stored in variables following the normal rules, since\nthose operations always involve copies, and all uses, valid or invalid, would be fully\nverifiable at compile-time.\u003c/pre\u003e",
	"user": {
		"login": "extemporalgenome",
		"id": 536740,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-12-26T03:53:52Z",
	"updated_at": "2014-12-08T10:04:16Z"
}
