{
	"id": 100397969,
	"number": 12115,
	"state": "closed",
	"title": "cmd/go: rpath should only be used when linking shared objects or executables",
	"body": "The TestCgoHandlesWlORIGIN test found in src/cmd/go/go_test.go fails on Solaris:\r\n\r\n```\r\n$ go test -v -run TestCgoHandlesWlORIGIN\r\n=== RUN   TestCgoHandlesWlORIGIN\r\n--- FAIL: TestCgoHandlesWlORIGIN (0.17s)\r\n        go_test.go:251: running testgo [build origin]\r\n        go_test.go:270: standard error:\r\n        go_test.go:271: # origin\r\n                ld: fatal: option '-rpath $ORIGIN' is incompatible with building a relocatable object\r\n                collect2: error: ld returned 1 exit status\r\n                \r\n        go_test.go:280: go [build origin] failed unexpectedly: exit status 2\r\nFAIL\r\nexit status 1\r\nFAIL    cmd/go  4.040s\r\n```\r\nRelocatable objects, which come from the compiler, or which are created with 'ld -r', aren't loadable \r\nobjects on their own.  It doesn't make sense to give such a \"non-final\" object a runpath, so ld(1) on Solaris exits with an error message.\r\n\r\nIf this test were reworked for say, an executable or a shared library, then that would make more sense.",
	"user": {
		"login": "binarycrusader",
		"id": 541114,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2015-09-25T17:53:20Z",
	"created_at": "2015-08-11T20:10:49Z",
	"updated_at": "2016-09-27T13:31:49Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
