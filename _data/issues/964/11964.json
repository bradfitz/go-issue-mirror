{
	"id": 98381454,
	"number": 11964,
	"state": "closed",
	"title": "spec: minor changes to examples",
	"body": "Three small suggestions for the examples in the Go Specification:\r\n\r\nIn the ```TimeZone``` type, the line\r\n```\r\nreturn fmt.Sprintf(\"GMT+%dh\", tz)\r\n```\r\nreturns something like ```GMT+-5h```. I think it would be better to change ```+%``` to ```%+```:\r\n```\r\nreturn fmt.Sprintf(\"GMT%+dh\", tz)\r\n```\r\nso the result is ```GMT-5h```.\r\n\r\nIn ```findMarker```, if a return statement were added, the loop would only check every other item in the channel, because it uses both a for/range and a channel receive operation. The example would be less confusing with just one of those. For/range hasn't been introduced yet, so that's what I would remove.\r\n\r\nIn the Selectors section, the anonymous field ```T0``` of type ```T2``` is already a pointer. So the line\r\n```\r\np.M0()       // ((\u0026(*p).T0)).M0()   M0 expects *T0 receiver, see section on Calls\r\n```\r\nisn't an example of a shorthand reference to an addressable value. I think the comment should be:\r\n```\r\np.M0()       // ((*p).T0).M0()   M0 expects *T0 receiver\r\n```\r\nA shorthand example could be added:\r\n```\r\nt.M2()      // (\u0026t).M2()     M2 expects *T2 receiver, see section on Calls\r\n```\r\n\r\nThese suggestions are current as of Go 1.5 beta 3.",
	"user": {
		"login": "pto",
		"id": 543546,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2015-07-31T20:39:02Z",
	"created_at": "2015-07-31T12:30:27Z",
	"updated_at": "2016-08-05T16:11:54Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
