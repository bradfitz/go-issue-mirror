{
	"id": 168843952,
	"body": "I made more tests, but it makes less and less sense.\r\n\r\nCase A - with:\r\n\r\n    #       echo \u003e\u003edidier cleanup\r\n    #       ( echo '\u003e\u003e\u003e' ; go env GOROOT ; echo '\u003c\u003c\u003c' ) \u003e\u003edidier\r\n    #       ( echo '\u003e\u003e\u003eTTT' ; go env GOROOT ; echo '\u003c\u003c\u003c' ) | tee \u003e\u003edidier\r\n    #       go env GOROOT | cat \u003e\u003edidier\r\n            echo \u003e\u003edidier xxx $(go env GOROOT)\r\n            echo \u003e\u003edidier xxx $(which go)\r\n            echo \u003e\u003edidier xxx GOROOT=$GOROOT\r\n\r\nI can reproduce (and consistently, on several runs):\r\n\r\n    xxx /home/vagrant/local/go ok\r\n    xxx /home/vagrant/local/go/bin/go\r\n    xxx GOROOT=/home/vagrant/local/go\r\n\r\nCase B - with:\r\n\r\n            echo \u003e\u003edidier cleanup\r\n    #       ( echo '\u003e\u003e\u003e' ; go env GOROOT ; echo '\u003c\u003c\u003c' ) \u003e\u003edidier\r\n    #       ( echo '\u003e\u003e\u003eTTT' ; go env GOROOT ; echo '\u003c\u003c\u003c' ) | tee \u003e\u003edidier\r\n    #       go env GOROOT | cat \u003e\u003edidier\r\n            echo \u003e\u003edidier xxx $(go env GOROOT)\r\n            echo \u003e\u003edidier xxx $(which go)\r\n            echo \u003e\u003edidier xxx GOROOT=$GOROOT\r\n\r\nI cannot reproduce:\r\n\r\n    cleanup\r\n    xxx /home/vagrant/local/go\r\n    xxx /home/vagrant/local/go/bin/go\r\n    xxx GOROOT=/home/vagrant/local/go\r\n\r\nCase C - with:\r\n\r\n            echo \u003e\u003edidier cleanup\r\n    #       ( echo '\u003e\u003e\u003e' ; go env GOROOT ; echo '\u003c\u003c\u003c' ) \u003e\u003edidier\r\n    #       ( echo '\u003e\u003e\u003eTTT' ; go env GOROOT ; echo '\u003c\u003c\u003c' ) | tee \u003e\u003edidier\r\n            go env GOROOT | cat \u003e\u003edidier\r\n            echo \u003e\u003edidier xxx $(go env GOROOT)\r\n            echo \u003e\u003edidier xxx $(which go)\r\n            echo \u003e\u003edidier xxx GOROOT=$GOROOT\r\n\r\nI cannot reproduce:\r\n\r\n    cleanup\r\n    /home/vagrant/local/go\r\n    xxx /home/vagrant/local/go\r\n    xxx /home/vagrant/local/go/bin/go\r\n    xxx GOROOT=/home/vagrant/local/go\r\n\r\nCase D - with:\r\n\r\n            echo \u003e\u003edidier cleanup\r\n            ( echo '\u003e\u003e\u003e' ; go env GOROOT ; echo '\u003c\u003c\u003c' ) \u003e\u003edidier\r\n            ( echo '\u003e\u003e\u003eTTT' ; go env GOROOT ; echo '\u003c\u003c\u003c' ) | tee \u003e\u003edidier\r\n            go env GOROOT | cat \u003e\u003edidier\r\n            echo \u003e\u003edidier xxx $(go env GOROOT)\r\n            echo \u003e\u003edidier xxx $(which go)\r\n            echo \u003e\u003edidier xxx GOROOT=$GOROOT\r\n\r\nI cannot reproduce:\r\n\r\n    cleanup\r\n    \u003e\u003e\u003e\r\n    /home/vagrant/local/go\r\n    \u003c\u003c\u003c\r\n    \u003e\u003e\u003eTTT\r\n    /home/vagrant/local/go\r\n    \u003c\u003c\u003c\r\n    /home/vagrant/local/go\r\n    xxx /home/vagrant/local/go\r\n    xxx /home/vagrant/local/go/bin/go\r\n    xxx GOROOT=/home/vagrant/local/go\r\n\r\nThe first echo (cleanup) seems to prevent the problem to happen. But when I remove it, I have yet another strange behavior: nothing is printed anymore in the file (file size = 0 at the end) for case B, C, and D.\r\n\r\nIn all my runs, when I can reproduce the problem, the extra characters are always \" ok\", not some random garbage..\r\n\r\nI can also produce the problem by adding a sleep of a few seconds just before the call to go env. Apparently, the starting time of the trap function does not matter. I don't really see how the problem could be due to a bad interaction with some other test case running in parallel, or a race condition (as I initially supposed).\r\n\r\nSo far, my only explanation is a weird bash bug.\r\n",
	"user": {
		"login": "dspezia",
		"id": 652458,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-04T23:31:34Z",
	"updated_at": "2016-01-04T23:31:34Z"
}
