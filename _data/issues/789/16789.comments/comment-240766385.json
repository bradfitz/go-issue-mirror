{
	"id": 240766385,
	"body": "It's also testing IPv4 and figuring out whether the system can do dual-stack stuff. See comments in ipsock_posix.go:\r\n\r\n```go\r\nfunc probeIPv4Stack() bool {\r\n        s, err := socketFunc(syscall.AF_INET, syscall.SOCK_STREAM, syscall.IPPROTO_TCP)\r\n        switch err {\r\n        case syscall.EAFNOSUPPORT, syscall.EPROTONOSUPPORT:\r\n                return false\r\n        case nil:\r\n                closeFunc(s)\r\n        }\r\n        return true\r\n}\r\n\r\n// Should we try to use the IPv4 socket interface if we're                                                                                                          \r\n// only dealing with IPv4 sockets?  As long as the host system                                                                                                      \r\n// understands IPv6, it's okay to pass IPv4 addresses to the IPv6                                                                                                   \r\n// interface. That simplifies our code and is most general.                                                                                                         \r\n// Unfortunately, we need to run on kernels built without IPv6                                                                                                      \r\n// support too. So probe the kernel to figure it out.                                                                                                               \r\n//                                                                                                                                                                  \r\n// probeIPv6Stack probes both basic IPv6 capability and IPv6 IPv4-                                                                                                  \r\n// mapping capability which is controlled by IPV6_V6ONLY socket                                                                                                     \r\n// option and/or kernel state \"net.inet6.ip6.v6only\".                                                                                                               \r\n// It returns two boolean values. If the first boolean value is                                                                                                     \r\n// true, kernel supports basic IPv6 functionality. If the second                                                                                                    \r\n// boolean value is true, kernel supports IPv6 IPv4-mapping.                                                                                                        \r\nfunc probeIPv6Stack() (supportsIPv6, supportsIPv4map bool) {\r\n```\r\n\r\netc.\r\n\r\nI'm not sure this is worth us changing anything, since you're the first person to complain about this.\r\n\r\nIt seems you can just change your configuration to SECCOMP_RET_ERRNO or whatever, telling Go \"no\" and letting us proceed.\r\n\r\nIf we supported this configuration, we would also need to test this configuration going forward (else it would inevitably regress), and it seems like a lot of work to test for marginal benefit.\r\n\r\nConvince us otherwise?\r\n\r\n/cc @mikioh @ianlancetaylor @mdempsky  for other opinions.",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-18T15:47:15Z",
	"updated_at": "2016-08-18T15:47:15Z"
}
