{
	"id": 66081422,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eThanks. IIUC, one would not be able to directly reference any field of the run-time\ndefined struct, like in 'InstanceName.FieldName', because the type is not known at\ncompile time. The fields would be gettable/settable only through reflect again.\n\nI don't think Go needs such functionality. If eg., as you wrote, precise binary layout\nis required by a non Go library, I think some C glue should be written instead. That's\nfast and accessible in both of the worlds. Abusing reflection for run-time type-unsafe\nbypassing of tasks which can be type-safely handled at compile time seems like a bad\nidea to me.\u003c/pre\u003e",
	"user": {
		"login": "cznic",
		"id": 729580,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-21T10:07:51Z",
	"updated_at": "2014-12-08T10:31:30Z"
}
