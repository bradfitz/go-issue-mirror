{
	"id": 100036167,
	"body": "\u003eNot all errors are from errors.New, what if the error is a custom error\r\ntype implemented in user code?\r\n\r\nI know! what is the problem? I am not talking about `error`, I only want to fix `errorString`, the error created by `errors.New()`.\r\nhttps://github.com/gin-gonic/go/commit/52d7945d572c3546a7e47ad56b887cf641cd86e1\r\n\r\nIf the error is a custom error, for example:\r\n```go\r\ntype MyError struct {\r\n    Code int `json:\"code\"`\r\n    Message string `json:\"message\"`\r\n}\r\n\r\nfunc (err *MyError) Error() string {\r\n    return fmt.Sprintf(\"[%d] %s\", err.Code, err.Message\")\r\n}\r\n\r\njson.Marshal(MyError{2, \"message\"}) // WORKS!\r\njson.Marshal(errors.New(\"message\")) // DOES NOT WORK! \u003c\u003c should be fixed (only this case)\r\n\r\n```\r\nyou don't really have to implement MashaslJSON() or MarshalText. The json package uses reflexion in order to generate the json string from the exported field (upper case).\r\n\r\n\r\n\r\n",
	"user": {
		"login": "manucorporat",
		"id": 127379,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-05-07T22:16:34Z",
	"updated_at": "2015-05-07T22:28:01Z"
}
