{
	"id": 55294786,
	"number": 9675,
	"state": "closed",
	"title": "cmd/go: Allow skipping link phase of go build",
	"body": "I'm using Go in a somewhat unusual way in an Xcode Objective C/C++ project – I'm collecting the `.o` files out of `go build`'s temp dir to produce a static library using `ar`. The static library is then linked into my project by Xcode's normal build process.\r\n\r\nThe goal of this system is to allow the majority of my project to be built in Xcode like it always has, but have the Go portion built by `go build`. This means I'd like Xcode to link the Go static library with the rest of my codebase.\r\n\r\nSo I have `go build` *just* compiling my Go code, solely so I can get those `.o` files – and that part works great. The problem is, `go build` fails during the link phase, because it's missing the C symbols used in my Go code via Cgo and `import \"C\"`. It makes sense that the Go linker can't find these symbols, because they only exist in object files in Xcode's intermediate files dir. \r\n\r\nSo, I'd love to be able to tell `go build` to skip the link phase, since I don't actually need the fully linked binary, and thus the link failure is not meaningful.\r\n\r\nIn case it helps clarify, here's the output from `go build`:\r\n```\r\n# _/Users/keith/Code/GoTest/GoTest/go\r\nUndefined symbols for architecture armv7:\r\n  \"_iosmain\", referenced from:\r\n      __cgo_8bff6e3df0ac_Cfunc_iosmain in main.cgo2.o\r\n     (maybe you meant: __cgo_8bff6e3df0ac_Cfunc_iosmain)\r\nld: symbol(s) not found for architecture armv7\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\nYou can see that it can't find `iosmain()`, which is defined in a separate `main.m` which I don't want Go to see or compile.",
	"user": {
		"login": "keithkml",
		"id": 7430512,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2015-01-23T18:10:20Z",
	"created_at": "2015-01-23T15:33:33Z",
	"updated_at": "2016-06-25T01:59:13Z"
}
