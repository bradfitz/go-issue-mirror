{
	"id": 183766244,
	"number": 17506,
	"state": "closed",
	"title": "comparison of parsed, Truncated dates fails in docker containers",
	"body": "\r\n### What version of Go are you using (`go version`)?\r\n\r\ngo version go1.7.1 and 1.6 linux/amd64\r\ngo version go1.7.1 and 1.6 darwin/amd64\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build610621160=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n### What did you do?\r\n\r\nWhen you compare dates that are both truncated with `time.Truncate`, and one of them is parsed with `time.Parse`, the test fails in docker containers. It works locally on OSX and Linux, go version 1.6 and 1.7. Below is the code and link to play.golang.org. \r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"time\"\r\n)\r\n\r\nfunc main() {\r\n\tnow := time.Now()\r\n\tdate2 := time.Now()\r\n\tparsed, _ := time.Parse(time.RFC3339, date2.Format(time.RFC3339))\r\n\tif now.Truncate(time.Hour) != parsed.Truncate(time.Hour) {\r\n\t\tfmt.Println(\"Dates differ in docker\", now.Truncate(time.Hour), parsed.Truncate(time.Hour))\r\n\t} else {\r\n\t\tfmt.Println(\"Dates are equal on the host\", now.Truncate(time.Hour), parsed.Truncate(time.Hour))\r\n\t}\r\n}\r\n``` \r\n\r\nhttps://play.golang.org/p/JKXJrjUun3\r\n\r\n### What did you expect to see?\r\n\r\nI expected the comparison to be true. \r\n\r\n### What did you see instead?\r\n\r\nWas false. \r\n\r\n",
	"user": {
		"login": "tdi",
		"id": 376847,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-10-18T18:37:55Z",
	"created_at": "2016-10-18T18:27:54Z",
	"updated_at": "2016-10-18T20:47:11Z"
}
