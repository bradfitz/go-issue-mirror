{
	"id": 56971854,
	"number": 9810,
	"state": "closed",
	"title": "encoding/json: string option: decoding struct slices: if field is null in JSON, value gets set to previous struct's field value",
	"body": "I have seen this with Go 1.2.1 (bundled with App Engine), and could not find a bug report or fix.\r\n\r\nThis is not an issue with 1.4.1, so I think it has been silently/inadvertently fixed.\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n)\r\n\r\ntype Container struct {\r\n\tXs []X `json:\"xs\"`\r\n}\r\n\r\ntype X struct {\r\n\tV int64 `json:\"value,string\"`\r\n}\r\n\r\nfunc main() {\r\n\r\n\tcontent := []byte(`{\"xs\":[{\"value\":\"5838406743490560\"},{\"value\":null}]}`)\r\n\tr := bytes.NewReader(content)\r\n\r\n\tc := \u0026Container{}\r\n\terr := json.NewDecoder(r).Decode(c)\r\n\tif err != nil {\r\n\t\tfmt.Println(err.Error())\r\n\t\treturn\r\n\t}\r\n\r\n\tfmt.Printf(\"%d %d\", c.Xs[0].V, c.Xs[1].V)\r\n}\r\n```\r\n\r\nhttp://play.golang.org/p/jE3tFV8dZN\r\n\r\nGo 1.2.1 output: \"5838406743490560 5838406743490560\"\r\nGo 1.4.1 output: \"5838406743490560 0\"\r\n",
	"user": {
		"login": "tp",
		"id": 52437,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2015-02-08T22:57:34Z",
	"created_at": "2015-02-08T22:49:11Z",
	"updated_at": "2016-06-25T02:00:22Z"
}
