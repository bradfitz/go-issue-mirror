{
	"id": 66068359,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003eIve tried it and no longer get any errors with this patch.\n\n Excuse me if this is a stupid question. In sendEOF() (in channel.go),\nis it possible to be preempted after weClosed() check, but before writePacket\n(if GOMAXPROCS \u003e 1), and then sendClose occur on another thread. After which\nthe EOF could go through on a closed channel?\n\n\n I was able to get it to panic though. By looping over\nstarting a command then closing the session. \n\n\n$ go run sshtestpanic.go \n2012/07/23 14:25:00 Session 1\n2012/07/23 14:25:00 Session 2\n2012/07/23 14:25:00 Session 3\npanic: runtime error: send on closed channel\n\ngoroutine 4 [running]:\ncode.google.com/p/go.crypto/ssh.(*ClientConn).mainLoop(0x18768000, 0x0)\n\t/home/nwaples/go/src/code.google.com/p/go.crypto/ssh/client.go:302 +0x11b6\ncreated by code.google.com/p/go.crypto/ssh.Client\n\t/home/nwaples/go/src/code.google.com/p/go.crypto/ssh/client.go:47 +0x137\n\ngoroutine 1 [runnable]:\ncode.google.com/p/go.crypto/ssh.(*clientChan).waitForChannelOpenResponse(0x1872f9f0,\n0x18768880, 0x18)\n\t/home/nwaples/go/src/code.google.com/p/go.crypto/ssh/client.go:492 +0x36\ncode.google.com/p/go.crypto/ssh.(*ClientConn).NewSession(0x18768000, 0x2, 0x2)\n\t/home/nwaples/go/src/code.google.com/p/go.crypto/ssh/session.go:467 +0x133\nmain.main()\n\t/home/nwaples/go/src/pssh/sshtestpanic.go:42 +0x315\n\ngoroutine 2 [syscall]:\ncreated by runtime.main\n\t/build/buildd/golang-stable-1.0.1/src/pkg/runtime/proc.c:221\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/3810/5/sshtestpanic.go\"\u003esshtestpanic.go\u003c/a\u003e (933 bytes)",
	"user": {
		"login": "nwaples",
		"id": 746663,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-07-23T05:22:37Z",
	"updated_at": "2014-12-08T10:20:08Z"
}
