{
	"id": 66052455,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eAn implementation always has to be aware of the interface is is fulfilling in a correct\nprogram, even in fully dynamically typed languages. Note also that duck typing is not\nstrictly defined.\n\nA valid question is whether Go should allow covariant result types (and correspondingly,\ncontravariant input parameter types). This would be a language change with significant\nruntime consequences. We have thought about this in the past and decided against it.\n\nOr put differently: In Go, if it walks like a duck it is a duck, but only if it uses the\nsame legs as a duck.\u003c/pre\u003e\n\n\n_Owner changed to **g...@golang.org**._\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-09-03T17:42:12Z",
	"updated_at": "2014-12-08T10:06:53Z"
}
