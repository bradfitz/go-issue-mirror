{
	"id": 173688717,
	"number": 16913,
	"state": "closed",
	"title": "text/template: Template redefinition doesn't work when new template content is empty or whitespace-only.",
	"body": "This is potentially related to #16912. I couldn't really find explicit documentation on template redefinition, and any limitations/restrictions on it.\r\n\r\nFrom looking around the CL that implemented it and its commit message, it made it sound like it should be possible to simply redefine any template by defining it again, and then have it take on the new template content.\r\n\r\nIn other words, I expected a template redefined to new content X to behave as if it were a template first created with content X. This turned out not to be the case for some content X (so far, it happens when content is empty or contains whitespace and template comments only).\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\n    ```\r\ngo version devel +2f679d7 Sun Aug 28 21:38:09 2016 +0000 linux/amd64\r\n```\r\n\r\n   (That's the latest `tip` commit 2f679d74e638ac7514a6b6b32f5d28a9980c22c3 from a day ago as of posting this.)\r\n\r\n    I initially ran into this issue on Go 1.7, but I tried it on latest `tip` in order to check if it has since been fixed or not. It's not.\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\n    ```\r\n$ go env\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/ubuntu/GoPath\"\r\nGORACE=\"\"\r\nGOROOT=\"/home/ubuntu/go\"\r\nGOTOOLDIR=\"/home/ubuntu/go/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build390318819=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n\r\n    I redefined a template with an empty template, or a template consisting of whitespace (and template comments).\r\n\r\n    https://play.golang.org/p/c3K-zyJ4dd\r\n\r\n4. What did you expect to see?\r\n\r\n    ```\r\nNames:\r\n- Gamora\r\n- Groot\r\n- Nebula\r\n- Rocket\r\n- Star-Lord\r\nNames:Names:\r\n```\r\n\r\n5. What did you see instead?\r\n\r\n    The template redefinition was effectively ignored. No error, and the old template contents were still used.\r\n\r\n    ```\r\nNames:\r\n- Gamora\r\n- Groot\r\n- Nebula\r\n- Rocket\r\n- Star-Lord\r\nNames:\r\n- Gamora\r\n- Groot\r\n- Nebula\r\n- Rocket\r\n- Star-Lord\r\nNames:\r\n- Gamora\r\n- Groot\r\n- Nebula\r\n- Rocket\r\n- Star-Lord\r\n```\r\n\r\n    If you include any non-whitespace character in the redefined template content, such as `x`, then it works as expected, e.g.:\r\n\r\n    ```\r\nNames:\r\n- Gamora\r\n- Groot\r\n- Nebula\r\n- Rocket\r\n- Star-Lord\r\nNames:xNames:x\r\n```",
	"user": {
		"login": "shurcooL",
		"id": 1924134,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		}
	],
	"comments": 1,
	"closed_at": "2016-10-19T12:57:51Z",
	"created_at": "2016-08-29T03:16:18Z",
	"updated_at": "2016-10-19T12:57:51Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
