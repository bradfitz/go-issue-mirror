{
	"id": 72182189,
	"body": "Apologies, @bradfitz , but I think my issue report suggested a naive fix and I'd like to bring this up now before the API change introduced with https://github.com/golang/go/commit/26d5573949843e5504c79b1d32440918ee5e9181 becomes part of the permanent stdlib API per the point release backwards compatibility guarantee.  You may want to revert that change.\r\n\r\nTwo things stand out to me now that I've looked through the open issues for crypto/tls:\r\n1) Using the TLSConnectionState accessor might allow for TOC/TOU races if crypto/tls ever implements renegotiation (see golang/go#5742 ).  That is, if TLS renegotiation occurs after `smtp client.TLSConnectionState()` but before `smtp client.Auth()`, the application could get a false negative (in terms of cert pinning) if the server switches certs.\r\n\r\n2) If golang/go#9126 gets fixed, that API would provide a more general-purpose solution, including what I was doing with net/smtp and server certificate hash checking.",
	"user": {
		"login": "zeroshirts",
		"id": 1655014,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-01-30T10:32:56Z",
	"updated_at": "2015-02-01T07:14:12Z"
}
