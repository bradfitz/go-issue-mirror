{
	"id": 51276496,
	"number": 451,
	"state": "closed",
	"title": "reflect: method lookup using anonymous field succeeds, but Call crashes",
	"body": "by **Ostsol**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n\npackage main\n\nimport (\n    \u0026quot;fmt\u0026quot;;\n    \u0026quot;reflect\u0026quot;\n)\n\ntype A struct { \n    num int; \n    str string \n\n} \n\ntype B struct { \n    A \n} \n\nfunc (self *A) Set (num int, str string) { \n    self.num = num; \n    self.str = str \n}\n\nfunc CallSet (val interface{}, num int, str string) { \n    vptr := reflect.NewValue (val).(*reflect.PtrValue); \n    mthd := vptr.Method (0); \n\n    params := []reflect.Value{reflect.NewValue (num), reflect.NewValue \n(str)}; \n    mthd.Call (params) \n}\n\nfunc main () {\n    b := new (B);\n    CallSet (b, 4, \u0026quot;hi\u0026quot;);\n    fmt.Printf (\u0026quot;%d %s\\n\u0026quot;, b.num, b.str)\n}\n\nWhat is the expected output? What do you see instead?\n\nThis program should output the same as if one called 'b.Set (4, \u0026quot;hi\u0026quot;)':\n\n4 \u0026quot;hi\u0026quot;\n\nInstead it produces a runtime panic, declaring:\n\ntype mismatch: *main.A != *main.B\n\nWhat is your $GOOS?  $GOARCH?\n\nlinux AMD64\n\nWhich revision are you using?  (hg identify)\n\n84c2d8accf42+ tip\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2014-12-08T10:04:38Z",
	"created_at": "2009-12-22T12:58:28Z",
	"updated_at": "2016-06-24T19:10:50Z"
}
