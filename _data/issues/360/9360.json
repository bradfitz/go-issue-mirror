{
	"id": 52193121,
	"number": 9360,
	"state": "open",
	"title": "net: Dialer seems like it should be an interface",
	"body": "net.Dialer sounds like it's close to making transports pluggable the way e.g. http.Client / http.Transport behave, but reading further one realizes that net.Dialer is hardcoded to basically be net.Dial with timeouts. This makes e.g. crypto/tls DialWithDialer less useful; I can't just easily replace the whole transport layer with something that e.g. doesn't touch the host TCP stack (think unit tests, Tor, stream protocols constructed on top of UDP, and such).\r\n\r\nNote that tls.DialWithDialer doesn't just dialer.Dial, it also accesses the Timeout field. By the time Go2 comes around, maybe /x/net/context will have grown into something that can unify this sort of behavior.\r\n\r\nOf course, the workaround is to dial manually and use tls.Client, but then one is responsible for all the little details that are inside tls.DialWithDialer.\r\n\r\nNaturally, I don't expect Go1 to change existing APIs, though something new might be workable. Sorry for the ramble, just felt like writing down my hopes of reusability being crushed.",
	"user": {
		"login": "tv42",
		"id": 419909,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Go2"
		}
	],
	"comments": 0,
	"created_at": "2014-12-17T02:06:24Z",
	"updated_at": "2015-04-10T18:55:04Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
