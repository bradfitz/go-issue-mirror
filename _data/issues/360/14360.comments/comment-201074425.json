{
	"id": 201074425,
	"body": "I think this may be the source of several hours of confusion I have had trying to work through a tutorial on OpenGL.\r\n\r\nhttp://www.opengl-tutorial.org/beginners-tutorials/tutorial-3-matrices/\r\n\r\nIn the above tutorial the order of multiplication for the MVP matrices is as follows (at the bottom under \"Putting it all together\")\r\n\r\n```cpp\r\nglm::mat4 mvp = Projection * View * Model; // Remember, matrix multiplication is the other way around\r\n```\r\n\r\nUsing golang.org/x/mobile/exp/f32 multiplying in this order does not work, as was stated by @taezaz. But it seems that to match the order of operations in the tutorial I needed to transpose both the P and V matrices before multiplying them\r\n\r\n```go\r\n\tprojection.Perspective(45, float32(float64(sz.WidthPx)/float64(sz.HeightPx)), 0.1, 100.0)\r\n\tview.LookAt(viewEye, viewCenter, viewUp)\r\n\ttranspose4(projection)\r\n\ttranspose4(view)\r\n\tmvp.Mul(projection, view)\r\n\t// ... now serializing the mvp matrix to __column major__ order and multiplying MVP*position in the shader work as I think it is supposed to \r\n\t_mvp = [16]float32{\r\n\t\tmvp[0][0],\r\n\t\tmvp[1][0],\r\n\t\tmvp[2][0],\r\n\t\tmvp[3][0],\r\n\t\tmvp[0][1],\r\n\t\tmvp[1][1],\r\n\t\tmvp[2][1],\r\n\t\tmvp[3][1],\r\n\t\tmvp[0][2],\r\n\t\tmvp[1][2],\r\n\t\tmvp[2][2],\r\n\t\tmvp[3][2],\r\n\t\tmvp[0][3],\r\n\t\tmvp[1][3],\r\n\t\tmvp[2][3],\r\n\t\tmvp[3][3],\r\n\t}\r\n```\r\n\r\nTo me this seems to suggest that both the P and V matrices are using ~~row major~~ (edit: column major) order? But I could be very wrong. I'm very new to OpenGL. It's also been a while since I did much linear algebra. And like I said. I'm pretty confused right now.",
	"user": {
		"login": "bmatsuo",
		"id": 15089,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-24T23:39:30Z",
	"updated_at": "2016-03-25T21:58:41Z"
}
