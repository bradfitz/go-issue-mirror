{
	"id": 66067472,
	"body": "\u003ca id=\"c8\"\u003e\u003c/a\u003eComment 8:\n\n\u003cpre\u003eI did some experiments with the following inplace merge\nsort algorithms:\n - gcc-4.6.3's __inplace_stable_sort [1]\n - SymMerge from Kim and Kutzner [2]\n - SplitMerge, also from Kim and Kutzner [3]\n\nAll three algorithms seem to work (they sort and\nare stable) but the Sym- and Split-merge algorithms\nseem to be significantly faster than gcc's variant.\n\nFunny enough, they are also faster than quicksort/\nheapsort combination from package sort.  (Actually this\ngives me no real confidence in my three implementations).\n\nBenchmarkSortInt1K                   5000       614815 ns/op\nBenchmarkSymMergeSortInt1K          10000       188012 ns/op\nBenchmarkSplitMergeSortInt1K        10000       204298 ns/op\nBenchmarkInplaceStableSortInt1K      5000       652065 ns/op\n\nBenchmarkSortInt64K                    50     56432255 ns/op\nBenchmarkSymMergeSortInt64K           100     15533944 ns/op\nBenchmarkSplitMergeSortInt64K         100     15890060 ns/op\nBenchmarkInplaceStableSortInt64K       50     53262765 ns/op\n\nBenchmarkSortInt4096K                   1   4948032225 ns/op\nBenchmarkSymMergeSortInt4096K           1   1211093742 ns/op\nBenchmarkSplitMergeSortInt4096K         1   1248584376 ns/op\nBenchmarkInplaceStableSortInt4096K      1   3893523171 ns/op\n\nBenchmarkSymMergeSorted4096k            5    354807619 ns/op\nBenchmarkSplitMergeSorted4096k          5    399972589 ns/op\nBenchmarkInplaceStableSorted4096k       1   1005064702 ns/op\n\nBenchmarkSymMergeReversed4096k          1   2171833903 ns/op\nBenchmarkSplitMergeReversed4096k        1   2203106583 ns/op\nBenchmarkInplaceSortReversed4096k       1   6184138377 ns/op\n\n\nI could drop the current state into a CL which might\nencourage others to play with the algorithms.\n\nThe whole code for SymMerge is just 110 lines with 50 lines \na fancy version of rotate.  \n\nAny comments?\n\n\n[1] \u003ca href=\"http://gcc.gnu.org/onlinedocs/gcc-4.6.3/libstdc++/api/a01045_source.html#l03454\"\u003ehttp://gcc.gnu.org/onlinedocs/gcc-4.6.3/libstdc++/api/a01045_source.html#l03454\u003c/a\u003e\n[2] Pok-Son Kim, Arne Kutzner: Stable Minimum Storage Merging by Symmetric Comparisons\n[3] Pok-Son Kim, Arne Kutzner: A Simple Algorithm for Stable Minimum Storage Merging\u003c/pre\u003e",
	"user": {
		"login": "vdobler",
		"id": 701382,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-05-16T22:16:35Z",
	"updated_at": "2014-12-08T10:19:22Z"
}
