{
	"id": 76949539,
	"body": "I believe this is also true for 1.4 so it isn't a problem we are\nintroducing in 1.5.  When to trigger a GC is part of the problem and Austin\nis working on that. The work includes dampening functions to control\noscillations but it is not intended to deal with constrained memory GC.\n\nThat said I do believe that constrained memory GC is an important part of\nthe design space and when Go starts to move in that direction I am sure we\nwill tackle the problem.\n\nOn Tue, Mar 3, 2015 at 2:29 AM, Dmitry Vyukov \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e Currently GC allows heap to grow to 2x of live memory during the previous\n\u003e GC. This can play badly with spiky memory usage. Consider that in steady\n\u003e state program has live set X. GC will allow heap to grow to 2X and then\n\u003e collect it back to X, and so on. Now consider that there is a 1.5X spike in\n\u003e memory usage. If GC happens *after* the spike (when live set is again X),\n\u003e then GC will collect X memory (garbage generated during the spike) and set\n\u003e heap limit to 2X as before. Now if GC happens to happen *during* the\n\u003e spike (when live set is 1.5X), then GC will collect only 0.5X and set heap\n\u003e limit to 3X.\n\u003e\n\u003e Basically bad timing can increase maximum heap (RSS) by up to 2x.\n\u003e\n\u003e Memory-constrained environments, like browsers, pay a great deal of\n\u003e attention to this problem. The idea is to set smarter GC threshold when\n\u003e heap grows/shrinks.\n\u003e\n\u003e I did not work out a solution. But what I have in mind is: if heap grows,\n\u003e and especially if the next threshold (next_gc) will be larger than the\n\u003e current RSS (heap_sys - heap_released), then set next_gc to, say,\n\u003e heap_inuse * (1 + GOGC/100) * 0.75.\n\u003e Since heap cannot grow all the time, this throttling is only temporal.\n\u003e\n\u003e @rsc \u003chttps://github.com/rsc\u003e @RLH \u003chttps://github.com/RLH\u003e @aclements\n\u003e \u003chttps://github.com/aclements\u003e @randall77 \u003chttps://github.com/randall77\u003e\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/10064\u003e.\n\u003e\n",
	"user": {
		"login": "RLH",
		"id": 972447,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-03T13:59:33Z",
	"updated_at": "2015-03-03T13:59:33Z"
}
