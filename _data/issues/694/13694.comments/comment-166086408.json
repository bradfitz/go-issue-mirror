{
	"id": 166086408,
	"body": "This example:\r\n```\r\npackage main\r\n\r\nimport (\r\n    \"net/smtp\"\r\n    \"fmt\"\r\n    \"strconv\"\r\n    \"net\"\r\n    \"crypto/tls\"\r\n    \"encoding/base64\"\r\n)\r\n\r\nfunc main() {\r\n  smtpHost   := \"mail.{domain}.com\"\r\n  smtpPort   := 587\r\n  smtpLogin  := \"{user}@{domain}.com\"\r\n  smtpPasswd := \"{password}\"\r\n\r\n  useTls     := false\r\n  useStartTls:= true\r\n\r\n  from := \"{from@...}\"\r\n  to   := \"{to@...}\"\r\n  title := \"Just the sample message\"\r\n\r\n  body := \"Sample message that is\";\r\n\r\n  header := make(map[string]string)\r\n  header[\"From\"] = from\r\n  header[\"To\"] = to\r\n  header[\"Subject\"] = title\r\n  header[\"MIME-Version\"] = \"1.0\"\r\n  header[\"Content-Type\"] = \"text/plain; charset=\\\"utf-8\\\"\"\r\n  header[\"Content-Transfer-Encoding\"] = \"base64\"\r\n\r\n  message := \"\"\r\n  for k, v := range header {\r\n      message += fmt.Sprintf(\"%s: %s\\r\\n\", k, v)\r\n  }\r\n  message += \"\\r\\n\" + base64.StdEncoding.EncodeToString([]byte(body))\r\n\r\n  conn, err := net.Dial(\"tcp\", smtpHost+\":\"+strconv.Itoa(smtpPort))\r\n  if err != nil {\r\n    fmt.Println(err)\r\n    return\r\n  }\r\n\r\n  // TLS\r\n  tlsconfig := \u0026tls.Config{\r\n    InsecureSkipVerify: true,\r\n    ServerName: smtpHost,\r\n  }\r\n\r\n  if useTls {\r\n    conn = tls.Client(conn, tlsconfig)\r\n  }\r\n\r\n  client, err := smtp.NewClient(conn, smtpHost)\r\n  if err != nil {\r\n    fmt.Println(err)\r\n    return\r\n  }\r\n\r\n  hasStartTLS, _ := client.Extension(\"STARTTLS\")\r\n  if useStartTls \u0026\u0026 hasStartTLS {\r\n    fmt.Println(\"STARTTLS ...\")\r\n    if err = client.StartTLS(tlsconfig); err != nil {\r\n      fmt.Println(err)\r\n      return\r\n    }\r\n  }\r\n\r\n  if err = client.Hello(smtpHost); err != nil {\r\n    fmt.Println(err)\r\n    return\r\n  }\r\n  fmt.Println(\"HELO done\")\r\n\r\n  // Set up authentication information.\r\n  auth := smtp.PlainAuth(\r\n    \"\",\r\n    smtpLogin,\r\n    smtpPasswd,\r\n    smtpHost,\r\n  )\r\n\r\n  if ok, _ := client.Extension(\"AUTH\"); ok {\r\n    if err := client.Auth(auth); err != nil {\r\n      fmt.Printf(\"Error during AUTH %s\\n\", err)\r\n      return\r\n    }\r\n  }\r\n  fmt.Println(\"AUTH done\")\r\n\r\n  if err := client.Mail(from); err != nil {\r\n    fmt.Printf(\"Error: %s\\n\", err)\r\n    return\r\n  }\r\n  fmt.Println(\"FROM done\")\r\n\r\n  if err := client.Rcpt(to); err != nil {\r\n      fmt.Printf(\"Error: %s\\n\", err)\r\n      return\r\n  }\r\n  fmt.Println(\"TO done\")\r\n\r\n  w, err := client.Data()\r\n  if err != nil {\r\n     fmt.Printf(\"Error: %s\\n\", err)\r\n     return\r\n  }\r\n\r\n  _, err = w.Write([]byte(message))\r\n  if err != nil {\r\n    fmt.Printf(\"Error: %s\\n\", err)\r\n    return\r\n  }\r\n\r\n  err = w.Close()\r\n  if err != nil {\r\n    fmt.Printf(\"Error: %s\\n\", err)\r\n    return\r\n  }\r\n\r\n  client.Quit()\r\n}\r\n```\r\nFails with STARTTLS on the SMTP account that works fine in thunderbird:\r\n```\r\n$ ./send-mail \r\nSTARTTLS ...\r\nremote error: handshake failure\r\n```\r\nSame program works fine on the account expecting simple TLS.\r\n",
	"user": {
		"login": "yurivict",
		"id": 271906,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-20T08:48:19Z",
	"updated_at": "2015-12-20T08:48:19Z"
}
