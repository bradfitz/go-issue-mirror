{
	"id": 125622957,
	"body": "16 hours and 51000+ GCs and we saw only two large pauses which is well\nwithin 4 nines, so not bad, not critical, but worth noting.\n\nOne theory Austin and I have discussed is that the scheduler, dispose, and\nwrite barriers can conspire to hide the a pointer from the GC.\nIf dispose has a partially full work buffer and places it on the partial\nlist but before the GC can grab and process it the scheduler runs a\nmutator that grabs the same partially full work  buffer. This repeats until\nwe reach the mark termination phase where the GC finally\nfinds the pointer along with a lot of work to do.\n\nOne solution is to have dispose put the work buffer on the full list where\nthe write barrier will not ask for it until the GC empties it.\n\n\nSnip and clip.\n------- After 6 or so hours -------\n\ngc 29868 @34053.633s 11%: 0.21+0.25+0.039+3.6+526 ms clock,\n2.6+0.25+0+3.6/0.001/0.081+6323 ms cpu, 148-\u003e148-\u003e76 MB, 152 MB goal, 12 P\n\n SLOW --- 530.875781ms---\ngc 29869 @34054.805s 11%: 0.21+0.30+0.005+511+1.0 ms clock,\n2.5+0.30+0+1.2/1532/2.0+12 ms cpu, 148-\u003e150-\u003e78 MB, 152 MB goal, 12 P\n\n------- and a few hours later -------\n\ngc 37355 @42584.723s 11%: 0.21+0.22+0.046+12+854 ms clock,\n2.6+0.22+0+1.9/1744/10+10253 ms cpu, 148-\u003e148-\u003e76 MB, 152 MB goal, 12 P\n\n SLOW --- 867.288968ms---\ngc 37356 @42586.226s 11%: 0.24+0.31+0.001+512+0.77 ms clock,\n2.9+0.31+0+1.3/1535/2.0+9.2 ms cpu, 148-\u003e150-\u003e78 MB, 152 MB goal, 12 P\n\n\nOn Tue, Jul 28, 2015 at 4:18 AM, Sokolov Yura \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e WOW!!!! IT IS REALLY GREAT!!!! maximum observed STW pause is 30ms now.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/11694#issuecomment-125495052\u003e.\n\u003e\n",
	"user": {
		"login": "RLH",
		"id": 972447,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-28T14:12:50Z",
	"updated_at": "2015-07-28T14:12:50Z"
}
