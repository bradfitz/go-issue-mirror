{
	"id": 117688203,
	"number": 13312,
	"state": "closed",
	"title": "syscall: namespace tests fail on Linux with RHEL7.2 ppc64le",
	"body": "When building gccgo or gc on RHEL7 2 and running the testsuite, the testcase exec_linux_test.go fails for both gccgo and gc.  This happens with gccgo built from trunk and with golang from master with this output from go version:\r\n\r\ngo version devel +6bf794a Wed Nov 18 19:00:45 2015 +0000 linux/ppc64le\r\n\r\nWith golang, there are 3 error messages:\r\n\r\n go test .\r\n--- FAIL: TestCloneNEWUSERAndRemapNoRootDisableSetgroups (0.00s)\r\n\texec_linux_test.go:57: Cmd failed with err fork/exec /usr/bin/whoami: invalid argument, output: \r\n--- FAIL: TestCloneNEWUSERAndRemapNoRootSetgroupsEnableSetgroups (0.00s)\r\n\texec_linux_test.go:97: Unprivileged gid_map rewriting with GidMappingsEnableSetgroups must fail\r\n--- FAIL: TestEmptyCredGroupsDisableSetgroups (0.00s)\r\n\texec_linux_test.go:105: fork/exec /usr/bin/whoami: invalid argument\r\nFAIL\r\nFAIL\tsyscall\t0.014s\r\n\r\nAnd with gccgo there are 2:\r\nmake syscall/check\r\n--- FAIL: TestCloneNEWUSERAndRemapNoRootDisableSetgroups (0.00s)\r\n\ttesting.go:284: Cmd failed with err fork/exec /usr/bin/whoami: invalid argument, output: \r\n--- FAIL: TestCloneNEWUSERAndRemapNoRootSetgroupsEnableSetgroups (0.00s)\r\n\ttesting.go:284: Unprivileged gid_map rewriting with GidMappingsEnableSetgroups must fail\r\nFAIL\r\n\r\nI know there was another issue for this test related to whoami but the error message was not the same.  \r\n\r\nI don't see these failures when I build gccgo or golang on other platforms (Ubuntu 14.04, 14.10, SLES12SP1) with the same level of source for the compilers.\r\n\r\nuname -r output:\r\n\r\n3.10.0-313.el7.ppc64le",
	"user": {
		"login": "laboger",
		"id": 9433228,
		"type": "User",
		"site_admin": false
	},
	"comments": 17,
	"closed_at": "2015-11-24T17:20:45Z",
	"created_at": "2015-11-18T21:41:20Z",
	"updated_at": "2015-11-24T17:21:29Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
