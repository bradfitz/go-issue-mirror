{
	"id": 247685599,
	"body": "Instead of caching the map value per key, what if the frontend turned map operations into separate SSA operations for hashing the key vs. using the hash to do the various map operations?\r\n\r\nThen there would be SSA operations for map lookup and map assignment which take the hash in addition to the key.\r\n\r\nThe downside is that the subsequent map operations would still need to do `==` on all entry values hashed to the same bucket, but at least the hash operation itself would only be done once.\r\n\r\nThe alternative (having map operations return a pointer into the map value) is a little more invasive in that it has to be aware of maps being resized during sets. You might need a separate SSA value for each potential layout of the hash, with all map mutation operations returning a new SSA value for the potentially-new map layout (e.g. after growth).\r\n\r\n@randall77, do you have plans in general of moving some of the frontend's runtime call lowering later into SSA, so more of the SSA goodness can eliminate things?",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-16T19:23:54Z",
	"updated_at": "2016-09-16T19:23:54Z"
}
