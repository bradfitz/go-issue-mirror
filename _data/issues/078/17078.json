{
	"id": 176451798,
	"number": 17078,
	"state": "closed",
	"title": "cmd/go: test -i and -o options together don't work as expected",
	"body": "### What version of Go are you using (`go version`)?\r\n\r\n`go version go1.7 darwin/amd64`\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/aaronl/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"\r\nCC=\"clang\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -gno-record-gcc-switches -fno-common\"\r\nCXX=\"clang++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n### What did you do?\r\n\r\nI tried to run `go test` with both the `-i` and `-o` flags. The help output implies this combination is supported:\r\n\r\n```\r\n           -i\r\n               Install packages that are dependencies of the test.\r\n               Do not run the test.\r\n\r\n           -o file\r\n               Compile the test binary to the named file.\r\n               The test still runs (unless -c or -i is specified).\r\n```\r\n\r\n```\r\n$ go test\r\nPASS\r\nok     \tfmt    \t0.070s\r\n$ go test -i -o testbinary\r\n$ ./testbinary\r\n-bash: ./testbinary: No such file or directory\r\n```\r\n\r\n### What did you expect to see?\r\n\r\nI expected `go test -i -o testbinary` to create a `testbinary` executable, and also install the package's dependencies.\r\n\r\n### What did you see instead?\r\n\r\nNo executable created.",
	"user": {
		"login": "aaronlehmann",
		"id": 10601430,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "NeedsFix"
		}
	],
	"comments": 4,
	"closed_at": "2016-10-19T02:32:36Z",
	"created_at": "2016-09-12T18:41:19Z",
	"updated_at": "2016-10-19T02:32:37Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
