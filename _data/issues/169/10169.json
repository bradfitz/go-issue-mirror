{
	"id": 61874087,
	"number": 10169,
	"state": "closed",
	"title": "flag: should not output errors directly to stderr",
	"body": "When using a flagset, errors are printed to stderr in addition to being returned by flag.Parse(). It is redundant, since the caller can print the error if desired. It also creates a small issue in a situation where multiple flagsets are used to parse a single command line.\r\n\r\nI have a command line interface that provides a wrapper to multiple modules. The command line has its own flagset [1], and forward the flags it cannot parse to one of many packages where specific flagsets are defined [2, 3]. The issue is that the first call to Parse() detects the flags it doesn't know and prints an error to stderr directly. I would like to avoid printing this error. I ended up setting the output to os.DevNull around the call to Parse() to prevent displaying it to the user, but it feels like a hack [4].\r\n\r\nThe culpric is here: https://github.com/golang/go/blob/master/src/flag/flag.go#L793\r\nI suggest removing that line and only returning the error to the caller through the Error value.\r\n\r\nI'm not aware of a different way to split a flagset across packages, but if there's one, I'm very interested :)\r\n\r\n[1] https://github.com/mozilla/mig/blob/master/src/mig/client/cmd/main.go#L71-L77\r\n[2] https://github.com/mozilla/mig/blob/master/src/mig/modules/file/paramscreator.go#L285-L305\r\n[3] https://github.com/mozilla/mig/blob/master/src/mig/modules/netstat/paramscreator.go#L171-L178\r\n[4] https://github.com/mozilla/mig/blob/master/src/mig/client/cmd/main.go#L124",
	"user": {
		"login": "jvehent",
		"id": 415617,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2015-03-15T22:07:11Z",
	"created_at": "2015-03-15T17:44:59Z",
	"updated_at": "2016-06-25T02:03:19Z"
}
