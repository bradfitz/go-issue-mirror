{
	"id": 66095762,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003ekardianos: thanks for the bug report.\n\ngri: the failing assertion's condition is false if the type is Invalid, which can be\ncaused by undefined symbol errors.  A minimal testcase is shown below.\n\n% head src/[abc]/*.go\n==\u0026gt; src/a/A.go \u0026lt;==\npackage a\n\n==\u0026gt; src/b/B.go \u0026lt;==\npackage b\n\nimport \"a\"\n\nconst Z = a.X | a.Y\n\n\n==\u0026gt; src/c/main.go \u0026lt;==\npackage main\n\nimport \"b\"\n\nfunc main() {\n        println(b.Z)\n}\n\n\n% GOPATH=. ./ssadump c\nsrc/b/B.go:5:11: X not declared by package a\nsrc/b/B.go:5:17: Y not declared by package a\npanic: assertion failed [recovered]\n        panic: assertion failed\n\ngoroutine 16 [running]:\nruntime.panic(0x657a40, 0xc208000df0)\n        /home/adonovan/go/src/pkg/runtime/panic.c:279 +0xf5\ncode.google.com/p/go.tools/go/types.(*checker).handleBailout(0xc208024000, 0xc2080b3790)\n        /home/adonovan/got9/src/code.google.com/p/go.tools/go/types/check.go:202 +0xcd\nruntime.panic(0x657a40, 0xc208000df0)\n        /home/adonovan/go/src/pkg/runtime/panic.c:248 +0x18d\ncode.google.com/p/go.tools/go/types.assert(0x7f28a9e1f400)\n        /home/adonovan/got9/src/code.google.com/p/go.tools/go/types/errors.go:18 +0x68\ncode.google.com/p/go.tools/go/types.(*checker).recordTypeAndValue(0xc208024000,\n0x7f28a9e23c38, 0xc20800e760, 0x7f28a9e1f410, 0x8cd920, 0x7f28a9e1f3d8, 0x0)\n        /home/adonovan/got9/src/code.google.com/p/go.tools/go/types/check.go:252 +0x70\ncode.google.com/p/go.tools/go/types.(*checker).rawExpr(0xc208024000, 0xc208049280,\n0x7f28a9e23c38, 0xc20800e760, 0x0, 0x0, 0x0)\n...\u003c/pre\u003e\n\n\n_Owner changed to @griesemer._",
	"user": {
		"login": "adonovan",
		"id": 5658175,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-06-09T18:01:05Z",
	"updated_at": "2014-12-22T06:35:25Z"
}
