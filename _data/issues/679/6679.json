{
	"id": 51285549,
	"number": 6679,
	"state": "closed",
	"title": "path/filepath: Walk behavior change from Go 1.1",
	"body": "\u003cpre\u003efilepath.Walk's WalkFunc (\u003ca href=\"http://golang.org/pkg/path/filepath/#WalkFunc)\"\u003ehttp://golang.org/pkg/path/filepath/#WalkFunc)\u003c/a\u003e is documented\nas:\n\n\u0026quot;If there was a problem walking to the file or directory named by path, the\nincoming error will describe the problem and the function can decide how to handle that\nerror (and Walk will not descend into that directory). \u0026quot;\n\nThat is, it returns the stat error for that name.\n\nBut Walk is implemented using (*os.File).Readdir\n(\u003ca href=\"http://golang.org/pkg/os/#File.Readdir)\"\u003ehttp://golang.org/pkg/os/#File.Readdir)\u003c/a\u003e, which was changed in\n\n\u003ca href=\"https://code.google.com/p/go/source/detail?r=100a10512ea4#\"\u003ehttps://code.google.com/p/go/source/detail?r=100a10512ea4#\u003c/a\u003e\n\n... to match its documentation.\n\nThat changed the behavior of filepath.Walk to now bail on any errors, rather than call\nthe WalkFunc callback with a (problemFilename, nil, errFromStat).\n\nA fix was proposed at \u003ca href=\"https://golang.org/cl/16100043/\"\u003ehttps://golang.org/cl/16100043/\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:37:02Z",
	"created_at": "2013-10-28T16:58:16Z",
	"updated_at": "2016-06-25T01:21:33Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
