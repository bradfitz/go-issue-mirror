{
	"id": 51285769,
	"number": 6813,
	"state": "open",
	"title": "x/tools/cmd/godoc: allow index merging",
	"body": "\u003cpre\u003eWe should support incremental indexing of large corpuses.  We can already save a corpus\nto an io.Writer and load a corpus from an io.Reader, but once we have a large, saved\nCorpus, there is no way to update just part of it.\n\nI think we should add a method on Index, like:\n\nfunc (x *Index) Add(o *Index) *Index\n\nThat returns the merge of x + o (with any redundant text in the bytes.Buffer/Fileset\nremoved and compacted)\n\nThen incremental indexing just involves loading the last huge index from disk, building\nsmall indexes of subtrees, merging them in, writing to disk, etc.\n\nPerhaps the Index.Add method only adds and is quick, but we could also have a Compact\nmethod to return a compacted index (a slower operation), so the common case is a bunch\nof adds, followed by a less-frequent compact + write to disk.\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"created_at": "2013-11-21T22:10:04Z",
	"updated_at": "2015-04-14T19:39:44Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
