{
	"id": 246165478,
	"body": "I don't think a mechanism would be foolproof and as such the rebuild\nmechanism only makes sense as external, like gorebuild. I believe most\nbinaries include source paths, including go and gcc. You can usually see a\nlot of paths with 'strings'.\n\nIncluding the path just makes it reliable to parse this, rather than\nrelying on file paths.\n\nI don't believe go tools should manage binaries but in this case enabling\nthe external tools requires a minor change.\n\nI'm now convinced that for the used packages it's better to have external\ntools and manifests, like gvt, handle that.\n\nI still want the path needed for go get, and unless there are strong\nobjections, also vcs hash for the root project.\nOn su 11. syyskuuta 2016 at 9.46 Minux Ma \u003cnotifications@github.com\u003e wrote:\n\n\u003e does gcc embed the file path into the binary (except for the debugging\n\u003e info)?\n\u003e Why should go tool does that?\n\u003e\n\u003e To put it another way, if I compile random C programs and put them into my\n\u003e $PATH, and then forget where do they come from, I won't ask gcc to embed\n\u003e such paths into the binary to make my live easier.\n\u003e\n\u003e Managing binary assets is a much larger problem and I don't think the go\n\u003e tool should solve it. For example, I'd argue that having paths and revision\n\u003e is not enough, because some of the packages might have custom patches\n\u003e applied. How could you represent that?\n\u003e\n\u003e â€”\n\u003e You are receiving this because you authored the thread.\n\u003e Reply to this email directly, view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/16814#issuecomment-246165193\u003e, or mute\n\u003e the thread\n\u003e \u003chttps://github.com/notifications/unsubscribe-auth/AASn0MlUwLsWZ6EZ8k10sMs0KREfT0w2ks5qo6PFgaJpZM4JpPvt\u003e\n\u003e .\n\u003e\n",
	"user": {
		"login": "joneskoo",
		"id": 305104,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-11T06:55:40Z",
	"updated_at": "2016-09-11T06:55:40Z"
}
