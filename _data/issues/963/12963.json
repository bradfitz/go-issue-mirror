{
	"id": 111895358,
	"number": 12963,
	"state": "closed",
	"title": "encoding/xml: allow Marshal to use CDATA",
	"body": "My team is interested in generating VAST 3 (video ad standard template) XML using the xml package. Unfortunately the VAST 3 spec specifies:\r\n\r\n\" All URIs or any other free text fields containing potentially dangerous characters contained in the VAST document should be wrapped in CDATA blocks.\" http://www.iab.net/media/file/VASTv3.0.pdf p. 23\r\n\r\nCurrently fields labeled with the xml \",chardata\" tag are only output as URL encoded XML. We have a workaround using the Marshaler interface, but it's verbose and bug prone. i.e:\r\n\r\n```\r\n// CharData is a string that should be cdata-wrapped according to the VAST 3 spec.\r\ntype CharData string\r\n\r\n// MarshalXML implements the xml.Marshaler interface for generating XML.\r\nfunc (cd CharData) MarshalXML(e *xml.Encoder, start xml.StartElement) error {\r\n\treturn e.EncodeElement(struct {\r\n\t\tS string `xml:\",innerxml\"`\r\n\t}{\r\n\t\tS: \"\u003c![CDATA[\" + string(cd) + \"]]\u003e\",\r\n\t}, start)\r\n}\r\n```\r\n\r\nThere should be a first-class way to output CDATA escaped data in the xml package, perhaps with the addition of a \",cdata\" tag.",
	"user": {
		"login": "ghost",
		"id": 10137,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2015-11-25T17:05:02Z",
	"created_at": "2015-10-16T19:24:46Z",
	"updated_at": "2016-06-27T17:54:10Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
