{
	"id": 51285994,
	"number": 6963,
	"state": "closed",
	"title": "cmd/ld: do we still need runtime-gdb.py?",
	"body": "\u003cpre\u003e(Filed under cmd/ld because that's where the reference is.)\n\nAs of version 7.5, gdb includes native go support.\nHowever that support is still nascent. From the source of gdb 7.6.2:\n\n/* TODO:\n   - split stacks\n   - printing of native types\n   - goroutines\n   - lots more\n   - gccgo mangling needs redoing\n     It's too hard, for example, to know whether one is looking at a mangled\n     Go symbol or not, and their are ambiguities, e.g., the demangler may\n     get passed *any* symbol, including symbols from other languages\n     and including symbols that are already demangled.\n     One thought is to at least add an _G prefix.\n   - 6g mangling isn't supported yet\n*/\n\nruntime-gdb.py already provides some of this stuff. I'm not sure if this gdb gets in the\nway.\n\nWe really need to take a look at gdb support before Go 1.3. Does it still work? What's\nthe recommended usage? And do we need to update the docs?\u003c/pre\u003e",
	"user": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 15,
	"closed_at": "2014-12-08T10:38:46Z",
	"created_at": "2013-12-16T01:23:31Z",
	"updated_at": "2016-06-25T01:23:58Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
