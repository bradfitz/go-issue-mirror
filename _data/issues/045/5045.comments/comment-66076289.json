{
	"id": 66076289,
	"body": "\u003ca id=\"c9\"\u003e\u003c/a\u003eComment 9:\n\n\u003cpre\u003eThe minimal semantics must be along the lines of:\n\n\"If an atomic operation A observes a side effect of an atomic operation B, then A\nhappens before B\".\n\nThat's basically it.\nNote that not only Load can observe the side effect. Return value from Add and\nCompareAndSwap also allows in infer which side effect we observe. Read-modify-write\noperations (Add, CAS) first observe side effect of a previous operation on the same var,\nand then produce a new side effect. I imply that there is a total order Mv over all\natomic operations that mutate atomic variable V.\n\nSuch definition supports use cases like producer-consumer, object publication, etc.\nHowever, such definition does not support trickier synchronization patterns. And frankly\nI would not want to rewrite any existing synchronization primitives due to this. In\nruntime we a dozen of such \"unsupported\" cases, I understand that that's different\natomics, but I just want to show that such use cases exist.\n\nSemantics that cover all synchronization patterns would be along the lines of:\n\n\"There is a total order S over all atomic operations (that is consistent with\nmodification orders M of individual atomic variables, happen-before relations,\nbla-bla-bla). An atomic operation A happens after all atomic operations that precede A\nin S\".\n\nThe trick here is that you usually can not infer S (w/o any pre-existing happens-before\nrelations). The only (?) cases where you can infer a useful information from S are:\n1. When atomic operations A and B operate on the same var, and this makes this\ndefinition a superset of the first definition (S is consistent with all Mv).\n2. When it's enough to know that either A happens-before B or vise versa (this is true\nfor any pair of atomic operations due to total order S).\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-08T20:11:01Z",
	"updated_at": "2014-12-08T10:26:58Z"
}
