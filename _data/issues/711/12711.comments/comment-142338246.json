{
	"id": 142338246,
	"body": "For the historical perspective: The leading-0 notation was not \"simply copied from ancestor languages\" - this was quite a deliberate decision, with several weeks of on-and-off thinking about it. There was also discussion about a more general notation to support other number bases (2 comes to mind), or arbitrary bases. Eventually we decided to stick with the historic notation, despite its problems for several reasons:\r\n\r\n- C programmers are familiar with it, there are no surprises\r\n- there was a feeling that ignoring the leading 0 might lead to hard-to-track down errors when existing C code using the 0-notation (file access) would be ported to Go\r\n- at the time, none of us (Ken, Rob, I) had a better suggestion or felt a strong need for changing it\r\n\r\nIn retrospect, being afraid of introducing subtle errors was perhaps overly cautious, but we don't really know.\r\n\r\nThat said, I don't like you suggestion, and fwiw, both the 'o' for octal and 'b' for binary notation were also discussed in the design of Go. It's simply not enough bang for the buck.\r\n\r\nIf, and that is a big IF, there were such a change, I think it should enable arbitrary number bases with a uniform syntax (I see Rob made just the same point). I have proposed the following notation during the design phase of Go (albeit after we made the decision to stick with the 0x and leading-0 notation):\r\n\r\nint_lit = [ radix 'x' ] digit { digit } .\r\nradix = decimal_digit [ decimal_digit ] .\r\ndigit = decimal_digit | 'a' | 'A' | 'b' | 'B' | ... 'z' | 'Z' .\r\ndecimal_digit = '0' | '1' | ... '9' .\r\n\r\nWith the following semantics: A leading radix indicates the number base, any value from 2 to 36 is valid. The subsequent digits must be in the range from 0 to radix-1. For instance, 2x101 means (decimal) 5, 8x660 corresponds to our current 0660, 12x106 means (decimal) 150, etc. Additionally, we permit the radix 0 and state that radix 0 is equivalent to radix 16. This permits the common and widely recognized hexadecimal notation 0x1234 as we know it. (This is exactly what Rob suggested above, but with r replaced by x which enables backward-compatibility with our existing hex notation).\r\n\r\nThe cost of introducing this is probably small if we keep that leading-0 notation as well (it's fully backward-compatible, and it's done in one or 2 places in a compiler's frontend, and its trivial). But the benefit might be even smaller.\r\n",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-22T16:18:25Z",
	"updated_at": "2015-09-22T16:21:14Z"
}
