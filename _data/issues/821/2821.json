{
	"id": 51279748,
	"number": 2821,
	"state": "closed",
	"title": "cmd/6g: code generation bug",
	"body": "by **soniakeys**:\n\n\u003cpre\u003e(Sorry the summary isn't specific.  I don't understand the problem any better.) \nFollowing program fails:\n\npackage main\n\nimport \u0026quot;fmt\u0026quot;\n\ntype matrix struct {\n    ele    []int\n}\n\nfunc (a *matrix) equal() bool {\n    for _ = range a.ele {\n    }\n    return true\n}\n\nfunc main() {\n    i := \u0026amp;matrix{}\n    fmt.Println(true \u0026amp;\u0026amp; i.equal())\n}\n\nUsing 6g, linux_amd64.  Output is true prior to last weekly.  With weekly.2012-01-27 or\ntip (11594) output is,\n\nunexpected fault address 0x2aab9eba9e40\nthrow: fault\n[signal 0xb code=0x1 addr=0x2aab9eba9e40 pc=0x4063f5]\n\ngoroutine 1 [running]:\nmain.main()\n        /pool/byron0/t.go:17 +0x84\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:14:55Z",
	"created_at": "2012-01-31T21:05:47Z",
	"updated_at": "2016-06-24T21:24:56Z"
}
