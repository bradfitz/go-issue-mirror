{
	"id": 241323628,
	"body": "#11499 (@agl) claims some elliptic curves (P-224 and the important P-256) do have constant-time implementations in Go (and that, in the context of TLS, others don't really pose a security risk for current certificate practice).\r\n\r\nThat contradicts my current best guess, as I see math/big used at least occasionally, even in P-256 (https://github.com/golang/go/blob/master/src/crypto/elliptic/p256.go). Math/big normalizes numbers and hence occasionally even truncates away the leading (most significant) word(s) if they are zero, which certainly cannot be constant-time. So far, I would have missed it though, if all of these usages happen to be safe for P-224 and P-256.\r\n\r\nDocumentation sounds like a very good idea---wouldn't it be good to somehow warn users that at least all elliptic curves other than P-224 and P-256 (and similarly at least generic RSA?) isn't constant-time in Go? Even users who don't stumble across #11499 (or this issue) by pure chance, maybe? Not every project limits itself to using crypto only for TLS; see https://github.com/docker/notary/issues/94 for nearly having tricked one into making itself unsafer by expanding to other curves.\r\n\r\nOf course, a plan to make all this constant-time would be even better from my point of view!",
	"user": {
		"login": "pyramids",
		"id": 4458721,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-22T06:20:25Z",
	"updated_at": "2016-08-22T06:20:25Z"
}
