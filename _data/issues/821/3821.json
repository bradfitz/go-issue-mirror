{
	"id": 51281207,
	"number": 3821,
	"state": "closed",
	"title": "cmd/cgo: enum constants with value of 0 are garbled if they are the only ones used",
	"body": "by **mpvanlohuizen**:\n\n\u003cpre\u003ecmd/cgo: Consider the code below.  It will print 72057628379708111 instead of the\nexpected 0.  Uncomment the last line and everything works as expected.\nI observed the bug only with enum values of 0.  As soon as another constant with a\nnon-zero value out of the same enum is used, all is good. Using multiple constants with\na value of 0 of the same enum does not fix the problem.  In this case, different values\nmay be printed in each case.\n\npackage main\n/*\nenum Const { ZERO, ONE, };\n*/\nimport \u0026quot;C\u0026quot;\nimport \u0026quot;fmt\u0026quot;\n\nfunc main() {\n\tfmt.Println(int64(C.ZERO))\n\t// fmt.Println(int64(C.ONE))\n}\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nMac OS X Lion 10.7.4\n\nWhich version are you using?  (run 'go version')\ngo version weekly.2012-03-27 +2874979af37a\n\nPlease provide any additional information below.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:20:13Z",
	"created_at": "2012-07-13T09:26:34Z",
	"updated_at": "2016-06-24T22:21:30Z"
}
