{
	"id": 66055699,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eOkay, so even though strace cannot see the difference\n(it too is probably buggy) it looks like the ftruncate64 that\nGo is issuing is not the same as the ftruncate64 that C is\nissuing.\n\nDave, do gdb breakpoints work on your platform?\nIf so, please try\n\n$ gdb a.out\n(gdb) b close\n(gdb) r\n... stops at close breakpoint\n(gdb) disas ftruncate64\n... if that fails, run \"x/100i ftruncate64\" instead.\n(gdb) disas main\n... if that fails, run \"x/100i main\" instead.\n\nand let us know what the assembly says for both\nfunctions.\n\nIf gdb breakpoints do not work (they don't on some\nARM hardware I have), you can make your own\n\"breakpoint\" by recompiling the program with\n\n    *(int*)0 = 0;\n\njust before the close(fp) line.\n\nIt's important to run the binary (the r command) before\nthe disassembly, because often the dynamic linker does\nnot set up the bindings for called functions until they\nhave been called once.\n\nIf the assembly listing for ftruncate64 is super short\n(just 3-4 instructions) then try recompiling with gcc -static.\n\nThanks.\nRuss\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-04-19T14:41:21Z",
	"updated_at": "2014-12-08T10:09:33Z"
}
