{
	"id": 147610833,
	"number": 15247,
	"state": "closed",
	"title": "time: document that package does not support leap seconds",
	"body": "The `time` package does not support leap seconds.  This is further explored in these two issues:\r\n#15190\r\n#8728\r\n\r\nWhile it looks like this won't be fixed until Go 2.0, we can at least document the current behavior. Specifically the following things should be documented:\r\n\r\n1. The definition of a \"second\". Specifically, it should be clarified that go uses the \"POSIX-second\".  A POSIX-second is equal to one standard second in all cases except when a POSIX-second is followed by a leap-second, in which case the POSIX-second is equal to two standard seconds, and the leap-second is skipped.  This means that when calculating the Duration between two dates as a number of seconds, the unit being calculated is POSIX-seconds. To convert to standard seconds, add the number of leap seconds that occurred between the two dates in question.\r\n\r\n2. The `time` package does not support parsing datetimes that contain a leapsecond. For example, the package will not parse `2005-12-31T23:59:60Z`. \r\n\r\n3. The behavior of `time.Sleep` is unaffected and uses standard seconds in all cases, since it uses a monotonic clock provided by the `runtime` package.   (As far as I can figure it, this needs to be confirmed)\r\n\r\n4. The behavior of the above items on non-POSIX systems (like windows)",
	"user": {
		"login": "phayes",
		"id": 207037,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "NeedsFix"
		}
	],
	"comments": 7,
	"closed_at": "2016-10-06T19:43:37Z",
	"created_at": "2016-04-12T02:17:51Z",
	"updated_at": "2016-10-06T19:43:37Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
