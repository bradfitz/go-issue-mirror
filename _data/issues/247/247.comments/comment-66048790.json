{
	"id": 66048790,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1 by **dark.nowhere**:\n\n\u003cpre\u003eI think the standard interpretation of multiple receivers on a channel is that they\nare receiving work that any one of them is capable of handling. If you try to get\naway from this model you will end up with:\n\na) hairy stuff in the implementation to guarantee the behavior, and\nb) far worse, a debugging nightmare for any code you write that intends to take\nadvantage of it. \n\nEg. what if your intended first receiver is delayed or fails completely?\n\nIf you really need to have receivers consuming according to some defined order it\nseems more like a synchronization issue to me -- you can use, for example, (other)\nchannels to sync up your multiple receivers so that they process things in your\nintended order. This brings the advantage of explicit behavior in your code and\nguaranteed behavior, not to mention greater flexibility than any built-in.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2009-11-17T18:43:09Z",
	"updated_at": "2014-12-08T10:03:50Z"
}
