{
	"id": 51276220,
	"number": 237,
	"state": "closed",
	"title": "gccgo and 6g behave differently with maps of structs (not with maps of pointer of structs)",
	"body": "by **carsten.busse**:\n\n\u003cpre\u003epackage main\ntype T struct {\n   t int;\n}\ntype mapT map[int]T;\nfunc main() {\n   myMap = make(mapT);\n   myMap[0] = T{1};\n   myMap[0].t += 1;\n}\n\nleads to a compile error (cannot assign) with the 6g compiler, reports say\nthat this is not the case with gccgo (compiles and works)\n\ni dont know what the correct behaviour should be in this case, but it was\ndecided to open an issue.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 11,
	"closed_at": "2014-12-08T10:03:46Z",
	"created_at": "2009-11-16T23:54:21Z",
	"updated_at": "2016-06-24T19:05:19Z"
}
