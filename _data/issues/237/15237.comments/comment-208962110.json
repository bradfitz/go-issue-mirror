{
	"id": 208962110,
	"body": "My applications are two different RTP implementations. One is audio over RTP and the second is RTP-MIDI. Neither have high bandwidth requirements. The RTP-MIDI protocol is however quite sensitive to latency and jitter. The RTP audio is not as sensitive but the lower the latency the better.\r\n\r\nI have made some performance tests. The code is at\r\n\r\nhttp://play.golang.org/p/CTzoRQSt6l\r\n\r\nit can't be run on the playground of course.\r\n\r\nWhen running it in linux I get\r\n```\r\nmagnus@durer ~/Projects/go $ ./ribperf -count=10000 -readfrom\r\nStarting receiver using udpConn.ReadFromUDP\r\nStarting transmitter on IP= fe80::461e:a1ff:fece:f4a9\r\nTransmitted  91865  packet, received  10000  packets, duration= 712.561593ms\r\n\r\nmagnus@durer ~/Projects/go $ ./ribperf -count=10000\r\nStarting receiver using udpConn.Read\r\nStarting transmitter on IP= fe80::461e:a1ff:fece:f4a9\r\nTransmitted  10001  packet, received  10000  packets, duration= 81.208198ms\r\nmagnus@durer ~/Projects/go $ \r\n\r\n```\r\n\r\nand it's even worse on Windows, albeit on a slower machine:\r\n```\r\nm:\\Projects\\go\u003eribperf.exe -count=10000 -readfrom\r\nStarting receiver using udpConn.ReadFromUDP\r\nStarting transmitter on IP= fe80::f593:7c86:f18e:7eaf\r\nTransmitted  699598  packet, received  10000  packets, duration= 14.0954094s\r\n\r\nm:\\Projects\\go\u003eribperf.exe -count=10000\r\nStarting receiver using udpConn.Read\r\nStarting transmitter on IP= fe80::f593:7c86:f18e:7eaf\r\nTransmitted  10000  packet, received  10000  packets, duration= 245.0245ms\r\n\r\nm:\\Projects\\go\u003e\r\n\r\n```",
	"user": {
		"login": "maghul",
		"id": 3647496,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-12T15:28:13Z",
	"updated_at": "2016-04-12T15:28:13Z"
}
