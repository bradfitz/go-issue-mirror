{
	"id": 51284886,
	"number": 6237,
	"state": "open",
	"title": "runtime: malloc flags should be subsumed by the type information provided to mallogc",
	"body": "\u003cpre\u003eToday, we pass flags to malloc to help it decide what constraints are required on the\nstorage allocated for an object.  However, all of this information can be derrived from\nthe type of an object.\n\nFor example, instead of passing the \u0026quot;not pointers\u0026quot; flag mallocgc can do a\n\u0026quot;no pointers\u0026quot; allocation whenever it is passed a type which contains no point\nvalues.\n\nThere are some flags which cannot be subsumed by the type information, this includes the\nzeroing flag (sometimes we know we are going to initialize an object and do not need\nzeroing) and the no invoke gc flag.  The \u0026quot;no gc\u0026quot; flag is a gray area, in\ntheory types could encode this information (for example, mspans, stacks) but today those\nkinds of allocation have no type.  Maybe they should.\u003c/pre\u003e",
	"user": {
		"login": "lexprfuncall",
		"id": 5360361,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"created_at": "2013-08-23T21:18:56Z",
	"updated_at": "2015-04-14T19:45:20Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
