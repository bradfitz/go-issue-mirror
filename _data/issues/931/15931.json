{
	"id": 158060322,
	"number": 15931,
	"state": "closed",
	"title": "math: Document behavior of math.Ceil",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\nTip\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\nDoesn't matter\r\n\r\n3. What did you do?\r\n\r\nThe documentation for math.Ceil states:\r\n\r\n\u003e Ceil returns the least integer value greater than or equal to x.\r\n\r\nAs far as I know, float representations of numbers can approximate integers but may not be land on them exactly. Also, as far as I know, casting a float to an integer always rounds down, e.g. `int64(5.999999999) == 5`. \r\n\r\nI am worried there could be a situation where `math.Ceil(N)` could return a float like `floor(N).999999999999999999`, and this gets cast to an integer and returns a number lower than N. It would be nice if this was explicitly documented.\r\n\r\nI'm also confused about why math.Ceil doesn't return an int64, though I'm sure there's a good reason for it. It would be nice if there was information about how to convert this value to an integer. (I am aware there are edge cases around large or small numbers, in this case I'm mostly worried about the values between 2^-30 and 2^30).",
	"user": {
		"login": "kevinburkeshyp",
		"id": 10735057,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-06-03T00:27:35Z",
	"created_at": "2016-06-02T05:07:50Z",
	"updated_at": "2016-06-03T00:27:35Z"
}
