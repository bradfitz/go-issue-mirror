{
	"id": 135151854,
	"body": "I will not worry too much about the collision in the package names at this moment. I assume the user has full control over what the package name will be. So, for two sensor packages, the user can name one in sensorA, and another in sensorB. For binding 3rd party packages, the user can wrap them with more meaningful names. \r\n\r\nI think what I will end up implementing is \r\n\r\n\u003cpre\u003e\r\n  $ gomobile bind -target=android -pkgpath=com.golang.app a.b.c x.y.z\r\n\u003c/pre\u003e\r\n\r\nThis will creates two classes C.java and Z.java under the same package com.golang.app. All classes will be under the same package path (com.golang.app). If pkgpath is not given, go.c.C and go.z.Z.\r\n\r\nFor objective-c,\r\n\u003cpre\u003e\r\n  $ gomobile bind -target=ios -prefix=App a.b.c x.y.z\r\n\u003c/pre\u003e\r\nThis will create AppC.{h,m} and AppZ.{h.m}, and AppC and AppZ will be used as prefixes of generated functions and types. If -prefix is omitted, GoC and GoZ.\r\n\r\n",
	"user": {
		"login": "hyangah",
		"id": 4999471,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-26T19:50:46Z",
	"updated_at": "2015-08-26T19:50:46Z"
}
