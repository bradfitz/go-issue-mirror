{
	"id": 144760850,
	"body": "@sridharv Can you explain what the gobind does? Currently it does only code generation (.java, .h, .m, .go) but your mention of incremental builds makes me think the gobind in your proposal does something more than that. \r\n\r\n  - what's the output of the gobind? (source code? compiled object or class files? archive?)\r\n\r\n  - where should the gobind output go (so, the following gomobile build command finds the output of previous gobind commands and IDEs build task)? Every IDE has different assumptions on source code layout, or default build framework. \r\n\r\nUse of buildmode flag in gomobile build is interesting, and I want to hear more about how it connects the main package and the product of previous gobind+IDE runs.\r\n\r\nBesides, I want to know how to handle the case when exported functions of pkg1 and pkg2 both depend on some types of pkg3. \r\n \r\n  package pkg1\r\n  func Read(io.Reader)\r\n\r\n  package pkg2\r\n  func Work(io.Reader)\r\n\r\nOur plan was to export only one type for io.Reader in this case, so both Read and Work use the same type.\r\n\r\nI don't understand what prevents the use of go generate currently.\r\n\r\n\r\n\r\n",
	"user": {
		"login": "hyangah",
		"id": 4999471,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-01T15:21:14Z",
	"updated_at": "2015-10-01T15:21:14Z"
}
