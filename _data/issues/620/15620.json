{
	"id": 153859133,
	"number": 15620,
	"state": "open",
	"title": "spec: when exactly do we evaluate the LHS variable in a tuple assignment?",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngccgo version 4.9.3\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nUbuntu 14.04 on AWS t2.micro\r\n\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n\r\nDeleting from a slice as suggested by https://github.com/golang/go/wiki/SliceTricks, raises an index out of bound error when compiling with gccgo. The following toy program works fine using GC but not with GCCGO: \r\n\r\n```\r\npackage main\r\n\r\nimport \"fmt\"\r\n\r\nfunc main() {\r\n\txs := []int{0,1,2,3,4}\r\n\ti := 2\r\n\txs, xs[len(xs)-1] = append(xs[:i], xs[i+1:]...), 0\r\n\tfmt.Println(xs)\r\n}\r\n```\r\nhttps://play.golang.org/p/f039m1h7Z1\r\n\r\nNote: while this toy example is a slice of ints, I'm using the delete code for removing an entry from a slice of pointers. The bug is in `xs[len(xs)-1] = 0`.\r\n\r\n4. What did you expect to see?\r\n\r\n`[0 1 3 4]`\r\n\r\n5. What did you see instead?\r\n\r\n```\r\npanic: runtime error: index out of range\r\n\r\ngoroutine 1 [running]:\r\nmain.main\r\n\t/home/ubuntu/Go/src/bad/remove.go:8\r\n```\r\n",
	"user": {
		"login": "georgeteo",
		"id": 12107160,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"created_at": "2016-05-09T20:12:16Z",
	"updated_at": "2016-05-09T22:41:14Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
