{
	"id": 51276444,
	"number": 412,
	"state": "closed",
	"title": "Declare field in Interface",
	"body": "by **Ziyu4Huang**:\n\n\u003cpre\u003eFrom this thread, I think it might be useful to let you declare field\nother then write an access function\n\u003ca href=\"http://groups.google.com/group/golang-nuts/browse_thread/thread/ffa1c12a24ef8c5c#\"\u003ehttp://groups.google.com/group/golang-nuts/browse_thread/thread/ffa1c12a24ef8c5c#\u003c/a\u003e\n\ntype Foo struct {\n  Index int;\n}\n\ntype FooIF interface {\n  GetIndex() int;\n  Index int;//can we have field declare in interface ?\n  //let compiler check if structure have this field\n}\n\n//access function is annoy.\nfunc (f *Foo) GetIndex() int { return f.Index}\n\n\nSee full explain codes here.\n\u003ca href=\"http://gopaste.org/view/eGini\"\u003ehttp://gopaste.org/view/eGini\u003c/a\u003e\n\n\nActually this suggestion is just let user acces witout use reflection.\nSince compiler can using Interface do thing like vtable in C++,\nI think it should be possible to know what is offset of a field in\nstructure hide by interface.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:04:30Z",
	"created_at": "2009-12-11T09:59:41Z",
	"updated_at": "2016-06-24T19:10:21Z"
}
