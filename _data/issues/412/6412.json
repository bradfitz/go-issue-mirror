{
	"id": 51285146,
	"number": 6412,
	"state": "closed",
	"title": "cmd/ld: bad switch statement fails to build on clang",
	"body": "by **mistydemeo**:\n\n\u003cpre\u003eThe following switch statement, found on lines 699-710 of cmd/ld/lib.c\n(\u003ca href=\"http://code.google.com/p/go/source/browse/src/cmd/ld/lib.c#699)\"\u003ehttp://code.google.com/p/go/source/browse/src/cmd/ld/lib.c#699)\u003c/a\u003e, fails to build on\nclang because it doesn't provide cases for all possible inputs:\n\n        switch(thechar){\n        case '8':\n                argv[argc++] = \u0026quot;-m32\u0026quot;;\n                break;\n        case '6':\n                argv[argc++] = \u0026quot;-m64\u0026quot;;\n                break;\n        case '5':\n                argv[argc++] = \u0026quot;-marm\u0026quot;;\n                break;\n        }\n\nWhich produces:\n\n/private/tmp/go-q5rl/go/src/cmd/5l/../ld/lib.c:661:9: error: no case matching constant\nswitch condition '53' [-Werror]\nswitch(thechar){\n       ^~~~~~~\n\nNormally this would only produce a warning, but as -Werror is passed to the build it\nbecomes a fatal error instead. This can be fixed simply by providing a no-op default\nstatement, e.g.:\n\n        switch(thechar){\n        case '8':\n                argv[argc++] = \u0026quot;-m32\u0026quot;;\n                break;\n        case '6':\n                argv[argc++] = \u0026quot;-m64\u0026quot;;\n                break;\n        case '5':\n                argv[argc++] = \u0026quot;-marm\u0026quot;;\n                break;\n        default:\n                break;\n        }\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 13,
	"closed_at": "2014-12-08T10:35:19Z",
	"created_at": "2013-09-17T17:20:23Z",
	"updated_at": "2016-06-25T01:18:58Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
