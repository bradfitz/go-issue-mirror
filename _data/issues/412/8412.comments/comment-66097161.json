{
	"id": 66097161,
	"body": "\u003ca id=\"c8\"\u003e\u003c/a\u003eComment 8:\n\n\u003cpre\u003e\u003e Another approach for this use case might be to remember the bucket not on map\niteration, but on delete.\n\nI'm not sure how to tie the delete to the iterator state, but here's a variant on that\nidea.\n\nWe could store the lowest non-empty bucket on inserts, deletes, and creation, and read\nit once at the beginning of iteration. This will make some deletes a bit more expensive,\nbut those should be rare and non-compounding. The lowest non-empty bucket could perhaps\nalso be used later as a cue to trigger map downsizing.\n\nThis approach could also help keep the iteration code simple--just run from first to\nbucketCnt instead of 0 to bucketCnt--depending on what guarantees we make about\n(non-concurrent) mutation during iteration.\n\nOn that note, here's a fun pop quiz. What do these output (modulo print order)? To what\nextent is this behavior covered under the Go 1 compatibility guarantee?\n\n\u003ca href=\"http://play.golang.org/p/Y3nmsF3B2m\"\u003ehttp://play.golang.org/p/Y3nmsF3B2m\u003c/a\u003e\n\u003ca href=\"http://play.golang.org/p/MZcJKa9_hR\"\u003ehttp://play.golang.org/p/MZcJKa9_hR\u003c/a\u003e\n\u003ca href=\"http://play.golang.org/p/5THESM0Pna\"\u003ehttp://play.golang.org/p/5THESM0Pna\u003c/a\u003e\u003c/pre\u003e\n\n\n\n_Status changed to **Accepted**._",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-07-26T01:10:04Z",
	"updated_at": "2014-12-08T10:46:45Z"
}
