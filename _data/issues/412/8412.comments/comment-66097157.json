{
	"id": 66097157,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eSo as I see it there are two options.\n\nOne is to go back to starting at a random bucket (or some hybrid, like starting at a\nrandom offset if there is 1 bucket and a random bucket otherwise).  This gives an O(n lg\nn) total running time for the pop idiom.  It's not great, but better than O(n^2).\n\nThe other is to remember the bucket of the last item returned during iteration.  We can\nstart the next iteration at that bucket.  This would give us O(n) for the pop idiom. \nThe challenge is that iteration is a read operation, so multiple simultaneous iterations\ncan be happening at once.  As a result, maintaining the last bucket during iteration\nwould require atomic memory accesses (or maybe just a naked write would be sufficient?).\n I know how we can make space in the map header for this extra item.\u003c/pre\u003e",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-07-25T03:46:25Z",
	"updated_at": "2014-12-08T10:46:45Z"
}
