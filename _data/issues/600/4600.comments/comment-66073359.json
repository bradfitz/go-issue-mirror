{
	"id": 66073359,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eHere is an example using a fnv-like hash. A suggestion would be to do the following\nin Contains/Count(s1, s2): if len(s2) \u0026gt; 16, count the number N of occurences of\ns2[:4] in s1.\n\nIf N*len(s2) \u0026gt; K*len(s1) for some constant K (the hash function cost, here K=3), then\nfull comparisons are probably more costly than hashing and we switch algorithms.\n\ns1 = strings.Repeat(\"ACTG\", 32\u0026lt;\u0026lt;10), s2 = strings.Repeat(\"ACTG\", 4\u0026lt;\u0026lt;10)\nSetBytes(len(s1)+len(s2))\n\nBenchmarkContainsTorture\t       5\t 403871636 ns/op\t   0.37 MB/s\nBenchmarkCountTorture\t       5\t 403779882 ns/op\t   0.37 MB/s\nBenchmarkContainsHashTorture\t    5000\t    454527 ns/op\t 324.43 MB/s\nBenchmarkCountHashTorture\t    5000\t    439006 ns/op\t 335.90 MB/s\n\ns1 = strings.Repeat(\"ACTG\", 32\u0026lt;\u0026lt;10)\ns2 = strings.Repeat(\"ACTG\", 2\u0026lt;\u0026lt;10)+\"GATC\"+strings.Repeat(\"ACTG\", 2\u0026lt;\u0026lt;10)\nSetBytes(len(s1)+len(s2))\n\nBenchmarkContainsTorture\t  100000\t     28224 ns/op\t5224.35 MB/s\nBenchmarkCountTorture\t   10000\t    227133 ns/op\t 649.20 MB/s\nBenchmarkContainsHashTorture\t   20000\t     87624 ns/op\t1682.81 MB/s\nBenchmarkCountHashTorture\t    5000\t    684507 ns/op\t 215.42 MB/s\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/4600/4/string_test.go\"\u003estring_test.go\u003c/a\u003e (2421 bytes)",
	"user": {
		"login": "remyoudompheng",
		"id": 175246,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-12-30T23:46:17Z",
	"updated_at": "2014-12-22T06:21:22Z"
}
