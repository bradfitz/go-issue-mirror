{
	"id": 78409848,
	"body": "It's a feature of `encoding/json` that you can drop fields you're not\ninterested in, and that you can have more fields in the destination struct\nthan are in the source JSON object. Reporting unmatched fields as an error\nbreaks that feature, and it also breaks backward-compatibility (See\nhttps://golang.org/doc/go1compat).\n\nI could imagine writing a little tool to take some source JSON and a\ndestination struct (and vice versa) and check that they fit together, but\nthe mismatch certainly should not be an error condition for the package.\n\nOn 12 March 2015 at 12:42, James Michael DuPont \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e When un-marshalling the json decoder will skip fields if it does not match\n\u003e the name.\n\u003e This can be problematic if you have a typo or have a new field in the\n\u003e json. Would like some feedback from the decode modules when this happens.\n\u003e\n\u003e Originally described in #10134 \u003chttps://github.com/golang/go/issues/10134\u003e\n\u003e\n\u003e See also on stack overflow\n\u003e\n\u003e http://stackoverflow.com/questions/20509444/go-json-unmarshal-not-picking-up-a-single-attribute-value\n\u003e\n\u003e http://stackoverflow.com/questions/20943963/json-unmarshal-doesnt-seem-to-pay-attention-to-struct-tags\n\u003e\n\u003e Proposed solution is to add this line to report unmatched fields\n\u003e d.saveError(fmt.Errorf(\"json: unmatched field %s for %v\", key, v.Type()))\n\u003e h4ck3rm1k3/google-go@3befeea#diff-4299c3082a8bb7e546723132c992fa4cR586\n\u003e \u003chttps://github.com/h4ck3rm1k3/google-go/commit/3befeea4f59745624af7ae18d1119ee175871df2#diff-4299c3082a8bb7e546723132c992fa4cR586\u003e\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/10140\u003e.\n\u003e\n",
	"user": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-12T01:50:13Z",
	"updated_at": "2015-03-12T01:50:13Z"
}
