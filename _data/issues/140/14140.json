{
	"id": 129605683,
	"number": 14140,
	"state": "open",
	"title": "encoding/gob, encoding/json: add streaming interface",
	"body": "When encoding a large data structure (such as a tree representing a file-system), the Encode() methods first marshal the encoded data into a []byte buffer and then write the buffer to the writer.  Similarly, the Decode() methods require a buffer to unmarshal from. These buffers must be allocated (and grown) and typically more than double the memory consumption of the process. This is limiting for applications which are sized to the machine/container.\r\n\r\nI propose that the interfaces are extended to support streaming encoding/decoding of data. For each type (except slices and maps), the data would be separately marshaled and written. For slices and maps, each entry would be marshaled and written, rather the slice/map as a whole.\r\n\r\nSome API suggestions/alternatives:\r\nfunc Encode(w io.Writer, v interface{}) error\r\nfunc NewStreamingEncoder(w io.Writer) *Encoder\r\nfunc (enc *Encoder) StreamingEncode(v interface{}) error",
	"user": {
		"login": "rgooch",
		"id": 9002662,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"created_at": "2016-01-28T22:40:17Z",
	"updated_at": "2016-01-30T16:31:39Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
