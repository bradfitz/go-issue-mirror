{
	"id": 66063732,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eSorry, I didn't understand what you meant.  \n\n\"mapVariadicFunc.key\" resolves to a func(...interface{}) .. do you mean the args have\nalready been applied by the time it's resolved?  I didn't see any situation in the docs\nwhere args would be applied to something other than the final value on the left side. \n(after all of the dots have been processed).  \n\nIt sounds like it's the case that the template doesn't differentiate between the dot and\nnon-dot tokens, and that's the fundamental reason why it doesn't behave the way I\nexpected?\n\nI added a couple more tests to cover structs (which I still think apply, even if my\nunderstanding was off on the mapVariadicFunc case).\n\nThanks!\n\n\ndiff -r c1702f36df03 src/pkg/template/exec_test.go\n--- a/src/pkg/template/exec_test.go\tTue Oct 18 10:55:12 2011 +1100\n+++ b/src/pkg/template/exec_test.go\tTue Feb 28 13:36:48 2012 -0500\n@@ -402,6 +402,14 @@\n \t{\"error method, error\", \"{{.EPERM true}}\", \"\", tVal, false},\n \t{\"error method, no error\", \"{{.EPERM false}}\", \"false\", tVal, true},\n \n+\t// Func chaining.\n+\t{\"Func.Key: String\", \"{{mapString.key}}\", \"value\", tVal, false},\n+\t{\"Func.Key: Func()\", \"{{mapNiladicFunc.key}}\", \"value\", tVal, true},\n+\t{\"Func.Key: Func(...)\", \"{{mapVariadicFunc.key 1 2 3}}\", \"args=[1, 2, 3]\", tVal, true},\n+\t{\"Func.Field.Field: String\", \"{{tVal.U.V}}\", \"v\", tVal, true},\n+\t{\"Func.Method.Field: String\", \"{{tVal.GetU.V}}\", \"v\", tVal, true},\n+\t{\"Func.Method(...)\", \"{{tVal.Method1 1}}\", \"1\", tVal, true},\n+\n \t// Fixed bugs.\n \t// Must separate dot and receiver; otherwise args are evaluated with dot set to variable.\n \t{\"bug0\", \"{{range .MSIone}}{{if $.Method1 .}}X{{end}}{{end}}\", \"X\", tVal, true},\n@@ -431,6 +439,32 @@\n \treturn \"oneArg=\" + a\n }\n \n+func mapString() map[string]string {\n+\treturn map[string]string{\n+\t\t\"key\": \"value\",\n+\t}\n+}\n+\n+func mapNiladicFunc() map[string]func()string {\n+\treturn map[string]func()string {\n+\t\t\"key\": func() string {\n+\t\t\treturn \"value\"\n+\t\t},\n+\t}\n+}\n+\n+func mapVariadicFunc() map[string]func(...interface{})string {\n+\treturn map[string]func(...interface{})string {\n+\t\t\"key\": func(args ...interface{})string {\n+\t\t\treturn fmt.Sprintf(\"args=%s\", args)\n+\t\t},\n+\t}\n+}\n+\n+func tValFunc() *T {\n+\treturn tVal\n+}\n+\n // count returns a channel that will deliver n sequential 1-letter strings starting at \"a\"\n func count(n int) chan string {\n \tif n == 0 {\n@@ -459,6 +493,10 @@\n \t\t\"typeOf\":   typeOf,\n \t\t\"vfunc\":    vfunc,\n \t\t\"zeroArgs\": zeroArgs,\n+\t\t\"mapString\": mapString,\n+\t\t\"mapNiladicFunc\": mapNiladicFunc,\n+\t\t\"mapVariadicFunc\": mapVariadicFunc,\n+\t\t\"tVal\": tValFunc,\n \t}\n \tfor _, test := range execTests {\n \t\ttmpl := New(test.name).Funcs(funcs)\u003c/pre\u003e",
	"user": {
		"login": "robfig",
		"id": 536325,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-02-28T18:41:16Z",
	"updated_at": "2014-12-08T10:16:19Z"
}
