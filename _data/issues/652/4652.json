{
	"id": 51282437,
	"number": 4652,
	"state": "closed",
	"title": "cmd/go: helpful error messages when hg, git, svn, bzr not found",
	"body": "\u003cpre\u003eIf a vcs tool like hg, git, svn, bzr is not found, cmd/go should explain to the user\nwhat to install.\n\nSee confusion at \u003ca href=\"https://plus.google.com/u/0/115056313943520401920/posts/Xvmwe76BJMS\"\u003ehttps://plus.google.com/u/0/115056313943520401920/posts/Xvmwe76BJMS\u003c/a\u003e\n\nvcs.go currently has just:\n\n// run1 is the generalized implementation of run and runOutput.                         \n                                                                                        \n                                   \nfunc (v *vcsCmd) run1(dir string, cmdline string, keyval []string, verbose bool)\n([]byte, error) {\n        m := make(map[string]string)\n        for i := 0; i \u0026lt; len(keyval); i += 2 {\n                m[keyval[i]] = keyval[i+1]\n        }\n        args := strings.Fields(cmdline)\n\tfor i, arg := range args {\n                args[i] = expand(m, arg)\n        }\n\n        cmd := exec.Command(v.cmd, args...)\n        cmd.Dir = dir\n        if buildX {\n                fmt.Printf(\u0026quot;cd %s\\n\u0026quot;, dir)\n\t\tfmt.Printf(\u0026quot;%s %s\\n\u0026quot;, v.cmd, strings.Join(args, \u0026quot; \u0026quot;))\n        }\n        var buf bytes.Buffer\n        cmd.Stdout = \u0026amp;buf\n\tcmd.Stderr = \u0026amp;buf\n        err := cmd.Run()\n        out := buf.Bytes()\n        if err != nil {\n                if verbose || buildV {\n                        fmt.Fprintf(os.Stderr, \u0026quot;# cd %s; %s %s\\n\u0026quot;, dir, v.cmd, strings.Join(args, \u0026quot; \u0026quot;))\n                        os.Stderr.Write(out)\n\t\t}\n                return nil, err\n        }\n        return out, nil\n}\n\nWe are more helpful in at at least one other case, as precedent:\n\n        if toolIsWindows \u0026amp;\u0026amp; toolName == \u0026quot;pprof\u0026quot; {\n\t        args = append([]string{\u0026quot;perl\u0026quot;, toolPath}, args[1:]...)\n\t        var err error\n                toolPath, err = exec.LookPath(\u0026quot;perl\u0026quot;)\n                if err != nil {\n                        fmt.Fprintf(os.Stderr, \u0026quot;go tool: perl not found\\n\u0026quot;)\n                        setExitStatus(3)\n\t\t\treturn\n                }\n        }\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:24:39Z",
	"created_at": "2013-01-12T01:42:04Z",
	"updated_at": "2016-06-24T22:31:11Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
