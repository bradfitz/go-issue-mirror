{
	"id": 66085851,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eTLDR:\n\ndiff -r 125bf33c1905 src/pkg/sync/atomic/asm_linux_arm.s\n--- a/src/pkg/sync/atomic/asm_linux_arm.s\tSat Sep 21 17:53:44 2013 +1000\n+++ b/src/pkg/sync/atomic/asm_linux_arm.s\tSat Sep 21 19:13:42 2013 +0200\n@@ -129,12 +129,14 @@\n \tBEQ \t2(PC)\n \tMOVW\tR1, (R1)\n \tMOVW\tR0, 4(R13)\n-\tMOVW\t$4(FP), R1 // oldval\n+\tMOVW\toldlo+4(FP), R1\n \tMOVW\tR1, 8(R13)\n+\tMOVW\toldhi+8(FP), R1\n+\tMOVW\tR1, 12(R13)\n \tMOVW\tnewlo+12(FP), R2\n-\tMOVW\tR2, 12(R13)\n+\tMOVW\tR2, 16(R13)\n \tMOVW\tnewhi+16(FP), R3\n-\tMOVW\tR3, 16(R13)\n+\tMOVW\tR3, 20(R13)\n \tBL  \truntime·cas64(SB)\n \tMOVW\tR0, 20(FP)\n \tRET\n\nWithout it \"go test sync/atomic\" (and probably much else using atomic operations)\nfreezes on tip, and with the patch \"go test sync/atomic\" does not freeze until it hits\nTestNilDeref's use of CompareAndSwapUint64. Someone who knows the expected behaviour\nbetter would have to take a closer look at fixing that one.\n\n\n\n\n\n\nDetails:\n\nr17651 is the offending changelist for the original issue reported which isn't too\nhelpful as that's the revision where fd_mutex.go was first introduced. Rather than just\na freeze we immediately get this though:\n\nruntime: unknown argument frame size for generalCAS64 called from 0x9b400\n[sync/atomic.loadUint64]\nfatal error: invalid stack\n\ngoroutine 1 [garbage collection]:\nruntime.gc(0x0)\n\t/Users/quarnster/code/3rdparty/go/src/pkg/runtime/mgc0.c:2052 +0x1c4 fp=0x40050e74\nruntime.mallocgc(0x8, 0x0, 0x0)\n\t/Users/quarnster/code/3rdparty/go/src/pkg/runtime/malloc.goc:142 +0x22c fp=0x40050eb0\nruntime.mal(0x8)\n\t/Users/quarnster/code/3rdparty/go/src/pkg/runtime/malloc.goc:698 +0x38 fp=0x40050ec0\ncopyin(0xd17e0, 0x40050f00, 0x40050f0c)\n\t/Users/quarnster/code/3rdparty/go/src/pkg/runtime/iface.c:152 +0x6c fp=0x40050edc\nruntime.convT2E(0xd17e0, 0xf98a8, 0xd, 0xd17e0, 0x4000d188)\n\t/Users/quarnster/code/3rdparty/go/src/pkg/runtime/iface.c:220 +0x44 fp=0x40050ef8\nmain.main()\n\t/Users/quarnster/code/go/hellonet.go:27 +0x204 fp=0x40050f90\nruntime.main()\n\t/Users/quarnster/code/3rdparty/go/src/pkg/runtime/proc.c:200 +0xf4 fp=0x40050fc4\nruntime.goexit()\n\t/Users/quarnster/code/3rdparty/go/src/pkg/runtime/proc.c:1364 fp=0x40050fc4\n\ngoroutine 3 [runnable]:\nruntime: unknown argument frame size for generalCAS64 called from 0x9b400\n[sync/atomic.loadUint64]\nsync/atomic.loadUint64(0x105230c0, 0x0, 0x0)\n\t/Users/quarnster/code/3rdparty/go/src/pkg/sync/atomic/64bit_arm.go:10 +0x6c\nnet.(*fdMutex).RWLock(0x105230c0, 0x1, 0x3fae8)\n\t/Users/quarnster/code/3rdparty/go/src/pkg/net/fd_mutex.go:121 +0x94\nnet.(*netFD).readLock(0x105230c0, 0x21, 0x40)\n\t/Users/quarnster/code/3rdparty/go/src/pkg/net/fd_unix.go:128 +0x34\nnet.(*netFD).accept(0x105230c0, 0x114b48, 0x0, 0x0, 0x0)\n\t/Users/quarnster/code/3rdparty/go/src/pkg/net/fd_unix.go:374 +0x40\nnet.(*TCPListener).AcceptTCP(0x10500168, 0x10525090, 0xd, 0x0)\n\t/Users/quarnster/code/3rdparty/go/src/pkg/net/tcpsock_posix.go:240 +0x50\nnet.(*TCPListener).Accept(0x10500168, 0x1, 0x1, 0xd17e0, 0x10500178)\n\t/Users/quarnster/code/3rdparty/go/src/pkg/net/tcpsock_posix.go:250 +0x2c\nmain.func·001()\n\t/Users/quarnster/code/go/hellonet.go:17 +0xf0\ncreated by main.main\n\t/Users/quarnster/code/go/hellonet.go:24 +0x198\n\n\nThat issue was then fixed in r17687, and from thereon it just spins forever in\n64bit_arm.go:loadUint64 as CompareAndSwapUint64 always returns false.\n\n\nCreating a small test for CompareAndSwapUint64 I can confirm that it's broken, or more\nspecifically generalCAS64 is broken, which is only used if __kuser_helper_version is\n\u0026lt; 5. (On the arm machine running this test on it appears to be 3). \n\n\nApparently I can't change the title myself, but sync/atomic would be the correct package\nand I don't believe it's a regression, or rather the regression in net is just because\nnet now uses a feature that might not ever have worked on this particular arm setup.\u003c/pre\u003e",
	"user": {
		"login": "quarnster",
		"id": 1230389,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-09-21T17:26:24Z",
	"updated_at": "2014-12-22T06:28:54Z"
}
