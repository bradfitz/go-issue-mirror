{
	"id": 66095398,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eI added dump calls for OFOR nodes before and after racewalknode. \n\nbefore:\n\nfor [100525368]\n.   FOR l(9) tc(1)\n.   FOR-incr\n.   .   BLOCK l(9)\n.   .   BLOCK-list\n.   .   .   CALLFUNC-init\n.   .   .   .   AS u(2) l(9) tc(1)\n.   .   .   .   .   NAME-a.autotmp_0001 u(1) a(1) l(9) x(0+0) class(PAUTO) esc(N) tc(1)\nused(1) a.S\n.   .   .   .   .   NAME-a.statictmp_0002 u(1) a(1) l(9) x(0+0) class(PEXTERN) f(1)\ntc(1) used(1) a.S\n.   .   .   CALLFUNC u(100) l(9) tc(1)\n.   .   .   .   NAME-runtime.chansend1 u(1) a(1) l(2) x(0+0) class(PFUNC) tc(1) used(1)\nFUNC-funcSTRUCT-(FIELD-\n.   .   .   .   .   NAME-runtime.chanType·1 u(1) a(1) l(2) x(0+0) class(PPARAM) f(1)\nPTR64-*byte PTR64-*byte, FIELD-\n.   .   .   .   .   NAME-runtime.hchan·2 u(1) a(1) l(2) x(8+0) class(PPARAM) f(1)\nCHAN-chan\u0026lt;- any CHAN-chan\u0026lt;- int, FIELD-\n.   .   .   .   .   NAME-runtime.elem·3 u(1) a(1) l(2) x(16+0) class(PPARAM) f(1)\nPTR64-*any PTR64-*int)\n...\n\nafter:\n\nracefor [100525368]\n.   FOR l(9) tc(1)\n.   FOR-incr\n.   .   BLOCK-init\n.   .   .   CALLFUNC u(100) l(9) tc(1)\n.   .   .   .   NAME-runtime.raceread u(1) a(1) l(2) x(0+0) class(PFUNC) tc(1) used(1)\nFUNC-funcSTRUCT-(FIELD-uintptr)\n.   .   .   CALLFUNC-list\n.   .   .   .   AS u(2) l(9) tc(1)\n.   .   .   .   .   INDREG-SP a(1) l(9) x(0+0) tc(1) uintptr\n.   .   .   .   .   CONVNOP u(2) l(9) tc(1) uintptr\n.   .   .   .   .   .   CONVNOP u(2) l(9) tc(1) E-30-unsafe.Pointer\n.   .   .   .   .   .   .   ADDR u(2) l(9) tc(1) PTR64-*PTR64-*int\n.   .   .   .   .   .   .   .   INDEX u(2) l(9) tc(1) PTR64-*int\n.   .   .   .   .   .   .   .   .   NAME-a.a u(1) a(1) g(2) l(8) x(0+0) class(PAUTO)\nf(1) ld(1) tc(1) used(1) ARRAY-[2]PTR64-*int\n.   .   .   .   .   .   .   .   .   DOT u(2) l(9) x(16+0) tc(1) int\n.   .   .   .   .   .   .   .   .   .   NAME-a.autotmp_0001 u(1) a(1) l(9) x(0+0)\nclass(PAUTO) esc(N) tc(1) used(1) a.S\n.   .   .   .   .   .   .   .   .   .   NAME-a.i u(1) a(1) l(9) x(0+0)\n.   .   BLOCK l(9)\n.   .   BLOCK-list\n.   .   .   CALLFUNC-init\n.   .   .   .   AS u(2) l(9) tc(1)\n.   .   .   .   .   NAME-a.autotmp_0001 u(1) a(1) l(9) x(0+0) class(PAUTO) esc(N) tc(1)\nused(1) a.S\n.   .   .   .   .   NAME-a.statictmp_0002 u(1) a(1) l(9) x(0+0) class(PEXTERN) f(1)\ntc(1) used(1) a.S\n...\n\nnotice that the raceread call has been lifted above the CALLFUNC-init. i believe that\nthe problem is the assumptions about OBLOCK that i outlined in my comments on CL\n76520045 and that the fix is what i outlined there too.\n\nthat means this is probably a duplicate of the underlying cause for \u003ca href=\"https://golang.org/issue/7561\"\u003eissue #7561\u003c/a\u003e, even\nthough 7561 itself has gone away.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-05-28T01:47:48Z",
	"updated_at": "2014-12-22T06:35:04Z"
}
