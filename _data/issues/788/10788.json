{
	"id": 75458595,
	"number": 10788,
	"state": "closed",
	"title": "x/mobile/bind: interface with exported method that takes a pointer to struct generates incorrect java binding",
	"body": "From https://groups.google.com/d/msg/golang-nuts/LzYlrZHkGQU/Xa8-QERRyDMJ\r\n\r\n\u003cpre\u003e\r\ntype TestStruct struct {\r\n Value string\r\n}\r\n\r\ntype TestInterface interface {\r\n DoSomeWork(s *TestStruct)\r\n}\r\n\u003c/pre\u003e\r\n\r\ngenerates \r\n\r\n\u003cpre\u003e\r\n   public static abstract class Stub implements TestInterface {\r\n            static final String DESCRIPTOR = \"go.demo.TestInterface\";\r\n            \r\n            private final go.Seq.Ref ref;\r\n            public Stub() {\r\n                ref = go.Seq.createRef(this);\r\n            }\r\n            \r\n            public go.Seq.Ref ref() { return ref; }\r\n            \r\n            public void call(int code, go.Seq in, go.Seq out) {\r\n                switch (code) {\r\n                case Proxy.CALL_DoSomeWork: {\r\n                    TestStruct param_s = in.readRef();  /* BUG: this should be TestStruct param_s = new TestStruct(in.readRef()) */\r\n                    this.DoSomeWork(param_s);\r\n                    return;\r\n                }\r\n                default:\r\n                    throw new RuntimeException(\"unknown code: \"+ code);\r\n                }\r\n            }\r\n        }\r\n\u003c/pre\u003e",
	"user": {
		"login": "hyangah",
		"id": 4999471,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "hyangah",
		"id": 4999471,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2015-05-12T22:05:51Z",
	"created_at": "2015-05-12T04:38:12Z",
	"updated_at": "2016-06-25T02:08:13Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
