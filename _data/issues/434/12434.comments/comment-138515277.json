{
	"id": 138515277,
	"body": "I believe tar is working properly here. A check for hdr.Size should occur *after* an attempt to read the data first. In this situation, the header properly encodes a size of 1015915 bytes, but the tar format itself is bad in that it doesn't contain any data after the header. This is an example of a \"valid\" tar file that is prematurely truncated.\r\n\r\n[Modifying the example to include a read](https://play.golang.org/p/TtOnnxTZrY), properly returns an io.ErrUnexpectedEOF due to a truncated stream.\r\n\r\nFurthermore, if we [modify the example](https://play.golang.org/p/GHPx40d6r2) to include a reader that artificially extends the file to a sufficient length, this reads properly.\r\n\r\nEven furthermore, appending 1987x (512B) blocks of all zeros to the tar data makes it properly parsible by the GNU version of tar.\r\n\r\nI recommend that we close this as \"working as intended\".",
	"user": {
		"login": "dsnet",
		"id": 6354026,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-08T10:50:22Z",
	"updated_at": "2015-09-08T11:09:39Z"
}
