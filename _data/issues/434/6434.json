{
	"id": 51285179,
	"number": 6434,
	"state": "closed",
	"title": "fmt: too large index breaks later indices",
	"body": "\u003cpre\u003ego tip (just after the 1.2 RC):\n\nWhat steps will reproduce the problem?\nCode (not in play because uses tip/1.2RC feature):\n\n    package main\n    import \u0026quot;fmt\u0026quot;\n    func main() { fmt.Printf(\u0026quot;%[3]s %[1]s %s\\n\u0026quot;, \u0026quot;woo\u0026quot;, \u0026quot;world!\u0026quot;) }\n\nWhat is the expected output?\n\n    %!s(BADINDEX) woo world!\n\nWhat do you see instead?\n\n    %!s(BADINDEX) %!s(BADINDEX) %!s(BADINDEX)\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n6g\n\nWhich operating system are you using?\n\nDarwin/amd64 (MacOS 10.8.5)\n\nWhich version are you using?  (run 'go version')\n\ngo version devel +ebd02fba267b Fri Sep 20 09:40:56 2013 -0700 darwin/amd64\n\nPlease provide any additional information below.\n\nThe badindex means that this might be deemed as \u0026quot;buggy code\u0026quot;, but I think it\n*should* have handled the subsequent _good_ index and only shown the BADINDEX for the\nfirst %[indexed]s parameter.\u003c/pre\u003e",
	"user": {
		"login": "philpennock",
		"id": 559098,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:35:31Z",
	"created_at": "2013-09-20T21:30:26Z",
	"updated_at": "2016-06-25T01:19:10Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
