{
	"id": 117691489,
	"number": 13314,
	"state": "closed",
	"title": "cmd/godoc: -analytics crashes with too many files open ",
	"body": "What version of Go are you using (go version)?\r\n`go version devel +f84420c Wed Nov 11 01:04:39 2015 +0000 darwin/amd64`\r\n\r\nWhat operating system and processor architecture are you using?\r\n`OS X 10.10.5`\r\n\r\nWhat did you do?\r\nRan `godoc -http :23432 -analysis type,pointer`\r\n\r\nWhat did you expect to see?\r\nGodoc running without errors.\r\n\r\nWhat did you see instead?\r\n```\r\npanic: imported[\"google.golang.org/grpc/benchmark/client\"].err = open /Users/thomas/go/src/google.golang.org/grpc/benchmark/client: too many open files\r\n\r\ngoroutine 1335 [running]:\r\ngolang.org/x/tools/go/loader.(*Config).Load(0xc8200b48c0, 0x871f80, 0x0, 0x0)\r\n\t/Users/thomas/go/src/golang.org/x/tools/go/loader/loader.go:533 +0x1ea3\r\ngolang.org/x/tools/godoc/analysis.Run(0xbd4b01, 0xc82017c170)\r\n\t/Users/thomas/go/src/golang.org/x/tools/godoc/analysis/analysis.go:378 +0xc0e\r\ncreated by main.main\r\n\t/Users/thomas/go/src/golang.org/x/tools/cmd/godoc/main.go:310 +0x1afb\r\n\r\ngoroutine 1 [IO wait]:\r\nnet.runtime_pollWait(0x194a010, 0x72, 0xc8200740a0)\r\n\t/go/go/src/runtime/netpoll.go:157 +0x60\r\nnet.(*pollDesc).Wait(0xc820546840, 0x72, 0x0, 0x0)\r\n\t/go/go/src/net/fd_poll_runtime.go:73 +0x3a\r\nnet.(*pollDesc).WaitRead(0xc820546840, 0x0, 0x0)\r\n\t/go/go/src/net/fd_poll_runtime.go:78 +0x36\r\nnet.(*netFD).accept(0xc8205467e0, 0x0, 0x194a108, 0xc820b6bf80)\r\n\t/go/go/src/net/fd_unix.go:408 +0x27c\r\nnet.(*TCPListener).AcceptTCP(0xc820302430, 0xc8205159e0, 0x0, 0x0)\r\n\t/go/go/src/net/tcpsock_posix.go:254 +0x4d\r\nnet/http.tcpKeepAliveListener.Accept(0xc820302430, 0x0, 0x0, 0x0, 0x0)\r\n\t/go/go/src/net/http/server.go:2138 +0x41\r\nnet/http.(*Server).Serve(0xc82103a9c0, 0x194a0d0, 0xc820302430, 0x0, 0x0)\r\n\t/go/go/src/net/http/server.go:1887 +0xb3\r\nnet/http.(*Server).ListenAndServe(0xc82103a9c0, 0x0, 0x0)\r\n\t/go/go/src/net/http/server.go:1877 +0x136\r\nnet/http.ListenAndServe(0x7fff5fbffcb4, 0x6, 0x1949038, 0xc820076cf0, 0x0, 0x0)\r\n\t/go/go/src/net/http/server.go:1967 +0x8f\r\nmain.main()\r\n\t/Users/thomas/go/src/golang.org/x/tools/cmd/godoc/main.go:314 +0x18fd\r\n\r\ngoroutine 17 [syscall, locked to thread]:\r\nruntime.goexit()\r\n\t/go/go/src/runtime/asm_amd64.s:1696 +0x1\r\n\r\ngoroutine 1284 [sleep]:\r\ntime.Sleep(0x2540be400)\r\n\t/go/go/src/runtime/time.go:59 +0xf9\r\ngolang.org/x/tools/godoc.(*Corpus).refreshMetadataLoop(0xc82017c000)\r\n\t/Users/thomas/go/src/golang.org/x/tools/godoc/meta.go:142 +0x5b\r\ncreated by golang.org/x/tools/godoc.(*Corpus).Init\r\n\t/Users/thomas/go/src/golang.org/x/tools/godoc/corpus.go:145 +0x8a\r\n```\r\n\r\nI know this error can be solved by increasing the limit, however maybe there should be a limit on how many files should be opened at the same time for analysing. Especially with a big $GOPATH/src folder it's easy to run into this error.",
	"user": {
		"login": "Thomasdezeeuw",
		"id": 3159064,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "alandonovan",
		"id": 8433140,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"closed_at": "2015-12-31T00:07:35Z",
	"created_at": "2015-11-18T21:58:53Z",
	"updated_at": "2015-12-31T00:07:57Z",
	"milestone": {
		"id": 1425772,
		"number": 34,
		"title": "Go1.6Maybe"
	}
}
