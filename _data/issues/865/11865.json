{
	"id": 97192596,
	"number": 11865,
	"state": "closed",
	"title": "spec: can take the address of map[x]",
	"body": "current golang cannot can take the address of map[x]. like this\r\n\r\n     m := map[int]int{}\r\n     v:= \u0026m[1] // it will compile error\r\n\r\nBut sometimes this is useful while valueType is struct, like this:\r\n\r\n     m := map[int]V{}\r\n     v, ok := \u0026m[1]\r\n     // ok = true if exists.\r\n     // ok = false if not exists\r\n    if ok {\r\n      v.x += 1\r\n      v.y += 1\r\n      v.z += 1\r\n    } else {\r\n      m[1] = V{x: 1, y: 1, z: 1}\r\n    }\r\n\r\nThis code is error for golang now,  m type must is map[int]*V, the valueType must is a pointer. pointer will increased memory fragmentation and increasing GC\r\n\r\n\r\n",
	"user": {
		"login": "runner-mei",
		"id": 1052632,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2015-07-25T05:30:12Z",
	"created_at": "2015-07-25T05:23:20Z",
	"updated_at": "2016-08-05T16:11:12Z"
}
