{
	"id": 53235767,
	"number": 9486,
	"state": "closed",
	"title": "x/mobile: byte slice causes application crash if after string in function parameters",
	"body": "What version of Go are you using \r\n`go version devel +c7eb966 Wed Dec 24 07:30:28 2014 +0000 darwin/amd64`\r\n\r\nWhat operating system and processor architecture are you using?\r\n`osx 10.9.5 cross compiled for arm on Android 5.0.1 Nexus 5`\r\n\r\nWhat did you do?\r\nTried to call a go function from java that takes a byte[] and a string. The inverse go to java call has the same issue. If the byte[] is preceded by an int, it behaves normally. \r\n\r\nWhat did you expect to see?\r\nfmt.Printf to get called\r\n\r\nWhat did you see instead?\r\nApplication crash, no error messages generated.\r\n\r\nTo reproduce, modify the libhello example by adding these functions\r\n```go\r\n// This ordering of the parameters works\r\nfunc OkFunc(someBytes []byte, str string) {\r\n\tfmt.Printf(\"Got a string %s and some bytes %v!\\n\", str, someBytes)\r\n}\r\n// This ordering causes a crash\r\nfunc CrashFunc(str string, someBytes []byte) {\r\n\tfmt.Printf(\"Got a string %s and some bytes %v!\\n\", str, someBytes)\r\n}\r\n```\r\n\r\nrun gobind, then back in java add this after the initialization \r\n```java\r\n// create a byte array, size/content isn't important \r\nbyte[] bytes = new byte[1024];\r\nfor(int i=0;i \u003c bytes.length; i++){\r\n    bytes[i] = 8; \r\n}\r\n\r\n// This one works\r\nHi.OkFunc(bytes, \"stuff\");\r\n// This one crashes\r\nHi.CrashFunc(\"stuff\", bytes);\r\n```\r\n       \r\n\r\n\r\n\r\n",
	"user": {
		"login": "ChrisSmith",
		"id": 680966,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "hyangah",
		"id": 4999471,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2015-01-14T19:09:18Z",
	"created_at": "2015-01-02T03:15:13Z",
	"updated_at": "2016-08-05T16:08:52Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
