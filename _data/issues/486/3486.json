{
	"id": 51280684,
	"number": 3486,
	"state": "closed",
	"title": "filepath.Walk broken",
	"body": "by **kfox1111**:\n\n\u003cpre\u003eBefore filing a bug, please check whether it has been fixed since the\nlatest release. Search the issue tracker and check that you're running the\nlatest version of Go:\n\nRun \u0026quot;go version\u0026quot; and compare against\n\u003ca href=\"http://golang.org/doc/devel/release.html\"\u003ehttp://golang.org/doc/devel/release.html\u003c/a\u003e  If a newer version of Go exists,\ninstall it and retry what you did to reproduce the problem.\n\nThanks.\n\nWhat steps will reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n1. create a tree of stuff in /tmp, make sure one directory with children is does not\nhave permissions for you to access.\n\nfilepath.Walk(\u0026quot;/tmp\u0026quot;, func f(path string, info os.Fileinfo, err error) {\n    if info.IsDir() \u0026amp;\u0026amp; err != nil {\n      //I don't care, keep going.\n      return filepath.SkipDir\n    } else {\n      //good stuff here\n      fmt.Printf(\u0026quot;Found %s\\n\u0026quot;, path)\n    }\n}\n\n\nWhat is the expected output?\nThe whole tree, excluding things you don't have permission to.\n\nWhat do you see instead?\nThe first permission denied cuts short the tree walk.\n\nFix?\nThis looks to be because filepath.walk only checks for SkipDir when err = nil.\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nWindows\n\nWhich version are you using?  (run 'go version')\n1\n\nPlease provide any additional information below.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:18:13Z",
	"created_at": "2012-04-06T17:53:58Z",
	"updated_at": "2016-06-24T22:17:26Z"
}
