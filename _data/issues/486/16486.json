{
	"id": 167255459,
	"number": 16486,
	"state": "closed",
	"title": "math/rand: convenience functions always use the same seed (1). at least use time.Now()",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo version go1.6.2 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nlinux/amd64\r\n\r\n3. What did you do?\r\nglobalRand in [math/rand](https://golang.org/src/math/rand/rand.go?s=4125:4157#L178) is always initialised with the constant seed 1. this is very unexpected. it should at least use time.Now().UnixNano() instead, else the random sequence is always the same.\r\n\r\neven most of the go programmers didn't notice this. **there are about 60 tests in the standard library that use \"math/rand\", but only 2 call rand.Seed() with time.Now().** as such they do not really test random, but the same sequence again and again.\r\n\r\n4. What did you expect to see?\r\npseudo-random numbers, different with every call.\r\n\r\n5. What did you see instead?\r\nthe same pseudo-random numbers on every call.\r\n\r\n",
	"user": {
		"login": "ProhtMeyhet",
		"id": 4989322,
		"type": "User",
		"site_admin": false
	},
	"comments": 10,
	"closed_at": "2016-07-25T04:14:26Z",
	"created_at": "2016-07-24T21:28:40Z",
	"updated_at": "2016-07-25T04:26:35Z"
}
