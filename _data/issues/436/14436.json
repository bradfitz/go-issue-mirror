{
	"id": 135135783,
	"number": 14436,
	"state": "open",
	"title": "x/image/font: make it easier to measure a string's bounds and draw it in a bounding box",
	"body": "This issue applies to github.com/golang/freetype, if that is still under development.\r\n\r\nI want to accomplish the following (superficially) easy tasks:\r\n\r\n* Given a string and a fully specified font/context, determine the rendered string's bounds, taking into account ascenders, descenders, etc.; something along the lines of `NSString`'s `-sizeWithAttributes:` method.\r\n* Given an appropriately sized rect, render a string in that rect, compensating for ascenders, descenders, etc; something like `NSString`'s `-drawInRect:withAttributes:` method.\r\n\r\nI will use this to render a simple, short string into a texture of just the right size, and then upload that texture onto a window for use as a label at a particular origin.\r\n\r\n`MeasureString` looks close, but it only provides the width, not the height. (And I don't see a way to get the line height / leading from a font.) And `DrawString` is close, but the dot's y offset is the baseline of the text, which I don't see a handy way to calculate.\r\n\r\nThe fact that these are top-level APIs in Cocoa suggests that these are common needs and that they cover a large portion of use cases. Maybe this should be handled with examples, or maybe with new fundamental APIs, or maybe with convenience APIs. I don't know enough to say.\r\n\r\n/cc @nigeltao \r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "nigeltao",
		"id": 8565232,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2016-02-20T23:52:20Z",
	"updated_at": "2016-02-21T10:38:54Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
