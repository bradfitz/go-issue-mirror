{
	"id": 51283626,
	"number": 5436,
	"state": "closed",
	"title": "cmd/ld: gdb crash for encoding/gob test",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n1. \u0026quot;go test -c encoding/gob\u0026quot;\n2. \u0026quot;gdb gob.test\u0026quot;\n\nWhat is the expected output? What do you see instead?\n\ngdb should start up with a prompt, ready to run the executable.  Instead, it (gdb!)\nsegfaults.\n\nPlease use labels and text to provide additional information.\n\nSeems to only fail on this test, gdb works on other test binaries just fine.\n\nRunning gdb under gdb and catching the segfault, there seems to be an infinite recursion\nhappening:\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x000000000073d818 in htab_find_with_hash ()\n(gdb) where\n#0  0x000000000073d818 in htab_find_with_hash ()\n#1  0x00000000005f2918 in ?? ()\n#2  0x00000000005f2a92 in ?? ()\n#3  0x00000000005f61f1 in ?? ()\n#4  0x00000000005f526f in ?? ()\n#5  0x00000000005f6203 in ?? ()\n#6  0x00000000005f526f in ?? ()\n#7  0x00000000005f6203 in ?? ()\n...\n#87304 0x00000000005f526f in ?? ()\n#87305 0x00000000005f6203 in ?? ()\n#87306 0x00000000005f5243 in ?? ()\n#87307 0x00000000005f90eb in ?? ()\n#87308 0x00000000005f86c3 in ?? ()\n#87309 0x00000000005fd3b5 in ?? ()\n#87310 0x00000000005fe337 in ?? ()\n#87311 0x000000000056f261 in ?? ()\n#87312 0x0000000000570d6b in ?? ()\n#87313 0x000000000056b3b5 in ?? ()\n#87314 0x000000000056b5cb in lookup_static_symbol_aux ()\n#87315 0x000000000056b9bd in lookup_symbol_in_language ()\n#87316 0x00000000005b30d0 in lookup_struct ()\n#87317 0x00000000004fdd9a in ?? ()\n#87318 0x00000000004ffe4d in gdbpy_lookup_type ()\n#87319 0x00000000007f4e3c in PyEval_EvalFrameEx ()\n#87320 0x00000000007f6fa0 in PyEval_EvalCodeEx ()\n#87321 0x00000000007f7072 in PyEval_EvalCode ()\n#87322 0x0000000000817120 in PyRun_FileExFlags ()\n#87323 0x0000000000817f4f in PyRun_SimpleFileExFlags ()\n#87324 0x00000000004f0631 in source_python_script_for_objfile ()\n#87325 0x00000000004f177d in ?? ()\n#87326 0x00000000004f1907 in gdbpy_load_auto_scripts_for_objfile ()\n#87327 0x000000000059d892 in ?? ()\n#87328 0x000000000059b6eb in catch_errors ()\n#87329 0x000000000059dfd4 in gdb_main ()\n#87330 0x0000000000469f8e in main ()\n\nChoking on some recursive struct, maybe?\n\nLinux ultimate.mtv.corp.google.com 3.2.5-gg1130 #1 SMP Mon Feb 4 02:25:47 PST 2013\nx86_64 x86_64 x86_64 GNU/Linux\n\nGNU gdb (GDB) 7.6-gg2\nThis GDB was configured as \u0026quot;x86_64-linux\u0026quot;.\u003c/pre\u003e",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:29:26Z",
	"created_at": "2013-05-09T19:59:07Z",
	"updated_at": "2016-06-24T22:39:43Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
