{
	"id": 51282200,
	"number": 4477,
	"state": "closed",
	"title": "encoding/pem: server fails with \"failed to parse key PEM data\"",
	"body": "\u003cpre\u003eI updated one of my servers from Go 1 to Go tip and it now fails to start:\n\nListen: Failed to load TLS keypair (cert=\u0026quot;/home/bradfitz/keys/xx/ssl.crt\u0026quot;,\nkey=\u0026quot;/home/bradfitz/keys/xx/ssl.key\u0026quot;): crypto/tls: failed to parse key PEM data\n\nThat error comes from crypto/tls.X509KeyPair:\n\nfunc X509KeyPair(certPEMBlock, keyPEMBlock []byte) (cert Certificate, err error) {\n....\n        var keyDERBlock *pem.Block\n        for {\n                keyDERBlock, keyPEMBlock = pem.Decode(keyPEMBlock)\n                if keyDERBlock == nil {\n                        err = errors.New(\u0026quot;crypto/tls: failed to parse key PEM data\u0026quot;)\n                        return\n                }\n...\n\n\nWithout attaching my private key to this bug, here's some debugging I added to\npem.Decode:\n\nfunc Decode(data []byte) (p *Block, rest []byte) {\n        println(\u0026quot;call pem: decode of \u0026quot;, len(data), \u0026quot;bytes\u0026quot;)\n        defer func() {\n                println(\u0026quot; ret decoded = \u0026quot;, p != nil, \u0026quot;rest=\u0026quot;, len(rest))\n        }()\n        // pemStart begins with a newline. However, at the very beginning of\n        // the byte array, we'll accept the start string without it.\n        rest = data\n        if bytes.HasPrefix(data, pemStart[1:]) {\n                rest = rest[len(pemStart)-1 : len(data)]\n        } else if i := bytes.Index(data, pemStart); i \u0026gt;= 0 {\n                rest = rest[i+len(pemStart) : len(data)]\n        } else {\n                println(\u0026quot;nil data\u0026quot;)     // hitting this\n                return nil, data\n        }\n\ncall pem: decode of  7862 bytes\n ret decoded =  true rest= 4972\ncall pem: decode of  4972 bytes\n ret decoded =  true rest= 2760\ncall pem: decode of  2760 bytes\n ret decoded =  true rest= 0\ncall pem: decode of  0 bytes\nnil data\n ret decoded =  false rest= 0\ncall pem: decode of  3272 bytes\n ret decoded =  true rest= 0\ncall pem: decode of  0 bytes\nnil data\n ret decoded =  false rest= 0\nListen: Failed to load TLS keypair (cert=\u0026quot;/home/bradfitz/keys/xxx/ssl.crt\u0026quot;,\nkey=\u0026quot;/home/bradfitz/keys/xxx/ssl.key\u0026quot;): crypto/tls: failed to parse key PEM\ndata\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:23:49Z",
	"created_at": "2012-12-01T02:04:50Z",
	"updated_at": "2016-06-24T22:29:11Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
