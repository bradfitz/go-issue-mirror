{
	"id": 139606870,
	"body": "This one is tricky. I was thrown by the R520, but that's being parsed as a symbol, so in amd64 terms, the error is caused by\r\n   ADDQ xxx, R1\r\n\r\nThe issue is that this is a syntax error, but is not caught as one because the operand parser has no context, and it is illegal to have a bare symbol like that except as a jump label. I made a tiny change to catch that case, and it failed on arm64 because of this obscure syntax:\r\n\r\n   CSINV\tCS, R1, R2, R3\r\n\r\nhere the CS is a magic word, not a register, that is parsing as TYPE_MEM. It really shouldn't be. We should fix that somehow or special-case it more precisely in the assembler - it works only by accident. If that's fixed, the fix can be made so that xxx is allowed only as a label and you get this nice error:\r\n\r\nx.s:2: illegal addressing mode for symbol xxx\r\n\r\n",
	"user": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-11T17:26:50Z",
	"updated_at": "2015-09-11T17:26:50Z"
}
