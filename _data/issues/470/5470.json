{
	"id": 51283684,
	"number": 5470,
	"state": "closed",
	"title": "cmd/gc: ICE on inlining of return make(T) as interface value",
	"body": "by **eikenb42**:\n\n\u003cpre\u003eLooks like a problem using make on a type that defines an interface? I've been able to\nsimplify the problem I saw down to 2 files. A main and a package.\n\nFiles under $GOPATH/src/\ntest/main.go\ntest/foo/foo.go\n\n-- in test/main.go --\npackage main\n\nimport \u0026quot;test/foo\u0026quot;\n\nfunc main() { foo.Test() }\n\n-- in test/foo/foo.go --\npackage foo\n\ntype Foo interface {\n\tHi() string\n}\n\nfunc Test() Foo { return make(tst) }\n\ntype tst map[string]bool\n\nfunc (r tst) Hi() string { return \u0026quot;Hi!\u0026quot; }\n\n-- output of 'go run main.go'\n$ go run main.go\n# command-line-arguments\nwalk [7f5000432238]\n.   MAKE l(5) tc(1)\n./main.go:3: undefined: foo.tst\n./main.go:5: tempname called with nil type\n./main.go:5: internal compiler error: walkexpr: switch 1 unknown op MAKE l(5) tc(1)\n\n\nNote that as a workaround, changing make(tst) to txt{} works.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 8,
	"closed_at": "2014-12-08T10:29:42Z",
	"created_at": "2013-05-14T23:47:16Z",
	"updated_at": "2016-06-24T22:40:06Z",
	"milestone": {
		"id": 1067200,
		"number": 12,
		"title": "Go1.1.1"
	}
}
