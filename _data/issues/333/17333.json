{
	"id": 180863151,
	"number": 17333,
	"state": "closed",
	"title": "doc: Effective Go should make it clear that values are *copied* in a range clause",
	"body": "Effective Go doesn't mention that the 2nd value in a `range` clause is actually a copy of that value. It appears that only https://tour.golang.org/moretypes/16 mentions this:\r\n\r\n\u003e When ranging over a slice, two values are returned for each iteration. The first is the index, and the second is a copy of the element at that index.\r\n\r\nI think this is important to mention as this makes iterate-and-modify loops very error prone: https://play.golang.org/p/mq9sz3O19J\r\n\r\n\r\n",
	"user": {
		"login": "Kegsay",
		"id": 7190048,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-10-04T17:02:01Z",
	"created_at": "2016-10-04T11:01:31Z",
	"updated_at": "2016-10-04T17:02:01Z"
}
