{
	"id": 51279195,
	"number": 2429,
	"state": "closed",
	"title": "go/doc examples, keep comments",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n\n1.goto \u003ca href=\"http://weekly.golang.org/pkg/sort/#Ints\"\u003ehttp://weekly.golang.org/pkg/sort/#Ints\u003c/a\u003e \n2.try add comments to example source file \n\u003ca href=\"http://weekly.golang.org/src/pkg/sort/example_test.go\"\u003ehttp://weekly.golang.org/src/pkg/sort/example_test.go\u003c/a\u003e\n3.rebuilt\n\nWhat is the expected output?\n\n▾ Example Code:\n\ns := []int{5, 2, 6, 3, 1, 4} // comment\nsort.Ints(s)\nfmt.Println(s)\n\nOutput:\n\n[1 2 3 4 5 6]\n\n\nWhat do you see instead?\n\n▾ Example Code:\n\ns := []int{5, 2, 6, 3, 1, 4}\nsort.Ints(s)\nfmt.Println(s)\n\nOutput:\n\n[1 2 3 4 5 6]\n\ncomments are not kept should they ?\nif I look at \u003ca href=\"http://weekly.golang.org/pkg/sort/#Search\"\u003ehttp://weekly.golang.org/pkg/sort/#Search\u003c/a\u003e\n\nx := 23\ni := sort.Search(len(data), func(i int) bool { return data[i] \u0026gt;= x })\nif i \u0026lt; len(data) \u0026amp;\u0026amp; data[i] == x {\n\t// x is present at data[i]\n} else {\n\t// x is not present in data,\n\t// but i is the index where it would be inserted.\n}\n\nand try to write a example:\n\n// 100\nfunc ExampleSearch_data() {\nx := 23\ni := sort.Search(len(data), func(i int) bool { return data[i] \u0026gt;= x })\nif i \u0026lt; len(data) \u0026amp;\u0026amp; data[i] == x {\n\tfmt.Println(data[i]) // x is present at data[i]\n} else {\n\tfmt.Println(data[i]) // x is not present in data,\n\t// but i is the index where it would be inserted.\n}\n}\n\nto \u003ca href=\"http://weekly.golang.org/src/pkg/sort/example_test.go\"\u003ehttp://weekly.golang.org/src/pkg/sort/example_test.go\u003c/a\u003e\n\nrebuilt output:\n\n▾ Example Code:\n\nx := 23\ni := sort.Search(len(data), func(i int) bool { return data[i] \u0026gt;= x })\nif i \u0026lt; len(data) \u0026amp;\u0026amp; data[i] == x {\n    fmt.Println(data[i])\n} else {\n    fmt.Println(data[i])\n\n}\n\nOutput:\n\n100\n\nto me comments are useful in examples code\u003c/pre\u003e",
	"user": {
		"login": "dupoxy",
		"id": 1143957,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2014-12-08T10:12:57Z",
	"created_at": "2011-11-08T11:50:31Z",
	"updated_at": "2016-06-24T21:20:12Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
