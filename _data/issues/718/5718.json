{
	"id": 51284082,
	"number": 5718,
	"state": "closed",
	"title": "database/sql: prepared statements are bound to connections, autoreconnection doesn't work",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\nBug originally submitted to one of the MySQL driver project until we realized it was an\nactual Go bug.\nOriginal bug report: \u003ca href=\"https://github.com/go-sql-driver/mysql/issues/98\"\u003ehttps://github.com/go-sql-driver/mysql/issues/98\u003c/a\u003e\n\nIf possible, include a link to a program on play.golang.org.\n1.  create a prepared statement\n2.  query the statement in a loop\n3.  while the queries are running, kill the DB connection\n\nWhat is the expected output?\nThe driver should auto-reconnect like it does if instead of sending using prepared\nstatements I query the database directly.\n\n\nWhat do you see instead?\nThe driver doesn't auto-reconnect.\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nOS X\n\nWhich version are you using?  (run 'go version')\ngo1.1.1 darwin/amd64\n\nPlease provide any additional information below.\n\nIt looks like the issue is that prepared statements are bound to a connection. In the\ncase where the connection is severed, the prepared statements don't get a new connection\nand keep on failing.\nThis is a big deal since in real life most DB queries are or should be prepared to avoid\nSQL injections and to improve performance. Furthermore many SQL high level libraries\nlike \u003ca href=\"https://github.com/eaigner/jet\"\u003ehttps://github.com/eaigner/jet\u003c/a\u003e rely on prepared statements.\u003c/pre\u003e",
	"user": {
		"login": "mattetti",
		"id": 113,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 15,
	"closed_at": "2014-12-08T10:31:14Z",
	"created_at": "2013-06-16T20:59:25Z",
	"updated_at": "2016-06-24T22:42:43Z"
}
