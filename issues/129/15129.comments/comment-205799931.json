{
	"id": 205799931,
	"body": "Hello,\r\n\r\nThank you for your report.\r\n\r\nI believe this is an operating system issue for a bug in top.\r\n\r\nThe program you wrote is technically an infinite loop (assuming time is infinite and thus can be slept in discreet quantities), and as such we cannot accept it as a bug report. It's unlikely that you want to write a program that just sleeps for a short amount of time, so you probably are writing another kind of program when you discovered this issue. FWIW, if you want to pause a goroutine, use \r\n\r\n    select {}\r\n\r\nIn the future, the best place to discuss this issue is on another forum, you can find more details on this page. https://github.com/golang/go/wiki/Questions\r\n\r\nTo the question at hand. Thank you for providing sample code, it is much appreciated. I have run your sample code and found that on my system top reports around 15% cpu usage for the test binary. _However_, for the overall system stats usage is about 3% as reported by top and by vmstat. This program generates somewhere between 5000 and 7000 context switches per second, waking roughly every 10 milliseconds, which is the resolution of the system timer on this machine. 3% cpu for 7k context switches / second is reasonable by my standards.\r\n\r\nI'm going to close this as working as intended for the moment as I do not believe the issue is with Go. If you disagree, please feel free to reopen it, but please consider first discussing your question via one of the links provided above.\r\n\r\nThanks\r\n\r\nDave",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-05T13:19:22Z",
	"updated_at": "2016-04-05T13:19:22Z"
}
