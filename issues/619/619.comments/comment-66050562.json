{
	"id": 66050562,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003eI looked at the code a bit, and I believe the problem is a race condition in \nallocating and deallocating finalizer tables. \n\nRight now there's no protection when adding a finalizer, so you could end up with a \nsituation where two threads call mfinal.c/addfinalizer at the same time. If this \nhappens when the finalizer table is full and needs to grow, you could get duplicate \ncalls to malloc and free. \n\nA work-around would be to remove the call to SetFinalizer, and be careful to close \nchannels and connections manuallly. Or to add protection to the finalizer table.\u003c/pre\u003e",
	"user": {
		"login": "hoisie",
		"id": 125547,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-03-01T19:36:13Z",
	"updated_at": "2014-12-08T10:05:17Z"
}
