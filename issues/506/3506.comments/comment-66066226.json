{
	"id": 66066226,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eHmm, I think I have found a culprit...\n\nIn strace there is:\n\n12188 stat64(\"/usr/lib/go/src/pkg/fmt\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\n12188 open(\"/usr/lib/go/src/pkg/fmt\", O_RDONLY|O_LARGEFILE|O_CLOEXEC) = 3\n12188 getdents64(3, /* 10 entries */, 4096) = 320\n12188 getdents64(3, /* 0 entries */, 4096) = 0\n12188 lstat64(\"/usr/lib/go/src/pkg/fmt/scan_test.go\", {st_mode=S_IFREG|0644,\nst_size=25834, ...}) = 0\n12188 lstat64(\"/usr/lib/go/src/pkg/fmt/scan.go\", {st_mode=S_IFREG|0644, st_size=30770,\n...}) = 0\n12188 lstat64(\"/usr/lib/go/src/pkg/fmt/stringer_test.go\", {st_mode=S_IFREG|0644,\nst_size=2156, ...}) = 0\n12188 lstat64(\"/usr/lib/go/src/pkg/fmt/format.go\", {st_mode=S_IFREG|0644, st_size=10125,\n...}) = 0\n12188 lstat64(\"/usr/lib/go/src/pkg/fmt/print.go\", {st_mode=S_IFREG|0644, st_size=27721,\n...}) = 0\n12188 lstat64(\"/usr/lib/go/src/pkg/fmt/doc.go\", {st_mode=S_IFREG|0644, st_size=7793,\n...}) = 0\n12188 lstat64(\"/usr/lib/go/src/pkg/fmt/export_test.go\", {st_mode=S_IFREG|0644,\nst_size=196, ...}) = 0\n12188 lstat64(\"/usr/lib/go/src/pkg/fmt/fmt_test.go\", {st_mode=S_IFREG|0644,\nst_size=22484, ...}) = 0\n12188 close(3)                          = 0\n\nI guess this is the code you use to check if the package needs to be recompiled.\n\nHowever even if I set timestamps on all directories and all source files, the fmt still\ngets recompiled, which I think is wrong (or at least it doesn't really make sense to\nhave compiled objects in the code).\n\nroot@howl:~# ls -ld /usr/lib/go/pkg/linux_386/fmt.a \n-rw-r--r-- 1 root root 817678 Apr  6 15:18 /usr/lib/go/pkg/linux_386/fmt.a\nroot@howl:~# ls -ld /usr/lib/go/src/pkg/fmt\ndrwxr-xr-x 2 root root 4096 Jan  1 01:01 /usr/lib/go/src/pkg/fmt\nroot@howl:~# ls -ld /usr/lib/go/src/pkg/fmt/*\n-rw-r--r-- 1 root root  7793 Jan  1 01:01 /usr/lib/go/src/pkg/fmt/doc.go\n-rw-r--r-- 1 root root   196 Jan  1 01:01 /usr/lib/go/src/pkg/fmt/export_test.go\n-rw-r--r-- 1 root root 22484 Jan  1 01:01 /usr/lib/go/src/pkg/fmt/fmt_test.go\n-rw-r--r-- 1 root root 10125 Jan  1 01:01 /usr/lib/go/src/pkg/fmt/format.go\n-rw-r--r-- 1 root root 27721 Jan  1 01:01 /usr/lib/go/src/pkg/fmt/print.go\n-rw-r--r-- 1 root root 30770 Jan  1 01:01 /usr/lib/go/src/pkg/fmt/scan.go\n-rw-r--r-- 1 root root 25834 Jan  1 01:01 /usr/lib/go/src/pkg/fmt/scan_test.go\n-rw-r--r-- 1 root root  2156 Jan  1 01:01 /usr/lib/go/src/pkg/fmt/stringer_test.go\n\n\nThis is a clearly regression from 0.60.x, because it worked before (but it didn't have\nto 'go' command at all).\n\nAnd one more observation:\n\nIf I remove src tree altogether, the go command don't even check if there are binary\nlibraries available and bail out:\n\nondrej@howl:~$ go build helloworld.go\nhelloworld.go:5:8: import \"fmt\": cannot find package\npackage runtime: import \"runtime\": cannot find package\n\nBut I can still compile the helloworld using 8g/8l combo just fine:\n\nondrej@howl:~$ /usr/lib/go/pkg/tool/linux_386/8g helloworld.go \nondrej@howl:~$ /usr/lib/go/pkg/tool/linux_386/8l helloworld.8  \nondrej@howl:~$ ./8.out \nHello, world!\n\nFrom my viewpoint there's something twisted in go command which needs to have sources\navailable at every possible moment.  If that's your design decision I can live with that\n(and copy the rest of the source tree to the package), but I little bit doubt about the\nfact that you always recompile all needed libraries every time.\u003c/pre\u003e",
	"user": {
		"login": "oerdnj",
		"id": 130731,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-04-11T08:31:26Z",
	"updated_at": "2014-12-08T10:18:20Z"
}
