{
	"id": 51276340,
	"number": 323,
	"state": "closed",
	"title": "Compiler segfault: Parallel assignments and maps don't mix.",
	"body": "by **parenthephobia**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n\n  package main\n\n  func main () {\n\ta := make(map[int] int);\n\tb := make(map[int] int);\n\tc := make(map[int] int);\n\tk := 1;\n\ta[k], b[k], c[k] = 1, 2, 3;\n  }\n\nI expected:\n\n  No output, but successful compilation.\n\nBut instead got:\n\n  The compiler segfaults without comment.\n\nWhat is your $GOOS?  $GOARCH?\n\n  linux, 386\n\nWhich revision are you using?  (hg identify)\n\n  I don't know at the moment. I did hg pull -u before reporting the bug, \nbut unfortunately the build is broken on my current revision.\n\nPlease provide any additional information below.\n\n  Presumably this is caused by the way maps are handled. It looks like Go \ndoesn't handle parallel assignments when some of the places being assigned \nto are maps.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:04:08Z",
	"created_at": "2009-11-24T08:26:12Z",
	"updated_at": "2016-06-24T19:08:21Z"
}
