{
	"id": 144901501,
	"number": 15044,
	"state": "closed",
	"title": "runtime: go gets stuck when running in a FreeBSD jail",
	"body": "\r\n## Go version\r\n1.6 (official freebsd pkg 1.6,1)\r\n\r\n## System\r\nFreeBSD 10.2 (10.2-RELEASE-p13).\r\nCommands executed in a jail.\r\n\r\n## Problem\r\nRunning any kind of go command (even something as simple as `go --help`) in a jail gets stuck and has to be killed with SIGKILL. There is no such problem when running `go` outside of a jail.\r\n\r\n## Trace\r\n\r\nRunning `ktrace go --help`:\r\n\r\n```\r\n 72810 go       CALL  sigaction(SIG 32,0x7fffffffea18,0)\r\n 72810 go       RET   sigaction 0\r\n 72810 go       CALL  clock_gettime(0x4,0xc820020750)\r\n 72810 go       RET   clock_gettime 0\r\n 72810 go       CALL  sigprocmask(SIG_SETMASK,0x7fffffffe970,0x7fffffffe9a0)\r\n 72810 go       RET   sigprocmask 0\r\n 72810 go       CALL  _umtx_op(0x8010ad330,0x11,0,0,0)\r\n```\r\n\r\nFull trace: [go-help-ktrace.txt](https://github.com/golang/go/files/197693/go-help-ktrace.txt)\r\n\r\nI have the exact same problem when executing in a jail a binary built with `go build` outside a jail.\r\n\r\nThis is the first time we are trying to run our Go software on FreeBSD, so I have no idea whether it is a FreeBSD problem or a Go problem. We did not have any problem when our software was in C, and have been using FreeBSD jails for some time now.\r\n",
	"user": {
		"login": "galdor",
		"id": 37804,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "OS-FreeBSD"
		}
	],
	"comments": 6,
	"closed_at": "2016-04-01T15:27:26Z",
	"created_at": "2016-03-31T13:29:01Z",
	"updated_at": "2016-04-01T15:27:26Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
