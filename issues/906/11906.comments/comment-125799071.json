{
	"id": 125799071,
	"body": "Another reason for fixed over floating point is that I want to cache the kerning pairs: layout adjustments between two glyphs like how \"AV\" has overlap between the \"A\" and the \"V\".\r\n\r\nOne simple cache table design is to key by the low N bits of the glyph indices of the two glyphs involved. Kerns involve two glyphs, so the table size is potentially quadratic in (1\u003c\u003cN), so you don't want N to be too large. On the other hand, I'd like to fit each cach table entry inside a uint32, so if a glyph index is a uint16, as truetype glyph indices are, then you'd store the 2 * (16 - N) high bits in each cache table entry, which leaves 2 * N bits for the actual kern distance, with maybe a sentinel value to indicate overflow.\r\n\r\nTruncating a 32-bit 26.6 fixed point value down to 2*N bits is easy. Again, it's a simple bit mask. Storing some subset of float32 values in less than 32 bits is not as trivial.",
	"user": {
		"login": "nigeltao",
		"id": 8565232,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-29T01:30:15Z",
	"updated_at": "2015-07-29T01:32:02Z"
}
