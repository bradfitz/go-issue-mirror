{
	"id": 77921705,
	"number": 10906,
	"state": "closed",
	"title": "time: Unix(sec, nanonsec) has bizarre undocumented behavior for large values of sec",
	"body": "The biggest value that can be passed as the first parameter of time.Unix(seconds, nanos) is\r\nmath.MaxInt64 - 62135596800. Sample code: http://play.golang.org/p/Ck5Ny1W-ud\r\n\r\n62135596800 is the number of seconds, accounting for leap days, that separate the start of the Go internal epoch (year 1) from the start of the Unix epoch (1970).\r\n\r\ntime.Unix() should not leak its implementation details in this way, or else the behavior should be clearly documented.\r\n\r\nIt does not seem unreasonable, given the current spec/docs, for someone to create a time.Unix(math.MaxInt64, 0) as a sentinel value, but this leads to strange and hard-to-debug behavior.\r\n\r\n",
	"user": {
		"login": "maxpoletto",
		"id": 411047,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2015-05-19T06:19:45Z",
	"created_at": "2015-05-19T04:07:16Z",
	"updated_at": "2016-06-25T02:09:11Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
