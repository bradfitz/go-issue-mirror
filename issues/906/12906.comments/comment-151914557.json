{
	"id": 151914557,
	"body": "If we look at `func sighandler(sig uint32, info *siginfo, ctxt unsafe.Pointer, gp *g)` in `signal_*platfom*.go`, we'll see the following check (ex. line 134 in `signal_amd64x.go`):\r\n```go\r\nif c.sigcode() == _SI_USER || flags\u0026_SigNotify != 0 {\r\n\tif sigsend(sig) {\r\n\t\treturn\r\n\t}\r\n}\r\n```\r\nWhich means, that we should send all the signals from a user or all signals with `_SigNotify`. In checks in  `sigdisable(), sigenable(), and sigignore()` the author wanted to ensure, that handlers can be installed for signals with `_SigNotify`, but it seems that the fact, that this flag is actual for signals from kernel only was not taken into account.",
	"user": {
		"login": "avdva",
		"id": 12461031,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-28T17:16:51Z",
	"updated_at": "2015-10-28T17:16:51Z"
}
