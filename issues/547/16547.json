{
	"id": 168458074,
	"number": 16547,
	"state": "closed",
	"title": "Proposal: Functions inside struct",
	"body": "Why golang not supporting functions inside a struct. If its a technical problem, why dont give class construct, which allows user to define functions inside the class, while compile time compiler can split it into outside if necessary.\r\n\r\n```\r\ntype Object class{\r\n    id       int\r\n    name string\r\n\r\n    func SomeOperations(){\r\n    }\r\n}\r\n```\r\n\r\nmust be equivalent to \r\n\r\n```\r\ntype Object struct{\r\n    id       int\r\n    name string\r\n}\r\n\r\nfunc (self *Object)SomeOperations(){\r\n}\r\n```\r\n\r\nI think its a unnecessary overhead to always type the stuct name whenever we need to right a function related to the struct. The problem is if I need to change the class name, and I am not using an IDE my life is hectic to refactor the code. This approach will give users from other OOP world to get adapted easily.\r\n\r\n",
	"user": {
		"login": "ysaakpr",
		"id": 20730186,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-07-30T17:41:04Z",
	"created_at": "2016-07-30T09:05:32Z",
	"updated_at": "2016-07-30T17:41:04Z",
	"reactions": {
		"total_count": 6,
		"-1": 6
	}
}
