{
	"id": 251139347,
	"body": "\u003e And heap profiling can show live objects and allocs but it is often difficult to discern garbage from regular heap allocated objects.\r\n\r\nIn the default \"-inuse_space\" mode, it shows *only* reachable objects, so there isn't any garbage to discern.\r\n\r\n\u003e A profile that records short lived objects and their allocation sites over a given duration could be a useful tool for identifying sources of garbage.\r\n\r\nHave you tried taking two heap profiles and using `go tool pprof -alloc_space -base \u003cbefore\u003e \u003cafter\u003e`?\r\n\r\nIf this doesn't solve the problem, could you take a look at my proposal at https://github.com/golang/go/issues/13463#issuecomment-235048896? The aim of that proposal is to more clearly surface sources of short-lived garbage.\r\n",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-03T15:33:22Z",
	"updated_at": "2016-10-03T15:33:22Z"
}
