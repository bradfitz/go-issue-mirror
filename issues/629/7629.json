{
	"id": 51286990,
	"number": 7629,
	"state": "open",
	"title": "gdb: cannot debug windows/386 binaries in wine/gdb due to internal gdb assert failure",
	"body": "\u003cpre\u003eWhat does 'go version' print?\ngo version devel +26aa53304a48 Fri Mar 07 16:08:12 2014 -0500 linux/amd64\n\nWhat steps reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\n1. Build a Go program emdash any Go program emdash for windows/386.\n2. wine --gdb program.exe\n3. Alternatively, wine --gdb --no-start program.exe, then attach the resultant gdb\nserver to a debugging frontend; same effect.\n\nWhat happened?\nxe: gdbproxy.c:2494: gdb_init_context: Assertion `gdbctx-\u0026gt;process == ((void *)0)\n\u0026amp;\u0026amp; de.dwProcessId == dbg_curr_pid' failed.\nwinedbg: Internal crash at 0xf7746430\n/tmp/winegdb.2uyltD:2: Error in sourced command file:\nRemote communication error.  Target disconnected.: Connection reset by peer.\n\nIf attaching to a frontend, the \u0026quot;Connection reset\u0026quot; line will appear in the\nfrontend and the others in the terminal where winedbg is being run.\n\nWhat should have happened instead?\n(standard gdb prompt and session)\n\nPlease provide any additional information below.\nNot sure if this affects windows/amd64 as well; that has its own problems working in\nwine/winedbg.\u003c/pre\u003e",
	"user": {
		"login": "andlabs",
		"id": 718242,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "OS-Windows"
		}
	],
	"comments": 3,
	"created_at": "2014-03-25T16:02:22Z",
	"updated_at": "2015-04-15T01:41:07Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
