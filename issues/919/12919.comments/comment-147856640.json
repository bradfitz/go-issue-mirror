{
	"id": 147856640,
	"body": "This particular format is unambiguous, since \"304 PM\" indicates a 1-2 digit hour followed by exactly 2 digits for minutes, then whitespace, then an AM/PM indicator. The problem is, when you're looking at a starting digit of 1 for the hour, you don't know whether you're dealing with hour 1, 10, 11, or 12. Without the AM/PM indicator (24 hour clock), we would have the same issue with starting digits of 0 or 1.\r\n\r\nOne way to resolve this would be to look at 304 as a special case, in which we gather 3-4 digits and then take the last 2 as minutes and the first 1-2 as the hour. 30405 could be treated the same way (5-6 digits). But then there's also 102, 106, 12006, 10206, 1022006, and so on. There are 5 variable width numeric fields and 5 corresponding fixed width numeric fields, plus 2 numeric year representations, so 5 * (2^4-1) * 3 + 5 * 2 = 235 unambiguous representations that we don't handle currently. Even more if you allow the variable width field to be somewhere other than at the front.\r\n\r\nStill, I can envision code that could handle all those situations gracefully. One option: when encountering a single digit format specifier, verify that the remaining adjacent numeric fields are fixed width, and look ahead to count the number of digits available. If there is an extra digit, parse 2, otherwise parse 1.\r\n\r\nIf you have adjacent variable width numeric fields in the format, such as \"34\", this should probably be an \"ambiguous layout\" error, at least when parsing.",
	"user": {
		"login": "mattharden",
		"id": 2703390,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-13T21:17:50Z",
	"updated_at": "2015-10-13T21:17:50Z"
}
