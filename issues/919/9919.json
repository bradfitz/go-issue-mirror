{
	"id": 58053094,
	"number": 9919,
	"state": "closed",
	"title": "math: Max(NaN, x) may return x instead of NaN (depending on the bit representation of NaN)",
	"body": "The following code: http://play.golang.org/p/uvj_pmygbE prints ```math.Max(NaN, 0)```, where NaN is obtained by either ```math.NaN()``` or ```a/a``` with ```a := 0.0```.\r\n\r\nIn the second case, the result is 0 instead of the expected NaN.\r\n\r\nThis issue is shared by ```math.Min```. However, ```math.IsNaN``` works fine for both NaN's.\r\n\r\nTested with go 1.4.2 on linux amd64 and with go 1.4.1 in the playground on nacl amd64p32.\r\n\r\n\r\n",
	"user": {
		"login": "barnex",
		"id": 423682,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2015-02-23T23:09:11Z",
	"created_at": "2015-02-18T10:54:21Z",
	"updated_at": "2016-06-25T02:01:11Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
