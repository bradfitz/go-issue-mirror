{
	"id": 51284385,
	"number": 5919,
	"state": "open",
	"title": "cmd/compile: missed escape analysis opportunity",
	"body": "\u003cpre\u003eEscape analysis says that s escapes in this function even though it doesn't:\n\nfunc f(s *string) {\n    *s = *s\n}\n\nIf f is called as f(\u0026amp;s), the compiler will (with inlining disabled) allocate s on\nthe heap even though it could be allocated on the stack. For types that don't contain\npointers, this doesn't happen. For example, if I change string to int, the parameter\nisn't considered to escape.\n\nA real-world example of when this might happen is when a function takes a pointer to a\nstring or slice and then re-slices it:\n\n*s = (*s)[n:]\u003c/pre\u003e",
	"user": {
		"login": "edsrzf",
		"id": 369904,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "dr2chase",
		"id": 1928999,
		"type": "User",
		"site_admin": false
	},
	"comments": 12,
	"created_at": "2013-07-19T02:35:14Z",
	"updated_at": "2015-07-18T16:16:43Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
