{
	"id": 92254809,
	"body": "I think while this is surprising, it isn't a bug as it works as documented in https://golang.org/pkg/fmt/:\r\n\"\"\"\r\nFor most values, width is the minimum number of runes to output, padding the formatted form with spaces if necessary.\r\n\r\n  0\tpad with leading zeros rather than spaces;\r\n\"\"\"\r\n\r\n\"% 08x\" applied to an argument of type []byte doesn't mean \"format the bytes in the argument with 8 hex characters per byte, separated by spaces.\"\r\n\r\nIt means \"format the bytes in the argument with 2 hex characters per byte, separated by spaces, and then pad the result with 0s on the left if the string has length less than 8.\"\r\n\r\nThus, fmt.Printf(\"% 04x\", []byte{}) first produces \"\" which is padded to \"0000\".\r\nAnd fmt.Printf(\"% 04x\", []byte{2}) first produces \"02\" which is padded to \"0002\".\r\n\r\nExamples: https://play.golang.org/p/lvP2PBEdJZ",
	"user": {
		"login": "paulhankin",
		"id": 1131212,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-13T07:46:04Z",
	"updated_at": "2015-04-13T07:46:04Z"
}
