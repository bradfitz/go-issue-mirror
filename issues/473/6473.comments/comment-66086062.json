{
	"id": 66086062,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eFor Test3, sure I am. And it works. Test2 isn't a unique type, it's just an alias of\nvoid (another typedef of void would be considered the same type in C).\n\nTest1 is a unique and honest type. It declares \"something\" that can be passed around as\na pointer, but not understandable by C.\n\nThese two types are considered different in C:\n\ntypedef struct Foo Foo;\ntypedef struct Bar Bar;\n\nYet Go translates both explicitly to [0]byte. The two should be separately translated to\n_Ctype_Foo _Ctype_Bar.\n\nStrangely in my example Test2 is given a type, but that type is not used. Test1 is a\nlegitiment type, yet none is generated or used.\n\nI guess to make this work I will have to continue lying to cgo. Although I don't\nconsider \"typedef struct Test1 Test1;\" a lie at all.\u003c/pre\u003e",
	"user": {
		"login": "lukescott",
		"id": 486224,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-10-18T19:09:24Z",
	"updated_at": "2014-12-08T10:35:45Z"
}
