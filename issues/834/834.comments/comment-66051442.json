{
	"id": 66051442,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eNot at all. Your patches to fix the Windows net package will be welcome.\n\nI understand your position from your perspective as web developer. However, as a\nsoftware developer my perspective, approach, and metric are a little different. I'm\nrunning four Go platforms: linux amd64, linux 386, windows (XP) 386, and windows (7)\n386, and I'd like to add windows (7) amd64. My plan is to run all Go code on all\nplatforms. I do daily builds and tests, and measure my progress by running ./all.bash.\n\nio/ioutil.TempFile() is a new function, released at the tip, that's been requested by\nyourself and several other people. The OS dependent code probably should be handled\nby a call to something like os.GetTempPath(), implemented in files perhaps named\nenv_unix.go and env_windows.go. The environment variable temporary path code\ninitially can be the same, except that env_windows.go has a TODO that refers to this\nissue and Windows GetTempPath() documentation. Once the revised design has been\nimplemented, the Windows contributors can submit a separate CL to fully implement\nenv_windows.go. Or the Go authors, may have a much better way to do it. Either way,\nit's time to stop digging the hole deeper.\u003c/pre\u003e",
	"user": {
		"login": "peterGo",
		"id": 4561296,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-06-04T18:55:04Z",
	"updated_at": "2014-12-08T10:06:02Z"
}
