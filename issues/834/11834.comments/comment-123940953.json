{
	"id": 123940953,
	"body": "Thanks.\r\n\r\nThe `allocMessage` line is printed each time `Pool.New` is called, with the total number of times it has ever been called. The objects being allocated for the pool are small: 48 bytes according to a heap profile viewed with `-alloc_objects`, though the throughput is high (`-alloc_space` shows 30 GB over about 20 seconds if I'm understanding correctly, which maybe seems even too high, so maybe I'm not).\r\n\r\nThere are other sources of allocations in the program. `-alloc_objects` shows `allocMessage` as being only 1% weight, but `-alloc_space` shows it as 88% of the space. (This doesn't make any sense to me given that its allocations are small. Do you understand what these flags cause pprof to show you, exactly?)\r\n\r\nRegarding the timing of clearing the pools: it appears the code [here](https://github.com/golang/go/blob/1942e3814bd99ff9466bcbc82eb63d3fab130484/src/runtime/mgc.go#L897-L902) stops the world before clearing, and my understanding is that that happened last in the GC process. But I am probably wrong; I haven't looked closely, and the only [design doc](http://golang.org/s/go14gc) I could find seems like maybe it's out of date?\r\n\r\nI will go read #11677, thanks for the pointer.",
	"user": {
		"login": "jacobsa",
		"id": 202895,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-23T02:50:18Z",
	"updated_at": "2015-07-23T02:50:18Z"
}
