{
	"id": 130500477,
	"body": "Our basic guideline for SysProcAttr is that we only add operations that must take place between the fork and execve calls.  As far as I know bind mounts are not such a call: you could instead exec a small helper program that did the bind mounts, and then execed the real program.  Running that small helper program is inconvenient, but better than adding new obscure features to the syscall package.\r\n\r\nIt's not possible to have a function that runs between fork and exec, because many Go operations are not available during that time.  Only very carefully written Go code can happen in that space.  Permitting an arbitrary function would be an invitation to bugs and a severe restriction on what we could do going forward.\r\n\r\nIs there any reason a bind mount has to happen between fork and execve?",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-13T01:38:31Z",
	"updated_at": "2015-08-13T01:38:31Z"
}
