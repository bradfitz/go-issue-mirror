{
	"id": 148017351,
	"number": 15273,
	"state": "closed",
	"title": "json Marshl misbehavior with a type pointing to a slice",
	"body": "using version 1.4 or 1.3 on any operating system  , this code snippet :\r\n\r\npackage main\r\n\r\nimport(\r\n\t\"fmt\"\r\n\t\"encoding/json\"\r\n)\r\n\r\ntype me struct{\r\n\tName\tstring\r\n\tFee int64\r\n}\r\n\r\ntype Mes []me\r\n\r\ntype base struct{\r\n\tId int64\t`json:\"id\"`\r\n\tMes `json:\"mes\"`\r\n}\r\n\r\nfunc main(){\r\n\tb := []base{{Id:1},{Id:2}}\r\n\tb[0].Mes = append(b[0].Mes , me{Name : \"n1\", Fee :63}, me{Name : \"n2\", Fee :88})\r\n\tb[1].Mes = append(b[1].Mes , me{Name : \"m1\", Fee :63})\r\n\tif bt , err := json.Marshal(b);err !=nil{\r\n\t\tfmt.Println(err)\r\n\t} else {\r\n\t\tfmt.Println(string(bt))\r\n\t}\r\n}\r\n\r\nfunc (m Mes) MarshalJSON() ([]byte, error) {\r\n\t\treturn []byte(fmt.Sprint(len(m))), nil\r\n}\r\n\r\nexpected result :\r\nexpected result :\r\n[{\"id\":1,\"mes\":2},{\"id\":2},\"mes\":1]\r\n\r\nactual result :\r\n[2,1]\r\n\r\ni.e. not only the Mes slice is without a variable name, but the Marshaller totally ignores the Id element .\r\n\r\n ",
	"user": {
		"login": "GuyBrand",
		"id": 5917810,
		"type": "User",
		"site_admin": false
	},
	"comments": 18,
	"closed_at": "2016-04-14T14:25:19Z",
	"created_at": "2016-04-13T10:32:30Z",
	"updated_at": "2016-04-15T12:16:12Z"
}
