{
	"id": 179954181,
	"number": 17273,
	"state": "closed",
	"title": "reduce time of fetching record ",
	"body": "  \r\ni am using revel framework with ubuntu  to make a web service which executes a statement and fetches the result . the result set contains 20-25 row . my requirement is to reduce the time to less than 50 ms but now the time is 400-600 ms . \r\nthe same service in php takes around 120 ms . \r\n\r\ni have made connection in app.init file as follows . this file excute once on starting the service first time . i made this so that the connection is persistant and time reduce in subsequent hits : \r\n**app.init.go**\r\nvar Environment *ora.Env\r\nvar Serv *ora.Srv\r\nvar OracleSes *ora.Ses\r\nfunc InitDB() {\r\nServiceConfig := ora.SrvCfg{Dblink: \"//hostname/sid\"}\r\n \r\n   err:= (*ora.StmtCfg).SetPrefetchRowCount(prefetchRowCount)\r\n   fmt.Println(err)\r\n\r\n\tSesConfg := ora.SesCfg{\r\n\t\tUsername: \"username\",\r\n\t\tPassword: \"password\",\r\n\t}\r\n    Environment, Err = ora.OpenEnv(nil)\r\n\t//defer Environment.Close()\r\n\tif Err != nil {\r\n\t\tfmt.Println(Err)\r\n\t}\r\n\tServ, Err  = Environment.OpenSrv(\u0026ServiceConfig)\r\n\t//defer Serv.Close()\r\n\r\n\tif Err != nil {\r\n\t\tfmt.Println(Err)\r\n\t}\r\n \tOracleSes, Err  = Serv.OpenSes(\u0026SesConfg)\r\n\t//defer Ses.Close()\r\n\tif Err != nil {\r\n\t\tpanic(Err)\r\n\t}\r\n}\r\n\r\n\r\nnow in my other file where i used app.OracleSes object to execute my query and fetch the result : \r\n\r\n\r\nfunc GetGrouplist() {\r\n\r\n \t\ttime6 := time.Now()\r\n \t\tquerystr := \"call myprocedure(:IN_GRP_ID,:OUT_CUR_OFR)\"\r\n \t\tvar IN_GRP_ID int64\r\n\t\tIN_GRP_ID = 34\r\n \r\n\t\tstmtProcCall, err := app.OracleSes.Prep(querystr)\r\n\t\t//\tdefer stmtProcCall.Close()\r\n\t\tif err != nil {\r\n\t\t\tfmt.Println(err)\r\n\t\t}\r\n\t\tprocRset := \u0026ora.Rset{}\r\n\t\t_, err = stmtProcCall.Exe(IN_GRP_ID, procRset)\r\n\t\ttime5 := time.Now()\r\n\t\tfmt.Printf(\"Main total after query  %v \\n\", time5.Sub(time6))\r\n\t\tif err != nil {\r\n\t\t\tfmt.Println(err)\r\n\t\t}\r\n\t\tif procRset.IsOpen() {\r\n  \t\t\tfor procRset.Next() {\r\n\t\t\t\ttime3122 :=time.Now()\r\n\t\t\t\t//-----------------------------------------------------------------------------------\r\n\t\t\t\trowdata := make(map[string]interface{})\r\n\t\t\t\tcol := procRset.ColumnNames\r\n\t\t\t\tfor i, y := range col {\r\n\t\t\t\t\trowdata[y] = procRset.Row[i]\r\n\t\t\t\t}\r\n\t\t\t\t//start for additional info\r\n\t\t\t\ttime322 :=time.Now()\r\n\t\t\t\tfmt.Printf(\"Main total procRset.Next() GRP_NAME %v \\n\", time322.Sub(time3122))\r\n \t\t\t}\r\n\t\t\ttime152 := time.Now()\r\n\r\n\t\t\tif procRset.Err != nil {\r\n\t\t\t\tfmt.Println(procRset.Err)\r\n\t\t\t}\t \r\n\t\t}\t \r\n}\r\n\r\ni read that increasing row prefetch size may help but i have two doubt \r\n1. my row result size is 20-25 rows\r\n2 how to increase the prefetch row size programitically . \r\n3. i noticed that while fetching the results the following code snippet takes more time : \r\n\r\n     \t\t\tfor procRset.Next() {\r\n\t\t\t\ttime3122 :=time.Now()\r\n\t\t\t\t\r\n \t\t\t\trowdata := make(map[string]interface{})\r\n\t\t\t\tcol := procRset.ColumnNames\r\n\t\t\t\tfor i, y := range col {\r\n\t\t\t\t\trowdata[y] = procRset.Row[i]\r\n\t\t\t\t}\r\n\t\t\t\t//start for additional info\r\n\t\t\t\ttime322 :=time.Now()\r\n\t\t\t\tfmt.Printf(\"Main total procRset.Next() GRP_NAME %v \\n\", time322.Sub(time3122))\r\n  \r\n \t\t\t}\r\n\r\n\r\ni m new to golang so please help \r\n ",
	"user": {
		"login": "kritika1439",
		"id": 20722329,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2016-09-29T14:22:41Z",
	"created_at": "2016-09-29T05:12:15Z",
	"updated_at": "2016-09-29T14:22:41Z"
}
