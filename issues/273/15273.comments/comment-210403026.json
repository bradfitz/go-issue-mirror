{
	"id": 210403026,
	"body": "This sample IS working according to spec, and therefore, the solution is\nsimple, you just:\ny, _ := b2.M1.MarshalJSON() (or M2).\n\nWhen I json:\"-\" I am telling the system to ignore Mes1.\nProbably, reflection resolved \"how many anonymous public members are there\"\nfirst, and then ignores (ad suggested by the \"-\") the Mes1.\n\nI don't mind this \"dirty trick\" at all, as long as I know it is according\nto spec, and will not be changed in the future, leaving me with a broken\nprogram.\n\nI can still down the json package, and see if that's the case, but that\nwill not promise me future comparability either.\n\nSo a maybe this is not a \"bug\", but rather :\n\"A HOLE IN THE SPEC\"\n\nAND I don't know if those are entitled to be here, do you?\n\nOn Fri, Apr 15, 2016, 10:24 kostya-sh \u003cnotifications@github.com\u003e wrote:\n\n\u003e Probably better to ask this question on a forum (\n\u003e https://golang.org/wiki/Questions), but here is a short explanation:\n\u003e http://play.golang.org/p/Ka2cqCnYzW\n\u003e\n\u003e â€”\n\u003e You are receiving this because you authored the thread.\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/15273#issuecomment-210326501\u003e\n\u003e\n",
	"user": {
		"login": "GuyBrand",
		"id": 5917810,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-15T10:17:38Z",
	"updated_at": "2016-04-15T10:17:38Z"
}
