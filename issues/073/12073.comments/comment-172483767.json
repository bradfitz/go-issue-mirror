{
	"id": 172483767,
	"body": "Of course the alternative is to add a WriteFunc member to Writer. This is\nsomewhat messy and ties the implementation to a single way of doing things,\nbut may be best, given the flag issue.\n\nOn Mon, Jan 18, 2016 at 10:25 AM, \u003cmpvl@golang.org\u003e wrote:\n\n\u003e Changing the default is not an option, imo. CJK scripts are not the only\n\u003e one that vary in width. In fact, even the width ratios varies for CJK\n\u003e depending on the font used. For someone who's primary development\n\u003e environment is C, J, or K the 2:1 ratio is very likely. For users of\n\u003e Latin-oriented fixed-width fonts, for example, it is not. (I believe it is\n\u003e 5/3:1.) Furthermore, there are also characters that should be mapped to\n\u003e zero width and characters for which it is unclear to which width they\n\u003e should be mapped in general. Overall it is very hard, if not impossible, to\n\u003e come up with a single mapping that works across the board.\n\u003e\n\u003e What I could imagine, though, is allowing tabwriter to have an optional\n\u003e interface that maps the length of an element or single character. It seems\n\u003e hard to extend the current NewWriter function to add this. I can imagine,\n\u003e though, adding a New function that takes an option argument:\n\u003e\n\u003e New(w io.Writer, opts ...Option) *Writer\n\u003e\n\u003e type Option ...\n\u003e\n\u003e func Padding(n int) Option\n\u003e func TabWidth(width ...int) Option  // would allow different widths per\n\u003e column\n\u003e func MinWidth(width ...int) Option\n\u003e func PadChar(r rune) Option\n\u003e\n\u003e func WidthFunc(func(cell []byte) int) Option\n\u003e\n\u003e Example:\n\u003e\n\u003e tabwriter.New(w, tabwriter.TabWidth(30),\n\u003e tabwriter.WidthFunc(width.FixedWidthEastAsian))\n\u003e\n\u003e The flags are, unfortunately, not typed, otherwise they could be options.\n\u003e This is the biggest problem with adopting this API, I think. Haven't given\n\u003e it much thought, though. In the worst case, this package could be copied\n\u003e into the text repo, but that would be lame. I rather not do that.\n\u003e\n\u003e Something like that. That is quite an addition to the current package,\n\u003e even though it is only a new API wrapper, so that probably requires a\n\u003e proposal. WidthFunc is defined on the entire cell, instead of per rune, to\n\u003e be able to handle contextual sizes (such as Hangul rendering for decomposed\n\u003e Jamo in Korean).\n\u003e\n\u003e Note that the golang.org/x/text/width package also has support for\n\u003e East-Asian width. This package could provide implementations of the\n\u003e interface for tabwriter. All the data is there.\n\u003e Similarly a package for Arabic Shaping could provide approximate widths\n\u003e for Arabic (don't actually know if there is such a thing as fixed-width\n\u003e Arabic).\n\u003e\n\u003e\n\u003e On Mon, Jan 18, 2016 at 7:34 AM, zhangwei_cs \u003cnotifications@github.com\u003e\n\u003e wrote:\n\u003e\n\u003e\u003e Hello, everyone, I meet the same problem of printing CJK words, so I have\n\u003e\u003e to write a custom tabwriter (WeiZhang555/tabwriter\n\u003e\u003e \u003chttps://github.com/WeiZhang555/tabwriter\u003e).\n\u003e\u003e It uses a very similar Golang git repository \"\n\u003e\u003e github.com/moznion/go-unicode-east-asian-width\" and only changes little\n\u003e\u003e code: here\n\u003e\u003e https://github.com/WeiZhang555/tabwriter/blob/master/tabwriter.go#L408-L413\n\u003e\u003e and here\n\u003e\u003e https://github.com/WeiZhang555/tabwriter/blob/master/tabwriter.go#L388-L404.\n\u003e\u003e You can regard this as a POC.\n\u003e\u003e\n\u003e\u003e so the question is:\n\u003e\u003e 1. Do you think this is OK or not? I mean changing the default width\n\u003e\u003e calculation method?\n\u003e\u003e 2. The proposal mentioned custom CellWidth calculation method, I think it\n\u003e\u003e can also give me some help, why you say this can't be implemented ?\n\u003e\u003e\n\u003e\u003e â€”\n\u003e\u003e Reply to this email directly or view it on GitHub\n\u003e\u003e \u003chttps://github.com/golang/go/issues/12073#issuecomment-172439316\u003e.\n\u003e\u003e\n\u003e\n\u003e\n",
	"user": {
		"login": "mpvl",
		"id": 6445383,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-18T10:01:52Z",
	"updated_at": "2016-01-18T10:01:52Z"
}
