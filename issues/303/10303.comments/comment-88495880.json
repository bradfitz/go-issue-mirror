{
	"id": 88495880,
	"body": "Hi @RLH!\r\n\r\nAs discussed on https://groups.google.com/forum/#!msg/golang-dev/JO99bwdOICs/oV3p-vaBbeEJ and https://groups.google.com/forum/#!msg/golang-dev/qvOqcmAkKnA/CcdW-ogVgrYJ at length (and perhaps in other places), this effectively kills the performance of a number of cgo libraries.\r\n\r\nThe two main examples are people hoping to use fast math libraries written in C, and in my case, people who want to implement io.Reader and io.Writer in C. There is no way to implement an io.Reader or an io.Writer using a cgo library, given what you say, without adding forced (and imo unnecessary) memory copies, which will dramatically slow performance. There's no way to require that all byte slices passed to my cgo io.Reader/io.Writer were originally allocated with C.malloc or equivalent.\r\n\r\nThe discussion in both threads seemed to indicate that this might be a good point, and the Go team was considering another way.",
	"user": {
		"login": "jtolds",
		"id": 109603,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-01T14:04:57Z",
	"updated_at": "2015-04-01T14:04:57Z"
}
