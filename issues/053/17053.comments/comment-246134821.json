{
	"id": 246134821,
	"body": "Like what I'm seeing so far!\r\n\r\nI wonder if the ACME configuration should be in a separate struct value -- do we want to tether the http.Server type to ACME concretely?\r\n\r\nOne of the requests we've had in Caddy is to abstract the way certificates are `Obtain()`ed and `Renew()`ed -- in other words, an interface with approximately these two methods. An ACME client would be one implementation, a hashicorp/vault implementation might be another, etc. So I wonder if, instead, there should be some sort of interface type (`TLSManager`? Not sure what you'd call it), which some type `tls.ACMEClient` implements (or something like that).\r\n\r\nIn fact, thinking on these lines, it might be beneficial to drop down to the `tls` package somehow when working with ACME. In other words, you create a TLS listener that has some notion of ACME, but the HTTP server doesn't care. It's just one application of TLS and uses that listener and goes about its usual business.\r\n\r\nFWIW, In Caddy I found myself writing essentially a wrapper type over tls.Config that specifies all the ACME stuff and makes the GetCertificate callback, etc. It all happens within TLS (not just HTTPS), so how about an easy way to make an ACME-capable TLS listener that you pass into `http.Serve()`?",
	"user": {
		"login": "mholt",
		"id": 1128849,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 14,
		"+1": 14
	},
	"created_at": "2016-09-10T20:09:45Z",
	"updated_at": "2016-09-10T20:14:17Z"
}
