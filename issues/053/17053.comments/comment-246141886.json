{
	"id": 246141886,
	"body": "As soon as it interacts cleanly and easily with `net/http`, I don't see \"being in the standard library\" as adding much convenience. You're basically saving one import line to users. IOW, given the code in https://github.com/golang/go/issues/17053#issuecomment-246138060, I don't think we can say that this is a lot less convenient:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n    \"crypto/tls\"\r\n    \"log\"\r\n    \"net/http\"\r\n    \"golang.org/x/crypto/acme\"\r\n)\r\n\r\nfunc main() {\r\n    http.HandleFunc(\"/\", websiteHandler)\r\n    var srv http.Server\r\n    log.Fatal(srv.Serve(\u0026acme.Listener{\r\n        Domain:   \"foo.com\",\r\n        Provider: acme.LetsEncrypt,\r\n        AgreeTOS: acme.YesIAgreeTOS,\r\n    }))\r\n}\r\n```\r\n\r\nAt the end of the day, must users would be copy\u0026pasting it anyway and start building upon it.\r\n\r\nI'm not against inclusion (though ACME is still in draft, as discussed). But I can't see inclusion as providing such a big value, given this smooth integration.",
	"user": {
		"login": "rasky",
		"id": 1014109,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 14,
		"+1": 14
	},
	"created_at": "2016-09-10T21:37:47Z",
	"updated_at": "2016-09-10T21:37:47Z"
}
