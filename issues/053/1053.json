{
	"id": 51277285,
	"number": 1053,
	"state": "closed",
	"title": "Windows: file name patterns in command line arguments must be expanded",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\nCall a Go program that accepts file name arguments with a wildcard\n(e.g. foo *.png)\n\nWhat is the expected output?\nUnder Unix-like platforms, the shell expands wildcards and gives the expanded filenames\nas arguments to the program.\n\nWhat do you see instead?\nUnder Windows, the program instead receives the *unexpanded* wildcard.\nHowever, there is no equivalent to glob(3) in the standard library.\n\nWhat is your $GOOS?  $GOARCH?\nwindows / 386\n\nWhich revision are you using?  (hg identify)\nJoe Poirier's experimental Win32 build from 2010-08-04.\n\nPlease provide any additional information below.\nI have written a func Glob(patterns []string) ([]string, os.Error) that can be called\nsimply with flag.Args() as an argument and returns an expanded list. It uses the\nFindFirstFile, FindNextFile and FindClose WinApi calls, thus it only works under Win32\n(see attachment).\n\nSomething like this should be added to the standard library. \n\nA unix implementation could interface with glob(3) from libc via cgo. I have a prototype\nlying around if somebody is interested.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/1053/0/w32glob.go\"\u003ew32glob.go\u003c/a\u003e (965 bytes)",
	"user": {
		"login": "bsiegert",
		"id": 866330,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:06:49Z",
	"created_at": "2010-08-26T11:14:35Z",
	"updated_at": "2016-06-24T19:19:29Z"
}
