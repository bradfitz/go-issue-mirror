{
	"id": 66079706,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eFigured it out.\n\nThe inlining code uses fn-\u003edcl to make copies of variables in the function being\ninlined. Since this case of inlining happens after compile, dcl will be purged of all\nvariables that were optimized away. If the optimization for the function and the wrapper\ndiffers in what variables are removed, you end up with operations on removed variables,\nwhich will clobber the return address.\n\nThis is also a risk in 6g. The only reason 8g is affected is that the optimizer doesn't\nremove tmp in the wrapper. There's probably a way to construct a function which has the\nsame effect in 6g.\u003c/pre\u003e",
	"user": {
		"login": "DanielMorsing",
		"id": 545573,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-05T14:15:02Z",
	"updated_at": "2014-12-08T10:29:56Z"
}
