{
	"id": 66058120,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eWhy do you claim that the loops are equivalent?\n\nInserting the loop invariants into your code fragments:\n\nfunc RangeClause() {\n\tif jmax \u0026lt; NCh \u0026\u0026 jmin \u0026lt; NCh {\n\t\t// loop invariant\n\t\tif (jmax \u0026lt; NCh) \u0026\u0026 (0 \u0026lt;= jmin \u0026\u0026 jmin \u0026lt;= jmax \u0026\u0026 jmax \u0026lt;= len(Mvect)) {\n\t\t\tfor _, Mval := range Mvect[jmin:jmax] {\n\t\t\t\tm += EffectiveBW * math.Log2(1+beta*Mval/float64(nARBm))\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunc ForClause() {\n\tif jmax \u0026lt; NCh \u0026\u0026 jmin \u0026lt; NCh {\n\t\t// loop invariant\n\t\tif (jmax \u0026lt; NCh) \u0026\u0026 (jmax \u0026lt;= len(Mvect)) {\n\t\t\tfor j := jmin; j \u0026lt; jmax; j++ {\n\t\t\t\tm += EffectiveBW * math.Log2(1+beta*Mvect[j]/float64(nARBm))\n\t\t\t}\n\t\t}\n\t}\n}\n\nClearly, for jmin \u0026gt; jmax the ForRange and ForClause code fragments are not\nnecessarily equivalent. For example, jmin = 2, jmax = 1 where NCh = 7, len(Mvect) = 6.\n\nYou don't tell us what the values of the loop invariant variables were at the point of\nfailure.\u003c/pre\u003e",
	"user": {
		"login": "peterGo",
		"id": 4561296,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-08-16T13:34:49Z",
	"updated_at": "2014-12-22T06:02:34Z"
}
