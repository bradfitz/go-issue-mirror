{
	"id": 227925427,
	"body": "\u003e The right fix for this may be to rewrite the entire package to use go/types, now that go/types is in the stdlib.\r\n\r\nRight now, `go/doc` has a very distinguishable property that it can work on a single package without needing to look at any of its dependencies (in fact, they could be missing completely). Would that property be preserved if it's built on top of `go/types` (as far as I can tell, it would not)? Would we want to preserve it?\r\n\r\nThere are certain things that `go/doc` cannot currently do because it requires knowing about dependencies (for example, listing all methods of a type, when some of the methods are coming from an embedded type which is defined in a dependency).\r\n\r\nAnother point, the package is currently described as `Package doc extracts source code documentation from a Go AST.`, that would no longer be very accurate if it's re-written on top of `go/types`.",
	"user": {
		"login": "shurcooL",
		"id": 1924134,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-23T01:27:52Z",
	"updated_at": "2016-06-23T01:42:37Z"
}
