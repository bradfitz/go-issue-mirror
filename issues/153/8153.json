{
	"id": 51287761,
	"number": 8153,
	"state": "closed",
	"title": "runtime/pprof: spurious prints during profiling on arm (about 1 in 15 minutes)",
	"body": "\u003cpre\u003eFrom Ignacio Grande on golang-nuts,\n\nOn Go 1.3rc1, ARM + profiling yields:\n\nunexpected return pc for fmt.(*ss).doScanf called from 0x1\n\n\u0026quot;To reproduce the steps I simply compile it and execute it with no arguments. In a\nfew seconds you should see some of those unexpected errors on screen, mixed with the\nCount messages.\u0026quot;\n\nRepro code \u0026amp; data: \u003ca href=\"https://db.tt/ogMKqKi5\"\u003ehttps://db.tt/ogMKqKi5\u003c/a\u003e\n\nI confirmed this behavior with Go tip (b476a7d) on a Chromebook with a Debian chroot.\n\nCode, for easier linking is: \u003ca href=\"http://play.golang.org/p/JSdMUdGIrW\"\u003ehttp://play.golang.org/p/JSdMUdGIrW\u003c/a\u003e\n\nNo unsafe, no races (no goroutines).\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 17,
	"closed_at": "2014-12-08T10:45:14Z",
	"created_at": "2014-06-04T21:53:34Z",
	"updated_at": "2016-06-25T01:35:56Z",
	"milestone": {
		"id": 1067212,
		"number": 18,
		"title": "Go1.3.1"
	}
}
