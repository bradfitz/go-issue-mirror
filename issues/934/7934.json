{
	"id": 51287424,
	"number": 7934,
	"state": "closed",
	"title": "cmd/gc: escape analysis misses escaping ... argument",
	"body": "\u003cpre\u003eg% cat ~/x.go\npackage main\n\nvar save []byte\n\nfunc f(x ...byte) {\n\tsave = x\n}\n\nfunc g() {\n\tf(1)\n}\ng% go tool 6g -m ~/x.go\n/Users/rsc/x.go:5: leaking param: x\n/Users/rsc/x.go:10: g ... argument does not escape\ng% \n\nFrom this, f knows x escapes, but the call in g somehow does not. This means the call in\ng puts the []byte{1} for the ... on the stack, and from there mayhem ensues (in a much\nlarger program). Not using ... fixes the problem.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2014-12-08T10:44:00Z",
	"created_at": "2014-05-04T23:51:39Z",
	"updated_at": "2016-06-25T01:33:39Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
