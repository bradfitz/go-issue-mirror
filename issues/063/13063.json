{
	"id": 113548798,
	"number": 13063,
	"state": "open",
	"title": "cmd/go: no easy way to install multiple binaries to desired location when cross-compiling",
	"body": "It's quite common to want to install a bunch of commands in\r\na single repository with \"go install ./...\". When packaging things\r\nand not cross-compiling, we can use GOBIN to cause the binaries\r\nto be written to a given directory. This doesn't work when cross-compiling\r\n(see issue #9769), but there's no straightforward alternative.\r\n\r\nSomething like this can work, but feels clumsy:\r\n\r\n    cmds=$(go list -f '{{if (eq .Name \"main\")}}{{.ImportPath}}{{end}}' ./...)\r\n    cd $destdir\r\n    for i in $cmds; do\r\n        go build $i\r\n    done\r\n\r\n    \r\nPerhaps if GOPATH has more than one element, binaries should\r\nbe installed to the first element of GOPATH, similarly to packages.\r\n\r\nThen:\r\n\r\n     GOPATH=$destdir:$GOPATH go install ./...\r\n\r\nwould do the trick, installing to $destdir/bin/$GOOS_$GOARCH\r\n",
	"user": {
		"login": "rogpeppe",
		"id": 66491,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"created_at": "2015-10-27T10:10:32Z",
	"updated_at": "2016-03-08T21:23:13Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
