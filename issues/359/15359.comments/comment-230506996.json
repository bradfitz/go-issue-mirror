{
	"id": 230506996,
	"body": "I know I was overruled on this, but I'd like to bring it up again. I'm not having an issue where I'm trying to build an application that imports a vendored version of trace, and also imports a (not-vendored because it's in the same repo using the \"repo root is a library with a cmd subdirectory that imports that library\" pattern) library that imports trace itself. This causes a panic because both versions of trace call `init()` and try to register the handler. This seems like a very solid reason not to have this sort of implicit behavior; it leads to unexpected things happening that will just confuse users. Since applications should vendor, and libraries should not, this doesn't seem like that difficult of a situation to get into.\r\n\r\nML discussion in case I'm missing an obvious solution is here: https://groups.google.com/forum/#!topic/golang-nuts/J9BZwJfLnXI\r\n\r\n/cc @dsymonds @bradfitz \r\n\r\n",
	"user": {
		"login": "SamWhited",
		"id": 512573,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-05T15:09:33Z",
	"updated_at": "2016-07-05T15:09:33Z"
}
