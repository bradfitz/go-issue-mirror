{
	"id": 66072846,
	"body": "\u003ca id=\"c7\"\u003e\u003c/a\u003eComment 7:\n\n\u003cpre\u003eSmaller reproduction case, at least on a Mac:\n\npackage main\nfunc main() {\n  for{}\n}\n\nThe problem is that the thread that gets the signal is not the thread executing - it's a\nbackground thread sleeping - and when it dumps the goroutine stacks it has not access to\nthe other threads' register sets and cannot show the stacks for the goroutines they are\nrunning.\n\nTo fix this we would have to pick a custom signal (SIGPROF maybe), send it to all the\nother threads, and make the signal handler supply the goroutine stack. I'm not even sure\nif OS X can target a signal to a specific thread.\n\nSee \u003ca href=\"https://golang.org/issue/4391\"\u003eissue #4391\u003c/a\u003e, which will also require intraprocess signals. Yuck.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-02-15T04:54:16Z",
	"updated_at": "2014-12-08T10:23:56Z"
}
