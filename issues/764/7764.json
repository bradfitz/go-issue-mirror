{
	"id": 51287171,
	"number": 7764,
	"state": "closed",
	"title": "cmd/go: get -u fails with git submodules",
	"body": "by **daniel.fanjul.alcuten**:\n\n\u003cpre\u003eWhat does 'go version' print?\ngo version go1.2.1 linux/amd64\nIt happens also with go 1.2.\n\nWhat steps reproduce the problem?\n1. Create a git non-bare repository.\n2. Create a git submodule on that repository with some go code.\n3. Make GOPATH point to that git submodule\n4. Run 'go get -u' to update the git submodule\n\nWhat happened?\nIt fails with the error:\npackage \u0026lt;project\u0026gt;: directory \u0026quot;\u0026lt;absolute path of the project\u0026gt;\u0026quot; is\nnot using a known version control system\n\nWhat should have happened instead?\nIt should have detected the git repository of the submodule and successfully updated it.\n\nPlease provide any additional information below.\n\nIt is probably because the submodule has a .git file that is not a folder:\n$ cat $GOPATH/src/\u0026lt;project\u0026gt;/.git\ngitdir: \u0026lt;superproject\u0026gt;/.git/modules/\u0026lt;submodule path\u0026gt;\n\nIt works after replacing the file .git by a proper fully-fledged folder.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"comments": 15,
	"closed_at": "2016-04-05T22:39:46Z",
	"created_at": "2014-04-11T16:44:15Z",
	"updated_at": "2016-04-05T22:39:46Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
