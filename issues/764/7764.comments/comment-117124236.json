{
	"id": 117124236,
	"body": "Side note: as an ugly-ish workaround, one could probably create a link to the \"sub-gopath\" (`ln` on Unix/OSX?, `mklink` [on Windows](http://ss64.com/nt/mklink.html)) to get a workspace like below:\r\n\r\n```\r\n\u003csuperproject\u003e/.git\r\n\u003csuperproject\u003e/\u003cpath\u003e/src/\u003cproject\u003e/.git\r\nsub_link -\u003e \u003csubproject\u003e/\u003cpath\u003e\r\n\r\nGOPATH=sub_link\r\n```\r\n\r\nin other words, in concrete commands, e.g. below seems to work with Go 1.4:\r\n\r\n```\r\n$ mkdir -p gopath1/src/appA/vendor/src\r\n$ ln -s gopath1/src/appA/vendor gopath_sub\r\n$ export GOPATH=$PWD/gopath_sub:$PWD/gopath1\r\n$ cat \u003c\u003cEOF \u003e gopath1/src/appA/main.go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"github.com/bradfitz/iter\"\r\n)\r\n\r\nfunc main() {\r\n\tfor i := range iter.N(10) {\r\n\t\tfmt.Println(i)\r\n\t}\r\n}\r\nEOF\r\n$ (cd gopath1/src/appA/ ; git add -A ; git commit -m \"initial commit\"  )\r\n[master (root-commit) ae2c178] initial commit\r\n 1 file changed, 13 insertions(+)\r\n create mode 100644 main.go\r\n$ go get -v appA\r\ngithub.com/bradfitz/iter (download)\r\ngithub.com/bradfitz/iter\r\nappA\r\n$ go get -v -u github.com/bradfitz/iter\r\ngithub.com/bradfitz/iter (download)\r\n$ (cd gopath_sub/src ; go get -v -u ./... )\r\ngithub.com/bradfitz/iter (download)\r\n```\r\n\r\n(although I'm not fully sure yet if that's 100% compatible with git submodules...? sorry.)\r\n\r\n**EDIT:** \r\n\r\nuhm; sorry, I may have misunderstood the original issue; for me, above script seems to work ok and as I'd expect with submodules on Go 1.4 even without the link, i.e. with `GOPATH=$PWD/gopath1/src/appA/vendor:$PWD/gopath1`",
	"user": {
		"login": "akavel",
		"id": 273837,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-30T10:54:11Z",
	"updated_at": "2015-06-30T12:12:23Z"
}
