{
	"id": 192711313,
	"body": "I think naming it Context in structs is good. There's a stutter, but only for the author of the API. Couldn't be clearer for the users of the API.\r\n\r\nWould it be possible to write a go vet check for obvious misuse of a Context in a struct? If so, it would be great to roll that out at the same time. Posting a sign next to the pool is good, but a lifeguard is better.\r\n\r\nAs much as I'd love Context to be deeply baked into the standard library, I'd be happy with it simply being added to the standard library to say \"this is blessed, find good ways to use it\" and later adding the best ideas to the stdlib where they can be and kept in third party packages where they cannot. However, I'm not opposed to any of the suggested integrations. \r\n\r\nHaving the first interface{} parameter to Query be a Context is clever, though, so I'd much rather have the explicit QueryContext.",
	"user": {
		"login": "jimmyfrasche",
		"id": 375553,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-05T19:12:48Z",
	"updated_at": "2016-03-05T19:12:48Z"
}
