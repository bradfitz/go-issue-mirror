{
	"id": 170268351,
	"number": 16650,
	"state": "open",
	"title": "cmd/go: no need to link _cgo_.o when using gccgo",
	"body": "See https://github.com/golang/go/blob/master/src/cmd/go/build.go#L3346\r\n\r\nWhen cgo is used with gc, we link \\_cgo\\_.o, analyze it with cgo -dynimport, and then link \\_all.o.  \\_cgo\\_.o does not appear to be used further, and it does not end up in the compiled package .a file.\r\n\r\nWhen using cgo with gccgo, we still link \\_cgo\\_.o, but skip the other two steps.  We also don't return \\_cgo\\_.o as an outObj or anything.  It looks like it's been this way since the short-circuit for gccgo was added (https://codereview.appspot.com/5650066), and the review doesn't mention any rationale for this.\r\n\r\nAs far as I can tell, linking \\_cgo\\_.o is useless for gccgo, unless it's meant as an early warning against eventual linker errors.\r\n\r\n/cc @ianlancetaylor ",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"created_at": "2016-08-09T20:55:19Z",
	"updated_at": "2016-08-17T22:00:22Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	}
}
