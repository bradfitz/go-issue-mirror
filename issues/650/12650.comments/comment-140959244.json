{
	"id": 140959244,
	"body": "Questions like this are better addressed by the golang-nuts mailing list, but the short summary is the [Go programming language specification](http://golang.org/ref/spec) says the assignment `getArray()[0] = 1` is not allowed.\r\n\r\n[Assignments](http://golang.org/ref/spec#Assignments): \"Each left-hand side operand must be addressable, a map index expression, or (for = assignments only) the blank identifier.\"\r\n\r\n[Address operators](http://golang.org/ref/spec#Address_operators): \"The operand must be addressable, that is, either a variable, pointer indirection, or slice indexing operation; or a field selector of an addressable struct operand; or an array indexing operation of an addressable array.\"\r\n\r\n`getSlice()[0]` is a slice indexing operation, so it's addressable, so the assignment is valid.\r\n\r\n`getPointerToArray()[0]` is short-hand for `(*getPointerToArray())[0]`, and pointer indirections are addressable, so this is an array indexing of an addressable array.\r\n\r\n`getArray()[0]`, however, is an array indexing of a non-addressable array, so the Go compiler is rightfully rejecting the statement as invalid.",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-17T03:27:38Z",
	"updated_at": "2015-09-17T03:27:38Z"
}
