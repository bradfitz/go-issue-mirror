{
	"id": 166891733,
	"number": 16460,
	"state": "closed",
	"title": "net/url: url.RawQuery = url.Query().Encode() can change the URL",
	"body": "In the following code:\r\n\r\n```go\r\nu, _ := url.Parse(\"http://www.example.com/path?foo\")\r\nfmt.Println(u)\r\nu.RawQuery = u.Query().Encode()\r\nfmt.Println(u)\r\n```\r\n\r\nThe third line actually changes the URL. The [output](https://play.golang.org/p/HPRB2NlCq4) is:\r\n\r\n```\r\nhttp://www.example.com/path?foo\r\nhttp://www.example.com/path?foo=\r\n```\r\n\r\nA strict reading of [RFC 3986 Section 6](https://tools.ietf.org/html/rfc3986#section-6) suggests that these are two different URLs even after applying the (optional) syntax-based normalizations described in Section 6.2.2. I know of some servers that consider these URLs different. For example, compare the following links:\r\n\r\n[http://www.vcfed.org/forum/forumdisplay.php?23-DEC](http://www.vcfed.org/forum/forumdisplay.php?23-DEC)\r\n[http://www.vcfed.org/forum/forumdisplay.php?23-DEC=](http://www.vcfed.org/forum/forumdisplay.php?23-DEC=)\r\n\r\nI consider this a bug, but I doubt we could fix this bug in a backwards-compatible way. At least, I think we should update the documentation to make it clear that url.Query().Encode() can change query param \"foo\" to \"foo=\", which may be considered a different URL by some servers.",
	"user": {
		"login": "tombergan",
		"id": 13954200,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"closed_at": "2016-10-07T20:15:06Z",
	"created_at": "2016-07-21T18:52:49Z",
	"updated_at": "2016-10-07T21:11:53Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
