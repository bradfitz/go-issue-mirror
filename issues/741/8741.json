{
	"id": 51288626,
	"number": 8741,
	"state": "open",
	"title": "testing: measure coverage inside boolean expressions",
	"body": "\u003cpre\u003eTest coverage works on basic blocks. It could be extended to short-circuiting boolean\nexpressions like f() \u0026amp;\u0026amp; g().\n\nApproach:\n\nfunc GoCoverBool(ret bool, n int) bool {\n  GoCover.Count[n] = 1\n  return ret\n}\n\nRewrite f() \u0026amp;\u0026amp; g() to f() \u0026amp;\u0026amp; GoCoverBool(true, 5) \u0026amp;\u0026amp; g() and f()\n|| g() to f() || GoCoverBool(false, 5) || g().\n\nI don't know what adjustments to the downstream tools this might require.\u003c/pre\u003e",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2014-09-15T23:08:14Z",
	"updated_at": "2015-04-14T19:45:24Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
