{
	"id": 172526754,
	"body": "Hi, Alex. I did as you suggested. I didn't manage to put fmt.Println inside evalSymlinks due to compilation dependencies (fmt package is not ready at that point in time). But I used bare println to the same effect:\r\n[symlink_windows.go.txt](https://github.com/golang/go/files/94403/symlink_windows.go.txt)\r\n\r\nThe output goes like this:\r\n[outputWithPrintln.txt](https://github.com/golang/go/files/94409/outputWithPrintln.txt)\r\n\r\nI commented out the instruction defer os.RemoveAll(tmp) in TestEvalSymlinksCanonicalNames as well and the resulting directory name is lowercase ( evalsymlinkcanonical330536169 ).\r\n\r\n\r\nThen, I wrote a little C program to call Windows GetLongPathName function, as Go code does inside function toLong:\r\n[GetLongPathName.c.txt](https://github.com/golang/go/files/94411/GetLongPathName.c.txt)\r\n\r\nAnd so, I used thereafter the resulting executable to ask Windows about what would be the long path for the just created directory:\r\n[GetLongPathNameOutput.txt](https://github.com/golang/go/files/94416/GetLongPathNameOutput.txt)\r\n\r\nThe result got me by surprise: GetLongPathName function always returns directory EVALSYMLINKCANONICAL330536169 in uppercase letters.\r\n\r\nThe file system I use is the regular file system in nearly every Windows box, NTFS.\r\n\r\nI hope that can bring some light to the issue. Feel free to contact me if I can be of any help, Alex.\r\n\r\n\r\n\r\n",
	"user": {
		"login": "jucie",
		"id": 8865244,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-18T13:26:08Z",
	"updated_at": "2016-01-18T13:37:54Z"
}
