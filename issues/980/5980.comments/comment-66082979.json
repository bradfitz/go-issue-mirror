{
	"id": 66082979,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2 by **pavadeli**:\n\n\u003cpre\u003eIt turns out that all errors that occur during template execution suffer from this bug.\nFor example, if you add an argument to the myFunc function call in the playground\nexample you also get the same problem:\n\nconst tmplString = `{{myFunc \"arg1\"}}`\n\nI am currently considering, as a partial workaround, to create wrappers for all custom\nfunctions that start panicking on any returned errors. For example, if you rewrite\nmyFunc in the go playground example as follows, then the error is returned:\n\nfunc myFunc() (string, error) {\n\tpanic(fmt.Errorf(\"My error!\"))\n}\n\nAnyone a better idea? This works for custom functions, but of course not for errors that\noccur in the template itself.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-07-29T21:26:34Z",
	"updated_at": "2014-12-08T10:32:53Z"
}
