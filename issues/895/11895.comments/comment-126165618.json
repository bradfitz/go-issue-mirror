{
	"id": 126165618,
	"body": "I tried in another way, which it seems closer to what it's supposed to be. But it still found some issues.\r\n\r\n1)\r\nFirst of all, I added the .aar file to the Android project, selecting it from the GOPATH binary directory.\r\nThis correctly creates a subdirectory inside the Android project with the name of the Go package. That's what I expected, and it works!\r\nIn the module `build.gradle` I then replace this autogenerated code:\r\n```\r\nconfigurations.create(\"default\")\r\nartifacts.add(\"default\", file('TestGoLib.aar'))\r\n```\r\nwith this code:\r\n```\r\nplugins {\r\n    id \"org.golang.mobile.bind\" version \"0.2.1\"\r\n}\r\n\r\ngobind {\r\n\r\n    /* The Go package path; must be under one of the GOPATH elements or a relative to the current directory (e.g. ../../hello) */\r\n    pkg = \"TestGoLib\"\r\n\r\n    /* Include path to your go tool and gomobile binary */\r\n    PATH = \"/mypath/GoDev/bin\"\r\n\r\n    /* Specify your GOPATH */\r\n    GOPATH = \"/mypath/GoDev\"\r\n}\r\n```\r\n\r\n2)\r\nThen, I change the names of the exposed functions in my Go code.\r\nIf I run the \"gobind\" task from the AndroidStudio IDE, I still get the error `/mypath/GoDev/bin/gomobile: no Go tool on $PATH`\r\nIf I run from the command line: `./gradlew gobind,` the .aar in the subdirectory gets updated, but from the Java code I still get the old function names. It seems that the Java project is still referencing the old .aar file and not the new one.",
	"user": {
		"login": "dbaroncelli",
		"id": 5320104,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-30T02:43:40Z",
	"updated_at": "2015-07-30T03:35:37Z"
}
