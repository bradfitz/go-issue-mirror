{
	"id": 230653105,
	"body": "I would vote for utilizing GitHub's releases feature. In fact it is [already being utilized](https://github.com/golang/go/releases) but only the [source files are released](https://github.com/golang/go/releases/tag/go1.7beta2). The only overhead I can think of is the added step in the release process, which is not an issue since it will be automated using [GitHub's Releases API](https://developer.github.com/v3/repos/releases/). A few advantages that I can think of are following:\r\n\r\n- Familiarity for GitHub users who might expect binaries in releases tab in line with other projects on GitHub that distribute binaries.\r\n- Automatic support in existing tools and workflows that utilize [GitHub's Releases API](https://developer.github.com/v3/repos/releases/).\r\n- Better metrics for researchers who analyze data from GitHub repositories.\r\n- Some corporate firewalls might block [golang.org](https://golang.org/), for them GitHub might serve as an alternative mirror.\r\n- Service downtime is not uncommon, it can happen to any host, having an alternate is always helpful.\r\n- [Lots Of Copies Keep Stuff Safe](https://www.lockss.org/).\r\n\r\nNote: To sanitize automatic source releases on GitHub, `.gitattributes` file needs some changes that are discussed in [CR-24741](https://go-review.googlesource.com/24741). If desired, I can send a fresh change to take care of the source release sanitation.",
	"user": {
		"login": "ibnesayeed",
		"id": 65147,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-06T02:01:19Z",
	"updated_at": "2016-07-06T02:01:19Z"
}
