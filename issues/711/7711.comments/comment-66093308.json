{
	"id": 66093308,
	"body": "\u003ca id=\"c8\"\u003e\u003c/a\u003eComment 8:\n\n\u003cpre\u003eThis behavior is undocumented and thus highly confusing. The spec currently says:\n\nWhen the function main returns, the program exits. It does not wait for other (non-main)\ngoroutines to complete.\n\nRather long ago I learned that when main exits the program exits, period, and\nruntime.Goexit doesn't document that it changes that behavior. You may view\nruntime.Goexit documentation says it \"terminates the goroutine that calls it\", which\nimplies (at least to me) that if it's called from main goroutine then main implicitly\nreturns, albeit abnormally. You can argue that \"No other goroutine is affected\"\ndocuments current behavior, by for some reason I view it as \"unlike os.Exit, which kills\neverything\".\n\nRight now, when I search for \"goexit main\" I find this post by rsc in 2011:\n\n\u003ca href=\"https://groups.google.com/d/msg/golang-nuts/uCT_7WxxopQ/BoSBlLFzUTkJ\"\u003ehttps://groups.google.com/d/msg/golang-nuts/uCT_7WxxopQ/BoSBlLFzUTkJ\u003c/a\u003e\n\nWhich implies that this behavior of Goexit should have been fixed. But later post by rsc\nin 2012 implies that this is the intended behavior after all. Of course it may be too\nlate now to change this, there doesn't seem to be another way to wait for all other\ngoroutines to complete without causing a deadlock (which happens when using select {}),\nso it might be used by people.\n\nThe problem is that when I saw that bug report for gozk and tried it, I looked at the\ncode of Goexit and hence documentation, and it didn't immediately tell me that the\nbehavior was intended. So perhaps documentation of Goexit should clearly state that \"No\nother goroutine is affected. If Goexit is called from the main goroutine the program\nwill not exit as long as there are goroutines that are still running.\" or something like\nthat.\u003c/pre\u003e",
	"user": {
		"login": "snaury",
		"id": 53117,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-04-15T18:34:41Z",
	"updated_at": "2014-12-08T10:42:47Z"
}
