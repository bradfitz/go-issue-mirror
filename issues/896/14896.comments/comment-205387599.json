{
	"id": 205387599,
	"body": "Trying to fit that problem into the existing API, I'd suggest creating a function that turns any io.Reader with a `Size() int64` method into a restricted io.ReadSeeker that accepts \"start\" and \"end\" whences with value 0, but returns an error for any other seeks.\r\n\r\n@colinmarc are you saying these DB streaming APIs and such allow you to _start_ streaming from an arbitrary offset, but that same stream is then unseekable? If so, you can provide a ReadSeeker that doesn't actually \"open\" the stream until the first Read occurs (in which case you just open it from wherever the offset happens to be). AFAIK, ServeContent does not seek into the middle of the ReadSeeker more than once.\r\n\r\nIf the answer is \"no, the database may only stream from the beginning\", then `Accept-Ranges: none` is the only meaningful response (or omit the header entirely). Aside from live data streams (with no history), large response streaming is essentially non-robust if it doesn't allow for resumable or partial transfers.",
	"user": {
		"login": "extemporalgenome",
		"id": 536740,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-04T16:45:44Z",
	"updated_at": "2016-04-04T16:45:44Z"
}
