{
	"id": 85818515,
	"number": 11104,
	"state": "closed",
	"title": "reflect: add a range like interface for Value",
	"body": "The current reflect.Value interface for traversing maps requires allocating\r\nall the keys at once (reflect.Value.MapKeys), which is not efficient for\r\nhuge maps.\r\n\r\nAdditionally, as floating point NaNs are never equal to each other, the\r\ncurrent interface makes it impossible to get the value for NaN keys.\r\n\r\nWe can introduce this\r\n```\r\nfunc (v Value) MapKeyValues() [][2]Value\r\n```\r\nto solve the NaN problem, but I'm more interested in the first problem.\r\n\r\nActually, if we decide to introduce a range like operation on reflect.Value,\r\nI think we should make it work for other range-able types (channels,\r\narrays, strings and slices) too.",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2015-10-16T15:33:36Z",
	"created_at": "2015-06-06T22:43:39Z",
	"updated_at": "2016-10-17T08:02:58Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
