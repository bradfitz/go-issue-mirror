{
	"id": 156161452,
	"body": "Oh wow.  I just saw that.  It was a big surprised to me, because IMO there is no reason for that code to live in ssh.  Terminfo handling is a *much* bigger issue, and simple colorizing of text is non-trivial to handle in the general case.  What I see there is basic codes suitable for ANSI terminals, but those won't work on every terminal type and are completely inappropriate for Windows consoles.\r\n\r\nIndeed, the way you colorize text on Windows really can't be handled by Escape codes at all.  The logic here is just Wrong, because it is too naive.\r\n\r\nGiven all this, I'd argue for leaving that code where it is, deprecating it if we can, and having x/term (or whatever it is called) *not* provide replacement functionality.  Alternatively, we could provide a set of ANSI escapes codes along with an admonition that they should not be used unless an ANSI terminal is use, and that many terminals don't support these escapes.\r\n\r\nLooking at what is in ssh, it looks like a naive attempt to provide a limited replacement for readline or somesuch.  I'm ... astonished.  Is this code \"new\"?\r\n\r\nI feel like this ought to be placed in a package called \"prompt\" or somesuch, which could import higher level functionality.  That would include both terminfo parsing (for UNIX like systems) and probably native console manipulations for Windows.  I could build this type of functionality on the low-level bits in tcell ( or contribute parts of tcell to make up this functionality.)\r\n\r\nStill, this is far and away larger scope than what I think is absolutely *critical*, which is providing lower level functions for manipulation of terminfo, etc.  That is functionality which I *cannot* do in native Go on all platforms, so it has to be fallback to cgo.  All this other stuff for prompting etc. is higher level functionality that could easily be done in pure Go, given the lower level functionality.  (As the ssh package shows.)\r\n\r\nThe ssh Terminal package is also horribly broken with respect to runes that have a visible width other than 1.  That its, it understands neither full width East Asian runes, nor special composing characters.\r\n\r\nIn retrospect, maybe it *is* time to promote tcell (or modifications of it) as a replacement for this package.  Again, we need to have the core supply the low-level terminfo manipulations for us, though.\r\n\r\nDo we know who the consumers of this ssh Terminal package are?\r\n",
	"user": {
		"login": "gdamore",
		"id": 1295229,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-12T16:44:20Z",
	"updated_at": "2015-11-12T16:44:20Z"
}
