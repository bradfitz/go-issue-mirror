{
	"id": 154228951,
	"body": "I don’t see how we can eliminate fully the idea of “cooked” vs “raw”\nterminals.  That is, most of the times people expect terminals to respond\nto readline() (or whatever) by echoing character presses, and buffering\nuntil a newline is pressed.  But when richer applications, or even\nprompting for a password, you need something more basic.  You can do\npasswords by just disabling echo, but for full UIs with menus \u0026 so forth,\nyou generally want to turn off buffering altogether.\n\nOn Thu, Nov 5, 2015 at 2:51 PM, anatoly techtonik \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e @gdamore \u003chttps://github.com/gdamore\u003e I'd prefer to have user level API\n\u003e that can be later used to design proper low level interface in newer\n\u003e subsystems that require deterministic user interfaces (wayland etc.).\n\u003e Meaning that some \"cooked\" concepts need to be forgotten to avoid the same\n\u003e traps of the past.\n\u003e\n\u003e Tcell - https://github.com/gdamore/tcell - looks cool. But it needs some\n\u003e quick intro / tutorial how to try it on your system.\n\u003e\n\u003e —\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/13104#issuecomment-154221023\u003e.\n\u003e\n",
	"user": {
		"login": "gdamore",
		"id": 1295229,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-05T23:27:13Z",
	"updated_at": "2015-11-05T23:27:13Z"
}
