{
	"id": 239193797,
	"body": "\u003e @mewmew we decided to reduce the scope of the proposal to an interface allowing reading and writing of PCM data. We are currently working on various test implementations covering multiple use cases (audio analysis, processing and playback) with a few different formats and platforms.\r\n\u003e\r\n\u003e The big challenge is defining an interface that is multi-purpose yet flexible enough to support various kind of codecs. As we started implemented our ideas, we started finding issues/challenges and went back to the drawing board. As soon as we have decent implementations validating our design, we will submit an updated proposal.\r\n\r\nSounds great! Glad to hear that you are fleshing out these details. I know quite a few Gophers in the community that would be happy to stress test the API of these interfaces. Are the preliminary interfaces available in a public repository by any chance?\r\n\r\nEdit: To provide some additional background. The audio project of the Azul3D engine would be happy to see where and how these interfaces fit into the \"generic\" [audio](https://godoc.org/azul3d.org/engine/audio) package, which is analogous to the [image](https://golang.org/pkg/image) package of the standard Go library. My brother and I would also be interested in looking into how difficult it would be to add support for [FLAC decoding](https://godoc.org/github.com/mewkiz/flac), targetting these interfaces. Then there are quite a few [music players](https://mogg.io/), [audio visualizers](https://github.com/mdlayher/waveform) and other such software in the community which would like to use the audio API. So you have a few stress testers lined up :)",
	"user": {
		"login": "mewmew",
		"id": 1414531,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-11T15:19:16Z",
	"updated_at": "2016-08-11T15:28:17Z"
}
