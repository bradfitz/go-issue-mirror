{
	"id": 226424285,
	"body": "It is likely your program has a data race. Please post a complete code sample the demonstrates the problem.  \n\n\u003e On 16 Jun 2016, at 18:23, woria \u003cnotifications@github.com\u003e wrote:\n\u003e \n\u003e Please answer these questions before submitting your issue. Thanks!\n\u003e \n\u003e What version of Go are you using (go version)?\n\u003e 1.62\n\u003e \n\u003e What operating system and processor architecture are you using (go env)?\n\u003e GOARCH=\"amd64\"\n\u003e GOBIN=\"\"\n\u003e GOEXE=\"\"\n\u003e GOHOSTARCH=\"amd64\"\n\u003e GOHOSTOS=\"linux\"\n\u003e GOOS=\"linux\"\n\u003e GOPATH=\"/mnt/windows/web_application\"\n\u003e GORACE=\"\"\n\u003e GOROOT=\"/apps/lib/go\"\n\u003e GOTOOLDIR=\"/apps/lib/go/pkg/tool/linux_amd64\"\n\u003e GO15VENDOREXPERIMENT=\"1\"\n\u003e CC=\"gcc\"\n\u003e GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\n\u003e CXX=\"g++\"\n\u003e CGO_ENABLED=\"1\"\n\u003e \n\u003e What did you do?\n\u003e code like this:\n\u003e \n\u003e func (this *instance) pushMultiMsg(pushList) {\n\u003e         ......\n\u003e         for {\n\u003e             //get userId from redis list\n\u003e             userId := this.model.PopList(pushList)\n\u003e \n\u003e             if userId == \"\" {\n\u003e                 // task finish\n\u003e                 break\n\u003e             }\n\u003e             ......\n\u003e             go this.concurrentPush(userId)\n\u003e         }\n\u003e         ......\n\u003e     }\n\u003e \n\u003e func (this *instance) concurrentPush(userId) {\n\u003e     ......\n\u003e     client := \u0026http.Client{}\n\u003e     req, err := http.NewRequest(\"POST\", URL, bytes.NewReader(data))\n\u003e     req.Close = true\n\u003e     req.Header.Set(\"Content-Type\", \"application/json; charset=utf-8\")\n\u003e     resp, err := client.Do(req)\n\u003e     defer resp.Body.Close()\n\u003e     ......\n\u003e }\n\u003e a) get userId from redis list [500000 msg data in list]\n\u003e \n\u003e b) use a new goroutine for post data to URL [total 10000 goroutine]\n\u003e \n\u003e c) sometimes post all successfully , and sometimes a small number of list post successfully\n\u003e \n\u003e ERROR LOG:\n\u003e \n\u003e goroutine 13367937 [IO wait]:\n\u003e net.runtime_pollWait(0x2b20f404a278, 0x72, 0xc82644c400)\n\u003e         /apps/lib/go/src/runtime/netpoll.go:160 +0x60\n\u003e net.(*pollDesc).Wait(0xc820a3c0d0, 0x72, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:73 +0x3a\n\u003e net.(*pollDesc).WaitRead(0xc820a3c0d0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:78 +0x36\n\u003e net.(*netFD).Read(0xc820a3c070, 0xc82644c400, 0x400, 0x400, 0x0, 0x2b20e88c3050, 0xc82000a1a0)\n\u003e         /apps/lib/go/src/net/fd_unix.go:250 +0x23a\n\u003e net.(*conn).Read(0xc8209b63d0, 0xc82644c400, 0x400, 0x400, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/net.go:172 +0xe4\n\u003e crypto/tls.(*block).readFromUntil(0xc820573cb0, 0x2b20e88c8b80, 0xc8209b63d0, 0x5, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:460 +0xcc\n\u003e crypto/tls.(*Conn).readRecord(0xc822564600, 0x9b4117, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:562 +0x2d1\n\u003e crypto/tls.(*Conn).Read(0xc822564600, 0xc8212f8000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:939 +0x167\n\u003e --\n\u003e goroutine 13367250 [select]:\n\u003e net/http.(*persistConn).writeLoop(0xc82a25c820)\n\u003e         /apps/lib/go/src/net/http/transport.go:1277 +0x472\n\u003e created by net/http.(*Transport).dialConn\n\u003e         /apps/lib/go/src/net/http/transport.go:858 +0x10cb\n\u003e \n\u003e goroutine 13368465 [IO wait]:\n\u003e net.runtime_pollWait(0x2b20f4ac0f78, 0x72, 0xc8254af000)\n\u003e         /apps/lib/go/src/runtime/netpoll.go:160 +0x60\n\u003e net.(*pollDesc).Wait(0xc821bf8370, 0x72, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:73 +0x3a\n\u003e net.(*pollDesc).WaitRead(0xc821bf8370, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:78 +0x36\n\u003e net.(*netFD).Read(0xc821bf8310, 0xc8254af000, 0x400, 0x400, 0x0, 0x2b20e88c3050, 0xc82000a1a0)\n\u003e         /apps/lib/go/src/net/fd_unix.go:250 +0x23a\n\u003e net.(*conn).Read(0xc8204e4080, 0xc8254af000, 0x400, 0x400, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/net.go:172 +0xe4\n\u003e crypto/tls.(*block).readFromUntil(0xc821379080, 0x2b20e88c8b80, 0xc8204e4080, 0x5, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:460 +0xcc\n\u003e crypto/tls.(*Conn).readRecord(0xc8206d6300, 0x16, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:562 +0x2d1\n\u003e crypto/tls.(*Conn).readHandshake(0xc8206d6300, 0x0, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:800 +0xd3\n\u003e --\n\u003e goroutine 13368555 [select]:\n\u003e net/http.(*persistConn).writeLoop(0xc82a282c30)\n\u003e         /apps/lib/go/src/net/http/transport.go:1277 +0x472\n\u003e created by net/http.(*Transport).dialConn\n\u003e         /apps/lib/go/src/net/http/transport.go:858 +0x10cb\n\u003e \n\u003e goroutine 13368135 [IO wait]:\n\u003e net.runtime_pollWait(0x2b20f738e428, 0x72, 0xc821f71c00)\n\u003e         /apps/lib/go/src/runtime/netpoll.go:160 +0x60\n\u003e net.(*pollDesc).Wait(0xc8205d2b50, 0x72, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:73 +0x3a\n\u003e net.(*pollDesc).WaitRead(0xc8205d2b50, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:78 +0x36\n\u003e net.(*netFD).Read(0xc8205d2af0, 0xc821f71c00, 0x400, 0x400, 0x0, 0x2b20e88c3050, 0xc82000a1a0)\n\u003e         /apps/lib/go/src/net/fd_unix.go:250 +0x23a\n\u003e net.(*conn).Read(0xc820158218, 0xc821f71c00, 0x400, 0x400, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/net.go:172 +0xe4\n\u003e crypto/tls.(*block).readFromUntil(0xc828b11fb0, 0x2b20e88c8b80, 0xc820158218, 0x5, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:460 +0xcc\n\u003e crypto/tls.(*Conn).readRecord(0xc82af6a600, 0x9b4117, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:562 +0x2d1\n\u003e crypto/tls.(*Conn).Read(0xc82af6a600, 0xc8258a6000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:939 +0x167\n\u003e --\n\u003e         /mnt/windows/web_application/msg-push/src/msgpush/lib/push/push.go:427 +0x435\n\u003e msgpush/lib/push.(*instance).concurrentPusher(0xc82aaf9bd0, 0xc827454300, 0x210, 0x2e5, 0x98c6e0, 0x47, 0xc820116360, 0x12, 0xc82b31bfe0, 0x1c, ...)\n\u003e         /mnt/windows/web_application/msg-push/src/msgpush/lib/push/push.go:385 +0x7c2\n\u003e created by msgpush/lib/push.(*instance).pushMultiMsg\n\u003e         /mnt/windows/web_application/msg-push/src/msgpush/lib/push/push.go:302 +0x97a\n\u003e \n\u003e goroutine 13368994 [IO wait]:\n\u003e net.runtime_pollWait(0x2b20f7ec79a0, 0x72, 0xc824130000)\n\u003e         /apps/lib/go/src/runtime/netpoll.go:160 +0x60\n\u003e net.(*pollDesc).Wait(0xc82ac20df0, 0x72, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:73 +0x3a\n\u003e net.(*pollDesc).WaitRead(0xc82ac20df0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:78 +0x36\n\u003e net.(*netFD).Read(0xc82ac20d90, 0xc824130000, 0x400, 0x400, 0x0, 0x2b20e88c3050, 0xc82000a1a0)\n\u003e         /apps/lib/go/src/net/fd_unix.go:250 +0x23a\n\u003e net.(*conn).Read(0xc823ab4120, 0xc824130000, 0x400, 0x400, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/net.go:172 +0xe4\n\u003e crypto/tls.(*block).readFromUntil(0xc824acc570, 0x2b20e88c8b80, 0xc823ab4120, 0x5, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:460 +0xcc\n\u003e crypto/tls.(*Conn).readRecord(0xc8206d6900, 0x9b4117, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:562 +0x2d1\n\u003e crypto/tls.(*Conn).Read(0xc8206d6900, 0xc822100000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:939 +0x167\n\u003e --\n\u003e         /mnt/windows/web_application/msg-push/src/msgpush/lib/push/push.go:427 +0x435\n\u003e msgpush/lib/push.(*instance).concurrentPusher(0xc8201400f0, 0xc820709d40, 0x203, 0x211, 0x98c6e0, 0x47, 0xc820116360, 0x12, 0xc8205d5280, 0x1c, ...)\n\u003e         /mnt/windows/web_application/msg-push/src/msgpush/lib/push/push.go:385 +0x7c2\n\u003e created by msgpush/lib/push.(*instance).pushMultiMsg\n\u003e         /mnt/windows/web_application/msg-push/src/msgpush/lib/push/push.go:302 +0x97a\n\u003e \n\u003e goroutine 13368565 [IO wait]:\n\u003e net.runtime_pollWait(0x2b20f7e14700, 0x72, 0xc820299000)\n\u003e         /apps/lib/go/src/runtime/netpoll.go:160 +0x60\n\u003e net.(*pollDesc).Wait(0xc8245a8370, 0x72, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:73 +0x3a\n\u003e net.(*pollDesc).WaitRead(0xc8245a8370, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:78 +0x36\n\u003e net.(*netFD).Read(0xc8245a8310, 0xc820299000, 0x400, 0x400, 0x0, 0x2b20e88c3050, 0xc82000a1a0)\n\u003e         /apps/lib/go/src/net/fd_unix.go:250 +0x23a\n\u003e net.(*conn).Read(0xc821f00018, 0xc820299000, 0x400, 0x400, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/net.go:172 +0xe4\n\u003e crypto/tls.(*block).readFromUntil(0xc820677cb0, 0x2b20e88c8b80, 0xc821f00018, 0x5, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:460 +0xcc\n\u003e crypto/tls.(*Conn).readRecord(0xc82272f800, 0x9b4117, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:562 +0x2d1\n\u003e crypto/tls.(*Conn).Read(0xc82272f800, 0xc824e4a000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:939 +0x167\n\u003e --\n\u003e         /apps/lib/go/src/bufio/bufio.go:132 +0xcc\n\u003e net/http.(*persistConn).readLoop(0xc82a2f0820)\n\u003e         /apps/lib/go/src/net/http/transport.go:1073 +0x177\n\u003e created by net/http.(*Transport).dialConn\n\u003e         /apps/lib/go/src/net/http/transport.go:857 +0x10a6\n\u003e \n\u003e goroutine 13368225 [IO wait]:\n\u003e net.runtime_pollWait(0x2b20ebb4b4c0, 0x72, 0xc82017d800)\n\u003e         /apps/lib/go/src/runtime/netpoll.go:160 +0x60\n\u003e net.(*pollDesc).Wait(0xc820157090, 0x72, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:73 +0x3a\n\u003e net.(*pollDesc).WaitRead(0xc820157090, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:78 +0x36\n\u003e net.(*netFD).Read(0xc820157030, 0xc82017d800, 0x400, 0x400, 0x0, 0x2b20e88c3050, 0xc82000a1a0)\n\u003e         /apps/lib/go/src/net/fd_unix.go:250 +0x23a\n\u003e net.(*conn).Read(0xc8205603e8, 0xc82017d800, 0x400, 0x400, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/net.go:172 +0xe4\n\u003e crypto/tls.(*block).readFromUntil(0xc8205074d0, 0x2b20e88c8b80, 0xc8205603e8, 0x5, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:460 +0xcc\n\u003e crypto/tls.(*Conn).readRecord(0xc825894f00, 0x9b4117, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:562 +0x2d1\n\u003e crypto/tls.(*Conn).Read(0xc825894f00, 0xc820928000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:939 +0x167\n\u003e --\n\u003e goroutine 13367135 [select]:\n\u003e net/http.(*persistConn).writeLoop(0xc82090b1e0)\n\u003e         /apps/lib/go/src/net/http/transport.go:1277 +0x472\n\u003e created by net/http.(*Transport).dialConn\n\u003e         /apps/lib/go/src/net/http/transport.go:858 +0x10cb\n\u003e \n\u003e goroutine 13368463 [IO wait]:\n\u003e net.runtime_pollWait(0x2b20f7e8df80, 0x72, 0xc82af04c00)\n\u003e         /apps/lib/go/src/runtime/netpoll.go:160 +0x60\n\u003e net.(*pollDesc).Wait(0xc82ac9c450, 0x72, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:73 +0x3a\n\u003e net.(*pollDesc).WaitRead(0xc82ac9c450, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:78 +0x36\n\u003e net.(*netFD).Read(0xc82ac9c3f0, 0xc82af04c00, 0x400, 0x400, 0x0, 0x2b20e88c3050, 0xc82000a1a0)\n\u003e         /apps/lib/go/src/net/fd_unix.go:250 +0x23a\n\u003e net.(*conn).Read(0xc820040300, 0xc82af04c00, 0x400, 0x400, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/net.go:172 +0xe4\n\u003e crypto/tls.(*block).readFromUntil(0xc820498a80, 0x2b20e88c8b80, 0xc820040300, 0x5, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:460 +0xcc\n\u003e crypto/tls.(*Conn).readRecord(0xc829d2e900, 0x9b4117, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:562 +0x2d1\n\u003e crypto/tls.(*Conn).Read(0xc829d2e900, 0xc821c14000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:939 +0x167\n\u003e --\n\u003e         /mnt/windows/web_application/msg-push/src/msgpush/lib/push/push.go:427 +0x435\n\u003e msgpush/lib/push.(*instance).concurrentPusher(0xc82aaf9bd0, 0xc820beec00, 0x210, 0x2e5, 0x98c6e0, 0x47, 0xc820116360, 0x12, 0xc8220e5dc0, 0x1c, ...)\n\u003e         /mnt/windows/web_application/msg-push/src/msgpush/lib/push/push.go:385 +0x7c2\n\u003e created by msgpush/lib/push.(*instance).pushMultiMsg\n\u003e         /mnt/windows/web_application/msg-push/src/msgpush/lib/push/push.go:302 +0x97a\n\u003e \n\u003e goroutine 13366233 [IO wait]:\n\u003e net.runtime_pollWait(0x2b20f7e586f8, 0x72, 0xc820bf5800)\n\u003e         /apps/lib/go/src/runtime/netpoll.go:160 +0x60\n\u003e net.(*pollDesc).Wait(0xc82339a1b0, 0x72, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:73 +0x3a\n\u003e net.(*pollDesc).WaitRead(0xc82339a1b0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:78 +0x36\n\u003e net.(*netFD).Read(0xc82339a150, 0xc820bf5800, 0x400, 0x400, 0x0, 0x2b20e88c3050, 0xc82000a1a0)\n\u003e         /apps/lib/go/src/net/fd_unix.go:250 +0x23a\n\u003e net.(*conn).Read(0xc82111a408, 0xc820bf5800, 0x400, 0x400, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/net.go:172 +0xe4\n\u003e crypto/tls.(*block).readFromUntil(0xc8243d6cf0, 0x2b20e88c8b80, 0xc82111a408, 0x5, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:460 +0xcc\n\u003e crypto/tls.(*Conn).readRecord(0xc821dddb00, 0x9b4117, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:562 +0x2d1\n\u003e crypto/tls.(*Conn).Read(0xc821dddb00, 0xc82aefd000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:939 +0x167\n\u003e --\n\u003e goroutine 13368168 [select]:\n\u003e net/http.(*persistConn).writeLoop(0xc820169930)\n\u003e         /apps/lib/go/src/net/http/transport.go:1277 +0x472\n\u003e created by net/http.(*Transport).dialConn\n\u003e         /apps/lib/go/src/net/http/transport.go:858 +0x10cb\n\u003e \n\u003e goroutine 13368659 [IO wait]:\n\u003e net.runtime_pollWait(0x2b20f7f4dc88, 0x72, 0xc8219b3400)\n\u003e         /apps/lib/go/src/runtime/netpoll.go:160 +0x60\n\u003e net.(*pollDesc).Wait(0xc8238033a0, 0x72, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:73 +0x3a\n\u003e net.(*pollDesc).WaitRead(0xc8238033a0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:78 +0x36\n\u003e net.(*netFD).Read(0xc823803340, 0xc8219b3400, 0x400, 0x400, 0x0, 0x2b20e88c3050, 0xc82000a1a0)\n\u003e         /apps/lib/go/src/net/fd_unix.go:250 +0x23a\n\u003e net.(*conn).Read(0xc820a1a028, 0xc8219b3400, 0x400, 0x400, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/net.go:172 +0xe4\n\u003e crypto/tls.(*block).readFromUntil(0xc82af54900, 0x2b20e88c8b80, 0xc820a1a028, 0x5, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:460 +0xcc\n\u003e crypto/tls.(*Conn).readRecord(0xc820295200, 0x9b4117, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:562 +0x2d1\n\u003e crypto/tls.(*Conn).Read(0xc820295200, 0xc821a1c000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:939 +0x167\n\u003e --\n\u003e         /apps/lib/go/src/bufio/bufio.go:132 +0xcc\n\u003e net/http.(*persistConn).readLoop(0xc82029a9c0)\n\u003e         /apps/lib/go/src/net/http/transport.go:1073 +0x177\n\u003e created by net/http.(*Transport).dialConn\n\u003e         /apps/lib/go/src/net/http/transport.go:857 +0x10a6\n\u003e \n\u003e goroutine 13368299 [IO wait]:\n\u003e net.runtime_pollWait(0x2b20f89fe5c0, 0x72, 0xc824a5a800)\n\u003e         /apps/lib/go/src/runtime/netpoll.go:160 +0x60\n\u003e net.(*pollDesc).Wait(0xc82a5cd020, 0x72, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:73 +0x3a\n\u003e net.(*pollDesc).WaitRead(0xc82a5cd020, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:78 +0x36\n\u003e net.(*netFD).Read(0xc82a5ccfc0, 0xc824a5a800, 0x400, 0x400, 0x0, 0x2b20e88c3050, 0xc82000a1a0)\n\u003e         /apps/lib/go/src/net/fd_unix.go:250 +0x23a\n\u003e net.(*conn).Read(0xc820040160, 0xc824a5a800, 0x400, 0x400, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/net.go:172 +0xe4\n\u003e crypto/tls.(*block).readFromUntil(0xc8213a6480, 0x2b20e88c8b80, 0xc820040160, 0x5, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:460 +0xcc\n\u003e crypto/tls.(*Conn).readRecord(0xc82b772f00, 0x9b4117, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:562 +0x2d1\n\u003e crypto/tls.(*Conn).Read(0xc82b772f00, 0xc820df0000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:939 +0x167\n\u003e --\n\u003e         /mnt/windows/web_application/msg-push/src/msgpush/lib/push/push.go:427 +0x435\n\u003e msgpush/lib/push.(*instance).concurrentPusher(0xc8201400f0, 0xc820876240, 0x203, 0x211, 0x98c6e0, 0x47, 0xc820116360, 0x12, 0xc823303960, 0x1c, ...)\n\u003e         /mnt/windows/web_application/msg-push/src/msgpush/lib/push/push.go:385 +0x7c2\n\u003e created by msgpush/lib/push.(*instance).pushMultiMsg\n\u003e         /mnt/windows/web_application/msg-push/src/msgpush/lib/push/push.go:302 +0x97a\n\u003e \n\u003e goroutine 13368425 [IO wait]:\n\u003e net.runtime_pollWait(0x2b20f73da270, 0x72, 0xc820ea2c00)\n\u003e         /apps/lib/go/src/runtime/netpoll.go:160 +0x60\n\u003e net.(*pollDesc).Wait(0xc82b598b50, 0x72, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:73 +0x3a\n\u003e net.(*pollDesc).WaitRead(0xc82b598b50, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/fd_poll_runtime.go:78 +0x36\n\u003e net.(*netFD).Read(0xc82b598af0, 0xc820ea2c00, 0x400, 0x400, 0x0, 0x2b20e88c3050, 0xc82000a1a0)\n\u003e         /apps/lib/go/src/net/fd_unix.go:250 +0x23a\n\u003e net.(*conn).Read(0xc82a2a8028, 0xc820ea2c00, 0x400, 0x400, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/net/net.go:172 +0xe4\n\u003e crypto/tls.(*block).readFromUntil(0xc820511410, 0x2b20e88c8b80, 0xc82a2a8028, 0x5, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:460 +0xcc\n\u003e crypto/tls.(*Conn).readRecord(0xc820a99800, 0x9b4117, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:562 +0x2d1\n\u003e crypto/tls.(*Conn).Read(0xc820a99800, 0xc8224e3000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n\u003e         /apps/lib/go/src/crypto/tls/conn.go:939 +0x167\n\u003e --\n\u003e goroutine 13367415 [select]:\n\u003e net/http.(*persistConn).writeLoop(0xc8202a0750)\n\u003e         /apps/lib/go/src/net/http/transport.go:1277 +0x472\n\u003e created by net/http.(*Transport).dialConn\n\u003e         /apps/lib/go/src/net/http/transport.go:858 +0x10cb\n\u003e What did you expect to see?\n\u003e http post data successfully\n\u003e \n\u003e What did you see instead?\n\u003e \n\u003e —\n\u003e You are receiving this because you are subscribed to this thread.\n\u003e Reply to this email directly, view it on GitHub, or mute the thread.\n\u003e \n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-16T08:43:10Z",
	"updated_at": "2016-06-16T08:43:10Z"
}
