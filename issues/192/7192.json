{
	"id": 51286323,
	"number": 7192,
	"state": "closed",
	"title": "spec: write rules for safe use of unsafe.Pointer and uintptr",
	"body": "\u003cpre\u003ePeople are confused about when it is safe to convert an unsafe.Pointer to a uintptr.  If\nthe unsafe.Pointer is the only pointer to the object, when is the GC permitted to\ncollect it?  We need to write down some rules for constructs that are always safe.\n\nIt seems to me that we must permit\n    unsafe.Pointer(uintptr(p) + offset)\n\nIt also seems to me that we must permit passing unsafe.Pointer values converted to\nuintptr to syscall.Syscall.\n    syscall.Syscall(SYS_OPEN, uintptr(unsafe.Pointer(StringBytePtr(n))))\n\nIf these sorts of constructs will not work safely, then we should consider disallowing\nthem.\n\nAnd in general we must write down what is permitted.\u003c/pre\u003e",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 15,
	"closed_at": "2014-12-08T10:39:55Z",
	"created_at": "2014-01-23T14:33:49Z",
	"updated_at": "2016-06-25T01:26:14Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
