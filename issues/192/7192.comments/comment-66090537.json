{
	"id": 66090537,
	"body": "\u003ca id=\"c12\"\u003e\u003c/a\u003eComment 12:\n\n\u003cpre\u003eAs an aside, it seems worth pointing out that unsafe.Pointer(v.Pointer()) and\nunsafe.Pointer(v.UnsafeAddr()) aren't 100% safe with gc, because if they're part of a\ncomplex expression then gc spills them to uintptr-typed autotmp variables on the stack. \nE.g.,\n\n    func foo(int) reflect.Value\n\n    if unsafe.Pointer(foo(1).Pointer()) == unsafe.Pointer(foo(2).Pointer()) { ... }\n\nis unsafe because gc compiles it as\n\n    var autotmp1 uintptr = foo(1).Pointer()\n    var autotmp2 uintptr = foo(2).Pointer()  // If foo(2) triggers a GC, autotmp1 might become invalid!\n    if unsafe.Pointer(autotmp1) == unsafe.Pointer(autotmp2) { ... }\n\nbut \"go vet\" doesn't warn about this.\u003c/pre\u003e",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-10-24T04:44:45Z",
	"updated_at": "2014-12-08T10:39:56Z"
}
