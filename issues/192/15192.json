{
	"id": 146917785,
	"number": 15192,
	"state": "open",
	"title": "proposal: error classification",
	"body": "**Problem**\r\n\r\nGo currently has error classification scattered throughout the standard library (and elsewhere).\r\n* https://godoc.org/net#Error (with Temporary and Timeout methods)\r\n* https://godoc.org/os with IsNotExist, IsPermission, IsExist helpers\r\n* https://godoc.org/github.com/aws/aws-sdk-go/aws/request#Retryer\r\n* https://github.com/google/google-api-go-client/blob/master/gensupport/retry.go#L57\r\n* https://godoc.org/?q=errgo\r\n* etc..\r\n\r\nProgrammers usually just need an answer to these questions:\r\n* Does it help, if I retry (e.g. via exponential backoff)? After how much time?\r\n* Should I increase this timeout? By how much?\r\n* Should I create instead of update?\r\n* Did I lookup/get by the wrong key?\r\n* Do I need more permissions or some auth to access this item?\r\n* Should I throttle my rate of actions? (e.g. file system access, api access) What rate would be ok?\r\n* Is this error a final error and I should better stop the program to avoid further damage?\r\n* Is an unknown error? (imagine as default case in a switch)\r\n* Is an error unexpected in this context? (e.g. io.UnexpectedEOF is such an error class or errors.New(\"unimplemented\") while building software iteratively)\r\n* What should I report as an underlying cause?\r\n* Should I augment the error or just pass on?\r\n* ... anything I didn't consider yet...\r\n\r\n**Proposed Solution**\r\n\r\nDefine interfaces to answer most of these questions in a way that allows programs to answer these questions in a uniform way and allows packages to communicate these situations in a uniform way, \r\nbut without restricting level of detail.\r\n\r\nThe details can be fleshed out once the need of a solution is ackknowledged.\r\n\r\n**Alternate Solutions**\r\n* Error registry which every programmer should know\r\n* importing unneeded dependencies in high level abstract code, just because it could be that we see this kind of error and want to handle it in a sane way.\r\n* putting adapters around those errors as in http://alistair.cockburn.us/Hexagonal+architecture\r\n* anything I don't see at the moment",
	"user": {
		"login": "nightlyone",
		"id": 1767118,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		}
	],
	"comments": 7,
	"created_at": "2016-04-08T12:32:32Z",
	"updated_at": "2016-08-18T13:13:36Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	},
	"reactions": {
		"total_count": 6,
		"+1": 5,
		"-1": 1
	}
}
