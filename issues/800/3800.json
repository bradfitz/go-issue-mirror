{
	"id": 51281173,
	"number": 3800,
	"state": "closed",
	"title": "testing: t.FailNow should panic if called from wrong goroutine",
	"body": "by **dawagner**:\n\n\u003cpre\u003eI expect testing.T.FailNow() to cleanly fail a test, including terminating any running\ngoroutines, and the main routine if it was called in a goroutine.\n\nRunning `go test` with the attached file, I expect to see \u0026quot;I'm about to fail\u0026quot;,\nfollowed by the test cleanly failing.\n\nInstead I see:\n$ go test\nI'm about to fail\nI'm about to loop forever\n\nand the process never terminates.\n\nThis also happens if the infinite loop is in the main thread.\nIf rather than looping forever, a channel is being waited on, I get a deadlock panic.\nIf I remove the time.Sleep from the test, the test will pass, and then loop forever!\n\nWhich operating system are you using?\nMac OSX 10.6.8 x64\n\nWhich version are you using?  (run 'go version')\n$ go version\ngo version go1.0.2\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/3800/0/bug_test.go\"\u003ebug_test.go\u003c/a\u003e (292 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:20:04Z",
	"created_at": "2012-07-04T20:56:40Z",
	"updated_at": "2016-06-24T22:21:15Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
