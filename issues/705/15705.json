{
	"id": 155117378,
	"number": 15705,
	"state": "open",
	"title": "gccgo: runtime testcase GoroutineProfile random hang when run on ppc64x",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo version go1.6.1 gccgo (GCC) 7.0.0 20160516 (experimental) linux/ppc64le\r\nAlso happens with gcc 6.1 branch.\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"ppc64le\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"ppc64le\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/gccgo1.6\"\r\nGOTOOLDIR=\"/usr/local/gccgo1.6/libexec/gcc/powerpc64le-linux/7.0.0\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"/usr/local/gccgo1.6/bin/gcc\"\r\nGOGCCFLAGS=\"-fPIC -pthread -fmessage-length=0\"\r\nCXX=\"/usr/local/gccgo1.6/bin/g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\nAfter doing a build of gccgo from trunk or the gcc 6 branch, try to run the runtime testcase.\r\n\r\ncd bld/powerp64le-linux-gnu/libgo\r\nmake runtime/check   (My gotest script in src/libgo/testsuite has keep=true to retain the a.out binary from the testcase)\r\n\r\n4. What did you expect to see?\r\nPASS\r\n\r\n5. What did you see instead?\r\nruntime test hangs intermittently in GoroutineProfile\r\n\r\nIn looking through the gcc-testresults for powerpc64le and powerpc64 over the past few months, the libgo runtime testcase has intermittently failed.  With today's trunk, I was able to build the runtime testcase and found that I can run the same binary multiple times and it will PASS several times but after about 4 attempts it will hang.  The test hangs in the GoroutineProfile test.\r\n./a.out -test.run=GoroutineProfile\r\n\r\nWhen it was hung, I attached with gdb and looked at the threads, and here are some of the stacktraces:\r\n\r\nSome similar to this:\r\n//#0  0x0000000010253cd0 in syscall ()                                                                   \r\n//#1  0x0000000010043900 in runtime_futexsleep (addr=\u003coptimized out\u003e, val=\u003coptimized out\u003e,               \r\n    ns=\u003coptimized out\u003e) at ../../../src/libgo/runtime/thread-linux.c:47                                \r\n//#2  0x000000001004361c in runtime_notesleep (n=\u003coptimized out\u003e)                                        \r\n    at ../../../src/libgo/runtime/lock_futex.c:137                                                     \r\n//#3  0x000000001004fc00 in stopm () at ../../../src/libgo/runtime/proc.c:1458\r\n//#4  0x0000000010053268 in exitsyscall0 (gp=\u003coptimized out\u003e) at ../../../src/libgo/runtime/proc.c:2205\r\n//#5  0x0000000010053804 in runtime_mstart (mp=\u003coptimized out\u003e) at ../../../src/libgo/runtime/proc.c:1076\r\n//#6  0x00000000100032f8 in main (argc=\u003coptimized out\u003e, argv=\u003coptimized out\u003e)\r\n    at ../../../src/libgo/runtime/go-main.c:55\r\n//#7  0x000000001021e54c in generic_start_main ()\r\n//#8  0x000000001021e774 in __libc_start_main ()\r\n//#9  0x0000000000000000 in ?? ()\r\n\r\nOne like this:\r\n//#0  0x0000000010253cd0 in syscall ()\r\n//#1  0x0000000010043900 in runtime_futexsleep (addr=\u003coptimized out\u003e, val=\u003coptimized out\u003e,\r\n    ns=\u003coptimized out\u003e) at ../../../src/libgo/runtime/thread-linux.c:47\r\n//#2  0x000000001004361c in runtime_notesleep (n=\u003coptimized out\u003e)\r\n    at ../../../src/libgo/runtime/lock_futex.c:137\r\n//#3  0x0000000010050f34 in runtime_stoptheworld () at ../../../src/libgo/runtime/proc.c:960\r\n//#4  0x000000001005e2d8 in runtime.GoroutineProfile (b=...) at ../../../src/libgo/runtime/mprof.goc:472\r\n//#5  0x0000000010032ebc in runtime_test.TestGoroutineProfile (t=\u003coptimized out\u003e) at runtime_unix_test.go:47\r\n//#6  0x0000000010155d10 in testing.tRunner (test=0xc208007940, param=\u003coptimized out\u003e)\r\n    at ../../../src/libgo/go/testing/testing.go:472\r\n//#7  testing.$thunk15 (__go_thunk_parameter=\u003coptimized out\u003e)\r\n    at ../../../src/libgo/go/testing/testing.go:581\r\n//#8  0x00000000100514a8 in kickoff () at ../../../src/libgo/runtime/proc.c:235\r\n//#9  0x0000000010228130 in makecontext ()\r\n//#10 0x0000000000000000 in ?? ()\r\n\r\nI scanned through some of the older gcc-testresults and found that this has intermittently failed as far back as March (didn't look before that) but seems to happen more frequently now.  Fails on ppc64le and ppc64.\r\n\r\n",
	"user": {
		"login": "laboger",
		"id": 9433228,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2016-05-16T20:43:11Z",
	"updated_at": "2016-06-17T21:00:31Z",
	"milestone": {
		"id": 1069171,
		"number": 23,
		"title": "Gccgo"
	}
}
