{
	"id": 212058743,
	"body": "cmd/compile already rewrites statements to respect the Go spec's order of evaluation rules.  E.g., it rewrites:\r\n\r\n     x := y[f()] + int(g())\r\n\r\ninto\r\n\r\n    autotmp_f := f()\r\n    autotmp_g := g()\r\n    x := y[autotmp_f] + int(autotmp_g)\r\n\r\nNote that the Go spec doesn't define the order of evaluation for all kinds of subexpressions (such as array/slice indexing), so cmd/compile only rewrites statements to avoid more than one ordered subexpression per statement.\r\n\r\nConversions don't generally have visible side effects (aside from changing value representation), so the Go spec doesn't specify an ordering for them.  Similarly, cmd/compile doesn't proactively rewrite them right now either.\r\n\r\nHowever, `uintptr` to `unsafe.Pointer` conversions *do* have visible side effects, as demonstrated above.",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-19T18:30:07Z",
	"updated_at": "2016-04-19T18:32:24Z"
}
