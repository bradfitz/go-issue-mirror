{
	"id": 66092335,
	"body": "\u003ca id=\"c9\"\u003e\u003c/a\u003eComment 9:\n\n\u003cpre\u003e\u003e ... My system compiles 64-bit DLLs by default. \n\nI use 64-bit version of Windows. I use gcc as per #5. TestStdcallAndCDeclCallbacks\ncreates 64-bit DLLs on my system too (I checked DLLs are 64-bit). We don't specify any\n-m32 or -m64 in TestStdcallAndCDeclCallbacks, and DLLs are 64-bit by default.\n\n\u003e ... That is the problem. \n\nI don't understand. What is the problem?\n\n\n\u003e ... The 32-bit test executable can't load a 64-bit DLL.\n\nSure, but my test program (the one that contains TestStdcallAndCDeclCallbacks) is\n64-bit. I run all.bat or make.bat to build that test, and Go scripts can see that I use\n64-bit OS, so they use GOOS=windows GOARCH=amd64 by default. That is hy my test is\n64-bit.\n\n\u003e ... I suspect it works on your system because you may have a 32-bit gcc on your 64-bit\nwindows(?).\n\nI don't know what \"32-bit gcc\" means. My gcc version is as per #5.\n\nCan you, please, try to understand why TestStdcallAndCDeclCallbacks fails on your\nsystem? I suspect it is because exe and dlls are of different bitness. Can you find out\nwhat they are and compare them.\n\nThank you.\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-03-12T04:04:15Z",
	"updated_at": "2014-12-08T10:41:45Z"
}
