{
	"id": 66092345,
	"body": "\u003ca id=\"c19\"\u003e\u003c/a\u003eComment 19:\n\n\u003cpre\u003e@dave :\n1. setting GOHOSTARCH doesn't help (just tried it) because the gcc invoke doesn't use\nthe same build flags or environment variables. It just invokes the default compiler for\nthe platform. In this case a 64-bit compiling for windows. I might argue the test is\nflawed in that it invokes gcc without this, but I don't care that much (the test would\nprobably fail on a normal 64-bit environment if a 32-bit gcc was installed, probably it\nshould first test if gcc CAN invoke the correct bitness, and skip it if it can't, but\nthat's untested).\n\n2. Again I agree; this isn't guaranteed to work. I would not expect it to work on Linux\non almost all systems. But, all the other tests and runtimes DO work on windows this\nway. While I have agreed again that it isn't guaranteed, it corrects the behavior of the\ntest in a particular situation I found myself. Despite everything, I don't think I'd\nneed to dig through many tests that work around things builders don't regularly test,\nbut are useful.\n\nRegardless of this test, this pattern will be continued to be used (by me at least) on\nwindows, and it will continue to work for the foreseeable future simply due to the\narchitecture of Windows and Go DLL calling behavior on windows. I'll just note this one\ntest as a known false positive and continue on my way. Not an issue.\u003c/pre\u003e",
	"user": {
		"login": "kardianos",
		"id": 755121,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-03-12T06:14:06Z",
	"updated_at": "2014-12-08T10:41:46Z"
}
