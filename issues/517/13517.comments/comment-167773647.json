{
	"id": 167773647,
	"body": "Responding to some of the concerns/issues raised above:\r\n\r\n@kardianos:\r\n\r\n- As to feedback on the vendor-spec: I've actually used it in a tool (https://github.com/zpas-lab/vendo, not yet advertised/announced because OSSed just recently and not polished/readmed yet, eh), and it *worked great* for me! Thus, I *didn't have a need to complain*, so I just used it without seeing any need to provide feedback... So, sorry to be late, but a ***BIG THANKS*** for the spec and all the work that's gone to build it, I really found it very well thought out...\r\n    - To elaborate a bit: I did add a few custom fields, but from what I understand that's totally in line with the spec, it describes only the mandatory fields. Specifically, I added:\r\n\r\n            {\r\n                ...\r\n                \"platforms\": [\"linux_amd64\", \"windows_amd64\", ... ],\r\n                \"package\": [\r\n                    {\r\n                        \"repositoryRoot\": \"_vendor/src/github.com/spf13/cobra\",\r\n                        ...\r\n                    }\r\n                ]\r\n            }\r\n    where the \"repositoryRoot\" is described in more detail [in the sources](https://github.com/zpas-lab/vendo/blob/a6ce93e8a5784d1c1c42e9777e9614a1d7b6c3b3/vendorfile.go#L63), but in short words it generally helps to find the .git/.hg/.bzr/... dir (i.e. the \"tree root\"?). See also the [example resulting vendor.json in my repo](https://github.com/zpas-lab/vendo/blob/a6ce93e8a5784d1c1c42e9777e9614a1d7b6c3b3/vendor.json).\r\n    - With that said, I now notice I've apparently used an [older version of the spec](https://github.com/kardianos/vendor-spec/blob/aedbf313488aa9887871048ddcc6f8a70ac02eab/README.md) (built the tool some time ago), e.g. where the vendor.json file was located in the repo's root dir, not in vendor/ (or did I misunderstand something?). Seems I have to review what's changed. To tell the truth, personally I'd prefer vendor.json to stay in the root dir (one of the reasons being that for now I use \"_vendor/\", not \"vendor/\"; but not only).\r\n\r\n***edit:*** uh, oh; I've glanced over the [changes since Jun 12](https://github.com/kardianos/vendor-spec/compare/aedbf313488aa9887871048ddcc6f8a70ac02eab...86e6a75382b14d968feef4d7a0edb662b36eddd8), and my initial impression is that I think I wouldn't be able to build my tool with the spec as it looks today, unfortunately :(\r\n\r\n@mattfarina:\r\n\r\n\u003e - There are times where you don't know the VCS type. For example, the url https://example.com/foo/bar could be the path to a package but there isn't enough detail to capture which VCS is behind it. [...]\r\n\r\nPersonally, as of now I'm not really convinced this is actually needed/useful. What if the repo owner changes the VCS used? And even if not, I'm not quite sure why one can't autodetect it the same way as the go tool does this. But even if I'm wrong in this regard, the vendor-spec specifially allows to add any custom fields to the JSON file, so I don't see why a tool couldn't just go on and do that?\r\n\r\n\u003e - To produce a reproducible build you really need to capture the complete dependency tree and the pinned versions (commit ids) for everything. [...]\r\n\r\nUh, that's exactly what I'm doing with https://github.com/zpas-lab/vendo using vendor-spec; thus I believe it *is* totally easy to do with vendor-spec; did you have some specific trouble with that, could you elaborate?\r\n\r\n\u003e - Why is there a RevisionTime on each package? What use case does that help to solve? [...]\r\n\r\nOne recent event that I believe is a perfect illustration of how RevisionTime is awesome is the migration of code.google.com projects to github. Given that it often involved migration from hg to git as a side effect, you're effectively losing the information the hash ID gave you (that is, the Revision field becomes useless), but the RevisionTime should stay perfectly relevant. Thus giving a trivial way to find a corresponding commit in the new (github) repo, and also to check what new commits were introduced since last time you checked/pinned.",
	"user": {
		"login": "akavel",
		"id": 273837,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-29T11:57:20Z",
	"updated_at": "2015-12-29T12:11:33Z"
}
