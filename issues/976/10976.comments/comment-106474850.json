{
	"id": 106474850,
	"body": "We don't shrink stacks if they are in syscall, so I think this is not a bug.\r\n\r\nsrc/runtime/stack1.go:809\r\n\t// We can't copy the stack if we're in a syscall.\r\n\t// The syscall might have pointers into the stack.\r\n\tif gp.syscallsp != 0 {\r\n\t\treturn\r\n\t}\r\n\r\nI had some ideas about how to shrink without copying (use a buddy list allocator for stacks).  But the complexity seemed unnecessary.  The only case it would matter is when the goroutine used a large stack, then popped most of it, then made a syscall.",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-05-28T16:40:26Z",
	"updated_at": "2015-05-28T16:40:26Z"
}
