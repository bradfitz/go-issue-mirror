{
	"id": 128343215,
	"number": 14078,
	"state": "closed",
	"title": "proposal: regexp: add CompileSyntax",
	"body": "Currently there is, I believe, no way to turn a `syntax.Regex` AST into an executable `regexp.Regex` from outside the regexp package. How about adding\r\n\r\n    func CompileSyntax(ast *syntax.Regexp) (*Regexp, error)\r\n\r\n to the regexp package?\r\n\r\nThe implementation would be mostly trivial because the first step in `regexp.Compile` is already to build a `syntax.Regexp`.\r\n\r\nThe regexp.Regexp struct does have an `expr string` field, which could be populated with `ast.String()` in `CompileSyntax`.\r\n\r\nIf people agree that this is a good idea then I'm happy to make the CL.",
	"user": {
		"login": "alexflint",
		"id": 640247,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		},
		{
			"name": "Proposal-Declined"
		}
	],
	"comments": 8,
	"closed_at": "2016-08-15T23:36:44Z",
	"created_at": "2016-01-23T17:59:47Z",
	"updated_at": "2016-08-15T23:36:50Z",
	"milestone": {
		"id": 1373555,
		"number": 30,
		"title": "Proposal"
	}
}
