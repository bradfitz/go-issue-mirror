{
	"id": 163056936,
	"number": 16222,
	"state": "closed",
	"title": "os/exec: CommandContext documentation doesn't say that context is ignored until Wait",
	"body": "The new CommandContext function in `os/exec` is documented as:\r\n\r\n```\r\n// CommandContext is like Command but includes a context.\r\n//\r\n// The provided context is used to kill the process (by calling\r\n// os.Process.Kill) if the context becomes done before the command\r\n// completes on its own.\r\n```\r\n\r\nI was surprised to learn that the provided context is entirely ignored until Wait is called (perhaps implicitly via Run).  I think that's a reasonable implementation choice (without calling c.Process.Wait, it's hard to know if the process is still around to send a signal to), but it is not supported by the documentation for CommandContext or Wait.\r\n\r\n(I could also imagine that Start should check the context for Done-ness before starting the process, like net.DialContext does, but the documentation is consistent with the implementation here.)",
	"user": {
		"login": "glasser",
		"id": 16724,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"closed_at": "2016-06-30T16:37:35Z",
	"created_at": "2016-06-30T00:28:51Z",
	"updated_at": "2016-06-30T16:37:35Z",
	"milestone": {
		"id": 1748849,
		"number": 42,
		"title": "Go1.8Maybe"
	}
}
