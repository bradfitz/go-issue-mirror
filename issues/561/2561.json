{
	"id": 51279385,
	"number": 2561,
	"state": "closed",
	"title": "spec: determine when bool is ideal bool",
	"body": "\u003cpre\u003eCompile this file (loosely based on test/named1.go) with 6g:\n\npackage p\n\ntype Bool bool\ntype Int int\ntype String string\n\nfunc B(Bool) {}\nfunc I(Int) {}\nfunc S(String) {}\n\nfunc F() {\n\tB(1 == 2)\n\tI(1 + 2)\n\tS(\u0026quot;1\u0026quot; + \u0026quot;2\u0026quot;)\n}\n\nI see this:\n\nfoo.go:12: cannot use false (type ideal bool) as type Bool in function argument\n\nIf the type of \u0026quot;1 == 2\u0026quot; is in fact \u0026quot;ideal bool\u0026quot;, then it would seem\nthat the function call should be permitted, by analogy with the other two function\ncalls.  However, the spec currently says \u0026quot;Comparison operators compare two operands\nand yield a value of type bool\u0026quot;.  From that I conclude that the compiler is correct\nto give an error, but that the error message should say \u0026quot;type bool\u0026quot;, not\n\u0026quot;type ideal bool\u0026quot;.\u003c/pre\u003e",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "LanguageChange"
		}
	],
	"comments": 14,
	"closed_at": "2014-12-08T10:13:40Z",
	"created_at": "2011-12-13T17:59:57Z",
	"updated_at": "2016-06-24T21:21:47Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
