{
	"id": 243865265,
	"body": "On Wed, Aug 31, 2016 at 11:25 AM, Lynn Boger \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e It certainly seems like a bad thing to write code with lwarx and stcwx\n\u003e that way. Are you saying not to worry about that case and if someone\n\u003e reported it they would be told it's illegal? I don't think it would have to\n\u003e be Go asm, I think someone could write a\n\u003e\nYes, we can say \"don't do that\".  lwarx and stcwx don't pair across a\npreemption point.  Same as depending on register state to be preserved\nacross a preemption point - it may work in the common case, but not if a\npreemption occurs.\n\n\u003e Let me back up to what prompted this issue to begin with. We are looking\n\u003e at ways to improve some of the atomic loads and stores on ppc64le so they\n\u003e don't have to do as many syncs -- maybe remove some or replace with lwsync\n\u003e in some cases. Changing some of those would depend on having a sync in\n\u003e gosave when a goroutine is swapped off a thread. So my thought was to put\n\u003e the change into gosave first separately and then follow with the other\n\u003e changes to some of the atomics. If it's preferred that all changes related\n\u003e to syncs and lwsyncs are done in one change we can do that instead.\n\u003e\n Your plan sounds fine.  All changes don't have to be in one CL.\n\n\u003e â€”\n\u003e You are receiving this because you commented.\n\u003e Reply to this email directly, view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/16928#issuecomment-243855260\u003e, or mute\n\u003e the thread\n\u003e \u003chttps://github.com/notifications/unsubscribe-auth/AGkgIBFzfKN53W4iyzd_t6HVDWZ49VjRks5qlcb_gaJpZM4Jw0w5\u003e\n\u003e .\n\u003e\n",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-31T18:57:52Z",
	"updated_at": "2016-08-31T18:57:52Z"
}
