{
	"id": 129543980,
	"number": 14136,
	"state": "closed",
	"title": "cmd/compile: deduplicated errors on same line still trigger \"too many errors\"",
	"body": "For a given line, Go prints the same error only once. For example, trying to use the same unknown field in a struct initialiser multiple times will only emit one error, if that struct initialiser is written on a single line. However, each suppressed error still increments the error counter in Yyerror, which can lead to a \"too many errors\" even if just one error was actually printed. This can be mildly confusing, and reduces the usefulness of deduplication.\r\n\r\n**Input**\r\nhttp://play.golang.org/p/S18DnIr63o\r\n```\r\npackage main\r\n\r\ntype T struct{}\r\n\r\nfunc main() {\r\n\tt := T{X: 1, X: 1, X: 1, X: 1, X: 1, X: 1, X: 1, X: 1, X: 1, X: 1}\r\n\tvar s string = 1\r\n}\r\n```\r\n\r\n**Output**\r\n```\r\nprog.go:6: unknown T field 'X' in struct literal\r\nprog.go:6: too many errors\r\n```\r\n\r\n**Expected output**\r\n```\r\nprog.go:6: unknown T field 'X' in struct literal\r\nprog.go:7: cannot use 1 (type int) as type string in assignment\r\n```",
	"user": {
		"login": "dominikh",
		"id": 39825,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-05-19T23:20:40Z",
	"created_at": "2016-01-28T18:59:14Z",
	"updated_at": "2016-05-19T23:20:40Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
