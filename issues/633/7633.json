{
	"id": 51286995,
	"number": 7633,
	"state": "closed",
	"title": "runtime: false retention due to span freelists",
	"body": "\u003cpre\u003eAfter \u003ca href=\"https://golang.org/cl/41040043\"\u003ehttps://golang.org/cl/41040043\u003c/a\u003e objects in span freelists are marked as\nallocated.\nIf GC ever scans a block with a pointer to such block, marking will succeed (it has only\nbitAllocated), and then GC will scan the dead object in freelist. This can cause\npersistent false retention.\n\nI was able to precisely identify only m0.moreargp and m0.morebuf.sp as causing this\nretention.\nBut I also see significant amount of heap blocks that has pointers to free blocks and\ncause retention (part of then is probably other M's). And also some 0x7f blocks with\nrandom non-aligned addresses and sizes (this is most likely fixed-size stacks).\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 11,
	"closed_at": "2014-12-08T10:42:25Z",
	"created_at": "2014-03-25T20:29:23Z",
	"updated_at": "2016-06-25T01:30:45Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
