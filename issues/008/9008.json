{
	"id": 51288978,
	"number": 9008,
	"state": "closed",
	"title": "astutil: RenameTop renames scoped variables too",
	"body": "\u003cpre\u003eIf I invoke RenameTop to change the name of a top level declaration, it will correctly\nscan through the code and rename all occurrences, but it falsely identifies scoped\nfields as top level declarations and renames them too.\n\nWhat does 'go version' print?\n\ngo version go1.3.3 linux/amd64\n\nWhat steps reproduce the problem?\n\n1. Create a source file with:\nfunc New() {}\nfunc Other() {\n    a := New()\n    b := somepackage.New()\n}\n2. astutil.RenameTop: New -\u0026gt; NewRenamed\n\nWhat happened?\n\nfunc NewRenamed() {}\nfunc Other() {\n    a := NewRenamed()\n    b := somepackage.NewRenamed()\n}\n\nWhat should have happened instead?\n\nfunc NewRenamed() {}\nfunc Other() {\n    a := NewRenamed()\n    b := somepackage.New()\n}\nI.e. the scoped function call should not have been renamed.\n\nPlease provide any additional information below.\n\nBy looking at the code, I think the problematic part is at isTopName\n(\u003ca href=\"https://code.google.com/p/go/source/browse/astutil/imports.go?repo=tools#384)\"\u003ehttps://code.google.com/p/go/source/browse/astutil/imports.go?repo=tools#384)\u003c/a\u003e, where\nthe function only checks for scoped objects, but not for scoped packages.\u003c/pre\u003e",
	"user": {
		"login": "karalabe",
		"id": 129561,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:49:30Z",
	"created_at": "2014-10-28T14:56:00Z",
	"updated_at": "2016-06-25T01:43:41Z"
}
