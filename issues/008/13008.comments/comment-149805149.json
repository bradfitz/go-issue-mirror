{
	"id": 149805149,
	"body": "Can you please build with -gcflags=\"-N\", if that fixes the problem, then it may be an inlining bug. \n\n\n\n\u003e On 21 Oct 2015, at 18:02, Jakob Borg \u003cnotifications@github.com\u003e wrote:\n\u003e \n\u003e I'm hitting something really weird on go version devel +3bc0601 Tue Oct 20 03:16:09 2015 +0000 darwin/amd64. I don't have a small reproducer, so I'll just show you what I get and see what we can figure out from that. I have this method, that essentially just calculates a percentage:\n\u003e \n\u003e // Completion returns the completion status, in percent, for the given device\n\u003e // and folder.\n\u003e func (m *Model) Completion(device protocol.DeviceID, folder string) float64 {\n\u003e     m.fmut.RLock()\n\u003e     rf, ok := m.folderFiles[folder]\n\u003e     m.fmut.RUnlock()\n\u003e     if !ok {\n\u003e         return 0 // Folder doesn't exist, so we hardly have any of it\n\u003e     }\n\u003e \n\u003e     _, _, tot := rf.GlobalSize()\n\u003e     if tot == 0 {\n\u003e         return 100 // Folder is empty, so we have all of it\n\u003e     }\n\u003e \n\u003e     var need int64\n\u003e     rf.WithNeedTruncated(device, func(f db.FileIntf) bool {\n\u003e         need += f.Size()\n\u003e         return true\n\u003e     })\n\u003e \n\u003e     needRatio := float64(need) / float64(tot)\n\u003e     l.Debugln(\"needRatio:\", needRatio)\n\u003e     completionPct := 100 * (1 - needRatio)\n\u003e     l.Debugln(\"completionPct:\", completionPct)\n\u003e     l.Debugf(\"%v Completion(%s, %q): %f (%d / %d = %f)\", m, device, folder, completionPct, need, tot, needRatio)\n\u003e \n\u003e     return completionPct\n\u003e }\n\u003e The relevant part for this report is the last part, needRatio := ... and so on. When run as it looks above, I get the following log output (which is correct and as expected):\n\u003e \n\u003e [JMFJC] 2015/10/21 08:59:24.944322 logger.go:296: DEBUG: needRatio: 0\n\u003e [JMFJC] 2015/10/21 08:59:24.944353 logger.go:296: DEBUG: completionPct: 100\n\u003e [JMFJC] 2015/10/21 08:59:24.944470 logger.go:304: DEBUG: model@0xc820748600 Completion(373HSRP-QLPNLIE-JYKZVQF-P4PKZ63-R2ZE6K3-YD442U2-JHBGBQG-WWXAHAU, \"s23\"): 100.000000 (0 / 12296478 = 0.000000)\n\u003e If I comment out two of the debug prints:\n\u003e \n\u003e     needRatio := float64(need) / float64(tot)\n\u003e     // l.Debugln(\"needRatio:\", needRatio)\n\u003e     completionPct := 100 * (1 - needRatio)\n\u003e     // l.Debugln(\"completionPct:\", completionPct)\n\u003e     l.Debugf(\"%v Completion(%s, %q): %f (%d / %d = %f)\", m, device, folder, completionPct, need, tot, needRatio)\n\u003e \n\u003e     return completionPct\n\u003e }\n\u003e Then I get the following output:\n\u003e \n\u003e [JMFJC] 2015/10/21 09:00:31.222311 logger.go:304: DEBUG: model@0xc820787400 Completion(373HSRP-QLPNLIE-JYKZVQF-P4PKZ63-R2ZE6K3-YD442U2-JHBGBQG-WWXAHAU, \"s23\"): 301295835217774195877081356294600623999623875498227347264658436707288007434290836880071246344289875456553039631746301745699977654284466935487418350473778212994407067832680206835633320817493452436173546848256.000000 (0 / 12296478 = 0.000000)\n\u003e Note that completionPct has taken on a bizarre value - uninitialized? Printing it separately on the line before fixes this...\n\u003e \n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub.\n\u003e \n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-21T07:34:52Z",
	"updated_at": "2015-10-21T07:34:52Z"
}
