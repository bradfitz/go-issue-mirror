{
	"id": 153850707,
	"body": "Please try with -l (ell) but not -N.\n\nIt's possible this is a dup of #12411 but I expected that one had something to do with the deep nesting. There's no nesting here.\n\nI tried starting with your example code and defining enough scaffolding to make it compile, and then I commented out the same prints and looked for a mishandling of completionPct, but I don't see it. It would help a bit if you could try building both the buggy and the non-buggy versions of the code with -S (that is, -gcflags -S), redirecting to separate files. The output is a sequence of assembly listings, one per function, each starting with an unindented line giving the function name. If you could send the disassembly of just the Completion method with and without the bug, that would be helpful. For example you might see a file like\n\n\t...\n\t\"\".(*Model).Completion t=1 size=1744 value=0 args=0x28 locals=0xf0\n\t\t0x0000 00000 (x.go:28)\tTEXT\t\"\".(*Model).Completion(SB), $240-40\n\t\t0x0000 00000 (x.go:28)\tMOVQ\t(TLS), CX\n\t\t0x0009 00009 (x.go:28)\tLEAQ\t-112(SP), AX\n\t\t0x000e 00014 (x.go:28)\tCMPQ\tAX, 16(CX)\n\t...\n\nand I'm asking for the part starting at the TEXT line until the section for the next function in the file.\n\nThanks.",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-04T20:17:55Z",
	"updated_at": "2015-11-04T20:17:55Z"
}
