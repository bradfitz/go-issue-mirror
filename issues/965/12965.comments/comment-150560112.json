{
	"id": 150560112,
	"body": "This was mainly an experiment to see if this option worked and how much \nit helped when building Docker on ppc64le.\n\nThanks\n\nOn 10/22/2015 04:49 PM, Chris Manghane wrote:\n\u003e\n\u003e Thanks for the extra information. I suppose I should say this is a \n\u003e long-standing problem I encountered when implementing escape analysis. \n\u003e The dataflow class was not being used previously, and I stole it for \n\u003e the purposes of escape analysis. The implementation is already not \n\u003e up-to-date and using it with escape analysis puts pressure on those \n\u003e fragile parts. I plan to clean up the majority of the escape analysis \n\u003e code to make it fit the code around it in the following months.\n\u003e\n\u003e As an aside, is there a particular project that you need escape \n\u003e analysis in gccgo for (that you can mention)? If so, I'd like to work \n\u003e with you to make sure the implementation fits your needs. It is 100% \n\u003e untested in the wild and the results within the stdlib are \n\u003e inconclusive. I'd like those last two statements to be incorrect in \n\u003e the near future.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub \n\u003e \u003chttps://github.com/golang/go/issues/12965#issuecomment-150365967\u003e.\n\u003e\n\n",
	"user": {
		"login": "laboger",
		"id": 9433228,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-23T12:38:24Z",
	"updated_at": "2015-10-23T12:38:24Z"
}
