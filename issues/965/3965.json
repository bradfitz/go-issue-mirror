{
	"id": 51281437,
	"number": 3965,
	"state": "closed",
	"title": "go/printer: inconsistently aligns values in struct/proto literal",
	"body": "\u003cpre\u003egofmt -w x.go\n\nwith x.go:\n\npackage p\n\n// aligned\nvar _ = T1{\n\ta:                    x,\n\tb:                    y,\n\tcccccccccccccccccccc: z,\n}\n\n// not aligned\nvar _ = T2{\n\ta: x,\n\tb: y,\n\tccccccccccccccccccccc: z,\n}\n\n// aligned\nvar a = T3{\n\taaaaaaaaaaaaaaaaaaaa: x,\n\tb:                    y,\n\tc:                    z,\n}\n\n// still aligned\nvar a = T4{\n\taaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa: x,\n\tb:                                       y,\n\tc:                                       z,\n}\n\ngofmt aligns \u0026quot;similarly sized\u0026quot; composite literal elements; it breaks the\ngrouping when an internal threshold is reached. This works fine for T1, T2, and T3. But\nthe algorithm is not working for T4.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:21:02Z",
	"created_at": "2012-08-16T21:27:13Z",
	"updated_at": "2016-06-24T22:23:14Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
