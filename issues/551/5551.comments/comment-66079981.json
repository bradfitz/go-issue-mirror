{
	"id": 66079981,
	"body": "\u003ca id=\"c17\"\u003e\u003c/a\u003eComment 17:\n\n\u003cpre\u003e\u003e On the current issue: if you want to get your hands dirty, feel free to give it a\nshot. Using gofmt's parse might indeed work - it does maintain comments.\n\u003e \n\u003e The real underlying problem is that go/ast doesn't attach comments to nodes. I am\nworking on a larger-scale solution to fix that issue, but it's not quite ready yet (and\nwon't be for 1.4).\n\nSounds good. I can definitely tackle this issue by now. Using parse() does preserve the\ncomments and I've already tested it out, you can see at\n\u003ca href=\"https://github.com/shurcooL/go/compare/golang-issue-5551\"\u003ehttps://github.com/shurcooL/go/compare/golang-issue-5551\u003c/a\u003e. It makes sense to simply reuse\nthe code of gofmt until there's a larger-scale solution for go/ast with attached\ncomments, which can then be applied to both.\n\n\u003e gofmt should never change the contents of a literal, string or other.\n\nMakes sense, so I'll open issue about the bug in gofmt. I'll have to fix that first\nbefore I can start using gofmt's parse() in go/format to close this issue, otherwise\ngo/format tests will fail.\u003c/pre\u003e",
	"user": {
		"login": "shurcooL",
		"id": 1924134,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-08-22T20:19:47Z",
	"updated_at": "2014-12-08T10:30:11Z"
}
