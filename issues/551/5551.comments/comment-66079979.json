{
	"id": 66079979,
	"body": "\u003ca id=\"c15\"\u003e\u003c/a\u003eComment 15:\n\n\u003cpre\u003eHi,\n\nIt's been over a year and I'd really like to see this bug fixed.\n\nAnother easier way of fixing it is to use the parse() from gofmt.\n\nIn doing so, I realized that go/format.Source() and gofmt have different output on one\nof go/format's test cases.\n\n\"\\n\\t\\t\\n\\n\\t\\t\\tx := 0\\n\\t\\t\\tconst s = `\\nfoo\\n`\\n\\n\\n\", // no indentation inside raw\nstrings\n\ngo/format will not add indentation inside raw strings, but gofmt will. So simply copying\ngofmt's behavior (which preserves comments in partial Go programs) will cause\ngo/format's tests to fail.\n\nformat $ go test\n--- FAIL: TestPartial (0.00 seconds)\n\tformat_test.go:123: formatting incorrect:\n\t\tsource: \"\\n\\t\\t\\n\\n\\t\\t\\tx := 0\\n\\t\\t\\tconst s = `\\nfoo\\n`\\n\\n\\n\"\n\t\tresult: \"\\n\\t\\t\\n\\n\\t\\t\\tx := 0\\n\\t\\t\\tconst s = `\\n\\t\\t\\tfoo\\n\\t\\t\\t`\\n\\n\\n\"\nFAIL\nexit status 1\n\nIs that a bug that should be filed in cmd/gofmt? Which of the two behaviors should be\nconsidered \"correct\"?\u003c/pre\u003e",
	"user": {
		"login": "shurcooL",
		"id": 1924134,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-08-22T09:01:06Z",
	"updated_at": "2014-12-08T10:30:11Z"
}
