{
	"id": 107883793,
	"number": 12725,
	"state": "open",
	"title": "x/mobile: android bind/java/Seq.java forces application context binding on library load",
	"body": "Problem\r\n-----------\r\n1) It is not required to bind an application context for go \u003c-\u003e jni code to work. For native activities that uses context, this might be case, but not all go library code needs this.\r\n\r\n2) Compatibility issues if context is auto-bound. In the wild we have experienced wild/random crashes that is related to the order of webview native libary loading before/after golib plus other jni libraries. Our fix required us to load each library in a specific order and/or not binding to application context.\r\n\r\nSource\r\n-------\r\n\r\nAt Line 29 of bind/java/Seq.java, application context is passed/set to golib via jni.\r\n\r\n```java\r\nstatic {\r\n\t\t// Look for the shim class auto-generated by gomobile bind.\r\n\t\t// Its only purpose is to call System.loadLibrary.\r\n\t\ttry {\r\n\t\t\tClass.forName(\"go.LoadJNI\");\r\n\t\t} catch (ClassNotFoundException e) {\r\n\t\t\t// Ignore, assume the user will load JNI for it.\r\n\t\t\tLog.w(\"GoSeq\", \"LoadJNI class not found\");\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\t// TODO(hyangah): check proguard rule.\r\n\t\t\tApplication appl = (Application)Class.forName(\"android.app.AppGlobals\").getMethod(\"getInitialApplication\").invoke(null);\r\n\t\t\tContext ctx = appl.getApplicationContext();\r\n\t\t\tsetContext(ctx);\r\n\r\n\t\t} catch (Exception e) {\r\n\t\t\tLog.w(\"GoSeq\", \"Global context not found:\" + e);\r\n\t\t}\r\n\r\n\t\tinitSeq();\r\n\t\tnew Thread(\"GoSeq\") {\r\n\t\t\tpublic void run() { Seq.receive(); }\r\n\t\t}.start();\r\n\t}\r\n```\r\n\r\nProposal\r\n--------------\r\n\r\nDo not auto bind application context on library load. Let user decide. \r\n\r\n\r\n```java\r\nstatic {\r\n\t\t// Look for the shim class auto-generated by gomobile bind.\r\n\t\t// Its only purpose is to call System.loadLibrary.\r\n\t\ttry {\r\n\t\t\tClass.forName(\"go.LoadJNI\");\r\n\t\t} catch (ClassNotFoundException e) {\r\n\t\t\t// Ignore, assume the user will load JNI for it.\r\n\t\t\tLog.w(\"GoSeq\", \"LoadJNI class not found\");\r\n\t\t}\r\n\r\n\t\tinitSeq();\r\n\t\tnew Thread(\"GoSeq\") {\r\n\t\t\tpublic void run() { Seq.receive(); }\r\n\t\t}.start();\r\n\t}\r\n```\r\n",
	"user": {
		"login": "diegomontoya",
		"id": 417764,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"created_at": "2015-09-23T09:46:23Z",
	"updated_at": "2015-10-17T04:04:27Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
