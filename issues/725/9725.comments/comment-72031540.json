{
	"id": 72031540,
	"body": "As far as I see, it requires using read syscall to access cpu cycle counter. This may be too expensive for tracer. However, we don't have better solutions for now.\r\nI was thinking about converting a low-frequency monotonic timer into monotonically increasing:\r\n\r\nvar prevTicks int64\r\n\r\nfunc cputicks() int64 {\r\n  for {\r\n    x := nanotime()\r\n    p := prevTicks\r\n    if x \u003c= p {\r\n      x = p + 1\r\n    }\r\n    if cas(\u0026prevTicks, p, x) {\r\n      return x\r\n    }\r\n  }\r\n}\r\n\r\nThis also can be slow and obviously will give locally skewed traces.",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-01-29T14:19:03Z",
	"updated_at": "2015-01-29T14:19:03Z"
}
