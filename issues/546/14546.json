{
	"id": 137005324,
	"number": 14546,
	"state": "closed",
	"title": "runtime: runtime error: cgo argument has Go pointer to Go pointer",
	"body": "CC @ianlancetaylor \r\n\r\nNoticed from http://stackoverflow.com/questions/35673161/convert-go-byte-to-a-c-char#35675259\r\n\r\nThese two very similar programs, but one crashes while other succeeds.\r\n\r\n```\r\n$ go version\r\ngo version devel +387d5b8 Sat Feb 13 17:33:22 2016 +0000 linux/amd64\r\n$ cat nocrash.go\r\npackage main\r\n\r\nimport (\r\n        \"bytes\"\r\n        \"log\"\r\n        \"unsafe\"\r\n)\r\n\r\n/*\r\nvoid the_function(const void *data, int nbytes) {\r\n}\r\n*/\r\nimport \"C\"\r\n\r\nfunc main() {\r\n        buf := new(bytes.Buffer)\r\n        _, err := buf.Write([]byte{1, 2, 3})\r\n        if err != nil {\r\n                log.Fatal(err)\r\n        }\r\n        b := buf.Bytes()\r\n        C.the_function(unsafe.Pointer(\u0026b[0]), C.int(buf.Len()))\r\n}\r\n$ go run nocrash.go\r\n$ cat crash.go\r\npackage main\r\n\r\nimport (\r\n        \"bytes\"\r\n        \"log\"\r\n        \"unsafe\"\r\n)\r\n\r\n/*\r\nvoid the_function(const void *data, int nbytes) {\r\n}\r\n*/\r\nimport \"C\"\r\n\r\nfunc main() {\r\n        buf := new(bytes.Buffer)\r\n        _, err := buf.Write([]byte{1, 2, 3})\r\n        if err != nil {\r\n                log.Fatal(err)\r\n        }\r\n        C.the_function(unsafe.Pointer(\u0026(buf.Bytes())[0]), C.int(buf.Len()))\r\n}\r\na@spot: a $ go run crash.go\r\npanic: runtime error: cgo argument has Go pointer to Go pointer\r\n\r\ngoroutine 1 [running]:\r\nmain._cgoCheckPointer0(0x4c5a60, 0xc820054094, 0x0, 0x0, 0x0, 0x0)\r\n        command-line-arguments/_obj/_cgo_gotypes.go:40 +0x4d\r\nmain.main()\r\n        /home/a/src/a/crash.go:21 +0x1f8\r\nexit status 2\r\n$\r\n```\r\n\r\nGiven current bytes.Buffer implementation I don't understand why crash.go crashes.\r\n\r\nAlex",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-02-28T07:35:51Z",
	"created_at": "2016-02-28T04:21:08Z",
	"updated_at": "2016-02-28T07:35:51Z"
}
