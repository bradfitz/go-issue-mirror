{
	"id": 228218552,
	"body": "@Carpetsmoker And now that you mentioned it, your original example is following the same heuristics. Note that:\r\n```\r\nvar foo = map[string]string{\r\n\t\"foo\":        \"bar\",\r\n\t\"foobar\":     \"foobar\",\r\n\t\"ﺎﻠﻋَﺮَﺒِﻳﺓ\": \"foo\",\r\n\t\"foo11\":    \"bar\",\r\n\t\"foobar11\": \"foobar\",\r\n}\r\n```\r\nbut:\r\n```\r\nvar foo = map[string]string{\r\n\t\"foo\":        \"bar\",\r\n\t\"foobar\":     \"foobar\",\r\n\t\"ﺎﻠﻋَﺮَﺒِﻳﺓ\": \"foo\",\r\n\t\"foo111\":     \"bar\",\r\n\t\"foobar11\":   \"foobar\",\r\n}\r\n```\r\n(GitHub's issue tracker formats a bit differently, but in Sublime the latter is perfectly aligned.) That is, again, here the foo11 crosses the threshold.\r\n\r\nI double-checked the implementation of text/tabwriter, and it uses actual rune (Unicode) count to determine the width of text: see updateWidth in https://golang.org/src/text/tabwriter/tabwriter.go?h=updateWidth#L380.\r\n\r\nThus, this is all working as intended.",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	},
	"created_at": "2016-06-23T23:46:48Z",
	"updated_at": "2016-06-23T23:46:48Z"
}
