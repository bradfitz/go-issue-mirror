{
	"id": 51289015,
	"number": 9037,
	"state": "open",
	"title": "time: time.Time's UnmarshalJSON produces bad error message when given \"null\"",
	"body": "by **dannyyoo@google.com**:\n\n\u003cpre\u003eThe following demonstrates the problem:\n\n---------------\npackage main\n\nimport (\n    \u0026quot;encoding/json\u0026quot;\n    \u0026quot;fmt\u0026quot;\n    \u0026quot;bytes\u0026quot;\n    \u0026quot;time\u0026quot;\n)\n\ntype RegisterStructure struct {\n    SignupTimestamp time.Time `json:\u0026quot;signuptimestamp,omitempty\u0026quot;`\n}\n\nfunc main() {\n    requestBody := []byte(`{\u0026quot;signuptimestamp\u0026quot; : null}`)\n    dec := json.NewDecoder(bytes.NewReader(requestBody))\n    registerInstance := RegisterStructure{}\n    err := dec.Decode(\u0026amp;registerInstance)\n    if err != nil {\n        fmt.Println(err)\n    }\n}\n---------------\n\nThis reports the following error:\n\n----------------------------\nparsing time \u0026quot;null\u0026quot; as \u0026quot;\u0026quot;2006-01-02T15:04:05Z07:00\u0026quot;\u0026quot;:\ncannot parse \u0026quot;null\u0026quot; as \u0026quot;\u0026quot;\u0026quot;\n----------------------------\n\n\nInstead, what should probably happen is to set to the time.Time zero value.  This came\nup in the course of answering on Stack Overflow:\n\n\u003ca href=\"http://stackoverflow.com/questions/26684752/json-decode-cannot-parse-timestamp-in-json-into-go-struct\"\u003ehttp://stackoverflow.com/questions/26684752/json-decode-cannot-parse-timestamp-in-json-into-go-struct\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		}
	],
	"comments": 10,
	"created_at": "2014-11-01T01:21:13Z",
	"updated_at": "2016-05-19T15:49:19Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
