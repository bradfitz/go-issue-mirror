{
	"id": 51286588,
	"number": 7358,
	"state": "closed",
	"title": "runtime: small cyclical structs not being freed",
	"body": "by **fuzxxl**:\n\n\u003cpre\u003eAttached is a program that defines a simple data structure\n\n    type Test struct {\n        t *Test\n    }\n\nObjects of type test are created with a finalizer and in a way that t always points to\nthem.\n\nThe attached program creates a couple of Test structs and sends them over a channel to\nensure that they are not allocated on the stack. I expected that the finalizers are\nbeing run as Test only points to itself.\n\nActually, the garbage collector does not free any of the Test structs. This looks like\nas if it was within a possible interpretation of the documentation for\nruntime.SetFinalizer().\n\nI request that the behavior be changend so that finalizers are being run when there are\nonly finalizer cycles of length 1 (i.e. a struct points to itself). I'm unsure if this\nis a bug or a feature request.\n\nHere is some shell output to help you figure out what go version and operating system\nI'm using:\n\n$ uname -a\nLinux t520 3.8.0-35-generic #50-Ubuntu SMP Tue Dec 3 01:24:59 UTC 2013 x86_64 x86_64\nx86_64 GNU/Linux\n$ go version\ngo version devel +06c20cdf7bc0 Mon Sep 23 18:11:25 2013 +1000 linux/amd64\n$ lsb_release -a\nNo LSB modules are available.\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 13.04\nRelease:\t13.04\nCodename:\traring\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/7358/0/bar.go\"\u003ebar.go\u003c/a\u003e (405 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 9,
	"closed_at": "2014-12-08T10:40:56Z",
	"created_at": "2014-02-19T13:17:09Z",
	"updated_at": "2016-06-25T01:27:53Z"
}
