{
	"id": 137270650,
	"body": "I think you're right that the only documentation for pax is the man page in the POSIX spec! I was curious so I googled around until I found something resembling an explanation for including the process ID in the header name. Here's what I found in [ftp://std.dkuug.dk/jtc1/sc22/def/n3511.pdf]:\r\n\r\n1916  Rationale: Previously there was no way for the implementation \r\n1917  (or the user) to ensure that different instances of pax extracting \r\n1918  a file named \"/a/b/foo\" will not collide when processing the extended \r\n1919  header information associated with \"foo\". \r\n\r\nI don't understand the problem, much less how the process ID of the pax process which /created/ the archive is the solution.\r\n\r\nAs someone pointed out on golang-dev, what actually got added was an /option/ for the user of pax to include the process ID in the name, as well as a default setting which includes it:\r\n\r\n1896  On Page: 701  Line: 27030-27065  Section: pax \r\n1897  In the OPTIONS section, -o option, Line 27042, change the table entry \r\n1898  from: \r\n1899    %%   A '%' character. \r\n1900  to: \r\n1901    %p   The process ID of the pax process. \r\n1902    %%   A '%' character. \r\n1903  On Line 27046, change from: \r\n1904    %d/PaxHeaders/%f \r\n1905  to: \r\n1906    %d/PaxHeaders.%p/%f \r\n\r\nAs a user of POSIX pax, you're free to set that format string to whatever you like. How could the extracting process possibly rely on it then?\r\n\r\nI took a quick peek at gnu tar and bsd tar.\r\n\r\ngnu tar respects POSIX and includes the flag and its default %d/PaxHeaders.%p/%f when creating a header, but doesn't otherwise touch the value in exthdr.name.\r\n\r\nbsd tar doesn't even provide a flag and just puts the equivalent of %d/PaxHeaders/%f into exthdr.name. It, too, doesn't ever look at that field when reading an archive.\r\n\r\nThe bsd tar man page points out the pax interchange format is a valid ustar archive, and\r\n\r\n\"older implementations that do not fully support these\r\nextensions will extract the metadata into regular files, where the\r\nmetadata can be examined as necessary.\"\r\n\r\nIt appears that the exthdr.name field's only purpose is to look like an ordinary ustar header so that it will be extracted as a file/directory by older tools with a name that obviously suggests something went wrong.\r\n\r\nI have to side with the BSD guys here and suggest dropping the process ID entirely from the name. I don't think it matters what we put there, since it doesn't look like any tool out there examines that field, much less parses it. I think dir/PaxHeaders/file is a reasonable choice of what the put there. Older tools can read it and treat it like an ordinary file. Tools that know about PAX will completely ignore it.",
	"user": {
		"login": "dadkins",
		"id": 507004,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-02T23:11:34Z",
	"updated_at": "2015-09-02T23:11:34Z"
}
