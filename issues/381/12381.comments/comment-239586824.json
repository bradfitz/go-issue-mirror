{
	"id": 239586824,
	"body": "@bradfitz Noted.\r\n\r\nIn ADO.NET there is both an overloaded function to generate a param and you can use a struct literal (in go parlance) to specify it. Often none of the overloads do what I want so I use a combination of function + struct literal (it is an interesting C# syntax that allows that). From that experience I tend to shy away from function helpers in this context.\r\n\r\nWhat I would recommend is to not include a function helper. If an application wants to it can specify a helper function in the data access that meets the particular need. I would prefer just sql.Param as a name, rather than sql.NamedParam, but the preference is small.\r\n\r\nI've haven't referenced this directly in this issue thus far, but I also think it important to have an optional type in the NamedParam struct as well, default value `TypeUnknown`.\r\n\r\nHow do you feel about including type information in the NamedParam type? Possibly Length, Precision, and Scale as well.\r\n",
	"user": {
		"login": "kardianos",
		"id": 755121,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-12T23:59:22Z",
	"updated_at": "2016-08-12T23:59:22Z"
}
