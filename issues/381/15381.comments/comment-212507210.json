{
	"id": 212507210,
	"body": "From bind(2) manual:\r\n\u003e The rules used in name binding vary between address families.  Consult the manual entries in Section 7 for detailed information.  For AF_INET see ip(7), for AF_INET6 see ipv6(7), for  AF_UNIX see unix(7), for AF_APPLETALK see ddp(7), for AF_PACKET see packet(7), for AF_X25 see x25(7) and for AF_NETLINK see netlink(7).\r\n\r\n\r\nFrom unix(7) about AF_UNIX family sockets:\r\n\u003e pathname: a UNIX domain socket can be bound to a null-terminated file system pathname using bind(2).  When the address of the socket is  returned  by  getsockname(2),  getpeername(2),  and           accept(2), its length is offsetof(struct sockaddr_un, sun_path) + strlen(sun_path) + 1, and sun_path contains the null-terminated pathname.\r\n\r\n\r\nFrom sys/un.h\r\n```c\r\n# define SUN_LEN(ptr) ((size_t) (((struct sockaddr_un *) 0)-\u003esun_path)        \\\r\n                     + strlen ((ptr)-\u003esun_path))\r\n```\r\n\r\nIMHO: The patched C++ code (`bind(fd, (sockaddr *) \u0026sun, sun_len + sizeof(sun.sun_family))`) is the correct code, so this is not an actual bug.",
	"user": {
		"login": "olivecoder",
		"id": 1422833,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-20T16:41:13Z",
	"updated_at": "2016-04-20T17:09:53Z"
}
