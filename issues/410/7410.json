{
	"id": 51286663,
	"number": 7410,
	"state": "closed",
	"title": "net: fix spurious netpoll \"failed to associate\" error on Solaris",
	"body": "\u003cpre\u003eI can't reproduce this with go test net, but it sometimes happens (more often now) when\nrunning all.bash.\n\nnetpollupdate: failed to associate (81)\nfatal error: netpollupdate: failed to associate\n\nruntime stack:\nruntime.throw(0x7d8395)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/runtime/panic.c:463 +0x69\nruntime.netpollupdate(0xfffffd7fff150768, 0x400000000)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/runtime/netpoll_solaris.c:101 +0x109\nruntime.netpoll(0x7e5601)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/runtime/netpoll_solaris.c:179 +0x1d3\nfindrunnable()\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/runtime/proc.c:1244 +0x386\nschedule()\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/runtime/proc.c:1342 +0xe3\npark0(0xc2080027e0)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/runtime/proc.c:1405 +0xfe\nruntime.mcall(0x42afed)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/runtime/asm_amd64.s:181 +0x54\n\ngoroutine 16 [chan receive]:\ntesting.RunTests(0x7069b0, 0x7e2b60, 0x79, 0x79, 0x1)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/testing/testing.go:504 +0x909\ntesting.Main(0x7069b0, 0x7e2b60, 0x79, 0x79, 0x7d93a0, ...)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/testing/testing.go:435 +0x9e\nmain.main()\n\t/tmp/go-build639245680/net/_test/_testmain.go:321 +0x9c\n\ngoroutine 87 [syscall]:\nsyscall.sysvicall6(0xfffffd7fff2b03f0, 0x3, 0xc2080c3110, 0x800000, 0x0, ...)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/runtime/syscall_solaris.goc:65 +0x54\nsyscall.Open(0x63fd70, 0xe, 0x800000, 0x0, 0x0, ...)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/syscall/zsyscall_solaris_amd64.go:447 +0x11e\nos.OpenFile(0x63fd70, 0xe, 0x0, 0x0, 0x1, ...)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/os/file_unix.go:77 +0x9d\nos.Open(0x63fd70, 0xe, 0x7070d0, 0x0, 0x0)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/os/file.go:239 +0x66\nnet.open(0x63fd70, 0xe, 0x0, 0x0, 0x0)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/parse.go:66 +0x58\nnet.readProtocols()\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/lookup_unix.go:19 +0x4e\nsync.(*Once).Do(0x7ed800, 0x706f90)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/sync/once.go:40 +0x9a\nnet.lookupProtocol(0x647dd4, 0x4, 0x0, 0x0, 0x0)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/lookup_unix.go:47 +0x6a\nnet.parseNetwork(0x647dd0, 0x8, 0x647dd0, 0x3, 0x0, ...)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/dial.go:88 +0x726\nnet.ResolveIPAddr(0x647dd0, 0x8, 0x63ff30, 0x9, 0xc2080d9f01, ...)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/iprawsock.go:40 +0x93\nnet.TestResolveIPAddr(0xc2080e0000)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/ipraw_test.go:72 +0xeb\ntesting.tRunner(0xc2080e0000, 0x7e2f98)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/testing/testing.go:422 +0x9d\ncreated by testing.RunTests\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/testing/testing.go:503 +0x8d9\n\ngoroutine 40 [IO wait]:\nnet.runtime_pollWait(0xfffffd7fff1506b8, 0x77, 0x0)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/runtime/netpoll.goc:146 +0x76\nnet.(*pollDesc).Wait(0xc2080565a0, 0x77, 0x0, 0x0)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/fd_poll_runtime.go:84 +0x46\nnet.(*pollDesc).WaitWrite(0xc2080565a0, 0x0, 0x0)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/fd_poll_runtime.go:93 +0x42\nnet.(*netFD).connect(0xc208056540, 0x0, 0x0, 0xfffffd7fff14f820, 0xc20803eb40, ...)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/fd_unix.go:96 +0x1e9\nnet.(*netFD).dial(0xc208056540, 0xfffffd7fff14f7d0, 0x0, 0xfffffd7fff14f7d0,\n0xc20800cc60, ...)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/sock_posix.go:121 +0x333\nnet.socket(0x63c690, 0x3, 0x2, 0x2, 0x0, ...)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/sock_posix.go:91 +0x43b\nnet.internetSocket(0x63c690, 0x3, 0xfffffd7fff14f7d0, 0x0, 0xfffffd7fff14f7d0, ...)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/ipsock_posix.go:136 +0x179\nnet.dialTCP(0x63c690, 0x3, 0x0, 0xc20800cc60, 0x0, ...)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/tcpsock_posix.go:155 +0x11c\nnet.dialSingle(0x63c690, 0x3, 0xc2080011e0, 0xf, 0x0, ...)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/dial.go:238 +0x426\nnet.funcÂ·021(0xfffffd7fff14f768, 0xc20800cc60)\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/dial.go:200 +0xb4\ncreated by net.dialMulti\n\t/home/dfc/work/solaris-amd64-smartos-da7776a7f91c/go/src/pkg/net/dial.go:210 +0x24d\n\nRunning go test net in a loop has been very reliable for me, both on\nmy 2-core laptop and on a 24-way machine.\n\n    for i in `seq 30`; do go test net || break; done\n    ok   net 20.073s\n    ok   net 20.356s\n    ok   net 19.911s\n    ok   net 20.162s\n    ok   net 20.160s\n    ok   net 19.995s\n    ok   net 20.180s\n    ok   net 29.973s\n    ok   net 25.109s\n    ok   net 19.795s\n    ok   net 20.055s\n    ok   net 20.084s\n    ok   net 20.086s\n    ok   net 19.938s\n    ok   net 24.910s\n    ok   net 20.093s\n    ok   net 24.745s\n    ok   net 20.114s\n    ok   net 20.168s\n    ok   net 24.943s\n    ok   net 20.189s\n    ok   net 19.923s\n    ok   net 20.305s\n    ok   net 20.135s\n    ok   net 20.332s\n    ok   net 19.953s\n    ok   net 20.224s\n    ok   net 20.381s\n    ok   net 20.212s\n    ok   net 20.159s\n    : oos:aram;\n\n    : oos:net; for i in `seq 100`; do net.test -test.short || break; done\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    PASS\n    : oos:net;\n\nIt panics as it violates an assertion I've put in there. That assertion can only fail if\nthere's a race between closing file descriptors and rearming them in the netpoller.\n\nThinking about this, I've probably been too cautious and it's probably safe to remove\nthat assertion. The worst that could happen is a spurious netpoller wake. The best\nstrategy is fixing the underlying cause, however.\u003c/pre\u003e",
	"user": {
		"login": "4ad",
		"id": 1331747,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:41:11Z",
	"created_at": "2014-02-25T14:25:05Z",
	"updated_at": "2016-06-25T01:28:25Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
