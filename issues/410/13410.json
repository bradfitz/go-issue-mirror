{
	"id": 119077769,
	"number": 13410,
	"state": "closed",
	"title": "fmt/print.go",
	"body": "Hi!\r\n\r\nShould we have **isnum = true** moved out from **for** and placed before **return** ?\r\nIn this case **isnum** will be assigned to **true** once.\r\n\r\nNow we have (line 305):\r\n```\r\n   295  // parsenum converts ASCII to integer.  num is 0 (and isnum is false) if no number present.\r\n   296  func parsenum(s string, start, end int) (num int, isnum bool, newi int) {\r\n   297          if start \u003e= end {\r\n   298                  return 0, false, end\r\n   299          }\r\n   300          for newi = start; newi \u003c end \u0026\u0026 '0' \u003c= s[newi] \u0026\u0026 s[newi] \u003c= '9'; newi++ {\r\n   301                  if tooLarge(num) {\r\n   302                          return 0, false, end // Overflow; crazy long number most likely.\r\n   303                  }\r\n   304                  num = num*10 + int(s[newi]-'0')\r\n   305                  isnum = true\r\n   306          }\r\n   307          return\r\n   308  }\r\n```\r\n\r\nAnd maybe it should be like (line 306):\r\n```\r\n   295  // parsenum converts ASCII to integer.  num is 0 (and isnum is false) if no number present.\r\n   296  func parsenum(s string, start, end int) (num int, isnum bool, newi int) {\r\n   297          if start \u003e= end {\r\n   298                  return 0, false, end\r\n   299          }\r\n   300          for newi = start; newi \u003c end \u0026\u0026 '0' \u003c= s[newi] \u0026\u0026 s[newi] \u003c= '9'; newi++ {\r\n   301                  if tooLarge(num) {\r\n   302                          return 0, false, end // Overflow; crazy long number most likely.\r\n   303                  }\r\n   304                  num = num*10 + int(s[newi]-'0')\r\n   305          }\r\n   306          isnum = true\r\n   307          return\r\n   308  }\r\n```\r\n\r\nThanks.\r\nOleg.",
	"user": {
		"login": "helginet",
		"id": 3428972,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2015-11-26T19:08:28Z",
	"created_at": "2015-11-26T16:46:28Z",
	"updated_at": "2015-11-30T05:58:36Z"
}
