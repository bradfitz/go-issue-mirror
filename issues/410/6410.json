{
	"id": 51285144,
	"number": 6410,
	"state": "open",
	"title": "net/http: problems or undocumented features dealing with handler timeout",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n\nFirst problem: a http handler which delays longer than server.WriteTimeout just silently\nsends nothing, not even a HTTP error header. This behaviour might be deliberate (on the\nbasis of \u0026quot;use a timeout handler instead\u0026quot;), but it needs documenting.\n\nSecond problem: responseWriter.Write() returns nil for err (a write success) if\nWriteTimeout has been exceeded. (Contrast: using a http.TimeoutHandler, it returns\n\u0026quot;http: Handler timeout\u0026quot; correctly.)\n\nThird problem: using a TimeoutHandler, with the actual handler having the behaviour or\nWrite, long delay, Write, and a timeout set to fire during the delay, the first write\nsends the headers and the written value, then the timeout fires and appends the timeout\ntext and fails to set headers (because they were already sent). The result is a jumble\nof output. This is not exactly an error, but it's a thing that needs communicating in\nthe docs: that the TimeoutHandler uses the same ResponseWriter, and if you have written\nanything it will be unable to rescind it.\n\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n8g\n\n\nWhich operating system are you using?\n\nUbuntu Linux 12.04 32 bit.\n\n\nWhich version are you using?  (run 'go version')\n\ngo version go1.1 linux/386\u003c/pre\u003e",
	"user": {
		"login": "julianmorrison",
		"id": 38690,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"created_at": "2013-09-17T11:22:17Z",
	"updated_at": "2015-04-14T19:45:20Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
