{
	"id": 51281348,
	"number": 3915,
	"state": "closed",
	"title": "cmd/gc: result of comparison should be untyped boolean",
	"body": "\u003cpre\u003eThe following program:\n\npackage main\n\ntype mybool bool\n\nfunc main() {\n\tvar x, y int = 1, 2\n\tvar c1 bool = x \u0026lt; y\n\tvar c2 mybool = x \u0026lt; y         // comparison result can be assigned to any bool (it looks like an untyped bool for assignments)\n\tvar c3 mybool = c2 == (x \u0026lt; y) // illegal because x \u0026lt; y is of type bool now\n\tvar c4 mybool = c2 == (1 \u0026lt; 2)\n\tvar c5 mybool = 1 \u0026lt; 2\n\t_, _, _, _, _ = c1, c2, c3, c4, c5\n}\n\nshould only complain about line 9 (assignment to c3) because the type of (x \u0026lt; y) is\nbool, and c2 is of type mybool. However, gccgo reports several errors:\n\nx.go:8:6: error: incompatible type in initialization (cannot use type bool as type\nmybool)\nx.go:9:6: error: incompatible type in initialization (cannot use type bool as type\nmybool)\nx.go:10:6: error: incompatible type in initialization (cannot use type bool as type\nmybool)\nx.go:11:6: error: incompatible type in initialization (cannot use type bool as type\nmybool)\n\nindicating that the result of a comparison is always bool for gccgo. The spec explicitly\npermits assignments of comparison results to any bool type (\n\u003ca href=\"http://golang.org/ref/spec#Comparison_operators\"\u003ehttp://golang.org/ref/spec#Comparison_operators\u003c/a\u003e : \u0026quot;The result of a comparison can\nbe assigned to any boolean type.\u0026quot; ).\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Suggested"
		}
	],
	"comments": 10,
	"closed_at": "2014-12-08T10:20:44Z",
	"created_at": "2012-08-06T20:56:32Z",
	"updated_at": "2016-06-24T22:22:39Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
