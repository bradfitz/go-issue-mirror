{
	"id": 173714235,
	"number": 16915,
	"state": "closed",
	"title": "variable is redefined in sub block by `:=`",
	"body": "### What version of Go are you using (`go version`)?\r\n\r\ngo version go1.6.3 darwin/amd64\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\n```GOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/lifei/Work/bytedance/buton\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"clang\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fno-common\"\r\nCXX=\"clang++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n### What did you do?\r\n\r\n```\r\nfunc getInt() (int, error) {\r\n\treturn 1, nil\r\n}\r\n\r\nfunc getString() (string, error) {\r\n\treturn \"\", nil\r\n}\r\n\r\nfunc getBytes() ([]byte, error) {\r\n\treturn nil, errors.New(\"Bad bytes\")\r\n}\r\n\r\nfunc test2() ([]byte, error) {\r\n\tvar err error\r\n\tn := []int{1, 2}\r\n\r\n\tfor _ = range n {\r\n\t\ti, err := getInt()\r\n\t\tif err != nil {\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\tfmt.Println(i) // use i\r\n\t\ts, err := getString()\r\n\t\tif err != nil {\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\tfmt.Println(s) // use s\r\n\t\tb, err := getBytes()\r\n\t\tif err != nil {\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\treturn b, nil\r\n\t}\r\n\tfmt.Println(err)\r\n\treturn nil, err\r\n}\r\n```\r\n\r\n\r\n### What did you expect to see?\r\n\r\nI expect to see the last err is returned.\r\n\r\n### What did you see instead?\r\n\r\nI get nil instead.\r\n\r\n### Point\r\n\r\n`:=` should be more clever. A defined variable in parent block scope should be not redefined. Only undefined variable can be defined just like `:=`'s behaviour in the same block.\r\n\r\n",
	"user": {
		"login": "lifei",
		"id": 350000,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2016-08-29T07:46:01Z",
	"created_at": "2016-08-29T07:37:47Z",
	"updated_at": "2016-08-29T07:46:01Z"
}
