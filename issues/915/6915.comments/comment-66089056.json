{
	"id": 66089056,
	"body": "\u003ca id=\"c12\"\u003e\u003c/a\u003eComment 12:\n\n\u003cpre\u003eI've only looked at this briefly - but wanted to respond before I go on vacation, I'm\nnot sure we're quite there\n\ngo version\ngo version devel +7e89fedb40e6 Tue Oct 21 13:26:40 2014 +0200 linux/amd64\n\n\nI need to look in some more detail though - I'm seeing some issues with go tool pprof\n(old) vs running the binary pprof directly using godoc and running ab in the background\nagainst it\n\n go tool pprof --raw  \u003ca href=\"http://localhost:6060/debug/pprof/profile\"\u003ehttp://localhost:6060/debug/pprof/profile\u003c/a\u003e  \u0026gt; /tmp/profile.raw\nPossible precedence issue with control flow operator at\n/usr/src/go/pkg/tool/linux_amd64/pprof line 3014.\nRead \u003ca href=\"http://localhost:6060/debug/pprof/symbol\"\u003ehttp://localhost:6060/debug/pprof/symbol\u003c/a\u003e\nGathering CPU profile from \u003ca href=\"http://localhost:6060/debug/pprof/profile?seconds=30\"\u003ehttp://localhost:6060/debug/pprof/profile?seconds=30\u003c/a\u003e for 30\nseconds to\n  /tmp/uqzfHV5A7S\n\nroot@85a3e81044dc://usr/src/go# go tool pprof /tmp/profile.raw \nPossible precedence issue with control flow operator at\n/usr/src/go/pkg/tool/linux_amd64/pprof line 3014.\nWelcome to pprof!  For help, type 'help'.\n(pprof) top\nTotal: 1990 samples\n     599  30.1%  30.1%      599  30.1% syscall.Syscall\n     120   6.0%  36.1%      120   6.0% scanblock\n      71   3.6%  39.7%       71   3.6% runtime.MSpan_Sweep\n      54   2.7%  42.4%       54   2.7% runtime.readvarint\n      51   2.6%  45.0%       51   2.6% runtime.mallocgc\n      45   2.3%  47.2%       45   2.3% runtime.memmove\n      38   1.9%  49.1%       38   1.9% adjustpointers\n      38   1.9%  51.1%       38   1.9% runtime.findfunc\n      36   1.8%  52.9%       36   1.8% runtime.step\n      31   1.6%  54.4%       31   1.6% syscall.Syscall6\n(pprof) \n\n\n./bin/pprof /tmp/profile.raw \nparsing profile: unrecognized profile format\n\n./bin/pprof --raw  \u003ca href=\"http://localhost:6060/debug/pprof/profile\"\u003ehttp://localhost:6060/debug/pprof/profile\u003c/a\u003e  \u0026gt; /tmp/profile.new.raw \nFetching profile from \u003ca href=\"http://localhost:6060/debug/pprof/profile\"\u003ehttp://localhost:6060/debug/pprof/profile\u003c/a\u003e\nPlease wait... (30s)\nSaved profile in /root/pprof/pprof.localhost:6060.samples.cpu.002.pb.gz\n./bin/pprof /tmp/profile.new.raw \nparsing profile: unrecognized profile format\n\n./bin/pprof --text  /root/pprof/pprof.localhost:6060.samples.cpu.002.pb.gz\n27.28s of 27.28s total (  100%)\n      flat  flat%   sum%        cum   cum%\n    27.28s   100%   100%     27.28s   100%  \n\n./bin/pprof --top ./bin/godoc  /root/pprof/pprof.localhost:6060.samples.cpu.002.pb.gz |\nhead\n20.51s of 27.28s total (75.18%)\nDropped 326 nodes (cum \u0026lt;= 0.14s)\nShowing top 80 nodes out of 158 (cum \u0026gt;= 0.23s)\n      flat  flat%   sum%        cum   cum%\n     7.48s 27.42% 27.42%      7.75s 28.41%  syscall.Syscall\n     1.88s  6.89% 34.31%      1.88s  6.89%  scanblock\n     1.09s  4.00% 38.31%      1.09s  4.00%  runtime.MSpan_Sweep\n     0.76s  2.79% 41.09%      0.76s  2.79%  runtime.readvarint\n     0.62s  2.27% 43.37%      0.90s  3.30%  runtime.mallocgc\n     0.58s  2.13% 45.49%      0.58s  2.13%  runtime.memmove\n\n   \n\nLooking at the legacy parser src/cmd/pprof/internal/profile/legacy_profile.go it doesn't\nseem to handle symbolized raw dumps. The new src/cmd/pprof/internal/report/report.go\nbasically just does?\n\n  case Raw:\n    fmt.Fprint(w, rpt.prof.String())\n    return nil\n\nFrom my understanding of it the previous raw command was designed to allow a profile\nwith the symbols to be captured and shared without needing to share the binary.\n\nI can try make the go pprof support the legacy raw format as input, but as the meaning\nof --raw has changed in this version I'm not sure if it's a meaningful flag as we can\nsave the pb. I'd expect the ability to resolve the symbols at sampling time vi\n\u003ca href=\"http://localhost:6060/debug/pprof/symbol\"\u003ehttp://localhost:6060/debug/pprof/symbol\u003c/a\u003e - looking at HasFileLines and\nsrc/cmd/pprof/internal/profile/profile.go it looks like the format supports it - I'd\nexpect the raw format to be the fully populated protobuf with symbols for standalone\nanalysis not the string representation of the Profile struct.\u003c/pre\u003e",
	"user": {
		"login": "pnasrat",
		"id": 13798,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-10-24T20:02:37Z",
	"updated_at": "2014-12-22T06:30:34Z"
}
