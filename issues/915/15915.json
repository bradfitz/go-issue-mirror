{
	"id": 157868125,
	"number": 15915,
	"state": "open",
	"title": "net/http/httputil: New method ReadBody(*http.Response) ([]byte, error)",
	"body": "I propose a new, simple, but very useful method for `net/http/httputil`:\r\n```go\r\nfunc ReadBody(res *http.Response) ([]byte, error) {\r\n  // A ContentLength value of -1 indicates that the length is unknown.\r\n  if res.ContentLength == -1 {\r\n    // Fall back to ReadAll.\r\n    return ioutil.ReadAll(res.Body)\r\n  } else {\r\n    body := make([]byte, res.ContentLength)\r\n\r\n    // No need to check the number of bytes read as err will\r\n    // be != nil if it's less than ContentLength.\r\n    _, err := io.ReadFull(res.Body, body)\r\n    return body, err\r\n  }\r\n}\r\n```\r\n\r\nUsually people use `ioutil.ReadAll` to read the body of an http response. This will result in at least one garbaged `bytes.Buffer` and some over allocating of the resulting `[]byte`. This new method is similar to `ioutil.ReadAll` only it uses the `ContentLength` to only allocate the number of bytes really needed.\r\n",
	"user": {
		"login": "erikdubbelboer",
		"id": 522870,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"created_at": "2016-06-01T09:59:43Z",
	"updated_at": "2016-10-03T14:25:32Z",
	"milestone": {
		"id": 1748849,
		"number": 42,
		"title": "Go1.8Maybe"
	}
}
