{
	"id": 51281649,
	"number": 4106,
	"state": "closed",
	"title": "cmd/go can attempt to rebuild packages outside current root",
	"body": "\u003cpre\u003eIf the linker or compiler is newer than a standard package, go will try to rebuild the\npackage even if it is outside of the current root (i.e. GOPATH != GOROOT). This is\nsimilar to (or the same as) the problem detailed in \u003ca href=\"https://golang.org/issue/3149\"\u003eissue #3149\u003c/a\u003e.\n\nThis can be triggered via the following:\n\n$ touch /usr/local/go/pkg/${GOOS}_${GOARCH}/runtime.a\n$ touch /usr/local/go/pkg/tool/${GOOS}_${GOARCH}/*\n$ export GOPATH=/home/joel/src/mygo\n$ go install example/newmath\ngo install runtime: open /usr/local/go/pkg/openbsd_amd64/runtime.a: permission\ndenied\n\nMost of the binary distributions avoid this by retaining timestamps, however if this\ndoes not occur (some packaging systems do not do this) it is easily hit due to file\nordering:\n\n$ tar -C /usr/local -zxmf go-1.0.2-linux-amd64.tar.gz\n\nAs an aside, even when this is working correctly 'go install -a' still fails since '-a'\nincludes all packages, not just the ones in the current root.\u003c/pre\u003e",
	"user": {
		"login": "4a6f656c",
		"id": 8142769,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:21:49Z",
	"created_at": "2012-09-19T15:36:11Z",
	"updated_at": "2016-06-24T22:24:59Z"
}
