{
	"id": 51281700,
	"number": 4141,
	"state": "closed",
	"title": "test: do run.go's errorcheck and errchk really match?",
	"body": "\u003cpre\u003e[This may be an artifact of my broken client but recording so I don't forget to\ninvestigate it later.]\n\nI am running ./run in test, and errchk fails on bombad.go because the compiler prints\nunexpected errors:\n\n\u0026gt; =========== ./bombad.go\n\u0026gt; BUG: errchk: ./bombad.go:14: unmatched error messages:\n\u0026gt; \u0026gt; ./bombad.go:14: invalid identifier character U+feff\n\u0026gt; \u0026gt; ./bombad.go:14: undefined: ﻿\n\n$ go tool 6g bombad.go\nbombad.go:14: Unicode (UTF-8) BOM in middle of file\nbombad.go:14: invalid identifier character U+feff\nbombad.go:14: undefined: ﻿\n...\n\nThe input only lists one of the errors:\n\n\t﻿// There's a bom here.\t// ERROR \u0026quot;BOM\u0026quot;\n\nerrchk requires that every printed error be matched by a pattern in the ERROR line. The\ncurrent behavior makes me think that run.go's checkErrors discards extra errors from the\nsame line once one match has been found. If so, we should fix run.go - being precise\nabout the errors is intentional in errchk.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:22:00Z",
	"created_at": "2012-09-23T20:13:17Z",
	"updated_at": "2016-06-24T22:25:25Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
