{
	"id": 66065187,
	"body": "\u003ca id=\"c43\"\u003e\u003c/a\u003eComment 43:\n\n\u003cpre\u003eI've made two changes for Go 1.3 for this issue:\n\n1) TCP Keep-Alives are now used by default, so at least dead connections will eventually\ngive a read error and go away.\n2) There is now a TLSHandshakeTimeout and is set by default. I picked 10 seconds for\nDefaulTransport pretty arbitrarily and conservatively.\n\nThe issue has gotten to the point where it's almost too large to read anymore and it's\nmostly musing and not proposals.  If somebody could summarize here what's still missing\nthat's not doable outside of net/http, that would be helpful.  I believe timeouts\nspanning requests involving redirects are doable with the Client.CheckRedirect hook to\nmake a map from original request =\u003e subsequent requests, and then using\nTransport.CancelRequest.  \n\nTo add to the musing, we could add:\n\n  type Client struct {\n    // ....\n\n    // Timeout, if non-zero, gives the total time allowed for all phases of a request\n    // including any of its subsequent redirect requests. This includes the connection\n    // time, writing the request(s), and reading the entire response body(ies).\n    // If the underlying RoundTripper implementation of the Client's Transport\n    // does not support CancelRequest, this Timeout is ignored.\n    Timeout time.Duration\n  }\n\nBut like the comment says, this would be based on CancelRequest and tracking redirects\nto cancel the right request when the timeout occurs, so it could be confusing to people\nif used with a RoundTripper that doesn't support CancelRequest.  Maybe that's an error,\nthough, and we fail fast.  Do we then need a public interface for RequestCanceler, or\ncan it be unexported?  This support would also wrap the return Response Body's\nio.ReadCloser to one that note the EOF/Close and stops the timer.\n\nI don't see the need to rush that in, unless everybody agrees that it's needed,\nespecially since it can be implemented by hand anyway.\n\nUnless there are specific suggestions this week, we're probably done for Go 1.3.\n\nPlease speak up soon if you want more.\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-02-25T18:52:06Z",
	"updated_at": "2014-12-08T10:17:31Z"
}
