{
	"id": 51288079,
	"number": 8362,
	"state": "closed",
	"title": "crypto/rand: returns wrong number of bytes!",
	"body": "by **byron.rakitzis**:\n\n\u003cpre\u003eGo version 1.3 (and 1.2)\n\nThe documentation states that crypto/rand.Read() returns a byte count equal to the\nlength of the incoming slice whenever err==nil. This is contradicted with our code and\nis reproducible on the playground:\n\n\u003ca href=\"http://play.golang.org/p/xd3W7l4Q-l\"\u003ehttp://play.golang.org/p/xd3W7l4Q-l\u003c/a\u003e\n\nSource:\n\npackage main\n\nimport (\n\t\u0026quot;crypto/rand\u0026quot;\n\t\u0026quot;fmt\u0026quot;\n)\n\nfunc foo(i int) error {\n\tbuf := make([]byte, 20)\n\tn, err := rand.Reader.Read(buf)\n\tswitch {\n\tcase err != nil:\n\t\treturn fmt.Errorf(\u0026quot;(%dth iteration) Rand reader error: %s\u0026quot;, i, err)\n\tcase n != len(buf):\n\t\t// err is nil!!!\n\t\treturn fmt.Errorf(\u0026quot;(%dth iteration) didn't get the bytes we requested (%d), got %d\u0026quot;, i, len(buf), n)\n\tdefault:\n\t\treturn nil\n\t}\n}\n\nfunc main() {\n\tfor i := 0; i \u0026lt; 1000000; i++ {\n\t\tif err := foo(i); err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t}\n}\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:46:26Z",
	"created_at": "2014-07-12T00:29:52Z",
	"updated_at": "2016-06-25T01:37:55Z"
}
