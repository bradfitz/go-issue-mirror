{
	"id": 51287534,
	"number": 8006,
	"state": "closed",
	"title": "runtime: Go should handle all Windows exceptions",
	"body": "\u003cpre\u003eSometimes Go programs crash without any stack trace / error message. Instead they defer\n\u0026quot;exception handling\u0026quot; onto default system exception handler (Dr. Watson, Visual\nStudio debugger or whatever else user installed).\n\nFrom \u003ca href=\"https://groups.google.com/d/msg/golang-nuts/PKdpkSTS1Rg/y69ABuLR_dcJ\"\u003ehttps://groups.google.com/d/msg/golang-nuts/PKdpkSTS1Rg/y69ABuLR_dcJ\u003c/a\u003e\n\n\u0026gt;\u0026gt;\u0026gt;\nSo what happens is that the program tries to access address 0xfffff... and a dialog\nappears offering to debug with VS. Doing this shows that this illegal instruction is the\ncall to std::cerr.\n\u0026lt;\u0026lt;\u0026lt;\n\nIt didn't happen in the past. But since new exception handler 0a3722aa9092, it is now\npossible. Our current handler handles only Go code, but any other exceptions are just\nignored.\n\nNot sure how much information we can print in these situations, but we should try. And\nwe should stop \u0026quot;Dr. Watson to be invoked, because that requires user intervention\nand is not acceptable in general.\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 16,
	"closed_at": "2014-12-08T10:44:22Z",
	"created_at": "2014-05-16T01:19:12Z",
	"updated_at": "2016-06-25T01:34:22Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
