{
	"id": 51278604,
	"number": 2006,
	"state": "closed",
	"title": "more info: type \"XXX\" is not type \"XXX\"",
	"body": "by **go1@curtissystemssoftware.com**:\n\n\u003cpre\u003eIf the compiler is about to report that type\n\u0026quot;XXX\u0026quot; is not type \u0026quot;XXX\u0026quot; (i.e., the two type names are the same),\nthen I\nthink it could add some additional information to the error message.\n\nWhat steps will reproduce the problem?\n1. original package p1 ... has type named T1 locally created with type\n   modified package p1 ... has type named T1 locally created with type\n   package p2   \n      imports original package p1 \n   package main \n       imports package p2\n       imports modified package p1\n       call a func in p2 with func arg T1\n       example: p2.funcX(T1)\n\n2. when trying to compile with 8g\n   compiler reports can not use ... T1  is not type T1\n   real issue is that T1 definition is in two different packages\n   that are named the same.\n\nWhat is the expected output?\nI think more info should say that type T1 are different and list\nwhat package internal id (or whatever GO using for detecting the differences) each is\ncoming from. \n\n\nWhat do you see instead?\njust type T1 is not type T1\n\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n8g\n\nWhich operating system are you using?\nubuntu 10.10\n\nWhich revision are you using?  (hg identify)\nhg identify\ne1e194eb5c8e+ (release-branch.r57)\n\nPlease provide any additional information below.\nThanks for your efforts on GO, I finally found\nsomething worthwhile to work with since C ...\nC++ and JAVA are not the answer for most things anymore\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:10:54Z",
	"created_at": "2011-06-25T14:04:20Z",
	"updated_at": "2016-06-24T19:31:29Z"
}
