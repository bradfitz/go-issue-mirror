{
	"id": 66099193,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eI just tried this on tip.  I was not able to put a breakpoint on main.foo - I believe\nbecause main.foo is inlined.  If I built with `go build -gcflags='-l'` I could indeed\nbreakpoint main.foo, and cause lldb to segfault.\n\nI'm running on Linux with lldb version 3.4.2.  FWIW the following is the lldb backtrace:\n\n#0  __memcpy_avx_unaligned () at ../sysdeps/x86_64/multiarch/memcpy-avx-unaligned.S:136\n#1  0x00007f396441851e in memcpy (__len=8, __src=0xc208031f80, __dest=0x1263290) at\n/usr/include/bits/string3.h:51\n#2  lldb_private::Value::GetValueAsData (this=this@entry=0x7fff2322ac20,\nexe_ctx=exe_ctx@entry=0x7fff2322aad0, data=..., data_offset=data_offset@entry=0,\nmodule=\u0026lt;optimized out\u0026gt;)\n    at Value.cpp:582\n#3  0x00007f3964432562 in lldb_private::ValueObjectVariable::UpdateValue\n(this=0x11deda0) at ValueObjectVariable.cpp:241\n#4  0x00007f396441d579 in lldb_private::ValueObject::UpdateValueIfNeeded\n(this=0x11deda0, update_format=\u0026lt;optimized out\u0026gt;) at ValueObject.cpp:212\n#5  0x00007f396441d6f3 in lldb_private::ValueObject::GetValueAsCString (this=0x11deda0)\nat ValueObject.cpp:1477\n#6  0x00007f39643d4478 in FormatPromptRecurse (format=\u0026lt;optimized out\u0026gt;,\nsc=\u0026lt;optimized out\u0026gt;, exe_ctx=\u0026lt;optimized out\u0026gt;, addr=\u0026lt;optimized out\u0026gt;,\ns=..., end=end@entry=0x7fff2322b170, \n    valobj=0x0) at Debugger.cpp:2285\n#7  0x00007f39643d20c8 in FormatPromptRecurse (format=\u0026lt;optimized out\u0026gt;,\nsc=\u0026lt;optimized out\u0026gt;, exe_ctx=\u0026lt;optimized out\u0026gt;, addr=\u0026lt;optimized out\u0026gt;,\ns=..., end=end@entry=0x7fff2322b470, \n    valobj=\u0026lt;optimized out\u0026gt;) at Debugger.cpp:1526\n#8  0x00007f39643d20c8 in FormatPromptRecurse (format=\u0026lt;optimized out\u0026gt;,\nsc=sc@entry=0x7fff2322b7b0, exe_ctx=exe_ctx@entry=0x7fff2322b770, addr=addr@entry=0x0,\ns=..., \n    end=end@entry=0x0, valobj=\u0026lt;optimized out\u0026gt;) at Debugger.cpp:1526\n#9  0x00007f39643d5d53 in lldb_private::Debugger::FormatPrompt (format=\u0026lt;optimized\nout\u0026gt;, sc=0x7fff2322b7b0, exe_ctx=exe_ctx@entry=0x7fff2322b770, addr=addr@entry=0x0,\ns=..., \n    valobj=valobj@entry=0x0) at Debugger.cpp:2622\n#10 0x00007f3964735fee in lldb_private::Thread::DumpUsingSettingsFormat\n(this=this@entry=0x7f3940000910, strm=..., frame_idx=frame_idx@entry=0) at\nThread.cpp:1856\n#11 0x00007f39647362c8 in lldb_private::Thread::GetStatus\n(this=this@entry=0x7f3940000910, strm=..., start_frame=start_frame@entry=0,\nnum_frames=num_frames@entry=1, \n    num_frames_with_source=num_frames_with_source@entry=1) at Thread.cpp:1959\n#12 0x00007f39646fa92a in lldb_private::Process::GetThreadStatus\n(this=this@entry=0x11a74d0, strm=...,\nonly_threads_with_stop_reason=only_threads_with_stop_reason@entry=true, \n    start_frame=start_frame@entry=0, num_frames=num_frames@entry=1, num_frames_with_source=num_frames_with_source@entry=1) at Process.cpp:5596\n#13 0x00007f39643674dd in CommandObjectProcessStatus::DoExecute (this=\u0026lt;optimized\nout\u0026gt;, command=..., result=...) at CommandObjectProcess.cpp:1607\n#14 0x00007f39644e5a8d in lldb_private::CommandObjectParsed::Execute (this=0x1110aa0,\nargs_string=\u0026lt;optimized out\u0026gt;, result=...) at CommandObject.cpp:1037\n#15 0x00007f39644dfded in lldb_private::CommandInterpreter::HandleCommand\n(this=0x10ff7f0, command_line=\u0026lt;optimized out\u0026gt;, command_line@entry=0x411fb8\n\"process status\", \n    lazy_add_to_history=lazy_add_to_history@entry=lldb_private::eLazyBoolNo, result=..., override_context=override_context@entry=0x0, \n    repeat_on_empty_command=repeat_on_empty_command@entry=true, no_context_switching=false) at CommandInterpreter.cpp:1853\n#16 0x00007f39642a85db in lldb::SBCommandInterpreter::HandleCommand\n(this=0x7fff2322be30, command_line=0x411fb8 \"process status\", result=...,\nadd_to_history=\u0026lt;optimized out\u0026gt;)\n    at SBCommandInterpreter.cpp:122\n#17 0x000000000040a542 in Driver::HandleProcessEvent (this=0x7fff2322ed00, event=...) at\nDriver.cpp:1104\n#18 0x000000000040b8da in Driver::MainLoop (this=this@entry=0x7fff2322ed00) at\nDriver.cpp:1635\n#19 0x0000000000408f84 in main (argc=2, argv=0x7fff2322ef38, envp=\u0026lt;optimized out\u0026gt;)\nat Driver.cpp:1802\u003c/pre\u003e",
	"user": {
		"login": "bpowers",
		"id": 854918,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-10-01T00:42:49Z",
	"updated_at": "2014-12-22T06:37:39Z"
}
