{
	"id": 51287863,
	"number": 8220,
	"state": "open",
	"title": "x/tools/cmd/vet: No warning for some statements with no effect",
	"body": "by **tmadams@google.com**:\n\n\u003cpre\u003eWhat does 'go version' print?\n\ngo version go1.2 linux/amd64\n\n\nWhat steps reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\nIn this toy example (which represents a pattern of bugs that crops up fairly frequently\nfor our team), I have forgotten to make err a named return value in my deferred\nfunction. The intent was to propagate any error that occurred during execution of the\ndeffered function, but since I forgot to make err a named return value, the error gets\ndropped.\n\n\u003ca href=\"http://play.golang.org/p/MD8tetH4ZI\"\u003ehttp://play.golang.org/p/MD8tetH4ZI\u003c/a\u003e\n\n\nWhat happened?\n\nThe program compiled and ran without error.\n\n\nWhat should have happened instead?\n\nThe compiler should have errored that the statement \u0026quot;err = e\u0026quot; had no effect.\nBonus points if it suggested that I might have meant to use a named return value.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"created_at": "2014-06-16T17:49:32Z",
	"updated_at": "2015-04-14T19:37:54Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
