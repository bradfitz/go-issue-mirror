{
	"id": 66077540,
	"body": "\u003ca id=\"c13\"\u003e\u003c/a\u003eComment 13 by **cgmurray**:\n\n\u003cpre\u003eSorry for not being explicit enough and for clarifying this. For concrete types, such as\nintegers, it's obvious that\nan *int64 can't be compatible with an *int32 and still being safe. Moreover, it's\nunderstandable that the types must\nbe identical regardless of the memory layout. In regards to no implicit conversion of\nnumeric \nvalue types it's more a philosophical standpoint and from my point of view great that\nthe language enforce explicit conversions.\n\nAs you said interface values are the exception to the general rule about conversions and\nset relations apply here. \nAlthough implementation specific runtime.convI2I might be invoked when assigning a\nsuperset interface to a subset. \nLikewise, runtime.convI2I is invoked when dereferencing and assigning \"compatible\"\ninterfaces, e.g\n\n\tvar pr *io.Reader\n\tvar prc *io.ReadCloser\n\t*pr = *prc\n\nrelated no conversion is performed for the following case\n\n\tvar rc *io.ReadCloser\n\t(*rc).Close()\n\nbut if the interface conversion is postponed until the value is dereferenced I find no\nobvious\nreason to why *S can't be assignable to *T given that S is assignable to T and still\nbeing safe.\nPlease correct me if I'm wrong and thanks for your time and answering my questions!\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-04-06T10:44:30Z",
	"updated_at": "2014-12-08T10:28:02Z"
}
