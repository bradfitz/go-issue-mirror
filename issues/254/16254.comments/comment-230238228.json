{
	"id": 230238228,
	"body": "Another interesting approach:\r\n\r\n```go\r\n\r\ntype Foo interface {\r\n  String()\r\n}\r\n\r\n// Default impl\r\nfunc (r Foo) String() string {\r\n  return \"Foo\"\r\n}\r\n\r\ntype Baz interface {\r\n  Foo\r\n}\r\n\r\n// Default impl\r\nfunc (r Baz) String() string {\r\n  return \"Baz\"\r\n}\r\n\r\ntype baz struct {\r\n}\r\n\r\nfunc main() {\r\n  var baz Baz\r\n  var foo Foo\r\n  baz :=  \u0026baz{} \r\n  fmt.Prinln(baz) // =\u003e \"baz\"\r\n  foo :=  \u0026baz{} \r\n  fmt.Prinln(foo) // =\u003e \"foo\"\r\n}\r\n```\r\n\r\nHow this works?\r\nThe `fmt.Println()` takes an agrument as the `interface {}`.\r\nThe `interface {}` holds info about the type.\r\n\r\nThe `foo :=  \u0026baz{}` is an `type Foo interface{}` value.\r\nThe `type Foo interface{}` has its own default implemenattion.\r\n\r\nThe `baz :=  \u0026baz{}` is an `type Baz interface{}` value.\r\nThe `type Baz interface{}` has its own default implemenattion.\r\n",
	"user": {
		"login": "mezoni",
		"id": 2311549,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-04T08:47:13Z",
	"updated_at": "2016-07-04T08:47:13Z"
}
