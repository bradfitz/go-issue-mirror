{
	"id": 169933943,
	"number": 16638,
	"state": "open",
	"title": "runtime: use frame pointers for callers",
	"body": "Traceback is the main source of slowdown for tracer. On net/http.BenchmarkClientServerParallel4:\r\nBenchmarkClientServerParallel4-6   \t  200000\t     10627 ns/op\t    4482 B/op\t      57 allocs/op\r\nwith tracer:\r\nBenchmarkClientServerParallel4-6   \t  200000\t     16444 ns/op\t    4482 B/op\t      57 allocs/op\r\nThat's +55% slowdown. Top functions of profile are:\r\n     6.09%  http.test  http.test             [.] runtime.pcvalue\r\n     5.88%  http.test  http.test             [.] runtime.gentraceback\r\n     5.41%  http.test  http.test             [.] runtime.readvarint\r\n     4.31%  http.test  http.test             [.] runtime.findfunc\r\n     2.98%  http.test  http.test             [.] runtime.step\r\n     2.12%  http.test  http.test             [.] runtime.mallocgc\r\n\r\nruntime.callers/gcallers/Callers are not interested in frame/func/sp/args/etc for each frame, they only need PC values. PC values can be obtained using frame pointers, which must be much faster. Note that there calls are always synchronous (can't happen during function prologue or in the middle of goroutine switch), so should be much simpler to handle.\r\n\r\nWe should use frame pointers in runtime.callers.\r\n\r\n@aclements @ianlancetaylor @hyangah ",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2016-08-08T14:15:24Z",
	"updated_at": "2016-08-08T15:53:36Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
