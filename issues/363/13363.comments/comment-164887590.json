{
	"id": 164887590,
	"body": "No real progress, but I've tried a bunch of things.\r\n\r\nFirst, it's still reproducible at current master (87d939d) with 5 failures out of 2933 runs.\r\n\r\nIt can be reproduced just as well without the extra fork/exec, which is useful for debugging: `go test -c \u0026\u0026 stress sh -c \"GODEBUG=gcstackbarrierall=1 GOGC=1 ./pprof.test -test.run TestStackBarrierProfiling\"`\r\n\r\nI tried getting a branch trace record, but both techniques caused it to no longer reproduce even after \u003e10,000 runs.\r\n\r\nUsing perf:\r\n```\r\ngo test -c \u0026\u0026 stress sh -c 'GODEBUG=gcstackbarrierall=1 GOGC=1 perf record -e branches:u -c 1 -d -m 32M -o perf.data.$$ ./pprof.test -test.run TestStackBarrierProfiling \u0026\u0026 rm perf.data.$$'\r\n```\r\n\r\nUsing gdb:\r\n```\r\ncat \u003e gdbtest \u003c\u003cEOF\r\ncatch signal SIGSEGV\r\ncommands\r\nset record instruction-history-size unlimited\r\n#record function-call-history /ilc\r\nset logging file history.txt\r\nset logging on\r\nrecord instruction-history\r\nset logging off\r\n!mv history.txt history-$$.txt\r\nquit 1\r\nend\r\n\r\nstart\r\nrecord btrace\r\ncontinue\r\nquit\r\nEOF\r\ngo test -c \u0026\u0026 stress sh -c 'GODEBUG=gcstackbarrierall=1 GOGC=1 gdb -x gdbtest --args ./pprof.test -test.run TestStackBarrierProfiling'\r\n```\r\n\r\nIt does appear to be sensitive to the profiling rate. I increased it from 100 Hz to 500 Hz and it got ~3X more reproducible.",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-15T20:29:38Z",
	"updated_at": "2015-12-15T20:29:38Z"
}
