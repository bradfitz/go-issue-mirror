{
	"id": 156384089,
	"number": 15806,
	"state": "open",
	"title": "cmd/compile: signed rounding adjustments unnecessary when comparing modulus to 0",
	"body": "func f(i int) bool {\r\n\treturn i%16 == 0\r\n}\r\n\r\nSince the modulo is signed, we have to do adjustments in case `i` is negative.  We do\r\n```\r\n  adj := i\u003e\u003e63 \u0026 15\r\n  div := (i + adj) \u003e\u003e 4\r\n  mod := i - div*16\r\n  return mod == 0\r\n```\r\nSince we're comparing against 0, the adjustment in the first line is unnecessary.  Zeroness is unaffected by the adjustment.\r\nMight be as simple as converting (Eq (Mod64 x y) (Const64 [0])) to (Eq (Mod64u x y) (Const64 [0])) (and #uses of Mod64 is 1?)",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"comments": 0,
	"created_at": "2016-05-23T22:51:02Z",
	"updated_at": "2016-05-23T22:51:02Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
