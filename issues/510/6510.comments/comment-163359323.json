{
	"id": 163359323,
	"body": "It turns out the calling convention description in Comment 22 by @rsc is not the case. If the second argument is a float32, its value goes into the second XMM register regardless of whether the first argument is an int or a float.\r\n\r\nThe documentation in https://msdn.microsoft.com/en-us/library/zthk2dkh.aspx has an example:\r\n\r\n```\r\nfunc3(int a, double b, int c, float d);  \r\n// a in RCX, b in XMM1, c in R8, d in XMM3\r\n```\r\n\r\nThis means its extremely easy to support functions with float parameters in syscall.Syscall. I would like to do this in Go 1.7, so I can remove the fixFloat hack from the GL package I introduced in golang.org/cl/17675.",
	"user": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-09T19:05:37Z",
	"updated_at": "2015-12-09T19:05:37Z"
}
