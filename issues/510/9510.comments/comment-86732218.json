{
	"id": 86732218,
	"body": "I still think the ld -r -lgcc approach could work. It will only\r\nbe used in internal linking, and we can modify our linker\r\nto ignore multiple definitions from object files coming from\r\nlibgcc.\r\n\r\nYes, this will waste space in the final executable, but the\r\nresulting executable should still work and the implementation\r\ncomplexity is significantly less than other approaches (we\r\ndon't need to extract object files from libgcc.a and don't need\r\nto handle inter-dependencies between those object files.\r\n\r\n(Internal linking already produces larger executable than\r\nexternal linker. for example, linking misc/cgo/test on\r\nwindows/amd64 with external linking produces a binary 1MB\r\nsmaller than the one produced with internal linking. Now that\r\nall platforms support external linking, internal linking of cgo\r\nprograms is really just for compiling programs using just the\r\nstandard packages.)\r\n",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-26T21:57:29Z",
	"updated_at": "2015-03-26T22:02:02Z"
}
