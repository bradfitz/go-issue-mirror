{
	"id": 74383805,
	"body": "Patched. Strange things started to happen. I got another “stack split at bad time,” but this time in a completely different part of my program where I spin off my goroutines by `go func() { … }()`. I also got one “Segmentation fault” without any other output; I haven’t seen this one before for sure. Also,\r\n\r\n```\r\nruntime: g318: leftover defer sp=0x0 pc=0x0\r\n\tdefer 0xc208c74000 sp=0xc20a8d5b08 pc=0x9b083c\r\nfatal error: traceback has leftover defers\r\n\r\nruntime stack:\r\nruntime.throw(0xbcb3d0, 0x1d)\r\n\t/home/ivauk/Software/go/src/runtime/panic.go:511 +0xa0\r\nruntime.gentraceback(0x9ce3b0, 0xc2080192d0, 0x0, 0xc209f91c20, 0x0, 0x0, 0x7fffffff, 0xbf5ee8, 0x7f6cc27fbcf8, 0x0, ...)\r\n\t/home/ivauk/Software/go/src/runtime/traceback.go:430 +0x749\r\nruntime.copystack(0xc209f91c20, 0x1000)\r\n\t/home/ivauk/Software/go/src/runtime/stack1.go:570 +0x18f\r\nruntime.newstack()\r\n\t/home/ivauk/Software/go/src/runtime/stack1.go:758 +0xbc5\r\nruntime.morestack()\r\n\t/home/ivauk/Software/go/src/runtime/asm_amd64.s:317 +0x82\r\n\r\ngoroutine 318 [copystack]:\r\nruntime.mProf_Malloc(0xc20b6d30e0, 0xa0)\r\n\t/home/ivauk/Software/go/src/runtime/mprof.go:233 fp=0xc2080192d8 sp=0xc2080192d0\r\nruntime.profilealloc(0xc2080d6400, 0xc20b6d30e0, 0xa0)\r\n\t/home/ivauk/Software/go/src/runtime/malloc.go:310 +0x9b fp=0xc208019300 sp=0xc2080192d8\r\nruntime.mallocgc(0xa0, 0xb138e0, 0xc200000001, 0xc2080a2960)\r\n\t/home/ivauk/Software/go/src/runtime/malloc.go:234 +0x43b fp=0xc2080193b8 sp=0xc208019300\r\nruntime.newarray(0xb138e0, 0x14, 0xc2080a2960)\r\n\t/home/ivauk/Software/go/src/runtime/malloc.go:276 +0xc8 fp=0xc2080193f0 sp=0xc2080193b8\r\nruntime.makeslice(0xb09ac0, 0x14, 0x14, 0x0, 0x0, 0x0)\r\n\t/home/ivauk/Software/go/src/runtime/slice.go:32 +0x16c fp=0xc208019438 sp=0xc2080193f0\r\n…\r\n```\r\n\r\nAlso,\r\n\r\n```\r\ninvalid m-\u003elocked = 2\r\nfatal error: internal lockOSThread error\r\n\r\nruntime stack:\r\nruntime.throw(0xbc85d0, 0x1b)\r\n\t/home/ivauk/Software/go/src/runtime/panic.go:511 +0xa0\r\nruntime.goexit0(0xc20aa76fc0)\r\n\t/home/ivauk/Software/go/src/runtime/proc1.go:1564 +0x15c\r\nruntime.mcall(0x0)\r\n\t/home/ivauk/Software/go/src/runtime/asm_amd64.s:191 +0x5e\r\n…\r\n```\r\n\r\nAnd sometimes everything works just fine. Maybe it’s not specific to cgo after all. I guess I’m doing something horrible somewhere without realizing it. I need to carefully go through my code and to spend more time experimenting with my setup. Right now it looks rather random.\r\n\r\n@dvyukov, thank you for your help!",
	"user": {
		"login": "IvanUkhov",
		"id": 57440,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-14T17:26:07Z",
	"updated_at": "2015-02-14T17:26:07Z"
}
