{
	"id": 51279419,
	"number": 2585,
	"state": "closed",
	"title": "sort: possible way to use fewer comparisons",
	"body": "\u003cpre\u003ethe current pivot loop retests data[b] \neach time it moves c.  that's needlessly\nrepeated work.  maybe something like\nthis is better.  the comparisons in the\nsecond loop when c == b+1 are also\nredundant, but a smaller source of comparisons.\n\nshould measure number of comparisons and\ndo this if it makes sense.\n\n\tfor {\n\t\tfor b \u0026lt; c {\n\t\t\tif data.Less(b, pivot) {  // data[b] \u0026lt; pivot\n\t\t\t\tb++\n\t\t\t} else if !data.Less(pivot, b) {  // data[b] = pivot\n\t\t\t\tdata.Swap(a, b)\n\t\t\t\ta++\n\t\t\t\tb++\n\t\t\t} else {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tfor b \u0026lt; c {\n\t\t\tif data.Less(pivot, c-1) {  // data[c-1] \u0026gt; pivot\n\t\t\t\tc--\n\t\t\t} else if !data.Less(c-1, pivot) {  // data[c-1] = pivot\n\t\t\t\tdata.Swap(c-1, d-1)\n\t\t\t\tc--\n\t\t\t\td--\n\t\t\t} else {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif b \u0026gt;= c {\n\t\t\tbreak\n\t\t}\n\t\t// data[b] \u0026gt; pivot; data[c-1] \u0026lt; pivot\n\t\tdata.Swap(b, c-1)\n\t\tb++\n\t\tc--\n\t}\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Suggested"
		}
	],
	"assignee": {
		"login": "dsymonds",
		"id": 31506,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:13:45Z",
	"created_at": "2011-12-19T20:00:24Z",
	"updated_at": "2016-06-24T21:22:04Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
