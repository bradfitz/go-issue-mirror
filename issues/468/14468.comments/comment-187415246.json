{
	"id": 187415246,
	"body": "Yes, I want to add `QueryAble` to `database/sql`\r\n\r\nThe reason is that: I want to be able to create functions that execute SQL query's and retrieve data regardless of if its inside a prepared statement (and preferably only use prepared statements when i really need to). This is not possible without a interface.\r\n\r\nTo provide a transaction and non transaction solution today you have to do something like this:\r\n```go\r\nfunc SqlMathWrapper(db *sql.DB , a, b int)(int, error){\r\n\ttx, _ := db.Begin()\r\n\tdefer tx.Commit()\r\n\treturn SqlMath(tx, a,b)\r\n}\r\n\r\nfunc SqlMath(tx *sql.Tx, a, b int)(num int, err error){\r\n\terr = tx.QueryRow(\"SELECT ? + ?\", a, b).Scan(\u0026num)\r\n\treturn\r\n}\r\n```\r\n(This dose always use transaction)\r\n\r\nUsing the interface the code would look like this\r\n```go\r\nfunc SqlMath(qa *sql.QueryAble, a, b int)(num int, err error){\r\n\terr = qa.QueryRow(\"SELECT ? + ?\", a, b).Scan(\u0026num)\r\n\treturn\r\n}\r\n```\r\n(This would not use prepared statements if called with a sql.DB object)",
	"user": {
		"login": "KilledKenny",
		"id": 1319915,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-22T22:23:18Z",
	"updated_at": "2016-02-22T22:23:18Z"
}
