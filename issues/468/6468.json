{
	"id": 51285232,
	"number": 6468,
	"state": "closed",
	"title": "encoding/json: using MarshalJSON declared on pointer receiver with non-pointer values",
	"body": "by **Lytvynov.A.V**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\u003ca href=\"http://play.golang.org/p/ZAsj63RNx0\"\u003ehttp://play.golang.org/p/ZAsj63RNx0\u003c/a\u003e\n\nWhat is the expected output?\n{\u0026quot;S\u0026quot;:\u0026quot;IkhlbGxvIg==\u0026quot;}\n{\u0026quot;S\u0026quot;:\u0026quot;IkhlbGxvIg==\u0026quot;}\n\nWhat do you see instead?\n{\u0026quot;S\u0026quot;:\u0026quot;Hello\u0026quot;}\n{\u0026quot;S\u0026quot;:\u0026quot;IkhlbGxvIg==\u0026quot;}\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nDebian Wheezy\n\nWhich version are you using?  (run 'go version')\ngo version devel +1607e9e9e6de Tue Sep 24 00:17:08 2013 -0400 linux/amd64\n(also works on the playground)\n\nPlease provide any additional information below.\nField S in the struct is of type Str and does not have MarshalJSON in it's method set.\nThis means that S is not json.Marshaler.\nBut because reflect.Value.CanAddr for this field in the first case returns true,\njson.Marshal will use address of that field to try to assert it to json.Marshaler.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:35:41Z",
	"created_at": "2013-09-24T08:18:39Z",
	"updated_at": "2016-06-25T01:19:33Z"
}
