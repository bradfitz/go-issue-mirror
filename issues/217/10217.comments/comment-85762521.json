{
	"id": 85762521,
	"body": "Thanks Ian. I've confirmed that Lynn's fix addresses the go get problem I\nwas seeing.\n\nDo you think Lynn's fix should be merged into golang/go ?\n\nOn Wed, Mar 25, 2015 at 6:51 AM, Ian Lance Taylor \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e I just committed Lynn's patch to trunk (\n\u003e https://codereview.appspot.com/213570043/). See if you still the problem.\n\u003e Thanks.\n\u003e\n\u003e Ian\n\u003e\n\u003e On Mon, Mar 23, 2015 at 8:16 PM, Dave Cheney \u003cnotifications@github.com\u003e\n\u003e wrote:\n\u003e\n\u003e \u003e I've confirmed the problem still exists on gcc/trunk\n\u003e \u003e\n\u003e \u003e lucky(~/devel/build) % env LD_LIBRARY_PATH=/opt/gccgo/lib64\n\u003e GOPATH=/tmp/gopath /opt/gccgo/bin/go version\n\u003e \u003e go version go1.4.2 gccgo (GCC) 5.0.0 20150324 (experimental) linux/amd64\n\u003e \u003e lucky(~/devel/build) % env LD_LIBRARY_PATH=/opt/gccgo/lib64\n\u003e GOPATH=/tmp/gopath /opt/gccgo/bin/gccgo -v\n\u003e \u003e Using built-in specs.\n\u003e \u003e COLLECT_GCC=/opt/gccgo/bin/gccgo\n\u003e \u003e\n\u003e COLLECT_LTO_WRAPPER=/opt/gccgo/libexec/gcc/x86_64-unknown-linux-gnu/5.0.0/lto-wrapper\n\u003e \u003e Target: x86_64-unknown-linux-gnu\n\u003e \u003e Configured with: ../gcc/trunk/configure --prefix=/opt/gccgo\n\u003e --enable-languages=c,c++,go --disable-bootstrap\n\u003e \u003e Thread model: posix\n\u003e \u003e gcc version 5.0.0 20150324 (experimental) (GCC)\n\u003e \u003e\n\u003e \u003e —\n\u003e \u003e Reply to this email directly or view it on GitHub\n\u003e \u003e \u003chttps://github.com/golang/go/issues/10217#issuecomment-85320888\u003e.\n\u003e\n\u003e \u003e\n\u003e\n\u003e —\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/10217#issuecomment-85666508\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-25T00:42:47Z",
	"updated_at": "2015-03-25T00:42:47Z"
}
