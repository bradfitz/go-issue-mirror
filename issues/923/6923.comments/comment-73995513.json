{
	"id": 73995513,
	"body": "We may be able to address this in a fully backward-compatible way:\r\n\r\n1) We absolutely want the compiler to complain when we write something like\r\n\r\nconst x uint = -1\r\nvar x uint = -1\r\n\r\nThis doesn't work because -1 cannot be (implicitly) converted to a uint.\r\n\r\n2) But we could make a distinction between _implicit_ constant conversions (such as the ones above) and _explicit_ conversions of the form T(x) as in uint(-1). If we had this distinction, we could still disallow currently invalid constant conversions that are implicit, but we could permit explicit constant conversions that are currently not permitted (but would be if the values were variables).\r\n\r\nSince such code is not valid at the moment, no existing code should be affected. Code like this\r\n\r\nconst x uint64 = -1\r\n\r\nwould still not be permitted. But using an explicit conversion one could write\r\n\r\nconst x = uint(-1)\r\n",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-12T00:34:28Z",
	"updated_at": "2015-02-12T00:34:28Z"
}
