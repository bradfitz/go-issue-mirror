{
	"id": 252324421,
	"body": "I guess ^^^ would look something like this:\r\n\r\n```go\r\npackage sql\r\n\r\ntype ColumnType struct {\r\n\tcti driver.ColumnType\r\n}\r\n\r\nfunc (c *ColumnType) Name() string {\r\n\treturn c.cti.Name()\r\n}\r\n\r\nfunc (c *ColumnType) Length() (length int64, ok bool) {\r\n\treturn c.cti\r\n}\r\n// etc...\r\n\r\nfunc (rs *Rows) ColumnTypes() ([]ColumnType, error) {\r\n\tif rs.closed {\r\n\t\treturn nil, errors.New(\"sql: Rows are closed\")\r\n\t}\r\n\tif rs.rowsi == nil {\r\n\t\treturn nil, errors.New(\"sql: no Rows available\")\r\n\t}\r\n\r\n\tif colTyper, ok := rs.rowsi.(driver.ColumnTyper); ok {\r\n\r\n\t\tdrvCols, err := colTyper.ColumnTypes()\r\n\r\n\t\tif err != nil {\r\n\t\t\tsqlCols := make([]ColumnType, len(drvCols))\r\n\t\t\tfor i := range drvCols {\r\n\t\t\t\tsqlCols[i] = ColumnType{drvCols[i]}\r\n\t\t\t}\r\n\t\t\treturn sqlCols, nil\r\n\t\t}\r\n\r\n\t\treturn nil, err\r\n\t}\r\n\r\n\treturn nil, errors.New(\"sql: driver does not provide column type data\")\r\n}\r\n```\r\n\r\nWhich does result in a bunch of allocations, hmmmn.",
	"user": {
		"login": "neilotoole",
		"id": 6013203,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-07T18:19:42Z",
	"updated_at": "2016-10-07T18:19:42Z"
}
