{
	"id": 252321398,
	"body": "\u003e The reason is for backwards compatibility and extensibility. If we need to add another property, it can be done.\r\n\r\nYeah, I take your point on the extensibility. I guess my assumption was that this proposal is *the* fix for the `sql` package, and that there won't be any changes coming ever again (in our lifetimes at least). \r\n\r\n\u003e Also the driver package cannot reference the sql package, so we would need to copy the values from each driver.ColumnType to sql.ColumnType.\r\n\r\nThe example I gave above is from my own  hack of the API for a private project where I didn't care about exposing the driver package (I'll add a comment to clarify this, probably should have omitted that example). But yes, I was imagining the two `ColumnType`s, but rather than copying the values, the `sql.ColumnType` would wrap the `driver.ColumnType`, similar to what is done with `Rows`:\r\n\r\n```go\r\npackage sql\r\n\r\ntype Rows struct {\r\n\tdc          *driverConn // owned; must call releaseConn when closed to release\r\n\treleaseConn func(error)\r\n\trowsi       driver.Rows\r\n```",
	"user": {
		"login": "neilotoole",
		"id": 6013203,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-07T18:07:01Z",
	"updated_at": "2016-10-07T18:07:01Z"
}
