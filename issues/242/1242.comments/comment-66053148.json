{
	"id": 66053148,
	"body": "\u003ca id=\"c8\"\u003e\u003c/a\u003eComment 8 by **slairf**:\n\n\u003cpre\u003eComment 7:\nI don't think that elfutils is a safe way to determine whether an ELF Binary is\n\"wellformed\".\n\nConsider this C Code:\n\n    #include \u0026lt;stdio.h\u0026gt;\n\n    int main()\n    {\n        printf(\"Hello World\\n\");\n        return 0;\n    }\n\nNow, after running elflint:\n    section [10] '.rel.plt': relocation 0: offset out of bounds\n    section [10] '.rel.plt': relocation 1: offset out of bounds\n    section [10] '.rel.plt': relocation 2: offset out of bounds\n    section [27] '.symtab': _GLOBAL_OFFSET_TABLE_ symbol size 0 does not match .got.plt section size 24\n    section [27] '.symtab': _DYNAMIC symbol size 0 does not match dynamic segment size 200\n\nAnd now, the same with Go:\n    package main\n\n    import \"fmt\"\n\n    func main() {\n        fmt.Printf(\"Hello world\\n\")\n    }\n\n\nAnd elflint:\n    PHDR segment not contained in a loaded segment\n    section [ 1] '.interp': alloc flag set but section not in any loaded segment\n    section [12] '.rodata' has wrong flags: expected ALLOC and possibly MERGE|STRINGS, is WRITE|ALLOC\n\nI suppose that elflint actually has a hardcoded pattern for ELF Binaries, or some such...\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-02-15T17:38:20Z",
	"updated_at": "2014-12-22T05:47:14Z"
}
