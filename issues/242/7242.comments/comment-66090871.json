{
	"id": 66090871,
	"body": "\u003ca id=\"c11\"\u003e\u003c/a\u003eComment 11:\n\n\u003cpre\u003eHm... I think I may have fooled myself earlier with leftover code from the experiments:\nadding the va_end/va_start pair now does not fix the problem. I tried using va_copy, but\nthat either didn't help or occasionally produced some corrupt bytes as output.\n\nThen I figured out the /actual problem/:\n\n\tn = vsnprintf(NULL, 0, fmt, arg);\n\nwas returning -1. It appears this expected behavior of vsnprintf is undocumented (at\nleast according to \u003ca href=\"http://msdn.microsoft.com/en-us/library/1kt27hek%28v=vs.80%29.aspx)\"\u003ehttp://msdn.microsoft.com/en-us/library/1kt27hek%28v=vs.80%29.aspx)\u003c/a\u003e.\nI'm guessing, then, that this trick (which looks to be rather common) does not work on\nWindows 2000 (I doubt it's MinGW; I'm using the exact same build on Windows XP with no\nissues). (I also checked: while glibc says it will return the number of remaining bytes\nif a truncated write occurs, Microsoft says it will return -1.)\n\nHonestly? I think this should just be fixed by switching to printf/fprintf instead of\ngoing through the Windows API, but... I know from testing that printf/fprintf works fine.\u003c/pre\u003e",
	"user": {
		"login": "andlabs",
		"id": 718242,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-02-08T03:04:24Z",
	"updated_at": "2014-12-08T10:40:15Z"
}
