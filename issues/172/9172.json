{
	"id": 51289189,
	"number": 9172,
	"state": "closed",
	"title": "runtime: writeHeapDump crashes program",
	"body": "\u003cpre\u003ego version devel +efd786846a76 Tue Nov 25 16:00:25 2014 -0500 linux/amd64\n\nA program crashes as:\n\npanic: runtime error: index out of range\nfatal error: panic on system stack\nruntime stack:\nruntime.gothrow(0x590af0, 0x15)\n\tsrc/runtime/panic.go:507 +0x8e fp=0x7fffcabc22f0 sp=0x7fffcabc22d8\nruntime.gopanic(0x541da0, 0xc208034000)\n\tsrc/runtime/panic.go:325 +0x9e fp=0x7fffcabc2358 sp=0x7fffcabc22f0\nruntime.panicindex()\n\tsrc/runtime/panic.go:12 +0x4e fp=0x7fffcabc2380 sp=0x7fffcabc2358\nruntime.iterate_finq(0x5ba720)\n\tsrc/runtime/mgc.go:794 +0xad fp=0x7fffcabc23c0 sp=0x7fffcabc2380\nruntime.dumproots()\n\tsrc/runtime/heapdump.go:448 +0x180 fp=0x7fffcabc2418 sp=0x7fffcabc23c0\nruntime.mdump()\n\tsrc/runtime/heapdump.go:652 +0xcc fp=0x7fffcabc2438 sp=0x7fffcabc2418\nruntime.writeheapdump_m(0x3)\n\tsrc/runtime/heapdump.go:673 +0x8e fp=0x7fffcabc2460 sp=0x7fffcabc2438\nruntime.funcÂ·016()\n\tsrc/runtime/mem.go:106 +0x2a fp=0x7fffcabc2470 sp=0x7fffcabc2460\nruntime.systemstack(0x639930)\n\tsrc/runtime/asm_amd64.s:244 +0x71 fp=0x7fffcabc2478 sp=0x7fffcabc2470\nruntime.mstart()\n\tsrc/runtime/proc1.go:693 fp=0x7fffcabc2480 sp=0x7fffcabc2478\n\nI've caught it on all.bash but with modified runtime, but it should be easy to create a\ntest.\n\niterate_finq accesses fb.fin with large indexes:\n\nfunc iterate_finq(callback func(*funcval, unsafe.Pointer, uintptr, *_type, *ptrtype)) {\n\tfor fb := allfin; fb != nil; fb = fb.alllink {\n\t\tfor i := int32(0); i \u0026lt; fb.cnt; i++ {\n\t\t\tf := \u0026amp;fb.fin[i]  // \u0026lt;\u0026lt;\u0026lt;--- HERE\n\t\t\tcallback(f.fn, f.arg, f.nret, f.fint, f.ot)\n\t\t}\n\t}\n}\n\nBut finblock is declared as follows:\n\ntype finblock struct {\n\talllink *finblock\n\tnext    *finblock\n\tcnt     int32\n\tcap     int32\n\tfin     [1]finalizer  // \u0026lt;\u0026lt;\u0026lt;--- sizeof of the array is 1\n}\n\nSo the block contains more than 1 finalizer during heap dump, program crashes with index\nout of range.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-16T03:07:40Z",
	"created_at": "2014-11-26T15:14:11Z",
	"updated_at": "2016-06-25T01:45:00Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
