{
	"id": 199960480,
	"body": "Thanks for the comments! I believe I've addressed all of them in https://go-review.googlesource.com/21030.\r\n\r\n\u003e I suggest to require all lines beginning with a # character to be ignored.\r\n\r\nGood catch. I made the rule a bit stricter than you proposed by requiring that the first character satisfy unicode.IsLower(). If there's a compelling case to weaken this, we can do so in the future.\r\n\r\n\u003e\u003e It may also be helpful to specify whether or not a tool can assume that value units are always ratios, so must include a slash character. There is also the question whether a value unit with multiple slashes is undefined, forbidden or something else.\r\n\r\n\u003e It's a fascinating question, but one that maybe we should leave open, at least at first. I can't think of any units that wouldn't have exactly one slash, but maybe (probably) I am just not thinking hard enough.\r\n\r\nThere are useful units with zero slashes, such as binary size in a compiler benchmark and median GC utilization (though you could argue these are \"per iteration\"). There are also useful units with multiple slashes, such as bytes/CPU/sec. You could represent this as bytes/(CPU*sec), but this goes one step deeper into the rabbit hole of specifying unit syntax, which we're trying to avoid at least for now. I've been using some of these more complex units in the GC benchmark suite I've been putting together (see [metrics.go](https://github.com/aclements/go-gcbench/blob/master/gcbench/metrics.go)).",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-22T18:52:06Z",
	"updated_at": "2016-03-22T18:52:06Z"
}
