{
	"id": 51286517,
	"number": 7313,
	"state": "closed",
	"title": "cmd/gc: extra alloc when fetching pointer from for declaration",
	"body": "by **cristiandeives**:\n\n\u003cpre\u003e- What steps will reproduce the problem?\n1. Download \u0026quot;mytree.go\u0026quot; and \u0026quot;mytree_test.go\u0026quot; attached to this issue\npage.\n2. Run \u0026quot;go test -bench . -benchmem\u0026quot;.\n\n- What is the expected output?\nBoth methods \u0026quot;Min1\u0026quot; and \u0026quot;Min2\u0026quot; should use the same ammount of\nmemory, as the implementations are basically the same.\n\n- What do you see instead?\n\u0026quot;Min1\u0026quot; uses 1 alloc/op, while \u0026quot;Min2\u0026quot; uses 0. Here's the \u0026quot;go\ntest\u0026quot; output:\n\nBenchmarkMin1\t20000000\t        80.6 ns/op\t      33 B/op\t       1 allocs/op\nBenchmarkMin2\t500000000\t         4.24 ns/op\t       0 B/op\t       0 allocs/op\n\n- Which compiler are you using (5g, 6g, 8g, gccgo)?\nI do not explicitely compile my code, I just run \u0026quot;go test\u0026quot;.\n\n- Which operating system are you using?\nFedora 20 x86_64\n\n- Which version are you using?  (run 'go version')\ngo version devel +1e97bf2e0f93 Wed Feb 12 11:58:48 2014 -0500 linux/amd64\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/7313/0/mytree.go\"\u003emytree.go\u003c/a\u003e (295 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/7313/0/mytree_test.go\"\u003emytree_test.go\u003c/a\u003e (367 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:40:41Z",
	"created_at": "2014-02-12T18:12:09Z",
	"updated_at": "2016-06-25T01:27:25Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
