{
	"id": 66095539,
	"body": "\u003ca id=\"c10\"\u003e\u003c/a\u003eComment 10:\n\n\u003cpre\u003e\u0026gt; I think maybe filepath.IsAbs should return true for \\x.go.\n\nI disagree. See below.\n\n\u0026gt; IsAbs == false is supposed to mean 'this path is relative to the current directory'.\n\nI don't think this would always work, for example, is 'x:a\\b' relative to the current\ndirectory? '\\x.go' is relative to current drive, but absolute to current directory on\nthat drive. It becomes complicated quickly. I would use different description -\n'absolute path will still work even after current directory / drive letter is changed'.\n\nI think we have a few other issues like that in path/filepath. For example, filepath.Rel\nis broken when different drive letters. Running\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"path/filepath\"\n)\n\nfunc rel(path, base string) {\n\tp, err := filepath.Rel(base, path)\n\tfmt.Printf(\"path=%v base=%v p=%v err=%v\\n\", path, base, p, err)\n}\n\nfunc main() {\n\trel(`c:\\go\\root`, `c:\\go\\`)\n\trel(`c:\\go\\root`, `x:\\`)\n\trel(`c:\\go\\root`, `x:`)\n}\n\noutputs\n\npath=c:\\go\\root base=c:\\go\\ p=root err=\u0026lt;nil\u0026gt;\npath=c:\\go\\root base=x:\\ p= err=Rel: can't make \\go\\root relative to \\\npath=c:\\go\\root base=x: p= err=Rel: can't make \\go\\root relative to\n\nI was going to create an issue for it, but I don't see how we can improve the situation\nhere.\n\n\u0026gt; ... nothing is going to happen for 1.3 ...\n\nSure.\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-06-03T05:05:26Z",
	"updated_at": "2014-12-22T06:35:13Z"
}
