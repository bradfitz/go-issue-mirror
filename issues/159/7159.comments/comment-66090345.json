{
	"id": 66090345,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eThe lines point to iface/eface scanning. GC is quite vulnerable to heap corruption in\nthat place, because it tries to treat the first word as Type/Itab.\nI suspect that it has something to do with recent liveness changes.\nI see that freebsd also uses uintptr's as pointer in syscall package:\n\n../syscall/syscall_freebsd_386.go:func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9\nuintptr) (r1, r2 uintptr, err Errno) // sic\n../syscall/syscall_freebsd_amd64.go:func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8,\na9 uintptr) (r1, r2 uintptr, err Errno)\n../syscall/syscall_freebsd_arm.go:func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9\nuintptr) (r1, r2 uintptr, err Errno) // sic\n../syscall/zsyscall_freebsd_386.go:func bind(s int, addr uintptr, addrlen _Socklen) (err\nerror) {\n../syscall/zsyscall_freebsd_386.go:func connect(s int, addr uintptr, addrlen _Socklen)\n(err error) {\n../syscall/zsyscall_freebsd_386.go:func getsockopt(s int, level int, name int, val\nuintptr, vallen *_Socklen) (err error) {\n../syscall/zsyscall_freebsd_386.go:func setsockopt(s int, level int, name int, val\nuintptr, vallen uintptr) (err error) {\n../syscall/zsyscall_freebsd_386.go:func sendto(s int, buf []byte, flags int, to uintptr,\naddrlen _Socklen) (err error) {\n../syscall/zsyscall_freebsd_386.go:func kevent(kq int, change uintptr, nchange int,\nevent uintptr, nevent int, timeout *Timespec) (n int, err error) {\n../syscall/zsyscall_freebsd_386.go:func sysctl(mib []_C_int, old *byte, oldlen *uintptr,\nnew *byte, newlen uintptr) (err error) {\n../syscall/zsyscall_freebsd_386.go:func Getdirentries(fd int, buf []byte, basep\n*uintptr) (n int, err error) {\n../syscall/zsyscall_freebsd_386.go:func mmap(addr uintptr, length uintptr, prot int,\nflag int, fd int, pos int64) (ret uintptr, err error) {\n../syscall/zsyscall_freebsd_386.go:func munmap(addr uintptr, length uintptr) (err error)\n{\n../syscall/zsyscall_freebsd_amd64.go:func bind(s int, addr uintptr, addrlen _Socklen)\n(err error) {\n../syscall/zsyscall_freebsd_amd64.go:func connect(s int, addr uintptr, addrlen _Socklen)\n(err error) {\n../syscall/zsyscall_freebsd_amd64.go:func getsockopt(s int, level int, name int, val\nuintptr, vallen *_Socklen) (err error) {\n../syscall/zsyscall_freebsd_amd64.go:func setsockopt(s int, level int, name int, val\nuintptr, vallen uintptr) (err error) {\n../syscall/zsyscall_freebsd_amd64.go:func sendto(s int, buf []byte, flags int, to\nuintptr, addrlen _Socklen) (err error) {\n../syscall/zsyscall_freebsd_amd64.go:func kevent(kq int, change uintptr, nchange int,\nevent uintptr, nevent int, timeout *Timespec) (n int, err error) {\n../syscall/zsyscall_freebsd_amd64.go:func sysctl(mib []_C_int, old *byte, oldlen\n*uintptr, new *byte, newlen uintptr) (err error) {\n../syscall/zsyscall_freebsd_amd64.go:func Getdirentries(fd int, buf []byte, basep\n*uintptr) (n int, err error) {\n../syscall/zsyscall_freebsd_amd64.go:func mmap(addr uintptr, length uintptr, prot int,\nflag int, fd int, pos int64) (ret uintptr, err error) {\n../syscall/zsyscall_freebsd_amd64.go:func munmap(addr uintptr, length uintptr) (err\nerror) {\n../syscall/zsyscall_freebsd_arm.go:func bind(s int, addr uintptr, addrlen _Socklen) (err\nerror) {\n../syscall/zsyscall_freebsd_arm.go:func connect(s int, addr uintptr, addrlen _Socklen)\n(err error) {\n../syscall/zsyscall_freebsd_arm.go:func getsockopt(s int, level int, name int, val\nuintptr, vallen *_Socklen) (err error) {\n../syscall/zsyscall_freebsd_arm.go:func setsockopt(s int, level int, name int, val\nuintptr, vallen uintptr) (err error) {\n../syscall/zsyscall_freebsd_arm.go:func sendto(s int, buf []byte, flags int, to uintptr,\naddrlen _Socklen) (err error) {\n../syscall/zsyscall_freebsd_arm.go:func kevent(kq int, change uintptr, nchange int,\nevent uintptr, nevent int, timeout *Timespec) (n int, err error) {\n../syscall/zsyscall_freebsd_arm.go:func sysctl(mib []_C_int, old *byte, oldlen *uintptr,\nnew *byte, newlen uintptr) (err error) {\n../syscall/zsyscall_freebsd_arm.go:func Getdirentries(fd int, buf []byte, basep\n*uintptr) (n int, err error) {\n../syscall/zsyscall_freebsd_arm.go:func mmap(addr uintptr, length uintptr, prot int,\nflag int, fd int, pos int64) (ret uintptr, err error) {\n../syscall/zsyscall_freebsd_arm.go:func munmap(addr uintptr, length uintptr) (err error)\n{\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-01-21T09:02:47Z",
	"updated_at": "2014-12-08T10:39:46Z"
}
