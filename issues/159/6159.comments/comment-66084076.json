{
	"id": 66084076,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3 by **atkaaz**:\n\n\u003cpre\u003eI like that attitude. Surely enough, I'll do so.\nI've tracked it until it says import cycle not allowed (in 2 places)\n\n\u003ca href=\"http://code.google.com/p/go/source/browse/src/pkg/net/udpsock_posix.go#230\"\u003ehttp://code.google.com/p/go/source/browse/src/pkg/net/udpsock_posix.go#230\u003c/a\u003e\n\nwhich means that err is not nil here:\n\u003ca href=\"http://code.google.com/p/go/source/browse/src/pkg/net/udpsock_posix.go#228\"\u003ehttp://code.google.com/p/go/source/browse/src/pkg/net/udpsock_posix.go#228\u003c/a\u003e\nand going inside this one(listenIPv4MulticastUDP):\n\u003ca href=\"http://code.google.com/p/go/source/browse/src/pkg/net/udpsock_posix.go#251\"\u003ehttp://code.google.com/p/go/source/browse/src/pkg/net/udpsock_posix.go#251\u003c/a\u003e\nwhich means: \u003ca href=\"http://code.google.com/p/go/source/browse/src/pkg/net/udpsock_posix.go#250\"\u003ehttp://code.google.com/p/go/source/browse/src/pkg/net/udpsock_posix.go#250\u003c/a\u003e\njoinIPv4Group err isn't nil, so going inside this one(joinIPv4Group):\n\u003ca href=\"http://code.google.com/p/go/source/browse/src/pkg/net/sockoptip_posix.go#23\"\u003ehttp://code.google.com/p/go/source/browse/src/pkg/net/sockoptip_posix.go#23\u003c/a\u003e\n\nand from here on I couldn't track due to import \"fmt\" cycle\nThe two (more) relevant lines from the last line above are:\n\u003ca href=\"http://code.google.com/p/go/source/browse/src/pkg/os/error.go#39\"\u003ehttp://code.google.com/p/go/source/browse/src/pkg/os/error.go#39\u003c/a\u003e\n\u003ca href=\"http://code.google.com/p/go/source/browse/src/pkg/syscall/syscall_windows.go#871\"\u003ehttp://code.google.com/p/go/source/browse/src/pkg/syscall/syscall_windows.go#871\u003c/a\u003e\n\n\nActually, I don't know why I disregarded using just \"println\" when reading what you\nsaid, and I used fmt.Println instead. Looks like with \"println\" I can avoid import\ncycle, however I notice that using println in error.go causes it to print many lines AND\nthey intermix with each other sometimes and looks like this:\nd1\nd2\nd1d1\nd2\n\nd2\nd1\n\nAny thoughts on this part? Looks like the same println line(and the next line) can get\nbetween the printed text and its newline(also replaced all fmt.Println with println just\nin case), code is like this:\nfunc NewSyscallError(syscall string, err error) error {\n\tprintln(\"d1\")\n\tif err == nil {\n\t\tprintln(\"d2\")\n\t\treturn nil\n\t}\n\tprintln(\"d3\")\n\treturn \u0026SyscallError{syscall, err}\n}\n(but this d1 and d2 only happens after the fail is reported (and also at this line\nbefore the fail is reported:\n\u003ca href=\"http://code.google.com/p/go/source/browse/src/pkg/net/udpsock_posix.go#247\"\u003ehttp://code.google.com/p/go/source/browse/src/pkg/net/udpsock_posix.go#247\u003c/a\u003e  but this is\nNOT relevant to this issue, because d1 d3 happens at our joinIPv4Group line below that) )\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-16T02:28:55Z",
	"updated_at": "2014-12-08T10:33:53Z"
}
