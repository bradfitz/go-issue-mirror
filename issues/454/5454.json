{
	"id": 51283652,
	"number": 5454,
	"state": "closed",
	"title": "net/http: treat HEAD methods less specially",
	"body": "\u003cpre\u003eRight now, a ResponseWriter Write will return ErrBodyNotAllowed for a HEAD request.\n\nWhile some applications may want to check Request.Method == \u0026quot;HEAD\u0026quot; to avoid\nsome computation, the majority would prefer to be lazy.\n\nFor instance, see \u003ca href=\"https://golang.org/issue/5451\"\u003eissue #5451\u003c/a\u003e and the proposed fix\n(\u003ca href=\"https://golang.org/cl/9388043/)\"\u003ehttps://golang.org/cl/9388043/)\u003c/a\u003e to shut up some bogus warnings:\n\n        if err := godocHTML.Execute(w, page); err != nil \u0026amp;\u0026amp; err != http.ErrBodyNotAllowed {\n                log.Printf(\u0026quot;godocHTML.Execute: %s\u0026quot;, err)\n\t}\n\nThat means applications have to care about HEAD vs GET.\n\nThe server's default behavior should shield users from caring about HEAD and just do the\nright thing, which means:\n\n-- don't return ErrBodyNotAllowed for HEAD requests. (we'll still return it for other\ncases)\n-- still do Content-Type sniffing on first 512 bytes.\n-- still count Content-Length and send that header, for bodies \u0026lt;= 2KB\n\nCurrently we don't do any of those 3, which means our response headers to HEAD requests\naren't the same as our responses to GET requests, unless the app goes out of its way to\ndo so, which most don't, since HEAD requests are rare.\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Suggested"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:29:33Z",
	"created_at": "2013-05-13T16:50:50Z",
	"updated_at": "2016-06-24T22:39:55Z"
}
