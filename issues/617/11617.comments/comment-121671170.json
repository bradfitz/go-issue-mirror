{
	"id": 121671170,
	"body": "@mdempsky, do you have any more examples of your sanity check failure message? In the one you posted, the LSym object is very aligned (so aligned that the corrupted bitmap byte is also very aligned) and I'd like to know if that's just coincidence or if it's likely to be relevant.\r\n\r\nI haven't figured out much more since last night, unfortunately. I dug around in the neighboring memory for clues. The preceding span (which neighbors the corrupted byte in the bitmap) is also full of LSyms. Based on their location in Ctxt.Allsym, they were allocated long before the LSym with the corrupted bitmap (over 10,000 LSyms were allocated in-between), so it wasn't the initialization of that span that corrupted the bitmap byte, or the unrolling of the bitmap for those LSyms. Also, since the LSym is 176 bytes, the preceding span has 96 bytes of padding at the end, which leaves quite a bit of space between the bitmap for the preceding LSym and the corrupted bitmap byte.\r\n\r\nThe LSym with the corrupted bitmap byte was one of the more recently allocated LSyms, with only 2,027 more recently allocated LSyms (out of 17,335 on Ctxt.Allsym). It's also the only LSym with a corrupted bitmap. In the core dump you sent me, the majority of the LSyms are not yet marked (it's in the middle of a GC, so that's not entirely surprising).",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-15T16:35:17Z",
	"updated_at": "2015-07-15T16:35:17Z"
}
