{
	"id": 188390173,
	"body": "@TheHippo to complete your example where atleast the paths match I've written http://play.golang.org/p/v9Dd3dJYMH -- content shown below.\r\nHowever, I cannot reproduce the bug you reported on Darwin nor on Linux.\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"fmt\"\r\n\t\"io/ioutil\"\r\n\t\"log\"\r\n\t\"os\"\r\n)\r\n\r\nfunc reproTrial(path string, content []byte) error {\r\n\terr := ioutil.WriteFile(path, content, 0644)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\r\n\tdefer func() {\r\n\t\t_ = os.RemoveAll(path)\r\n\t}()\r\n\r\n\tretrieved, err := ioutil.ReadFile(path)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\r\n\tif !bytes.Equal(retrieved, content) {\r\n\t\treturn fmt.Errorf(\"file %q content doesn't match, read %s expected %s\\n\", path, retrieved, content)\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc main() {\r\n\toutfilePath := \"temp\"\r\n\tcontent := []byte(\"foo\")\r\n\r\n\tif err := reproTrial(outfilePath, content); err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n}\r\n```",
	"user": {
		"login": "odeke-em",
		"id": 4898263,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-24T18:21:06Z",
	"updated_at": "2016-02-24T18:21:06Z"
}
