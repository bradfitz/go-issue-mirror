{
	"id": 87033774,
	"body": "I looked into this a little bit (with 1.3.3).  I don't see quite the behavior you are.\r\n\r\nI tried uploading the same 90MB file 10+ times.  The heap grows to about 500MB over the first three or four uploads and then stops.  After I stop uploading, GC eventually gets back to \u003c1MB.  It takes two background cycles to get there because of the concurrent sweep.  You can speed that up by calling runtime.GC(), although in your example program there really isn't a good place to do that (you'd need it inside ListenAndServe after the http.Request is dropped).\r\n\r\nWe should ideally be able to handle this workload in ~256MB.  I'm not entirely sure why it gets to 500MB.",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-27T17:55:17Z",
	"updated_at": "2015-03-27T17:55:17Z"
}
