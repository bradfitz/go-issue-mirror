{
	"id": 51288527,
	"number": 8669,
	"state": "closed",
	"title": "archive/zip: not possible to a start writing zip at offset other than zero",
	"body": "by **sanderhahn**:\n\n\u003cpre\u003ego version go1.3.1 darwin/amd64\n\nThe zip api doesn't allow creating a zip file with a different offset than zero. This is\nrelevant for instance if a zip file is appended to an existing binary. The reader reads\nthe zip contents alright but only when the offsets are first corrected using the\n\u0026quot;zip -A\u0026quot; command.\n\nI understand this is not a high priority issue, but it would be nice to have a pure go\nway of creating zips at an offset other than zero. For instance if you want to embed\nfiles into your own binary.\n\nThe solution that i see that would not break the existing API is providing an additional\nconstrutor that takes the initial count value for the countWriter:\n\n// writer.go\n\nfunc NewWriterAt(w io.Writer, count int64) *Writer {\n    return \u0026amp;Writer{cw: \u0026amp;countWriter{w: bufio.NewWriter(w), count: count}}\n}\n\nAnother solution would be to make the zip reader smarter and automatically correct the\noffsets if they are not correct (as the unzip tool does).\n\nIs it possible to consider this additional constructor in a new release?\n\nAn example program that uses a patched version of the stdlib zip to add zip contents to\nan existing binary is at: \u003ca href=\"https://github.com/sanderhahn/gozip\"\u003ehttps://github.com/sanderhahn/gozip\u003c/a\u003e\n\nThank you for the great language and tooling :)\n\nBest regards,\nSander Hahn\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2015-03-12T00:15:12Z",
	"created_at": "2014-09-05T21:59:10Z",
	"updated_at": "2016-06-25T01:40:51Z"
}
