{
	"id": 51282405,
	"number": 4627,
	"state": "closed",
	"title": "spec: moment of array bounds check is unclear; yet tests depend upon it",
	"body": "\u003cpre\u003eThe test function p8 in $GOROOT/test/reorder.go seems to rely on unspecified ordering of\nside effects.  I have further reduced the test to this program:\n\n\u003ca href=\"http://play.golang.org/p/43Aapffmfd\"\u003ehttp://play.golang.org/p/43Aapffmfd\u003c/a\u003e\n\n\tx := []int{1, 2, 3}\n\tdefer fmt.Println(x) // [100 2 3]\n\ti := 0 \n\ti, x[i], x[5] = 1, 100, 500\n\nThe test expectation is that the final value of x (during the panic) is [100 2 3], so\nthe test passes, but it seems to me that another implementation might legally panic with\n[1 2 3] since the spec doesn't prescribe the relative ordering of these events:\n\nA)  assign 100 to x[0]\nB)  panic due to failed bounds check in expression x[5].\n\nThe spec does state that the operands of index expressions (e.g. i in x[i]) are\nevaluated L-to-R, so there's no doubt that x[i] aliases x[0].  But whether the x[5]\nbounds check occurs during evaluation of the LHS or during the second of the \u0026quot;two\nphases\u0026quot; of parallel assignment is nowhere stated.\n\nCould you clarify when the bounds check occurs?\u003c/pre\u003e",
	"user": {
		"login": "adonovan",
		"id": 5658175,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 9,
	"closed_at": "2014-12-08T10:24:33Z",
	"created_at": "2013-01-07T21:26:58Z",
	"updated_at": "2016-06-24T22:30:52Z"
}
