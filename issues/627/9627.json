{
	"id": 54683721,
	"number": 9627,
	"state": "closed",
	"title": "runtime: reconsider using SYSCALL instruction on FreeBSD ",
	"body": "In #6372 the use of INT 0x80 instead of the SYSCALL instruction was chosen as the slower but correct option for a kernel bug on FreeBSD.\r\n\r\nOf the 6 current combinations of FreeBSD {8,9,10}-{RELEASE,STABLE} only 8.4-RELEASE doesn't have the fix from https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=182161\r\n\r\nThat version was released on June 9, 2013 and has an expected EoL of June 30, 2015\r\n\r\nA simple benchmark for getting time ( http://play.golang.org/p/QUwb_r1d0G ) on my FreeBSD 9.3-RELEASE machine shows:\r\n\r\n```\r\n$ benchcmp /tmp/INT80 /tmp/SYSCALL \r\nbenchmark            old ns/op     new ns/op     delta\r\nBenchmarkStdTime     275           126           -54.18%\r\n```\r\nWhich is a significant.  The Go 1.3 doc states that Go requires FreeBSD 8 or above. So I have a couple questions:\r\n\r\n1) Can the definition of FreeBSD 8 be stretched to require -STABLE over -RELEASE.  If yes, I can send a CL to revert 555da73.\r\n2) If not, is there a dynamic way to set the SYSCALL instruction at runtime?  I can't imagine how, but the intricacies of the runtime and linker are beyond me.\r\n3) If no to 1 \u0026 2, when do we expect to drop the FBSD 8 requirement?  Should I just come back on July 1st and we can revisit?",
	"user": {
		"login": "wathiede",
		"id": 1043363,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 7,
	"closed_at": "2015-01-18T23:54:10Z",
	"created_at": "2015-01-18T02:27:30Z",
	"updated_at": "2016-06-25T01:58:49Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
