{
	"id": 143352277,
	"number": 14949,
	"state": "closed",
	"title": "path/filepath: Glob inconstent behavior on Windows beginning in 1.6",
	"body": "Works correctly and consistently on go 1.4, 1.5.\r\nWorks inconsistently in go 1.6.  It behaves differently based on the current directory where the program is executed.  If run from the C: drive, fails by not matching and returns an empty list.  If run from the E: drive, the exact same binary works and returns 2 matches.\r\n\r\nTested on Windows 2008 R2\r\n\r\nProblem description:  Using the following glob logic to detect the installation of Git on 32 or 64 bit windows machines.  Expect back a list paths of potential 'git.exe' that someone might be using.  However, when compiled with 1.6, does not work.\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"path/filepath\"\r\n)\r\n\r\nfunc main() {\r\n    matches, err := filepath.Glob(`C:\\Program Files*\\*\\bin\\git.exe`)\r\n    if err != nil {\r\n        fmt.Println(\"err=\", err)\r\n    }\r\n    fmt.Println(matches)\r\n}\r\n\r\n\r\n\r\n\r\n",
	"user": {
		"login": "elzofranklin",
		"id": 115705,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		},
		{
			"name": "OS-Windows"
		}
	],
	"comments": 4,
	"closed_at": "2016-05-27T01:55:54Z",
	"created_at": "2016-03-24T20:34:51Z",
	"updated_at": "2016-05-27T01:55:54Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
