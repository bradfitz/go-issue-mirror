{
	"id": 58429943,
	"number": 9949,
	"state": "closed",
	"title": "time: Truncate in NZ timezone changes the day when removing all time fields",
	"body": "Hi,\r\n\r\nI am relatively new to Go and I am trying out the different built-in libraries to see how they work.  I was trying out `time.Truncate` and came across an unexpected result. I am in New Zealand and was truncating all the time fields from a local datetime value.  Rather than just truncate the time fields, the new value has also gone to the previous day. I suppose it did the truncation on the underlying value in UTC.\r\n\r\nThe sample program below demonstrates the issue and produces the following output:\r\n\r\n\u003e dateOnly(2015-02-21 11:30:00 +1300 NZDT) was 2015-02-20 13:00:00 +1300 NZDT, but wanted 2015-02-21 00:00:00 +1300 NZDT\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"time\"\r\n)\r\n\r\nconst layout = \"2006 Jan 02 15:04:05 MST\"\r\n\r\nfunc main() {\r\n\tdateTime, dateWithTimeTruncated := parseTestDates(\"2015 Feb 21 11:30:00.0 NZDT\", \"2015 Feb 21 00:00:00.0 NZDT\")\r\n\tif !dateOnly(dateTime).Equal(dateWithTimeTruncated) {\r\n\t\tfmt.Printf(\"dateOnly(%v) was %v, but wanted %v\", dateTime, dateOnly(dateTime), dateWithTimeTruncated)\r\n\t}\r\n}\r\n\r\n// Truncate the time component and leave only the date fields\r\nfunc dateOnly(t time.Time) time.Time {\r\n\treturn t.Truncate(time.Hour * 24)\r\n}\r\n\r\nfunc parseTestDates(dateWithTime string, dateWithoutTime string) (dateTime time.Time, dateWithTimeTruncated time.Time) {\r\n\tdateTime, err := time.Parse(layout, dateWithTime)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\tdateWithTimeTruncated, err = time.Parse(layout, dateWithoutTime)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\treturn dateTime, dateWithTimeTruncated\r\n}\r\n```",
	"user": {
		"login": "jennerm",
		"id": 11099058,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2015-04-10T19:15:27Z",
	"created_at": "2015-02-21T00:32:57Z",
	"updated_at": "2016-06-25T02:01:34Z"
}
