{
	"id": 244267719,
	"body": "I'm not a fan of this proposal:\r\n\r\n```\r\n type Server struct { ErrorHandler func(net.Conn, error, ...interface{}) } \r\n```\r\n\r\nIn addition to the unclarity around the `...interface{}`, I don't like providing the `net.Conn` (which permits reading, writing, closing). It's providing way too many internals to support long-term. And it's especially incompatible with HTTP/2, where the net.Conn is shared amongst different requests.\r\n\r\nI'd review a more formal proposal around structured error handling in the `net/http` package, but this issue barely scratches the surface.\r\n\r\nI'd want to see an audit of all uses of ErrorLog and how what each call site should do instead to provide more context around the error, providing a rich error type.\r\n\r\nIs anybody interested in writing a proposal?\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-02T02:30:49Z",
	"updated_at": "2016-09-02T02:30:49Z"
}
