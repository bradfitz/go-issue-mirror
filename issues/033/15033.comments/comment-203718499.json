{
	"id": 203718499,
	"body": "Oh, I thought you just wanted to seek back to the beginning:\r\n\r\n```go\r\nfunc (r *Reader) Reset() {\r\n    r.i = 0\r\n    r.prevRune = -1\r\n\r\n```\r\n\r\nBut in retrospect, we already have `Seek` for that.\r\n\r\nChanging the source of the Reader is a bit more of a chance, but it's true that it's already consistent with...\r\n\r\n```\r\ngo1.1.txt:pkg time, method (*Timer) Reset(Duration) bool\r\ngo1.2.txt:pkg bufio, method (*Reader) Reset(io.Reader)\r\ngo1.2.txt:pkg bufio, method (*Writer) Reset(io.Writer)\r\ngo1.2.txt:pkg compress/flate, method (*Writer) Reset(io.Writer)\r\ngo1.2.txt:pkg compress/gzip, method (*Writer) Reset(io.Writer)\r\ngo1.2.txt:pkg compress/zlib, method (*Writer) Reset(io.Writer)\r\ngo1.3.txt:pkg compress/gzip, method (*Reader) Reset(io.Reader) error\r\ngo1.4.txt:# CL 97140043 compress/flate: add Reset() to allow reusing large buffers to compress multiple buffers, James Robinson \u003cjamesr@google.com\u003e\r\ngo1.4.txt:pkg compress/flate, type Resetter interface { Reset }\r\ngo1.4.txt:pkg compress/flate, type Resetter interface, Reset(io.Reader, []uint8) error\r\ngo1.4.txt:pkg compress/zlib, type Resetter interface { Reset }\r\ngo1.4.txt:pkg compress/zlib, type Resetter interface, Reset(io.Reader, []uint8) error\r\ngo1.5.txt:pkg debug/dwarf, method (*LineReader) Reset()\r\ngo1.5.txt:pkg os/signal, func Reset(...os.Signal)\r\ngo1.txt:pkg bytes, method (*Buffer) Reset()\r\ngo1.txt:pkg crypto/rc4, method (*Cipher) Reset()\r\ngo1.txt:pkg go/scanner, method (*ErrorList) Reset()\r\n```\r\n\r\nSo, sure. Send a change?\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-31T02:16:58Z",
	"updated_at": "2016-03-31T02:16:58Z"
}
