{
	"id": 66063115,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eDon't use cookies with spaces in them.\n\nYour example works fine if you use \"myvalue\" instead of \"my value\".\nThe Cookie parser rejects cookie values with spaces in them.\nThis might or might not be a mistake\nSetCookie blindly sends cookies with spaces in them,\nwhich also might or might not be a mistake.\n\nThis can probably wait until after Go 1.\n\nFull test program:\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"log\"\n\t\"time\"\n)\n\nfunc main() {\n\thttp.HandleFunc(\"/\", setcookie)\n\thttp.HandleFunc(\"/readcookie\", readcookie)\n\tlog.Fatal(http.ListenAndServe(\"127.0.0.1:8080\", nil))\n}\n\nfunc setcookie(w http.ResponseWriter, req *http.Request) {\n\texpiration := time.Now().AddDate(1, 0, 0)\n\tcookie := http.Cookie{Name: \"foo\", Value: \"myvalue\", Expires: expiration}\n\thttp.SetCookie(w, \u0026cookie)\n\thttp.Redirect(w, req, \"/readcookie\", 307)\n}\n\nfunc readcookie(w http.ResponseWriter, req *http.Request) {\n\tc, err := req.Cookie(\"foo\")\n\tfmt.Fprintf(w, \"foo: %v %v\\n\", c, err)\n\tfmt.Fprintf(w, \"all:\\n\")\n\tfor _, c := range req.Cookies() {\n\t\tfmt.Fprintf(w, \"\\t%s\\n\", c)\n\t}\n}\u003c/pre\u003e\n\n_Labels changed: added **priority-later**, removed **priority-triage**._\n\n_Owner changed to **builder@golang.org**._\n\n_Status changed to **Accepted**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-02-16T18:56:08Z",
	"updated_at": "2014-12-08T10:15:47Z"
}
