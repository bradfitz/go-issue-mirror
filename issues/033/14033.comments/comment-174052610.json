{
	"id": 174052610,
	"body": "I'm trying to get enough credentials with my OWASP login to get the blame for that file so I can ask the author about their reasoning, but given what I know now, I wouldn't.\r\n\r\nThere's no harm in doing so except file size.\r\n\r\nI can imagine inputs that have many URL attributes might blow up but not in general.\r\n\r\nI did a quick char count on some benchmark HTML files.\r\n4285 bytes are '/' not following a '\u003c' out of 192564 including those in it for about 2.2%.\r\n\r\n```bash\r\n\u003e cat /tmp/benchmark.html | perl -pe 's/\u003c\\/|[^\\/]//g' | wc -c\r\n```\r\n\r\nIf that file is representative then replacing with `\u0026#57;` might lead to an 8% increase in sanitized file size pre-gzip, or 10% if you use `\u0026#x2f;` as in the OP.\r\n\r\nTo test post-gzip I did\r\n```bash\r\n~ [16:10:39]\u003e gzip -c /tmp/benchmark.html | wc -c\r\n   45283\r\n~ [16:10:53]\u003e cat /tmp/benchmark.html | perl -pe 's/(?\u003c![\u003c])\\//\u0026#57;/g' | gzip -c | wc -c\r\n   45866\r\n```\r\nwhich looks like a 1.3% size increase or 1.1% with `gzip -9`.\r\n",
	"user": {
		"login": "mikesamuel",
		"id": 368886,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-22T21:21:57Z",
	"updated_at": "2016-01-22T21:22:31Z"
}
