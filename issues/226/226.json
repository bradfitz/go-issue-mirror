{
	"id": 51276203,
	"number": 226,
	"state": "closed",
	"title": "It's impossible to recurse a anonymous function in Go without workarounds.",
	"body": "by **helmwo**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1.\nfunc main() {\n  a := func() {\n    ... // how to access this anonymous func here?\n  }\n  a();\n}\n\nWhat is your $GOOS?  $GOARCH?\n\nlinux 386 - but that does not matter.\n\nWhich revision are you sync'ed to?  (hg log -l 1)\n\nchangeset:   3975:b51fd2d6c160\ntag:         tip\nuser:        Kevin Ballard \u0026lt;kevin@sb.org\u0026gt;\ndate:        Tue Nov 10 20:05:24 2009 -0800\nsummary:     Implement new emacs command M-x gofmt\n\nPlease provide any additional information below.\n\nI'd introduce a pseudo function called recurse() that allows to recurse \nover functions. I'd even introduce this for named functions.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 9,
	"closed_at": "2014-12-08T10:03:43Z",
	"created_at": "2009-11-16T14:50:26Z",
	"updated_at": "2016-06-24T19:05:11Z"
}
