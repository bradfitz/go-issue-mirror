{
	"id": 133009068,
	"body": "Hi, not sure if this is relevant or not; apologies if it's noise. Did a bit of git bisect...\r\n\r\nTest program:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n        \"os\"\r\n)\r\n\r\nfunc main() {\r\n        if []byte(\"0\")[0] == []byte(\"1\")[0] {\r\n                os.Exit(1)\r\n        }\r\n}\r\n```\r\n\r\nThe first bad commit I can see for this program is b115c35ee337ac6026539802d2ff085949dd1919.\r\n\r\nIt causes a panic:\r\n```\r\n# command-line-arguments\r\nnaddr [0x208d1b440]\r\n.   INDEX u(100) l(8) tc(1) byte\r\n.   .   CALLFUNC u(100) l(8) tc(1) ARRAY-[]byte\r\n.   .   .   NAME-runtime.stringtoslicebyte u(1) a(true) l(2) x(0+0) class(PFUNC) tc(1) used(true) FUNC-func(*[32]byte, string) []byte\r\n.   .   CALLFUNC-list\r\n.   .   .   AS u(2) l(8) tc(1)\r\n.   .   .   .   INDREG-SP a(true) l(8) x(0+0) tc(1) PTR64-*[32]byte\r\n.   .   .   .   ADDR u(2) l(8) tc(1) PTR64-*[32]uint8\r\n.   .   .   .   .   NAME-main.autotmp_0000 u(1) a(true) l(8) x(0+0) class(PAUTO) esc(N) tc(1) addrtaken used(true) ARRAY-[32]uint8\r\n\r\n.   .   .   AS u(1) l(8) tc(1)\r\n.   .   .   .   INDREG-SP a(true) l(8) x(8+0) tc(1) string\r\n.   .   .   .   LITERAL-\"0\" u(1) a(true) l(8) tc(1) string\r\n.   .   LITERAL-0 u(1) a(true) l(8) tc(1) int\r\n../../main.go:8: internal compiler error: naddr: bad INDEX\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal 0xb code=0x1 addr=0x0 pc=0x1cfdb0]\r\n\r\ngoroutine 1 [running]:\r\ncmd/compile/internal/gc.hcrash()\r\n\t/tmp/go/src/cmd/compile/internal/gc/subr.go:105 +0x50\r\ncmd/compile/internal/gc.Fatal(0x452f90, 0x10, 0x208adf360, 0x2, 0x2)\r\n\t/tmp/go/src/cmd/compile/internal/gc/subr.go:198 +0x2b1\r\ncmd/compile/internal/gc.Naddr(0x208d32fd0, 0x208d1b440)\r\n\t/tmp/go/src/cmd/compile/internal/gc/gsubr.go:313 +0x1a5b\r\ncmd/compile/internal/amd64.gins(0x3036, 0x208d1b440, 0x208d1b7a0, 0xfffb)\r\n\t/tmp/go/src/cmd/compile/internal/amd64/gsubr.go:629 +0x127\r\ncmd/compile/internal/gc.bgenx(0x208d1b830, 0x0, 0x1, 0x0, 0x208c517a0)\r\n\t/tmp/go/src/cmd/compile/internal/gc/cgen.go:2061 +0x1954\r\ncmd/compile/internal/gc.Bgen(0x208d1b830, 0x208c51800, 0x0, 0x208c517a0)\r\n\t/tmp/go/src/cmd/compile/internal/gc/cgen.go:1739 +0x47\r\ncmd/compile/internal/gc.gen(0x208d1b8c0)\r\n\t/tmp/go/src/cmd/compile/internal/gc/gen.go:805 +0xcd4\r\ncmd/compile/internal/gc.Genlist(0x208d01aa0)\r\n\t/tmp/go/src/cmd/compile/internal/gc/gen.go:219 +0x30\r\ncmd/compile/internal/gc.compile(0x208d1b050)\r\n\t/tmp/go/src/cmd/compile/internal/gc/pgen.go:469 +0xc03\r\ncmd/compile/internal/gc.funccompile(0x208d1b050)\r\n\t/tmp/go/src/cmd/compile/internal/gc/dcl.go:1480 +0x1c9\r\ncmd/compile/internal/gc.Main()\r\n\t/tmp/go/src/cmd/compile/internal/gc/lex.go:470 +0x1ece\r\ncmd/compile/internal/amd64.Main()\r\n\t/tmp/go/src/cmd/compile/internal/amd64/galign.go:127 +0x58d\r\nmain.main()\r\n\t/tmp/go/src/cmd/compile/main.go:26 +0x189\r\n```\r\n\r\nAt a44becef4a7e3af238a1546670717c78eb0069db the behaviour changes to no panic but an exit code of `1`.\r\n\r\n",
	"user": {
		"login": "e-dard",
		"id": 501993,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-20T13:33:11Z",
	"updated_at": "2015-08-20T13:36:33Z"
}
