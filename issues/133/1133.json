{
	"id": 51277396,
	"number": 1133,
	"state": "closed",
	"title": "encoding/asn1: inconsistent APIs",
	"body": "by **jan.newmarch**:\n\n\u003cpre\u003eWhich revision are you using?  (hg identify)\n6d3022dfb42b tip\n\nSeveral packages in Go involve serialisation: gob, asn1, json. But they have mutually\ninconsistent APIs, which could cause programmer errors down the track. Still time to fix\nthem?\n\n1)\njson: func Marshal(v interface{}) ([]byte, os.Error)\nasn1: func MarshalToMemory(val interface{}) ([]byte, os.Error)\ngob: no function\n\njson and asn1 have different names for same functionality, missing in gob.\n\n2)\nasn1: func Marshal(out io.Writer, val interface{}) os.Error\njson: no equivalent\ngob: no equivalent\n\nNote same name but different parameter and return types for asn1.Marshal compared to\njson.Marshal\n\n3)\nasn1: func Unmarshal(val interface{}, b []byte) (rest []byte, err os.Error)\njson: func Unmarshal(data []byte, v interface{}) os.Error\n\nParameters are swapped, result is different.\n\n4)\njson and gob have Decoder and Encoder, asn1 doesn't\njson: func NewDecoder(r io.Reader) *Decoder\ngob: func NewDecoder(r io.Reader) *Decoder\nasn1: none\n\n5)\njson: func (dec *Decoder) Decode(v interface{}) os.Error\ngob: func (dec *Decoder) Decode(e interface{}) os.Error\nasn1: none\n\nSummary:\ngob and json are almost identical, except json has additional Marshal/Unmarshal\nfunctions.\nasn1 is clearly at variance to both the others.\n\nXML could also be considered a serialisation technique, but that is even more variant.\nThis is perhaps excusable, but then again maybe not.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:07:07Z",
	"created_at": "2010-09-23T14:03:38Z",
	"updated_at": "2016-06-24T19:20:30Z"
}
