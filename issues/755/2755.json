{
	"id": 51279660,
	"number": 2755,
	"state": "closed",
	"title": "net/http: handle CONNECT in ReadRequest/WriteRequest",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n\t_, err := http.ReadRequest(bufio.NewReader(strings.NewReader(\u0026quot;CONNECT 98.189.193.163:443 HTTP/1.1\\r\\n\\r\\n\u0026quot;)))\n\tfmt.Println(err)\n\nWhat is the expected output?\n\u0026lt;nil\u0026gt;\n\nWhat do you see instead?\nparse 98.189.193.163:443: invalid URI for request\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nMac OS Snow Leopard\n\nWhich revision are you using?  (hg identify)\nb372a927701e tip\n\nPlease provide any additional information below.\nI'm not sure if these really qualify as URLs, since they don't have a scheme, but they\nare used in valid HTTP requests, so we should have some way to deal with them.\n\nIf the host is a hostname rather than an IP address, the URL is parsed successfully, but\nincorrectly. \u0026quot;www.google.com:443\u0026quot; is parsed as a scheme of\n\u0026quot;www.google.com\u0026quot; and an opaque content of \u0026quot;443\u0026quot;. But if the host is\njust a numeric address, it isn't valid to parse it as a scheme, so it just gives an\nerror.\u003c/pre\u003e",
	"user": {
		"login": "andybalholm",
		"id": 868908,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 10,
	"closed_at": "2014-12-08T10:14:38Z",
	"created_at": "2012-01-22T00:31:33Z",
	"updated_at": "2016-06-24T21:24:08Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
