{
	"id": 66055931,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003emore often than it's good\": Suppose template had a function that returned\nboth a template.Template and a template.Error.  (Oddly, template seems to\nreturn only os.Error values for errors.)  Should that be treated as a\nconstructor for Template or for Error or doubly listed under both?  Treating\nit as neither makes the most sense in my book.\n\nThat's what happens.  The convention is to return os.Error for all errors\nand store a concrete type inside the interface.  See Effective Go's\ndiscussion of errors.  So what template does is not odd at all.  It's your\ncode that is not following the convention.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-04-30T03:32:28Z",
	"updated_at": "2014-12-08T10:09:46Z"
}
