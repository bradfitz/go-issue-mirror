{
	"id": 68743683,
	"body": "If go reduced the observed garbage collection pauses from hundreds of\r\nmilliseconds to 10 miliseconds out every 50 milliseconds would this solve\r\nyour problem?\r\n\r\nOn Mon, Jan 5, 2015 at 11:22 AM, Jonathan Oliver \u003cnotifications@github.com\u003e\r\nwrote:\r\n\r\n\u003e It actually is a problem with the garbage collection itself. The examples\r\n\u003e thus far call runtime.GC() to more easily demonstrate and expose the\r\n\u003e issue. In production I have a number of large maps and using the default\r\n\u003e implementation we have observed garbage collection pauses measuring\r\n\u003e hundreds of milliseconds. It was bad enough that we dug in to pinpoint\r\n\u003e exactly what was causing it.\r\n\u003e\r\n\u003e The biggest question being raised in this issue is whether optimizations\r\n\u003e could be made on certain kinds of structures such as maps where the\r\n\u003e contained type is known to not contain pointers, such as a map[int]bool,\r\n\u003e etc.\r\n\u003e\r\n\u003e â€”\r\n\u003e Reply to this email directly or view it on GitHub\r\n\u003e \u003chttps://github.com/golang/go/issues/9477#issuecomment-68731894\u003e.\r\n\u003e",
	"user": {
		"login": "RLH",
		"id": 972447,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-01-05T17:34:05Z",
	"updated_at": "2015-01-05T17:34:05Z"
}
