{
	"id": 66048748,
	"body": "\u003ca id=\"c20\"\u003e\u003c/a\u003eComment 20:\n\n\u003cpre\u003eOk, I just tested a simple black-hole connection and it turns out that even if socket is\nnon-blocking there's still socket timeout somewhere. Which is awesome news, since it\nmeans go is safe for anti-malware research projects.\n\nAs for timeouts and accept it's actually surprising that shutdown doesn't always work,\ni.e.:\n\npackage main\n\nimport \"fmt\"\nimport \"net\"\nimport \"time\"\n\nfunc main() {\n    l, e := net.Listen(\"tcp\", \"127.0.0.1:8080\")\n    if e != nil {\n        fmt.Printf(\"%v\\n\", e)\n        return\n    }\n    go func() {\n        \u0026lt;- time.After(1e9)\n        println(\"Closing listener\")\n        e := l.Close()\n        if e != nil {\n            fmt.Printf(\"%v\\n\", e)\n        }\n    }()\n    println(\"Starting to accept\")\n    _, e = l.Accept()\n    if e != nil {\n        fmt.Printf(\"%v\\n\", e)\n        return\n    }\n    println(\"Done\")\n}\n\nHangs up forever on Mac OS X, while correctly stopping with \"invalid argument\" on Linux.\nWhat gives? :-/\u003c/pre\u003e",
	"user": {
		"login": "snaury",
		"id": 53117,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-05-30T21:27:26Z",
	"updated_at": "2014-12-22T05:49:45Z"
}
