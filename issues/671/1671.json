{
	"id": 51278144,
	"number": 1671,
	"state": "open",
	"title": "runtime: cpu-bound goroutine blocks finalization",
	"body": "\u003cpre\u003eWhen I run the following program, I get this output:\n\nfinalizing 251; total 600\nfinalizing 250; total 602\nfinalizing 249; total 3997\nfinalizing 248; total 9501\nfinalizing 247; total 20908\nfinalizing 246; total 53407\nfinalizing 245; total 100954\nfinalizing 244; total 225684\nfinalizing 243; total 526626\nfinalizing 242; total 984099\nfinalizing 241; total 2116933\nfinalizing 240; total 4875429\n\nHardly any finalizers are called, even though there is evidently\nsome garbage collection going on.\n\n6g macos f618e5e0991d+ tip\n\npackage main\n\nimport (\n\t\u0026quot;runtime\u0026quot;\n\t\u0026quot;fmt\u0026quot;\n)\n\ntype Foo bool\n\nfunc main() {\n\tfor {\n\t\tnewFoo()\n\t}\n}\n\nvar count int\n\nfunc newFoo() *Foo {\n\tf := new(Foo)\n\tthis := count\n\truntime.SetFinalizer(f, func(_ *Foo) {\n\t\tfmt.Printf(\u0026quot;finalizing %d; total %d\\n\u0026quot;, this, count)\n\t})\n\tcount++\n\treturn f\n}\u003c/pre\u003e",
	"user": {
		"login": "rogpeppe",
		"id": 66491,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "LongTerm"
		}
	],
	"comments": 16,
	"created_at": "2011-04-07T13:53:22Z",
	"updated_at": "2015-04-14T19:45:17Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
