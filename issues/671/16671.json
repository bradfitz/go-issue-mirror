{
	"id": 170654280,
	"number": 16671,
	"state": "closed",
	"title": "cmd/link: -ldflags -X option does not work with -linkshared",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo version devel +748aa84 Wed Aug 10 20:33:11 2016 +0000 linux/ppc64le\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nppc64le Ubuntu 16.04\r\n\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\nSimple testcase:\r\ntest-setX.go:\r\npackage main\r\n\r\nimport (\r\n        \"fmt\"\r\n)\r\n\r\nvar VERSION string\r\n\r\nfunc main() {\r\n    fmt.Printf(\"Hello, World! Version is: %s\\n\", VERSION)\r\n}\r\nMake sure there is a shared std libary\r\ngo install -buildmode=shared std\r\ngo build -linkshared -ldflags '-X main.VERSION=123' test-setX.go\r\n\r\n4. What did you expect to see?\r\nSuccessful build and execution.  Output without -linkshared is:\r\n./test-setX\r\nHello, World! Version is: 123\r\n\r\n5. What did you see instead?\r\nProgram didn't build, error message was:\r\ncannot use -X with non-string symbol main.VERSION **type.TwVfYA92**\r\n(I modified src/cmd/link/internal/ld/data.go to print out the actual type at the end of the message.  That does not appear by default.)\r\nI also just tried removing the test in data.go where this error message occurs, and then the program built successfully but panicked at runtime.\r\n",
	"user": {
		"login": "laboger",
		"id": 9433228,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-08-16T00:37:35Z",
	"created_at": "2016-08-11T14:06:37Z",
	"updated_at": "2016-08-16T00:37:35Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
