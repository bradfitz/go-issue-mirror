{
	"id": 66059924,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003ePassing a non-blocking fd only works if you are giving\nthe fd to a program that will do non-blocking I/O.\nA common case is to accept the network connection\nand then use that fd as stdin, stdout, and stderr when\nrunning an ordinary program.  Those programs typically\ndo not expect non-blocking i/o on those fds and will\nbehave incorrectly.\n\nIt sounds like you are passing the fd to a program that\nis going to use non-blocking i/o itself, so it is going to\nput the fd back in non-blocking mode no matter what you\npass it.  The usual convention is that at program startup\na preopened fd is in blocking mode.\n\nFor example, here is a good way to kill your shell: run\na program that leaves the tty in non-blocking mode when\nit exits:\n\npackage main\nimport \"syscall\"\nfunc main() {\n\tsyscall.SetNonblock(0, true)\n}\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-11-14T16:37:44Z",
	"updated_at": "2014-12-08T10:13:06Z"
}
