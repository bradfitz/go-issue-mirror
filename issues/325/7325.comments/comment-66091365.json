{
	"id": 66091365,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003eI noticed our windows-amd64 builder crashes with different error. I can reproduce it\nhere on my windows-amd64 pc:\n\nc:\\go\\root\\test\u0026gt;divmod.exe\nruntime: newstack framesize=0x0 argsize=0x18 sp=0x28fb50 stack=[0x290000, 0x292fa0]\n        morebuf={pc:0x421074 sp:0x28fb60 lr:0x0}\n        sched={pc:0x410f20 sp:0x28fb58 lr:0x0 ctxt:0x291508}\nruntime: split stack overflow: 0x28fb50 \u0026lt; 0x290000\nfatal error: runtime: split stack overflow\n\nruntime stack:\nruntime.throw(0x467589)\n        c:/go/root/src/pkg/runtime/panic.c:464 +0x74\nruntime.newstack()\n        c:/go/root/src/pkg/runtime/stack.c:247 +0x1ff\nruntime.morestack()\n        c:/go/root/src/pkg/runtime/asm_amd64.s:228 +0x58\n\ngoroutine 16 [stack split]:\nruntime.sighandler(0x2907a0, 0x2902b0, 0xc082012000)\n        c:/go/root/src/pkg/runtime/os_windows_amd64.c:36 fp=0x28fb60\nruntime: unexpected return pc for runtime.sigtramp called from 0x2907a0\nruntime.sigtramp()\n        ?:0 +0x54 fp=0x28fb68\ncreated by _rt0_go\n        c:/go/root/src/pkg/runtime/asm_amd64.s:97 +0x121\n\ngoroutine 17 [syscall]:\nruntime.notetsleepg(0x2bff60, 0xdf8475800)\n        c:/go/root/src/pkg/runtime/lock_sema.c:263 +0x83\nruntime.MHeap_Scavenger()\n        c:/go/root/src/pkg/runtime/mheap.c:531 +0xac\nruntime.goexit()\n        c:/go/root/src/pkg/runtime/proc.c:1438\ncreated by runtime.main\n        c:/go/root/src/pkg/runtime/proc.c:191\n\ngoroutine 18 [runnable]:\nruntime.gosched()\n        c:/go/root/src/pkg/runtime/proc.c:1412 +0x2a\nbgsweep()\n        c:/go/root/src/pkg/runtime/mgc0.c:1903 +0x46\nruntime.goexit()\n        c:/go/root/src/pkg/runtime/proc.c:1438\ncreated by runtime.gc\n        c:/go/root/src/pkg/runtime/mgc0.c:2187\n\nIt looks like stack is suddenly empty. How can that be? And why it only happens on\nwindows? The only windows difference I can think of, is StackSystem (extra room for\nwindows exception handler code)? Is it possible that some of our new code does not\naccount for that? Another possibility is memory corruption? I'm stumped. Looking for\nsuggestions.\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-02-17T01:04:41Z",
	"updated_at": "2014-12-22T06:32:38Z"
}
