{
	"id": 51278254,
	"number": 1751,
	"state": "closed",
	"title": "html tokenizer tries (and fails) tokenizing CDATA sections if they contain 'tags'.",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\nTry to tokenize valid HTML where CDATA section contains 'tags'\n\nWhat is the expected output?\nNo tokenization inside CDATA section is done.\nSee\n\u003ca href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#cdata-section-state\"\u003ehttp://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#cdata-section-state\u003c/a\u003e\n\nWhat do you see instead?\nhtml.Tokenizer will report \u0026lt;x\u0026gt; from \u0026quot;\u0026lt;![CDATA[ \u0026lt;x\u0026gt; ]]\u0026gt;\u0026quot;\n\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n8g\n\nWhich operating system are you using?\nWindows 7\n\nWhich revision are you using?  (hg identify)\ngowin32_2011-03-07.1 (unsure which hg revision really)\n\nPlease provide any additional information below.\n\nThis bug is related to 1661 where javascript code gets missparsed.\n\u003ca href=\"https://golang.org/issue/1661\"\u003eissue #1661\u003c/a\u003e would vanish for javascript which is properly enclosed\nin a CDATA section if this bug would be solved.\n\nSimple bug-triggering demo attached\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/1751/0/bug.go\"\u003ebug.go\u003c/a\u003e (415 bytes)",
	"user": {
		"login": "vdobler",
		"id": 701382,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:09:44Z",
	"created_at": "2011-04-29T12:08:04Z",
	"updated_at": "2016-06-24T19:28:15Z"
}
