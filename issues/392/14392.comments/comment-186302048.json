{
	"id": 186302048,
	"body": "If you want to change errors you can implement your own ResponseWriter and\nintercept them before calling Write().\nOn Fri, Feb 19, 2016 at 8:11 AM Tim Heckman \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e Confirmed. This ended up being a bug in the go-chef project. The Chef\n\u003e server didn't end up needing the header itself, as was confirmed above.\n\u003e\n\u003e The implementation appears to be accidentally including the header with\n\u003e the request. Normally, there isn't any harm in doing so as I'm not sure of\n\u003e any other servers that outright reject requests if there is a space in the\n\u003e header.\n\u003e\n\u003e So we're down to zero cases. I think that may be the sign that this issue\n\u003e isn't important. The Chef issue was just my example. I still think that\n\u003e this failure should not be abstracted away from consumers, as they should\n\u003e have the final say on the request (as well as the error page that gets\n\u003e returned by the server). This just stems from two desires:\n\u003e\n\u003e    - I'd like to be able to provide custom error pages, when possible,\n\u003e    that is in a format expected by the consumer (e.g., people consuming JSON\n\u003e    that check for an \"error\" key in the response). In its current\n\u003e    implementation they would get text/plain I believe.\n\u003e    - I still don't like the idea of the HTTP client, that all other\n\u003e    clients will seemingly be built on, enforcing this behavior without\n\u003e    consumers being able to control any aspect of it. Then again, in that case\n\u003e    I guess you just vendor net/http and update it on every Go release.\n\u003e\n\u003e Seeing as I was the only reporter, and my issue was a problem that was\n\u003e actually an incidental bug, maybe we should just ignore this pending any\n\u003e further reports.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/14392#issuecomment-186280209\u003e.\n\u003e\n",
	"user": {
		"login": "elithrar",
		"id": 18544,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-19T16:56:29Z",
	"updated_at": "2016-02-19T16:56:29Z"
}
