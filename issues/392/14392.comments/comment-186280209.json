{
	"id": 186280209,
	"body": "Confirmed. This ended up being a bug in the `go-chef` project. The Chef server didn't end up needing the header itself, as was confirmed above.\r\n\r\nThe implementation appears to be accidentally including the header with the request. Normally, there isn't any harm in doing so as I'm not sure of any other servers that outright reject requests if there is a space in the header.\r\n\r\nSo we're down to zero cases. I think that may be the sign that this issue isn't important. The Chef issue was just my example. I still think that this failure should not be abstracted away from consumers, as they should have the final say on the request (as well as the error page that gets returned by the server). This just stems from two desires:\r\n\r\n* I'd like to be able to provide custom error pages, when possible, that is in a format expected by the consumer (e.g., people consuming JSON that check for an \"error\" key in the response). In its current implementation they would get `text/plain` I believe.\r\n* I still don't like the idea of the HTTP client, that all other clients will seemingly be built on, enforcing this behavior without consumers being able to control any aspect of it. Then again, in that case I guess you just vendor `net/http` and update it on every Go release.\r\n\r\nSeeing as I was the only reporter, and my issue was a problem that was actually an incidental bug, maybe we should just ignore this pending any further reports.",
	"user": {
		"login": "theckman",
		"id": 787332,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-19T16:10:35Z",
	"updated_at": "2016-02-19T16:10:35Z"
}
