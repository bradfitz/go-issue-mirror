{
	"id": 103798578,
	"number": 12392,
	"state": "closed",
	"title": "go/types: cannot import package with source code but no installed archive",
	"body": "Go version 1.5\r\n\r\n### Summary\r\n\r\nWe've run into some behavior we didn't expect from go/types importing packages. If a package `p` has been imported (by some other package) and its source code is present but not installed (that is, there is no package archive such as `$GOROOT/pkg/darwin_amd64/p.a`) then Check returns an error saying it can't find the package.\r\n\r\nWe're not sure if this is intended behavior, but we found it surprising.\r\n\r\ncc @tessr \r\n\r\nWe've tried to produce a minimal test case:\r\nhttps://github.com/kr/gotypesrepro\r\n\r\n### Steps to reproduce\r\n\r\n\t1. git clone https://github.com/kr/gotypesrepro $GOPATH/src/p\r\n\t2. cd $GOPATH/src/p\r\n\t3. go run try.go # fails\r\n\t4. go install p\r\n\t5. go run try.go # now it works\r\n\r\n### Expected output\r\n\r\n\tpackage testdata (\"testdata\")\r\n\tpackage testdata (\"testdata\")\r\n\r\n### Actual output\r\n\r\n\ttestdata/import.go:3:8: could not import p (can't find import: p)\r\n\tpackage testdata (\"testdata\")",
	"user": {
		"login": "kr",
		"id": 4178,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2015-08-28T22:43:59Z",
	"created_at": "2015-08-28T21:27:38Z",
	"updated_at": "2015-08-28T22:45:46Z"
}
