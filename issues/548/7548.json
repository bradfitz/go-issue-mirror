{
	"id": 51286863,
	"number": 7548,
	"state": "closed",
	"title": "cgo: forward declaration-only cairo_t breaks type conversion",
	"body": "\u003cpre\u003eWhat does 'go version' print?\ngo version devel +26aa53304a48 Fri Mar 07 16:08:12 2014 -0500 linux/amd64\n\nWhat steps reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\npackage main\n// #cgo pkg-config: cairo\n// #include \u0026lt;cairo/cairo.h\u0026gt;\nimport \u0026quot;C\u0026quot;\n//export test\nfunc test(x *C.cairo_t) {}\nfunc main() {}\n\nWhat happened?\nCOMPILER OUTPUT\n    # command-line-arguments\n    Go type not supported in export: [0]byte\n    Go type not supported in export: [0]byte\n...CGO1.GO FILE\n    func test(x *[0]byte,)  {}\n_CGO_EXPORT.H FILE\n    extern void test(int* p0);\n\nWhat should have happened instead?\nCOMPILER OUTPUT\n    [successful build]\n...CGO1.GO FILE\n    func test(x *_Ctype_cairo_t,)  {}\n_CGO_EXPORT.H FILE\n    extern void test(cairo_t* p0);\n\nPlease provide any additional information below.\nIn this case, cairo/cairo.h defines cairo_t as\n    typedef struct _cairo cairo_t;\nbut _cairo is never explicitly defined, which is possibly what is confusing cgo.\u003c/pre\u003e",
	"user": {
		"login": "andlabs",
		"id": 718242,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:41:56Z",
	"created_at": "2014-03-14T22:35:25Z",
	"updated_at": "2016-06-25T01:29:52Z"
}
