{
	"id": 66009058,
	"number": 10319,
	"state": "closed",
	"title": "regexp: crash in new backtrack engine",
	"body": "\tpanic: runtime error: index out of range [recovered]\r\n\t\tpanic: runtime error: index out of range\r\n\t\r\n\tgoroutine 9 [running]:\r\n\tregexp.(*machine).backtrack(0xc2085c4ea0, 0xac7ce0, 0xc2085c4f78, 0x0, 0x2b26, 0x0, 0x4b2fc0)\r\n\t\t/Users/rsc/g/go/src/regexp/backtrack.go:343 +0x394\r\n\tregexp.(*Regexp).doExecute(0xc208085040, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc208a1e000, 0x2b26, 0x0, 0x0, ...)\r\n\t\t/Users/rsc/g/go/src/regexp/exec.go:449 +0x413\r\n\tregexp.(*Regexp).MatchString(0xc208085040, 0xc208a1e000, 0x2b26, 0x3e00)\r\n\t\t/Users/rsc/g/go/src/regexp/regexp.go:406 +0xc8\r\n\tmain.(*builder).processOutput(0xc20846afc0, 0xc2086a0000, 0x2b26, 0x3e00, 0x0, 0x0)\r\n\t\t/Users/rsc/g/go/src/cmd/go/build.go:1426 +0x146\r\n\tmain.(*builder).build(0xc20846afc0, 0xc208552c30, 0x0, 0x0)\r\n\t\t/Users/rsc/g/go/src/cmd/go/build.go:972 +0x25f6\r\n\tmain.(*builder).do.func1(0xc208552c30)\r\n\t\t/Users/rsc/g/go/src/cmd/go/build.go:737 +0x3a8\r\n\tmain.(*builder).do.func2(0xc2087b2940, 0xc20846afc0, 0xc2087b2920)\r\n\t\t/Users/rsc/g/go/src/cmd/go/build.go:794 +0x155\r\n\tcreated by main.(*builder).do\r\n\t\t/Users/rsc/g/go/src/cmd/go/build.go:800 +0x49f\r\n\r\nThe line in question is \r\n\r\n\tb.cap[0] = pos\r\n\r\nI extracted the specific regexp and input that caused this but in the obvious 1-line program there is no crash. This suggests there is something bad in the caching of machines. I don't have a simple program to provoke this, but maybe that's enough information anyway.",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 9,
	"closed_at": "2015-04-17T17:12:13Z",
	"created_at": "2015-04-02T20:49:25Z",
	"updated_at": "2016-06-25T02:04:34Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
