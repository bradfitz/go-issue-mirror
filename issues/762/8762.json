{
	"id": 51288658,
	"number": 8762,
	"state": "open",
	"title": "html/template: provide a way to specify the initial escaping context (JS or CSS) when parsing",
	"body": "\u003cpre\u003eThere is currently no way (that I am aware of) to specify the initial escaping context\n(JS or CSS, or other?) when parsing a template using html/template.\n\nThe use case where this would be useful is when treating JS or CSS files as templates. \nIn these cases, it would seem to make sense to be able to call Template.Parse() with an\ninitial escaping context, telling it to treat this as a JS (or other) file.  Some\nexample use cases for treating JS or CSS files as templates are to inject translated\ntext into them (JS), or dynamically inlining images as data urls (CSS).\n\nTo work around this using the current system, you get something like this:\n\u003ca href=\"http://play.golang.org/p/J-21ux0gLE\"\u003ehttp://play.golang.org/p/J-21ux0gLE\u003c/a\u003e\n\nAs you can see, having this as a template:\n\n //\u0026lt;script\u0026gt;\n (function(){console.log(\u0026quot;hello\u0026quot;)})()\n {{jsraw \u0026quot;//\u0026quot;}}\u0026lt;/script\u0026gt;\n\nis rather crufty.\n\nIt would make much more sense to lose the script tag trickery and instead when we parse,\ndo something like this:\n\n t, err := t.Parse(jsInput, template.TypeJS)\u003c/pre\u003e",
	"user": {
		"login": "bradleypeabody",
		"id": 3239710,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"created_at": "2014-09-17T17:43:54Z",
	"updated_at": "2015-04-14T19:45:24Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
