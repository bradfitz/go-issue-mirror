{
	"id": 66050271,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eI have verified that closing r.Body.Close() fixes the \"leak\".\nEventually the garbage collector will close these too, but\nfor now this is working as intended.  Here's a leak-free program:\n\npackage main\n\nimport (\n\t\"http\"\n\t\"time\"\n)\n\nfunc main() {\n\tfor {\n\t\tprintln(\"getting facebook\")\n\t\tr, _, _ := http.Get(\"\u003ca href=\"http://www.facebook.com/\"\u003ehttp://www.facebook.com/\u003c/a\u003e\")\n\t\tif r != nil \u0026\u0026 r.Body != nil {\n\t\t\tr.Body.Close()\n\t\t}\n\t\ttime.Sleep(1e9)\n\t}\n}\u003c/pre\u003e\n\n\n_Owner changed to **r...@golang.org**._\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-01-27T00:21:39Z",
	"updated_at": "2014-12-08T10:05:02Z"
}
