{
	"id": 51276201,
	"number": 224,
	"state": "closed",
	"title": "use of C99 extensions in source code precludes Windows port",
	"body": "by **hrydgard**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. Try to compile various parts of the source, such as cmd/gc/reflect.c \nusing MSVC\n\nWhat is the expected output? What do you see instead?\n\nExpected: No errors, like most of the c source files (a windows port of the \nplan9-ish stuff, excluding PE generation and runtime, does not seem to be \nvery hard)\n\nI see instead: error C2059: syntax error: '['\n\nWhat is your $GOOS?  $GOARCH?\nwin32, 386\n\nWhich revision are you sync'ed to?  (hg log -l 1)\nlatest 4015:cb140bac9ab0\n\nPlease provide any additional information below.\n\nSince Go is so awesome, I've started an attempt to port it to Windows, and \nam now blocked (well, slowed down) by this issue. In several places in the \ncode, such as in reflect.c and the generated optypes.h, the following \nnonstandard idiom is used:\n\nstatic char*\nstructnames[] =\n{\n\t[TINT]\t\t= \u0026quot;*runtime.IntType\u0026quot;,\n\t[TUINT]\t\t= \u0026quot;*runtime.UintType\u0026quot;,\n\t[TINT8]\t\t= \u0026quot;*runtime.Int8Type\u0026quot;,\n...\n}\n\nAs far as I know, this type of array initialization is not part of the C \nstandard and is not implemented by any other compilers than GCC (I might be \nwrong here, but MSVC doesn't implement it, for sure).\n\nI propose that instead an initialization function is used, like this:\n\nstatic const char* structnames[NTYPE];\n\nvoid init_structnames() {\n\tstructnames[TINT] = \u0026quot;*runtime.IntType\u0026quot;;\n\tstructnames[TUINT] = \u0026quot;*runtime.UintType\u0026quot;;\n...\n}\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2014-12-08T10:03:43Z",
	"created_at": "2009-11-16T11:08:46Z",
	"updated_at": "2016-06-24T19:05:10Z"
}
