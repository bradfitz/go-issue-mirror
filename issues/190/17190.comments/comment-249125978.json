{
	"id": 249125978,
	"body": "Currently I don't know how to strip my complex networking code to minimal working example.\r\nI'm tried to comment out throw() call at symtab.go:472 (func pcvalue) and got a bit more info in new trace:\r\n\r\n```go\r\nruntime: invalid pc-encoded table f=runtime.needm pc=0x499898 targetpc=0x49989f tab=[0/0]0x0\r\n        value=56 until pc=0x499898\r\nruntime: invalid pc-encoded table f=runtime.needm pc=0x499898 targetpc=0x49989f tab=[0/0]0x0\r\n        value=1342 until pc=0x49975e\r\n        value=1343 until pc=0x499778\r\n        value=1354 until pc=0x49978b\r\n        value=1363 until pc=0x49979e\r\n        value=1364 until pc=0x4997bc\r\n        value=1372 until pc=0x4997ca\r\n        value=1373 until pc=0x4997cf\r\n        value=1380 until pc=0x4997e0\r\n        value=1381 until pc=0x4997ee\r\n        value=1342 until pc=0x4997f3\r\n        value=1382 until pc=0x499810\r\n        value=1342 until pc=0x499815\r\n        value=1383 until pc=0x499832\r\n        value=1384 until pc=0x49983c\r\n        value=1387 until pc=0x499841\r\n        value=1388 until pc=0x499846\r\n        value=1389 until pc=0x499850\r\n        value=1346 until pc=0x499880\r\n        value=1347 until pc=0x49988c\r\n        value=1354 until pc=0x499891\r\n        value=1346 until pc=0x499898\r\n==================\r\nWARNING: DATA RACE\r\nRead at 0x00c42001e158 by goroutine 28:\r\n  main.(*Ctl).reportAll()\r\n      /home/go/src/mophon/ctl.go:100 +0xf4\r\n  main.(*Ctl).worker.func1()\r\n      /home/go/src/mophon/ctl.go:154 +0x8e7\r\n\r\nPrevious write at 0x00c42001e158 by goroutine 2:\r\n  main.onRegState()\r\n      /home/go/src/mophon/pjsip.go:140 +0x554\r\n  main._cgoexpwrap_a6764208b0c4_onRegState()\r\n      ??:0 +0x40\r\n\r\nGoroutine 28 (running) created at:\r\n  main.(*Ctl).worker()\r\n      /home/go/src/mophon/ctl.go:187 +0xa2a\r\n  main.(*Program).Start.func1.2()\r\n      /home/go/src/mophon/main.go:205 +0x170\r\n\r\nGoroutine 2 (running) created at:\r\n  runtime.needm()\r\n      ?@ACDFILMNPSTUZ[\"\\ [some binary garbage from memory skipped]\r\n```\r\n\r\nAccording to it, I have race-condition between Go code working in goroutine (ctl.go) and Go code called as callback from one of threads in C-library (pjsip.go), but race-detector can't get some info to show stacktraces. External library is not stripped.\r\nAfter eliminating this race-condition app stop crashing.",
	"user": {
		"login": "sisoftrg",
		"id": 492146,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-23T07:51:52Z",
	"updated_at": "2016-09-23T07:51:52Z"
}
