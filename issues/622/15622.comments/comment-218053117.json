{
	"id": 218053117,
	"body": "I spent some time analyzing `clegg.tiff`, here's a histogram of the backwards references clustered by backwards distance and backwards copy length.\r\n\r\n```\r\nLengths:           go1.6   go.tip\r\n\t1..1:          0       0\r\n\t2..2:          0       0\r\n\t3..3:          96798   0\r\n\t4..4:          19939   19534\r\n\t5..5:          3708    3683\r\n\t6..6:          19950   19349\r\n\t7..7:          4116    4691\r\n\t8..11:         2464    2557\r\n\t12..15:        874     873\r\n\t16..23:        157     162\r\n\t24..31:        17      18\r\n\t32..47:        5       6\r\n\t48..63:        44      44\r\n\t64..95:        46      46\r\n\t96..127:       57      57\r\n\t128..191:      7       5\r\n\t192..255:      313     315\r\n\t256..383:      4348    4348\r\n\r\nDistances:\r\n\t1..1:          261     258\r\n\t2..2:          1       1\r\n\t3..3:          135100  38991\r\n\t4..4:          4       1\r\n\t5..5:          0       0\r\n\t6..6:          0       0\r\n\t7..7:          1       0\r\n\t8..11:         51      0\r\n\t12..15:        516     400\r\n\t16..23:        344     267\r\n\t24..31:        409     299\r\n\t32..47:        407     319\r\n\t48..63:        345     288\r\n\t64..95:        282     246\r\n\t96..127:       188     171\r\n\t128..191:      213     176\r\n\t192..255:      117     94\r\n\t256..383:      153     130\r\n\t384..511:      83      69\r\n\t512..767:      193     164\r\n\t768..1023:     186     160\r\n\t1024..1535:    373     305\r\n\t1536..2047:    348     301\r\n\t2048..3071:    7809    7502\r\n\t3072..4095:    168     126\r\n\t4096..6143:    70      70\r\n\t6144..8191:    1302    1267\r\n\t8192..12287:   858     873\r\n\t12288..16383:  498     516\r\n\t16384..24575:  1590    1674\r\n\t24576..32767:  973     1020\r\n```\r\n\r\nIt seems that the ratio hit occurs because the new hash-chain algorithm only operates on 4-byte segments, rather than 3-byte segments. This tends to be pathological for bitmap-based images, which represent a pixel as a tuple of 3 bytes for (R, G, B). This explains why there is such a large number of {Length:3, Distance:3} references in go1.6 that cannot be generated in go.tip.\r\n\r\nGiven the dramatic increase in performance using 4-byte hashing, I support keeping 4-byte hashing even if it causes some inputs to suffer (especially RGB based images, and possibly other inputs).\r\n\r\n@nigeltao, your thoughts?",
	"user": {
		"login": "dsnet",
		"id": 6354026,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	},
	"created_at": "2016-05-10T03:55:31Z",
	"updated_at": "2016-05-10T04:11:58Z"
}
