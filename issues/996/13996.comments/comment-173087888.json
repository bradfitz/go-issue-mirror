{
	"id": 173087888,
	"body": "It definitely does seem like a bug. \r\n\r\nLooking at the history, it seems like it's been like this since the day I joined the project May 5, 2010 (git rev 954ea535):\r\n\r\nHere's the code at that time:\r\n\r\nhttps://github.com/golang/go/blob/954ea53582eaff84a560b12ce880d084d7ea428f/src/pkg/http/fs.go\r\n\r\n```go\r\n// ServeFile replies to the request with the contents of the named file or directory.\r\nfunc ServeFile(c *Conn, r *Request, name string) {\r\n\tserveFileInternal(c, r, name, false)\r\n}\r\n\r\nfunc serveFileInternal(c *Conn, r *Request, name string, redirect bool) {\r\n\tconst indexPage = \"/index.html\"\r\n...\r\n}\r\n```\r\n\r\nIt has always passed false there. I don't know why.\r\n\r\nI remember I didn't like ServeFile at the time, but not because of how it handled directories, but how it assumed the local disk (os.Open) was the source of all content. I worked to get ServeContent added in git rev 4539d1f (#2039), but I don't think I've ever looked at ServeFile.\r\n\r\nIf I change ServeFile's false to true and re-run the net/http tests, there are failures:\r\n\r\n```\r\n--- FAIL: TestServeFile (0.00s)\r\n        fs_test.go:976: straight get: for URL \"http://127.0.0.1:55813\", send error: Get ..//: stopped after 10 redirects\r\n--- FAIL: TestServeFileContentType (0.00s)\r\n        fs_test.go:435: Get ..//?override=0: stopped after 10 redirects\r\n--- FAIL: TestServeFileMimeType (0.00s)\r\n        fs_test.go:455: Get ..//: stopped after 10 redirects\r\n--- FAIL: TestServeFileFromCWD (0.25s)\r\n        fs_test.go:472: Get ..//: stopped after 10 redirects\r\n--- FAIL: TestServeFileWithContentEncoding_h1 (0.00s)\r\n        fs_test.go:502: Get ..//: stopped after 10 redirects\r\n--- FAIL: TestServeFileWithContentEncoding_h2 (0.01s)\r\n        fs_test.go:502: Get ..//: stopped after 10 redirects\r\n```\r\n\r\nI haven't looked into why. We can investigate in the Go 1.7 dev cycle.\r\n\r\nFor my future self, to reproduce the original report:\r\n\r\n$ mkdir /tmp/foo\r\n$ mkdir /tmp/foo/dir\r\n$ echo A \u003e /tmp/foo/A\r\n$ echo B \u003e /tmp/foo/B\r\n$ echo DA \u003e /tmp/foo/dir/DA\r\n$ echo DB \u003e /tmp/foo/dir/DB\r\n\r\n```go\r\nfunc main() {\r\n        http.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {\r\n                http.ServeFile(w, r, filepath.Join(\"/tmp/foo\", r.URL.Path[1:]))\r\n        })\r\n        log.Fatal(http.ListenAndServe(\"0.0.0.0:8080\", nil))\r\n}\r\n```",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-20T04:56:34Z",
	"updated_at": "2016-01-20T04:56:34Z"
}
