{
	"id": 154727978,
	"number": 15673,
	"state": "closed",
	"title": "reflect: Type.Method returns nil Type and invalid Func",
	"body": "1. What version of Go are you using (`go version`)?\r\ngo version devel +be5782c Fri May 13 07:28:35 2016 +0000 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/reus\"\r\nGORACE=\"\"\r\nGOROOT=\"/home/reus/go\"\r\nGOTOOLDIR=\"/home/reus/go/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build351884329=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n3. What did you do?\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"reflect\"\r\n)\r\n\r\ntype Foo struct{}\r\n\r\nfunc (f *Foo) foo(arg struct{}) {}\r\nfunc (f *Foo) bar()             {}\r\n\r\nfunc main() {\r\n\tf := new(Foo)\r\n\tt := reflect.TypeOf(f)\r\n\tnMethods := t.NumMethod()\r\n\tfor i := 0; i \u003c nMethods; i++ {\r\n\t\tmethod := t.Method(i)\r\n\t\tfmt.Printf(\"%s %v %v\\n\", method.Name, method.Type, method.Func)\r\n\t}\r\n}\r\n```\r\n\r\n4. What did you expect to see?\r\nnon-nil Type and Func field\r\n\r\n5. What did you see instead?\r\n```\r\nbar unc(*main.Foo) 0x401000\r\nfoo \u003cnil\u003e \u003cinvalid reflect.Value\u003e\r\n```\r\n\r\n",
	"user": {
		"login": "reusee",
		"id": 398457,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"comments": 19,
	"closed_at": "2016-05-26T15:22:20Z",
	"created_at": "2016-05-13T14:42:32Z",
	"updated_at": "2016-05-26T15:22:20Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
