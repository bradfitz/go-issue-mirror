{
	"id": 221390710,
	"body": "@crawshaw \r\n\r\nIn #15673, @rsc said the following:\r\n\u003e When we talked about dropping this info I was assuming that NumMethod would return a smaller number, so that the unexported methods are completely invisible in the reflect info. Right now they are half-visible, which is kind of the worst of both worlds. Is it possible to make NumMethod and Method(i) only access exported methods while keeping the necessary unexported state around for interface satisfaction and reflect.Type.Implements?\r\n\r\nSeveral questions:\r\n1.) Although I personally agree with removing unexported methods from what the reflect package reports, isn't this a violation of the compatibility agreement? Yes, it wasn't particularly well documented which methods Method would report, but I'm certain some people depend on the ability to get access to unexported methods. Where is the discussion regarding the removal?\r\n2.) From Russ' comment, he mentions that \"unexported methods are [to be] completely invisible in the reflect info\". Currently, that is not the case since there are some situations where the unexported methods are visible (which means it is not *completely* invisible). Furthermore, the fact that a line regarding some seemingly unrelated type causes the unexported method to be visible seems to me to be very strange and surprising behavior.\r\n3.) From Russ' comment, he mentions that \"keeping the necessary unexported state around for interface satisfaction and reflect.Type.Implements\". Doesn't that mean that `reflect.Type.Implements` should still be working because it has information about the unexported methods, but not that `Method` or `NumMethod` should be reporting them?",
	"user": {
		"login": "dsnet",
		"id": 6354026,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-24T20:24:41Z",
	"updated_at": "2016-05-24T20:24:41Z"
}
