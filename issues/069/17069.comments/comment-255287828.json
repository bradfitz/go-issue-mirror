{
	"id": 255287828,
	"body": "These break down into:\n\n1. Functions that sound trivial but are actually complicated once you include the special cases they need to get right (Abs, Ceil, ...) or the complexity of the implementation (Cos, Sin, ...).\n\n2. Functions that can be written in Go and inline or should inline fine (Copysign, Float32bits, IsInf, IsNaN, ...).\n\n3. Functions that have trivial, correct, not-possible-to-write-in-Go assembly implementations (Sqrt).\n\nOnly category 3 is worth turning into an intrinsic, and then only when it is a demonstrated hotspot in a plausible real program. We waited for years until we found a real demonstration that the call overhead for Sqrt mattered, and then we added the intrinsic.\n\nIf any of category 2 shows up as a hotspot and isn't written in the best inlinable way, better to do that. The current Inf and NaN may be examples of that, but it would help to have a demonstration that the current performance is inadequate.\n\nI'm going to close this issue because it is so broad, but please feel free to open new specific ones for Inf, NaN, or any of the other specific cases, provided there's a plausible path to optimization and a plausible need.",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-21T03:55:31Z",
	"updated_at": "2016-10-21T03:55:31Z"
}
