{
	"id": 155535661,
	"body": "To be clear, this is about things like `typedmemmove`, not the regular write barrier, which runs on the system stack and hence is not preemptible.\r\n\r\nIt seems like the way to do this is to add a new \"go:nopreempt\" annotation that's like a recursive nosplit and replace nosplits with nopreempts where that's what we really mean. One sticking point may be functions that increment mp.locks or set mp.preemptoff that must not be preempted before this point, but can grow the stack once they've dynamically disallowed preemption. Maybe for these we just keep using nosplit.",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-10T19:15:05Z",
	"updated_at": "2015-11-10T19:15:05Z"
}
