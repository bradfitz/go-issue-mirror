{
	"id": 102103274,
	"number": 12225,
	"state": "closed",
	"title": "cmd/compile: internal compiler error: treecopy Name, when using go test -race",
	"body": "###### What version of Go are you using (go version)?\r\ngo version go1.5 darwin/amd64\r\n\r\n###### What operating system and processor architecture are you using?\r\nOS X 10.9.5, Intel\r\n\r\n###### What did you do?\r\nRun `go build -race` on this file:\r\n\r\n```go\r\npackage foo\r\n\r\nimport \"unsafe\"\r\n\r\nfunc ice() {\r\n\t_ = *(*int)(unsafe.Pointer(\u0026[]byte(\"\")[0]))\r\n}\r\n```\r\nIt doesn't matter what's passed to `[]byte(...)`, but it seems to matter that it be constructed from a string, not as a literal byte slice (i.e. not `[]byte{...}`).\r\n\r\n###### What did you expect to see?\r\nAt best a proper compiler error (although I'm not sure why this could be rejected by the compiler), otherwise a runtime crash.\r\n\r\n###### What did you see instead?\r\n```\r\n# command-line-arguments\r\ntreecopy [0x820b98ea0]\r\n.   INDREG-SP a(true) l(6) x(0+0) tc(1) PTR64-*[32]byte\r\nice.go:6: internal compiler error: treecopy Name\r\n```",
	"user": {
		"login": "tsuna",
		"id": 128281,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "RaceDetector"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"closed_at": "2015-11-19T19:55:21Z",
	"created_at": "2015-08-20T09:50:04Z",
	"updated_at": "2015-11-20T22:00:29Z",
	"milestone": {
		"id": 1295987,
		"number": 27,
		"title": "Go1.5.2"
	}
}
