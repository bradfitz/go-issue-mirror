{
	"id": 66057292,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4 by **kfmfe04**:\n\n\u003cpre\u003emy ugly workaround, for now, is to export time.setupZone() by turning it into\ntime.SetupZone(), so that whenever I do a os.Setenv( \"TZ\", ... ), I also call\ntime.SetupZone()\n\nnot pretty, but it seems to allow me to change time-zones\n\ndiff -r 9d7967223815 src/pkg/time/zoneinfo_unix.go\n--- a/src/pkg/time/zoneinfo_unix.go\tThu Jun 16 02:04:56 2011 -0400\n+++ b/src/pkg/time/zoneinfo_unix.go\tTue Jun 21 22:24:30 2011 +0800\n@@ -204,7 +204,7 @@\n var zones []zonetime\n var onceSetupZone sync.Once\n \n-func setupZone() {\n+func SetupZone() {\n \t// consult $TZ to find the time zone to use.\n \t// no $TZ means use the system default /etc/localtime.\n \t// $TZ=\"\" means use UTC.\n@@ -233,7 +233,7 @@\n \n // Look up the correct time zone (daylight savings or not) for the given unix time, in the current location.\n func lookupTimezone(sec int64) (zone string, offset int) {\n-\tonceSetupZone.Do(setupZone)\n+\tonceSetupZone.Do(SetupZone)\n \tif len(zones) == 0 {\n \t\treturn \"UTC\", 0\n \t}\n@@ -261,7 +261,7 @@\n // For a system in Sydney, \"EST\" and \"EDT\", though they have\n // different meanings than they do in New York.\n func lookupByName(name string) (off int, found bool) {\n-\tonceSetupZone.Do(setupZone)\n+\tonceSetupZone.Do(SetupZone)\n \tfor _, z := range zones {\n \t\tif name == z.zone.name {\n \t\t\treturn z.zone.utcoff, true\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-06-21T14:28:40Z",
	"updated_at": "2014-12-08T10:10:50Z"
}
