{
	"id": 66097868,
	"body": "\u003ca id=\"c7\"\u003e\u003c/a\u003eComment 7:\n\n\u003cpre\u003eHere's my two cents. First of all, SETEQ AH/BH/CH/DH is an illegal combination of the\ninstruction and the operand, no? It's not encodable in x86-64. I think we should just\nreject it. Besides that, I'd think we want to write something like SETEQ AX (or whatever\nthe generic name of a register) rather than SETEQ AL, just like we usually write MOVB AX\nrather than MOVB AL.\n\nThinking about that, it feels just fine to me if SETCC modifies only the least\nsignificant byte in the register. MOVB and such work that way, and the only way to know\nif an instruction works on a byte register is its instruction name. Usually B suffix\nimplies that, but I believe there are some exceptions. As long as the user remembers the\nSETCC instructions work on a byte register, it should be fine.\n\nIs your concern on the possible problems real? I mean, if the instructions are currently\nencoded into wrong byte sequences, I assume nobody is actually using it. If no one is\nusing it, do you have to worry about them?\u003c/pre\u003e",
	"user": {
		"login": "rui314",
		"id": 47400,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-08-19T19:19:24Z",
	"updated_at": "2014-12-08T10:47:29Z"
}
