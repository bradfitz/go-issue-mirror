{
	"id": 155612156,
	"number": 15736,
	"state": "open",
	"title": "cmd/go: add tracing to builds",
	"body": "In order to get insight into how cmd/go schedules work, I added the ability to generate a trace using the same viewer as cmd/trace. There is a screenshot and sample html output at #15734. It was generated using the command `go build -a -trace std.html std`. A partial implementation (doesn't trace downloads, test running, etc.) can be seen at [unstable url](https://github.com/josharian/go/commit/a5a9f7595338afbfd5f814956b17dc60e0bc586e).\r\n\r\nThis issue is to discuss whether this would be worth adding to cmd/go in 1.8.\r\n\r\nAdvantages:\r\n\r\n* Nice clean way to understand where the time goes\r\n* Could be useful for people to find slow-compiling packages, which they could then decompose (or file issues for!)\r\n* Could be useful for people to find compilation bottlenecks due to dependencies, which they could then choose to break\r\n\r\nDisadvantages:\r\n\r\n* Most helpful for people working on Go, not people using it\r\n* Might inspire people to do foolish things to break up packages or eliminate dependencies. For example, when I saw that compiling cmd/compile was significantly linear due to the dependency chain cmd/internal/obj/x86 -\u003e cmd/compile/internal/ssa -\u003e cmd/compile/internal/gc, I was immediately tempted to change the SSA rewrite rules to emit int literals (1234) rather than instruction codes (x86.AMOVL), to break that first dependency. Not a good idea.\r\n![trace_cmd_compile](https://cloud.githubusercontent.com/assets/67496/15376338/43fa3772-1d09-11e6-9fe3-8597e9756e9d.png)\r\n\r\n\r\nFeedback requested.\r\n\r\n\r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		},
		{
			"name": "ToolSpeed"
		}
	],
	"assignee": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"comments": 12,
	"created_at": "2016-05-18T22:03:22Z",
	"updated_at": "2016-10-20T17:59:40Z",
	"milestone": {
		"id": 2053058,
		"number": 49,
		"title": "Go1.9"
	},
	"reactions": {
		"total_count": 4,
		"+1": 4
	}
}
