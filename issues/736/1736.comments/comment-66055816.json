{
	"id": 66055816,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eHello\n\nHere's some code (admittedly a bit pathological) that crashes:\n\n\npackage main\n\nimport (\n\t\"os\"\n\t\"sync\"\n)\n\nfunc mkdir(wg *sync.WaitGroup) {\n\tif err := os.MkdirAll(\"foo\", 0777); err != nil {\n\t\tpanic(err)\n\t}\n\tos.RemoveAll(\"foo\")\n\twg.Done()\n}\n\nfunc main() {\n\tfor {\n\t\tvar wg sync.WaitGroup\n\t\tos.RemoveAll(\"foo\")\n\t\tfor i := 0; i \u0026lt; 2; i++ {\n\t\t\twg.Add(1)\n\t\t\tgo mkdir(\u0026wg)\n\t\t}\n\t\twg.Wait()\n\t}\n}\n\nWe saw this crash with two completely separate processes though, and I don't think it\neven involved a RemoveAll. However, it seems to be tricky to get the timing just right\nwith a single Go process. You might have to set GOMAXPROCS\u0026gt;1 to see the crash with\nthis one.\n\nRegards\n\nAlbert\u003c/pre\u003e",
	"user": {
		"login": "alberts",
		"id": 409689,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-04-26T07:26:55Z",
	"updated_at": "2014-12-22T05:55:25Z"
}
