{
	"id": 51284108,
	"number": 5736,
	"state": "closed",
	"title": "runtime: stack trace must handle adjusted-SP cases",
	"body": "\u003cpre\u003eThe stack frame walking code assumes that if pc == f-\u0026gt;entry, then SP has not been\npushed down to allocate a frame yet, and otherwise it has. This is true for all the\ncooperative preemption.\n\nBut a SIGPROF, which triggers a stack walk, can arrive at any time. The stack trace must\nbe able to handle a pc between f-\u0026gt;entry and the stack adjustment. Similarly, the\nstack trace must be able to handle the pc between the add of SP and the return.\n\nThe linker has this information and tells DWARF about it. Probably it has to tell the\nruntime too. \n\nPerhaps as part of the runtime symtab cleanup, but perhaps important enough to do before.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:31:24Z",
	"created_at": "2013-06-19T16:27:08Z",
	"updated_at": "2016-06-24T22:42:53Z"
}
