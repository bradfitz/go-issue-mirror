{
	"id": 185814124,
	"body": "I'm not sure I completely understand. I have a very similar looking problem but the solution here is not working for me (linux/amd64). I have a [project](https://github.com/bmatsuo/raft-mdb) that crashes during `go test`.\r\n\r\n```\r\nblueberry:~/src/github.com/bmatsuo/raft-mdb$ go test\r\n--- FAIL: TestMDB_Logs (0.00s)\r\npanic: runtime error: cgo argument has Go pointer to Go pointer [recovered]\r\n        panic: runtime error: cgo argument has Go pointer to Go pointer\r\n\r\ngoroutine 11 [running]:\r\npanic(0x896ec0, 0xc82000bc20)\r\n        /usr/lib/go/src/runtime/panic.go:464 +0x3e6\r\ntesting.tRunner.func1(0xc82007e6c0)\r\n        /usr/lib/go/src/testing/testing.go:467 +0x192\r\npanic(0x896ec0, 0xc82000bc20)\r\n        /usr/lib/go/src/runtime/panic.go:426 +0x4e9\r\ngithub.com/bmatsuo/lmdb-go/lmdb._cgoCheckPointer0(0x7d23c0, 0xc8200561e4, 0x0, 0x0, 0x0, 0xc82000bbc8)\r\n        ??:0 +0x4d\r\ngithub.com/bmatsuo/lmdb-go/lmdb.(*Txn).Put(0xc8200c1f20, 0xc800000002, 0xc82000bbc8, 0x8, 0x8, 0xc8200561e4, 0x1f, 0x40, 0x0, 0x0, ...)\r\n        /home/b/src/github.com/bmatsuo/lmdb-go/lmdb/txn.go:297 +0x19d\r\ngithub.com/bmatsuo/raft-mdb.(*MDBStore).StoreLogs.func1(0xc8200c1f20, 0x0, 0x0)\r\n        /home/b/src/github.com/bmatsuo/raft-mdb/mdb_store.go:180 +0x31d\r\ngithub.com/bmatsuo/lmdb-go/lmdb.(*Env).run(0xc82002a0f0, 0x489301, 0x0, 0xc82004bb90, 0x0, 0x0)\r\n        /home/b/src/github.com/bmatsuo/lmdb-go/lmdb/env.go:461 +0x16a\r\ngithub.com/bmatsuo/lmdb-go/lmdb.(*Env).Update(0xc82002a0f0, 0xc82004bb90, 0x0, 0x0)\r\n        /home/b/src/github.com/bmatsuo/lmdb-go/lmdb/env.go:437 +0x45\r\ngithub.com/bmatsuo/raft-mdb.(*MDBStore).StoreLogs(0xc820116630, 0xc82004bbf0, 0x1, 0x1, 0x0, 0x0)\r\n        /home/b/src/github.com/bmatsuo/raft-mdb/mdb_store.go:186 +0x63\r\ngithub.com/bmatsuo/raft-mdb.(*MDBStore).StoreLog(0xc820116630, 0xc820015c40, 0x0, 0x0)\r\n        /home/b/src/github.com/bmatsuo/raft-mdb/mdb_store.go:164 +0x84\r\ngithub.com/bmatsuo/raft-mdb.TestMDB_Logs(0xc82007e6c0)\r\n        /home/b/src/github.com/bmatsuo/raft-mdb/mdb_store_test.go:167 +0x944\r\ntesting.tRunner(0xc82007e6c0, 0xd85f40)\r\n        /usr/lib/go/src/testing/testing.go:473 +0x98\r\ncreated by testing.RunTests\r\n        /usr/lib/go/src/testing/testing.go:582 +0x892\r\nexit status 2\r\nFAIL    github.com/bmatsuo/raft-mdb     0.006s\r\n```\r\n\r\nThe problematic call is not even a direct call into C (mdb_store.go:180). It calls a method on *lmdb.Txn that will then call into C using an unsafe pointer from its `[]byte` arguments.\r\n\r\n```\r\ntxn.Put(m.dbLogs, key, val.Bytes(), 0)\r\n```\r\n\r\nAssigning a variable to val.Bytes() beforehand does not help, the panic still occurs\r\n\r\n```\r\nslice := val.Bytes()\r\ntxn.Put(m.dbLogs, key, slice, 0)\r\n```\r\n\r\nWhen I copy the bytes into a `[]byte` then I no longer see a panic.\r\n\r\n```\r\nsice := append([]byte(nil), val.Bytes()...)\r\ntxn.Put(m.dbLogs, key, slice, 0)\r\n```",
	"user": {
		"login": "bmatsuo",
		"id": 15089,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-18T16:55:53Z",
	"updated_at": "2016-02-18T16:55:53Z"
}
