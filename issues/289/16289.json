{
	"id": 164407897,
	"number": 16289,
	"state": "closed",
	"title": "cmd/compile: unused variable is not caught if it's assigned in a function closure",
	"body": "\r\n1. What version of Go are you using (`go version`)?\r\n\r\n```\r\ngo version go1.6.2 linux/amd64\r\n```\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"/home/songgao/gopath/bin\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/songgao/gopath\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/go\"\r\nGOTOOLDIR=\"/usr/lib/go/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n3. What did you do?\r\n\r\n```\r\nsonggao at Song-ThinkPad in /tmp \r\n$ cat main.go\r\npackage main\r\n\r\nfunc main() {\r\n\tvar a int\r\n\ta = 2\r\n}\r\n\r\nsonggao at Song-ThinkPad in /tmp \r\n$ go run main.go\r\n# command-line-arguments\r\n./main.go:4: a declared and not used\r\n\r\nsonggao at Song-ThinkPad in /tmp \r\n$ vim main.go\r\n\r\nsonggao at Song-ThinkPad in /tmp \r\n$ cat main.go\r\npackage main\r\n\r\nfunc main() {\r\n\tvar a int\r\n\tfunc() {\r\n\t\ta = 2\r\n\t}()\r\n}\r\n\r\nsonggao at Song-ThinkPad in /tmp \r\n$ go run main.go\r\n\r\nsonggao at Song-ThinkPad in /tmp \r\n$ echo $?\r\n0\r\n```\r\n\r\n4. What did you expect to see?\r\n\r\nThe declared but unused variable gets caught even if it's assigned in a function closure.\r\n\r\n5. What did you see instead?\r\n\r\nNot caught.\r\n\r\nP.S. Interestingly, the same error was successfully caught by `:GoRename` command (which uses `gorename`) in vim.\r\n",
	"user": {
		"login": "songgao",
		"id": 255797,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-07-07T22:31:02Z",
	"created_at": "2016-07-07T21:09:11Z",
	"updated_at": "2016-07-07T22:31:55Z",
	"milestone": {
		"id": 1748849,
		"number": 42,
		"title": "Go1.8Maybe"
	}
}
