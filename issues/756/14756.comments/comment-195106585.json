{
	"id": 195106585,
	"body": "Hi @minux,\r\n\r\nI definitely see your point. It is a specific type of marshaling that is certainly not global and thus not the correct place for a security boundary. For what it's worth, what you outlined as a solution is exactly what I attempted to describe with this:\r\n\r\n\u003e While there are options available such as a terminating struct inheriting from multiple structs, whereby the parent types are categorized by the nature of the data they include, this is not a scalable or even elegant solution.\r\n\r\nIt's also exactly what I ended up doing before I created Gofig and the notion of [a `SecureKey`](https://github.com/akutz/gofig/blob/master/gofig_reg.go#L36).\r\n\r\nI think your remark about relying on the JSON encoder as a security boundary is what really resonates with me though. I might be convinced to close the issue on my own as I have to agree, the JSON encoder simply isn't the place at which to implement something related to security.\r\n\r\nWhile I still think there's value in altering how a type's fields are marshaled based on this proposed notion of profiles, with respect to @bradfitz's comments earlier, I'm having a hard time justifying additional complexity for this feature in a vacuum without an immediate and/or broad use case.\r\n\r\nI'll close the issue. Thank you @bradfitz and @minux for providing quick and thoughtful feedback\r\n",
	"user": {
		"login": "akutz",
		"id": 101085,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-10T23:52:17Z",
	"updated_at": "2016-03-10T23:52:17Z"
}
