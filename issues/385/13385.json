{
	"id": 118658107,
	"number": 13385,
	"state": "open",
	"title": "crypto/tls: Disable CBC Ciphers by default",
	"body": "Per @agl on Twitter, the only way to be safe with Go and TLS if you are worried about Lucky13-style attacks is to disable CBC mode ciphers:\r\n\r\nhttps://twitter.com/agl__/status/669182140244824064\r\n\r\nCurrently none of the CBC ciphers are marked with `suiteDefaultOff`: https://github.com/golang/go/blob/master/src/crypto/tls/cipher_suites.go#L75-L95\r\n\r\n```\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\r\nTLS_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\r\nTLS_RSA_WITH_3DES_EDE_CBC_SHA\r\n```\r\n\r\nIt seems wrong for Go to have insecure defaults for a class of attacks that is becoming more well documented. If there is no willingness to implement countermeasures, shouldn't the vulnerable class of ciphers be disabled by default?\r\n",
	"user": {
		"login": "pquerna",
		"id": 110123,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Security"
		}
	],
	"assignee": {
		"login": "agl",
		"id": 21203,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"created_at": "2015-11-24T17:07:53Z",
	"updated_at": "2016-05-19T17:25:26Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
