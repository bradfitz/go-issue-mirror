{
	"id": 232962152,
	"body": "I like to authenticate local Unix connections inside the HTTP request handler ServeHTTP() with https://golang.org/pkg/syscall/#GetsockoptUcred and security context (#16374). ```syscall.GetsockoptUcred(int(fd), syscall.SOL_SOCKET, syscall.SO_PEERCRED)``` returns pid, uid and gid of the peer. The operating system ensures that these information are valid and correct.\r\n\r\nI'm currently porting some parts of a Python application to Go. Specifically a HTTP forwarder that accepts connections on a Unix socket file, authenticate the request with peer credentials and security context of the connection and then forwards the HTTP request to an upstream service. It was very easy to write the Unix socket listener and HTTP forwarder with Go -- until I hit this road block.",
	"user": {
		"login": "tiran",
		"id": 444071,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-15T14:15:22Z",
	"updated_at": "2016-07-15T14:15:22Z"
}
