{
	"id": 172679574,
	"body": "With the latest tip this seems to be working fine, unicode or not doesn't seem to be a problem anymore.\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"log\"\r\n    \"net/http\"\r\n)\r\n\r\nfunc main() {\r\n    http.HandleFunc(\"/中文字\", func(w http.ResponseWriter, r *http.Request) {\r\n        msg := fmt.Sprintf(\"Successful redirect. for method %s\", r.Method)\r\n        w.Write([]byte(msg))\r\n    })\r\n    http.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {\r\n        http.Redirect(w, r, \"http://localhost:8080/中文字\", 302)\r\n    })\r\n\r\n    log.Fatal(http.ListenAndServe(\":8080\", nil))\r\n}\r\n```\r\n\r\n```\r\n cat ~/bugs-golang/client.go\r\npackage main\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"net/http\"\r\n)\r\n\r\nfunc main() {\r\n\tclnt := \u0026http.Client{}\r\n\r\n\treq, err := http.NewRequest(\"GET\", \"http://localhost:8080/\", nil)\r\n\tif err != nil {\r\n\t\tlog.Fatalln(err)\r\n\t}\r\n\r\n\tresp, err := clnt.Do(req)\r\n\tif err != nil {\r\n\t\tlog.Fatalln(err)\r\n\t}\r\n\r\n\t// Write response.\r\n\tvar bufferGet bytes.Buffer\r\n\tresp.Write(\u0026bufferGet)\r\n\r\n\tfmt.Println(\"--- GET RESPONSE ---\")\r\n\tfmt.Println(string(bufferGet.Bytes()))\r\n\tfmt.Println(\"\")\r\n}\r\n\r\n$ go run ~/bugs-golang/client.go\r\n--- GET RESPONSE ---\r\nHTTP/1.1 200 OK\r\nContent-Length: 35\r\nContent-Type: text/plain; charset=utf-8\r\nDate: Mon, 18 Jan 2016 23:20:29 GMT\r\n\r\nSuccessful redirect. for method GET\r\n```\r\n\r\nWill just add a test case to make sure that its validated all the time. ",
	"user": {
		"login": "harshavardhana",
		"id": 622699,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-18T23:23:19Z",
	"updated_at": "2016-01-18T23:23:30Z"
}
