{
	"id": 51284271,
	"number": 5838,
	"state": "open",
	"title": "syscall: use posix_spawn (or vfork) for ForkExec when possible",
	"body": "\u003cpre\u003eWhy:\n\nAt a basic level posix_spawn(2) is a subset of fork(2). A new child process from\nfork(2): 1) gets an exact copy of everything that the parent process had in memory, and\n2) gets a copy of all the file descriptors that the parent process had open.\nposix_spawn(2) preserves #2, but not #1. In some cases, say, shelling out a command,\nit's unnecessary to get a copy of memory of the parent process. With copy-on-write, fork\nwill be less expensive but still, not necessary.\n\nWhat's out there:\n\n\u003ca href=\"https://github.com/rtomayko/posix-spawn#benchmarks\"\u003ehttps://github.com/rtomayko/posix-spawn#benchmarks\u003c/a\u003e\n\nI am wondering if it makes sense to have this API and let developers decide which one to\nuse (fork/exec vs. posix_spawn)\u003c/pre\u003e",
	"user": {
		"login": "jingweno",
		"id": 169064,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"comments": 34,
	"created_at": "2013-07-05T00:42:05Z",
	"updated_at": "2016-04-29T21:18:45Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	},
	"reactions": {
		"total_count": 2,
		"+1": 2
	}
}
