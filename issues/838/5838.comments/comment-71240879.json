{
	"id": 71240879,
	"body": "I took a short look.  On GNU/Linux posix_spawn is a C library function, not a system call.  vfork is a special case of clone: you pass the CLONE_VFORK flag.  This means that a program that cares can already use vfork on GNU/Linux, by setting the Cloneflags field in os/exec.Cmd.SysProcAttr or os.ProcAttr.Sys.  So while this would be nice to fix I don't see a pressing need.\r\n\r\nTo fix we need to edit syscall/exec_linux.go to pass CLONE_VFORK when that is safe.  It is pretty clearly safe if the only things the child needs to do after the fork is fiddle with file descriptors and call exec.  If that is the case, as can be determined by looking at the sys fields, then we could add CLONE_VFORK to the clone flags.  If somebody wants to try that out, that would be nice.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-01-23T18:34:42Z",
	"updated_at": "2015-01-23T18:34:42Z"
}
