{
	"id": 176028284,
	"number": 17039,
	"state": "open",
	"title": "cmd/compile: -ssa=0 generates incorrect code for append(s,s)",
	"body": "gc 1.6.2 generates incorrect linux/amd64 code for the following program: the final print statement prints the wrong answer.\r\n\r\n```\r\n% cat ~/a.go\r\npackage main\r\n\r\ntype S []S\r\n\r\nfunc main() {\r\n        var s S\r\n        println(s == nil) // \"true\"\r\n        s = append(s, s) // append a nil value to s\r\n        println(s[0] == nil) // \"false\" (!)\r\n}\r\n```\r\n\r\nFrom the assembly, it appears that the register r8, which holds the old value of s.ptr and is used in the s[0]==nil check, gets set to the the new value of s.ptr during the growslice operation.\r\n\r\nBy default, the tip gc generates completely different code that does not exhibit the problem, but with `-ssa=0` the same problem reoccurs (with r9).  See comments in listing below.\r\n\r\n```\r\n\"\".main t=1 size=335 args=0x0 locals=0x68\r\n...\r\n\t0x0021 00033 (a.go:7)\tMOVQ\t$0, AX\r\n\t0x0023 00035 (a.go:7)\tMOVQ\tAX, \"\".s+80(SP)\r\n\t0x0028 00040 (a.go:7)\tMOVQ\tAX, \"\".s+88(SP)\r\n\t0x002d 00045 (a.go:8)\tMOVQ\tAX, \"\".s+72(SP)\r\n\t0x0032 00050 (a.go:8)\tCMPQ\tAX, $0\r\n\t0x0036 00054 (a.go:8)\tSETEQ\t\"\".autotmp_0+71(SP)\r\n\t0x003b 00059 (a.go:8)\tPCDATA\t$0, $1\r\n\t0x003b 00059 (a.go:8)\tCALL\truntime.printlock(SB)\r\n\t0x0040 00064 (a.go:8)\tMOVBQZX\t\"\".autotmp_0+71(SP), BX\r\n\t0x0045 00069 (a.go:8)\tMOVB\tBL, (SP)\r\n\t0x0048 00072 (a.go:8)\tPCDATA\t$0, $1\r\n\t0x0048 00072 (a.go:8)\tCALL\truntime.printbool(SB)\r\n\t0x004d 00077 (a.go:8)\tPCDATA\t$0, $1\r\n\t0x004d 00077 (a.go:8)\tCALL\truntime.printnl(SB)\r\n\t0x0052 00082 (a.go:8)\tPCDATA\t$0, $1\r\n\t0x0052 00082 (a.go:8)\tCALL\truntime.printunlock(SB)\r\n\t0x0057 00087 (a.go:8)\tMOVQ\t\"\".s+72(SP), CX\r\n\t0x005c 00092 (a.go:8)\tMOVQ\t\"\".s+88(SP), DI\r\n\t0x0061 00097 (a.go:9)\tMOVQ\t\"\".s+80(SP), BX\r\n\t0x0066 00102 (a.go:9)\tMOVQ\tCX, R9   ;;; load old s.ptr into R9\r\n\t0x0069 00105 (a.go:9)\tMOVQ\tBX, AX\r\n\t0x006c 00108 (a.go:9)\tINCQ\tBX\r\n\t0x006f 00111 (a.go:9)\tCMPQ\tBX, DI\r\n\t0x0072 00114 (a.go:9)\tJHI\t$1, 260   ;;; uh oh, time to grow the slice\r\n\t0x0078 00120 (a.go:9)\tMOVQ\tBX, SI\r\n\t0x007b 00123 (a.go:9)\tMOVQ\tCX, BX\r\n\t0x007e 00126 (a.go:9)\tMOVQ\tAX, R8\r\n\t0x0081 00129 (a.go:9)\tIMULQ\t$24, R8\r\n\t0x0085 00133 (a.go:9)\tADDQ\tR8, BX\r\n\t0x0088 00136 (a.go:9)\tMOVQ\tSI, \"\".s+80(SP)\r\n\t0x008d 00141 (a.go:9)\tMOVQ\tSI, 8(BX)\r\n\t0x0091 00145 (a.go:9)\tMOVQ\tDI, \"\".s+88(SP)\r\n\t0x0096 00150 (a.go:9)\tMOVQ\tDI, 16(BX)\r\n\t0x009a 00154 (a.go:9)\tMOVQ\tR9, \"\".s+72(SP)\r\n\t0x009f 00159 (a.go:9)\tCMPB\truntime.writeBarrier(SB), $0\r\n\t0x00a6 00166 (a.go:9)\tJNE\t$0, 234\r\n\t0x00a8 00168 (a.go:9)\tMOVQ\tR9, (BX)    ;;; check s[0]==nil using new not old s.ptr\r\n\t0x00ab 00171 (a.go:10)\tCMPQ\tSI, $0\r\n\t0x00af 00175 (a.go:10)\tJLS\t$1, 227\r\n\t0x00b1 00177 (a.go:10)\tMOVQ\t(R9), R8\r\n\t0x00b4 00180 (a.go:10)\tCMPQ\tR8, $0\r\n\t0x00b8 00184 (a.go:10)\tSETEQ\t\"\".autotmp_1+71(SP)\r\n\t0x00bd 00189 (a.go:10)\tPCDATA\t$0, $0\r\n\t0x00bd 00189 (a.go:10)\tCALL\truntime.printlock(SB)\r\n\t0x00c2 00194 (a.go:10)\tMOVBQZX\t\"\".autotmp_1+71(SP), BX\r\n\t0x00c7 00199 (a.go:10)\tMOVB\tBL, (SP)\r\n\t0x00ca 00202 (a.go:10)\tPCDATA\t$0, $0\r\n\t0x00ca 00202 (a.go:10)\tCALL\truntime.printbool(SB)\r\n        ...\r\n\t0x00e2 00226 (a.go:12)\tRET\r\n\t...        \r\n\t0x0104 00260 (a.go:9)\tLEAQ\ttype.\"\".S(SB), R8\r\n\t0x010b 00267 (a.go:9)\tMOVQ\tR8, (SP)\r\n\t0x010f 00271 (a.go:9)\tMOVQ\tCX, 8(SP)\r\n\t0x0114 00276 (a.go:9)\tMOVQ\tAX, 16(SP)\r\n\t0x0119 00281 (a.go:9)\tMOVQ\tDI, 24(SP)\r\n\t0x011e 00286 (a.go:9)\tMOVQ\tBX, 32(SP)\r\n\t0x0123 00291 (a.go:9)\tPCDATA\t$0, $0\r\n\t0x0123 00291 (a.go:9)\tCALL\truntime.growslice(SB)\r\n\t0x0128 00296 (a.go:9)\tMOVQ\t40(SP), R9   ;;; update R9 with new, larger s.ptr\r\n\t0x012d 00301 (a.go:9)\tMOVQ\t48(SP), SI\r\n\t0x0132 00306 (a.go:9)\tMOVQ\t56(SP), DI\r\n\t0x0137 00311 (a.go:9)\tMOVQ\tSI, AX\r\n\t0x013a 00314 (a.go:9)\tINCQ\tSI\r\n\t0x013d 00317 (a.go:9)\tMOVQ\tR9, CX\r\n\t0x0140 00320 (a.go:9)\tJMP\t123\r\n```",
	"user": {
		"login": "alandonovan",
		"id": 8433140,
		"type": "User",
		"site_admin": false
	},
	"comments": 9,
	"created_at": "2016-09-09T14:49:30Z",
	"updated_at": "2016-09-09T17:40:17Z",
	"milestone": {
		"id": 1992436,
		"number": 46,
		"title": "Go1.7.2"
	}
}
