{
	"id": 66048507,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003eI understand why %+v doesn't chase pointers, I said so in the previous comment. \"makes\nsense, I saw the comment\" [ in the source code].\n\nHere is why \"%+v\" should be changed.\n\nThe short version:\nI just want to make it simpler. \"%+v\" always prints all fields with their names/keys and\nyou can't customize it, because it's mostly used for debugging. \n\nThe long version with some rationale:\nI view %+v as a debugging tool for the most part, I think that's how most programmers\nwill use it. If you have a complex nested data structures with no pointers, it will dump\nthe whole \nthing for you. Nice, that's what you want.\n\nIf you add customization through String methods and those String methods don't print all\nthe information in the data structures they are passed  (mine won't), then you have lost \nsomething and you can't get it back without removing the String() methods. I am planning\non making heavy use of String methods, but I still want to debug with %+v, but as it\nstands \nnow, I can't.\n\nA secondary issue is that the way  %+v works now, it prints the names of keys itself and\nthen calls the String methods to print the values. So it's only half customized and my \ncustomized value printing may not mesh well with the keys are printed.\n\nI agree this issue is  a bit of a nit and something of judgement call.\u003c/pre\u003e",
	"user": {
		"login": "tildeleb",
		"id": 834628,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2009-11-21T04:09:30Z",
	"updated_at": "2014-12-08T10:03:37Z"
}
