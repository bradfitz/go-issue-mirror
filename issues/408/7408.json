{
	"id": 51286661,
	"number": 7408,
	"state": "open",
	"title": "database/sql: Support for database, catalog, schema and table level metadata",
	"body": "by **glen.newton**:\n\n\u003cpre\u003edatabase/sql does not offer the ability to dynamically peruse databases, catalogs,\nschemas and tables and their underlying metadata at runtime. Without this, it is not\npossible to make, for example, a Go program that can copy arbitrary tables from a\ndatabase, by examining their metadata at runtime.\n\nWhat is needed is the equivalent of Java JDBC's DatabaseMetaData\n\u003ca href=\"http://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html\"\u003ehttp://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html\u003c/a\u003e\n\nWhile JDBC's DatabaseMetaData may seem be overkill, being able to examine a table's\nmetadata in the same manner as the table's data is attractive. In order to support rich\nand complex interactions with sql databases, emulating JDBC would not be a bad idea.\n\n\nAs an initial step however, I would suggest the following minimum extensions to the sql\npackage:\n\nfunc (db *DB) GetSchemas() (*Rows, error)\nJDBC equivalent \u0026amp; explanation:\n  ResultSet getSchemas()   \n  \u003ca href=\"http://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getSchemas%28%29\"\u003ehttp://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getSchemas%28%29\u003c/a\u003e\n\nfunc (db *DB) GetCatalogs() (*Rows, error)\nJDBC equivalent \u0026amp; explanation:\n  ResultSet \tgetCatalogs()\n  \u003ca href=\"http://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getCatalogs%28%29\"\u003ehttp://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getCatalogs%28%29\u003c/a\u003e\n\n\nfunc (db *DB) GetTables(catalog String, schemaPattern String, tableNamePattern String,\ntypes String[]) (*Rows, error)\nJDBC equivalent \u0026amp; explanation:\n  ResultSet \tgetTables(String catalog, String schemaPattern, String tableNamePattern, String[] types)\n  \u003ca href=\"http://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getTables%28java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String\"\u003ehttp://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getTables%28java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String\u003c/a\u003e[]%29\n\n\nfunc (db *DB) getColumns(catalog String, schemaPattern String, tableNamePattern String,\ncolumnNamePattern String) (*Rows, error)\nJDBC equivalent \u0026amp; explanation:\n  ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern)\n  \u003ca href=\"http://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getColumns%28java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String%29\"\u003ehttp://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getColumns%28java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String%29\u003c/a\u003e\n\nThe following are important and should also be considered:\ngetAttributes(...)\n\u003ca href=\"http://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getAttributes(java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String)\"\u003ehttp://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getAttributes(java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String)\u003c/a\u003e\n\ngetCrossReference(...)\n\u003ca href=\"http://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getCrossReference%28java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String%29\"\u003ehttp://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getCrossReference%28java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String%29\u003c/a\u003e\n\ngetIndexInfo(...)\n\u003ca href=\"http://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getIndexInfo(java.lang.String,%20java.lang.String,%20java.lang.String,%20boolean,%20boolean)\"\u003ehttp://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getIndexInfo(java.lang.String,%20java.lang.String,%20java.lang.String,%20boolean,%20boolean)\u003c/a\u003e\n\ngetPrimaryKeys(...)\n\u003ca href=\"http://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getPrimaryKeys(java.lang.String,%20java.lang.String,%20java.lang.String)\"\u003ehttp://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getPrimaryKeys(java.lang.String,%20java.lang.String,%20java.lang.String)\u003c/a\u003e\n\n\nI would also suggest that bug \u003ca href=\"https://golang.org/issue/5606\"\u003ehttps://golang.org/issue/5606\u003c/a\u003e be\nsolved in a similar and consistent fashion with something like\n\u003ca href=\"http://docs.oracle.com/javase/7/docs/api/java/sql/ResultSetMetaData.html\"\u003ehttp://docs.oracle.com/javase/7/docs/api/java/sql/ResultSetMetaData.html\u003c/a\u003e\n\nApologies for using Java as an example, but JDBC has done its homework and I think it\nrepresents best practices. How it maps into a Go context is of course to be debated and\nI am willing to accept that my very direct mapping suggestion may not be the best or the\nmost acceptable to the community.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"created_at": "2014-02-25T10:08:38Z",
	"updated_at": "2016-07-26T04:23:43Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
