{
	"id": 147884575,
	"body": "@augustoroman json.Marshaler specifically generates encoded json (you wouldn't wrap its output further, but rather just pass it through after validating).\r\n\r\nThe JSON package already validates the output of json.Marshaler implementations:\r\nhttp://play.golang.org/p/gLlXpswvV_\r\n\r\nIn this case, the validation would just ensure that it's a string, but otherwise pass it through.\r\n\r\nI do agree that the \"some but not others\" point does make it less than desirable, but for the same reason the proposal uses string kinds directly (compatibility), if we're ever going to allow json.Marshaler's and json.Unmarshaler's here, we should do so now, since we'd have to completely invert the normal precedence to maintain compatibility if we add it later (string -\u003e encoding.TextMarshaler -\u003e json.Marshaler).",
	"user": {
		"login": "extemporalgenome",
		"id": 536740,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-13T23:36:20Z",
	"updated_at": "2015-10-13T23:41:34Z"
}
