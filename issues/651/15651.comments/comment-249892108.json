{
	"id": 249892108,
	"body": "Recently the issue of version skew has made me question whether importers belong in the standard library at all.  Consider the moment at which a large Go customer switches from, say, Go 1.7 to Go 1.8.  The compiler starts producing object files and export data in the latest format, but any other tools used by that customer will still be using the Go 1.7 importer and will instantly break.  It is impossible to upgrade the whole ecosystem atomically; Google's tooling ecosystem involves many teams and complex release processes.\r\n\r\nThe solution to the version skew problem is to put the importer in a separate repo and to release it each time the file format evolves.  That way, the tip version of the importer in the weeks before the Go 1.8 release is capable of reading Go 1.7 and Go 1.8 files.  So long as the ecosystem is using this version of the library by the time of the release, everything just works.  This is what we are already doing by developing the importer in x/tools.\r\n\r\nThe API improvements are still a good idea, though.",
	"user": {
		"login": "alandonovan",
		"id": 8433140,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-27T15:03:55Z",
	"updated_at": "2016-09-27T15:03:55Z"
}
