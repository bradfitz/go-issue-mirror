{
	"id": 51281872,
	"number": 4255,
	"state": "closed",
	"title": "cmd/cgo: Go name for C typedefs is difficult to predict, and is undocumented",
	"body": "by **yargevad**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n\u003ca href=\"http://play.golang.org/p/QL9XPbC_wf\"\u003ehttp://play.golang.org/p/QL9XPbC_wf\u003c/a\u003e\n\nWhat is the expected output?\nSuccessful compilation\n\nWhat do you see instead?\ntimeval.go:14[...]: cannot use tv.Sec (type int64) as type\n_Ctype___darwin_time_t in assignment\ntimeval.go:15[...]: cannot use tv.Usec (type int32) as type\n_Ctype___darwin_suseconds_t in assignment\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nOSX 10.7.5\n\nWhich version are you using?  (run 'go version')\n$ go version\ngo version go1.0.3\n\nPlease provide any additional information below.\nThe example code provided is trivial and useless. That's the shortest way I know of to\nillustrate what I'm seeing, even though that same functionality is available using the\nsyscall package. I'm integrating against a C library that has functions that take\n'struct timeval's as parameters.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:22:38Z",
	"created_at": "2012-10-17T17:10:47Z",
	"updated_at": "2016-06-24T22:26:40Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
