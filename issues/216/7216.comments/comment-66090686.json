{
	"id": 66090686,
	"body": "\u003ca id=\"c13\"\u003e\u003c/a\u003eComment 13:\n\n\u003cpre\u003eAs andrew explained, we first made the decision in the design of io.Reader that\nit is allowed to not fill the buffer (btw, it's also the design of the read(2) syscall\nafter which io.Reader is modeled).\n\nGiven that, MultiReader's behavior is perfectly fine.\n\nIf you want to read the buffer full, use io.ReadFull, which saves a lot of trouble.\nAnd by looking at the source of io.ReadAtLeast you will find that actually filling\nthe buffer is difficult that what you think. Duplicate all that logic in MultiReader\ndoesn't make sense given ReadFull already implements it.\n\nHonestly, do you want to duplicate that logic in every io.Reader implementation\nyou write? Try take a look at the compress/* Readers and see why it's not\nfeasible to always fill the buffer passed in.\u003c/pre\u003e",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-01-28T04:05:51Z",
	"updated_at": "2014-12-08T10:40:06Z"
}
