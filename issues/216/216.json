{
	"id": 51276191,
	"number": 216,
	"state": "closed",
	"title": "sha1.Sum() gives different output when called more than one time",
	"body": "by **patla073**:\n\n\u003cpre\u003eHello, I've been using the sha1-package and I have encountered a strange \nbehaviour when calling sha1.Sum() on the same object more than one time.\n\nI do not have much experience with sha1, but this behaviour is inconsistent \nwith the hashlib from Python. I have put together two small programs to \nreproduce the output from go and the corresponding output from python.\n\nBest Regards.\nPatrik\n\n\nGo program:\n\n\n\npackage main\n\nimport \u0026quot;fmt\u0026quot;\nimport \u0026quot;strings\u0026quot;\nimport \u0026quot;crypto/sha1\u0026quot;\n\nfunc main() {\n\n\tteststring := \u0026quot;issue9\u0026quot;;\n\tthehash := sha1.New();\n\tthehash.Write(strings.Bytes(teststring));\n\tresult := thehash.Sum();\n\tfmt.Printf(\u0026quot;%d\\n\\n\u0026quot;, result);\n\tresult = thehash.Sum();\n\tfmt.Printf(\u0026quot;%d\\n\\n\u0026quot;, result);\n\n}\n\n\n\n\nCorresponding Python program:\n\nfrom hashlib import sha1\nfrom struct import unpack\n\nteststring = \u0026quot;issue9\u0026quot;\nthehash = sha1(teststring)\nresult = thehash.digest()\nprint unpack('%sB' % len(result), result)\nprint\nresult = thehash.digest()\nprint unpack('%sB' % len(result), result)\n\n\n\nGo output:\n\n%d([]uint8=[130 101 105 116 191 0 110 128 79 240 20 225 81 250 173 57 214 4 \n177 25])\n\n%d([]uint8=[6 217 191 209 66 212 123 60 34 155 125 43 70 214 99 211 197 240 \n134 1])\n\n\n\nPython output:\n\n(130, 101, 105, 116, 191, 0, 110, 128, 79, 240, 20, 225, 81, 250, 173, 57, \n214, 4, 177, 25)\n\n(130, 101, 105, 116, 191, 0, 110, 128, 79, 240, 20, 225, 81, 250, 173, 57, \n214, 4, 177, 25)\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:03:40Z",
	"created_at": "2009-11-16T03:36:43Z",
	"updated_at": "2016-06-24T19:05:04Z"
}
