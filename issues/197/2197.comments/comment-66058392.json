{
	"id": 66058392,
	"body": "\u003ca id=\"c8\"\u003e\u003c/a\u003eComment 8:\n\n\u003cpre\u003eIt seems to be quite tricky to implement w/o an additional slowdown for stack switch.\n\nWhat do you think about the following workaround?\nThere are some other cases when we discard SIGPROF, e.g. on external threads. So a user\nmay see a profile for Go program, while 95% of time is actually spent on external\nthreads. The user will try to optimize Go code, but it makes no sense.\nThe idea is to create fake functions like:\nstatic void ExternalThread(void) {}\nstatic void RuntimeScheduler(void) {}\nstatic void StackSwitch(void) {}\nThen, in SIGPROF handler if we encounter a case that we can not handle, create a fake\nstack with 1 entry pointing to one of the above functions. Then users at least will get\nsome idea of where the time is spent, and the profile will be more consistent with e.g.\nperf.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-05-23T07:25:42Z",
	"updated_at": "2014-12-08T10:11:49Z"
}
