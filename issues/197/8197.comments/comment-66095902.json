{
	"id": 66095902,
	"body": "\u003ca id=\"c22\"\u003e\u003c/a\u003eComment 22:\n\n\u003cpre\u003eBasically you want the kernel to provide a mapping for a small number of magic symbols\nto addresses that can be called at runtime.  In other words, you want to map a small\nnumber of indexes to addresses.  I can think of many different ways to handle that in\nthe kernel.  I don't think the first mechanism I would reach for would be for the kernel\nto create an in-memory shared library.  It's kind of a baroque mechanism for\nimplementing a simple table.\n\nIt's true that dynamically linked programs can use the ELF loader.  But the ELF loader\nneeded special changes to support VDSOs.  And so did gdb.  And this approach doesn't\nhelp statically linked programs much.  And glibc functions needed to be changed anyhow\nto be aware of the VDSO symbols.  So as far as I can tell, all of this complexity really\ndidn't get anything for free.  It just wound up being complex.\n\nAll just my opinion, of course.\u003c/pre\u003e",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-06-13T00:02:23Z",
	"updated_at": "2014-12-08T10:45:28Z"
}
