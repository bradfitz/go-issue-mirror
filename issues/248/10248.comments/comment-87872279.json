{
	"id": 87872279,
	"body": "Agreed as non-urgent.  Just needed to report as a pedant. :)\r\n\r\nA somewhat related super-pedantic issue would be that `\"/*foo*/\"` should arguably parse as `\" \"`, because the Go spec says comments don't nest, but not that they can't occur within string literals.\r\n\r\nJust for comparison, the C spec explicitly states \"Except within a character constant, a string literal, or a comment,\" for limiting when comment sequences can occur.\r\n\r\nAlso for comparison, in Java the handling of `\\uXXXX` Unicode escape sequences is the very first pass, and oblivious to tokenization rules.  So while `'\\\\n'` is an invalid character literal, `'\\u005cn'` is first converted to `'\\n'` which *is* valid.  (You can similarly even start end-of-line comments with `\\u002f\\u002f`.)  So there's *some* precedent for having translation passes before (and thus oblivious to) tokenization.",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-30T23:07:45Z",
	"updated_at": "2015-03-30T23:07:45Z"
}
