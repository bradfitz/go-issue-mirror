{
	"id": 149926727,
	"body": "@crawshaw while I submitted CL 16150, I don't consider it complete (I think there's a tag the Go team uses for this but I don't recall, this is my first CL). Specifically, testing needs a definitive target and not just whatever's installed on a developers machine as in the CL.\r\n\r\nThe test should enforce use of a specific build-tool version as a method of declaring the cmd's intended output compatibility.\r\n\r\nI considered the current test broken but there are useful bits that should remain describing the format. The comments of `skipByte` for example should be retained somehow though the actual map is no longer necessary.\r\n\r\nAs a frame of reference, I have the following build tool versions installed locally and did a byte compare of manifest output:\r\n\r\n```\r\n19.1.0  21.1.1  false\r\n19.1.0  21.1.2  false\r\n19.1.0  22.0.1  false\r\n19.1.0  23.0.1  false\r\n21.1.1  21.1.2  true\r\n21.1.1  22.0.1  true\r\n21.1.1  23.0.1  true\r\n21.1.2  22.0.1  true\r\n21.1.2  23.0.1  true\r\n22.0.1  23.0.1  true\r\n```\r\n\r\nAll resource identifiers that can not be extracted from gomobile's minimum target (api-9?) should be excluded currently. This concern is a separate issue with gomobile since resource identifiers are hard-coded but contain no information wrt the api level the identifier was introduced. This may lead to invalid manifests containing resource identifiers for an api level higher than the declared target api of a developers manifest. I'm unaware of the defined behaviour in such a case.\r\n\r\nThis should not affect `screenOrientation` but I will double check each identifier that I did add to see if they come after the minimum target, pending discussion.",
	"user": {
		"login": "dskinner",
		"id": 92266,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-21T15:08:56Z",
	"updated_at": "2015-10-21T15:09:37Z"
}
