{
	"id": 51288255,
	"number": 8474,
	"state": "open",
	"title": "cmd/compile: unnecessary zeroing of register on arm",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n\nfunc add64(a, b int) int {\n        x := a + b\n        return x\n}\n\nWhat is the expected output? What do you see instead?\n\nExpected (from 6g)\n\n\u0026quot;\u0026quot;.add64 t=1 size=32 value=0 args=0x18 locals=0x0\n        0x0000 00000 (/home/dfc/src/add64.go:3) TEXT    \u0026quot;\u0026quot;.add64+0(SB),4,$0-24\n        0x0000 00000 (/home/dfc/src/add64.go:3) NOP     ,\n        0x0000 00000 (/home/dfc/src/add64.go:3) NOP     ,\n        0x0000 00000 (/home/dfc/src/add64.go:3) FUNCDATA        $2,gclocals路f90cfd099b5ec2b453c391fece9d42bb+0(SB)\n        0x0000 00000 (/home/dfc/src/add64.go:3) FUNCDATA        $3,gclocals路3280bececceccd33cb74587feedb1f9f+0(SB)\n        0x0000 00000 (/home/dfc/src/add64.go:4) MOVQ    \u0026quot;\u0026quot;.a+8(FP),BX\n        0x0005 00005 (/home/dfc/src/add64.go:4) MOVQ    \u0026quot;\u0026quot;.b+16(FP),BP\n        0x000a 00010 (/home/dfc/src/add64.go:4) ADDQ    BP,BX\n        0x000d 00013 (/home/dfc/src/add64.go:5) MOVQ    BX,\u0026quot;\u0026quot;.~r2+24(FP)\n        0x0012 00018 (/home/dfc/src/add64.go:5) RET     ,\n\nBut got on 5g\n\n\u0026quot;\u0026quot;.add64 t=1 size=24 value=0 args=0xc locals=0x0 leaf\n        0x0000 00000 (/home/dfc/src/add64.go:3) TEXT    \u0026quot;\u0026quot;.add64+0(SB),16,$-4-12\n        0x0000 00000 (/home/dfc/src/add64.go:3) FUNCDATA        $2,gclocals路f90cfd099b5ec2b453c391fece9d42bb+0(SB)\n        0x0000 00000 (/home/dfc/src/add64.go:3) FUNCDATA        $3,gclocals路3280bececceccd33cb74587feedb1f9f+0(SB)\n        0x0000 00000 (/home/dfc/src/add64.go:3) MOVW    $0,R0\n        0x0004 00004 (/home/dfc/src/add64.go:4) MOVW    \u0026quot;\u0026quot;.a+0(FP),R0\n        0x0008 00008 (/home/dfc/src/add64.go:4) MOVW    \u0026quot;\u0026quot;.b+4(FP),R1\n        0x000c 00012 (/home/dfc/src/add64.go:4) ADD     R1,R0\n        0x0010 00016 (/home/dfc/src/add64.go:5) MOVW    R0,\u0026quot;\u0026quot;.~r2+8(FP)\n        0x0014 00020 (/home/dfc/src/add64.go:5) B       ,0(R14)\n\nNote the unnecessary zeroing of R0, which is then overwritten by the load of 0(FP)\n\nPlease use labels and text to provide additional information.\n\nlinux/arm\n\n% go version\ngo version devel +6b696a34e0af Sun Aug 03 15:14:59 2014 -0700 linux/arm\u003c/pre\u003e",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2014-08-05T11:40:46Z",
	"updated_at": "2015-06-08T06:32:31Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
