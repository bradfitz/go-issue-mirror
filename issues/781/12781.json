{
	"id": 108834057,
	"number": 12781,
	"state": "closed",
	"title": "net/http/httptest: http.Get succeed after Server.Close",
	"body": "After close a httptest.Server, the following request should failed, but sometimes it succeed.\r\nexample code: https://play.golang.org/p/IFv6BKjRgt\r\nmore simple one: https://play.golang.org/p/FcpbVEf_HI  (detect deadlock on play.golang.org, but hit \"unexpected get succeed\" on my server)\r\ngo version: go version go1.5.1 linux/amd64\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"net/http\"\r\n\t\"net/http/httptest\"\r\n)\r\n\r\nfunc main() {\r\n\r\n\tvar i int\r\n\tfor {\r\n\t\ti++\r\n\t\tfmt.Println(i)\r\n\t\tts := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\r\n\t\t}))\r\n\t\tresp, err := http.Get(ts.URL)\r\n\t\tif err != nil {\r\n\t\t\tfmt.Println(\"unexpected get failed\", err)\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tresp.Body.Close()\r\n\t\t\r\n\t\tts.Close()\r\n\t\t\r\n\t\tresp, err = http.Get(ts.URL)\r\n\t\tif err == nil {\r\n\t\t\tresp.Body.Close()\r\n\t\t\tfmt.Println(\"unexpected get succeed\")\r\n\t\t\tbreak\r\n\t\t}\r\n\t}\r\n}\r\n```",
	"user": {
		"login": "carter2000",
		"id": 1518851,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2015-10-20T00:07:37Z",
	"created_at": "2015-09-29T09:48:44Z",
	"updated_at": "2015-10-20T00:07:37Z"
}
