{
	"id": 51285673,
	"number": 6754,
	"state": "closed",
	"title": "compress/bzip2: Slow performance",
	"body": "\u003cpre\u003eWhen decompressing file data from a bz2 compressed file, Go is much slower than other\npopular languages' implementations.\n\nFor the simple sample program at \u003ca href=\"http://play.golang.org/p/e0N9J8fsvz\"\u003ehttp://play.golang.org/p/e0N9J8fsvz\u003c/a\u003e, I've incuded pprof\noutput for Go v 1.1 and 1.2rc2. The program walks a directory of BZ2 compressed text log\nfiles, opens the file and passes the reader to a function that performs an io.copy() to\nioutil.discard. The results are almost exactly the same when processing each text line\nfrom the reader with bufio.NewScanner().\n\nUsing large bufio readers or no bufio handling at all does not impact the overall\nperformance of the bzip2 functionality.\n\nThis test was conducted on 64bit Ubuntu Linux 13.10 using 64bit Go binaries. Go 1.2rc2\nwas downloaded directly from the Go site, whereas 1.1 was installed as an Ubuntu package.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/6754/0/bztest-1.2rc2-discard.txt\"\u003ebztest-1.2rc2-discard.txt\u003c/a\u003e (5862 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/6754/0/bztest-1.1-discard.txt\"\u003ebztest-1.1-discard.txt\u003c/a\u003e (5859 bytes)",
	"user": {
		"login": "tomc603",
		"id": 5369163,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"comments": 16,
	"closed_at": "2015-08-28T04:21:11Z",
	"created_at": "2013-11-13T01:47:34Z",
	"updated_at": "2015-08-29T04:00:00Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
