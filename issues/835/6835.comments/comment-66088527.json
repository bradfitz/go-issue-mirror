{
	"id": 66088527,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eThe stack trace using the gc compiler is\n\n0: main.WhoCalledMe\n1: main.(*Inner).meth\n2: main.main\n3: runtime.main\n\nUsing gccgo it's\n\n0: main.WhoCalledMe\n1: main.meth.pN10_main.Inner\n2: main.meth.pN10_main.Outer\n3: main.main\n4: runtime_main\n\nSo, yes, the difference is that gccgo calls a method (*Outer).meth that gc apparently\ndoes not.  The gc compiler does create that method, but it doesn't call it from main.\n\nI'm not sure what to do about this.  The gccgo behaviour is not wrong.  It's just not\nthe same as the gc behaviour.  The gc behaviour is in effect a compiler optimization.\u003c/pre\u003e\n\n_Labels changed: added **priority-later**, removed **priority-triage**._\n\n\n_Status changed to **Thinking**._",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-11-27T22:46:58Z",
	"updated_at": "2014-12-08T10:38:00Z"
}
