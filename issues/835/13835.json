{
	"id": 125118347,
	"number": 13835,
	"state": "open",
	"title": "net: figure out IDNA Punycode story",
	"body": "(Fork of http://thread.gmane.org/gmane.comp.lang.go.devel/101215)\r\n\r\nnet/url and net/http say nothing about whose responsibility it is to map non-ASCII hostnames to/from Punycode.\r\n\r\nWhose is it?\r\n\r\nI was going to fix #13686 for Go 1.6 by vendoring the golang.org/x/net/idna package and using ToASCII when sending HTTP requests (when writing the Host header) in the HTTP client code.\r\n\r\nBut should I also use ToUnicode when reading Host lines in the HTTP server code? Or should I leave the url.URL.Host string in Punycode form?\r\n\r\n@nigeltao said:\r\n\r\n\u003e I don't know whose responsibility it is, but FWIW, the\r\n\u003e PublicSuffixList.PublicSuffix doc comment at the top of\r\n\u003e https://go.googlesource.com/go/+/master/src/net/http/cookiejar/jar.go\r\n\u003e also has a TODO to decide whose responsibility it is.\r\n\u003e\r\n\u003e Some canonicalization is also done by\r\n\u003e https://go.googlesource.com/go/+/master/src/net/http/cookiejar/punycode.go\r\n\u003e which is a copy/paste of the x/net/idna code. Or maybe x/net/idna is\r\n\u003e the copy/paste and net/http/cookiejar is the original. I forget.\r\n\r\nWe should figure this out for Go 1.7.\r\n\r\nShould net.Dial work on UTF-8 domain names?\r\n\r\nShould url.Parse decode them into URL.Host? Should URL.Host accept either UTF-8 or Punycode?\r\n\r\nShould Punycode be exposed in the stdlib?\r\n\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"created_at": "2016-01-06T06:12:27Z",
	"updated_at": "2016-05-05T16:08:10Z",
	"milestone": {
		"id": 1709364,
		"number": 39,
		"title": "Go1.8Early"
	}
}
