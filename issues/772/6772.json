{
	"id": 51285695,
	"number": 6772,
	"state": "open",
	"title": "cmd/compile: invalid for range loop executes w/o error message",
	"body": "\u003cpre\u003eThis program\n\n\u003ca href=\"http://play.golang.org/p/RXFJJh5KRw\"\u003ehttp://play.golang.org/p/RXFJJh5KRw\u003c/a\u003e\n\nreports an error as expected, albeit a confusing one. This is related to, or the same as\n\u003ca href=\"https://golang.org/issue/6764\"\u003eissue #6764\u003c/a\u003e.\n\nA short variable declaration in a for range loop can never redeclare an existing\nvariable because a for statement opens a new scope and thus there are no variables\ndeclared earlier in that scope. So there should be a double declaration error.\n\nInterestingly, adding an external declaration appears to \u0026quot;fix\u0026quot; the problem:\n\n\u003ca href=\"http://play.golang.org/p/4spddNy6Ki\"\u003ehttp://play.golang.org/p/4spddNy6Ki\u003c/a\u003e\n\nThe code compiles and runs without errors. Output:\n0\n1\n2\n3\n\nHere it looks like the short variable declaration actually was handled like a\nredeclaration of the outer a. Interestingly, value assigned to a is the index and not\nthe indexed element. Contrast this (and its output) to the following correct program:\n\n\u003ca href=\"http://play.golang.org/p/BWZD1fCWKj\"\u003ehttp://play.golang.org/p/BWZD1fCWKj\u003c/a\u003e\n\nOutput:\n1\n2\n3\n3\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"created_at": "2013-11-15T22:27:55Z",
	"updated_at": "2015-06-08T06:23:17Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
