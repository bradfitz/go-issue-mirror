{
	"id": 240641913,
	"body": "@zeebo That section starts with \"If p points into an allocated object\", which is referring to GC managed Go variables.  It's meant to allow pointer arithmetic within a variable, but not to limit us from adopting a moving garbage collector in the future.  (For example, you can't assume the distance between two different variables will remain the same.)  I don't think it's applicable here because in this case p points to unmapped memory.\r\n\r\nThat said, I do agree that this appears to be unspecified behavior.  I think the first option we should consider is how hard it is for applications to avoid relying on it.  It seems like slicing unmapped memory should be a relatively uncommon operation, whereas a simpler nil check benefits much more code.\r\n\r\nCould BoltDB be reasonably modified to avoid creating these problematic slices?",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-18T07:09:29Z",
	"updated_at": "2016-08-18T07:09:29Z"
}
