{
	"id": 51279477,
	"number": 2626,
	"state": "closed",
	"title": "encoding/xml: API cleanup",
	"body": "\u003cpre\u003eAlong with the field tag cleanup, it seems like encoding/xml might also want to\nstructure its API the same way that encoding/gob and encoding/json have before Go 1\ncomes out, so that we're not stuck with the current API.\n\nIn particular:\n\npackage xml\n\nfunc Marshal(v interface{}) ([]byte, error)\nfunc Indent(w io.WriteStringer, src []byte, pfx, ind string)\nfunc Unmarshal(data []byte, v interface{}) error\n\ntype Decoder struct {\n    // contains filtered or unexported fields\n}\nfunc NewDecoder(r io.Reader) *Decoder\nfunc (dec *Decoder) Decode(v interface{}) error\n\ntype Encoder struct {\n    // contains filtered or unexported fields\n}\nfunc NewEncoder(w io.Writer) *Encoder\nfunc (*Encoder) Encode\nfunc (enc *Encoder) Encode(v interface{}) error\n\ntype Marshaler interface {\n    MarshalXML() ([]byte, error)\n}\n\ntype Unmarshaler interface {\n    UnmarshalXML([]byte) (error)\n}\u003c/pre\u003e",
	"user": {
		"login": "kylelemons",
		"id": 322213,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 7,
	"closed_at": "2014-12-08T10:13:58Z",
	"created_at": "2011-12-28T02:06:11Z",
	"updated_at": "2016-06-24T21:22:33Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
