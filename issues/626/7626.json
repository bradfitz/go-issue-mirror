{
	"id": 51286987,
	"number": 7626,
	"state": "closed",
	"title": "cmd/ld: decide whether -X should overwrite initialized variables",
	"body": "by **Tarrant@justin.tv**:\n\n\u003cpre\u003eWhat does 'go version' print?\n\ngo version go1.2 darwin/amd64\n\nWhat steps reproduce the problem?\n\n1. Download the attached go program.\n2. Run the attached go program: `go run test.go`\n3. Run the attached go program: `go run -ldflags '-X main.Variable baz' test.go`\n\nWhat happened?\n\nWhen run without any ldflags you get the output one would expect 'foobar'.\n\nWhen run with ldflags you get the output 'baz'.\n\nWhat should have happened instead?\n\nThe documentation for ld (\u003ca href=\"http://golang.org/cmd/ld/)\"\u003ehttp://golang.org/cmd/ld/)\u003c/a\u003e indicates that the variable must be\nuninitialized.\n\nI personally (strongly) prefer the existing behavior. It allows setting defaults (like\n`Version = \u0026quot;development\u0026quot;`) that then get set to their proper value by build\nsystem. Ideally the documentation should be updated to remove the word\n\u0026quot;uninitialized\u0026quot;.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/7626/0/test.go\"\u003etest.go\u003c/a\u003e (97 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 9,
	"closed_at": "2014-12-08T10:42:23Z",
	"created_at": "2014-03-25T00:49:11Z",
	"updated_at": "2016-06-25T01:30:41Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
