{
	"id": 66050594,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eyerr.h is supposed to begin:\n\n// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Example-based syntax error messages.\n// See bisonerrors, Makefile, go.y.\n\nstatic struct {\n\tint yystate;\n\tint yychar;\n\tchar *msg;\n} yymsg[] = {\n\t// Each line of the form % token list\n\t// is converted by bisonerrors into the yystate and yychar caused\n\t// by that token list.\n\t\n\t76, ',',\n\t\"unexpected comma during import block\",\n\t\n\t479, ';',\n\t\"unexpected semicolon or newline before {\",\n\nbut in your case I expect that lines 17-18 say\n\n\t% loadsys package LIMPORT '(' LLITERAL import_package import_there ','\n\t\"unexpected comma during import block\",\n\nI don't know why it says that.  Perhaps you can help debug\nwhat is going on.  The awk script bisonerrors says\n\n# First // comment marks the beginning of the pattern file.\n/^\\/\\// { bison = 0; grammar = 0; state = 0 }\nbison { next }\n\n# Treat % as first field on line as introducing a pattern (token sequence).\n# Run it through the LR machine and print the induced \"yystate, yychar,\"\n# at the point where the error happens.\n$1 == \"%\" {\n\t... processing of % line here ...\n}\n\n{ print }\n\nWe know that the bison rule is not firing, because that would keep\nthe script from printing anything, and lines are being printed.\nSo the question is why $1 == \"%\" is not matching the % lines.\u003c/pre\u003e\n\n\n\n_Status changed to **WaitingForReply**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-02-26T06:48:59Z",
	"updated_at": "2014-12-08T10:05:18Z"
}
