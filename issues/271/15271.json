{
	"id": 147949316,
	"number": 15271,
	"state": "closed",
	"title": "cmd/vet: incorrect complaint about PEXTRD instruction",
	"body": "[This gist](https://gist.github.com/jacobsa/e1b3c19cae7fb430a8a03ee9b19b933a/2f6503331e58688cca059cd6fed77e6ccf89f436) contains a program that prints `123`. The value is generated by this assembly function:\r\n\r\n```\r\n// func foo() (x uint32)\r\nTEXT Â·foo(SB), NOSPLIT, $0-4\r\n\t// Stick 123 into the low 32 bits of X0.\r\n\tMOVQ $123, AX\r\n\tPINSRD $0, AX, X0\r\n\r\n\t// Return them.\r\n\tPEXTRD $0, X0, x+0(FP)\r\n\tRET\r\n```\r\n\r\nIndeed the program works correctly:\r\n\r\n```\r\n% go build -o /tmp/baz ./baz \u0026\u0026 /tmp/baz\r\n123\r\n```\r\n\r\nHowever, `go vet` is unhappy about the `PEXTRD` instruction:\r\n\r\n```\r\n% go vet ./baz\r\nbaz/baz.s:12: [amd64] foo: invalid PEXTRD of x+0(FP); uint32 is 4-byte value\r\nexit status 1\r\n```\r\n\r\nI don't understand what it's trying to tell me here. `PEXTRD` is supposed to operate on 4-byte values, as far as I understand it.\r\n\r\nI tried using `PEXTRL` instead, but the assembler says it doesn't exist. (I don't understand why sometimes I can use both `L`/`D`, e.g. `MOVL` and `MOVD`, and other times I can't.)\r\n\r\nI'm using Go 1.6 on linux/amd64.",
	"user": {
		"login": "jacobsa",
		"id": 202895,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"closed_at": "2016-04-14T17:59:23Z",
	"created_at": "2016-04-13T05:23:29Z",
	"updated_at": "2016-04-14T23:39:42Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
