{
	"id": 90335054,
	"number": 11350,
	"state": "closed",
	"title": "spec: non-integral constant can be converted to int",
	"body": "The program is:\r\n```go\r\npackage a\r\nconst a int = 1-1/1e100\r\nconst b int = 1-1/1e300\r\n```\r\ngotype rejects both assignments.\r\ngc rejects only the first one with \"constant 1 truncated to integer\", but accepts the second one.\r\n\r\nThe spec says:\r\n```\r\nThis rounding may cause a floating-point constant expression to be invalid in an integer context, even if it would be integral when calculated using infinite precision.\r\n```\r\nhttp://golang.org/ref/spec#Constant_expressions\r\nBut it does not say the opposite -- FP const may be valid in int context, even if it is not integral when calculated using infinite precision. I think it should say so.\r\n\r\nThe second point is that \"constant 1 truncated to integer\" error does not make sense.",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2015-06-23T22:19:51Z",
	"created_at": "2015-06-23T09:30:01Z",
	"updated_at": "2016-06-25T02:11:44Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
