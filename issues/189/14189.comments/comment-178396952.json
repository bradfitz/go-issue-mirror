{
	"id": 178396952,
	"body": "gctrace reports that you have 8 HW threads (GOMAXPROCS=8) and the GC is\nconstraining the heap to half a Gigabyte. Allowing the GC to grow the heap\nto fill available RAM may solve this problem.  Perhaps adjusting GOGC to\nGOGC=1600 and rerunning these numbers will help.\n\n\nOn Tue, Feb 2, 2016 at 12:25 AM, Todd Persen \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e This issue is a follow-up to a thread that started on the mailing list\n\u003e here:\n\u003e https://groups.google.com/forum/#!topic/golang-dev/sfwfQTu7eM4\n\u003e\n\u003e We recently reverted back to Go 1.4.3 for the most recent release of\n\u003e InfluxDB after testing against 1.5.x and collecting feedback from both our\n\u003e own benchmarks and the experiences of InfluxDB users. There were\n\u003e significant performance hits with both 1.5.x and 1.6beta1, across a variety\n\u003e of dimensions. For example, with write performance, we saw a 33% reduction\n\u003e in overall throughput, coupled with a 26% increase in average response\n\u003e time. We expected that the GC improvements would lead to a reduction in\n\u003e response times, but that hasn't proven to be the case. It's far from\n\u003e exhaustive, but here are the findings from a medium-scale write test:\n\u003e version points/sec response time\n\u003e Go 1.4.3 398,747 33.97ms\n\u003e Go 1.5.3 300,750 43.12ms\n\u003e Go 1.6rc1 315,545 39.44ms\n\u003e\n\u003e As requested in the mailing list thread, we ran the test with\n\u003e GODEBUG=gctrace=1 and recorded the output alongside our log messages for\n\u003e context. It doesn't look like the GC-specific lines should be too hard to\n\u003e grep out if our other log lines are too noisy.\n\u003e\n\u003e We also ran with cpuprofile and memprofile on, and collected the output.\n\u003e We've included results for these tests on all three versions of Go listed\n\u003e above, and provided the compiled binaries as well. You can find them in\n\u003e this Google Drive folder:\n\u003e https://drive.google.com/open?id=0B3YrTka8Ai_McUNCak1YSW9ZM28\n\u003e\n\u003e I hope this is enough information to assist in debugging the underlying\n\u003e issue. Definitely let me know if there are any other tests I can run to\n\u003e help. We're looking forward to getting to *better* performance than Go\n\u003e 1.4.3! [image: :boom:]\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/14189\u003e.\n\u003e\n",
	"user": {
		"login": "RLH",
		"id": 972447,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-02T06:23:02Z",
	"updated_at": "2016-02-02T06:23:02Z"
}
