{
	"id": 167141192,
	"number": 16475,
	"state": "closed",
	"title": "syscall: ParseUnixCredentials is unsafe",
	"body": "syscall.ParseUnixCredentials does not sufficiently validate its inputs to avoid crashes or returning uninitialized memory to the caller (via unsafe use of unsafe).\r\n\r\nCurrent code:\r\n```go\r\n// ParseUnixCredentials decodes a socket control message that contains\r\n// credentials in a Ucred structure. To receive such a message, the\r\n// SO_PASSCRED option must be enabled on the socket.\r\nfunc ParseUnixCredentials(m *SocketControlMessage) (*Ucred, error) {\r\n\tif m.Header.Level != SOL_SOCKET {\r\n\t\treturn nil, EINVAL\r\n\t}\r\n\tif m.Header.Type != SCM_CREDENTIALS {\r\n\t\treturn nil, EINVAL\r\n\t}\r\n\tucred := *(*Ucred)(unsafe.Pointer(\u0026m.Data[0]))\r\n\treturn \u0026ucred, nil\r\n}\r\n```\r\n\r\nThe Data field is blindly cast to a Ucred type without checking the length.\r\n\r\n\r\nCorrect code might look something like:\r\n```go\r\n// ParseUnixCredentials decodes a socket control message that contains\r\n// credentials in a Ucred structure. To receive such a message, the\r\n// SO_PASSCRED option must be enabled on the socket.\r\nfunc ParseUnixCredentials(m *SocketControlMessage) (*Ucred, error) {\r\n\tif m.Header.Level != SOL_SOCKET {\r\n\t\treturn nil, EINVAL\r\n\t}\r\n\tif m.Header.Type != SCM_CREDENTIALS {\r\n\t\treturn nil, EINVAL\r\n\t}\r\n\tif len(m.Data) \u003c SizeofUcred {\r\n\t\treturn nil, EINVAL\r\n\t}\r\n\tucred := *(*Ucred)(unsafe.Pointer(\u0026m.Data[0]))\r\n\treturn \u0026ucred, nil\r\n}\r\n```",
	"user": {
		"login": "iangudger",
		"id": 7056530,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-08-20T21:12:20Z",
	"created_at": "2016-07-22T22:03:50Z",
	"updated_at": "2016-08-20T21:12:20Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
