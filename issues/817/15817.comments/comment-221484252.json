{
	"id": 221484252,
	"body": "@griesemer From what I remember, variable declarations in C, C++ and Java are block scoped, but don't allow redeclaration within a nested block. ~~I never noticed redecleration in any of these languages. You couldn't do something like this in any of them:~~ (seems you can do this)\r\n\r\n~~~\r\nfor (int x=0; x \u003c 10; x++) {\r\n    offset = x;\r\n    for (int x=0; x \u003c 10; x++) {\r\n         pos = offset + (x*10);\r\n    }\r\n}\r\n~~~\r\n\r\n~~There might be other block-scoped languages that apply a similar behaviour as golang, I just didn't come across them in the last 20 years or so.~~ And the whole redecleration pattern is anti- even in php, javascript, etc. - since they are \"anything goes\" languages, it takes discipline to avoid problems.\r\n\r\nI'd appreciate a lint check or some kind of static analysis step on build time tell me that I'm doing something that might be unexpected/edge case/fringe. I realize execution behavior here is not likely to change, so I'm wondering if the tools around it can notify the developer of this at some point (a la gcc (`-Wall`, `-pedantic`, etc))",
	"user": {
		"login": "titpetric",
		"id": 233360,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-25T06:25:48Z",
	"updated_at": "2016-05-25T07:42:23Z"
}
