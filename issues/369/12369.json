{
	"id": 103608260,
	"number": 12369,
	"state": "closed",
	"title": "spec: incorrect  initialization order ",
	"body": "version: go version go1.5 darwin/amd64\r\n\r\nThere is an example about variable initialization order in the go specs:\r\n\r\n```\r\nvar (\r\n\ta = c + b\r\n\tb = f()\r\n\tc = f()\r\n\td = 3\r\n)\r\n\r\nfunc f() int {\r\n\td++\r\n\treturn d\r\n}\r\n\r\n```\r\nthe spec gives the initialization order is d, b, c, a. but the result of above example is not the same as the order spec gives.\r\n\r\n```\r\npackage main\r\n\r\nimport \"fmt\"\r\n\r\nvar (\r\n    a = c + b\r\n    b = f()\r\n    c = f()\r\n    d = 3\r\n)\r\n\r\nfunc f() int {\r\n    d++\r\n    return d\r\n}\r\n\r\nfunc main() {\r\n    fmt.Println(a, b, c, d)\r\n}\r\n```\r\n$go run example.go\r\n9 5 4 5\r\n\r\naccording to the result, the actual init order should be d ,c ,b, a, not the same as the order in spec.\r\n",
	"user": {
		"login": "bigwhite",
		"id": 419088,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2015-08-27T23:15:44Z",
	"created_at": "2015-08-27T22:29:43Z",
	"updated_at": "2016-09-04T20:47:53Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
