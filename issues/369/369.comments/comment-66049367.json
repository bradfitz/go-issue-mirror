{
	"id": 66049367,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eSorry.  The convenience here doesn't make up for\nthe complexity in syntax.\n\nGo already lets you write your example as\n\nfor i := range somearr {\n    intarr[i] = somearr[i].foo;\n    somearr[i] = T{5,2};\n}\n\nwhich seems clear and not any harder than\n\nintarr[] = somearr[].foo;\nsomearr[].{\n    foo = 5;\n    asdf = 2;\n}\n\nIn fact it is one line shorter.\n\nAlef had implicit iteration loops, which were even more\npowerful: you could write a matrix multiply as\n\n    x[0::n][0::n] = 0;\n    x[i=0::n][j=0::n] += y[i][k=0::n] * z[k][j];\n\nGreat stuff except that it made the code incredibly\nhard to read a few months later. \n\nYou might also like to look at APL.\n\u003ca href=\"http://www.youtube.com/watch?v=a9xAKttWgP4\"\u003ehttp://www.youtube.com/watch?v=a9xAKttWgP4\u003c/a\u003e\u003c/pre\u003e\n\n\n_Owner changed to **r...@golang.org**._\n\n_Status changed to **WontFix**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2009-12-03T05:48:06Z",
	"updated_at": "2014-12-08T10:04:18Z"
}
