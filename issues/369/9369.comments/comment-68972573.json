{
	"id": 68972573,
	"body": "Why would you do something like this ? Is it just for testing ?\r\n\r\nThis doesn't sound like a use case that the go tool should be optimising\r\nfor.\r\n\r\nOn Wed, Jan 7, 2015 at 1:52 PM, Minux Ma \u003cnotifications@github.com\u003e wrote:\r\n\r\n\u003e On Tue, Jan 6, 2015 at 9:45 PM, Dave Cheney \u003cnotifications@github.com\u003e\r\n\u003e wrote:\r\n\u003e\r\n\u003e \u003e I don't know what you mean by 'every time', if you mean every time you\r\n\u003e \u003e change your go install (ie, moving between major releases) or between\r\n\u003e \u003e development builds, this is a once off hit. I'd be surprised if the time\r\n\u003e \u003e to\r\n\u003e \u003e rebuild everything in your GOPATH was greater than the time it took to\r\n\u003e \u003e rebuild your go install, or download a packaged one.\r\n\u003e\r\n\u003e A concrete example for what I meant by \"every time\".\r\n\u003e I have a special GOPATH that has a broken symlink as pkg so that\r\n\u003e go install will never work for that GOPATH:\r\n\u003e $ ln -s $GOPATH/pkg $GOPATH/pkg\r\n\u003e\r\n\u003e Because I don't have any cgo packages in that GOPATH, I don't feel\r\n\u003e the need to every go install anything..... I switch go versions very\r\n\u003e frequently\r\n\u003e for that GOPATH, so even if I installed the packages, go build will almost\r\n\u003e always rebuild everything.\r\n\u003e\r\n\u003e â€”\r\n\u003e Reply to this email directly or view it on GitHub\r\n\u003e \u003chttps://github.com/golang/go/issues/9369#issuecomment-68972158\u003e.\r\n\u003e",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-01-07T02:58:55Z",
	"updated_at": "2015-01-07T02:58:55Z"
}
