{
	"id": 66091620,
	"body": "\u003ca id=\"c14\"\u003e\u003c/a\u003eComment 14:\n\n\u003cpre\u003eThat new thread seems to be started by the scheduler as a result of the syscall println\nmakes. A program with no syscalls works fine.\n\nIf I add runtime.LockOSThread() to the top of the program, it works. If once I hit the\nfirst breakpoint I gdb 'set scheduler-locking on', it also works.\n\nThe heart of the problem seems to be that gdb doesn't follow the go-routine when it\nmoves to a new OS thread. Is it even possible for gdb to know which thread the next\ninstruction of my go-routine is going to execute in (after it returns from a syscall,\nfor example)? Wouldn't this require some communication between Go's scheduler and gdb?\u003c/pre\u003e",
	"user": {
		"login": "grahamking",
		"id": 180418,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-03-01T05:10:39Z",
	"updated_at": "2014-12-08T10:41:01Z"
}
