{
	"id": 144871672,
	"number": 15043,
	"state": "closed",
	"title": "cmd/compile: constants of same underlying type are not merged",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo version devel +d8f1f8d Wed Mar 30 22:27:13 2016 +0000 linux/amd64\r\n\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nlinux amd64\r\n\r\n3. What did you do?\r\n\r\nCompiled the following program\r\n\r\n```\r\npackage main\r\n\r\ntype foo int\r\ntype bar int\r\ntype spam int\r\ntype eggs int\r\n\r\nfunc f(a []int) {\r\n        _ = a[foo(3)]\r\n        _ = a[bar(3)]\r\n        _ = a[spam(3)]\r\n        _ = a[eggs(3)]\r\n}\r\n\r\nfunc main() {\r\n}\r\n```\r\n\r\n\r\n4. What did you expect to see?\r\nOne bounds check.\r\n\r\n5. What did you see instead?\r\n4 bounds checks. The constants foo(3), bar(3), spam(3), eggs(3) are not merged by the zcse pass nor by the constants cache. However, most rewrite rules ignore the type and only use op.\r\n\r\n@josharian @tzneal \r\n\r\n",
	"user": {
		"login": "brtzsnr",
		"id": 57079,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"comments": 5,
	"closed_at": "2016-08-30T23:03:27Z",
	"created_at": "2016-03-31T11:46:46Z",
	"updated_at": "2016-08-30T23:03:28Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
