{
	"id": 51287173,
	"number": 7766,
	"state": "closed",
	"title": "runtime/race: Go 1.2 race detector and map of pointers =\u003e nil defererence, segfault",
	"body": "by **andres.erbsen**:\n\n\u003cpre\u003eThis bug does not appear (at least with the same test code) on the development version\n(go version devel +93ad232384f8 Fri Apr 11 10:11:21 2014 -0700 linux/amd64) and may\ntherefore be already fixed.\n\nThe combination of go 1.2, the race detector, a map of pointers and a function returning\ntwo values somehow results in a nil dereference on linux/x86_64.\n\nWhat does 'go version' print?\ngo version go1.2.1 linux/amd64\n\nWhat steps reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\n1. Compile \u003ca href=\"http://play.golang.org/p/0fIDCUE2m2c\"\u003ehttp://play.golang.org/p/0fIDCUE2m2c\u003c/a\u003e with \u0026quot;-race\u0026quot;\n2. Run it\n\nWhat happened?\n\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x400c52]\n\ngoroutine 1 [running]:\nruntime.panic(0x438400, 0x4aea68)\n\t/build/go/src/go-1.2.1/src/pkg/runtime/panic.c:266 +0xb6\nmain.main()\n\tmain.go:10 +0x52\n\nWhat should have happened instead?\n\nno output\n\nEither uncommenting the seemingly nop read from the map or compiling without\n\u0026quot;-race\u0026quot; makes the segfault not happen.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "RaceDetector"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:43:02Z",
	"created_at": "2014-04-12T03:16:47Z",
	"updated_at": "2016-06-25T01:32:05Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
