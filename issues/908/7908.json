{
	"id": 51287382,
	"number": 7908,
	"state": "closed",
	"title": "cmd/compile: tune value of BITS",
	"body": "\u003cpre\u003eLarge data structures (I'm looking at you, unicode tables) exceed the current register\noptimizer's capacity, so some code gets left unoptimized. To see this, run 'go build -a\n-gcflags=\u0026quot;-w -w\u0026quot; unicode'.\n\nThis is controlled by BITS in go.h. Looking just at binary size of hello world as a\nproxy for optimization, I see:\n\nBITS=5: 1834544\nBITS=6: 1830448\nBITS=8: 1830448\nBITS=12: 1826352\n\nThe impact is small, and increasing BITS increases the memory usage and runtime of the\ncompiler. However, I was unable to detect that difference on my laptop. I've not tried\non (say) a Raspberry Pi.\n\nOnce the compiler is in Go, and we have good tools for measuring the impact on build\nperformance, let's tune BITS based on real world programs -- or perhaps better, have\nBITS dynamically adjust as needed.\u003c/pre\u003e",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2016-06-26T04:49:00Z",
	"created_at": "2014-04-30T20:06:54Z",
	"updated_at": "2016-06-26T04:49:00Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
