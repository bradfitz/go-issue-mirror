{
	"id": 51281337,
	"number": 3908,
	"state": "closed",
	"title": "ssh: export parsePubKey",
	"body": "by **KXuMbnh97p**:\n\n\u003cpre\u003eThe parsePubKey function (as seen here:\n\u003ca href=\"http://code.google.com/p/go/source/browse/ssh/keys.go?repo=crypto)\"\u003ehttp://code.google.com/p/go/source/browse/ssh/keys.go?repo=crypto)\u003c/a\u003e seems essential when\ndealing with public keys submitted by users. It is possible to parse PEM-formatted keys\n(through encoding/pem), however the RFC 4253 format seems quite common and readily\ncopy-pastable.\n\nMy scenario is that I want to store user public keys along with a username in a database\nand use these for authentication, which is supported by the ssh package's ServerConfig.\n\nIf a user is using OpenSSH, he will almost always have his public key stored on his disk\nin the OpenSSH format (\u0026quot;ssh-rsa AAAA....\u0026quot;). To offer him a way to copy \u0026amp;\npaste his key, it needs to be parsed by the function mentioned above, which\nunfortunately, is not exported.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:20:40Z",
	"created_at": "2012-08-05T00:46:03Z",
	"updated_at": "2016-06-24T22:22:34Z"
}
