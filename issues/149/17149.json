{
	"id": 177672365,
	"number": 17149,
	"state": "open",
	"title": "os/exec: Cannot execute command with space in the name on Windows, when there are parameters",
	"body": "Go 1.7.1 on windows-amd64, Windows 10 latest.\r\n\r\nConsider a test project:\r\n\r\n```\r\nsrc/github.com/calmh/wincmdtest/\r\n    main.go\r\n    folder name/\r\n        test.bat\r\n```\r\n\r\n`main.go` contents:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os/exec\"\r\n\t\"strings\"\r\n)\r\n\r\nfunc main() {\r\n\texecCmd(\"./folder name/test.bat\")\r\n\texecCmd(\"./folder name/test.bat\", \"one param\")\r\n}\r\n\r\nfunc execCmd(path string, args ...string) {\r\n\tfmt.Printf(\"Running: %q %q\\n\", path, strings.Join(args, \" \"))\r\n\tcmd := exec.Command(path, args...)\r\n\tbs, err := cmd.CombinedOutput()\r\n\tfmt.Printf(\"Output: %s\", bs)\r\n\tfmt.Printf(\"Error: %v\\n\\n\", err)\r\n}\r\n```\r\n\r\n`folder name/test.bat` contents:\r\n\r\n```bat\r\n@echo off\r\necho Success\r\n```\r\n\r\nExpected output is two runs with \"Success\" in them.\r\n\r\nActual:\r\n\r\n```\r\nC:\\Users\\jb\\Go\\src\\github.com\\calmh\\wincmdtest\u003ego run main.go\r\nRunning: \"./folder name/test.bat\" \"\"\r\nOutput: Success\r\nError: \u003cnil\u003e\r\n\r\nRunning: \"./folder name/test.bat\" \"one param\"\r\nOutput: '.' is not recognized as an internal or external command,\r\noperable program or batch file.\r\nError: exit status 1\r\n```\r\n\r\nIt appears that having params on a command, where the command contains a space, breaks the parsing of it. I haven't been able to work around this by experimenting with various ways of quoting the command, using backslashes or slashes, etc.",
	"user": {
		"login": "calmh",
		"id": 125426,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsInvestigation"
		},
		{
			"name": "OS-Windows"
		}
	],
	"comments": 2,
	"created_at": "2016-09-18T19:50:59Z",
	"updated_at": "2016-10-10T01:40:03Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
