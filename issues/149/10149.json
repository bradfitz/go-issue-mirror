{
	"id": 60917470,
	"number": 10149,
	"state": "closed",
	"title": "testing: support unordered output in Examples.",
	"body": "Ideally tests should support unordered output as well as regular output in testing so that every example that uses maps doesn't need to make an output array and sort it (therefor adding complexity to unrelated example code.) This is very useful when dealing with maps which by design return unordered iteration patterns.\r\n\r\nAn example of the syntax I am proposing (Or something like that):\r\n```go\r\nfunc Example() {\r\n    x := map[string]int{\"a\": 1, \"b\": 2, \"c\", 3}\r\n    for key, value := range x {\r\n        fmt.Printf(\"key=%s value=%d\\n\", key, value)\r\n    }\r\n\r\n    // Unordered output:\r\n    // key=a value=1\r\n    // key=b value=2\r\n    // key=c value=3\r\n}\r\n```\r\n\r\nIn this case the output on godoc would show the above, while the test would pass regardless of which order the lines were outputted.",
	"user": {
		"login": "liquidgecka",
		"id": 325667,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Suggested"
		}
	],
	"comments": 28,
	"closed_at": "2016-04-22T02:03:54Z",
	"created_at": "2015-03-12T22:09:13Z",
	"updated_at": "2016-04-22T02:03:54Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
