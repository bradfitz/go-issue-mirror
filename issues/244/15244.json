{
	"id": 147587428,
	"number": 15244,
	"state": "closed",
	"title": "net/http make response.Write consistent with http.ReadResponse",
	"body": "1. What version of Go are you using (`go version`)?\r\ngo version go1.6 linux/amd64\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n3. What did you do?\r\n\r\nUnit test that passed under go1.5 failed under go1.6\r\nhttps://play.golang.org/p/Ny_UOGmHhM\r\n\r\nnet/http.Response.Write() will write something that can't be consumed by http.ReadResponse if StatusCode \u003c 100\r\n\r\n4. What did you expect to see?\r\n\r\nI expect one of:\r\n* resp.Write() returns error indicating 11 is a bad status code\r\n* resp.Write() writes a ReadResponse-compatible 3 digit status code \"011\"\r\n* http.ReadResponse() parses value without errors\r\n\r\n5. What did you see instead?\r\n\r\n```\r\nmalformed HTTP status code \"11\"\r\n```\r\n\r\nClearly the response being serialized is invalid (status code 11). I think we can just be consistent about not writing invalid responses OR being able to read the responses we write.\r\n",
	"user": {
		"login": "shanemhansen",
		"id": 366801,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-04-11T23:43:37Z",
	"created_at": "2016-04-11T23:40:07Z",
	"updated_at": "2016-04-11T23:48:32Z"
}
