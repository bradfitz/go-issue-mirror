{
	"id": 179371715,
	"number": 17244,
	"state": "open",
	"title": "proposal: decide policy for sub-repositories",
	"body": "[this is not a proposal yet, just a problem statement]\r\n\r\nThere are several proposals to add new packages to the `x/foo` \"sub-repositories\". (See: #16353, #13432, #12332, #16257, #15985, #15406, and more.) The proposals are all different, but they circle around the same issue: what should and should not be in a sub-repository.\r\n\r\nCurrently, the sub-repositories contain x different things:\r\n\r\n1. Packages and tools that are part of a loose set of Go tools (godoc, goimports, benchcmp, x/debug, etc)\r\n2. Packages and tools that support the Go web services (godoc, present, x/playground, x/tour, etc)\r\n3. Tools that support Go project development (x/build, x/benchmarks, x/review, etc).\r\n4. Packages that augment the standard library (x/text, x/image, x/crypto, x/sys, etc).\r\n5. Other projects worked on by Go team members at Google (x/exp, x/mobile, etc).\r\n\r\nTo me, it's clear that 1-2 belong in the sub-repositories, and should be an official part of the Go project.\r\n\r\nFor 4-5, this code only lives in the sub-repositories either for historical reasons or mere convenience. The Go contributors are accustomed to the process (tools and reviews) of writing code in that style, so the sub-repos were just the obvious place to go.\r\n\r\n(3 is a fringe case, as the tools could be worked on elsewhere, but the people working on them work on Go full time and work on that code solely to support the project, so I am inclined to ignore this code for the purposes of this issue.)\r\n\r\nAs the project grows, it attracts people who want to contribute new packages to these sub-repositories (see the issues cited at the beginning of this issue). The reasons for inclusion include:\r\n\r\n1. To provide an official package for doing X.\r\n2. To provide a supported package for doing X.\r\n3. To contribute to the Go project.\r\n4. To use the project's development processes (gerrit, etc).\r\n5. To have their code reviewed by other Go contributors and to benefit from their expertise.\r\n6. To use the same consistent license (with CLA) that the project uses.\r\n7. To provide a single package for a single purpose, and avoid duplicate effort.\r\n8. To provide an official package for interoperating about (but not necessarily doing) X.\r\n9. To act as a dependency for something else under x/.\r\n\r\n[What are the other reasons? I'd like to enumerate them all here.]\r\n\r\n---\r\n\r\nMy opinion begins here:\r\n\r\nNone of the above reasons are good arguments to add new packages to the sub-repositories. Taking each in turn:\r\n\r\n1. The \"official\" packages, such as they are, are generally of high quality because a small group of dedicated contributors have invested constant energy in them. But there are other high quality packages elsewhere in the Go ecosystem (many of higher quality than some of those in the sub-repos), it's just harder for people to find them and they don't have \"prestigious\" import paths. Rather than moving more stuff into the Go project, *I'd think we should address this issue by making it easier to find and recognize high quality packages.* (One way to do this is to improve godoc.org, but there are many other ways.)\r\n\r\n2. Putting something in the sub-repositories does not imply support. People are not more or less inclined to work on a package just because it's in a sub-repository. The current set of Go contributors are stretched pretty thin as it is. I think that *by moving more stuff into the sub-repositories we set expectations of support where there is none.* That's bad for our users.\r\n\r\n3. Moving more code into the project just for the sake of contributing is *not a net win*. There's plenty of work to be done on the code that is already part of the project (and the many, many open issues).\r\n\r\n4. If people want to use our processes, I think that a better approach is to *find a way to use those processes outside of the project*. That's a solution that scales much better.\r\n\r\n[see discussion below for other points]\r\n\r\nIn general, I'd like to make the Go project smaller rather than bigger. (In the same sense that we would remove stuff from the standard library, if we could.)\r\n\r\nAs I said, this is just my opinion and perspective. I have created this issue to gather feedback from other [potential] contributors.\r\n\r\nPersonal opinion ends.\r\n\r\n---\r\n\r\nWe need to set a policy for what belongs in the sub-repositories, and in doing so more clearly define the boundaries of the Go project.",
	"user": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		}
	],
	"assignee": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"comments": 71,
	"created_at": "2016-09-27T00:41:32Z",
	"updated_at": "2016-10-17T19:38:25Z",
	"milestone": {
		"id": 1373555,
		"number": 30,
		"title": "Proposal"
	},
	"reactions": {
		"total_count": 29,
		"+1": 29
	}
}
