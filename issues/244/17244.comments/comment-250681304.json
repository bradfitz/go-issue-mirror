{
	"id": 250681304,
	"body": "I've read this thread earlier, and there are 2 comments I want to leave. This first thought is kinda hard to express, I hope I get it right...\r\n\r\nIt is my personal opinion, as an observer who tries to follow the work done in the Go project, that the Go team should have the opportunity to limit the scope of maintenance and code reviews to the core projects they're working on and anything they're voluntarily willing to take on... I think it'd be really unfortunate if they're unintentionally made to increase that scope by the community trying to add new things to /x packages (which require code review).\r\n\r\nThere's a clear conflict - it's great to have canonical, high quality libraries for more and more low-level things (like `websocket`, `usb`, etc.), but it's also great to have the core Go team with a narrower scope, high quality work and ability to spend time where it matters more (core parts of Go).\r\n\r\nThey've done us a huge favor of open sourcing this project, which I really appreciate, but I think we as a community need to be very careful with the additional responsibility that gives us (that we can increase scope for /x, and the Go team has to deal with it).\r\n\r\nI'm very fortunate in my open source work that I can choose to work on and support exactly the things I care about, and not take on things I don't. It's an absolutely amazing feeling. I really want more people to be able to experience it, rather than feelings of burnout and pressure from taking on too much. I will definitely support whatever proposal that lets the Go team reduce scope to being responsible for fewer extraneous things (that they don't take on their own initiative).\r\n\r\nI think a nice litmus test for this is... if someone were to report an issue because they found a bug, do you:\r\n\r\n1. feel happy and excited because they've helped uncover an issue in code (that you didn't know about) that you care a lot about, which you can now fix easily, or,\r\n2. feel overwhelmed because it's yet another thing to deal with in a project you don't have enough time/priority for.\r\n\r\nThis may be naive and optimistic, but I wish we get to a solution where 1. is true more often than 2. for the people on the Go team when it comes to /x packages.\r\n\r\n\u003e The \"Go team,\" such as it is, is only a handful of people, and they do not have the cycles to review any new packages. If you want more packages in x/ then they must be written, reviewed, and maintained by other people. That being the case, there's no reason why they should be in x/. They're not going to be any better or worse for it.\r\n\r\nI completely agree that putting Go code under /x isn't magic, and doesn't automatically make it better if there's not enough people for whom it's a top priority. I don't have a great solution, but I do agree that it's good to think about finding a way to have high quality Go libraries (with proper voluntary ownership) be elsewhere, such that they're still discoverable and trustworthy.",
	"user": {
		"login": "shurcooL",
		"id": 1924134,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 1,
		"heart": 1
	},
	"created_at": "2016-09-30T07:45:44Z",
	"updated_at": "2016-09-30T07:45:44Z"
}
