{
	"id": 250031689,
	"body": "\u003e has an interest in improving the most useful packages\r\n\r\nYou are mistaking your experience on the high-level community-driven packages with fundamental packages. For example, no one in the community will find debating a low-level audio API on a personal project useful or productive given there is no arbiter or a person who has an authoritative final say. I support structure, your proposal suggests distributed chaos and blessing of the popular because it is more successful.\r\n\r\nThe role of the Go project should be to review and bless fundamental things, especially the APIs. And that's where the proposal system can be sufficient enough. If the Go project doesn't have bandwidth to maintain the proposed package, the proposal should be frozen for bandwidth reasons. The ideas can keep been communicated on the proposal even though multiple implementations can live in people's personal projects.\r\n\r\nThe current state of the x packages is not what I support. But, throwing people out of the project because the core people doesn't have bandwidth is not a solution. No one ever desires a language ecosystem dominated by broken third-party solutions like Node's or Python's, but languages evolve there. I worry that it is happening for Go so soon.",
	"user": {
		"login": "rakyll",
		"id": 108380,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-27T23:46:22Z",
	"updated_at": "2016-09-27T23:48:03Z"
}
