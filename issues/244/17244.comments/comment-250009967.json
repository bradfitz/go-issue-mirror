{
	"id": 250009967,
	"body": "I'm not sure I think I would agree with \"a lot\", but yeah, I think x/ should perhaps be twice the number of packages it is now.\r\n\r\n\u003e 1. Who is going to do this work? How do you propose we maintain the same quality level across many more packages that our well outside our areas of expertise?\r\n\r\nGo project members will do the work, just as they do today. The people who are proposing these new packages are working in their area of expertise. But I also don't think it's \"outside\" our areas of expertise; our area of expertise is designing idiomatic Go APIs, and that can be equally applied to something like video compression as it can to XML or JSON marshalling.\r\n\r\n\u003e 2. Why does it need to go in x/? Why should we be the arbiters of which packages are prominent? Aren't we short-changing the ecosystem by neglecting third-party package support?\r\n\r\nThat's a hard question. For me, I have a soft definition of \"low-level\" support packages that I think deserve to be centralized. To use an example I am personally familiar with, I think video and audio formats should be in x/video or x/media, ala the current image support we have in x/image. I think a streaming server built on top of those libraries, or a GIMP clone, does not belong in x/ because that is not something foundational.\r\n\r\nI do think making high quality third-party packages easier to find solves a large part of this problem, but we are not there yet. And even if we do make them easy to find, packages that are separate from Go still have more adoption problems we can't possibly solve: for example, they may be under various licenses, and it may be cumbersome to import into a commercial codebase. That may be appropriate for a library to interface with a Siemens PLC from the 1990s, but I don't think it's appropriate for OpenGL.",
	"user": {
		"login": "quentinmit",
		"id": 115761,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-27T21:51:26Z",
	"updated_at": "2016-09-27T21:51:26Z"
}
