{
	"id": 66080664,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eIMHO: Works as intended. The attached rpctest.go is buggy\nfrom line 53 on (a bit restructured)\n\n  done := done := make(chan *rpc.Call, 8)\n  addReply, mulReply := new(Reply), new(Reply)\n\n  mulCall := client.Go(\"Arith.Mul\", args, mulReply, done)\n  addCall := client.Go(\"Arith.Add\", args, addReply, done)\n  addCall = \u0026lt;-addCall.Done\n  if addReply.C != args.A+args.B {\n    log.Fatalf(\"Add: expected %d got %d\", addReply.C, args.A+args.B)\n  }\n\nSo: addCall.Done == mulCal.Done == done\nNow addCall = \u0026lt;-addCall.Done is basically\nfirstFinishedCall := \u0026lt;- done; addCall = firstFinishedCall\nwhich might be the multiplication. \nTesting now for addReply != something if wrong as the\nfirstFinishedCall might not be the addition\n(even when stored into a variable called \"addCall\").\u003c/pre\u003e",
	"user": {
		"login": "vdobler",
		"id": 701382,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-06T10:08:16Z",
	"updated_at": "2014-12-22T06:25:57Z"
}
