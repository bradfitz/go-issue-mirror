{
	"id": 120234958,
	"body": "The bug is here:\r\n\r\nr32, g32, b32, a32 := img.At(x, y).RGBA()\r\nc := color.RGBA{uint8(r32), uint8(g32), uint8(b32), uint8(a32)}\r\n\r\nhttp://golang.org/pkg/image/color/#Color says that \"each value [returned by RGBA] ranges within [0, 0xFFFF]\". Thus, the r32 value is effectively a 16-bit value (as a uint32).\r\n\r\nYou then say \"uint8(r32)\", which takes the 8 low bits, not the 8 high bits, of that 16-bit value. Instead, it should be \"uint8(r32 \u003e\u003e 8)\".\r\n\r\nSeparately, if you want to convert a YCbCr image to an RGBA image, you don't have to roll your own loop. Instead, the easiest way to do that is the \"Converting an Image to RGBA\" section of http://blog.golang.org/go-imagedraw-package",
	"user": {
		"login": "nigeltao",
		"id": 8565232,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-10T05:44:03Z",
	"updated_at": "2015-07-10T05:44:03Z"
}
