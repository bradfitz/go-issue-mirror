{
	"id": 51282180,
	"number": 4462,
	"state": "closed",
	"title": "spec: go/defer of builtin functions unspecified",
	"body": "\u003cpre\u003eThe spec is unclear about which (if any) builtin functions can be used together with\ngo/defer.\n\n1) For gc, it appears that only builtins that may appear in statement context (\n\u003ca href=\"http://tip.golang.org/ref/spec#Expression_statements\"\u003ehttp://tip.golang.org/ref/spec#Expression_statements\u003c/a\u003e ) are permitted:\n\n\u003ca href=\"http://play.golang.org/p/XAT6UeIVRd\"\u003ehttp://play.golang.org/p/XAT6UeIVRd\u003c/a\u003e\n\n(uncomment the respective lines and run locally to test for the unsafe functions).\n\ngccgo appears to follow the same rules (albeit with some different and less clear error\nmessages).\n\n2) The spec does not specify if the \u0026quot;call\u0026quot; of a go/defer statement can be\nparenthesized or not.\n\n- For gc, top-level calls in expression statements (including built-in calls) may or may\nnot be parenthesized (and it is explicitly mentioned in the spec); however, in a\ndefer/go statement, calls cannot be parenthesized.\n\n- For gccgo, top-level calls in expression statements and in go and defer statements may\nbe parenthesized.\n\nI think the spec for go/defer statements should be adjusted as follows:\n\na) It should explicitly state that only the builtins that may appear in statement\ncontext can be called.\nb) It should permit parenthesized calls for consistency.\n\nRule a) documents the status quo, rule b) is a relaxation of the rules for the gc\ncompiler and thus a backward-compatible change.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2014-12-08T10:23:44Z",
	"created_at": "2012-11-28T23:02:41Z",
	"updated_at": "2016-06-24T22:29:00Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
