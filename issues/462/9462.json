{
	"id": 52969677,
	"number": 9462,
	"state": "closed",
	"title": "go/ssa/interp: breaks on reflect implementation of Go tip",
	"body": "Running ssadump on [this go program](http://play.golang.org/p/JHUgaI-2sq) produces a panic: \r\n\r\n    panic: interface conversion: interface is reflect.rtype, not *reflect.rtype\r\n\r\nWith go gc 1.4 on GNU/Linux there is none. \r\n\r\nThe full invocation, output produced, and golang version is given in [this gist](https://gist.github.com/rocky/6f4f1955cdf8addaeb92). \r\n\r\nLooking at the Go code:\r\n\r\n    u8 reflect.Type = reflect.TypeOf(uint8(0))\r\n    byteSlice reflect.Type = reflect.SliceOf(u8)\r\n\r\nI am just as confused as ssadump. Here is *reflect.SliceOf* in *reflect/type.go*:\r\n\r\n    func SliceOf(t Type) Type {\r\n    typ := t.(*rtype)\r\n    ...\r\n\r\nThe ssadump error message makes sense to me in that the passed-in type is a `reflect.rtype`, not and `*reflect.rtype` which is what  appears to be the use in *reflect.SliceOf*. \r\n\r\nSo what is it in Go that makes it okay to have these things not give a type error? \r\n\r\n\r\n\r\n",
	"user": {
		"login": "rocky",
		"id": 8851,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "alandonovan",
		"id": 8433140,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"closed_at": "2015-01-01T22:35:57Z",
	"created_at": "2014-12-28T00:48:33Z",
	"updated_at": "2016-06-25T01:57:27Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
