{
	"id": 145541801,
	"number": 15089,
	"state": "closed",
	"title": "x/net/http2: client should allow 'trailers' Transfer-Encoding header",
	"body": "1. What version of Go are you using (`go version`)?\r\ngo1.6\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nUbuntu 15.10 amd64\r\n\r\n3. What did you do?\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"log\"\r\n\t\"net/http\"\r\n)\r\n\r\nfunc main() {\r\n\t// Enables HTTP/2 in the DefaultClient on Go 1.6.0\r\n\tif tr, ok := http.DefaultTransport.(*http.Transport); ok {\r\n\t\ttr.ExpectContinueTimeout = 0\r\n\t}\r\n\treq, err := http.NewRequest(\"GET\", \"https://www.google.com\", nil)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\treq.Header.Set(\"Transfer-Encoding\", \"trailers\")\r\n\t_, err = http.DefaultClient.Do(req)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n}\r\n```\r\n\r\n\r\n4. What did you expect to see?\r\nNo error\r\n\r\n5. What did you see instead?\r\n`http2: invalid Transfer-Encoding request header`.\r\n\r\n`checkConnHeaders` fails on any `Transfer-Encoding` header values other than `chunked`, but `encodeHeaders` ignores any `Transfer-Encoding` headers anyway. This is contrary to the spec which says\r\n\r\n\u003e The only exception to this is the TE header field, which MAY be present in an HTTP/2 request; when it is, it MUST NOT contain any value other than \"trailers\".\r\n\r\n\r\n",
	"user": {
		"login": "rolandshoemaker",
		"id": 5080674,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2016-04-03T22:31:47Z",
	"created_at": "2016-04-03T21:19:01Z",
	"updated_at": "2016-04-03T22:40:41Z"
}
