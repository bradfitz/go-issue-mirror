{
	"id": 109609029,
	"number": 12826,
	"state": "open",
	"title": "proposal: cmd/go: -benchformat option in go test",
	"body": "## Background\r\n\r\nCurrently `go test -bench .` prints out benchmark results in a certain format, but there is no guarantee that this format will not change. Thus a tool that parses go test output may break if an incompatible change to the output format is made.\r\n\r\nAlso currently there is no good way to distinguish benchmark results from the rest of `go test` output, other than checking that a line starts with `\"Benchmark\"`.\r\n\r\n## Proposal\r\n\r\n1. Add `-benchformat` flag to `go test`. Its value is a text/template template with [`BenchmarkResult`](https://github.com/golang/go/blob/f9ed2f75c43cb8745a1593ec3e4208c46419216a/src/testing/benchmark.go#L222) input, similar to `-f` flag in `go list`.\r\n1. Add `Proc` to [`BenchmarkResult`](https://github.com/golang/go/blob/f9ed2f75c43cb8745a1593ec3e4208c46419216a/src/testing/benchmark.go#L222). It will have the value of `runtime.GOMAXPROCS` at the beginning of [`B.launch`](https://github.com/golang/go/blob/f9ed2f75c43cb8745a1593ec3e4208c46419216a/src/testing/benchmark.go#L189) call.\r\n\r\nExample:\r\n\r\n```shell\r\n$ go test -run=^$  -bench . \\\r\n  -benchformat \"BENCHMARK STARTS HERE:{{.Name}}:{{.Proc}}:{{.T}}:{{.N}}:{{.Bytes}}\"\r\nPASS\r\nBENCHMARK STARTS HERE:BenchmarkFoo:8:1s:10000:0\r\nBENCHMARK STARTS HERE:BenchmarkBar:8:1s:10000:0\r\n```",
	"user": {
		"login": "nodirt",
		"id": 643254,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		}
	],
	"comments": 9,
	"created_at": "2015-10-03T08:15:34Z",
	"updated_at": "2016-02-12T19:12:08Z",
	"milestone": {
		"id": 1373555,
		"number": 30,
		"title": "Proposal"
	}
}
