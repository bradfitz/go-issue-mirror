{
	"id": 51283780,
	"number": 5536,
	"state": "closed",
	"title": "go.exp/fsnotify: tests are flaky",
	"body": "\u003cpre\u003ego.exp/fsnotify's tests are quite flaky.\n\nExample:\n\n--- FAIL: TestFsnotifyMultipleOperations-126 (2.65 seconds)\nfsnotify_test.go:78: event received: \u0026quot;_test/TestFsnotifySeq.testfile\u0026quot;: CREATE\nfsnotify_test.go:78: event received: \u0026quot;_test/TestFsnotifySeq.testfile\u0026quot;: MODIFY\nfsnotify_test.go:78: event received: \u0026quot;_test/TestFsnotifySeq.testfile\u0026quot;: RENAME\nfsnotify_test.go:78: event received: \u0026quot;_test/TestFsnotifySeq.testfile\u0026quot;: CREATE\nsnotify_test.go:155: calling Close()\nfsnotify_test.go:157: waiting for the event channel to become closed...\nfsnotify_test.go:162: event stream was not closed after 2 seconds\n\nI started some cleanup here:\n\n\u003ca href=\"https://golang.org/cl/8202043/\"\u003ehttps://golang.org/cl/8202043/\u003c/a\u003e\n\nbut I think go.exp/fsnotify has a more serious problem:\n\nSIGABRT shows that all the readEvents goroutines (which are in charge of closing the\ninotify fd) are still stuck in their read syscall.\n\nThis seems like a problem with the current design of Watcher. readEvents is blocked and\ncan't see the closed done channel.\u003c/pre\u003e",
	"user": {
		"login": "alberts",
		"id": 409689,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 8,
	"closed_at": "2014-12-31T02:36:28Z",
	"created_at": "2013-05-22T09:30:03Z",
	"updated_at": "2016-06-24T22:40:49Z"
}
