{
	"id": 66054734,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3 by **daveroundy**:\n\n\u003cpre\u003eI agree about the specification being vague on this front.  I wonder how we might\nclarify your understanding (which matches my understanding, which is understandably more\nvague).\n\nHere is my poor attempt at writing up a bit of clarification to be added to\n\n\u003ca href=\"http://golang.org/doc/go_spec.html#Exported_identifiers\"\u003ehttp://golang.org/doc/go_spec.html#Exported_identifiers\u003c/a\u003e\n\nAll other identifiers are not exported.  Non-exported fields in structs and non-exported\nmethods, however can affect other packages in the following ways.  A struct may have two\nfields with the same identifier, provided those fields are non-exported and are defined\nin separate packages.  (This may come about via embedding.)  Similarly, types and\ninterfaces may have methods with the same name under the same circumstances.  These\nmethods may not be called outside of their defining package, but remain a part of the\nmethod set.\n\nI'm not sure I've got the terminology right, but I think it addresses the main issues\nthat I see with the spec.  Also, some of the statements might belong elsewhere, e.g. the\nbits about uniqueness of method and field names should perhaps be moved to the locations\nwhere uniqueness is currently claimed by the spec.  But as I said, I think this\naddresses the main problems that I can currently see.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-02-22T20:58:10Z",
	"updated_at": "2014-12-08T10:08:46Z"
}
