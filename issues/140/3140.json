{
	"id": 51280173,
	"number": 3140,
	"state": "closed",
	"title": "text/template: function chaining",
	"body": "by **robfig@yext.com**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\nApply the attached patch to template/exec_test.go\n\nWhat is the expected output?\nAll tests pass\n\nWhat do you see instead?\n10:12:52 [robfig@robfig ~/go/src/pkg/template]\n$ gomake test\ngotest\nrm -f _test/template.a\n6g  -o _gotest_.6 exec.go funcs.go helper.go parse.go set.go  exec_test.go set_test.go\nrm -f _test/template.a\ngopack grc _test/template.a _gotest_.6 \n--- FAIL: template.TestExecute (0.01 seconds)\n\tmapString: expected\n\t\t\u0026quot;value\u0026quot;\n\tgot\n\t\t\u0026quot;\u0026quot;\n\tmapNiladicFunc: unexpected execute error: template: mapNiladicFunc:1: wrong number of args for mapNiladicFunc: want 0 got 1\n\tmapVariadicFunc: unexpected execute error: template: mapVariadicFunc:1: wrong number of args for mapVariadicFunc: want 0 got 4\nFAIL\ngotest: \u0026quot;./6.out\u0026quot; failed: exit status 1\nmake: *** [test] Error 2\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nOSX\n\nPatch from \u0026quot;hg diff\u0026quot;: \n\ndiff -r c1702f36df03 src/pkg/template/exec_test.go\n--- a/src/pkg/template/exec_test.go\tTue Oct 18 10:55:12 2011 +1100\n+++ b/src/pkg/template/exec_test.go\tMon Feb 27 10:16:46 2012 -0500\n@@ -402,6 +402,11 @@\n \t{\u0026quot;error method, error\u0026quot;, \u0026quot;{{.EPERM true}}\u0026quot;, \u0026quot;\u0026quot;, tVal, false},\n \t{\u0026quot;error method, no error\u0026quot;, \u0026quot;{{.EPERM false}}\u0026quot;, \u0026quot;false\u0026quot;, tVal, true},\n \n+\t// Func chaining.\n+\t{\u0026quot;mapString\u0026quot;, \u0026quot;{{mapString.key}}\u0026quot;, \u0026quot;value\u0026quot;, tVal, false},\n+\t{\u0026quot;mapNiladicFunc\u0026quot;, \u0026quot;{{mapNiladicFunc.key}}\u0026quot;, \u0026quot;value\u0026quot;,\ntVal, true},\n+\t{\u0026quot;mapVariadicFunc\u0026quot;, \u0026quot;{{mapVariadicFunc.key 1 2 3}}\u0026quot;,\n\u0026quot;args=[1, 2, 3]\u0026quot;, tVal, true},\n+\n \t// Fixed bugs.\n \t// Must separate dot and receiver; otherwise args are evaluated with dot set to variable.\n \t{\u0026quot;bug0\u0026quot;, \u0026quot;{{range .MSIone}}{{if $.Method1 .}}X{{end}}{{end}}\u0026quot;, \u0026quot;X\u0026quot;, tVal, true},\n@@ -431,6 +436,26 @@\n \treturn \u0026quot;oneArg=\u0026quot; + a\n }\n \n+func mapString() map[string]string {\n+\treturn map[string]string{\n+\t\t\u0026quot;key\u0026quot;: \u0026quot;value\u0026quot;,\n+\t}\n+}\n+\n+func mapNiladicFunc() map[string]func()string {\n+\treturn map[string]func()string {\n+\t\t\u0026quot;key\u0026quot;: func() string {\n+\t\t\treturn \u0026quot;value\u0026quot;\n+\t\t},\n+\t}\n+}\n+\n+func mapVariadicFunc() func(...interface{})string {\n+\treturn func(args ...interface{})string {\n+\t\treturn fmt.Sprintf(\u0026quot;args=%s\u0026quot;, args)\n+\t}\n+}\n+\n // count returns a channel that will deliver n sequential 1-letter strings starting at \u0026quot;a\u0026quot;\n func count(n int) chan string {\n \tif n == 0 {\n@@ -459,6 +484,9 @@\n \t\t\u0026quot;typeOf\u0026quot;:   typeOf,\n \t\t\u0026quot;vfunc\u0026quot;:    vfunc,\n \t\t\u0026quot;zeroArgs\u0026quot;: zeroArgs,\n+\t\t\u0026quot;mapString\u0026quot;: mapString,\n+\t\t\u0026quot;mapNiladicFunc\u0026quot;: mapNiladicFunc,\n+\t\t\u0026quot;mapVariadicFunc\u0026quot;: mapVariadicFunc,\n \t}\n \tfor _, test := range execTests {\n \t\ttmpl := New(test.name).Funcs(funcs)\n\nWhich revision are you using?  (hg identify)\n\n\nPlease provide any additional information below.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 12,
	"closed_at": "2014-12-08T10:16:19Z",
	"created_at": "2012-02-27T15:20:47Z",
	"updated_at": "2016-06-24T21:28:55Z"
}
