{
	"id": 149404832,
	"body": "Of course not. Pointers are automatically dereferenced in templates. If you look at the playground example I provided, you can see other dereferencing working correctly. A String pointer, for example, returns a string in the template and when you do: {{ len .PtrToAString}} it correctly calculates the length of the string at the other end of the pointer. \r\n\r\nAnd the pointer value be considered true is definitely not what is going on here. As provided in the example, if a bool is set to false and there is a pointer to that bool, then {{ .PtrToABool }} correctly shows the value 'false'. If it was referencing the pointer itself, it would show either True (for existence) or a hex value for the pointer.  The problem really only comes up when applying a logical operator to the dereferenced value via the pointer to a boolean.",
	"user": {
		"login": "jmcauley",
		"id": 151531,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-20T02:12:23Z",
	"updated_at": "2015-10-20T02:12:23Z"
}
