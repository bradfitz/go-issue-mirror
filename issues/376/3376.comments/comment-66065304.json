{
	"id": 66065304,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003efullung,\n\nYou are correct, write fails:\n\npackage main\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"os/exec\"\n\t\"syscall\"\n)\n\nfunc toStdout(d []byte) {\n\tconst max = 1\u0026lt;\u0026lt;10\n\tfor {\n\t\tif len(d) \u0026lt;= max {\n\t\t\tos.Stdout.Write(d)\n\t\t\treturn\n\t\t}\n\t\tos.Stdout.Write(d[:max])\n\t\td = d[max:]\n\t}\n}\n\nfunc main() {\n\tcmd := exec.Command(\"go\", \"list\", \"-json\", \"all\")\n\tout, err := cmd.Output()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tfmt.Printf(\"%d\\n\", len(out))\n\ttoStdout(out)\n\t_, err = fmt.Printf(\"%x\\n\", out[:32767])\n\tif err != nil {\n\t\tlog.Fatalf(\"errno=%d err=%v\\n\", int(err.(*os.PathError).Err.(syscall.Errno)), err)\n\t}\n}\n\nErrno=8 is ERROR_NOT_ENOUGH_MEMORY. From \u003ca href=\"http://goo.gl/nVQCR\"\u003ehttp://goo.gl/nVQCR\u003c/a\u003e :\n\n\u0026gt;\u0026gt;\u0026gt;\nThe WriteFile function may fail with ERROR_INVALID_USER_BUFFER or\nERROR_NOT_ENOUGH_MEMORY whenever there are too many outstanding asynchronous I/O\nrequests.\n\u0026lt;\u0026lt;\u0026lt;\n\nSo, I guess, you need to use smaller buffer - see toStdout in my example. My modified\nprogram outputs:\n\n...\n        \"Standard\": true,\n        \"Root\": \"C:\\\\mingw\\\\go\",\n        \"GoFiles\": [\n                \"unsafe.go\"\n        ]\n}\n2012/03/26 11:37:59 errno=8 err=write /dev/stdout: Not enough storage is available to\nprocess this command.\n\nI am not sure what else we can do. So I am leaving this issue as WorkingAsIntended.\nPlease, let us know, if you have better ideas.\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-03-26T00:45:39Z",
	"updated_at": "2014-12-22T06:12:33Z"
}
