{
	"id": 229392908,
	"body": "It would help if you could describe more precisely what you propose to change in the language spec.\r\n\r\nI think you are proposing that we change the handling of named interface types when such types are used as function arguments or results, or as struct field types, when converting from type to another.  Why are interface types special here?  In exactly what cases are interface types special?\r\n\r\nThe current rules for type conversions are already a bit complex.  Is this change going to make them more complex?  That would be a drawback.  It should be easy to understand when a type conversion is valid.  Anything that makes that harder to understand needs significant benefits.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-29T15:28:08Z",
	"updated_at": "2016-06-29T15:28:08Z"
}
