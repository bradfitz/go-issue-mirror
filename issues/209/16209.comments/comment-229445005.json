{
	"id": 229445005,
	"body": "I think this proposal is more targeted at enforcing this element of the specification:\r\n\r\n* **Two interface types are identical if they have the same set of methods with the same names and identical function types.** Lower-case method names from different packages are always different. The order of the methods is irrelevant.\r\n\r\nBecause:\r\n* Two function types are identical if they have the same number of parameters and result values, **corresponding parameter and result types are identical**, and either both functions are variadic or neither is. Parameter and result names are not required to match.\r\n* Two struct types are identical if they have the same sequence of fields, and **if corresponding fields have the same names, and identical types, and identical tags.** Two anonymous fields are considered to have the same name. Lower-case field names from different packages are always different.\r\n\r\nIf two interfaces types are identical if they have the same methods, then context.Context and x/net/context.Context are identical types, which means that the functions and structures using them should view them as identical types, and therefore\r\n\r\ntype F func(ctx context.Context)\r\nand\r\ntype G func(ctx x/net/context.Context)\r\n\r\nShould already be identical types, _by the language specification already_.",
	"user": {
		"login": "puellanivis",
		"id": 10839126,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 5,
		"+1": 5
	},
	"created_at": "2016-06-29T18:25:40Z",
	"updated_at": "2016-06-29T18:25:40Z"
}
