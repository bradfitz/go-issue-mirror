{
	"id": 187489098,
	"body": "I'd like to revive this topic, motivated by gRPC's Errorf function which triggers vet.\r\n\r\ngRPC has a public function with this signature:\r\n```\r\nfunc Errorf(c codes.Code, format string, a ...interface{}) error\r\n```\r\n\r\nUsing this function causes vet to shriek, as noted in https://github.com/grpc/grpc-go/issues/90. Given that grpc is maintained by core Go authors who are unwilling to rename their function, I think it's fair to say some more effort in go vet's side here would be worthwhile to expand its set of covered programs.\r\n\r\nIt seems to me that vet could be a little more intelligent here. It should be easily possible to identify the function's call signature and figure out whether its first parameter is a string. Vet could merely warn that it's unable to handle non-standard Printf calls, or perhaps it could try to suss out which parameter _is_ a format string, and appropriately vet the arguments passed in.\r\n\r\nThis comment is a proposal to gauge interest; I'm happy to be the one to do the work of writing the CL but I want to make sure that this change to vet's behavior is desirable.",
	"user": {
		"login": "spenczar",
		"id": 880413,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 3,
		"+1": 3
	},
	"created_at": "2016-02-23T02:27:16Z",
	"updated_at": "2016-02-23T02:27:16Z"
}
