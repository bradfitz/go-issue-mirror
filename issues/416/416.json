{
	"id": 51276449,
	"number": 416,
	"state": "closed",
	"title": "New semicolon rule breaks 'if then{} newline else{}'",
	"body": "by **ray@hollett.demon.co.uk**:\n\n\u003cpre\u003eI really like the new semicolon rules, but a standard layout pattern for\nmany people is to have 'else' on a new line.\nAs in:\n\nif 1 == 2 { fmt.Println(\u0026quot;line 1\u0026quot;) }\nelse { fmt.Println(\u0026quot;line 2\u0026quot;) }\n\nor:\n\nif 1 == 2 {\n    fmt.Println(\u0026quot;line 1\u0026quot;)\n}\nelse {\n    fmt.Println(\u0026quot;line 2\u0026quot;)\n}\n\nHowever both these cause a \u0026quot;syntax error near else\u0026quot;. What now is required\nis that the newline before the else is removed to give: } else {\nThis is what gofmt does, but I do not understand the reasons for it based\non the proposal given a few days ago for the new semicolon rules.\nI notice that the Channels example in \u0026quot;Go For C++ Programers\u0026quot; is in the now\nbroken format:\nif c.get { c.val = val; ch \u0026lt;- c }\nelse { val = c.val }\n\nPersonally I prefer a newline before else rather than \u0026quot;} else {\u0026quot;, but I\nprefer the new semicolon rules more.\n\nWhat is your $GOOS?  $GOARCH?\nlinux (Ubuntu 9.10) 386 (8g)\n\nWhich revision are you using?  (hg identify)\ne7f3b2a4d933 tip (I updated today)\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:04:31Z",
	"created_at": "2009-12-12T17:18:31Z",
	"updated_at": "2016-06-24T19:10:24Z"
}
