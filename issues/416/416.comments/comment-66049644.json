{
	"id": 66049644,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eWe're still in transition and much of the documentation\nhasn't been updated yet.  (To avoid the inconsistencies\nyou can run \"hg update release\" to get back to the old state.)\n\nWe're aware of this specific problem, but it's not the\ngofmt formatting anyway, and all the ways you might\nimagine accommodating the alternate style complicate\nthings in bad ways.\n\nYou can convert your program using gofmt -w *.go.\n\n\u0026gt; I do not understand the reasons for it based\n\u0026gt; on the proposal given a few days ago for the new semicolon rules.\n\u0026gt; I notice that the Channels example in \"Go For C++ Programers\" is in the now\n\u0026gt; broken format:\n\u0026gt; if c.get { c.val = val; ch \u0026lt;- c }\n\u0026gt; else { val = c.val }\n\nAllowing this would require accepting\n\n   if c.get { c.val = val; ch \u0026lt;- c } ;\n   else { val = c.val }\n\nwhich would make the different pieces of\nthe if different statements.  That's pretty awkward.\n\nAn alternative would be to peek ahead in the\nlexer and not insert ; before else, but that's\nan extra rule that must be implemented by the\nmany tools and wouldn't have any benefit to\nprograms written in the standard formatting.\n\nComplexity aside, there is a compelling benefit\nto not looking ahead past a newline to decide\nwhether to insert a semicolon: it means that \nstandard Go syntax can be used in newline-oriented\ncontexts like interactive environments without\nany special cases.  (Compare this to Python's interpreter,\nwhere an if statement must be followed by a \nblank line to get it to execute.)\n\nFor all these reasons, I think the most likely\noutcome will be that the else behavior won't change.\nIf you'd like to discuss this more, the mailing list\nis the right forum.\u003c/pre\u003e\n\n\n_Owner changed to **r...@golang.org**._\n\n_Status changed to **WontFix**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2009-12-12T18:10:13Z",
	"updated_at": "2014-12-22T05:50:25Z"
}
