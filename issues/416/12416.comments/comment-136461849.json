{
	"id": 136461849,
	"body": "Thanks for starting the work! That said, some aspects are still not very clear to me -- I'd be very grateful for some clarifications. I'm especially interested from the point of view of the \"Windows world\", i.e. interacting with WinAPI \"syscalls\" \u0026 some other custom DLLs:\r\n\r\n1. Is this understood to cover the syscall package use cases too? I.e. when somebody does `import \"syscall\"`, but **does not `import \"C\"`**. *Please* state this explicitly, whether it is covered or not, and to what extent. I'm aware that the underlying mechanisms are the same to some extent (or at least were a few versions ago), but I'm especially not sure if that's assumed \"official\" or \"accidental\". I believe it isn't really stated anywhere in the official docs (or is it?). This proposal could be a very good place to clarify this, and I'd be really grateful for that.\r\n\r\n2. (Related to 1.) Specifically, the WinAPI syscalls often take `uintptr` as an argument. In +/-Go 1.3 it was (AFAIU) semi-officially named as a \"non-pointer\" (with regards to GC). Am I right to undertand this then falls outside the current wording of the discussed proposal? And thus, back into uncharted territory...? :( Or is uintptr now blessed into pointers family?\r\n\r\n3. (Related to 2.) If `uintptr` is still not-a-pointer, is there a chance that any rules for \"pinning\" a pointer could become part of this proposal? Such that they'd enable taking a uintptr of a pointer in some \"officially safe\" way (hopefully \"in Go 1.x where x\u003e=3\") and passing it into syscall/C world for some (finite?) time?\r\n\r\n  * (I'd be specially grateful if the rules could be stated explicitly also \"back in time\", starting with Go 1.3, as I believe this knowledge is still not really codified anywhere oficially, and all that can be known to a \"common man\", not versed in all odds and ends of the compiler \u0026 GC, is currently spread between some more or less obscure threads on golang-nuts, golang-dev, and maybe some random entries on the issue tracker...))\r\n\r\n4. (Related to 2., 3.) Also, how about structs containing uintptr?\r\n\r\nI'd be really very grateful if answers to those questions could be incorporated into this proposal...",
	"user": {
		"login": "akavel",
		"id": 273837,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-31T18:46:13Z",
	"updated_at": "2015-08-31T18:55:40Z"
}
