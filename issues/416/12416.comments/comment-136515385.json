{
	"id": 136515385,
	"body": "On Mon, Aug 31, 2015 at 6:02 PM, dr2chase \u003cnotifications@github.com\u003e wrote:\n\n\u003e For each Go value you need to pass to Python, increment a counter to get a\n\u003e token value, and store the Go value in the map at that location. When\n\u003e calling back into Go, pass the token value. The Go side uses the token to\n\u003e look into the map to fetch the value.\n\u003e\n\u003e Is the map a global? That would imply contention and/or synchronization.\n\u003e We don't have a notion of thread-local/Goroutine-local storage in Go, do\n\u003e we? This would also need to survive a transition from Go to C to Go to make\n\u003e this work.\n\u003e\nThe map will be global. And no, we don't have thread-local/goroutine-local\nstorage,\nintentionally. I don't think the contention on the map will be relevant for\nthis particular\ncase as the Python interpreter is pretty much single threaded due to its\nGIL.\n",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-31T22:13:11Z",
	"updated_at": "2015-08-31T22:13:11Z"
}
