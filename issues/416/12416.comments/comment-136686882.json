{
	"id": 136686882,
	"body": "\u003e In some other aspects, over the night I remembered of one particular WinAPI function,RegisterClassEx(). This one is possibly especially troublesome, in that it takes a pointer to a struct which must contain a pointer to a C-function. And it then keeps hold of it (the func at least) permanently. On the other hand, it's the only way any GUI apps can be created in WinAPI. The first meaningful thing one must do after starting a GUI app is to register a callback via this function. For now, it seemed to be doable (with syscall.NewCallback, and keeping the pointer \"heap-pinned\" by some global var). Losing that would completely disable possibility of creating GUI apps on Windows without cgo. Again, that would be a serious pity.\r\n\r\nsyscall.NewCallback returns an uintptr - address to the start of small asm function that eventually end up in Go function. None of that dependant on GC and is generated at compile time. I donâ€™t see any of that break in the near future. And we have a few tests to verify that. And there is some new windows GUI development work in golang.org/x/exp/shiny/driver/windriver happening, so there will be incentive to keep it all going.\r\n\r\nAlex\r\n",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-01T11:55:49Z",
	"updated_at": "2015-09-01T11:55:49Z"
}
