{
	"id": 244415814,
	"body": "@Merovius \r\n\u003e Pretty much every change to the stdlib breaks compatibility in theory and no one had ever trouble doing that. \r\n\r\nThe [compatibility policy](https://golang.org/doc/go1compat) specifically says:\r\n\u003e Under some circumstances, such as when the type is embedded in a struct along with another type, the addition of the new method may break the struct by creating a conflict with an existing method of the other embedded type. We cannot protect against this rare case and do not guarantee compatibility should it arise.\r\n\r\nThere is a difference between \"breaking compatibility\" and \"breaking compatibility in a way prohibited by the Go 1 policy\".  This proposal does the latter, not just the former.  That's a significant difference from most (all?) previous changes in the language spec since Go 1.",
	"user": {
		"login": "bcmills",
		"id": 5200974,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-02T15:59:16Z",
	"updated_at": "2016-09-02T15:59:16Z"
}
