{
	"id": 244431138,
	"body": "I commented here, because in the past it has been [pointed out to me](https://github.com/golang/go/issues/12302#issuecomment-160609727) that an all-or-nothing \"there could be a theoretical program that might get broken by this\" approach isn't the one chosen by go and because that exact approach is the one used to block this language change. I was hoping to steer this debate in a more nuanced and productive direction, not to pick nits.\r\n\r\nEveryone agrees, that this change would constitute a breakage in the sense of the go 1 compatibility guarantee. Yet, there have been plenty of such breakages in the past (with the versions of the compatibility guarantee published at that time) and a nuanced approach was advocated for and advertised then.\r\n\r\nEven if the final decision is going to be \"we are not going to make that breakage\", I still think talking about real-world breakages that could occur due to this change would be useful. At the very least much more useful than the straight refusal to even debate the notion of making an exception to stability.\r\n\r\n@puellanivis I'm sorry, but my intention of linking to that wasn't to debate that post again, but to give a written justification of my statement that stability has been broken in the past. Which it has. That is not debatable. Saying \"but only because the guarantee we gave was wrong\" isn't a valid argument that we did not violate the guarantee given.",
	"user": {
		"login": "Merovius",
		"id": 720787,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-02T17:00:12Z",
	"updated_at": "2016-09-02T17:00:46Z"
}
