{
	"id": 244441889,
	"body": "I'm not particularly looking to debate this either. But Im on the pro-change side, and I still regardless disagree with the very premises that you advance.\r\n\r\n\u003e … written justification of my statement that stability has been broken in the past. Which it has. That is not debatable.\r\n\r\nI'm going to need actual concrete examples, which you have not provided. Meanwhile, as I covered, none of these concerns have actually been done.\r\n\r\nIf you want me to agree that Go 1.x broke go1 backwards compat, then I need concrete examples, not just “theoretically, it could have broken if we made these changes.”\r\n\r\n\u003e Saying \"but only because the guarantee we gave was wrong\"\r\n\u003e “Methods. As with struct fields, it may be necessary to add methods to types”\r\n\r\nSo, the specification already covered struct fields. As such, the clarification made to the specification was not unprecedented. There was _already_ an exception for adding things to embedded structs. The change you linked to simply clarified further that “Methods are also subject to the same exception as Fields.”\r\n\r\nThis requires rewriting the fundamental rule about when two types are identical. From “If they're named, only if they're part of the same typedecl, otherwise different.” to “except if it's an interface, in which name will never be considered.” That is a big brand new whole exception to type handling that doesn't exist for any other type.",
	"user": {
		"login": "puellanivis",
		"id": 10839126,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-02T17:44:06Z",
	"updated_at": "2016-09-02T17:44:06Z"
}
