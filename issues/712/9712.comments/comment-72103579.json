{
	"id": 72103579,
	"body": "The issue doesn't seem to be related to runtime/pprof specifically.\r\nIt seems sysAlloc always fail after sysFree, when this pattern happens:\r\n\r\n```\r\nsysFree (0x30493000, 65536, 0x275f80)\r\nsysFree (0x304a3000, 65536, 0x275f80)\r\nsysFree (0x30483000, 65536, 0x275f80)\r\nsysAlloc (65536, 0x275f80)\r\n```\r\n\r\nFor example: TestTraceDoubleStart fails when executed after TestTraceStartStop:\r\n\r\n```\r\ncpu% go test -v -short\r\nsysReserve(0x300000, 806363136, 0xdfffee27)\r\nsbrk(806363136)\r\nsbrk return 0x281000\r\nsysAlloc (262144, 0x275f80)\r\nsbrk(262144)\r\nsbrk return 0x30383000\r\nsysAlloc return 0x30383000\r\nsysAlloc (65536, 0x275f80)\r\nsbrk(65536)\r\nsbrk return 0x303c3000\r\nsysAlloc return 0x303c3000\r\nsysAlloc (719996, 0x275f70)\r\nsbrk(719996)\r\nsbrk return 0x303d3000\r\nsysAlloc return 0x303d3000\r\n=== RUN TestMemoryProfiler\r\n--- PASS: TestMemoryProfiler (0.02s)\r\n=== RUN TestCPUProfile\r\n--- PASS: TestCPUProfile (0.00s)\r\n=== RUN TestCPUProfileMultithreaded\r\n--- PASS: TestCPUProfileMultithreaded (0.00s)\r\n=== RUN TestCPUProfileWithFork\r\nsysAlloc (1605672, 0x275f80)\r\nsbrk(1605672)\r\nsbrk return 0x30483000\r\nsysAlloc return 0x30483000\r\n--- PASS: TestCPUProfileWithFork (15.30s)\r\n=== RUN TestGoroutineSwitch\r\n--- SKIP: TestGoroutineSwitch (0.14s)\r\n\tpprof_test.go:96: profile too short: [0x0 0x3 0x0 0x2710 0x0 0x0 0x1 0x0]\r\n\tpprof_test.go:98: ignoring failure on plan9; see golang.org/issue/6047\r\n=== RUN TestMathBigDivide\r\n--- PASS: TestMathBigDivide (0.00s)\r\n=== RUN TestBlockProfile\r\n--- PASS: TestBlockProfile (0.21s)\r\n=== RUN TestTraceStartStop\r\nsysAlloc (65536, 0x275f80)\r\nsbrk(65536)\r\nsbrk return 0x3060c000\r\nsysAlloc return 0x3060c000\r\nsysAlloc (65536, 0x275f80)\r\nsbrk(65536)\r\nsbrk return 0x3061c000\r\nsysAlloc return 0x3061c000\r\nsysAlloc (65536, 0x275f80)\r\nsbrk(65536)\r\nsbrk return 0x3062c000\r\nsysAlloc return 0x3062c000\r\nsysFree (0x3061c000, 65536, 0x275f80)\r\nsysFree (0x3062c000, 65536, 0x275f80)\r\nsysFree (0x3060c000, 65536, 0x275f80)\r\n--- PASS: TestTraceStartStop (0.14s)\r\n=== RUN TestTraceDoubleStart\r\nsysAlloc (65536, 0x275f80)\r\nsbrk(65536)\r\nsbrk return nil\r\nsysAlloc return 0x0\r\nfatal error: trace: out of memory\r\n\r\ngoroutine 46 [running]:\r\nruntime.throw(0x19ac08, 0x14)\r\n\t/usr/go/src/runtime/panic.go:508 +0x71 fp=0x16840de0 sp=0x16840dd4\r\nruntime.traceFlush(0x0, 0x0)\r\n\t/usr/go/src/runtime/trace.go:511 +0x1f0 fp=0x16840e0c sp=0x16840de0\r\nruntime.traceEvent(0x10d, 0x16840ec4, 0x2, 0x2)\r\n\t/usr/go/src/runtime/trace.go:411 +0x68a fp=0x16840eb4 sp=0x16840e0c\r\nruntime.traceGoCreate(0x103820a0, 0x21940)\r\n\t/usr/go/src/runtime/trace.go:734 +0x99 fp=0x16840ee4 sp=0x16840eb4\r\nruntime.StartTrace(0x0, 0x0)\r\n\t/usr/go/src/runtime/trace.go:151 +0x146 fp=0x16840f40 sp=0x16840ee4\r\nruntime/pprof.StartTrace(0x303a1458, 0x103e5560, 0x0, 0x0)\r\n\t/usr/go/src/runtime/pprof/pprof.go:624 +0x30 fp=0x16840f5c sp=0x16840f40\r\nruntime/pprof_test.TestTraceDoubleStart(0x103e5500)\r\n\t/usr/go/src/runtime/pprof/trace_test.go:51 +0x6c fp=0x16840fb4 sp=0x16840f5c\r\ntesting.tRunner(0x103e5500, 0x259320)\r\n\t/usr/go/src/testing/testing.go:448 +0xb4 fp=0x16840fe8 sp=0x16840fb4\r\nruntime.goexit()\r\n\t/usr/go/src/runtime/asm_386.s:2408 +0x1 fp=0x16840fec sp=0x16840fe8\r\ncreated by testing.RunTests\r\n\t/usr/go/src/testing/testing.go:556 +0x833\r\n\r\ngoroutine 1 [chan receive]:\r\ntesting.RunTests(0x1d1018, 0x2592c0, 0xc, 0xc, 0x1)\r\n\t/usr/go/src/testing/testing.go:557 +0x86b\r\ntesting.(*M).Run(0x103c4060, 0x26f060)\r\n\t/usr/go/src/testing/testing.go:486 +0x5d\r\nmain.main()\r\n\truntime/pprof/_test/_testmain.go:76 +0x176\r\nexit status: 'pprof.test 23897: 2'\r\nFAIL\truntime/pprof\t15.970s\r\n```\r\n\r\nTestTraceDoubleStart succeed when ran individually:\r\n\r\n```\r\ncpu% go test -run TestTraceDoubleStart\r\nsysReserve(0x300000, 806363136, 0xdfffee27)\r\nsbrk(806363136)\r\nsbrk return 0x281000\r\nsysAlloc (262144, 0x275f80)\r\nsbrk(262144)\r\nsbrk return 0x30383000\r\nsysAlloc return 0x30383000\r\nsysAlloc (65536, 0x275f80)\r\nsbrk(65536)\r\nsbrk return 0x303c3000\r\nsysAlloc return 0x303c3000\r\nsysAlloc (719996, 0x275f70)\r\nsbrk(719996)\r\nsbrk return 0x303d3000\r\nsysAlloc return 0x303d3000\r\nsysAlloc (65536, 0x275f80)\r\nsbrk(65536)\r\nsbrk return 0x30483000\r\nsysAlloc return 0x30483000\r\nsysAlloc (65536, 0x275f80)\r\nsbrk(65536)\r\nsbrk return 0x30493000\r\nsysAlloc return 0x30493000\r\nsysAlloc (65536, 0x275f80)\r\nsbrk(65536)\r\nsbrk return 0x304a3000\r\nsysAlloc return 0x304a3000\r\nsysFree (0x30493000, 65536, 0x275f80)\r\nsysFree (0x304a3000, 65536, 0x275f80)\r\nsysFree (0x30483000, 65536, 0x275f80)\r\nPASS\r\nok  \truntime/pprof\t0.109s\r\n```\r\n\r\nTestTrace always fails:\r\n\r\n```\r\ncpu% go test -run TestTrace\r\nsysReserve(0x300000, 806363136, 0xdfffee27)\r\nsbrk(806363136)\r\nsbrk return 0x281000\r\nsysAlloc (262144, 0x275f80)\r\nsbrk(262144)\r\nsbrk return 0x30383000\r\nsysAlloc return 0x30383000\r\nsysAlloc (65536, 0x275f80)\r\nsbrk(65536)\r\nsbrk return 0x303c3000\r\nsysAlloc return 0x303c3000\r\nsysAlloc (719996, 0x275f70)\r\nsbrk(719996)\r\nsbrk return 0x303d3000\r\nsysAlloc return 0x303d3000\r\nsysAlloc (65536, 0x275f80)\r\nsbrk(65536)\r\nsbrk return 0x30483000\r\nsysAlloc return 0x30483000\r\nsysAlloc (65536, 0x275f80)\r\nsbrk(65536)\r\nsbrk return 0x30493000\r\nsysAlloc return 0x30493000\r\nsysAlloc (65536, 0x275f80)\r\nsbrk(65536)\r\nsbrk return 0x304a3000\r\nsysAlloc return 0x304a3000\r\nsysFree (0x30493000, 65536, 0x275f80)\r\nsysFree (0x304a3000, 65536, 0x275f80)\r\nsysFree (0x30483000, 65536, 0x275f80)\r\nsysAlloc (65536, 0x275f80)\r\nsbrk(65536)\r\nsbrk return nil\r\nsysAlloc return 0x0\r\nfatal error: trace: out of memory\r\n\r\ngoroutine 7 [running]:\r\nruntime.throw(0x19ac08, 0x14)\r\n\t/usr/go/src/runtime/panic.go:508 +0x71 fp=0x1039fde0 sp=0x1039fdd4\r\nruntime.traceFlush(0x0, 0x0)\r\n\t/usr/go/src/runtime/trace.go:511 +0x1f0 fp=0x1039fe0c sp=0x1039fde0\r\nruntime.traceEvent(0x10d, 0x1039fec4, 0x2, 0x2)\r\n\t/usr/go/src/runtime/trace.go:411 +0x68a fp=0x1039feb4 sp=0x1039fe0c\r\nruntime.traceGoCreate(0x103820a0, 0x21940)\r\n\t/usr/go/src/runtime/trace.go:734 +0x99 fp=0x1039fee4 sp=0x1039feb4\r\nruntime.StartTrace(0x0, 0x0)\r\n\t/usr/go/src/runtime/trace.go:151 +0x146 fp=0x1039ff40 sp=0x1039fee4\r\nruntime/pprof.StartTrace(0x30394bc0, 0x103e4420, 0x0, 0x0)\r\n\t/usr/go/src/runtime/pprof/pprof.go:624 +0x30 fp=0x1039ff5c sp=0x1039ff40\r\nruntime/pprof_test.TestTraceDoubleStart(0x103e43c0)\r\n\t/usr/go/src/runtime/pprof/trace_test.go:51 +0x6c fp=0x1039ffb4 sp=0x1039ff5c\r\ntesting.tRunner(0x103e43c0, 0x259320)\r\n\t/usr/go/src/testing/testing.go:448 +0xb4 fp=0x1039ffe8 sp=0x1039ffb4\r\nruntime.goexit()\r\n\t/usr/go/src/runtime/asm_386.s:2408 +0x1 fp=0x1039ffec sp=0x1039ffe8\r\ncreated by testing.RunTests\r\n\t/usr/go/src/testing/testing.go:556 +0x833\r\n\r\ngoroutine 1 [chan receive]:\r\ntesting.RunTests(0x1d1018, 0x2592c0, 0xc, 0xc, 0x1)\r\n\t/usr/go/src/testing/testing.go:557 +0x86b\r\ntesting.(*M).Run(0x103c4060, 0x26f060)\r\n\t/usr/go/src/testing/testing.go:486 +0x5d\r\nmain.main()\r\n\truntime/pprof/_test/_testmain.go:76 +0x176\r\nexit status: 'pprof.test 24086: 2'\r\nFAIL\truntime/pprof\t0.284s\r\n```",
	"user": {
		"login": "0intro",
		"id": 6043744,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-01-29T21:03:49Z",
	"updated_at": "2015-01-29T21:03:49Z"
}
