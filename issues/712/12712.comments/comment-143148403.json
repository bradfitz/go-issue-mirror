{
	"id": 143148403,
	"body": "To repeat, here is what I (and I would assume most application programmers) expect from LookupIP()\r\n\r\n* consistent behavior. Ordering of entries in configuration files should not matter. \r\n* the correct answer. The host \"doesnotexist.domain\" does not exist. I want that answer. That the DNS server has a corrupt database for a subdomain \"bar\" unrelated to my query is no excuse for giving the wrong answer to my query. I'm an application programmer. I support my application. I don't want support requests from users with the error description \"Your application says my DNS server is misbehaving. But it's working fine with every other application.\"\r\n* consistency across Go versions. In the same environment Go 1.4 gives a different answer than 1.5. BAD!\r\n* if there are multiple different errors that LookupIP() could return (in this case \"host not found\" and \"server misbehaving\") I want the error most closely related to MY CODE, because that's what I can debug. MY CODE requests resolving of \"doesnotexist.domain\" and the appropriate error is \"host not found\". That LookupIP() performs some additional queries behind-the-scenes to try extra hard to give me non-error reply is nice, but if that behind-the-scenes code fails, I'm not interested in its error code if there's an error code available directly related to my code.",
	"user": {
		"login": "mbenkmann",
		"id": 6864958,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-25T07:24:48Z",
	"updated_at": "2015-09-25T07:24:48Z"
}
