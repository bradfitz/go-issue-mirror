{
	"id": 51281770,
	"number": 4185,
	"state": "closed",
	"title": "encoding/binary: Handle struct padding in binary.Read",
	"body": "\u003cpre\u003eWhen encoding/decoding structs, it is often useful to insert padding between fields,\nespecially when working with foreign data formats. Using anonymous field names\n(underscore) is the most natural way to do this. binary.Write handles this just fine,\nbut binary.Read panics because the field '_' is unexported. If possible, this should be\nhandled as a special case.\n\nWhat steps will reproduce the problem?\n\u003ca href=\"http://play.golang.org/p/uDI-I9saFy\"\u003ehttp://play.golang.org/p/uDI-I9saFy\u003c/a\u003e\n\nWhat is the expected output?\n01 00 00 00 00 00 00 00 02 00 00 00\n{1 [0 0 0 0] 2}\n\nWhat do you see instead?\n01 00 00 00 00 00 00 00 02 00 00 00\npanic: reflect.Value.SetUint using value obtained using unexported field\n...\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nWindows 7\n\nWhich version are you using?  (run 'go version')\n1.0.3\u003c/pre\u003e",
	"user": {
		"login": "mxk",
		"id": 7256995,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2014-12-08T10:22:14Z",
	"created_at": "2012-10-02T15:00:07Z",
	"updated_at": "2016-06-24T22:25:54Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
