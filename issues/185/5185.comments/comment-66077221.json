{
	"id": 66077221,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5 by **elazarl**:\n\n\u003cpre\u003eIt might be the case that I'm missing something and making fool out of myself, but I'll\ntry to rephrase myself again:\n\nLet's try to give an example.\n\nSay you're running \"go run test.go maybe_an_arg.go\".\n\nThe Unix shell have a very clear interpretation of that, you'll get the \"char **argv\"\nequivalent to []string{\"go\", \"run\", \"test.go\", \"maybe_an_arg.go\"}.\n\nThe documentation states that go run accepts:\n\n    go run [build flags] [gofiles...] [arguments...]\n\nIt is not clear when does go stops treating the command line arguments as\n\"[gofiles...]\", and start treating the them as \"[arguments...]\". Reading the source of\n$GOROOT/cmd reveals that go stops treating argument as [gofiles..] after it encounters\nthe first argument without \".go\" suffix.\n\nIt'll be nice if this information was explicit in the documentation.\n\nDitto for go test, it would stop parsing command line arguments as package names when it\nfirst run into argument starting with hyphen. Makes sense, but it's nice to have it\ndocumented.\n\n(PS, maybe the standard library could expose command line parser of the Go language, and\nthen I'll care less  how rigorous documentation is, but that's another story)\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-04-08T06:57:59Z",
	"updated_at": "2014-12-08T10:27:47Z"
}
