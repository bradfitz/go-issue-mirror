{
	"id": 111860217,
	"body": "Thanks @methane and @dspezia. It's clear that we have a race between the two places that trigger stack barrier insertion (which map exactly to the two classes of tracebacks you saw, @dspezia). I think at this point we've solved the original memory corruption issues. There's still one other related issue involving channels that has an outstanding CL, but it seems to be uninvolved in these tests. I'll dig in to the race when installing stack barriers.\r\n\r\nIf you're still stress testing, note that it's possible for this race to manifest as other failures. If we fail to catch the race at the \"g already has stack barriers\" point, we could get an index out of bounds in the runtime. I think it's also possible, though unlikely, for this race to cause the runtime to re-scan too little of the stack, which could cause a missed mark, which could manifest as memory corruption.",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-14T18:18:20Z",
	"updated_at": "2015-06-14T18:18:20Z"
}
