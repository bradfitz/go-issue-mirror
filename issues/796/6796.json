{
	"id": 51285737,
	"number": 6796,
	"state": "closed",
	"title": "go/types: incorrect type recorded for comma-ok expression",
	"body": "\u003cpre\u003eA parenthesized type assertion in a comma,ok context doesn't get a recorded comma-ok\ntype: it gets a scalar type and only the enclosing ParenExpr gets a tuple.\n\nI've instrumented the record functions below so you can see it in the log.\n\ncheers\nalan\n\n\n% cat c.go\n\npackage main \n\nfunc main() {\n   var i interface{} \n   v, ok := (i.(*int))\n   print(v, ok)\n}\n\n% ./ssadump c.go\nrecordTypeAndValue(\u0026quot;\u0026lt;expr *ast.InterfaceType\u0026gt;\u0026quot;, interface{})\nrecordTypeAndValue(\u0026quot;i\u0026quot;, interface{})\nrecordTypeAndValue(\u0026quot;int\u0026quot;, int)\nrecordTypeAndValue(\u0026quot;*int\u0026quot;, *int)\nrecordTypeAndValue(\u0026quot;i.(*int)\u0026quot;, *int)\nrecordTypeAndValue(\u0026quot;(i.(*int))\u0026quot;, *int)\nrecordCommaOkTypes(\u0026quot;(i.(*int))\u0026quot;, *int, bool)\nrecordTypeAndValue(\u0026quot;print\u0026quot;, invalid type)\nrecordTypeAndValue(\u0026quot;v\u0026quot;, *int)\nrecordTypeAndValue(\u0026quot;ok\u0026quot;, bool)\nrecordTypeAndValue(\u0026quot;print\u0026quot;, func(*int, bool))\nrecordTypeAndValue(\u0026quot;print(v, ok)\u0026quot;, ())\npanic: interface conversion: types.Type is *types.Pointer, not *types.Tuple\n\ncode.google.com/p/go.tools/ssa.(*builder).exprN(0x7f8288597c8f, 0xc210021b40,\n0x7f828871f838, 0xc210037cf0, 0x7f828871fa01, ...)\n        /home/adonovan/go3/got/src/code.google.com/p/go.tools/ssa/builder.go:216 +0x857\n...\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2014-12-08T10:37:47Z",
	"created_at": "2013-11-20T04:02:44Z",
	"updated_at": "2016-06-25T01:22:37Z"
}
