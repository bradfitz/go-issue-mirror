{
	"id": 51285565,
	"number": 6689,
	"state": "open",
	"title": "runtime/race: detect when program synchronizes with time.Sleep",
	"body": "\u003cpre\u003eThere is a common pattern of \u0026quot;synchronization\u0026quot;:\n\nvar result ...\ngo func() {\n  ...\n  result = ...\n}()\ntime.Sleep(time.Second)  // 1 second should be enough for everyone\nif bad(result) {\n  complain()\n}\n\nC++ ThreadSanitizer prints a useful \u0026quot;As if synchronized via sleep\u0026quot; message\nwith a stack trace of the sleep:\n\u003ca href=\"http://llvm.org/viewvc/llvm-project/compiler-rt/trunk/lib/tsan/lit_tests/sleep_sync.cc?view=markup\"\u003ehttp://llvm.org/viewvc/llvm-project/compiler-rt/trunk/lib/tsan/lit_tests/sleep_sync.cc?view=markup\u003c/a\u003e\n\nIt would be useful to do the same for Go.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "RaceDetector"
		}
	],
	"comments": 3,
	"created_at": "2013-10-30T08:25:57Z",
	"updated_at": "2015-04-14T19:45:21Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
