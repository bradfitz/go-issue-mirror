{
	"id": 107309303,
	"number": 12689,
	"state": "closed",
	"title": "Sidecar .c files not compiled with cgo when building c archives",
	"body": "\u003e Go 1.5.1 on OS X 10.10.5 with Xcode 7\r\n\r\nAccording to the [official documentation](http://golang.org/cmd/cgo/) for cgo:\r\n\r\n\u003e When the Go tool sees that one or more Go files use the special import \"C\", it will look for other non-Go files in the directory and compile them as part of the Go package. Any .c, .s, or .S files will be compiled with the C compiler. Any .cc, .cpp, or .cxx files will be compiled with the C++ compiler.\r\n\r\nThis doesn't seem to be the case anymore or something there's a bug somewhere related to c archives: my source directory contains:\r\n- `main.go`\r\n- `common.h`\r\n- `common.c`\r\n\r\n`main.go` starts with:\r\n```\r\npackage main\r\n\r\n/*\r\n#include \"common.h\"\r\n*/\r\nimport \"C\"\r\nimport \"unsafe\"\r\n[...]\r\n```\r\n\r\nWhen compiling the `.go` file, it does find `common.h` but does not compile `common.c`:\r\n```\r\ngo build -pkgdir=/Users/pol/Source/Go-Bridge/go-1.5.1/pkg_cross/MacOSX_x86_64 -v -x -buildmode=c-archive -o /Users/pol/Source/Go-Bridge/build/macosx/main.a main.go\r\nWORK=/var/folders/mm/pqphm2md7k56y5tshf1s9jyr0000gp/T/go-build081061024\r\ngithub.com/satori/go.uuid\r\nmkdir -p $WORK/github.com/satori/go.uuid/_obj/\r\nmkdir -p $WORK/github.com/satori/\r\ncd /Users/pol/Source/Go-Bridge/go/src/github.com/satori/go.uuid\r\n/Users/pol/Source/Go-Bridge/go-1.5.1/pkg/tool/darwin_amd64/compile -o $WORK/github.com/satori/go.uuid.a -trimpath $WORK -p github.com/satori/go.uuid -complete -buildid b2a6d969e469e8bf1b75c0bf64f31f75330dcf86 -D _/Users/pol/Source/Go-Bridge/go/src/github.com/satori/go.uuid -I $WORK -I /Users/pol/Source/Go-Bridge/go-1.5.1/pkg_cross/MacOSX_x86_64 -pack ./uuid.go\r\ncommand-line-arguments\r\nmkdir -p $WORK/command-line-arguments/_obj/\r\nmkdir -p $WORK/command-line-arguments/_obj/exe/\r\ncd /Users/pol/Source/Go-Bridge/go\r\nCGO_LDFLAGS=\"-isysroot\" \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk\" \"-arch\" \"x86_64\" \"-mmacosx-version-min=10.8\" .-1.5.1/pkg/tool/darwin_amd64/cgo -objdir $WORK/command-line-arguments/_obj/ -importpath command-line-arguments -exportheader=$WORK/command-line-arguments/_obj/_cgo_install.h -- -I $WORK/command-line-arguments/_obj/ -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk -arch x86_64 -mmacosx-version-min=10.8 main.go\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -I . -fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fno-common -print-libgcc-file-name\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -I . -fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fno-common -I $WORK/command-line-arguments/_obj/ -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk -arch x86_64 -mmacosx-version-min=10.8 -o $WORK/command-line-arguments/_obj/_cgo_main.o -c $WORK/command-line-arguments/_obj/_cgo_main.c\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -I . -fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fno-common -I $WORK/command-line-arguments/_obj/ -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk -arch x86_64 -mmacosx-version-min=10.8 -o $WORK/command-line-arguments/_obj/_cgo_export.o -c $WORK/command-line-arguments/_obj/_cgo_export.c\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -I . -fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fno-common -I $WORK/command-line-arguments/_obj/ -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk -arch x86_64 -mmacosx-version-min=10.8 -o $WORK/command-line-arguments/_obj/main.cgo2.o -c $WORK/command-line-arguments/_obj/main.cgo2.c\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -I . -fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fno-common -o $WORK/command-line-arguments/_obj/_cgo_.o $WORK/command-line-arguments/_obj/_cgo_main.o $WORK/command-line-arguments/_obj/_cgo_export.o $WORK/command-line-arguments/_obj/main.cgo2.o -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk -arch x86_64 -mmacosx-version-min=10.8\r\n# command-line-arguments\r\nUndefined symbols for architecture x86_64:\r\n  \"_CBridge\", referenced from:\r\n      __cgo_97887027ee28_Cfunc_CBridge in main.cgo2.o\r\n     (maybe you meant: __cgo_97887027ee28_Cfunc_CBridge)\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nCommand /bin/sh failed with exit code 2\r\n```",
	"user": {
		"login": "swisspol",
		"id": 627915,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2015-09-19T04:29:17Z",
	"created_at": "2015-09-19T04:22:36Z",
	"updated_at": "2015-09-19T04:39:34Z"
}
