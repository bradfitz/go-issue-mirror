{
	"id": 144678745,
	"body": "@akavel: one should distinguish selectors from the rules you mention. The rules you refer to (which are defined in CLDR) would be used by the plural package to map numbers to a small set of plural categories (in the case of your example: single, few and many). The selectors subsequently pick alternatives based on these simplified categories.  The maximum number of such categories, IIRC, is 6 (e.g. for Arabic).\r\nMost localization frameworks that support plural, allow selecting on these categories only. ICU adds selecting on the number value (using \"=\"). The matching algorithm defined in this proposal is a bit different from ICU, allowing also for Vars and selecting on \"\u003c\" and \"\u003e\".  The selectors will often be generated or written by translators (with the help of a GUI) so they should remain simple.\r\n\r\nIn my foreseen implementation, it is really up to the feature implementation to interpret selectors. This means that there is a lot of flexibility in supporting wild feature value matching. However, if one looks at linguistic grammars like LFG and HSPG, which use many more features, the set of possible feature values is usually small.\r\n\r\nThe doc is indeed a bit sparse here (as well as all other topics, really).",
	"user": {
		"login": "mpvl",
		"id": 6445383,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-01T09:45:14Z",
	"updated_at": "2015-10-01T09:45:14Z"
}
