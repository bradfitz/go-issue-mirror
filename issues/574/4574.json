{
	"id": 51282327,
	"number": 4574,
	"state": "closed",
	"title": "net/http: $no_proxy handling requires domains to be prefixed with a .",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n1. export no_proxy=example.com\n2. run a go program that connects to foo.example.com via http\n\nWhat is the expected output?\nrequest bypasses the proxy\n\nWhat do you see instead?\nrequest hits the proxy. setting no_proxy=.example.com causes the proxy to be bypassed.\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n\nWhich operating system are you using?\nLinux or MacOS\n\nWhich version are you using?  (run 'go version')\n1.0.3 or 0c135754c93a\n\nPlease provide any additional information below.\n\nThis is counter to the implementation of no_proxy handling in other common places. For\nexample, Python:\n\n\u003ca href=\"http://hg.python.org/cpython/file/c744b6f8a09a/Lib/urllib/request.py#l2381\"\u003ehttp://hg.python.org/cpython/file/c744b6f8a09a/Lib/urllib/request.py#l2381\u003c/a\u003e\n\nor curl actually handles both cases, but the dot-prefixed version appears to be for\nlegacy purposes:\n\n\u003ca href=\"https://github.com/bagder/curl/blob/master/lib/url.c#L3936\"\u003ehttps://github.com/bagder/curl/blob/master/lib/url.c#L3936\u003c/a\u003e\n\nThe relevant part in the Go standard library appears to be\n\u003ca href=\"http://code.google.com/p/go/source/browse/src/pkg/net/http/transport.go#453\"\u003ehttp://code.google.com/p/go/source/browse/src/pkg/net/http/transport.go#453\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "kisielk",
		"id": 58618,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:24:19Z",
	"created_at": "2012-12-19T22:11:09Z",
	"updated_at": "2016-06-24T22:30:18Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
