{
	"id": 165692319,
	"number": 16383,
	"state": "open",
	"title": "proposal: cmd/go: Add a go new command to alleviate new user confusion",
	"body": "As  #12488 mentions new users often have trouble understanding what the `GOPATH` environment variable is for, how to set it up, and how to use it. \r\n\r\nTo alleviate confusion I suggest we add a `go new` command. It would create a new project and serve as a introduction to new users. On first run it may look like:\r\n\r\n```\r\n~ $ go new\r\nEnter a project name. This typically looks like: github.com/user/project\r\n\u003e user/entered/name\r\nYou do not seem to have a $GOPATH set. This is required for go to manage dependencies.\r\n$GOPATH location [/home/username/go]:\r\n\u003e \r\n~/go/src/user/entered/name $\r\n```\r\n\r\nThe tool would then create the $GOPATH structure, and add it to wherever you add $GOPATH on your os. It might also copy the default go playground example, or similar, to the new project directory and `cd` there. It could also, optionally, add `$GOPATH/bin` to your $PATH, or at least give guidance on how go install works.\r\n\r\nSubsequent runs could just be:\r\n```\r\n~ $ go new user/entered/name2\r\n~/go/src/user/entered/name $ \r\n\r\nor \r\n\r\n~ $ go new\r\nEnter a project name. This typically looks like: github.com/user/project\r\n\u003e user/entered/name2\r\n~/go/src/user/entered/name $\r\n```\r\n\r\nI think this would help new users understand the gopath structure hands-on, and get them writing code as opposed to dealing with environment variables.\r\n\r\n",
	"user": {
		"login": "Abextm",
		"id": 12366911,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"created_at": "2016-07-15T01:18:36Z",
	"updated_at": "2016-09-12T23:28:27Z",
	"milestone": {
		"id": 1373555,
		"number": 30,
		"title": "Proposal"
	},
	"reactions": {
		"total_count": 3,
		"+1": 1,
		"-1": 2
	}
}
