{
	"id": 214896902,
	"body": "Right, that's the exact fix I submitted in example.\n\nOn 26 Apr 2016, at 14:41, Robert Griesemer wrote:\n\n\u003e One could guard against it by rewriting the code in NewRequest\n\u003e ```\n\u003e if body != nil {\n\u003e \tswitch v := body.(type) {\n\u003e \tcase *bytes.Buffer:\n\u003e \t\treq.ContentLength = int64(v.Len())\n\u003e \tcase *bytes.Reader:\n\u003e \t\treq.ContentLength = int64(v.Len())\n\u003e \tcase *strings.Reader:\n\u003e \t\treq.ContentLength = int64(v.Len())\n\u003e \t}\n\u003e }\n\u003e ```\n\u003e as\n\u003e ```\n\u003e \tswitch v := body.(type) {\n\u003e         case nil:\n\u003e            // nothing to do\n\u003e \tcase *bytes.Buffer:\n\u003e                 if v != nil {\n\u003e                     req.ContentLength = int64(v.Len())\n\u003e                 }\n\u003e \tcase *bytes.Reader:\n\u003e                 if v != nil {\n\u003e \t\t     req.ContentLength = int64(v.Len())\n\u003e                 }\n\u003e \tcase *strings.Reader:\n\u003e                 if v != nil {\n\u003e \t\t     req.ContentLength = int64(v.Len())\n\u003e                 }\n\u003e \t}\n\u003e ```\n\u003e But this tends to be overkill and it's not like the rest our std \n\u003e library is written.\n\u003e\n\u003e\n\u003e ---\n\u003e You are receiving this because you were mentioned.\n\u003e Reply to this email directly or view it on GitHub:\n\u003e https://github.com/golang/go/issues/15455#issuecomment-214895977\n",
	"user": {
		"login": "erikh",
		"id": 18923,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-26T21:42:31Z",
	"updated_at": "2016-04-26T21:42:31Z"
}
