{
	"id": 134953549,
	"number": 14415,
	"state": "open",
	"title": "testing: wrong line number from t.Log when using \"log := t.Log\"",
	"body": "Consider the following test program:\r\n```\r\npackage my_test\r\n\r\nimport \"testing\"\r\n\r\nfunc TestLineNumber(t *testing.T) {\r\n\tlog := t.Log\r\n\tlog(\"test\")\r\n}\r\n```\r\n\r\nWhen run with `go test -v`, the output is:\r\n```\r\n=== RUN   TestLineNumber\r\n--- PASS: TestLineNumber (0.00s)\r\n\tmy_test.go:6: test\r\nPASS\r\n```\r\n\r\nThe line number is wrong - it should be 7, not 6.\r\n\r\nThe testing package internally uses `runtime.Caller(3)` to identify the user code calling the `testing.T` logging function. It appears that the `log := t.Log` line is implicitly creating a closure, i.e. adding to the depth of the call stack, resulting in an incorrect line number.",
	"user": {
		"login": "asadovsky",
		"id": 538767,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2016-02-19T19:35:13Z",
	"updated_at": "2016-02-19T19:38:18Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
