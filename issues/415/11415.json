{
	"id": 91166480,
	"number": 11415,
	"state": "open",
	"title": "go/importer: default importer should not use out of date type information",
	"body": "It is common to use go/types is as part of a go generate command\r\nor other command line tool to introspect a Go package.\r\n\r\nThe go tool goes to some lengths to ensure that whenever\r\nyou operate on a package, it builds the source for that\r\npackage into object form before using it, so you don't\r\nend up using symbol information that's out of date with respect\r\nto the source.\r\n\r\nWhen using go/types from a command line tool, you\r\ndon't have that luxury, and it's not necessarily appropriate\r\nto call \"go install\" automatically.\r\n\r\nI believe that a better way would be for the default\r\nimporter to use the object file data only if it's newer\r\nthan the source files, otherwise fall back to using the\r\nsource directly. Or at least it would be nice to have\r\nthat option, so that it's easy to make go generate\r\nutilities operate on the up to date code.\r\n\r\nI hope this could be considered before Go 1.5 as\r\nwe won't be able to change this behaviour after then.",
	"user": {
		"login": "rogpeppe",
		"id": 66491,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"created_at": "2015-06-26T06:13:21Z",
	"updated_at": "2016-10-07T18:41:43Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
