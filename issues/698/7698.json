{
	"id": 51287083,
	"number": 7698,
	"state": "closed",
	"title": "path: functions Split and Base are not the same on windows and linux",
	"body": "by **Gavin.Bong**:\n\n\u003cpre\u003eWhat does 'go version' print?\n\ngo version go1.2.1 windows/amd64\n\nWhat steps reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\n1. This code runs on ubuntu 12.04 \u003ca href=\"http://play.golang.org/p/40d_VGdt3Y\"\u003ehttp://play.golang.org/p/40d_VGdt3Y\u003c/a\u003e\n   and demonstrates that both path.Split and path.Base correctly returns\n   the filename at the end of the path.\n\n2. The following code (which can only work on windows because only windows has the TEMP\nenvironment variable). I use %TEMP% because it gives a canonical path on windows OS.\n\nimport \u0026quot;path\u0026quot;\nimport \u0026quot;path/filepath\u0026quot;\nimport \u0026quot;fmt\u0026quot;\nimport \u0026quot;os\u0026quot;\n\nfunc main() {\n   fmt.Println(\u0026quot;%TEMP% = \u0026quot;, os.Getenv(\u0026quot;TEMP\u0026quot;))\n   filename := os.Getenv(\u0026quot;TEMP\u0026quot;) + string(os.PathSeparator) + \u0026quot;video.mp4\u0026quot;\n\n   d, f := path.Split(filename)\n   base := path.Base(filename)\n\n   fmt.Println(\u0026quot;f=\u0026quot;, f)\n   fmt.Println(\u0026quot;d=\u0026quot;, d)\n   fmt.Println(base)\n}\n\nWhat happened?\n\nThe execution produced this output.\n\n1) %TEMP% = C:\\Users\\gavin\\AppData\\Local\\Temp\n2) f=C:\\Users\\gavin\\AppData\\Local\\Temp\\video.mp4\n3) d=\n4) C:\\Users\\gavin\\AppData\\Local\\Temp\\video.mp4\n\n\nWhat should have happened instead?\n\n1) Correct\n2) f=video.mp4\n3) d=C:\\Users\\gavin\\AppData\\Local\\Temp\n4) video.mp4\n\nPlease provide any additional information below.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:42:45Z",
	"created_at": "2014-04-03T07:48:00Z",
	"updated_at": "2016-06-25T01:31:23Z"
}
