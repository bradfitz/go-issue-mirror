{
	"id": 51283726,
	"number": 5498,
	"state": "closed",
	"title": "go/types: add IsAssignableTo predicate",
	"body": "\u003cpre\u003eMany clients will need something like this:\n\ntype Type interface {\n    ...\n    IsAssignableTo(Type) bool\n}\n\nThis is a generalization of the Implements predicate defined thus:\n  Implements(conc Type, iface *Interface) bool\nin which you always have a concrete type and an interface.\n\nFWIW, my code only needs the latter.  Specifically,\n\nssa/interp only need this method:\n  func MissingMethod(conc types.Type, iface *types.Interface) *types.Method\n\nssa/pointer only needs this method:\n  func ImplementsInterface(conc types.Type, iface *types.Interface) bool {\n    return MissingMethod(conc, iface) == nil\n  }\u003c/pre\u003e",
	"user": {
		"login": "adonovan",
		"id": 5658175,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:29:52Z",
	"created_at": "2013-05-17T19:42:17Z",
	"updated_at": "2016-06-24T22:40:24Z"
}
