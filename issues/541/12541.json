{
	"id": 105419128,
	"number": 12541,
	"state": "closed",
	"title": "cmd/doc: all identifiers for package \"builtin\" should be printed",
	"body": "Using ```go1.5```\r\n\r\nWhat I currently see:\r\n```\r\n$ go doc builtin\r\npackage builtin // import \"builtin\"\r\n\r\nPackage builtin provides documentation for Go's predeclared identifiers. The\r\nitems documented here are not actually in package builtin but their\r\ndescriptions here allow godoc to present documentation for the language's\r\nspecial identifiers.\r\n\r\ntype ComplexType complex64\r\ntype FloatType float32\r\ntype IntegerType int\r\ntype Type int\r\ntype Type1 int\r\n```\r\n\r\nWhat I expect to see (the equivalent of ```go doc -u builtin```:\r\n```\r\n$ go doc builtin \r\npackage builtin // import \"builtin\"\r\n\r\nPackage builtin provides documentation for Go's predeclared identifiers. The\r\nitems documented here are not actually in package builtin but their\r\ndescriptions here allow godoc to present documentation for the language's\r\nspecial identifiers.\r\n\r\nconst true = 0 == 0 ...\r\nconst iota = 0\r\nvar nil Type\r\nfunc append(slice []Type, elems ...Type) []Type\r\nfunc close(c chan\u003c- Type)\r\nfunc delete(m map[Type]Type1, key Type)\r\nfunc panic(v interface{})\r\nfunc print(args ...Type)\r\nfunc println(args ...Type)\r\nfunc recover() interface{}\r\nfunc complex(r, i FloatType) ComplexType\r\nfunc imag(c ComplexType) FloatType\r\nfunc real(c ComplexType) FloatType\r\nfunc make(Type, size IntegerType) Type\r\nfunc new(Type) *Type\r\nfunc cap(v Type) int\r\nfunc copy(dst, src []Type) int\r\nfunc len(v Type) int\r\ntype ComplexType complex64\r\ntype FloatType float32\r\ntype IntegerType int\r\ntype Type int\r\ntype Type1 int\r\ntype bool bool\r\ntype byte byte\r\ntype complex128 complex128\r\ntype complex64 complex64\r\ntype error interface { ... }\r\ntype float32 float32\r\ntype float64 float64\r\ntype int int\r\ntype int16 int16\r\ntype int32 int32\r\ntype int64 int64\r\ntype int8 int8\r\ntype rune rune\r\ntype string string\r\ntype uint uint\r\ntype uint16 uint16\r\ntype uint32 uint32\r\ntype uint64 uint64\r\ntype uint8 uint8\r\ntype uintptr uintptr\r\n```\r\n\r\nThe [web front-end](https://golang.org/pkg/builtin/) must do some magic to make this work as well.",
	"user": {
		"login": "dsnet",
		"id": 6354026,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2015-09-09T19:48:12Z",
	"created_at": "2015-09-08T16:27:20Z",
	"updated_at": "2015-09-09T19:48:12Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
