{
	"id": 118991410,
	"body": "It actually turns out that this isn't an SSL problem at all.  The same issue occurs if you just connect with Chrome and `ListenAndServe()`... \r\n\r\nSo websocket servers written in go are currently incompatible with most clients?\r\n\r\nI re-wrote the sample program to ignore TLS and Chrome still has a Forbidden 403:\r\n```go\r\npackage main\r\n\r\nimport (\r\n        \"golang.org/x/net/websocket\"\r\n        \"io\"\r\n        \"log\"\r\n        \"net/http\"\r\n)\r\n\r\nfunc copyTest(ws *websocket.Conn) {\r\n        io.Copy(ws, ws)\r\n}\r\n\r\nfunc main() {\r\n\r\n        // setup http handler\r\n        http.Handle(\"/test\", websocket.Handler(copyTest))\r\n\r\n        // start secure websocket server\r\n        log.Println(\"Listening for secure websocket connections on localhost port 8000...\")\r\n\r\n        if err := http.ListenAndServe(\":8000\", nil); err != nil {\r\n                panic(\"ListenAndServe Error: \" + err.Error())\r\n        }\r\n}\r\n```\r\n\r\n\r\nI also updated the client to not use SSL like so:\r\n```javascript\r\n\t\t\tvar ws = new WebSocket(\"ws://localhost:8000/test\");\r\n```",
	"user": {
		"login": "integrii",
		"id": 98695,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-06T20:36:15Z",
	"updated_at": "2015-07-06T20:46:38Z"
}
