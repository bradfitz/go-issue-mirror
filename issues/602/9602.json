{
	"id": 54486108,
	"number": 9602,
	"state": "closed",
	"title": "x/review/git-codereview: tests are broken",
	"body": "Two test failures across the board for git-codereview on build.golang.org at the bottom:\r\n\r\n```\r\n--- FAIL: TestGofmtFastForwardMerge (0.37s)\r\n\tutil_test.go:167: in git-client/, ran [git change dev.branch]: exit status 1\r\n\t\tgit: 'change' is not a git command. See 'git --help'.\r\n\t\t\r\n\t\tDid you mean this?\r\n\t\t\twhatchanged\r\n--- FAIL: TestHookCommitMsgBranchPrefix (0.24s)\r\n\tutil_test.go:167: in git-client/, ran [git change dev.cc]: exit status 1\r\n\t\tgit: 'change' is not a git command. See 'git --help'.\r\n\t\t\r\n\t\tDid you mean this?\r\n\t\t\twhatchanged\r\nFAIL\r\nFAIL\tgolang.org/x/review/git-codereview\t27.941s\r\n```\r\n\r\nand\r\n\r\n```\r\n--- FAIL: TestLoadAuth (0.23s)\r\n\tutil_test.go:167: in git-client/, ran [git branch --set-upstream-to origin/master]: exit status 129\r\n\t\terror: unknown option `set-upstream-to'\r\n\t\tusage: git branch [options] [-r | -a] [--merged | --no-merged]\r\n\t\t   or: git branch [options] [-l] [-f] \u003cbranchname\u003e [\u003cstart-point\u003e]\r\n\t\t   or: git branch [options] [-r] (-d | -D) \u003cbranchname\u003e...\r\n\t\t   or: git branch [options] (-m | -M) [\u003coldbranch\u003e] \u003cnewbranch\u003e\r\n\t\t\r\n\t\tGeneric options\r\n\t\t    -v, --verbose         show hash and subject, give twice for upstream branch\r\n\t\t    -t, --track           set up tracking mode (see git-pull(1))\r\n\t\t    --set-upstream        change upstream info\r\n\t\t    --color[=\u003cwhen\u003e]      use colored output\r\n\t\t    -r, --remotes         act on remote-tracking branches\r\n\t\t    --contains \u003ccommit\u003e   print only branches that contain the commit\r\n\t\t    --abbrev[=\u003cn\u003e]        use \u003cn\u003e digits to display SHA-1s\r\n\t\t\r\n\t\tSpecific git-branch actions:\r\n\t\t    -a, --all             list both remote-tracking and local branches\r\n\t\t    -d, --delete          delete fully merged branch\r\n\t\t    -D                    delete branch (even if not merged)\r\n\t\t    -m, --move            move/rename a branch and its reflog\r\n\t\t    -M                    move/rename a branch, even if target exists\r\n\t\t    --list                list branch names\r\n\t\t    -l, --create-reflog   create the branch's reflog\r\n\t\t    --edit-description    edit the description for the branch\r\n\t\t    -f, --force           force creation (when already exists)\r\n\t\t    --no-merged \u003ccommit\u003e  print only not merged branches\r\n\t\t    --merged \u003ccommit\u003e     print only merged branches\r\n\t\t\r\ngit rev-parse --abbrev-ref newbranch@{u}\r\nerror: No upstream branch found for 'newbranch'\r\nerror: No upstream branch found for 'newbranch'\r\nfatal: ambiguous argument 'newbranch@{u}': unknown revision or path not in the working tree.\r\nUse '--' to separate paths from revisions\r\nnewbranch@{u}\r\n\r\n/tmp/go-build208545717/golang.org/x/review/git-codereview/_test/git-codereview.test: exit status 128\r\nFAIL\tgolang.org/x/review/git-codereview\t0.427s\r\n```\r\n\r\n/cc @minux @adg",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 9,
	"closed_at": "2016-01-29T19:30:03Z",
	"created_at": "2015-01-15T18:32:36Z",
	"updated_at": "2016-01-29T19:30:03Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
