{
	"id": 51287898,
	"number": 8241,
	"state": "closed",
	"title": "fmt: stack overflow with recursive slice input and formatters %v/%#v",
	"body": "by **2852914**:\n\n\u003cpre\u003eWhat does 'go version' print?\n\ngo version go1.3 linux/amd64\n\nWhat steps reproduce the problem?\n\nPassing a slice that contains itself to a fmt.* function with either an implicit or\nexplicit %v formatter will result in an infinite recursion.\n\n\u003ca href=\"http://play.golang.org/p/qjG87yG_LA\"\u003ehttp://play.golang.org/p/qjG87yG_LA\u003c/a\u003e\n\nWhat happened?\n\nInfinite recursion inside the printing logic, stack limit reached.\n\nWhat could have happened instead?\n\n1. The documentation for fmt mentions this recursion caveat, being obvious it could\nhappen this is just for clarification.\n2. The fmt functions need to keep track of what it has printed and not try to print\nrecursive values.\n3. The fmt functions keep track of what it prints and panics (or error) with a more\nsensible message when it detects recursion.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2014-12-08T10:45:44Z",
	"created_at": "2014-06-19T20:22:42Z",
	"updated_at": "2016-06-25T01:36:48Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
