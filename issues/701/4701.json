{
	"id": 51282503,
	"number": 4701,
	"state": "closed",
	"title": "cmd/go: consistent reporting for test compilation errors",
	"body": "by **gerg.ward**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. unzip the attached zip file\n2. cd test-reporting\n2. go test\n\nWhat is the expected output?\n\n# _/tmp/test-reporting\nx_test.go:16:15: expected identifier\nFAIL\t_/tmp/test-reporting [build failed]\n\nWhat do you see instead?\n# _/tmp/test-reporting\nx_test.go:16:15: expected identifier\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n6g\n\nWhich operating system are you using?\n\nUbuntu 12.10 (quantal)\n\nWhich version are you using?  (run 'go version')\n\ngo version devel +fa2a0aff01f7 Thu Jan 24 20:46:33 2013 +1100 linux/amd64\n\n(can also reproduce with 1.0.3)\n\nPlease provide any additional information below.\n\nThe difference between expected and actual output is subtle, and only a problem when\nrunning lots of tests. It's particularly confusing when you have multiple failures, some\nof which are reported with the big obvious \u0026quot;FAIL\u0026quot;, and some of which are just\nburied in compiler output two pages up.\n\nThe particular compilation error that triggers this for me is\n\n  func setup() (boguspkg.bogustype, y int) {\n  }\n\ni.e. a syntax error combined with a non-existent package. It seems to take *two* errors\nto cause this situation. Full working example attached: go-test-error-reporting.zip.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/4701/0/go-test-error-reporting.zip\"\u003ego-test-error-reporting.zip\u003c/a\u003e (817 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:24:53Z",
	"created_at": "2013-01-24T14:15:03Z",
	"updated_at": "2016-06-24T22:31:42Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
