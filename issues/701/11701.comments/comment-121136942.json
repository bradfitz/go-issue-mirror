{
	"id": 121136942,
	"body": "I get `go` is block scoped, most languages are. Scoping is for **type** and **value** deduction of variable not its usage. If we limit the usage as well, then accessing a variable declared inside an `if`, `for` block, across the function should throw an error too. \r\nAlso, as per http://golang.org/ref/spec#Variable_declarations \r\n*Implementation restriction: A compiler may make it illegal to declare a variable inside a function body if the variable is never used.*\r\n\r\nas it says: **illegal if its not used inside the function body**\r\n\r\nI accept that parsing usage across branched scoping throughout the function body will be a pain, but that will be the ideal behaviour. Else, it will result in lot of unnecessary variable assignments here and there in heavily nested codes.",
	"user": {
		"login": "agaurav",
		"id": 1772870,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-14T05:37:58Z",
	"updated_at": "2015-07-14T05:39:29Z"
}
