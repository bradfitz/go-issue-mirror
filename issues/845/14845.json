{
	"id": 141571665,
	"number": 14845,
	"state": "closed",
	"title": "x/tools/imports: cannot resolve symlinks",
	"body": "When the import resolver walks GOPATH for possible packages to import, it does not follow symbolic links. This causes issues during automatic code generation when the host environment was not set up for a Go workflow and the generator itself is emulating a Go workspace via symbolic links. \r\n\r\nAlthough some threads mention that Go tools do not like symbolic links, the `x/tools/loader` seems perfectly happy to load the packages from symlinked paths, so there's an inconsistency in what one tool accepts and another doesn't.\r\n\r\nThe issue is at two places in the code:\r\n\r\n * https://github.com/golang/tools/blob/master/imports/fix.go#L213\r\n * https://github.com/golang/tools/blob/master/imports/fix.go#L254\r\n\r\nwhere only real subfolders are followed, but not symlinks.\r\n\r\nA simple solution is to add `|| child.Mode()\u0026os.ModeSymlink == os.ModeSymlink`, but that could lead to circular symlinks (which is probably the reason why it wasn't implemented in the first place). However that should be solvable by maintaining a list of physical paths already seen ad ignoring the symlink if it couples back to such a path.",
	"user": {
		"login": "karalabe",
		"id": 129561,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-06-09T03:45:16Z",
	"created_at": "2016-03-17T12:41:20Z",
	"updated_at": "2016-06-09T03:45:16Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
