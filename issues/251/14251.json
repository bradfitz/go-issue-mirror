{
	"id": 132023156,
	"number": 14251,
	"state": "closed",
	"title": "x/crypto/ssh: Return better error message for non-zero exit codes",
	"body": "**Version**\r\n`go version go1.5.3 darwin/amd64`\r\n\r\n**What I did**\r\nI executed a script on a remote server through SSH.\r\n```\r\nif err := sesh.Run(\"/home/jaime/fail.sh\"); err != nil {\r\n    log.Println(err)\r\n}\r\n```\r\nThis is `fail.sh`.\r\n```\r\n#!/bin/sh\r\nexit 1\r\n```\r\n\r\n**What I expected to see**\r\nI expected to see a clear and concise error. Maybe something like: `Process exited with: 1.`\r\n\r\n**What I saw instead**\r\nI saw a slightly confusing and half-useless error: `Process exited with: 1. Reason was:  ()`\r\n\r\nThe code in question is here, [crypto/ssh/session.go:604]. This is happening because it's `Sprintf`ing empty `w.msg` and `w.signal` values. This doesn't seem right.\r\n\r\n[crypto/ssh/session.go:604]: https://github.com/golang/crypto/blob/master/ssh/session.go#L604",
	"user": {
		"login": "variadico",
		"id": 4296393,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "HelpWanted"
		}
	],
	"comments": 9,
	"closed_at": "2016-04-20T10:39:19Z",
	"created_at": "2016-02-07T22:58:26Z",
	"updated_at": "2016-06-29T21:48:23Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
