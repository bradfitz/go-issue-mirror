{
	"id": 51286143,
	"number": 7066,
	"state": "open",
	"title": "gccgo/arm64: inaccuracies in complex division",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n1. Set up the preview go environment described here:\n\u003ca href=\"https://groups.google.com/d/msg/golang-dev/zHkWq3D92-4/5CI0bzTGO1sJ\"\u003ehttps://groups.google.com/d/msg/golang-dev/zHkWq3D92-4/5CI0bzTGO1sJ\u003c/a\u003e\n2. Put this in a file:\n\npackage main\n\nfunc main() {\n\tc5 := 1 + 3i\n\tcd := c5 / c5\n\tprintln(cd)\n\tif cd != 1+0i {\n\t\tprintln(\u0026quot;fail\u0026quot;)\n\t}\n}\n\n3. Run it with go run.\n\nWhat is the expected output?\n\n(+1.000000e+000+0.000000e+000i)\n\nWhat do you see instead?\n\n(+1.000000e+000-1.665335e-017i)\nfail\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\ngccgo from both the 4.8 branch and mainline (as of a couple of weeks ago).\n\nWhich operating system are you using?\n\nUbuntu Trusty.\n\nPlease provide any additional information below.\n\nThis could perhaps be a result of FPU modes being set incorrectly, maybe to\nround-to-negative-infinity?  It's pretty odd.\u003c/pre\u003e",
	"user": {
		"login": "mwhudson",
		"id": 672022,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"created_at": "2014-01-06T06:58:58Z",
	"updated_at": "2015-04-15T17:34:38Z",
	"milestone": {
		"id": 1069171,
		"number": 23,
		"title": "Gccgo"
	}
}
