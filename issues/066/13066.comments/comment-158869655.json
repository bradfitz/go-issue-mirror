{
	"id": 158869655,
	"body": "@rakyll Thanks for this request, that's exactly the reason I'm asking for this too. As a user I just like to install a Go compiler to compile my programs from source. I really don't like to bother with bootstrapping and compiling the Go compiler myself. It takes hours and hours and I run constantly into some problems. Right now each and every user has to do this steps, without detailed informations about the official or recommended way (sorry Go team, it's not well documented right now)! That's just cumbersome and boring and leads to errors and frustrated users.\r\n\r\nFor this reason I did created a public repo with all the details. We could use it in the meantime until pre-compiled Go tarballs are available for all ARM versions. How to compile Go on ARM devices for 1.4 and 1.5 is essential to know. The build process is documented and, it just requires `gcc` and a pure Linux distro. Everything is open and scripted in bash and there is a Dockerfile too as and example.\r\n\r\nBut you don't have to compile Go by your own on a slow ARM device, I just included all pre-compiled tarballs for the recent Go 1.4 and 1.5 releases as a GitHub release. Just download and install it the usual way:\r\n- Go 1.4.3 (ARMv6, ARMv7)\r\n- Go 1.5.1 (ARMv5. ARMv6, ARMv7)\r\nhttps://github.com/hypriot/golang-armbuilds/releases\r\n\r\nI feel, it's mandatory to provide 100% transparancy - that's open source for me. With a complete build documentation everybody can bootstrap Go on any Linux device just with `gcc`. For all the builds we should include all log files for all released builds. And for the users we just need the ready-to-use tarballs to safe time and avoid problems.\r\n\r\n*Disclamer:* my repo is WIP now and will hopefully superseeded by official downloads soon.",
	"user": {
		"login": "DieterReuter",
		"id": 3758971,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-23T07:34:56Z",
	"updated_at": "2015-11-23T07:34:56Z"
}
