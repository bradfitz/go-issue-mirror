{
	"id": 66047862,
	"body": "\u003ca id=\"c14\"\u003e\u003c/a\u003eComment 14:\n\n\u003cpre\u003eThe only change I was able to make that had any affect was to compile the 'ab' binary\nsuch that it set \nSO_LINGER with a linger time of 0 seconds.  At that point, I got these results.\n\nServer Software:        \nServer Hostname:        127.0.0.1\nServer Port:            12345\n\nDocument Path:          /hello\nDocument Length:        16 bytes\n\nConcurrency Level:      1\nTime taken for tests:   27.913 seconds\nComplete requests:      100000\nFailed requests:        0\nWrite errors:           0\nTotal transferred:      7600000 bytes\nHTML transferred:       1600000 bytes\nRequests per second:    3582.62 [#/sec] (mean)\nTime per request:       0.279 [ms] (mean)\nTime per request:       0.279 [ms] (mean, across all concurrent requests)\nTransfer rate:          265.90 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    0   0.1      0      14\nProcessing:     0    0   0.6      0      27\nWaiting:        0    0   0.6      0      20\nTotal:          0    0   0.6      0      41\n\nPercentage of the requests served within a certain time (ms)\n  50%      0\n  66%      0\n  75%      0\n  80%      0\n  90%      0\n  95%      0\n  98%      0\n  99%      1\n 100%     41 (longest request)\n\nEven having a socket linger time of 1 second was sufficient to trigger the socket\nexhaustion problem.\n\nNo changes were necessary on the Go side.  Modified Go network code with explicit socket\nshutdown() calls \nand setting SO_LINGER and SO_REUSEADDR had no effect on performance.\u003c/pre\u003e",
	"user": {
		"login": "wcn3",
		"id": 4626810,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2009-11-18T06:03:47Z",
	"updated_at": "2014-12-08T10:03:07Z"
}
