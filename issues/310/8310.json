{
	"id": 51288012,
	"number": 8310,
	"state": "closed",
	"title": "cmd/cgo: do not let Go pointers end up in C",
	"body": "\u003cpre\u003eWe need some way to prevent Go pointers from crossing the boundary into C.\n\nPeople write code like (calling a C function that takes a T* to fill in).\n\nvar x C.T\nC.f(\u0026amp;x)\n\nOne option is to disallow this - a Go pointer \u0026amp;x is being passed to C.\n\nAnother option is to have cgo's wrapper for C.f do a shallow copy into an allocated C\npointer, then run f, then copy the data back into the original Go data, then free the\nallocated C pointer, then return.\n\nIf the second option handles 99% of the pointers being passed, then we probably should\ndo it. On the other hand, the free might create a dangling pointer that could confuse\npeople. At least it's a dangling pointer into the C heap and not the Go heap. :-)\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 35,
	"closed_at": "2016-01-07T02:18:50Z",
	"created_at": "2014-07-01T20:21:46Z",
	"updated_at": "2016-01-07T02:18:50Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
