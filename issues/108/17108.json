{
	"id": 177013285,
	"number": 17108,
	"state": "open",
	"title": "go/ast: provide AST Rewrite functionality (ast.Walk is not good enough)",
	"body": "This has come up again and again. While it's easy to traverse the AST (ast.Walk, ast.Inspect), it's not easily possible to use those for general tree rewrites w/o significant amount of work.\r\n\r\nFor instance, if we wanted to rewrite all expressions (ast.Expr) of a certain kind into something else, ast.Walk and ast.Inspect would need to consider every node that contains ast.Expr fields separately, rather than just look at nodes that satisfy ast.Expr.\r\n\r\nAST rewriters exist in other packages; most notably perhaps in gofmt (for gofmt -r); that one is reflection-based. Reflection-based approaches tend to be general, but also hard to understand, and slower than necessary.\r\n\r\nAPI starting point:\r\n\r\n```\r\n// An ApplyFunc is invoked by Apply for each node, before and/or after\r\n// the node's children. See Apply for the interpretation of the return\r\n// value.\r\n//\r\n// The node is given by the node pointer's address addr which makes it\r\n// possible for an ApplyFunc to rewrite the node. The node's parent is\r\n// the node containing the *addr. If the node is part of a list, index\r\n// identifies its position in that list. Index is \u003c 0 otherwise.\r\ntype ApplyFunc func(parent Node, index int, addr interface{}) bool\r\n\r\n// Apply traverses a syntax tree recursively, starting with the node\r\n// identified by parent, index, and addr. See Apply for the meaning\r\n// of these arguments.\r\n// \r\n// If pre is not nil, it is called for each node before its children\r\n// are traversed (pre-order). If the result of calling pre is false,\r\n// no children are traversed, and post is not called for the node.\r\n//\r\n// If post is not nil, it is called for each node after its children\r\n// were traversed (post-order). If the result of calling post is false,\r\n// traversal is terminated and Apply returns immediately.\r\nfunc Apply(parent Node, index int, addr interface{}, pre, post ApplyFunc) {\r\n```",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 16,
	"created_at": "2016-09-14T20:34:03Z",
	"updated_at": "2016-09-15T16:58:01Z",
	"milestone": {
		"id": 1748849,
		"number": 42,
		"title": "Go1.8Maybe"
	},
	"reactions": {
		"total_count": 2,
		"+1": 2
	}
}
