{
	"id": 237497951,
	"body": "I'm pretty sure this is a generic tcp stack wat. Listening addresses can go\ninto their version of TIMEWAIT2 until any tcp handshakes in progress have\ntimed out.\n\nOn Thu, 4 Aug 2016, 19:04 Emmanuel T Odeke \u003cnotifications@github.com\u003e wrote:\n\n\u003e Please answer these questions before submitting your issue. Thanks!\n\u003e\n\u003e    1.\n\u003e\n\u003e    What version of Go are you using (go version)?\n\u003e    - go version devel +50edddb Tue Aug 2 21:31:58 2016 +0000 darwin/amd64\n\u003e       - go1.6\n\u003e    2.\n\u003e\n\u003e    What operating system and processor architecture are you using (go env\n\u003e    )?\n\u003e    GOARCH=\"amd64\"\n\u003e    GOBIN=\"/Users/emmanuelodeke/go/bin\"\n\u003e    GOEXE=\"\"\n\u003e    GOHOSTARCH=\"amd64\"\n\u003e    GOHOSTOS=\"darwin\"\n\u003e    GOOS=\"darwin\"\n\u003e    GOPATH=\"/Users/emmanuelodeke/go\"\n\u003e    GORACE=\"\"\n\u003e    GOROOT=\"/Users/emmanuelodeke/go/src/go.googlesource.com/go\"\n\u003e    GOTOOLDIR=\"/Users/emmanuelodeke/go/src/\n\u003e    go.googlesource.com/go/pkg/tool/darwin_amd64\"\n\u003e    CC=\"clang\"\n\u003e    GOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics\n\u003e    -Qunused-arguments -fmessage-length=0\n\u003e    -fdebug-prefix-map=/var/folders/v3/7z434qpx5v3bw0wh8h2myfpw0000gn/T/go-build464848761=/tmp/go-build\n\u003e    -gno-record-gcc-switches -fno-common\"\n\u003e    CXX=\"clang++\"\n\u003e    CGO_ENABLED=\"1\n\u003e    3.\n\u003e\n\u003e    What did you do?\n\u003e    Ran a simple server. Sent it a SIGKILL, SIGABRT to the program and it\n\u003e    exited. However, the socket stays bound to the address of the \"killed\"\n\u003e    server hence any future reuses of the same port/address are impossible.\n\u003e\n\u003e\n\u003e    - Steps, run either https://play.golang.org/p/LorluoHyLW or its\n\u003e    variation https://play.golang.org/p/GvjCDDwaNf, get the program's PID\n\u003e    and then SIGTERM it.\n\u003e\n\u003e $ go run server.go --port-addr 4567 \u0026\n\u003e [1] 62314\n\u003e 2016/08/04 01:44:40 serving at :4567\n\u003e $ kill -9 62314\n\u003e [1]+  Killed: 9               go run server.go --port-addr 4567\n\u003e $ go run server.go --port-addr 4567\n\u003e 2016/08/04 01:46:36 serving at :4567\n\u003e 2016/08/04 01:46:36 listen tcp :4567: bind: address already in useexit status 1\n\u003e\n\u003e You can also try with SIGABRT ( kill -6 ) and that produces the same end\n\u003e result in which you can no longer bind to the address when the command is\n\u003e repeated.\n\u003e\n\u003e If possible, provide a recipe for reproducing the error.\n\u003e A complete runnable program is good.\n\u003e A link on play.golang.org is best.\n\u003e https://play.golang.org/p/LorluoHyLW\n\u003e\n\u003e    1.\n\u003e\n\u003e    What did you expect to see?\n\u003e    I expected SIGKILL and SIGABRT to shutdown not only the server and\n\u003e    unbind itself from the port just like SIGINT would. If this is acceptable\n\u003e    behavior, I haven't found any documentation for it in net/http.\n\u003e    2.\n\u003e\n\u003e    What did you see instead?\n\u003e    When https://play.golang.org/p/LorluoHyLW is rerun, it gives such an\n\u003e    error\n\u003e\n\u003e 2016/08/04 01:42:06 listen tcp :4567: bind: address already in use\n\u003e\n\u003e The issue exists on Go1.6 so this isn't a regression.\n\u003e\n\u003e â€”\n\u003e You are receiving this because you are subscribed to this thread.\n\u003e Reply to this email directly, view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/16599\u003e, or mute the thread\n\u003e \u003chttps://github.com/notifications/unsubscribe-auth/AAAcA03y8E1Oqkv25yId9XJWeNkDZTu5ks5qcasAgaJpZM4JcfL5\u003e\n\u003e .\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-04T09:13:30Z",
	"updated_at": "2016-08-04T09:13:30Z"
}
