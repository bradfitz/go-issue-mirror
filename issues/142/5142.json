{
	"id": 51283189,
	"number": 5142,
	"state": "open",
	"title": "cmd/compile: too many errors stops too early -- check other related errors",
	"body": "\u003cpre\u003eI'm in the middle of debugging a package which is full of a bunch of code I wrote\nquickly. At present, the package consists of three files\n\n\u003ca href=\"http://play.golang.org/p/XgNpoFpwcp\"\u003ehttp://play.golang.org/p/XgNpoFpwcp\u003c/a\u003e   filename fluidtensors.go\n\u003ca href=\"http://play.golang.org/p/p9897ak11y\"\u003ehttp://play.golang.org/p/p9897ak11y\u003c/a\u003e    filename threedtensor.go\n\u003ca href=\"http://play.golang.org/p/8QrkK-IzCp\"\u003ehttp://play.golang.org/p/8QrkK-IzCp\u003c/a\u003e     filename computations.go\n\n\nwhen I run gc (version 1.0.3), I get the following output\n\nbrendan:~/Documents/mygo$ go build ransuq/tensor\n# ransuq/tensor\nsrc/ransuq/tensor/computations.go:9: re.SymTensor.Dim() used as value\nsrc/ransuq/tensor/computations.go:10: re.SymTensor.Dim() used as value\nsrc/ransuq/tensor/computations.go:11: re.SymTensor.Dim() used as value\nsrc/ransuq/tensor/computations.go:13: re.SymTensor.Dim() used as value\nsrc/ransuq/tensor/computations.go:25: tau.SymTensor.Dim() used as value\nsrc/ransuq/tensor/computations.go:26: tau.SymTensor.Dim() used as value\nsrc/ransuq/tensor/computations.go:27: tau.SymTensor.Dim() used as value\nsrc/ransuq/tensor/computations.go:29: tau.SymTensor.Dim() used as value\nsrc/ransuq/tensor/computations.go:41: tau.SymTensor.Dim() used as value\nsrc/ransuq/tensor/computations.go:53: tau.SymTensor.Dim() used as value\nsrc/ransuq/tensor/computations.go:53: too many errors\n\nre.SymTensor.Dim() being used as a value is not a problem. The problem is that the Dim()\nmethod of SymTensor (in threedtensor.go) is incorrectly returning a value. Relevant code\nsegment:\n\nfunc (s *SymTensor) Dim() {\n\treturn t.nDim\n}\n\nIn the ideal case, the compiler would check that the full method of SymTensor is correct\nbefore throwing the error about Dim() being used as a value. Barring that, it would be\nnice if the compiler would output some other errors not of that form. The code is\ncomputations is not logically incorrect, it's the code is threedtensor that's incorrect,\nand so having this as the only output error is confusing.\u003c/pre\u003e",
	"user": {
		"login": "btracey",
		"id": 3680859,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"created_at": "2013-03-28T00:45:47Z",
	"updated_at": "2015-06-08T06:24:06Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
