{
	"id": 66051888,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eThe spec says\n\n    A parsing ambiguity arises when a composite literal using the TypeName form of the LiteralType appears in the condition of an \"if\", \"for\", or \"switch\" statement, because the braces surrounding the expressions in the literal are confused with those introducing a block of statements. To resolve the ambiguity in this rare case, the composite literal must appear within parentheses.\n\nI think the same applies to the pre and post statement in for loops:\n\nfor i := (intval{3}); i.v \u003e 0; i.v-- {\u003c/pre\u003e\n\n\n_Owner changed to **r...@golang.org**._\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-07-12T23:31:25Z",
	"updated_at": "2014-12-08T10:06:22Z"
}
