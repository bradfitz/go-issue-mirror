{
	"id": 142738377,
	"number": 14916,
	"state": "open",
	"title": "html/template: calling a *T method on elements of []T: works with range, not with index",
	"body": "1. What version of Go are you using (`go version`)?\r\n1.6\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nlinux/amd64\r\n\r\n3. What did you do?\r\nhttp://play.golang.org/p/5EinJM-QLi\r\nConsider a template where `dot` is set to a slice of (non-pointer) values.\r\nIf I `{{range}}` on `dot`, I can call pointer-receiver methods on each element. However, if I `{{index}}` on `dot`, then pointer-receiver methods cause the template execution to fail with a \"[PointerReceiver is not a field of struct type main.someStruct](http://play.golang.org/p/5EinJM-QLi)\" error.\r\n\r\n4. What did you expect to see?\r\nPointer-receiver method works on `{{index}}`ed elements just as it does on `{{range}}`d ones.\r\nIt has been suggested to me that might be \"a bug in the template package: for method calls on slice elements, it should probably be using `v.Index(i).Addr().Call([...])` rather than `v.Index(i).Call([...])`\"\r\n\r\n5. What did you see instead?\r\nSee error above.\r\n\r\n\r\n",
	"user": {
		"login": "bengalin",
		"id": 595736,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2016-03-22T18:28:19Z",
	"updated_at": "2016-05-20T00:29:04Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
