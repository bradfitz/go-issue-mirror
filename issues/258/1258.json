{
	"id": 51277559,
	"number": 1258,
	"state": "closed",
	"title": "proposed patch to path package",
	"body": "\u003cpre\u003eI have needed this a number of times. It feels like a handy extension to the path module.\n\npackage path\n\nimport (\n  \u0026quot;os\u0026quot;\n  \u0026quot;regexp\u0026quot;\n)\n\n\nvar envVarRegexp = regexp.MustCompile(\u0026quot;\\\\${[A-Za-z0-9_]+}|\\\\$[A-Za-z0-9_]+\u0026quot;)\n\nfunc envVarReplace(envVar string) string {\n  if envVar[len(envVar)-1] == '}' {\n    return os.Getenv(envVar[2 : len(envVar)-1])\n  }\n\n  return os.Getenv(envVar[1:])\n}\n\n// Replace ${var} or $var in a string based on the current environment.\n// Missing vars are replaced with empty string.\nfunc ExpandEnviron(s string) string {\n  return envVarRegexp.ReplaceAllStringFunc(s, envVarReplace)\n}\u003c/pre\u003e",
	"user": {
		"login": "msolo",
		"id": 5078276,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:07:32Z",
	"created_at": "2010-11-06T01:45:24Z",
	"updated_at": "2016-06-24T19:22:06Z"
}
