{
	"id": 51289037,
	"number": 9057,
	"state": "open",
	"title": "go/build: Import(\".\", \".\", 0) fails to resolve the full package path relative to GOPATH while build.Import(\".\", \u003ccwd\u003e, 0) works",
	"body": "\u003cpre\u003eWhat does 'go version' print?\ngo version go1.3.3 linux/amd64\n\nWhat steps reproduce the problem?\n1. mkdir $HOME/src2\n2. mkdir $HOME/src2/golang\n3. export GOPATH=$HOME/src2/golang\n4. mkdir -p $GOPATH/src/foo\n5. Put the content of \u003ca href=\"http://play.golang.org/p/gzOX-Obb75\"\u003ehttp://play.golang.org/p/gzOX-Obb75\u003c/a\u003e into $GOPATH/src/foo/a.go\n6. go run a.go\n\nWhat happened?\nbuild.ImportDir() and build.Import() fail to correctly resolve Package.ImportPath to\n\u0026quot;foo\u0026quot;. I think it used (?) to work recently.\n\nI reproduce the problem via \u003ca href=\"https://github.com/kisielk/errcheck\"\u003ehttps://github.com/kisielk/errcheck\u003c/a\u003e but it can be easily\nreproduced with the code I provided above. The problem is actually surfacing in\n\u003ca href=\"https://github.com/kisielk/gotool\"\u003ehttps://github.com/kisielk/gotool\u003c/a\u003e which does the build.ImportDir(\u0026quot;.\u0026quot;, 0) call,\nwhich fails to return the correct ImportPath.\n\n\nWhat should have happened instead?\nbuild.ImportDir() and build.Import() with \u0026quot;.\u0026quot; should have the same behavior\nthan when provided os.Getwd(), e.g.:\n\nDo the same code path as would \ndir, _ := os.Getwd()\npkg, err := build.Import(\u0026quot;.\u0026quot;, dir, 0)\n\nshould have the same result than:\n\npkg, err := build.Import(\u0026quot;.\u0026quot;, \u0026quot;.\u0026quot;, 0)\u003c/pre\u003e",
	"user": {
		"login": "maruel",
		"id": 75011,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2014-11-03T15:51:41Z",
	"updated_at": "2015-04-14T19:45:25Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
