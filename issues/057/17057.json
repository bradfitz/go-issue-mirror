{
	"id": 176204421,
	"number": 17057,
	"state": "open",
	"title": "cmd/vet: printf checker does not know about fmt.Formatter",
	"body": "The printf checker should allow any verb for a value that implements fmt.Formatter. It does not.\r\n\r\n```go\r\npackage main\r\n\r\nimport \"fmt\"\r\n\r\ntype T int\r\n\r\nfunc (t T) Format(f fmt.State, c rune) {\r\n\tf.Write([]byte{byte(c)})\r\n}\r\n\r\nfunc main() {\r\n\tvar t T\r\n\tfmt.Printf(\"%z\\n\", t)\r\n}\r\n```\r\n\r\n```bash\r\n$ go run formatter.go \r\nz\r\n$ go tool vet formatter.go \r\nformatter.go:13: unrecognized printf verb 'z'\r\n```\r\n\r\nAs an aside, it looks like the implementation of fmt.Stringer detection in cmd/vet could be simplified by using go/types-based interface satisfaction analysis. (See the copylock check for an example.) I suspect the printf check was written before go/types had that functionality.\r\n\r\ncc @valyala @robpike \r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		}
	],
	"comments": 1,
	"created_at": "2016-09-10T21:38:36Z",
	"updated_at": "2016-10-06T20:37:32Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
