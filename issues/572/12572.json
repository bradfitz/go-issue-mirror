{
	"id": 105869724,
	"number": 12572,
	"state": "closed",
	"title": "image: Make image encoding methods consistent across JPG, GIF, and PNG",
	"body": "Greetings.\r\n\r\nAs far as I can tell, Go currently supports encoding an `image.Image` into 3 image file formats; [JPEG](https://golang.org/pkg/image/jpeg/), [GIF](https://golang.org/pkg/image/gif/) and [PNG](https://golang.org/pkg/image/png/).\r\n\r\nEach format has its own encode method. Both `jpeg.Encode` and `gif.Encode` are fairly similar but with different Options structs ([jpeg.Options](https://golang.org/pkg/image/jpeg/#Options), [gif.Options](https://golang.org/pkg/image/gif/#Options)). However `png.Encode` does not have an Options requirement in its method signature. `png.Encode` actually uses a separate struct, [png.Encoder](https://golang.org/pkg/image/png/#Encoder), which has an Encode method on it, so `png.Encode` is really just calling `png.Encoder.Encode`.\r\n\r\n**Problem** \r\nThere is no uniform way to encode an `image.Image`. Also encoding is done in the various sub-packages (image/jpeg, image/gif, image/png) while decoding is done in the image package, so two inverse functions don't exist on the same package levels.\r\n\r\n**Proposal**\r\nI propose that the GIF and JPEG packages be done the same way as PNG, and that an interface be created; `image.FormatEncoder`, which would wrap all of the `_.Encoder.Encode` methods. Then an `image.Encode(w io.Writer, m Image, enc FormatEncoder) error` function be added. See below for my suggested changes to the image packages.\r\n\r\n```go\r\n//package \"image/jpeg\"\r\ntype Encoder struct {\r\n    Quality int\r\n}\r\n\r\nfunc (enc *Encoder) Encode(w io.Writer, m Image) error {\r\n    //Do encoding\r\n}\r\n```\r\n```go\r\n//package \"image/gif\"\r\ntype Encoder struct {\r\n    NumColors int\r\n    Quantizer draw.Quantizer\r\n    Drawer draw.Drawer\r\n}\r\n\r\nfunc (enc *Encoder) Encode(w io.Writer, m Image) error {\r\n    //Do encoding\r\n}\r\n```\r\n```go\r\n//package \"image\"\r\ntype FormatEncoder interface {\r\n    Encode(io.Writer, Image) error\r\n}\r\n\r\nfunc Encode(w io.Writer, m Image, enc *FormatEncoder) error {\r\n    return enc.Encode(w, m)\r\n}\r\n```\r\n\r\n**Notes**\r\nIf you look at the `_.Encoder` structs for gif and jpeg, they have the same properties as the old `_.Options` structs used by the old Encode functions.\r\n\r\n**Consequences**\r\n`png.Encode`, `gif.Encode`, `gif.Options`, `jpeg.Encode`, and `jpep.Options` would become deprecated in favor of using `image.Encode` and passing in the relevant encoder struct.\r\n\r\nAny explicit encoding would need to invoke the relevant `Encoder` struct to call the `Encode` method on it (it's not a single function call anymore). \r\n\r\n**Next Steps**\r\nI have most of these changes already finished. I need to write a few tests to verify things work as expected, and wanted to get sign off before proceeding further.",
	"user": {
		"login": "jimdoescode",
		"id": 546125,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2015-09-11T22:02:03Z",
	"created_at": "2015-09-10T18:29:55Z",
	"updated_at": "2016-09-22T15:55:07Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
