{
	"id": 236927822,
	"body": "Of course, the problem lies in the python code... ^^\r\n```\r\nGODEBUG=http2debug=2 go run test/go/get.go https://test.example.org:12346/upload.py\r\n2016/08/02 16:31:43 http2: Transport creating client conn to 127.0.0.1:12346\r\n2016/08/02 16:31:43 http2: Framer 0xc4201c4fc0: wrote SETTINGS len=18, settings: ENABLE_PUSH=0, INITIAL_WINDOW_SIZE=4194304, MAX_HEADER_LIST_SIZE=10485760\r\n2016/08/02 16:31:43 http2: Framer 0xc4201c4fc0: wrote WINDOW_UPDATE len=4 (conn) incr=1073741824\r\n2016/08/02 16:31:43 http2: Transport encoding header \":authority\" = \"test.example.org:12346\"\r\n2016/08/02 16:31:43 http2: Transport encoding header \":method\" = \"GET\"\r\n2016/08/02 16:31:43 http2: Transport encoding header \":path\" = \"/upload.py\"\r\n2016/08/02 16:31:43 http2: Transport encoding header \":scheme\" = \"https\"\r\n2016/08/02 16:31:43 http2: Transport encoding header \"accept-encoding\" = \"gzip\"\r\n2016/08/02 16:31:43 http2: Transport encoding header \"user-agent\" = \"Go-http-client/2.0\"\r\n2016/08/02 16:31:43 http2: Framer 0xc4201c4fc0: read SETTINGS len=6, settings: MAX_CONCURRENT_STREAMS=100\r\n2016/08/02 16:31:43 http2: Framer 0xc4201c4fc0: wrote HEADERS flags=END_STREAM|END_HEADERS stream=1 len=50\r\n2016/08/02 16:31:43 http2: Transport received SETTINGS len=6, settings: MAX_CONCURRENT_STREAMS=100\r\n2016/08/02 16:31:43 http2: Framer 0xc4201c4fc0: wrote SETTINGS flags=ACK len=0\r\n2016/08/02 16:31:43 http2: Framer 0xc4201c4fc0: read WINDOW_UPDATE len=4 (conn) incr=2147418112\r\n2016/08/02 16:31:43 http2: Transport received WINDOW_UPDATE len=4 (conn) incr=2147418112\r\n2016/08/02 16:31:43 http2: Framer 0xc4201c4fc0: read SETTINGS flags=ACK len=0\r\n2016/08/02 16:31:43 http2: Transport received SETTINGS flags=ACK len=0\r\n2016/08/02 16:31:43 http2: Framer 0xc4201c4fc0: read HEADERS flags=END_HEADERS stream=1 len=78\r\n2016/08/02 16:31:43 http2: decoded hpack field header field \":status\" = \"200\"\r\n2016/08/02 16:31:43 http2: decoded hpack field header field \"date\" = \"Tue, 02 Aug 2016 14:31:43 GMT\"\r\n2016/08/02 16:31:43 http2: decoded hpack field header field \"server\" = \"Apache/2.5.0-dev (Unix) OpenSSL/1.0.2g\"\r\n2016/08/02 16:31:43 http2: decoded hpack field header field \"    content-type\" = \"text/html\"\r\n2016/08/02 16:31:43 http2: invalid header: invalid header field name \"    content-type\"\r\n2016/08/02 16:31:43 Transport readFrame error: (http2.StreamError) stream error: stream ID 1; PROTOCOL_ERROR\r\n2016/08/02 16:31:43 http2: Framer 0xc4201c4fc0: read DATA stream=1 len=219 data=\"    \u003chtml\u003e\u003cbody\u003e\\n    \u003cp\u003e        Upload File\u003cform method=\\\"POST\\\" enctype=\\\"multipart/form-data\\\"\u003e\\n        \u003cinput type=\\\"file\\\" name=\\\"file\\\"\u003e\\n        \u003cbutton type=\\\"submit\\\"\u003eUpload\u003c/button\u003e\u003c/form\u003e\\n        \u003c/p\u003e\\n    \u003c/body\u003e\u003c/html\u003e\\n\"\r\n2016/08/02 16:31:43 http2: Transport received DATA stream=1 len=219 data=\"    \u003chtml\u003e\u003cbody\u003e\\n    \u003cp\u003e        Upload File\u003cform method=\\\"POST\\\" enctype=\\\"multipart/form-data\\\"\u003e\\n        \u003cinput type=\\\"file\\\" name=\\\"file\\\"\u003e\\n        \u003cbutton type=\\\"submit\\\"\u003eUpload\u003c/button\u003e\u003c/form\u003e\\n        \u003c/p\u003e\\n    \u003c/body\u003e\u003c/html\u003e\\n\"\r\n2016/08/02 16:31:43 http2: Framer 0xc4201c4fc0: wrote WINDOW_UPDATE len=4 (conn) incr=219\r\n2016/08/02 16:31:43 http2: Framer 0xc4201c4fc0: read DATA flags=END_STREAM stream=1 len=0 data=\"\"\r\n2016/08/02 16:31:43 http2: Transport received DATA flags=END_STREAM stream=1 len=0 data=\"\"\r\n```\r\nIf I remove the leading space from the content-type header, go is fine with it.\r\n\r\nInterestingly, nghttp seems to just silently omit this header and report nothing suspicious. Another reason to test with different clients...\r\n\r\nI think the choking by go on such headers is just fine. I'll add an issue for mod_h2 to trim headers before sending them on a h2 stream, since they might come from unreliable sources, such as a python script...",
	"user": {
		"login": "icing",
		"id": 15102,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-02T14:47:40Z",
	"updated_at": "2016-08-02T14:47:40Z"
}
