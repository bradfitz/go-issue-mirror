{
	"id": 236936705,
	"body": "\u003e The reason why nghttp2 ignores these header fields is that there are so many misguided header field in the internet, and just treating them hard error breaks web browsing if nghttp2 is used as forward proxy.\r\n\r\nI think that's kinda wrong. Misguided header fields can only exist on the Internet if too-forgiving implementations allow them to exist. And so far that's only been the case for often-ill-defined HTTP/1. With HTTP/2 we get a clean start with defined rules. I think we should follow the rules, and make it the job of the HTTP/1\u003c-\u003eHTTP/2 proxies to make the policies decisions on what to strip. But on the wire, HTTP/2 is clear about what is permitted.\r\n\r\n\u003e There is still problem here. Go client just hangs in this case. It should terminate stream, or connection instead of freezing.\r\n\r\nIndeed. I'm looking into that now. The stream error should be reported to the user.\r\n\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-02T15:15:05Z",
	"updated_at": "2016-08-02T15:15:05Z"
}
