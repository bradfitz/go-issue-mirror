{
	"id": 122094495,
	"number": 13610,
	"state": "closed",
	"title": "net: LookupPort(\"tcp\", \"\") can produce inconsistent results between cgo and Go netdns",
	"body": "On at least Linux, a cgo net.LookupPort(\"tcp\", \"\") will succeed and return a port of 0 while a native Go version of the same query will fail with 'unknown port tcp/'. You might think that this is a silly thing to look up, but it can come up indirectly if you use eg net.ResolveTCPAddr(\"tcp\", \"IP:\") to resolve something that you will set in a net.Dialer as the LocalAddr, with the intended meaning of the port being 'any port'.\r\n\r\nBecause net.LookupPort() may choose at runtime whether or not to use cgo or pure Go lookups, the overall effect of this is to enable code that is silently system dependent; it will work on some machines, ones where the resolv.conf or nsswitch.conf configuration forces cgo, and fail on others, where Go can use the pure Go versions. I think it would be better to either always work (by explicitly supporting a blank port being port 0) or always fail (by explicitly checking for and rejecting a blank port, and documenting that for 'give me any port' you should specify ':0', at least for TCP and UDP). The latter is probably easier.\r\n",
	"user": {
		"login": "siebenmann",
		"id": 865382,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2015-12-14T20:41:58Z",
	"created_at": "2015-12-14T17:49:46Z",
	"updated_at": "2015-12-14T20:41:58Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
