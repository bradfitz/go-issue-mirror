{
	"id": 170514118,
	"number": 16665,
	"state": "open",
	"title": "cmd/link: relocation is too big for binaries built on ppc64le",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo version devel +392bf3a Tue Aug 9 00:43:25 2016 +0000 linux/ppc64le\r\nfails with go1.7 too\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nppc64le Ubuntu\r\n\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\nTry to do the Kubernetes build.\r\ngit clone https://github.com/kubernetes/kubernetes.git\r\ncd kubernetes\r\nmake\r\n\r\n4. What did you expect to see?\r\nAll binaries built successfully\r\n\r\n5. What did you see instead?\r\nFailures when linking the kube-abiserver binary:\r\n\r\nk8s.io/kubernetes/vendor/k8s.io/client-go/1.4/pkg/apis/extensions.SupplementalGroupsStrategyType.CodecEncodeSelf: relocation for runtime.convT2E+220 is too big: -33556804                                                      \r\nk8s.io/kubernetes/vendor/k8s.io/client-go/1.4/pkg/apis/extensions.(*PodSecurityPolicyList).CodecDecodeSelf: relocation for runtime.convI2E+592 is too big: -33557824                                                            \r\nk8s.io/kubernetes/vendor/k8s.io/client-go/1.4/pkg/apis/extensions.(*NetworkPolicy).CodecDecodeSelf: relocation for runtime.convI2E+592 is too big: -33564288                                                                    \r\nk8s.io/kubernetes/vendor/k8s.io/client-go/1.4/pkg/apis/extensions.(*NetworkPolicySpec).CodecDecodeSelf: relocation for runtime.convI2E+592 is too big: -33569896                                                                \r\nk8s.io/kubernetes/vendor/k8s.io/client-go/1.4/pkg/apis/extensions.(*NetworkPolicyIngressRule).CodecDecodeSelf: relocation for runtime.convI2E+592 is too big: -33574504                                                         \r\nk8s.io/kubernetes/vendor/k8s.io/client-go/1.4/pkg/apis/extensions.(*NetworkPolicyPort).CodecDecodeSelf: relocation for runtime.convI2E+592 is too big: -33579240                                                                \r\nk8s.io/kubernetes/vendor/k8s.io/client-go/1.4/pkg/apis/extensions.(*NetworkPolicyPort).codecDecodeSelfFromMap: relocation for runtime.newobject+712 is too big: -33567512                                                       \r\nk8s.io/kubernetes/vendor/k8s.io/client-go/1.4/pkg/apis/extensions.(*NetworkPolicyPort).codecDecodeSelfFromMap: relocation for runtime.writebarrierptr+1080 is too big: -33564872                                             \r\n...... lots more\r\n\r\nThis is similar to but not exactly the same as #15823.  In that issue, a different error message occurred and came from the GNU linker during external linking.  In this case, the error occurs before the external linker would be invoked.\r\n\r\nIn both cases the errors occur because the address of the call target is too large for the bl instruction.  I created a new issue for this one because the error messages are different, and there is a solution for #15823.  However, it's possible there is a single solution that would be best for both.\r\n\r\nTime to consider a solution which uses a different code sequence to do the call,  such as one of those suggested by @minux.\r\n",
	"user": {
		"login": "laboger",
		"id": 9433228,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		}
	],
	"assignee": {
		"login": "laboger",
		"id": 9433228,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"created_at": "2016-08-10T20:43:31Z",
	"updated_at": "2016-10-09T19:22:35Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
