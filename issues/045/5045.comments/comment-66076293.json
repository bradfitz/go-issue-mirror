{
	"id": 66076293,
	"body": "\u003ca id=\"c12\"\u003e\u003c/a\u003eComment 12:\n\n\u003cpre\u003eAs per offline discussion, your \"either e1 happens before e2 or e2 happens before e1\"\ndefinition looks good if data races are prohibited. Otherwise, racy accesses allow to\ninfer weird relations, e.g. that a Load happens-before a Store:\n\n// thread 1\nx = 1\natomic.Load(\u0026whatever)\ny = 1\n\n// thread 2\nif y == 1 {\n  atomic.Store(\u0026whatever2)\n  println(x) // must print 1\n}\n\nThis means that Load must execute release memory barrier and store -- acquire memory\nbarrier. Most likely this will make implementations of atomic operations costlier.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-14T17:17:42Z",
	"updated_at": "2014-12-08T10:26:58Z"
}
