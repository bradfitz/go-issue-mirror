{
	"id": 66076295,
	"body": "\u003ca id=\"c14\"\u003e\u003c/a\u003eComment 14:\n\n\u003cpre\u003eWhy don't you want to give up on data races?\n\nWe probably can ensure atomicity of word accesses in gc w/o sacrificing important\noptimizations. But:\n1. We can not ensure visibility guarantess, e.g. if a var is registrized in a loop, and\nat this point racy accesses become almost useless.\n2. Races are definitely not safe for maps and slices.\n3. Most likely we can not ensure any guarantees for races in gccgo (not sure what gcc\njava does here).\n4. I do not see any benefits of allowing data races. Currently there is runtime cost for\ncalling atomic.Load instead of doing plain load. But this must be addresses by providing\nbetter atomic operations with compiler support (if that becomes the bottleneck).\nAllowing data races instead to solve this looks completely wrong.\n\nIf we prohibit data races, it would make reasoning about atomic operations much much\nsimpler.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-15T17:31:05Z",
	"updated_at": "2014-12-08T10:26:58Z"
}
