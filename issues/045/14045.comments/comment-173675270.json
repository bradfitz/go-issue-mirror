{
	"id": 173675270,
	"body": "@randall77 My comments was about releasing memory back to the OS when a new allocation fails, not in general. Also, how long Go waits before releasing the memory back to the system? If I modify the program to wait a minute before allocating again, it still fails:\r\n```\r\n~/s\u003e cat test.go \r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"runtime\"\r\n\t\"time\"\r\n)\r\n\r\nfunc main() {\r\n    a := make([]byte, 85 * 1024 * 1024)\r\n    a = nil\r\n    runtime.GC()\r\n    time.Sleep(time.Minute)\r\n    a = make([]byte, 150 * 1024 * 1024)\r\n    for i := 0; i \u003c len(a); i += 4096 {\r\n        a[i] = 'x'\r\n    }\r\n    fmt.Printf(\"%c\\n\", a[0])\r\n}\r\n~/s\u003e ulimit -S -v 204800\r\n~/s\u003e go run test.go \r\nfatal error: runtime: out of memory\r\n\r\nruntime stack:\r\n```\r\n",
	"user": {
		"login": "ibukanov",
		"id": 2381216,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-21T19:03:04Z",
	"updated_at": "2016-01-21T19:03:04Z"
}
