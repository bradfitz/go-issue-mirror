{
	"id": 174275580,
	"number": 16936,
	"state": "open",
	"title": "runtime: address space conflict at startup using buildmode=c-shared",
	"body": "The failure occurred in a shared library (`go build -buildmode=c-shared`) that is loaded as a ulogd plugin. So, obviously, go is not in complete control of its runtime situation. Still, I believe this stack trace represents an issue with the embedded go runtime and not the host application.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### What version of Go are you using (`go version`)?\r\ngo version go1.6 linux/amd64\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/go-1.6\"\r\nGOTOOLDIR=\"/usr/lib/go-1.6/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n### What did you do?\r\n\u003e If possible, provide a recipe for reproducing the error.\r\n\r\nI may be able to obtain clearance from my employer to share binary code and/or source for the application in which this panic appeared. I don't yet have such clearance.\r\n\r\nAt a high level, this is a shared library that is compiled against Linux ulogd sources (http://www.netfilter.org/projects/ulogd/) to produce a plugin for the ulogd host app. The plugin receives callbacks from the host application and composes log messages sent through dropsonde (https://github.com/cloudfoundry/dropsonde) to be collected via Cloud Foundry's Loggregator services.\r\n\r\nBecause the panic stack trace does not refer to any code outside of the Go runtime, it is difficult for me to see which allocation provoked the allocator failure.\r\n\r\n\u003e A complete runnable program is good.\r\n\u003e A link on play.golang.org is best.\r\n\r\n\r\n### What did you expect to see?\r\nnormally (in thousands of instances of restarting the host application that is loading the go shared library) the app runs fine. The stack trace comes from exactly once-ever-witnessed failure of this kind.\r\n\r\n### What did you see instead?\r\nstack trace follows:\r\n\r\n```\r\n------------ STARTING connection-logger_ctl at Tue Aug 30 15:38:29 UTC 2016 --------------\r\n[... elided irrelevant log prefix ...]\r\nruntime: address space conflict: map(0xc820000000) = 0x7f4db163c000\r\nfatal error: runtime: address space conflict\r\n2016/08/30 15:38:31 init() for diego\r\n\r\nruntime stack:\r\nruntime.throw(0x7f4daf389da0, 0x1f)\r\n        /usr/lib/go-1.6/src/runtime/panic.go:530 +0x92 fp=0x7f4dae86d9e0 sp=0x7f4dae86d9c8\r\nruntime.sysMap(0xc820000000, 0x100000, 0x6600, 0x7f4daf57f778)\r\n        /usr/lib/go-1.6/src/runtime/mem_linux.go:210 +0x13a fp=0x7f4dae86da20 sp=0x7f4dae86d9e0\r\nruntime.(*mheap).sysAlloc(0x7f4daf565a60, 0x100000, 0x0)\r\n        /usr/lib/go-1.6/src/runtime/malloc.go:429 +0x193 fp=0x7f4dae86daa8 sp=0x7f4dae86da20\r\nruntime.(*mheap).grow(0x7f4daf565a60, 0x8, 0x0)\r\n        /usr/lib/go-1.6/src/runtime/mheap.go:651 +0x65 fp=0x7f4dae86db00 sp=0x7f4dae86daa8\r\nruntime.(*mheap).allocSpanLocked(0x7f4daf565a60, 0x1, 0x0)\r\n        /usr/lib/go-1.6/src/runtime/mheap.go:553 +0x4f8 fp=0x7f4dae86db58 sp=0x7f4dae86db00\r\nruntime.(*mheap).alloc_m(0x7f4daf565a60, 0x1, 0x15, 0x7f4db174c000)\r\n        /usr/lib/go-1.6/src/runtime/mheap.go:437 +0x11d fp=0x7f4dae86db88 sp=0x7f4dae86db58\r\nruntime.(*mheap).alloc.func1()\r\n        /usr/lib/go-1.6/src/runtime/mheap.go:502 +0x43 fp=0x7f4dae86dbb8 sp=0x7f4dae86db88\r\nruntime.systemstack(0x7f4dae86dbd8)\r\n        /usr/lib/go-1.6/src/runtime/asm_amd64.s:307 +0xa1 fp=0x7f4dae86dbc0 sp=0x7f4dae86dbb8\r\nruntime.(*mheap).alloc(0x7f4daf565a60, 0x1, 0x10000000015, 0x7f4daebdcc38)\r\n        /usr/lib/go-1.6/src/runtime/mheap.go:503 +0x65 fp=0x7f4dae86dc08 sp=0x7f4dae86dbc0\r\nruntime.(*mcentral).grow(0x7f4daf567660, 0x0)\r\n        /usr/lib/go-1.6/src/runtime/mcentral.go:209 +0x95 fp=0x7f4dae86dc70 sp=0x7f4dae86dc08\r\nruntime.(*mcentral).cacheSpan(0x7f4daf567660, 0x7f4daf5604c8)\r\n        /usr/lib/go-1.6/src/runtime/mcentral.go:89 +0x47f fp=0x7f4dae86dcb0 sp=0x7f4dae86dc70\r\nruntime.(*mcache).refill(0x7f4db174c000, 0x7f4d00000015, 0x7f4dae86dd18)\r\n        /usr/lib/go-1.6/src/runtime/mcache.go:119 +0xd0 fp=0x7f4dae86dce8 sp=0x7f4dae86dcb0\r\nruntime.mallocgc.func2()\r\n        /usr/lib/go-1.6/src/runtime/malloc.go:642 +0x2d fp=0x7f4dae86dd08 sp=0x7f4dae86dce8\r\nruntime.systemstack(0x7f4dae86dda8)\r\n        /usr/lib/go-1.6/src/runtime/asm_amd64.s:307 +0xa1 fp=0x7f4dae86dd10 sp=0x7f4dae86dd08\r\nruntime.mallocgc(0x180, 0x7f4daf310da0, 0x0, 0x800000000)\r\n        /usr/lib/go-1.6/src/runtime/malloc.go:643 +0x87c fp=0x7f4dae86dde8 sp=0x7f4dae86dd10\r\nruntime.newobject(0x7f4daf310da0, 0x7f4daf560990)\r\n        /usr/lib/go-1.6/src/runtime/malloc.go:781 +0x44 fp=0x7f4dae86de10 sp=0x7f4dae86dde8\r\nruntime.malg(0x7f4d00008000, 0x7f4daf560d40)\r\n        /usr/lib/go-1.6/src/runtime/proc.go:2634 +0x29 fp=0x7f4dae86de48 sp=0x7f4dae86de10\r\nruntime.mpreinit(0x7f4daf5612e0)\r\n        /usr/lib/go-1.6/src/runtime/os1_linux.go:205 +0x21 fp=0x7f4dae86de60 sp=0x7f4dae86de48\r\nruntime.mcommoninit(0x7f4daf5612e0)\r\n        /usr/lib/go-1.6/src/runtime/proc.go:494 +0x109 fp=0x7f4dae86dea8 sp=0x7f4dae86de60\r\nruntime.schedinit()\r\n        /usr/lib/go-1.6/src/runtime/proc.go:434 +0x7d fp=0x7f4dae86def0 sp=0x7f4dae86dea8\r\nruntime.rt0_go(0x7fff1f836a58, 0x7, 0x7fff1f836a58, 0x7f4dae86e700, 0x7f4db13a1184, 0x0, 0x7f4dae86e700, 0x7f4dae86e700, 0xa48c0a2111c02ce0, 0x0, ...)\r\n        /usr/lib/go-1.6/src/runtime/asm_amd64.s:138 +0x134 fp=0x7f4dae86def8 sp=0x7f4dae86def0\r\n```\r\n\r\n",
	"user": {
		"login": "sh4m1l65",
		"id": 16505305,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsInvestigation"
		}
	],
	"comments": 1,
	"created_at": "2016-08-31T13:38:47Z",
	"updated_at": "2016-10-21T01:04:29Z",
	"milestone": {
		"id": 1748849,
		"number": 42,
		"title": "Go1.8Maybe"
	}
}
