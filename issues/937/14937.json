{
	"id": 143111932,
	"number": 14937,
	"state": "closed",
	"title": "all: testdata/*.gz files should zero mtime in headers",
	"body": "Apparently Debian expects to be able to zero mtimes in imported trees. I don't understand exactly why that's a problem, since I don't think we look at the mtime, but it's easy enough to zero those bytes to make Debian happy. We should probably do that.\n\n---------- Forwarded message ---------\nFrom: Sean Burford \u003csburford@google.com\u003e\nDate: Wed, Mar 23, 2016 at 7:20 PM\nSubject: Fixing timestamps in golang testcase .gz files?\nTo: Russ Cox \u003crsc@google.com\u003e\n\nHi,\n\nIn https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=819030 I ask the golang debian package maintainers to skip overwriting of the gzip header mtimes on these golang files (because their reproducible build script produces unique versions of these files with every new package version):\n./usr/share/go/src/encoding/json/testdata/code.json.gz\n./usr/share/go/src/debug/elf/testdata/hello-world-core.gz\n./usr/share/go/src/compress/gzip/testdata/issue6550.gz\n\nLooking at the source for the normalizer (https://anonscm.debian.org/git/reproducible/strip-nondeterminism.git/tree/lib/File/StripNondeterminism/handlers/gzip.pm), a global fix would be to zero the mtimes on these files upstream (in the go source).  ie. zero bytes 4-7 in each of those files.\n\nHow would I go about arranging this?",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2016-03-25T04:03:01Z",
	"created_at": "2016-03-24T00:13:54Z",
	"updated_at": "2016-03-25T04:03:01Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
