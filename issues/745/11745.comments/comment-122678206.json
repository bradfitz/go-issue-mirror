{
	"id": 122678206,
	"body": "@mikioh I agree that the client behavior did not change.  I think the server changed to call resp.Body.Close() sooner, which changed the result returned by the client in my tests.  That may not be a bug.\r\n\r\nSpecifically, the client documentation makes clear that `When err is nil, resp always contains a non-nil resp.Body` but it leaves open whether err and resp could both be non-null at the same time.  http://golang.org/pkg/io/#Reader is an example were both data and err may be returned from the same call.\r\n\r\nIn a full duplex connection (like net.Conn or io.ReadWriter), the client can Read() a complete and valid response even as the Write() fails.  What should the http.Client return in that case?\r\n\r\nPerhaps the title should be \"net/http: should http.Client return a non-nil err and resp at the same time?\"",
	"user": {
		"login": "tarm",
		"id": 476641,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-19T16:19:26Z",
	"updated_at": "2015-07-19T16:20:34Z"
}
