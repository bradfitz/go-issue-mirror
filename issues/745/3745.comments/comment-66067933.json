{
	"id": 66067933,
	"body": "\u003ca id=\"c11\"\u003e\u003c/a\u003eComment 11:\n\n\u003cpre\u003ethe NaN behavior on VFPv2 is very weird:\n\npackage main\nimport \"unsafe\"\nvar uvnan uint64 = 0x7FF0000000000001\nfunc main() {\n\tf64 := *(*float64)(unsafe.Pointer(\u0026uvnan))\n\tif f64 == f64 { println(\"Not NaN64!\"); }\n\tf32 := float32(f64)\n\tif f32 == f32 { println(\"Not NaN32!\"); }\n}\n\nOn ARMv7, the above program outputs nothing, which is expected.\nOn ARM1136JF-S (w/ GOARM=7 patch), the above program outputs\n\"Not NAN32!\", which means that on VFPv2, converting a float64 NaN\nto float32 is no longer a NaN (but a +Inf).\n\nI've also tried to clear fpscr, but the situation doesn't change.\u003c/pre\u003e",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-07-03T20:57:23Z",
	"updated_at": "2014-12-08T10:19:46Z"
}
