{
	"id": 97524420,
	"body": "I don't know why, but this doesn't seem limited to \"textarea\", etc. elements. I think `tSpecialTagEnd` must be being called much more frequently than this.\r\n\r\nHere is a benchmark of a contrived template. It is formed by concatenating a bunch of wikipedia articles surrounded by \"if\" statements:\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"fmt\"\r\n\t\"html/template\"\r\n\t\"io/ioutil\"\r\n\t\"net/http\"\r\n\t\"testing\"\r\n)\r\n\r\nvar documents = []string{\r\n\t\"http://en.wikipedia.org/wiki/William_Shakespeare\",\r\n\t\"http://af.wikipedia.org/wiki/William_Shakespeare\",\r\n\t\"http://bs.wikipedia.org/wiki/William_Shakespeare\",\r\n\t\"http://es.wikipedia.org/wiki/William_Shakespeare\",\r\n\t\"http://hr.wikipedia.org/wiki/William_Shakespeare\",\r\n\t\"http://it.wikipedia.org/wiki/William_Shakespeare\",\r\n\t\"http://pam.wikipedia.org/wiki/William_Shakespeare\",\r\n\t\"http://la.wikipedia.org/wiki/Gulielmus_Shakesperius\",\r\n\t\"http://mk.wikipedia.org/wiki/%D0%92%D0%B8%D0%BB%D0%B8%D1%98%D0%B0%D0%BC_%D0%A8%D0%B5%D0%BA%D1%81%D0%BF%D0%B8%D1%80\",\r\n\t\"http://pl.wikipedia.org/wiki/William_Szekspir\",\r\n\t\"http://ru.wikipedia.org/wiki/%D0%A8%D0%B5%D0%BA%D1%81%D0%BF%D0%B8%D1%80,_%D0%A3%D0%B8%D0%BB%D1%8C%D1%8F%D0%BC\",\r\n\t\"http://sr.wikipedia.org/wiki/%D0%92%D0%B8%D0%BB%D0%B8%D1%98%D0%B0%D0%BC_%D0%A8%D0%B5%D0%BA%D1%81%D0%BF%D0%B8%D1%80\",\r\n\t\"http://sv.wikipedia.org/wiki/William_Shakespeare\",\r\n\t\"http://th.wikipedia.org/wiki/%E0%B8%A7%E0%B8%B4%E0%B8%A5%E0%B9%80%E0%B8%A5%E0%B8%B5%E0%B8%A2%E0%B8%A1_%E0%B9%80%E0%B8%8A%E0%B8%81%E0%B8%AA%E0%B9%80%E0%B8%9B%E0%B8%B5%E0%B8%A2%E0%B8%A3%E0%B9%8C\",\r\n\t\"http://zh.wikipedia.org/wiki/%E5%A8%81%E5%BB%89%C2%B7%E8%8E%8E%E5%A3%AB%E6%AF%94%E4%BA%9A\",\r\n}\r\n\r\nvar languages = []string{\"en\", \"af\", \"bs\", \"es\", \"hr\", \"it\", \"pam\", \"la\", \"mk\", \"pl\", \"ru\", \"sr\", \"sv\", \"th\", \"zh\"}\r\n\r\nfunc BenchmarkTemplate(b *testing.B) {\r\n\t// craft a big template\r\n\tvar buf bytes.Buffer\r\n\tfor i, lang := range languages {\r\n\t\tif i == 0 {\r\n\t\t\tfmt.Fprintf(\u0026buf, \"\u003c\u003c\u003cif eq . %q\u003e\u003e\u003e\", lang)\r\n\t\t} else {\r\n\t\t\tfmt.Fprintf(\u0026buf, \"\u003c\u003c\u003celse if eq . %q\u003e\u003e\u003e\", lang)\r\n\t\t}\r\n\t\tresp, err := http.Get(documents[i])\r\n\t\tif err != nil {\r\n\t\t\tb.Fatal(err)\r\n\t\t}\r\n\t\tif _, err = buf.ReadFrom(resp.Body); err != nil {\r\n\t\t\tb.Fatal(err)\r\n\t\t}\r\n\t\tresp.Body.Close()\r\n\t}\r\n\tfmt.Fprintf(\u0026buf, \"\u003c\u003c\u003cend\u003e\u003e\u003e\")\r\n\r\n\t// benchmark\r\n\tb.ResetTimer()\r\n\tfor i := 0; i \u003c b.N; i++ {\r\n\t\ttpl, err := template.New(\"wiki\").Delims(\"\u003c\u003c\u003c\", \"\u003e\u003e\u003e\").Parse(buf.String())\r\n\t\tif err != nil {\r\n\t\t\tb.Fatal(err)\r\n\t\t}\r\n\t\tif err = tpl.Execute(ioutil.Discard, \"en\"); err != nil {\r\n\t\t\tb.Fatal(err)\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nThis benchmark took 35s to run once on my machine.",
	"user": {
		"login": "chowey",
		"id": 991221,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-29T18:05:44Z",
	"updated_at": "2015-04-29T18:05:44Z"
}
