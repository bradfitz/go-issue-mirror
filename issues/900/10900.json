{
	"id": 77779793,
	"number": 10900,
	"state": "open",
	"title": "os: MkdirAll fails when creating top-level UNC paths on Windows",
	"body": "Go 1.4, Windows\r\n\r\nWhen the top-level folder of a Windows UNC path does not exist, the os.MkdirAll function goes one step too deep in recursion. This is illustrated in the following scenario:\r\n\r\n1) Make sure C:\\Test does not exist\r\n2) Try to create a new folder with arbitrary depth ```os.MkdirAll(\"\\\\\\\\?\\\\C:\\\\Test\", 0700)``` using UNC (we use UNC to support long paths).\r\n3) This fails with `The filename, directory name, or volume label syntax is incorrect`. This is due to [a bug in the Go library](https://github.com/golang/go/blob/362a40e37da849696e1af6874d0d5f1275a1a386/src/os/path.go#L42). The callstack reveals that it tries to create the folder `\\\\?`, which should not happen.\r\n\r\n(Related to https://github.com/syncthing/syncthing/issues/1822)",
	"user": {
		"login": "Zillode",
		"id": 14169,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "OS-Windows"
		}
	],
	"comments": 2,
	"created_at": "2015-05-18T19:42:02Z",
	"updated_at": "2015-06-03T01:12:33Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
