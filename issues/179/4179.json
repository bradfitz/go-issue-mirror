{
	"id": 51281760,
	"number": 4179,
	"state": "closed",
	"title": "cmd/gc: deref of nil empty struct does not panic",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n1. Run \u003ca href=\"http://play.golang.org/p/eYPA_nHh_7\"\u003ehttp://play.golang.org/p/eYPA_nHh_7\u003c/a\u003e\n2. ???\n3. Profit!\n\nWhat is the expected output? What do you see instead?\n\nThe spec says:\n\n\u0026quot;For an operand x of pointer type *T, the pointer indirection *x denotes the value\nof type T pointed to by x. If x is nil, an attempt to evaluate *x will cause a run-time\npanic.\n\n\u0026quot;Selectors automatically dereference pointers to structs. If x is a pointer to a\nstruct, x.y is shorthand for (*x).y; if the field y is also a pointer to a struct, x.y.z\nis shorthand for (*(*x).y).z, and so on. If x contains an anonymous field of type *A,\nwhere A is also a struct type, x.f is a shortcut for (*x.A).f.\u0026quot;\n\nSo, t.f() should be equivalent to (*t).f(), as indeed it is.  But *t should cause a\npanic since t is nil, but it does not; it seems to point to some actual instance of T\nwith a non-zero address.\u003c/pre\u003e",
	"user": {
		"login": "adonovan",
		"id": 5658175,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 13,
	"closed_at": "2014-12-08T10:22:12Z",
	"created_at": "2012-10-01T16:51:36Z",
	"updated_at": "2016-06-24T22:25:50Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
