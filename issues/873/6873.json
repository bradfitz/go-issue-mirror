{
	"id": 51285853,
	"number": 6873,
	"state": "closed",
	"title": "io: duplicate seek whence value consts here?",
	"body": "by **fuzxxl**:\n\n\u003cpre\u003eRight now, the package io specifies the Seeker with its sole method Seek(). The\nwhence-parameter of Seek() is specified to accept one of the constants 1 to 3 with\ncertain semantics.\n\nio does not provide symbolic constants for the whence-parameter, even there should\nclearly be a set for clarity. os provides such constants though:\n\nconst (\n        SEEK_SET int = 0 // seek relative to the origin of the file\n        SEEK_CUR int = 1 // seek relative to the current offset\n        SEEK_END int = 2 // seek relative to the end\n)\n\nI think these constants are at the wrong place since if you want to use a generic\nSeeker, you have to import os, a module with a concrete Seeker implementation, if you\nwant to use symbolic constants for the whence parameter. This gives people who have a\nglance at your code the wrong idea that the source code they are looking at actually\ncommunicates with the operating system which it might not do.\n\nTo fix this issue, I suggest duplicating the constants SEEK_SET, SEEK_CUR and SEEK_END\ninto the io module and suggesting people to use the symbolic constants from there\ninstead from os, as they semantically belong to io IMHO.\n\nThis change would only affect backwards-compatibility if somebody declared SEEK_SET,\nSEEK_CUR and SEEK_END in their own source code while importing io without a qualifier,\nbut this is explicitly allowed by the compatibility rules.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:38:14Z",
	"created_at": "2013-12-02T21:16:57Z",
	"updated_at": "2016-06-25T01:23:19Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
