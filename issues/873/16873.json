{
	"id": 173117390,
	"number": 16873,
	"state": "open",
	"title": "database/sql: deadlock if not enough connections available",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n1.5.1\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/yubai/go:/home/yubai/dev/s3/swiftmeter/:/home/yubai/dev/s3/imageserver/\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/golang\"\r\nGOTOOLDIR=\"/usr/lib/golang/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n```go\r\npackage main\r\n\r\nimport (\r\n  \"database/sql\"\r\n  \"fmt\"\r\n  _ \"s3lib/third/mysql\"\r\n  \"os\"\r\n)\r\n\r\nconst (\r\n  User         string = \"****\"\r\n  Password     string = \"****\"\r\n  Host         string = \"****\"\r\n  Port         int    = ****\r\n  ReadTimeout  string = \"60s\"\r\n  WriteTimeout string = \"10s\"\r\n\r\n  StmtInsertSQL string = \"insert into t1 values (?, ?, ?);\"\r\n)\r\n\r\nfunc main() {\r\n  dataSource := fmt.Sprintf(\"%s:%s@tcp(%s:%d)/%s?charset=utf8\u0026interpolateParams=false\u0026readTimeout=%s\u0026writeTimeout=%s\",\r\n    User, Password, Host, Port, \"\", ReadTimeout, WriteTimeout)\r\n  db, err := sql.Open(\"mysql\", dataSource)\r\n  if err != nil {\r\n    os.Exit(-1)\r\n  }\r\n  db.SetMaxOpenConns(1)\r\n  db.SetMaxIdleConns(1)\r\n\r\n  tx, err := db.Begin()\r\n  if err != nil {\r\n    os.Exit(-1)\r\n  }\r\n  insert_stmt, err := db.Prepare(StmtInsertSQL) // deadlock here\r\n  if err != nil {\r\n    os.Exit(-1)\r\n  }\r\n  insert_stmt_r1 := tx.Stmt(insert_stmt)\r\n  insert_stmt_r1.Exec(10000, \"hello\", 100)\r\n  tx.Commit()\r\n}\r\n```\r\n\r\n4. What did you expect to see?\r\nsuccess or got an \"deadlock error\"\r\n\r\n5. What did you see instead?\r\nThe process deadlock while calling \"Prepare\", it seems that, \"Prepare\" need an idle connection, but I have set the MaxOpenConns as 1, the transaction has occupied the only one connection so the Prepare deadlock. \r\nIt can be worked around by setting MaxOpenConns greater than 1.\r\n\r\nThe deadlock call stack is:\r\n···\r\n1 @ 0x42dbe3 0x42dca4 0x404ed1 0x40458b 0x4663e6 0x46746e 0x4672d6 0x4014ab 0x42d800 0x45e2b1\r\n\t0x4663e6\tdatabase/sql.(*DB).conn+0x2f6\t/usr/lib/golang/src/database/sql/sql.go:704\r\n\t0x46746e\tdatabase/sql.(*DB).prepare+0x4e\t/usr/lib/golang/src/database/sql/sql.go:867\r\n\t0x4672d6\tdatabase/sql.(*DB).Prepare+0x76\t/usr/lib/golang/src/database/sql/sql.go:849\r\n\t0x4014ab\tmain.main+0x4ab\t\t\t/home/yubai/dev/lks3plus/gocode/src/apps/test1/test1.go:33\r\n\t0x42d800\truntime.main+0x2b0\t\t/usr/lib/golang/src/runtime/proc.go:111\r\n···\r\n",
	"user": {
		"login": "kayaklee",
		"id": 3760616,
		"type": "User",
		"site_admin": false
	},
	"comments": 9,
	"created_at": "2016-08-25T05:30:59Z",
	"updated_at": "2016-08-26T03:00:14Z"
}
