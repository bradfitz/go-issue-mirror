{
	"id": 51284717,
	"number": 6128,
	"state": "closed",
	"title": "cmd/cgo: incompatible with Xcode 4.6.3 (?)",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n\nIt doesn't happen with all cgo code, but one instance where it does happen is the\nattached broken.go.\n\nWhat is the expected output?\nNothing out of the ordinary, just a normal compilation.\n\nWhat do you see instead?\n\n\u0026quot;gcc produced no output\u0026quot; and the build errors out. Looking at\n\u003ca href=\"https://code.google.com/p/go/source/browse/src/cmd/cgo/gcc.go#311\"\u003ehttps://code.google.com/p/go/source/browse/src/cmd/cgo/gcc.go#311\u003c/a\u003e I can see that this\nresults in a \u0026quot;fatal\u0026quot; when there is no stderr output as a result of running the\ncgo command. Is it really fatal?\n\nThe attached log.txt contains the output of \u0026quot;go tool cgo -debug-gcc broken.go\n\u0026amp;\u0026gt; log.txt\u0026quot;.\n\nBuilding with \u0026quot;CC=gcc go build\u0026quot; works just fine.\n\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n6g\n\nWhich operating system are you using?\n\nOS X 10.8.3\n\nWhich version are you using?  (run 'go version')\n\ngo version devel +897a42d03643 Tue Aug 13 15:08:10 2013 +1000 darwin/amd64\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/6128/0/log.txt\"\u003elog.txt\u003c/a\u003e (380184 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/6128/0/broken.go\"\u003ebroken.go\u003c/a\u003e (92 bytes)",
	"user": {
		"login": "quarnster",
		"id": 1230389,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 22,
	"closed_at": "2014-12-08T10:33:41Z",
	"created_at": "2013-08-13T06:44:44Z",
	"updated_at": "2016-06-24T22:55:00Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
