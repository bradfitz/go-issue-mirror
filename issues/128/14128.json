{
	"id": 129353258,
	"number": 14128,
	"state": "open",
	"title": "proposal: testing/test: Add {T,B}.RawLogf methods",
	"body": "Currently, `{T,B}.Logf` calls into `c.log`, which calls `decorate` on the argument (which prefixes with the file/line, etc.) before appending it to `c.output`. A library that wants to override this decoration has to resort to printing out `\\r` as a hack, e.g. https://github.com/stretchr/testify/blob/master/assert/assertions.go#L207 .\r\n\r\nWhat if `T` and `B` exposed an additional method `RawLogf`, which wouldn't call `decorate` on the argument before appending it to `c.output`? Then the above hack wouldn't be necessary.",
	"user": {
		"login": "akalin-keybase",
		"id": 13270622,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		}
	],
	"comments": 17,
	"created_at": "2016-01-28T06:23:27Z",
	"updated_at": "2016-09-27T04:39:23Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	}
}
