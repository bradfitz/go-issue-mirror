{
	"id": 241097884,
	"body": "@jimmyfrasche \r\n\r\n\u003e if the code generator writes a custom sorter instead of filling in the boilerplate and using the sort package the compiler can optimize it better\r\n\r\nIndeed. But that's the whole point of go generate, you're not constrained. It doesn't make it any less of a \"pro\" in fact it reinforces it as a powerful approach.\r\n\r\n\u003e They're all equivalent to \"something happens and then the code is just written for you and you don't have to deal with it\". \r\n\r\nAgreed; because at the end of the day code is generated. In this respect they are equivalent.\r\n\r\n\u003e The specific mechanism isn't the relevant part.\r\n\r\nIn the context of the problem we are trying to solve the mechanism is extremely relevant. \r\n\r\nTo my mind we are trying to solve:\r\n\r\n_\"how best to remove/alleviate the tedium associated with sorting slices **for the Go community**\"_\r\n\r\nI have emphasised what I consider to be the key part of this statement. \r\n\r\nUnlike an approach that, for example, adds some magic to the reflect package where a simple code change is required to use it, using either go generate or an editor macro requires the user to do something extra (this is incidentally a \"con\" shared by both). \r\n\r\nComparing each:\r\n\r\n* go generate (already available as part of go tool)\r\n * need to `go get`/install the generator\r\n * need to add go generate directives to files\r\n * need to call `go generate` as part of my workflow\r\n* editor macro\r\n * need to find out whether my editor X supports this in the first place\r\n * need to install the macro/plugin that provides the macro....\r\n * need to understand how to use the macro etc..\r\n * ...\r\n\r\nAs I said before, whilst some editors may have support for macros of this sort, these macros are not universally available (i.e. in all editors) and almost by definition usage of these macros is not uniform (i.e. it's different in each editor). Which I think rules out editor macros as a viable means of solving the problem _for the Go community_, because documenting how to use the approach becomes impossible.\r\n\r\nDoes that make sense?",
	"user": {
		"login": "myitcv",
		"id": 3374574,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-19T18:29:47Z",
	"updated_at": "2016-08-19T18:29:47Z"
}
