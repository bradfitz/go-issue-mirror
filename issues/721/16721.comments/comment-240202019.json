{
	"id": 240202019,
	"body": "Taking a key func that's allowed to return one of a list of types ((u)int, []byte, string) makes it look a bit more like sort functions in other languages that take a key func, and would let you later drop in faster sorts specific to the key types without adding APIs. Lots of downsides make that unpalatable (keyFunc'd be an `interface{}` in the signature, trickier internally, overhead of Less calling keyFunc twice, and can't write a custom Less to sort by two fields or whatever). Maybe someone sees a better variation of that idea that I don't :) so throwing it out there anyhow.",
	"user": {
		"login": "twotwotwo",
		"id": 328644,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-16T18:55:22Z",
	"updated_at": "2016-08-16T18:55:22Z"
}
