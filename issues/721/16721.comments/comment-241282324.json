{
	"id": 241282324,
	"body": "If you want typesafety, then it looks like:\r\n\r\n```go\r\n\tsort.With(len(s), func(i, j int) { s[i], s[j] = s[j], s[i] }, func(i, j int) bool {\r\n\t\tif s[i].Foo != s[j].Foo {\r\n\t\t\treturn s[i].Foo \u003c s[j].Foo\r\n\t\t}\r\n\t\treturn s[i].Bar \u003c s[j].Bar\r\n\t})\r\n```\r\n\r\nThat's a strict improvement over what we have now, but still quite a mouthful, so that wouldn't stop all the complaints.\r\n\r\nIf a `slice.Interface` would support `Len()` and `Swap(i, j int)`, then `sort.Slice` could be implemented without reflection or any other magic. \"Just\" an internal hack to slap `slice.Interface` over all slices.",
	"user": {
		"login": "guichaz",
		"id": 15075404,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-21T21:10:36Z",
	"updated_at": "2016-08-21T21:10:36Z"
}
