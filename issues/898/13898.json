{
	"id": 125833841,
	"number": 13898,
	"state": "closed",
	"title": "go/types: Config.Check says Object.Pkg is in the \"go/importer\" package",
	"body": "The output of this program is,\r\n\r\n```use@main.go:39:24: id=Pkg obj=func (interface).Pkg() *go/types.Package in pkg=go/importer```\r\n\r\nBut this looks wrong. Pkg is a method of the interface types.Object, and its package should be \"go/types\".\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"go/ast\"\r\n\t\"go/importer\"\r\n\t\"go/parser\"\r\n\t\"go/token\"\r\n\t\"go/types\"\r\n\t\"log\"\r\n)\r\n\r\nfunc main() {\r\n\tpkg, fn := \"main\", \"main.go\"\r\n\r\n\tfset := token.NewFileSet()\r\n\tf, err := parser.ParseFile(fset, fn, src, 0)\r\n\tif err != nil {\r\n\t\tlog.Fatalf(\"parse file=%s err=%v\", fn, err)\r\n\t}\r\n\r\n\tcfg := types.Config{\r\n\t\tImporter: importer.Default(),\r\n\t\tError: func(err error) {\r\n\t\t\tlog.Printf(\"check err=%v\", err)\r\n\t\t},\r\n\t}\r\n\r\n\tinfo := types.Info{\r\n\t\tUses: make(map[*ast.Ident]types.Object),\r\n\t}\r\n\r\n\tif _, err = cfg.Check(pkg, fset, []*ast.File{f}, \u0026info); err != nil {\r\n\t\tlog.Printf(\"cfg check err=%v\", err)\r\n\t}\r\n\r\n\tfor id, obj := range info.Uses {\r\n\t\tvar pn string\r\n\t\tif obj != nil \u0026\u0026 obj.Pkg() != nil {\r\n\t\t\tpn = obj.Pkg().Path()\r\n\t\t}\r\n\t\tif id.Name == \"Pkg\" {\r\n\t\t\tfmt.Printf(\"use@%v: id=%s obj=%v in pkg=%s\\n\", fset.Position(id.Pos()), id.Name, obj, pn)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar src = `package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"go/ast\"\r\n\t\"go/importer\"\r\n\t\"go/parser\"\r\n\t\"go/token\"\r\n\t\"go/types\"\r\n\t\"log\"\r\n)\r\n\r\nfunc main() {\r\n\tpkg, fn := \"main\", \"main.go\"\r\n\r\n\tfset := token.NewFileSet()\r\n\tf, err := parser.ParseFile(fset, fn, src, 0)\r\n\tif err != nil {\r\n\t\tlog.Fatalf(\"parse file=%s err=%v\", fn, err)\r\n\t}\r\n\r\n\tcfg := types.Config{\r\n\t\tImporter: importer.Default(),\r\n\t\tError: func(err error) {\r\n\t\t\tlog.Printf(\"check err=%v\", err)\r\n\t\t},\r\n\t}\r\n\r\n\tinfo := types.Info{\r\n\t\tUses: make(map[*ast.Ident]types.Object),\r\n\t}\r\n\r\n\tif _, err = cfg.Check(pkg, fset, []*ast.File{f}, \u0026info); err != nil {\r\n\t\tlog.Printf(\"cfg check err=%v\", err)\r\n\t}\r\n\r\n\tfor id, obj := range info.Uses {\r\n\t\tvar pn string\r\n\t\tif obj != nil \u0026\u0026 obj.Pkg() != nil {\r\n\t\t\tpn = obj.Pkg().Path()\r\n\t\t}\r\n\t\tif id.Name == \"Pkg\" {\r\n\t\t\tfmt.Printf(\"use@%v: id=%s obj=%v in pkg=%s\\n\", fset.Position(id.Pos()), id.Name, obj, pn)\r\n\t\t}\r\n\t}\r\n}\r\n`\r\n```",
	"user": {
		"login": "zncoder",
		"id": 8146771,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"closed_at": "2016-01-13T18:34:37Z",
	"created_at": "2016-01-10T17:37:29Z",
	"updated_at": "2016-01-13T18:34:38Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
