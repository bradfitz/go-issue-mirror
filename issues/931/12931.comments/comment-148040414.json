{
	"id": 148040414,
	"body": "How are you running this program? Are you using go run ?\n\nOn Wed, 14 Oct 2015, 23:46 Xiang Liang \u003cnotifications@github.com\u003e wrote:\n\n\u003e I use go version go1.5.1 darwin/amd64.\n\u003e\n\u003e I write a simple http server like:\n\u003e\n\u003e package main\n\u003e\n\u003e import (\n\u003e \"log\"\n\u003e \"net/http\"\n\u003e \"os\"\n\u003e \"os/signal\"\n\u003e )\n\u003e\n\u003e func main() {\n\u003e c := make(chan os.Signal, 1)\n\u003e signal.Notify(c)\n\u003e go func() {\n\u003e for s := range c {\n\u003e log.Println(\"recv signal: \", s.String())\n\u003e }\n\u003e }()\n\u003e\n\u003e     http.HandleFunc(\"/hello\", func(rw http.ResponseWriter, r *http.Request) {\n\u003e             resp, _ := http.Get(\"http://www.baidu.com\")\n\u003e             if resp != nil \u0026\u0026 resp.Body != nil {\n\u003e                     resp.Body.Close()\n\u003e             }\n\u003e             http.Error(rw, \"ok\", http.StatusOK)\n\u003e     })\n\u003e     log.Fatal(http.ListenAndServe(\":8888\", nil))\n\u003e\n\u003e }\n\u003e\n\u003e Then, If I curl http://127.0.0.1:8888/hello and then press Ctrl-C very\n\u003e quickly, the server will receive \"broken pipe\" signal. And if server\n\u003e receive many broken pipe signal, the process will exit.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/12931\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-14T12:50:58Z",
	"updated_at": "2015-10-14T12:50:58Z"
}
