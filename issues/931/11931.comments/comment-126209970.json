{
	"id": 126209970,
	"body": "Confirmed. I see a slightly different error on OSX, but a panic non the less. The suspicious looking fault address is a side effect of the SIGSEGV handler on darwin freaking out if the fault address is higher than the 48th bit.\r\n```\r\nzapf(~/src/golang.org/x/crypto/ssh) % go test github.com/ipfs/go-ipfs/test/integration                                                                                   \r\nunexpected fault address 0xb01dfacedebac1e\r\nfatal error: fault\r\n[signal 0xb code=0x1 addr=0xb01dfacedebac1e pc=0xc7b5]\r\n\r\ngoroutine 196 [running]:\r\nruntime.throw(0x730e30, 0x5)\r\n        /Users/dfc/go/src/runtime/panic.go:527 +0x96 fp=0xc8200b2cc8 sp=0xc8200b2cb0\r\nruntime.sigpanic()\r\n        /Users/dfc/go/src/runtime/sigpanic_unix.go:27 +0x2ba fp=0xc8200b2d18 sp=0xc8200b2cc8\r\nruntime.mapaccess1_faststr(0x53bde0, 0xc82005b800, 0xc82057a750, 0x22, 0x20)\r\n        /Users/dfc/go/src/runtime/hashmap_fast.go:262 +0x415 fp=0xc8200b2d78 sp=0xc8200b2d18\r\ngithub.com/ipfs/go-ipfs/p2p/peer.(*metrics).LatencyEWMA(0xc82057c028, 0xc82057a750, 0x22, 0x0)\r\n        /Users/dfc/src/github.com/ipfs/go-ipfs/p2p/peer/metrics.go:60 +0x70 fp=0xc8200b2dc0 sp=0xc8200b2d78\r\ngithub.com/ipfs/go-ipfs/routing/kbucket.(*RoutingTable).Update(0xc8200e8000, 0xc82057a750, 0x22)\r\n        /Users/dfc/src/github.com/ipfs/go-ipfs/routing/kbucket/table.go:69 +0x1f3 fp=0xc8200b2e50 sp=0xc8200b2dc0\r\ngithub.com/ipfs/go-ipfs/routing/dht.(*IpfsDHT).Update(0xc82009a000, 0x19000c0, 0xc820556000, 0xc82057a750, 0x22)\r\n        /Users/dfc/src/github.com/ipfs/go-ipfs/routing/dht/dht.go:252 +0x163 fp=0xc8200b2ed0 sp=0xc8200b2e50\r\ngithub.com/ipfs/go-ipfs/routing/dht.(*netNotifiee).Connected(0xc82009a000, 0x1940308, 0xc820584000, 0x1980098, 0xc8200180c0)\r\n        /Users/dfc/src/github.com/ipfs/go-ipfs/routing/dht/notif.go:23 +0x107 fp=0xc8200b2f48 sp=0xc8200b2ed0\r\ngithub.com/ipfs/go-ipfs/p2p/net/mock.(*peernet).openConn.func1(0x19408a0, 0xc82009a000)\r\n        /Users/dfc/src/github.com/ipfs/go-ipfs/p2p/net/mock/mock_peernet.go:172 +0x94 fp=0xc8200b2fb0 sp=0xc8200b2f48\r\nruntime.goexit()\r\n        /Users/dfc/go/src/runtime/asm_amd64.s:1696 +0x1 fp=0xc8200b2fb8 sp=0xc8200b2fb0\r\ncreated by github.com/ipfs/go-ipfs/p2p/net/mock.(*peernet).notifyAll\r\n        /Users/dfc/src/github.com/ipfs/go-ipfs/p2p/net/mock/mock_peernet.go:401 +0xc2\r\n```\r\n\r\nThe same code passes with the race detector under 1.4.2 on the same host so for the moment it is possible that this is memory corruption unrelated to a data race.\r\n\r\n/cc @rsc @randall77 ",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-30T07:35:06Z",
	"updated_at": "2015-07-30T07:35:06Z"
}
