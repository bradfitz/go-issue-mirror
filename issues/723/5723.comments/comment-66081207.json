{
	"id": 66081207,
	"body": "\u003ca id=\"c8\"\u003e\u003c/a\u003eComment 8:\n\n\u003cpre\u003e\u003eNotice that the first goroutine in the trace says it is in semacquire. The first stack\nshould always be the running goroutine, so I'd like to know, in addition to the split\nstack problem, how it is that a goroutine stuck in semacquire can possibly be splitting\nits stack. \n\nThe crash happened on g0, we do not print g0 stacks.\n\nThe goroutine that was running at the time of crash (m-\u003ecurg) is:\n\ngoroutine 9 [running]:\n[fp=0x6c3558] syscall.Syscall()\n/Users/r/go/src/pkg/syscall/asm_darwin_amd64.s:15 +0x5\n[fp=0x6c35d8] syscall.forkAndExecInChild(0xc210968720, 0xc210176d80,\n0x3, 0x3, 0xc21096d160, ...)\n/Users/r/go/src/pkg/syscall/exec_bsd.go:59 +0xf4\n[fp=0x6c36f8] syscall.forkExec(0xc2104790c0, 0x5b, 0xc210176ca0, 0x2, 0x2, ...)\n/Users/r/go/src/pkg/syscall/exec_unix.go:191 +0x4ac\n[fp=0x6c3748] syscall.StartProcess(0xc2104790c0, 0x5b, 0xc210176ca0,\n0x2, 0x2, ...)\n/Users/r/go/src/pkg/syscall/exec_unix.go:238 +0x74\n[fp=0x6c3848] os.startProcess(0xc2104790c0, 0x5b, 0xc210176ca0, 0x2, 0x2, ...)\n/Users/r/go/src/pkg/os/exec_posix.go:45 +0x33e\n[fp=0x6c3898] os.StartProcess(0xc2104790c0, 0x5b, 0xc210176ca0, 0x2, 0x2, ...)\n/Users/r/go/src/pkg/os/doc.go:24 +0x5c\n[fp=0x6c3a20] os/exec.(*Cmd).Start(0xc210967b40, 0xc212c82276, 0x5abf00)\n/Users/r/go/src/pkg/os/exec/exec.go:264 +0x587\n[fp=0x6c3eb0] main.(*builder).runTest(0xc21008b2a0, 0xc2104390d0,\n0x6c3f38, 0x11)\n/Users/r/go/src/cmd/go/test.go:748 +0x809\n[fp=0x6c3f48] main.func·005(0xc2104390d0)\n/Users/r/go/src/cmd/go/build.go:661 +0x2e8\n[fp=0x6c3fa0] main.func·006()\n/Users/r/go/src/cmd/go/build.go:718 +0x109\n[fp=0x6c3fa8] runtime.goexit()\n/Users/r/go/src/pkg/runtime/proc.c:1243\ncreated by main.(*builder).do\n/Users/r/go/src/cmd/go/build.go:724 +0x3b7\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-17T15:44:08Z",
	"updated_at": "2014-12-08T10:31:18Z"
}
