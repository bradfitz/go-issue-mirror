{
	"id": 78950575,
	"number": 10925,
	"state": "closed",
	"title": "cmd/6g: invalid type inference",
	"body": "http://play.golang.org/p/LoD6rBZe8J\r\n\r\nExpected result: \"[[one] [two] [three]]\"\r\nActual result: \"[[three] [three] [three]]\".\r\n\r\nI believe this is due to incorrect type inference. I think when f is\r\ndeclared in line 8, it inherits the type together with the \"does not\r\nescape\" property of the \"ss\" argument in \"prototype\". The result is\r\nthat f([]string{s}) reuses the same array underlying the slice, as\r\nseen here:\r\n\r\nhttp://play.golang.org/p/VU_J0UrURA\r\n\r\nUsing explicit type or removing argument name in the prototype()\r\nresults in correct escape analysis and does not exhibit the bug:\r\n\r\nhttp://play.golang.org/p/g5bHU-0KRS\r\n\r\ngccgo does not seem to have this bug.",
	"user": {
		"login": "zagrodzki",
		"id": 12544080,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "dr2chase",
		"id": 1928999,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"closed_at": "2015-05-22T01:36:27Z",
	"created_at": "2015-05-21T11:21:38Z",
	"updated_at": "2016-06-25T02:09:18Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
