{
	"id": 231481377,
	"body": "Thanks @sctb  The current implementation is a bit inconsistent in its handling of nil pointers: a nil pointer to a basic type returns `nil, nil` but a nil pointer to a type that implements the Valuer interface calls the type's Value function.  This in turn breaks when the Value function is defined on a value (not on a pointer).\r\n\r\nI would suggest to handle nil pointers consistently between basic types and types that implement the Valuer interface.  In the case of a type that implements the Valuer interface, this would allow the caller to decide whether to pass a pointer or a value to the ConvertValue function (which logically tends to correspond to database columns with or without NOT NULL constraint).  \r\n\r\nJust thought it might make sense to consider that along with the change you propose.",
	"user": {
		"login": "220kts",
		"id": 11798252,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-08T21:49:29Z",
	"updated_at": "2016-07-08T21:49:29Z"
}
