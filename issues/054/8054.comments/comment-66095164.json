{
	"id": 66095164,
	"body": "\u003ca id=\"c9\"\u003e\u003c/a\u003eComment 9:\n\n\u003cpre\u003eI hate to belabor the point but it seems you just invalidated the WaitGroup\nimplementation.\nI understand the rules that are in place when using WaitGroup.\n\nAll Add()s before a Wait().  I am assuming Done() is allowed any time after a\ncorresponding Add() including after Wait().\nThe problem I have is the implementation of Done() which invalidates the rules of use. \nDone() is simply an Add(-1) which means Add() can occur after Wait().  Or are we really\nsaying that you cannot allow the count to go to zero and then above 0 with an\noutstanding Wait()?\n\nThe moment I have to wrap this all with a Mutex I might as well count myself and use a\nbuffered channel or Condition or even a WaitGroup of 1 which I trigger when my count is\n0.\n\nBut like I stated in the beginning net/http/httptest/Server.go has the same race since\nit too makes the same bad assumption on how to use a WaitGroup.\u003c/pre\u003e",
	"user": {
		"login": "fraenkel",
		"id": 929377,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-05-21T23:29:31Z",
	"updated_at": "2014-12-08T10:44:43Z"
}
