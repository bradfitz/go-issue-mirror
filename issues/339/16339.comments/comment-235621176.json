{
	"id": 235621176,
	"body": "@bcmills \r\n\r\nIf your type/func/etc was initially in net/context, packages that import net/context expect the type/func/var to come from net/context. (the package name is part of the type information).\r\n\r\nAliasing seems to get things backwards. If you move types to, let's say, an internal package, you don't want clients to use this type. The type info has changed.\r\nIf you did that, any change at the bottom of the dependency tree would have to be propagated upwards, to clients of clients and clients of clients of clients etc.\r\n\r\nNow, let's say the context.Context type has methods that returns types that have been moved to a different packages, if these types are not **copied** back, things are going to break.\r\n\r\nThat's why I don't think that type/var level aliasing is the proper mechanism. You don't actually want a reference.",
	"user": {
		"login": "atdiar",
		"id": 12191458,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-27T15:24:31Z",
	"updated_at": "2016-07-27T15:35:03Z"
}
