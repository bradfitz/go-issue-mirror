{
	"id": 236345298,
	"body": "After going through all this thread: I am a clear -1.\r\n\r\n- I have several years of background in C# using Visual Studio + Jetbrains Resharper. Many of the refactoring problems i saw here mentioned are handled by Resharper gracefully just using static code analysis: Moving types to different packages, extracting methods, introducing parameters etc. So before introducing such a feature to the language i would like to see a more (much) more powerful Go Guru (which i would like to see anyway, independent of this proposal). Intellij has similar facilities for Java. I admit it could be hard to scale those tools for really large projects, but is feels wrong for me to introduce such an unsound language feature for a problem that should be solved otherwise.\r\n\r\n- If there is a temporary need to for parts of a project to use different versions of a dependency: Isn't that why vendoring was introduced? That can also be applied in a monorepo. I know: Than there are different \"truths\" for the same package which has to be avoided. But then it shows more a flaw of the monorepo-one-truth approach and should be solved there somehow and not clutter the go language.\r\n\r\n- I think the discussion shows how confused everybody is about the possible use and it's effects. I would like to see some a little larger example by the people who favour this proposal, so that everybody can develop some \"feel\" for it. Yes, i did see the examples in the proposal, but those are very micro and did not help me see a good usecase for this proposal.\r\n\r\n- My first thought - and i cannot get it out of my head since - was: \"Oh god, C macros\". I know it is technically very different und much more limited, but i see some similar \"potential\" it - this is not meant in a positive way.",
	"user": {
		"login": "0x434D53",
		"id": 122387,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 4,
		"+1": 4
	},
	"created_at": "2016-07-30T05:44:20Z",
	"updated_at": "2016-07-30T19:56:03Z"
}
