{
	"id": 234578142,
	"body": "@davecheney \r\n\r\n\u003e 1. internal/ packages encourage a proliferation of a taxonomy of tiny little packages with poor names and divided responsibilities.\r\n\u003e\r\n\u003e 2. this alias proposal permits the package author to continue in this fashion, then smoosh them all back together into an idiomatic _looking_ top level package.\r\n\r\nI'd like to give an example in exactly the opposite direction.  One of the packages I'd like to see cleaned up using aliases is the mainline implementation of Protocol Buffers (https://godoc.org/github.com/golang/protobuf/proto).\r\n\r\nAs you can see today, the package is enormous and the API is a mishmash of user-facing functions (such as `proto.Marshal`) and internal hooks for the packages generated by the protobuf compiler (most egregiously, `proto.XXX_InternalExtensions`).\r\n\r\nTo make the package API easier for users to understand, it would be nice to separate the user-facing API into a separate package from the internal hooks.  That is not possible today without subdividing _the API itself_ into lots of tiny packages: the internals and the user API must both refer to certain concrete types (such as `proto.ExtensionDesc`), and if those types were moved into subpackages, users would also have to delve into those subpackages in order to understand the user API.\r\n\r\nWith type aliases, there could be a single \"proto implementation\" package that includes the internal hooks, and a \"proto API\" package that includes only the user-facing functions and types, using aliases to forward the definitions of types that must be shared between the API and implementation.\r\n\r\nThat certainly raises some interesting documentation problems - what do you show in godoc for an aliased type? - but I believe they are resolvable.  I would argue that the end result, though, is much better - a package with a clearly-defined user API, rather than a jumble of API and internals that users need to wade through to find what they're looking for.",
	"user": {
		"login": "bcmills",
		"id": 5200974,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	},
	"created_at": "2016-07-22T15:39:31Z",
	"updated_at": "2016-07-22T15:39:31Z"
}
