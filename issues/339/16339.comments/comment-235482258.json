{
	"id": 235482258,
	"body": " I don't think `import p.T` is a good idea.  It's too similar to python's `from p import T`, and the two have very different use cases.  In addition, as stated, it doesn't give you the ability to rename T, which I think will be very common.  For example, you move utils.HTTPClient to http.Client.  You could expand the import syntax with renaming a la imports - `import HTTPClient http.Client` ... but now that's *two* new ways to use import.\r\n\r\nImport is import.  You import packages.  I'd like to see it stay that way.  One of the things I really really love about Go is that everything is namespaced... imports define new namespaces in this file.  Let's not change import to mean something else, too, especially something which removes namespaces.\r\n\r\nI don't see any reason why `import HTTPClient http.Client` is better than `type HTTPClient =\u003e http.Client`   ... in fact I find the latter much easier to understand, because it doesn't bring any baggage, from this language or others.  It also makes it more clear what HTTPClient is (it's a type)... and if we want to start small and only support type aliases to start, it's far less confusing (IMO) than `import foo p.Bar` which looks like it can work on any exported name.\r\n\r\nThat being said, I'm still of a mind that this seems like something that should be solved with tooling, not a language change.  Refactoring large codebases in any language is hard. The problem this solves seems like something that can easily be automated in most codebases.  Yes, it's a big bang sort of change, but it's also purely mechanical.  The change from golang.org/x/net/context to stdlib context is a perfect example.  The main pain point is changing all those import statements.  Sure, it means you have to touch like every file everywhere... but the actual change is trivial (and in the case of context, a super simple find and replace is probably perfectly sufficient).",
	"user": {
		"login": "natefinch",
		"id": 3185864,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-27T04:40:27Z",
	"updated_at": "2016-07-27T04:40:27Z"
}
