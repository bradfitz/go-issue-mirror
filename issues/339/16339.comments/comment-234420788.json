{
	"id": 234420788,
	"body": "On Thu, Jul 21, 2016 at 8:03 PM, Dave Cheney \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e server is a bad name for a package, client is also a bad name for a\n\u003e package.\n\n\nI have explicitly said \"multiple internal packages\". I don't think\nclient/common/server are bad name for an internal package under net/http.\n\nLet me be more specific, in my net/http example, I propose that we break\nnet/http into:\n\nnet/http: use type alias to export types from the following internal\npackages\nnet/http/internal/common: Request, Response etc.\nnet/http/internal/server client side only logic\nnet/http/internal/client server side only logic\nnet/http/internal/http2: vendored copy of x/net/http2\n\n(For http2, we can do the same, but to support older Go versions, we can't\ndo the break yet.)\n\nOn Fri, Jul 22, 2016 at 10:01 AM, Minux Ma \u003cnotifications@github.com\u003e wrote:\n\u003e\n\u003e \u003e Perhaps it's better to point out a few packages that really benefit from\n\u003e \u003e refactoring with the help of type aliases. I think net/http is one of\n\u003e them.\n\u003e \u003e\n\u003e \u003e If we could break it into multiple internal packages, say, one for common\n\u003e \u003e logic, one for client and another for server, I'd expect we can properly\n\u003e \u003e vendor http2 into net/http without the current bundle hack. (search\n\u003e \u003e \"[golang-dev] http -\u003e http2 -\u003e http import cycle\" for the email.)\n\u003e\n",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 3,
		"+1": 1,
		"-1": 2
	},
	"created_at": "2016-07-22T00:09:16Z",
	"updated_at": "2016-07-22T00:09:16Z"
}
