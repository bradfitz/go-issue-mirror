{
	"id": 235675212,
	"body": "@bcmills are you talking about the package `google.golang.org/appengine` or the package `appengine` that, I think, is in `GOROOT` on appengine itself? I mean in terms of an import location one should use?\r\n\r\nThis location in the `GOROOT` is a non-standard way of doing things that's already an odd one out.\r\n\r\nHere's what I would do for that (and it's part of the larger package management discussion)...\r\n* Add release versions to the `google.golang.org/appengine` repo (in this example assuming the latest would be 1.x.x in format).\r\n* Start a new major version change\r\n* Change `google.golang.org/appengine`\r\n* Create a 2.0.0 release with the new changes\r\n* Use a tool like GB, Glide, or real package manager in Go (yet to be created) that deals with versions. Use the package manager, like in the other major languages, to make sure you have the right versions in your app.\r\n\r\nThe last bullet is important for this strategy to work.\r\n\r\nThis problem exists because we don't have a widely adopted package manager like the other major modern languages.\r\n\r\nIf I were going to deal with a refactored lib in say Rust, Swift, PHP, JavaScript, or many other languages this is what I'd do, anyway.",
	"user": {
		"login": "mattfarina",
		"id": 62991,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	},
	"created_at": "2016-07-27T18:24:49Z",
	"updated_at": "2016-07-27T18:24:49Z"
}
