{
	"id": 232449720,
	"body": "@griesemer To clarify my suggestion about restricting internally, this would only be for defining an alias.  \r\n\r\nIf we're moving `type OldType` from package `vcs/user1/library/subpkg`, we could create an alias:\r\n```go\r\n// Within the same repository\r\nimport \"vcs/user1/library/subpkg2\"  \r\ntype OldType =\u003e subpkg2.NewType\r\n\r\n// Or within the user's tree\r\nimport \"vcs/user1/newlib\"\r\ntype OldType =\u003e newlib.NewType\r\n```\r\n\r\nConsumers of the library would still see:\r\n```go\r\n// Unchanged from before the alias definition\r\nimport \"vcs/user1/library/subpkg\"\r\nvar myvar subpkg.OldType  \r\n```\r\n\r\nWhat I'm looking to avoid is allowing anyone to create aliases into someone else's code.  This would still require users to fork the base library, in order to refactor a type out of it:\r\n```go\r\n// package vcs/user1/mylib\r\nimport \"vcs/user2/YourLib\"\r\ntype MyType =\u003e YourLib.YourType  // Error:  Alias can't be created.\r\n```",
	"user": {
		"login": "Kunde21",
		"id": 10493268,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-13T18:45:42Z",
	"updated_at": "2016-07-13T18:45:42Z"
}
