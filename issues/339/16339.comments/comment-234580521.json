{
	"id": 234580521,
	"body": "@davecheney \r\nThere are also documentation and testing advantages to smaller \"internal\" packages.  You can use godoc or similar tools to see the surface area over which the subpackages interact and its documentation, getting a clearer view of the key concepts in the _implementation_ of the package (not just the exported API).  It's much easier to see the scope of unexported helper functions and types: you can know that they do not cross the subpackage boundary.  Finally, you can write unit-tests at the subpackage boundaries, ensuring that the tests cover the \"stable abstractions\" of the subpackages rather than arbitrarily jumbling together internal (and unstable) hooks from across the package.\r\n\r\nI don't know enough about the internals of net/http to say whether that approach would be particularly helpful for that package, but I have had a much more pleasant time maintaining packages written in this style today than trying to make sense of (and maintain) similar packages in the monolithic style.",
	"user": {
		"login": "bcmills",
		"id": 5200974,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	},
	"created_at": "2016-07-22T15:48:04Z",
	"updated_at": "2016-07-22T15:48:04Z"
}
