{
	"id": 232220679,
	"body": "I'm inclined in favor of a more limited form of the proposal. Here's a first round of comments, in no particular order:\r\n\r\n* I'm concerned about the readability impact of aliased local variables (spooky action at a distance). Aliasing via pointers already incurs mental overhead; I wouldn't like to see more sources of that added. I'd like to suggest that this be restricted to top-level declarations. This addresses all the original motivations, while not adding aliases in places where code typically gets complex, i.e., in functions.\r\n\r\n* It was not so many years ago that I occasionally accidentally wrote `val -\u003e ch` to try to send `val` over `chan`. We'd have to take special care to give very good error messages around this. This is an advantage of `=\u003e` over `-\u003e`. (Not that I think it is a necessarily a good idea, but if restricted to the top level, then `:=` could be used as the alias syntax.)\r\n\r\n* The gc compiler has special-cased goo to handle runes and bytes just for error messages. It runs through large swathes of the compiler (all the way up to and including Node-\u003eSSA conversion). I'm nervous that keeping aliases alive for the purposes of error messages will add non-trivial complication.\r\n\r\n* I wonder whether `go doc` and other documentation friends could automatically \"follow\" aliases if the alias itself doesn't have any associated documentation.\r\n\r\n\r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 6,
		"+1": 6
	},
	"created_at": "2016-07-13T00:22:59Z",
	"updated_at": "2016-07-13T00:22:59Z"
}
