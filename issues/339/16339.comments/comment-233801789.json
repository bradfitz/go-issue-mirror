{
	"id": 233801789,
	"body": "@griesemer I was talking about this part, which is the one:\r\n\r\n\u003e @ianlancetaylor then the problem should be expressed as such: people which have large scale refactoring needs should step forward and speak. If they are enough (say more than a handful) then it can be seen as useful outside of Google.\r\n\u003e \r\n\u003e I think this is rather a harmful proposal for the language as it goes against the Go being made to be easily readable. Someone argued that if we make this ugly enough people will feel compelled not to use it / quickly finish the said big refactoring / temporary workaround. However all the evidence points to the contrary, if it's there, people will use it, and it will have to be supported down the line.\r\n\u003e\r\n\u003e Again, please accept this might be a Google specific problem if it doesn't appear to be a concern for the others due to the way vendoring / versioning are used (or should be used). To this end I'd propose asking the community for feedback on how they structure the packages / code bases / deal with large numbers of \"own\" dependencies and how is refactoring being done.\r\n\r\nThe answers I have are for two bullet points but not for the parts that actually matter for me as a Go user.\r\n\r\nOthers have voiced as well, this goes against the readability and maintainability of Go, adding to the confusion of new gophers as well as making tools harder to maintain (not by much but eh).\r\n\r\nAnd while you and other gophers from the Go team are able to discern and execute clean designs (the example you gave) look at the ways this can / will be abused by others. Also until this comment, the need for this feature to be used in Go itself didn't even came up, no?\r\n\r\nI thank you for the detailed explanation, I'll read it and try to understand it as soon as possible as well.",
	"user": {
		"login": "dlsniper",
		"id": 607868,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-19T23:59:36Z",
	"updated_at": "2016-07-19T23:59:36Z"
}
