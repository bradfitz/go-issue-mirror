{
	"id": 232558409,
	"body": "@atdiar An alias is just an identifier denoting an object (const, var, type, func). The alias name and the original name denote the exact same object and thus are fully interchangeable. Think of it like two labels attached to the same thing.\r\n\r\nYou are correct that a wrapper function (the \"alias\") is not the same function as the one it calls and thus not quite the same as an alias. But the **effect** is the same: No matter which function you call, you get the same result. Furthermore, because equality is not defined for functions (only testing against nil), a program cannot observe the difference between the two functions (excluding the possibility that the wrapper might run slightly slower if the call it wraps doesn't get inlined).\r\n\r\nThe same is true even more so for constants.",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-14T05:11:58Z",
	"updated_at": "2016-07-14T05:11:58Z"
}
