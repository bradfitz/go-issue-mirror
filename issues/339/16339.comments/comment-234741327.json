{
	"id": 234741327,
	"body": "@egonelbre \r\n\r\n\u003e Let's say over the next 20 years, you have additional 4 different versions of protobuf - at which point do you remove the aliases? Or do you keep them all around?\r\n\r\nI'd propose that you keep the aliases around for the lifetime of the (old) package.  At some point, you deprecate the old package and remove it, and the aliases along with it.\r\n\r\n\u003e What will you do when it's not possible to alias version 3 into version 6, because of version 4 removed some fields and methods.. and added some methods that are required to be called?\r\n\r\nYou either deprecate version 3, or you don't design version 6 that way.\r\n\r\nAliasing reduces constraints on backward-compatible refactoring, but it doesn't eliminate them.  (Backward-compatibility always has a cost.)",
	"user": {
		"login": "bcmills",
		"id": 5200974,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-23T21:25:06Z",
	"updated_at": "2016-07-23T21:25:06Z"
}
