{
	"id": 234432641,
	"body": "Actually vendoring could also be misused the same as internal could as the\ncurrent semantics of vendor is actually internal vendor.\n\nRegarding your comments about convenience features, this type alias feature\nisn't a convenience feature (as ?: and assertions are). It's also not too\ncomplicated to implement or use correctly (as inheritance and generics are.)\n\nAll features can be misused. The important thing is whether it's useful\nenough to outweigh possible misuses and whether it's possible to solve\nmisuse with tools.\n\nOne example of arbitrary language limitation I'm referring to:\nwe could certainly define Go to have rigid format as outputted by gofmt.\nEven if gofmt exists (assuming we can define its input syntax separately),\nI don't think the resulting language is usable.\n\nAlso, I think you have overstated the problem of overusing of internal\npackages. In a sense, type aliases could make those packages better by\nproviding a way to have a more useful top-level package. Why is that a bad\nthing?\n",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-22T01:38:56Z",
	"updated_at": "2016-07-22T01:38:56Z"
}
