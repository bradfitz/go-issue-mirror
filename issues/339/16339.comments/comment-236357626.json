{
	"id": 236357626,
	"body": "@0x434D53 How much larger an example than the move from golang.org/x/net/context to context can you wish for? The former is imported by [5800 packages](https://godoc.org/golang.org/x/net/context?importers). Packages that use the former are relatively likely to be mutually incompatible with packages that use the latter.\r\n\r\nEven if we assume that SemVer or vendoring would be a working concept, I fail to see, how they can actually help with this situation, as it's the most horrific case of diamond dependencies ever. Unless you suggest that everyone just stops moving forward over the next 6 months or so, until everyone has caught up, and then everyone releasing the next major version at the same time.\r\n\r\nAliasing solves this instantly, just make golang.org/x/net/context.Context an alias for context.Context with a build tag for â‰¥ go1.7 (if we pretend that the feature would already exist) and then you are no longer blocked on the transition and take your time filing PRs against all those 5800 packages. Yes, it's not a large use (it's just one alias in one package), but it solves a large-scale problem.\r\n\r\nIn fact, as aliasing won't exist in 1.7, this can serve as a perfect test-bed, IMO: Implement aliasing and make it ready for 1.8. See how the community deals with context over the 1.7 period. If we see that it's not an actual problem, rip out aliases before releasing 1.8. My prediction is, that context will demonstrate the need for this by either not being adopted or by causing wide-spread annoyances over the next year or so.",
	"user": {
		"login": "Merovius",
		"id": 720787,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 2,
		"+1": 2
	},
	"created_at": "2016-07-30T10:22:35Z",
	"updated_at": "2016-07-30T10:22:35Z"
}
