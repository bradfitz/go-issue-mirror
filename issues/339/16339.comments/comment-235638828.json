{
	"id": 235638828,
	"body": "@atdiar \r\n\u003e it's not just about reflection. It impacts function arguments and return values.\r\n\r\nNo, it doesn't.  Per the proposal:\r\n\u003e An alias denotes the aliased object, and the effect of using an alias is indistinguishable from the effect of using the original; the only visible difference is the name.\r\n\r\nThat is, with the `context` aliasing set up as described in my previous comment, the following program:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n  \"context\"\r\n  xcontext \"golang.org/x/net/context\"\r\n)\r\n\r\nfunc main() {\r\n  var (\r\n    f1 func(context.Context)\r\n    f2 func(xcontext.Context)\r\n  )\r\n\r\n  f1 = f2\r\n  fmt.Println(reflect.TypeOf(f1) == reflect.TypeOf(f2))\r\n}\r\n```\r\n\r\nwould compile successfully and its output would be `true`.",
	"user": {
		"login": "bcmills",
		"id": 5200974,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-27T16:19:38Z",
	"updated_at": "2016-07-27T16:19:38Z"
}
