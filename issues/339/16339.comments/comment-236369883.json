{
	"id": 236369883,
	"body": "@ianlancetaylor thank you for your reply. I want to make something very clear. I mentioned multi dimensional slices as an _example_, not as a _replacement_ for this proposal. I know that you and Robert have been working hard on the latter and that it is not an easy task. I mentioned multidimensional slices, again only as an example, because I wanted to highlight that there have been many proposals that the Go community have been asking for, literally for the entire life of the language as an open source project. Two other examples that come to mind are built in management of package dependencies, and (i'm sorry to bring it up) generic types. \r\n\r\nI mentioned multidimensional slices as an example of something that Go developers have demonstrated a strong need for for several years by a group of committed (and if we're being honest, long suffering) segment of the market who want to use Go as a replacement for tools written in other languages, as a counterpoint to this proposal which, and I maintain this to be a fact having followed the issue tracker and been a contributor to the project for several years, nobody has asked for in a public forum, ever. \r\n\r\nMy concerns about this feature are not technical, but social. I fear deeply that it will be misused an I have already highlighted some examples in my earlier comments on this thread.\r\n\r\nPut simply, this proposal is not something the community is asking for, and at best, will solve a problem that nobody in the community has (although some are gleefully thinking of ways to find a problem to use this hammer for), yet at the same time it decreases the readability of the language by introducing ambiguity, which hurts every single Go programmer beginner or experienced. As someone who cares deeply about promoting the language to newcomers, those who in trying to learn the language, will obtain zero benefit from an ability to alias types to aid refactoring if they should find themselves in a bizarrely manufactured situation where they cannot refactor their code without staging the change in a branch.\r\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 4,
		"+1": 4
	},
	"created_at": "2016-07-30T15:02:37Z",
	"updated_at": "2016-07-30T15:02:37Z"
}
