{
	"id": 134909339,
	"body": "Code used to replicate issue seen in another application (with URLs redacted):\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"crypto/tls\"\r\n\t\"io\"\r\n\t\"io/ioutil\"\r\n\t\"log\"\r\n\t\"net\"\r\n\t\"net/http\"\r\n\t\"sync\"\r\n\t\"time\"\r\n)\r\n\r\nvar urllist = []string{\r\n// redacted\r\n}\r\n\r\nconst nconcurrent = 10\r\n\r\nfunc main() {\r\n\tt := http.Transport{\r\n\t\tTLSHandshakeTimeout:   20 * time.Second,\r\n\t\tResponseHeaderTimeout: 1 * time.Minute,\r\n\t\tProxy: http.ProxyFromEnvironment,\r\n\t\tDial: (\u0026net.Dialer{\r\n\t\t\tTimeout:   20 * time.Second,\r\n\t\t\tKeepAlive: 30 * time.Second,\r\n\t\t\tDualStack: true,\r\n\t\t}).Dial,\r\n\t\tTLSClientConfig: \u0026tls.Config{\r\n\t\t\tInsecureSkipVerify: true,\r\n\t\t},\r\n\t}\r\n\r\n\tch := make(chan string)\r\n\tvar wg sync.WaitGroup\r\n\twg.Add(nconcurrent)\r\n\tfor i := 0; i \u003c nconcurrent; i++ {\r\n\t\tgo func() {\r\n\t\t\tfor urlstr := range ch {\r\n\t\t\t\treq, err := http.NewRequest(\"GET\", urlstr, nil)\r\n\t\t\t\tif err != nil {\r\n\t\t\t\t\tlog.Fatal(err)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresp, err := t.RoundTrip(req)\r\n\t\t\t\tif err != nil {\r\n\t\t\t\t\tlog.Println(\"RoundTrip\", req.URL, err)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlog.Println(\"RoundTrip\", req.URL, resp.Status, resp.Proto)\r\n\t\t\t\t\tif resp.Body != nil {\r\n\t\t\t\t\t\tb := io.LimitReader(resp.Body, 10000000)\r\n\t\t\t\t\t\t_, err = ioutil.ReadAll(b)\r\n\t\t\t\t\t\tif err != nil {\r\n\t\t\t\t\t\t\tlog.Println(\"ReadAll\", req.URL, err)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twg.Done()\r\n\t\t}()\r\n\t}\r\n\r\n\tfor _, urlstr := range urllist {\r\n\t\tch \u003c- urlstr\r\n\t}\r\n\r\n\tlog.Println(\"Feed completed\")\r\n\tclose(ch)\r\n\twg.Wait()\r\n}\r\n```\r\n\r\n-race yields:\r\n```\r\n==================\r\nWARNING: DATA RACE\r\nRead by goroutine 9:\r\n  bufio.(*Reader).ReadSlice()\r\n      /home/sebastian/go/src/bufio/bufio.go:306 +0x75\r\n  net/http/internal.readLine()\r\n      /home/sebastian/go/src/net/http/internal/chunked.go:110 +0x61\r\n  net/http/internal.(*chunkedReader).beginChunk()\r\n      /home/sebastian/go/src/net/http/internal/chunked.go:47 +0x5a\r\n  net/http/internal.(*chunkedReader).Read()\r\n      /home/sebastian/go/src/net/http/internal/chunked.go:77 +0x11a\r\n  net/http.(*body).readLocked()\r\n      /home/sebastian/go/src/net/http/transfer.go:632 +0x113\r\n  net/http.(*body).Read()\r\n      /home/sebastian/go/src/net/http/transfer.go:624 +0x157\r\n  net/http.(*bodyEOFSignal).Read()\r\n      /home/sebastian/go/src/net/http/transport.go:1296 +0x2df\r\n  io.(*LimitedReader).Read()\r\n      /home/sebastian/go/src/io/io.go:427 +0x15d\r\n  bytes.(*Buffer).ReadFrom()\r\n      /home/sebastian/go/src/bytes/buffer.go:173 +0x414\r\n  io/ioutil.readAll()\r\n      /home/sebastian/go/src/io/ioutil/ioutil.go:33 +0x1a0\r\n  io/ioutil.ReadAll()\r\n      /home/sebastian/go/src/io/ioutil/ioutil.go:42 +0x71\r\n  main.main.func1()\r\n      /home/sebastian/urls.go:75 +0x5b7\r\n\r\nPrevious write by goroutine 45:\r\n  bufio.(*Reader).fill()\r\n      /home/sebastian/go/src/bufio/bufio.go:88 +0x1cf\r\n  bufio.(*Reader).Peek()\r\n      /home/sebastian/go/src/bufio/bufio.go:132 +0x186\r\n  net/http.(*persistConn).readLoop()\r\n      /home/sebastian/go/src/net/http/transport.go:876 +0x14d\r\n\r\nGoroutine 9 (running) created at:\r\n  main.main()\r\n      /home/sebastian/urls.go:83 +0x2e5\r\n\r\nGoroutine 45 (running) created at:\r\n  net/http.(*Transport).dialConn()\r\n      /home/sebastian/go/src/net/http/transport.go:685 +0x11bf\r\n  net/http.(*Transport).getConn.func4()\r\n      /home/sebastian/go/src/net/http/transport.go:549 +0x73\r\n==================\r\n==================\r\nWARNING: DATA RACE\r\nRead by goroutine 9:\r\n  bufio.(*Reader).ReadSlice()\r\n      /home/sebastian/go/src/bufio/bufio.go:306 +0x94\r\n  net/http/internal.readLine()\r\n      /home/sebastian/go/src/net/http/internal/chunked.go:110 +0x61\r\n  net/http/internal.(*chunkedReader).beginChunk()\r\n      /home/sebastian/go/src/net/http/internal/chunked.go:47 +0x5a\r\n  net/http/internal.(*chunkedReader).Read()\r\n      /home/sebastian/go/src/net/http/internal/chunked.go:77 +0x11a\r\n  net/http.(*body).readLocked()\r\n      /home/sebastian/go/src/net/http/transfer.go:632 +0x113\r\n  net/http.(*body).Read()\r\n      /home/sebastian/go/src/net/http/transfer.go:624 +0x157\r\n  net/http.(*bodyEOFSignal).Read()\r\n      /home/sebastian/go/src/net/http/transport.go:1296 +0x2df\r\n  io.(*LimitedReader).Read()\r\n      /home/sebastian/go/src/io/io.go:427 +0x15d\r\n  bytes.(*Buffer).ReadFrom()\r\n      /home/sebastian/go/src/bytes/buffer.go:173 +0x414\r\n  io/ioutil.readAll()\r\n      /home/sebastian/go/src/io/ioutil/ioutil.go:33 +0x1a0\r\n  io/ioutil.ReadAll()\r\n      /home/sebastian/go/src/io/ioutil/ioutil.go:42 +0x71\r\n  main.main.func1()\r\n      /home/sebastian/urls.go:75 +0x5b7\r\n\r\nPrevious write by goroutine 45:\r\n  bufio.(*Reader).fill()\r\n      /home/sebastian/go/src/bufio/bufio.go:87 +0x189\r\n  bufio.(*Reader).Peek()\r\n      /home/sebastian/go/src/bufio/bufio.go:132 +0x186\r\n  net/http.(*persistConn).readLoop()\r\n      /home/sebastian/go/src/net/http/transport.go:876 +0x14d\r\n\r\nGoroutine 9 (running) created at:\r\n  main.main()\r\n      /home/sebastian/urls.go:83 +0x2e5\r\n\r\nGoroutine 45 (running) created at:\r\n  net/http.(*Transport).dialConn()\r\n      /home/sebastian/go/src/net/http/transport.go:685 +0x11bf\r\n  net/http.(*Transport).getConn.func4()\r\n      /home/sebastian/go/src/net/http/transport.go:549 +0x73\r\n```\r\n\r\nEDIT: changed the code above to only access resp if RoundTrip was successful. Reran test to confirm that the issue persists (it does).\r\nEDIT2: Also reproducible with http.DefaultTransport ",
	"user": {
		"login": "sebcat",
		"id": 2697829,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-26T09:10:11Z",
	"updated_at": "2015-08-26T09:43:04Z"
}
