{
	"id": 66088153,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eA very quick reading of the stack trace, here is what I think is going on.\n\ngoroutine 142954 [select]:\nnet/http.(*persistConn).roundTrip(0xc211d40280, 0xc2109d1f30, 0xc211d40280, 0x0, 0x0)\n\t/usr/local/go/src/pkg/net/http/transport.go:879 +0x6d6\nnet/http.(*Transport).RoundTrip(0xcc3b40, 0xc224023340, 0x7bd760, 0x0, 0x0)\n\t/usr/local/go/src/pkg/net/http/transport.go:187 +0x391\nmain.(*retryTransport).RoundTrip(0xcc3b40, 0xc224023340, 0xd, 0x0, 0x0)\n\t/root/src/code.google.com/p/redwood-filter/proxy.go:294 +0x164\nmain.proxyHandler.ServeHTTP(0x0, 0x0, 0x0, 0x0, 0x0, ...)\n\t/root/src/code.google.com/p/redwood-filter/proxy.go:146 +0xd1a\nmain.(*proxyHandler).ServeHTTP(0xc212ca6240, 0x7fcf759c2470, 0xc21f1fca00, 0xc224023340)\n\t/root/src/code.google.com/p/redwood-filter/accesslog.go:1 +0xb4\nnet/http.serverHandler.ServeHTTP(0xc21db535a0, 0x7fcf759c2470, 0xc21f1fca00,\n0xc224023340)\n\t/usr/local/go/src/pkg/net/http/server.go:1597 +0x16e\nnet/http.(*conn).serve(0xc224029000)\n\t/usr/local/go/src/pkg/net/http/server.go:1167 +0x7b7\ncreated by net/http.(*Server).Serve\n\t/usr/local/go/src/pkg/net/http/server.go:1644 +0x28b\n\nOne of these goroutines has prepared a request and has passed to to proxy.go:146. Round\ntrips happen on another goroutine, so that is why we can't see a direct stack trace,\nhowever\n\ngoroutine 142475 [running]:\nruntime.panic(0x7578e0, 0xcc6148)\n\t/usr/local/go/src/pkg/runtime/panic.c:266 +0xb6\nbufio.(*Reader).Read(0xc22103cd20, 0xc21e0a1000, 0x1000, 0x1000, 0x1000, ...)\n\t/usr/local/go/src/pkg/bufio/bufio.go:152 +0x100\nio.(*LimitedReader).Read(0xc221355580, 0xc21e0a1000, 0x1000, 0x1000, 0x1000, ...)\n\t/usr/local/go/src/pkg/io/io.go:398 +0xbb\nnet/http.(*body).Read(0xc211559690, 0xc21e0a1000, 0x1000, 0x1000, 0xc21e0a1000, ...)\n\t/usr/local/go/src/pkg/net/http/transfer.go:534 +0x96\nio.(*LimitedReader).Read(0xc221355620, 0xc21e0a1000, 0x1000, 0x1000, 0xdd5, ...)\n\t/usr/local/go/src/pkg/io/io.go:398 +0xbb\nbufio.(*Writer).ReadFrom(0xc22090d700, 0x7fcf759c23c8, 0xc221355620, 0x158dbd, 0x0, ...)\n\t/usr/local/go/src/pkg/bufio/bufio.go:622 +0x15a\nio.Copy(0x7fcf759c24f0, 0xc22090d700, 0x7fcf759c23c8, 0xc221355620, 0x0, ...)\n\t/usr/local/go/src/pkg/io/io.go:348 +0x124\nnet/http.(*transferWriter).WriteBody(0xc21fc53e70, 0x7fcf759c24f0, 0xc22090d700, 0x0,\n0x0)\n\t/usr/local/go/src/pkg/net/http/transfer.go:196 +0x57c\nnet/http.(*Request).write(0xc21f4870d0, 0x7fcf759c24f0, 0xc22090d700, 0x1, 0xc211559a20,\n...)\n\t/usr/local/go/src/pkg/net/http/request.go:400 +0x7e4\nnet/http.(*persistConn).writeLoop(0xc224915d00)\n\t/usr/local/go/src/pkg/net/http/transport.go:797 +0x185\ncreated by net/http.(*Transport).dialConn\n\t/usr/local/go/src/pkg/net/http/transport.go:529 +0x61e\n\nLooks like it is reading the contents of a request body, who's body is a Bufio.Reader\nwhich is nil, the address of 0x20 is the giveaway there.\n\nAlso concerning thing is the retryTransport, \n\nfunc (t *retryTransport) RoundTrip(req *http.Request) (resp *http.Response, err error) {\n        switch req.Method {\n        case \"GET\", \"HEAD\":\n                for i := 0; i \u0026lt; 3; i++ {\n                        resp, err = t.Transport.RoundTrip(req)\n                        if err == nil {\n                                return resp, err\n                        }\n                }\n                return nil, err\n        }\n\n        return t.Transport.RoundTrip(req)\n}\n\nIt makes some assumptions that request can be reread, which is not the case as\nrequest.Body is an io.Reader, which has no capacity to be rewound. This may be related\nto the problem. I would recommend removing the retryTransport or at least making it more\nrobust and see if that helps.\n\nHTH\n\nDave\u003c/pre\u003e",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-11-17T05:54:59Z",
	"updated_at": "2014-12-22T06:30:08Z"
}
