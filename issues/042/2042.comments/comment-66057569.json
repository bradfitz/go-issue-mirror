{
	"id": 66057569,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eI looked again at this.  There is no import cycle here.\nYou are compiling some code that defines a type named S.\nIt is importing \"bugtest/bar\", which imports \"bugtest/foo\",\nwhich defines a type named S.  bar refers to foo.S.\n\nYour code acts as though its S is the same as bar's foo.S.\nThe correct error is printed:\n\n\t*bar.BarImpl does not implement I (wrong type for Meth method)\n\t\thave Meth(*foo.S) *foo.S\n\t\twant Meth(*S) *S\n\nThis only becomes an import cycle once the code gets \nbuilt and installed as \"bugtest/foo\".  As written, it's just a\ntype mismatch.  When 6g runs, it has no idea where you plan to\ninstall the code.  It doesn't know you think this *is* \"bugtest/foo\".\n\nTo see what I mean, starting with your demo\n\ncp -R foo baz\nperl -p -i -e 's/foo/baz/' baz/{*.go,Makefile}\nmv baz/foo.go baz/baz.go\nmake -C baz gotest\n\nSame error.\n\nUnmerging 2052.\u003c/pre\u003e\n\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-07-23T00:25:57Z",
	"updated_at": "2014-12-08T10:11:05Z"
}
