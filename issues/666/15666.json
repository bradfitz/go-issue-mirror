{
	"id": 154572646,
	"number": 15666,
	"state": "closed",
	"title": "proposal: allow duplicate methods in interfaces",
	"body": "This is a proposal for a minor, backwards-compatible language change.\r\n\r\nCurrently, all methods in an interface type must have different names. The spec says:\r\n\r\n\u003e As with all method sets, in an interface type, each method must have a unique non-blank name.\r\n\r\nThis means that both these interfaces are disallowed:\r\n\r\n```go\r\ntype Dup interface {\r\n\tF()\r\n\tF()\r\n}\r\n\r\ntype NotDup interface {\r\n\tF()\r\n\tF() int\r\n}\r\n```\r\n\r\nThe proposal is to allow interfaces to have non-unique names as long as the method signature is identical for all methods with the same name, that is, to allow duplicate methods. Type Dup above would be allowed, but type NotDup would not. For the purposes of type identity, interface satisfaction, etc., duplicate methods in an interface would be treated as if they occurred exactly once.\r\n\r\nThis arises in practice when embedding interfaces. Consider:\r\n\r\n```go\r\ntype AI interface {\r\n\tA()\r\n}\r\n\r\ntype BI interface {\r\n\tAI\r\n}\r\n\r\ntype CI interface {\r\n\tAI\r\n}\r\n\r\ntype DI interface {\r\n\tBI\r\n\tCI\r\n}\r\n```\r\n\r\nType DI is disallowed by the spec, even though it may be the most clear, concise, self-documenting, easy to maintain, DRY way to express the interface. To work around this, users must manually duplicate the contents of the interface.\r\n\r\nThis invites the response \"just write the code!\". But it is worth observing that these duplicated interfaces can be large and can occur spread across multiple levels and across multiple packages with multiple owners. More importantly, when changing one of the embedded interfaces, all copies must be changed, and there is no clear way to write a tool to safely do that, or even detect a problem, because the explicit link between the embedding and the embedded interface is gone.\r\n\r\nI believe that the update to the spec would be minimal, and that the impact on compilers and typecheckers would be small and localized.\r\n\r\ncc @hasty who has been repeatedly frustrated by this\r\n\r\ncc @griesemer @ianlancetaylor @rsc @robpike @mdempsky @bradfitz  to tell me why this is a terrible idea :)\r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2016-05-12T21:37:49Z",
	"created_at": "2016-05-12T20:22:53Z",
	"updated_at": "2016-05-12T21:37:49Z",
	"milestone": {
		"id": 1373555,
		"number": 30,
		"title": "Proposal"
	},
	"reactions": {
		"total_count": 4,
		"+1": 4
	}
}
