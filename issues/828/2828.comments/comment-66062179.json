{
	"id": 66062179,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eI would be stronger and say that for a given type T, all methods\ndirectly associated with that type (not via embedding) must have\ndifferent names. If T is a struct, those method names must also be\ndifferent from all field names.\n\nBasically, all method and field names directly associated with a T go\ninto the same scope.\n\nIf you just say that fields and methods must have different names,\nthen I can still have two methods with the same name:\n\ntype T struct{}\n\nfunc (*T) M() {}\nfunc (*T) M() {}\n\nis legal according to the current spec (albeit not accepted by 6g).\n\n- gri\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-02-03T00:38:55Z",
	"updated_at": "2014-12-08T10:14:58Z"
}
