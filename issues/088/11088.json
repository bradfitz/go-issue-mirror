{
	"id": 85604039,
	"number": 11088,
	"state": "closed",
	"title": "runtime: map assignment copies key every time",
	"body": "While debugging another issue, Austin and I discovered that when m[k] already exists,\n\n\tm[k] = v\n\nstill copies k into the map entry as the new value for key.\n\nThere is no semantic problem here, but if k is a string, this means that the\nold pointer is evicted and k is recorded in its place.\n\nI believe that some users expect that only the first assignment\nusing a string map key captures the string. But what happens\nis that every assignment captures the string (and releases the\npreviously captured string).\n\nThere is a also a minor expense in memmove and write barriers\nbut that is not very important compared to the string capture.\n\nThis seems suboptimal. Why is it this way?",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"comments": 9,
	"closed_at": "2015-09-09T21:07:17Z",
	"created_at": "2015-06-05T18:47:57Z",
	"updated_at": "2016-09-08T15:45:25Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
