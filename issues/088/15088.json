{
	"id": 145541162,
	"number": 15088,
	"state": "closed",
	"title": "expvar: document what expvar.Var's String() interface method requires you to return",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo version devel +b836fe6 Sat Apr 2 18:25:27 2016 -0400 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nlinux/amd64\r\n\r\nCurrently, the expvar.Var interface looks like it is the well known fmt.Stringer interface; both have a single String() method in them. However, this is not the case, because expvar.Var's String() requires you to return a proper JSON object, with the correct quoting and all. This means that not all fmt.Stringer methods will do; for instance, time.Time's String() method returns an unquoted string that will cause JSON parsing failures. That means that naively writing something like:\r\n\r\n    m := expvar.NewMap(\"myapp\")\r\n    m.Set(\"startTime\", time.Now())\r\n\r\nwill cause mysterious downstream failures in things that attempt to consume expvar variables (because time.Time returns an unquoted string, which then winds up in the JSON for /debug/vars).\r\n\r\nThis programmer mistake could be somewhat avoided if the expvar documentation noted the JSON formatting requirement and also that String() functions in other packages that are intended to satisfy fmt.Stringer will often not work to satisfy expvar.Var.\r\n",
	"user": {
		"login": "siebenmann",
		"id": 865382,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Suggested"
		}
	],
	"comments": 6,
	"closed_at": "2016-05-19T04:21:09Z",
	"created_at": "2016-04-03T21:13:47Z",
	"updated_at": "2016-05-19T04:21:09Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
