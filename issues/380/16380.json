{
	"id": 165666745,
	"number": 16380,
	"state": "closed",
	"title": "cmd/compile: extraneous line number info",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo version go1.7rc1 windows/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nwindows/amd64\r\n\r\n3. What did you do?\r\nProfiling https://play.golang.org/p/pUyOao-V9w\r\n\r\n4. What did you expect to see?\r\nAssembly listing similar to pprof's 1.6.2 `weblist`:\r\n```\r\nruntime.(*mspan).sweep\r\nc:/go/src/runtime/mgcsweep.go\r\n  Total:        90ms      3.19s (flat, cum) 11.32%\r\n    161            .          . // It clears the mark bits in preparation for the next GC round. \r\n    162            .          . // Returns true if the span was returned to heap. \r\n    163            .          . // If preserve=true, don't return it to heap nor relink in MCentral lists; \r\n    164            .          . // caller takes care of it. \r\n    165            .          . //TODO go:nowritebarrier \r\n    166            .          . func (s *mspan) sweep(preserve bool) bool { \r\n    167            .          . \t// It's critical that we enter this function with preemption disabled, \r\n    168            .          . \t// GC must not start while we are in the middle of this function. \r\n    169            .          . \t_g_ := getg() \r\n    170            .          . \tif _g_.m.locks == 0 \u0026\u0026 _g_.m.mallocing == 0 \u0026\u0026 _g_ != _g_.m.g0 { \r\n    171            .          . \t\tthrow(\"MSpan_Sweep: m is not locked\") \r\n    172            .          . \t} \r\n    173            .          . \tsweepgen := mheap_.sweepgen \r\n    174            .          . \tif s.state != mSpanInUse || s.sweepgen != sweepgen-1 { \r\n                   .          .   41e18f: MOVZX 0x3c(CX), BX                               c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41e193: CMPL $0x0, BL                                    c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41e196: JNE 0x41e967                                     c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41e19c: MOVL 0x30(CX), BX                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41e19f: MOVL AX, BP                                      c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41e1a1: DECL BP                                          c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41e1a3: CMPL BP, BX                                      c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41e1a5: JNE 0x41e967                                     c:/go/src/runtime/mgcsweep.go:174\r\n\r\n    175            .          . \t\tprint(\"MSpan_Sweep: state=\", s.state, \" sweepgen=\", s.sweepgen, \" mheap.sweepgen=\", sweepgen, \"\\n\") \r\n    176            .          . \t\tthrow(\"MSpan_Sweep: bad span state\") \r\n    177            .          . \t} \r\n    178            .          .  \r\n    179            .          . \tif trace.enabled { \r\n                   .          .   41e1ab: MOVZX 0x1a8d7e(IP), BX                           c:/go/src/runtime/mgcsweep.go:179\r\n                   .          .   41e1b2: CMPL $0x0, BL                                    c:/go/src/runtime/mgcsweep.go:179\r\n                   .          .   41e1b5: JE 0x41e1c4                                      c:/go/src/runtime/mgcsweep.go:179\r\n                   .          .   41ea2e: JMP 0x41e1ab                                     c:/go/src/runtime/mgcsweep.go:179\r\n\r\n    180            .          . \t\ttraceGCSweepStart() \r\n                   .          .   41e1b7: CALL runtime.traceGCSweepStart(SB)               c:/go/src/runtime/mgcsweep.go:180\r\n                   .          .   41e1bc: MOVQ 0x168(SP), CX                               c:/go/src/runtime/mgcsweep.go:180\r\n\r\n    181            .          . \t} \r\n```\r\n\r\n5. What did you see instead?\r\n```\r\nruntime.(*mspan).sweep\r\nc:/go/src/runtime/mgcsweep.go\r\n  Total:        20ms      170ms (flat, cum)  0.89%\r\n    161            .          . // It clears the mark bits in preparation for the next GC round. \r\n    162            .          . // Returns true if the span was returned to heap. \r\n    163            .          . // If preserve=true, don't return it to heap nor relink in MCentral lists; \r\n    164            .          . // caller takes care of it. \r\n    165            .          . //TODO go:nowritebarrier \r\n    166            .          . func (s *mspan) sweep(preserve bool) bool { \r\n    167            .          . \t// It's critical that we enter this function with preemption disabled, \r\n    168            .          . \t// GC must not start while we are in the middle of this function. \r\n    169            .          . \t_g_ := getg() \r\n    170            .          . \tif _g_.m.locks == 0 \u0026\u0026 _g_.m.mallocing == 0 \u0026\u0026 _g_ != _g_.m.g0 { \r\n    171            .          . \t\tthrow(\"MSpan_Sweep: m is not locked\") \r\n    172            .          . \t} \r\n    173            .          . \tsweepgen := mheap_.sweepgen \r\n    174            .          . \tif s.state != mSpanInUse || s.sweepgen != sweepgen-1 { \r\n                   .          .   41d427: MOVQ 0xe0(SP), DX                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41d42f: MOVZX 0x64(DX), BX                               c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41d433: MOVB BL, 0x29(SP)                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41d437: TESTL BL, BL                                     c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41d439: JNE 0x41de24                                     c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41d43f: MOVL 0x58(DX), SI                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41d442: LEAL -0x1(CX), DI                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41d445: MOVL DI, 0x34(SP)                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41d449: CMPL DI, SI                                      c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41d44b: JNE 0x41de24                                     c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41da11: MOVQ 0xe0(SP), DX                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41da31: MOVQ 0xe0(SP), CX                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41db4b: MOVQ 0xe0(SP), DX                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41db5a: MOVQ 0xe0(SP), DX                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41db84: MOVQ 0xe0(SP), DX                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41dbcc: MOVQ 0xe0(SP), DX                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41dc3d: MOVQ 0xe0(SP), DX                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41dd62: MOVQ 0xe0(SP), DX                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41ddac: MOVQ 0xe0(SP), DX                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41de13: MOVQ 0xe0(SP), DX                                c:/go/src/runtime/mgcsweep.go:174\r\n                   .          .   41de1b: MOVL 0x34(SP), DI                                c:/go/src/runtime/mgcsweep.go:174\r\n\r\n    175            .          . \t\tprint(\"MSpan_Sweep: state=\", s.state, \" sweepgen=\", s.sweepgen, \" mheap.sweepgen=\", sweepgen, \"\\n\") \r\n    176            .          . \t\tthrow(\"MSpan_Sweep: bad span state\") \r\n    177            .          . \t} \r\n    178            .          .  \r\n    179            .          . \tif trace.enabled { \r\n                   .          .   41d451: MOVZX 0x124358(IP), BX                           c:/go/src/runtime/mgcsweep.go:179\r\n                   .          .   41d458: TESTL BL, BL                                     c:/go/src/runtime/mgcsweep.go:179\r\n                   .          .   41d45a: JNE 0x41de02                                     c:/go/src/runtime/mgcsweep.go:179\r\n\r\n    180            .          . \t\ttraceGCSweepStart() \r\n                   .          .   41de02: CALL runtime.traceGCSweepStart(SB)               c:/go/src/runtime/mgcsweep.go:180\r\n\r\n    181            .          . \t} \r\n```\r\nAssembly listing from 41da11 to 41de1b is unnecessary.\r\nversion devel +4054769 produces same listing",
	"user": {
		"login": "ghost",
		"id": 10137,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"closed_at": "2016-09-16T15:56:21Z",
	"created_at": "2016-07-14T21:48:52Z",
	"updated_at": "2016-09-16T15:56:21Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
