{
	"id": 109329263,
	"number": 12808,
	"state": "open",
	"title": "build: CGO_ENABLED=0 ./make.bash does not force default in later runs of cmd/go",
	"body": "I've been trying to figure out how to make my programs build statically by default without specifying `-a -installsuffix cgo -ldflags '-extldflags \"-static\" -s` for every project. I've read through #9344, and supposedly the change to make dynamic builds the default is only for released versions of Go. Accordingly, I tried the following:\r\n\r\n1. Install Go onto my system from a package manager\r\n2. Check out go1.5.1 from Git\r\n3. Set `GOROOT` to point to the checked-out version of Go, and `GOROOT_BOOTSTRAP` to the system version of Go\r\n4. `cd src; ./all.bash` -- successful\r\n5. `rm -rf $GOPATH/pkg`\r\n6. Start a new shell with GOPATH, GOROOT, and PATH all set appropriately. I can verify that I'm using the self-compiled version of Go (which itself was built dynamically), but binaries produced with my self-built Go are still being built dynamically without passing in `-a -installsuffix cgo -ldflags '-extldflags \"-static\" -s`\r\n\r\nIs this a bug, or did I misinterpret the requirements in #9344?\r\n\r\nThanks!",
	"user": {
		"login": "jefferai",
		"id": 28627,
		"type": "User",
		"site_admin": false
	},
	"comments": 13,
	"created_at": "2015-10-01T15:52:34Z",
	"updated_at": "2016-05-05T17:10:29Z",
	"milestone": {
		"id": 1709364,
		"number": 39,
		"title": "Go1.8Early"
	}
}
