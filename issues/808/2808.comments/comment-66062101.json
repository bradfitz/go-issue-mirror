{
	"id": 66062101,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2 by **mt4swm**:\n\n\u003cpre\u003eIt is true, go get code.google.com/.../{cindex,csearch} only\nbuilds and installs cindex and csearch.\nBut, as \"go get\" is checking out the whole project via\nMercurial, cgrep sources are also present - just not built.\n\nNext time when \"go install ./...\" is executed, and the\ncodesearch sources are in some subdirectory of CWD, cgrep will\nalso be installed.  Similar in case of \"go install all\".\n\n\n\nA good example perhaps is code.google.com/p/go9p.  Using\n\"go get code.google.com/p/go9p/p/srv\" will get the whole\nproject but actually install \"srv\" and its dependencies only.\n\nA later run of \"go install all\" though will try to build everything\nincluding the examples located in go9p/srv and go9p/clnt.\nThese are small programs, named e.g. ls, cl, read or tag,\nwhich - if the build wouldn't fail at present - would probably be\ninstalled into the bin directory. (It seems the developers of\ngo9p may have to re-think the project structure concerning\nthese examples, either by renaming \"examples\" directories\ninto \"_examples\", excluding them from build, or providing\none-directory-per-example command directories, which wont\nbreak a \"go install ./...\" or \"all\".)\n\nOne thing that comes to mind is, that the special import\npath \"all\" could be restricted to non-command packages,\ni.e. that it wouldn't install \"main\" packages. So if one\nactually was interested in a command, one had to\n  \"go install path/to/package/cmd/name\". Similar perhaps\nfor import path \"./...\".\n\nOn the other hand, people wanting to build and install 100\ncommands using \"./...\" should be able to do this in one step\n(if I remember right, the requests of developers facing such\na situation was one reason that ./... was added recently). So\nperhaps an option \"-c\" to install could  give a command like\n\tgo install -c ./...\t(or \"all\")\nthe meaning: install packages _and_ commands.\n\nIt might be interesting to know what other users of go9p,\nor its developers, think about that. (My own usecase is a\nproject with a similar structure as go9p, i.e. also with some\nadditional example/utility programs.)\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-01-29T23:39:59Z",
	"updated_at": "2014-12-08T10:14:53Z"
}
