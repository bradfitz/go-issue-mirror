{
	"id": 142240937,
	"number": 14891,
	"state": "closed",
	"title": "'net/http' server does not set http.Request's TLS field when using other implementations of TLS",
	"body": "1. What version of Go are you using (`go version`)?\r\n\r\n  1.5 (though this applies to master).\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\n  Linux, amd64.\r\n\r\n3. What did you do?\r\n\r\n  Looked at [src/net/http/server.go#L1398](https://github.com/golang/go/blob/8540a1c4dfd6f4950f5a1da6241c76765262ddbd/src/net/http/server.go#L1398) and saw that the following conditional branch was used to decide whether or not to capture the TLS state:\r\n\r\n  ```go\r\n\tif tlsConn, ok := c.rwc.(*tls.Conn); ok {\r\n  ```\r\n\r\n  As a result, when using `net/http`'s server with e.g. https://github.com/spacemonkeygo/openssl, the `TLS` field in `http.Request` is `nil`.\r\n\r\n4. What did you expect to see?\r\n\r\n  Some way to handle alternative TLS implementations while properly setting the `TLS` field in `http.Request`.\r\n\r\n5. What did you see instead?\r\n\r\n  No support for alternative TLS implementations while properly setting the `TLS` field in `http.Request`.",
	"user": {
		"login": "cstrahan",
		"id": 143982,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-03-21T03:41:52Z",
	"created_at": "2016-03-21T02:57:13Z",
	"updated_at": "2016-03-22T06:51:19Z"
}
