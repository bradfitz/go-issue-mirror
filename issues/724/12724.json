{
	"id": 107857592,
	"number": 12724,
	"state": "closed",
	"title": "proposal: compress/flate: deprecate ReadError and WriteError",
	"body": "Their doc comments give a hint towards their original intent, written Go's early days:\r\n\r\n----\r\n\r\n// A ReadError reports an error encountered while reading input.\r\ntype ReadError struct { etc }\r\n\r\n// A WriteError reports an error encountered while writing output.\r\ntype WriteError struct { etc }\r\n\r\n----\r\n\r\nThe WriteError type is simply unused by the package:\r\n\r\n$ grep WriteError src/compress/flate/*.go\r\nsrc/compress/flate/inflate.go:// A WriteError reports an error encountered while writing output.\r\nsrc/compress/flate/inflate.go:type WriteError struct {\r\nsrc/compress/flate/inflate.go:func (e *WriteError) Error() string {\r\n\r\nThe ReadError type is sometimes used by the package, but it's not returned consistently enough for users of that package to rely on it. For example, as reported on issue #11856, this program (https://play.golang.org/p/DrL0flbZFg):\r\n\r\n----\r\npackage main\r\n\r\nimport \"bytes\"\r\nimport \"io/ioutil\"\r\nimport \"fmt\"\r\nimport \"compress/flate\"\r\n\r\nfunc printReadError(lvl int) {\r\n\tb := bytes.NewBuffer(nil)\r\n\twr, _ := flate.NewWriter(b, lvl)\r\n\twr.Write([]byte(\"the quick brown fox jumped over the lazy dog\"))\r\n\twr.Close()\r\n\tbb := b.Bytes()\r\n\trd := flate.NewReader(bytes.NewReader(bb[:len(bb)/2]))\r\n\t_, err := ioutil.ReadAll(rd)\r\n\tfmt.Println(err)\r\n}\r\n\r\nfunc main() {\r\n\tprintReadError(flate.NoCompression)      // flate.ReadError used\r\n\tprintReadError(flate.DefaultCompression) // flate.ReadError not used\r\n}\r\n\r\n----\r\n\r\nPrints:\r\nflate: read error at offset 27: unexpected EOF\r\nunexpected EOF\r\n\r\nThus, it is highly unlikely that existing code was depending on Read always or even sometimes returning ReadError. On the other hand, the possibility of returning a ReadError complicates test code like https://go-review.googlesource.com/#/c/14832/3/src/compress/gzip/gunzip_test.go which says:\r\n\r\n_, err = io.Copy(ioutil.Discard, r)\r\nif ferr, ok := err.(*flate.ReadError); ok {\r\n\terr = ferr.Err\r\n}\r\n\r\nThe proposal is to change the doc comments (but not the exported fields and methods) in inflate.go to be:\r\n\r\n----\r\n\r\n// ReadError is deprecated.\r\ntype ReadError struct { etc }\r\n\r\n// WriteError is deprecated.\r\ntype WriteError struct { etc }\r\n\r\n----\r\n\r\nand to remove any other ReadError references in that package, so that the two occurences of:\r\nf.err = \u0026ReadError{f.roffset, err}\r\nwould become:\r\nf.err = err\r\n\r\nThere are no references to flate.ReadError or flate.WriteError in the standard library or under golang.org/x, other than golang.org/x/tools/imports/zstdlib.go which is an autogenerated file.",
	"user": {
		"login": "nigeltao",
		"id": 8565232,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		}
	],
	"comments": 6,
	"closed_at": "2015-10-10T00:49:17Z",
	"created_at": "2015-09-23T06:20:56Z",
	"updated_at": "2015-10-10T00:49:17Z"
}
