{
	"id": 172450959,
	"body": "@minux On Windows the above code is not racy and works correctly due to fixes that went into #9382. On Linux I can also implement the same semantics correctly via waiting for SIGCHLD and using non-blocking wait4 syscall. That allows to synchronize with kill attempts. However, this is non-portable. \r\n\r\nWhat I would like to see is an option to write a portable Go code implementing the kill-if-not-finished-after-timeout pattern. If this requires new API, so be it, but at least document loudly that calling Process.Kill and Process.Wait from different threads at the same time could race and should be avoided in portable code. ",
	"user": {
		"login": "ibukanov",
		"id": 2381216,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-18T07:34:59Z",
	"updated_at": "2016-01-18T07:34:59Z"
}
