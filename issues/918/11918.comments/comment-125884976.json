{
	"id": 125884976,
	"body": "On Wed, 29 Jul 2015 17:43 Brad Fitzpatrick \u003cnotifications@github.com\u003e wrote:\n\n\u003e This seems like a question for a Docker mailing list. If the kernel\n\u003e doesn't provide the system call and Docker is using syscall.Lchown\n\u003e directly, there's nothing Go can do. Perhaps we shouldn't even have that\n\u003e function in the syscall package for linux/arm64.\n\u003e\n\u003e Docker should use syscall.Fchownat + AT_SYMLINK_NOFOLLOW instead I guess?\n\u003e\n\u003e\nWhen @aramh and I did the port to arm64 we discovered that syscalls like\nlchown(2) and friends had been deprecated for close to a decade, but\nbecause arm64 was the first architecture that did not enable the legacy\nsyscall flag (even ppc64 punted on this one).\n\nI think the best solution is for docker to adopt the *at style of syscalls.\nHave a look at the syscall package for Go 1.5 and you'll see most of the\nlegacy syscalls are implemented in terms of their newer counterparts\nanyway, so there is no real loss in terms of efficiency or expressiveness.\n\n\n\u003e /cc @ianlancetaylor \u003chttps://github.com/ianlancetaylor\u003e @davecheney\n\u003e \u003chttps://github.com/davecheney\u003e\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/11918#issuecomment-125871572\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-29T08:54:41Z",
	"updated_at": "2015-07-29T08:54:41Z"
}
