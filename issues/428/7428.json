{
	"id": 51286695,
	"number": 7428,
	"state": "closed",
	"title": "syscall: why doesn't Accept4 read from accept4's *len result parameter?",
	"body": "\u003cpre\u003eQuestion from Rob:\n\nThe accept4 system call has a in+out socklen_t *addrlen parameter.\n\nIn syscall_linux.go, we use it as an in parameter, but never read the result:\n\nfunc Accept4(fd int, flags int) (nfd int, sa Sockaddr, err error) {\n        var rsa RawSockaddrAny\n        var len _Socklen = SizeofSockaddrAny\n        nfd, err = accept4(fd, \u0026amp;rsa, \u0026amp;len, flags)\n        if err != nil {\n                return\n        }\n        sa, err = anyToSockaddr(\u0026amp;rsa)\n        if err != nil {\n                Close(nfd)\n                nfd = 0\n        }\n        return\n}\n\n\nLikewise in Darwin (\u003ca href=\"https://golang.org/cl/68880043/)\"\u003ehttps://golang.org/cl/68880043/)\u003c/a\u003e.\n\nShould we?\n\nOr is func anyToSockaddr safe as-is?  Why?\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:41:17Z",
	"created_at": "2014-02-27T21:47:42Z",
	"updated_at": "2016-06-25T01:28:38Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
