{
	"id": 119474727,
	"number": 13428,
	"state": "closed",
	"title": "AJAX vs GO. My go  is returning 404 with Error \"XMLHttpRequest cannot load http://localhost:8080/api/user. Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:8100' is therefore not allowed access. The response had HTTP status code 404.\"",
	"body": "Here is my Code. Can someone help me with what to do to fix it.\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"net/http\"\r\n    \"encoding/json\"\r\n    \"github.com/gorilla/mux\"\r\n    \"log\"\r\n)\r\n\r\ntype UserInfo struct{\r\n    FirstName, LastName, MiddleName string\r\n}\r\n\r\ntype AllUsers struct{\r\n    Users []UserInfo\r\n}\r\n\r\ntype Error struct{\r\n    Message string\r\n}\r\n\r\nfunc User(w http.ResponseWriter, r *http.Request){\r\n    w.Header().Set(\"Content-Type\", \"application/json\")\r\n    w.Header().Set(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\")\r\n    w.Header().Set(\"Access-Control-Allow-Origin\", \"*\")\r\n\r\n    decoder := json.NewDecoder(r.Body)\r\n    var user_info UserInfo\r\n    err := decoder.Decode(\u0026user_info)\r\n      if(err != nil){\r\n          panic(w, r)\r\n          return\r\n      }\r\n      fmt.Println(user_info.FirstName)\r\n  //  w.Write([]byte(\"Hello\"));\r\n}\r\n\r\nfunc panic(w http.ResponseWriter, r * http.Request){\r\n  w.Header().Set(\"Content-Type\", \"application/json\")\r\n  w.Header().Set(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\")\r\n  w.Header().Set(\"Access-Control-Allow-Origin\", \"*\")\r\n\r\n  ErrorSlice := Error {\r\n    Message : \"Invalid JSON Request\",\r\n  }\r\n\r\n  output,_ := json.Marshal(ErrorSlice)\r\n  log.Println(string(output))\r\n\r\n  w.Write([]byte(output))\r\n}\r\n\r\nfunc main(){\r\n    routes := mux.NewRouter()\r\n    routes.HandleFunc(\"/api/user\", User).Methods(\"GET\")\r\n    http.Handle(\"/\", routes)\r\n    http.ListenAndServe(\":8080\", nil)\r\n}\r\n\r\n```",
	"user": {
		"login": "litunny",
		"id": 7448038,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2015-11-30T11:37:52Z",
	"created_at": "2015-11-30T11:35:39Z",
	"updated_at": "2015-11-30T11:39:16Z"
}
