{
	"id": 166462668,
	"number": 16433,
	"state": "open",
	"title": "Proposal: encoding/json: add ability to unmarshal with offset information",
	"body": "### Problem \r\nCurrently there is no way to get offset information when unmarshalling json; once the json has been unmarshalled into an interface{}, the offsets which the values were derived from cannot be obtained.\r\n\r\nThis is needed to do detailed validation error reporting, such as when json is used as a configuration language and the source of the error should be reported with the error. For simple cases, such as when the json is invalid due to syntax errors or mismatched types, `json.SyntaxError` and `json.UnmarshalTypeError` will report the offset with the error. However for more complex cases, such as when the json is first completely unmarshalled then validated, there is no mechanism for getting the offset from which the unmarshalled value came.\r\n\r\n### Proposed solution:\r\nAdd a new type to encoding/json which can be unmarshalled into like an interface{} but also includes offset information.\r\n```\r\ntype Node struct {\r\n        Start    int  // The offset this value starts at\r\n        End      int // The offset this value ends at\r\n        KeyStart int // If this value is part of struct, the offset its key starts at\r\n        KeyEnd   int // If this value is part of a struct, the offset its key ends at\r\n        Value    interface{} // The value to unmarshal into, just as with unmarshalling to interface{}. \r\n}\r\n```\r\nThe `Value` field would be:\r\n```\r\nbool, for JSON booleans\r\nfloat64, for JSON numbers\r\nstring, for JSON strings\r\n[]Node, for JSON arrays\r\nmap[string]Node, for JSON objects\r\nnil for JSON null\r\n```\r\n\r\nI have written an implementation here:\r\nhttps://github.com/ajeddeloh/go/commit/60514ffa6d77989feb953724b1313035756c36b7\r\n\r\nThis change does not affect unmarshalling of other types, since it only takes affect when unmarshalling to a json.Node.",
	"user": {
		"login": "ajeddeloh",
		"id": 2753421,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		}
	],
	"comments": 6,
	"created_at": "2016-07-19T23:32:59Z",
	"updated_at": "2016-07-22T17:59:40Z",
	"milestone": {
		"id": 1373555,
		"number": 30,
		"title": "Proposal"
	}
}
