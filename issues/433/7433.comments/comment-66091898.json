{
	"id": 66091898,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eBrendan suggested these docs on golang-dev:\n\n// RunParallel measures the effect of concurrent execution on the\n// performance of a benchmark by spawning multiple goroutines\n// and distributing the benchmark iterations among them. RunParallel\n// will usually be used with the go test -cpu flag.\n//\n// The body function will be run in each goroutine. It should set up any \n// goroutine-local state and iterate until pb.Next returns false. It should \n// not use the StartTimer, StopTimer, or ResetTimer functions, because \n// they have global effect. \n//\n// By default, RunParallel will spawn GOMAXPROCS goroutines,\n// though SetParallelism may be called prior to RunParallel in order to \n// change this default. For CPU-bound benchmarks, increased\n//  concurrency beyond GOMAXPROCS will have little effect on the \n// performance of the benchmark. If a benchmark already measures \n// concurrent performance (i.e. it spawns multiple goroutines),\n// using RunParallel is not necessary.\n\nA few thoughts:\n\n* It might be worth just discussing this in a CL, if you'd like to start one.\n* The old docs started with a short, concise sentence. It'd be nice to do the same here.\n* I'm not sure that the increased verbiage pulls its weight.\n* It appears that the main content change here is the last sentence. Based on our other\nexchanges, you're trying to avoid confusion between benchmarking a function that uses\nparallel computation under the hood and parallel benchmarking of a function (of any\nflavor). I think that a nicely annotated example is a better way to achieve this goal.\nAnd as written, the sentence is not accurate. Whether RunParallel is useful is\northogonal to whether the body function itself starts new goroutines. Perhaps a better\nway to convey this message is to emphasize that there's no point in using RunParallel if\nthere is no shared resource for which parallel execution of the body might contend.\n* I suspect that some examples would help a lot. (Thanks, Dmitry, for the HTTP server\nsuggestion.)\u003c/pre\u003e",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-04-29T21:58:58Z",
	"updated_at": "2014-12-08T10:41:18Z"
}
