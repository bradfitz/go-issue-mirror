{
	"id": 51284011,
	"number": 5675,
	"state": "closed",
	"title": "vet: Panic on use of implicit interface.",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n1. go get code.google.com/p/go-tour\n2. go vet code.google.com/p/go-tour/prog\n\nWhat is the expected output?\n\nNo panic.\n\nWhat do you see instead?\n\nINTERNAL PANIC: runtime error: invalid memory address or nil pointer dereference\npanic: runtime error: invalid memory address or nil pointer dereference [recovered]\n\tpanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x38 pc=0x4eb38c]\n\ngoroutine 1 [running]:\ncode.google.com/p/go.tools/go/types.funcÂ·003()\n\t/home/u/goget/src/code.google.com/p/go.tools/go/types/check.go:113 +0x16a\ncode.google.com/p/go.tools/go/types.identicalMethods(0xc2101ed380, 0xc2100cffc0,\n0xc2100e0310)\n\t/home/u/goget/src/code.google.com/p/go.tools/go/types/predicates.go:235 +0x28c\ncode.google.com/p/go.tools/go/types.IsIdentical(0xc21004f200, 0xc2101bdee8,\n0xc21004f200, 0xc2100e0310, 0xc21005a800, ...)\n\t/home/u/goget/src/code.google.com/p/go.tools/go/types/predicates.go:170 +0x974\ncode.google.com/p/go.tools/go/types.(*operand).isAssignable(0xc2102138c0, 0xc2100d2480,\n0xc21004f240, 0xc2100cff60, 0x41e500, ...)\n\t/home/u/goget/src/code.google.com/p/go.tools/go/types/operand.go:144 +0x172\ncode.google.com/p/go.tools/go/types.(*checker).assignment(0xc21005b900, 0xc2102138c0,\n0xc21004f240, 0xc2100cff60, 0xc21004f240, ...)\n\t/home/u/goget/src/code.google.com/p/go.tools/go/types/stmt.go:36 +0x1dd\ncode.google.com/p/go.tools/go/types.(*checker).argument(0xc21005b900, 0xc2100d0600, 0x0,\n0xc21005a740, 0xc210098560, ...)\n\t/home/u/goget/src/code.google.com/p/go.tools/go/types/expr.go:987 +0x23a\ncode.google.com/p/go.tools/go/types.(*checker).rawExpr(0xc21005b900, 0xc2102138c0,\n0xc21005a900, 0xc21009c080, 0x0, ...)\n\t/home/u/goget/src/code.google.com/p/go.tools/go/types/expr.go:1603 +0x3c3b\ncode.google.com/p/go.tools/go/types.(*checker).stmt(0xc21005b900, 0xc21005aa00,\n0xc210089d60)\n\t/home/u/goget/src/code.google.com/p/go.tools/go/types/stmt.go:356 +0x545c\ncode.google.com/p/go.tools/go/types.(*checker).stmtList(0xc21005b900, 0xc21009c0c0, 0x3,\n0x4)\n\t/home/u/goget/src/code.google.com/p/go.tools/go/types/stmt.go:266 +0x68\ncode.google.com/p/go.tools/go/types.check(0xc2100d2480, 0x601020, 0x1, 0xc21005a540,\n0xc2100ce800, ...)\n\t/home/u/goget/src/code.google.com/p/go.tools/go/types/check.go:159 +0x431\ncode.google.com/p/go.tools/go/types.(*Context).Check(0xc2100d2480, 0x601020, 0x1,\n0xc21005a540, 0xc2100ce800, ...)\n\t/home/u/goget/src/code.google.com/p/go.tools/go/types/api.go:142 +0x6c\nmain.(*Package).check(0xc2100d23c0, 0xc21005a540, 0xc2100ce800, 0x42, 0x80, ...)\n\t/home/u/goget/src/code.google.com/p/go.tools/cmd/vet/types.go:32 +0x168\nmain.doPackage(0x601020, 0x1, 0xc21000a010, 0x42, 0x42, ...)\n\t/home/u/goget/src/code.google.com/p/go.tools/cmd/vet/main.go:226 +0x8f5\nmain.main()\n\t/home/u/goget/src/code.google.com/p/go.tools/cmd/vet/main.go:144 +0x665\n\ngoroutine 2 [runnable]:\nexit status 2\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nLinux\n\nWhich version are you using?  (run 'go version')\ngo version devel +4aa7943034c5 Thu Jun 06 18:10:42 2013 -0700 linux/amd64\n\ncode.google.com/p/go.tools\nchangeset: 956fb611bffb\n\nPlease provide any additional information below.\n\nThe file that causes this panic is:\ncode.google.com/p/go-tour/prog/interfaces-are-satisfied-implicitly.go\n\nBelow is a simplified version that still causes the panic. I'll inline the\nexample since play.golang.org is almost impossible to access from some parts of\nAsia.\n\npackage main\n\nimport (\n\t\u0026quot;fmt\u0026quot;\n\t\u0026quot;os\u0026quot;\n)\n\ntype Writer interface {\n\tWrite(b []byte) (n int, err error)\n}\n\nfunc main() {\n\tvar w Writer\n\n\t// os.Stdout implements Writer\n\tw = os.Stdout\n\n\tfmt.Fprintf(w, \u0026quot;hello, writer\\n\u0026quot;)\n}\u003c/pre\u003e",
	"user": {
		"login": "mewmew",
		"id": 1414531,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:30:59Z",
	"created_at": "2013-06-10T13:24:21Z",
	"updated_at": "2016-06-24T22:42:20Z"
}
