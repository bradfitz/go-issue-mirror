{
	"id": 148102117,
	"body": "This is a turn of events.  I initially proposed #12296, but I found that named parameters where not a solution with current Go-idioms.\r\n\r\nAs for inferred structs… I have been in favor of this for a while; however, I have recently hit some pitfalls. I'm (now, surprisingly) leaning against this, because of legibility and common behavior:\r\n\r\n```go\r\n// assume there are 2 struct types with an exported Name of type string\r\n// they are called Account and Profile…\r\n\r\n// Would this result in an Account of a Profile?\r\nwhat := {Name: \"John\"}\r\n```\r\n\r\n(see http://play.golang.org/p/KM5slOe7nZ)\r\n\r\nPerhaps, I'm missing something but duck typing does not apply to similar structs in the language…\r\n\r\n```go\r\ntype Male struct {\r\n    IsAlive bool\r\n}\r\n\r\ntype Female struct {\r\n    IsAlive bool\r\n}\r\n```\r\n\r\nEven though Male and Female both only have `IsAlive`, a Male ≠ a Female.\r\n",
	"user": {
		"login": "codeblooded",
		"id": 1209285,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-14T16:10:10Z",
	"updated_at": "2015-10-14T16:15:27Z"
}
