{
	"id": 146976423,
	"body": "@minux The implementation of this proposal is actually rather straight-forward and the explanation reasonably simple and clear: Whenever the type of a composite literal is known, we can elide it. Once the type is known, the meaning of a composite literal key value ('A' in the previous examples) is answered the same as it is before.\r\n\r\n(Implementation-wise this only affects the type-checker, and there's already provisions for this for the case where we allow type elision already.)\r\n\r\nSo the proposal is indeed simply a relaxation of the existing rules as @jimmyfrasche pointed out.\r\n\r\nAnother way of phrasing this is: In an assignment in all its forms (including parameter passing, \"assigning\" return values via a return statement, setting values in other composite literals, channel sends, there may be more) where the type of the destination is known, we can leave away the composite literal type if the value to be assigned/passed/returned/sent is a composite literal.\r\n\r\n(We cannot leave it away in a variable declaration with an initialization expression where the variable is not explicitly typed.)\r\n\r\nIn the past we have deliberately restricted this freedom even within composite literals. This liberal form would overturn that decision.\r\n\r\nThus, we may want to start more cautiously. Here's a reduced form of the proposal that enumerates all permitted uses:\r\n\r\nIn addition to the existing elision rules inside composite literals, we can also elide the composite literal type of a composite value x when\r\n\r\n1) x is assigned to a lhs (if x is an initialization expression, the lhs must have an explicit type)\r\n2) x is passed as an argument\r\n3) x is returned via a return statement\r\n4) x is sent to a channel\r\n\r\nIn all cases, the variable/parameter/return value/channel value type must be a composite literal type (no interfaces).\r\n\r\nWe could even reduce further and start with only 1) or 2).\r\n\r\n",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-09T20:15:05Z",
	"updated_at": "2015-10-09T20:16:28Z"
}
