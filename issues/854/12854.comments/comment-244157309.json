{
	"id": 244157309,
	"body": "While this would be very nice for certain cases, I can definitely see the arguments about readability. That being said, how about a more conservative proposal for while the finer points of this are being debated? What if type name ellision was allowed for anonymous structs in any use, but not for other cases except where it's already allowed? This would help with some of the most common cases, such as embedded anonymous structs for, for exanple, JSON marshalling/unmarshalling, and things like `c := make(chan *struct {arg string; ret chan\u003c- string})`, but with hopefully less impact on general readability.\r\n\r\nFor example, this would be allowed:\r\n\r\n    type Example struct {\r\n        Inner struct {\r\n            Val string\r\n        }\r\n    }\r\n\r\n    func main() {\r\n        e := Example{\r\n            Inner: {Val: \"This is an example.\"},\r\n        }\r\n    }\r\n\r\nThis would not be:\r\n\r\n    type Example struct {\r\n        Inner ExampleInner\r\n    }\r\n\r\n    type ExampleInner struct {\r\n        Val string\r\n    }\r\n\r\n    func main() {\r\n        e := Example{\r\n            Inner: {Val: \"This is an example.\"},\r\n        }\r\n    }\r\n\r\nSimilarly, this would be allowed:\r\n\r\n    func main() {\r\n        var e struct {val string}\r\n        e = {val: \"This is an example\"}\r\n    }\r\n\r\nThat last example is a potential issue, and my biggest problem with this suggestion, but I don't think it would be too much of an issue in practice.",
	"user": {
		"login": "DeedleFake",
		"id": 326750,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-01T17:48:50Z",
	"updated_at": "2016-09-01T17:49:22Z"
}
