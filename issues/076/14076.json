{
	"id": 128284875,
	"number": 14076,
	"state": "closed",
	"title": "cmd/go: Add support for `go get {tarball URL}`",
	"body": "**Feature request**\r\n\r\nIt should ultimately become possible to `go get https://example.com/path/to/release-latest.tar.xz` and use the package as `import \"example.com/path/to/release\"`, or something like that.\r\n\r\n**Rationale**\r\n\r\n1. To support a pre-existing packaging workflow that produces tarball artefacts\r\n2. To offer a maximally lightweight method for deploying `go get`-able packages on low-end servers.\r\n\r\n**Implementation**\r\n\r\nI think it should be possible to implement initially in `src/cmd/go/vcs.go` as a new `vcsCmd` type that shells out to external wget/curl and tar binaries, in much the same way as the existing code.\r\n\r\nThe go-get process for tarballs is simple enough that it should eventually be rewritten to use internal http/tar/unzip libraries where possible, improving the cross-platform story (especially on Windows where external curl/wget/tar binaries are unexpected). But, i think this would require refactoring the helper method `func (v *vcsCmd) run1` to not always assume it's operating on an external command binary - and `archive/tar` does not automatically implement compression for the common case of `tar.(gz|bz2|xz)`, so that would need to be processed too.",
	"user": {
		"login": "mappu",
		"id": 3959202,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2016-01-23T02:11:09Z",
	"created_at": "2016-01-23T02:05:28Z",
	"updated_at": "2016-01-23T02:11:09Z"
}
