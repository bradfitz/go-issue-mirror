{
	"id": 66088384,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5 by **mdempsky@chromium.org**:\n\n\u003cpre\u003eI like the idea of an extra value to easily check for overflow conditions, but the\nproposed wording seems to have at least a couple issues when extended to signed integer\narithmetic:\n\nIf x and y are both int32(-1), then (int64(-1) + int64(-1)) \u003e\u003e 32 evaluates to -1.  This\nisn't consistent with the \"for +, c is the 'carry' value (0 or 1)\" text, as the value is\nneither 0 nor 1.\n\nAdditionally, if x and y are both math.MaxInt32 (or both math.MinInt32), then (int64(x)\n+ int64(y)) \u003e\u003e 32 will evaluate to 0 (or -1, respectively).  In this case, (x + y) will\nwrap around, but c won't give any useful indication of that (at least when inspected in\nisolation).\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	},
	"created_at": "2014-06-10T00:23:02Z",
	"updated_at": "2014-12-08T10:37:53Z"
}
