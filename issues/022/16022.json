{
	"id": 159462823,
	"number": 16022,
	"state": "closed",
	"title": "runtime: leaking nested goroutines",
	"body": "Hello,\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo version devel +09eedc3 Wed Jun 8 05:24:53 2016 +0000 darwin/amd64\r\ntested also on 1.5 and 1.6 with the same results\r\n\r\n3. What did you do?\r\nhttps://play.golang.org/p/ATENOgjVp-\r\n\r\n4. What did you expect to see?\r\nProgram waits forever but is holding small amount of memory.\r\n\r\n5. What did you see instead?\r\nProgram holds ~1.3GB of memory, after forcing GC in Point B nothing changes while GC in Point A makes program using only 22MB.\r\n\r\ngo tool pprof http://localhost:6060/debug/pprof/heap reports less memory usage but still indicates a leak, it is showing that nearly all memory is taken by descendants of runtime.newproc1.\r\n\r\nI'm looking forward to answer any questions or hear why observed behaviour is expected :)\r\n\r\n",
	"user": {
		"login": "nuivall",
		"id": 2939488,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"closed_at": "2016-06-17T01:40:04Z",
	"created_at": "2016-06-09T17:21:22Z",
	"updated_at": "2016-06-17T01:40:04Z"
}
