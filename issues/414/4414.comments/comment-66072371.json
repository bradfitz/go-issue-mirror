{
	"id": 66072371,
	"body": "\u003ca id=\"c12\"\u003e\u003c/a\u003eComment 12:\n\n\u003cpre\u003eI modified ast/import.go so that it removes duplicate ImportSpecs from the syntax tree\n(see attached patch).\n\nHowever, removing ImportSpecs can create holes (empty lines) in the file. If the input\nconsists from 1 run of ImportSpecs then there can be 2 or more runs on the output. It\nappears this makes it impossible for:\n\n  cd $GOROOT/src/cmd/gofmt\n  go test -v -run=\".*Rewrite\" .\n\nto succeed because of an incosistency between \"import.golden\", \"import.golden.gofmt\" and\n\"import.input.gofmt\". It seems impossible to overcome this limitation without changing\nmore code either in gofmt or in go/ast.\n\nThe patch puts the logic into go/ast/import.go, but the same problem would arise if the\nlogic is put into cmd/gofmt/gofmt.go.\n\nMaybe we should simply ignore the possibility of such inconsistencies, and devise a test\ncase that succeeds (while knowing that a more complicated test case would make gofmt\nfail).\n\nSo the question is whether it acceptable to put a simpler (although incomplete) test in\nsrc/cmd/gofmt/import.input.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/4414/12/4414-atom.patch\"\u003e4414-atom.patch\u003c/a\u003e (2280 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-03-07T14:21:01Z",
	"updated_at": "2014-12-08T10:23:30Z"
}
