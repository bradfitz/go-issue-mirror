{
	"id": 245549556,
	"body": "I haven't been able to think of a really good solution.  What if we implement a set of methods parallel to `Hour` and friends:\r\n\r\n    // TruncateToSecond return the time rounded down to the start of the second.\r\n    func (t Time) TruncateToSecond()\r\n    \r\n    // TruncateToMinute returns the time rounded down to the start of the minute.\r\n    func (t Time) TruncateToMinute()\r\n    \r\n    // TruncateToHour returns the time rounded down to the start of the hour in the time's location.\r\n    func (t Time) TruncateToHour() {}\r\n    \r\n    // TruncateToDay returns the time rounded down to the start of the day in the time's location.\r\n    func (t Time) TruncateToDay() {}\r\n    \r\n    // TruncateToMonth returns the time rounded down to the start of the month in the time's location.\r\n    func (t Time) TruncateToMonth() {}\r\n    \r\n    // TruncateToYear returns the time rounded down to the start of the year in the time's location.\r\n    func (t Time) TruncateToYear() {}",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-08T09:53:38Z",
	"updated_at": "2016-09-08T09:53:38Z"
}
