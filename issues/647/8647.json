{
	"id": 51288492,
	"number": 8647,
	"state": "closed",
	"title": "x/build/builders: ARM builders",
	"body": "\u003cpre\u003eThis bug is about creating ARM qemu full-system-emulation environments for running Go\nbuilds. This is part of \u003ca href=\"http://golang.org/s/builderplan\"\u003ehttp://golang.org/s/builderplan\u003c/a\u003e\n\nFor ARM5,\nThe versatilepb machine (ARM5?) is quite slow can can run \u0026quot;make.bash\u0026quot; is about\n25 minutes:\n\u003ca href=\"https://people.debian.org/~aurel32/qemu/armel/\"\u003ehttps://people.debian.org/~aurel32/qemu/armel/\u003c/a\u003e\n\nWe could cross-compile make.bash from x86 and just shard (a subset of?) run.bash on\nqemu-system-arm -M versatilepb.\n\nFor ARM7+, it seems qemu in recent versions supports newer CPUs and supports multiple\ncores as well? That might help.\n\nIn any case, this will be slow, and will depend on being able to shard tests out over\nperhaps hundreds of CPUs (each running a full Linux kernel + tiny userspace which we\ncontrol, doing nothing but running our builders).\n\nIt'd be nice if the tiny userspace running inside the qemu-system-arm ran Docker, so\nthen we'd have a snapshotting filesystem which we could send around the network, which\nwe'll want for sharding.\n\nWe can use this bug to discuss and collect notes.\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Builders"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 41,
	"closed_at": "2015-06-17T15:21:29Z",
	"created_at": "2014-09-04T00:47:32Z",
	"updated_at": "2016-06-25T01:40:40Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
