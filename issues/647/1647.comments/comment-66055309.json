{
	"id": 66055309,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eThis is working as intended. If you run it with the -v (verbose) flag you will see what\nit is doing:\n\ngodoc -v -http=:7777\n2011/03/28 11:36:46 Go Documentation Server\n2011/03/28 11:36:46 version = weekly.2011-03-15 7894+\n2011/03/28 11:36:46 address = :7777\n2011/03/28 11:36:46 goroot = XXXXXXXXXXXXXXX\n2011/03/28 11:36:46 tabwidth = 4\n2011/03/28 11:36:46 maxresults = 10000 (full text index enabled)\n2011/03/28 11:37:46 updating index...\n2011/03/28 11:38:49 index updated (62.334s, 14576967 bytes of source, 2168 files, 490141\nlines, 20539 unique words, 434387 spots)\n2011/03/28 11:38:49 before GC: bytes = 420576424 footprint = 479328504\n2011/03/28 11:38:49 after  GC: bytes = 143543920 footprint = 479328504\n\nGodoc creates an identifier and full text index approx. 1min after launch (and\nrepeatedly after that, depending on the -sync, -sync_minutes, -filter, and\n-filter_minutes flags). It reads all source text into memory for the full text index.\n\nYou can reduce memory consumption and index creation time significantly by setting\n-maxresults=0 - this disables the full text index and leaves the sources on disk:\n\ngodoc -v -http=:7777 -maxresults=0\n2011/03/28 11:44:58 Go Documentation Server\n2011/03/28 11:44:58 version = weekly.2011-03-15 7894+\n2011/03/28 11:44:58 address = :7777\n2011/03/28 11:44:58 goroot = XXXXXXXXXXXXXXX\n2011/03/28 11:44:58 tabwidth = 4\n2011/03/28 11:45:58 updating index...\n2011/03/28 11:46:26 index updated (28.787s, 10074099 bytes of source, 1574 files, 287495\nlines, 20539 unique words, 434387 spots)\n2011/03/28 11:46:26 before GC: bytes = 93007216 footprint = 197368056\n2011/03/28 11:46:27 after  GC: bytes = 55320744 footprint = 197368056\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-03-28T18:48:22Z",
	"updated_at": "2014-12-08T10:09:15Z"
}
