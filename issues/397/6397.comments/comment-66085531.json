{
	"id": 66085531,
	"body": "\u003ca id=\"c12\"\u003e\u003c/a\u003eComment 12:\n\n\u003cpre\u003eI'm not happy with this.\n\nWe ought to be able to pass the address of some object into C code and have the C code\nfill in the object.  Obviously plenty of C functions work that way, and they should be\ncallable from Go.  I agree that it would be wrong for the C function to save the pointer\nin any way.  But I assume that is not the issue here (I have not looked at the code).\n\nYou are saying that it is never OK to pass a Go pointer to a C function.  I don't think\nwe have ever said that before, not this strictly.  We have always said that if you pass\na Go pointer to a C function you must keep a copy of that pointer in Go.  But this\nfunction is in effect keeping that pointer--not perhaps in the sense of the compiler,\nbut after all the pointer is right there in the Go code.\n\nSo I think that this code should work and that it would be a mistake to break it. \nBreaking it will make it much harder to write Go interfaces to C libraries.  That would\nnot be a good thing.  And it will most likely break existing interfaces, though I accept\nthat one could argue that those interfaces are already broken.\n\nI think I may now understand why this actually fails.  The cgo function is really a C\nfunction compiled by 6c and it has a single struct argument.  6c is recording the type\nof the argument, and the GC is using that type.  Thus the GC does not see the pointer\nthat is in the arguments to the C function.  At least that is my assumption.\n\nIf that analysis is correct, then I propose that we add a way for 6c to tell the GC to\nconservatively scan the argument information, perhaps via yet another magic comment. \nAnd we change cgo to emit that comment.  And, yes, if in the future we have a moving\ngarbage collector such pointers should be pinned.\n\nIf we can not do that then I think we must change cgo somehow to reject passing Go\npointers to C code.\n\nThis should perhaps be discussed on golang-dev.\u003c/pre\u003e",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-09-20T20:09:15Z",
	"updated_at": "2014-12-08T10:35:13Z"
}
