{
	"id": 51288452,
	"number": 8615,
	"state": "closed",
	"title": "cmd/gc: pessimistic escape analysis for defers",
	"body": "\u003cpre\u003eIn the following code x does not escape:\n\n\tx := 0\n\tdefer func() {\n\t\tx = 1\n\t}()\n\nHowever, in the following code x escapes to heap:\n\n\tx := 0\n\tdefer func(p *int) {\n\t\t*p = 1\n\t}(\u0026amp;x)\n\nIn the following it does not escape again:\n\nfunc foo(p *int) {\n\t*p = 1\n}\n\nx := 0\ndefer foo(\u0026amp;x)\n\nIn the second example x must not escape.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Performance"
		}
	],
	"comments": 1,
	"closed_at": "2015-02-11T17:32:57Z",
	"created_at": "2014-08-29T12:56:51Z",
	"updated_at": "2016-06-25T01:40:22Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
