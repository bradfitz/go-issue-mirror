{
	"id": 66067139,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4 by **damoxc**:\n\n\u003cpre\u003eBy alias I mean aliasing the rpc method call, not the actual method. In the previous\nprogram (written in Python) it exported methods in the form:\n\ntype.method_name\n\nWhat I'm trying to achieve is to have the built-in package able to export a compatible\nAPI. Using the rpc package, methods are exported in the form:\n\nType.MethodName (least in my tests this is the case)\n\nIt's possible to achieve type.MethodName by using rpc.RegisterName instead of\nrpc.Register, however there's nothing you can do (at least as far as I can see) to\nmanipulate MethodName into method_name. So all the patch did was allow you to run, for\nexample:\n\nAliasMethod(\"type\", \"MethodName\", \"method_name\")\n\nthat will mean when someone calls type.method_name via the jsonrpc interface it can\nresolve Type.MethodName.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-05-13T13:07:54Z",
	"updated_at": "2014-12-08T10:19:05Z"
}
