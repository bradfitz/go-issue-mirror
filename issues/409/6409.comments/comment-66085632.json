{
	"id": 66085632,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2 by **cfbradford**:\n\n\u003cpre\u003eEven then, if the line breaks are changed back to the original code the problem persists:\n\u003ca href=\"http://play.golang.org/p/uMLabL_UO5\"\u003ehttp://play.golang.org/p/uMLabL_UO5\u003c/a\u003e\n\nWhen chained calls are used, breaking between calls seems like the most logical way to\nformat code.\n\nIf the template.FuncMap literal starts a line, then all is well:\n\u003ca href=\"http://play.golang.org/p/6ZIbLjZfng\"\u003ehttp://play.golang.org/p/6ZIbLjZfng\u003c/a\u003e\n\n\nAs you say, chained calls aren't that common, and wouldn't even be needed here if there\nwas a way to initialize a \"common\" object with a FuncMap before calling ParseFiles that\ndidn't require creating a dummy template. (The way the template packages handle groups\nof templates seems very unintuitive to me. Having an explicit TemplateGroup object would\nmake more sense I think and provide an easy way to setup a FuncMap and delimiters before\nparsing happens without needing any empty Template objects.) So, not a huge deal, just\nsomething I noticed while messing with my code.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-09-17T18:27:33Z",
	"updated_at": "2014-12-08T10:35:19Z"
}
