{
	"id": 140033747,
	"number": 14760,
	"state": "open",
	"title": "proposal: net: an easy way to make Dialer.Dial(\"tcp\", \"DNS reg-name\") prefer IPv4 to IPv6 or vice versa",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n`go version go1.5.3 linux/amd64`\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\n```\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/bongo/dev/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/golang\"\r\nGOTOOLDIR=\"/usr/lib/golang/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n3. What did you do?\r\nI tried to provide a IPv4 **and** IPv6 address for `LocalAddr` of a `net.Dialer` but the model doesn't allow it for now.\r\n\r\n4. What did you expect to see?\r\nLocalAddr should be either\r\n  * an array of Addr \r\n    * an address of highest prio (v6 first or v4 first) is chosen randomly\r\n  * or a new struct holding a single v4 and v6\r\n    * the according address is chosen by os priority,if available. Else take the existing lower prio or choose automatically if whole LocalAddr is nil (as it is now) \r\n\r\n\r\n",
	"user": {
		"login": "bong0",
		"id": 179111,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FeatureRequest"
		},
		{
			"name": "Proposal"
		},
		{
			"name": "Thinking"
		}
	],
	"comments": 11,
	"created_at": "2016-03-10T22:58:59Z",
	"updated_at": "2016-09-26T23:29:35Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
