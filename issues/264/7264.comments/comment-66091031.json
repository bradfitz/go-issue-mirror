{
	"id": 66091031,
	"body": "\u003ca id=\"c19\"\u003e\u003c/a\u003eComment 19:\n\n\u003cpre\u003eThis bug finally reproduces consistently for me, and I can confirm that\n\u003ca href=\"https://golang.org/cl/70950043\"\u003ehttps://golang.org/cl/70950043\u003c/a\u003e fixes the race.\n\nba12:src bradfitz$ go test -v -race -run=TestTransportResponseHeaderTimeout net/http\n=== RUN TestTransportResponseHeaderTimeout\n==================\nWARNING: DATA RACE\nWrite by goroutine 5:\n  sync.raceWrite()\n      /Users/bradfitz/go/src/pkg/sync/race.go:41 +0x35\n  sync.(*WaitGroup).Wait()\n      /Users/bradfitz/go/src/pkg/sync/waitgroup.go:122 +0x176\n  net/http/httptest.(*Server).Close()\n      /Users/bradfitz/go/src/pkg/net/http/httptest/server.go:168 +0x74\n  net/http_test.TestTransportResponseHeaderTimeout()\n      /Users/bradfitz/go/src/pkg/net/http/transport_test.go:1307 +0xe8e\n  testing.tRunner()\n      /Users/bradfitz/go/src/pkg/testing/testing.go:422 +0x10f\n\nPrevious read by goroutine 11:\n  sync.raceRead()\n      /Users/bradfitz/go/src/pkg/sync/race.go:37 +0x35\n  sync.(*WaitGroup).Add()\n      /Users/bradfitz/go/src/pkg/sync/waitgroup.go:60 +0xbe\n  net/http/httptest.(*waitGroupHandler).ServeHTTP()\n      /Users/bradfitz/go/src/pkg/net/http/httptest/server.go:198 +0x5e\n  net/http.serverHandler.ServeHTTP()\n      /Users/bradfitz/go/src/pkg/net/http/server.go:1675 +0x1e8\n  net/http.(*conn).serve()\n      /Users/bradfitz/go/src/pkg/net/http/server.go:1176 +0xf16\n\nGoroutine 5 (running) created at:\n  testing.RunTests()\n      /Users/bradfitz/go/src/pkg/testing/testing.go:503 +0xb4d\n  testing.Main()\n      /Users/bradfitz/go/src/pkg/testing/testing.go:435 +0xa8\n  main.main()\n      /var/folders/zr/clvw_31d1wdcd404ybr3pmch0000gn/T/go-build455016757/net/http/_test/_testmain.go:477 +0xdc\n\nGoroutine 11 (running) created at:\n  net/http.(*Server).Serve()\n      /Users/bradfitz/go/src/pkg/net/http/server.go:1723 +0x339\n==================\n--- PASS: TestTransportResponseHeaderTimeout (2.01 seconds)\nPASS\nFound 1 data race(s)\nexit status 66\nFAIL\tnet/http\t3.048s\n\n\nba12:src bradfitz$ hg clpatch 70950043\n70950043:\n\tnet/http/httptest: lock Server's WaitGroup earlier, at Accept time\n\n\tFixes \u003ca href=\"https://golang.org/issue/7264\"\u003eissue #7264\u003c/a\u003e\n\n\tReviewer: dvyukov@google.com\n\tCC: golang-codereviews@googlegroups.com\n\tFiles:\n\t\tsrc/pkg/net/http/httptest/server.go\n\nba12:src bradfitz$ go test -v -race -run=TestTransportResponseHeaderTimeout net/http\n=== RUN TestTransportResponseHeaderTimeout\n--- PASS: TestTransportResponseHeaderTimeout (2.01 seconds)\nPASS\nok  \tnet/http\t3.049s\nba12:src bradfitz$ go test -v -race -run=TestTransportResponseHeaderTimeout net/http\n=== RUN TestTransportResponseHeaderTimeout\n--- PASS: TestTransportResponseHeaderTimeout (2.01 seconds)\nPASS\nok  \tnet/http\t3.049s\n\n\n\nI will reply on that CL to try to convince Dmitry why I think this is correct.\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-04-14T19:07:47Z",
	"updated_at": "2014-12-08T10:40:26Z"
}
