{
	"id": 51284925,
	"number": 6264,
	"state": "closed",
	"title": "Feature request: Interfaces defined by assignability rather than specific method signature",
	"body": "\u003cpre\u003eI don't expect anything to happen soon, but I'm creating an issue here for future\nreference.\n\nThe idea is to change what makes a type implement an interface to be based on\nassignability rather exact function signature. Loosely, it would be \u0026quot;A type\nimplements an interface if the inputs of the interface function are assignable to the\ninputs of the methods type and the outputs of the method are assignable to the outputs\nof the interface type\u0026quot;. There are a number of simpler rules that could be\nimplemented instead, for example, assignability only happens on interfaces, or it only\nworks on outputs.\n\nIt would prevent needing to define special types just to make the interface signatures\nmatch. I haven't needed the input assigability side, but I've run into a couple of cases\nwhere I've had to do:\n\ntype Distribution interface{\n     Prob(float64) float64\n     Quantile(float64) float64\n     CumProb(float64) float64\n}\n\ntype Foo struct{}\n\nfunc (f Foo) Distribution() Distribution{\n...\n} \n\n--------\n\ntype Prober interface{\n     Prob(float64) float64\n}\n\ntype NewFoo struct{\nFoo\n}\n\ntype (n NewFooer) Distribution() Prober{\nreturn Foo.Distribution()\n}\n\nThe NewFooer type exists purely to transform the returned Distribution into a Prober.\nI've mostly had this issue come up when certain functions need the full interface, but\nother methods just need a few. Yes, you could also have a Prober() Prober method, but\nthis is a lot of methods for large interfaces, and in general you might not be able to\ncontrol the methods of a function because they may be coming from a different package. \n\nThere was a brief go-nuts discussion on the issue [1]. It wasn't clear to me if this was\nor was not implementable in an efficient manner. \n\nObviously more thought needs to happen before this change takes place, but it's worth a\ndiscussion in the future.\n\n[1]\n\u003ca href=\"https://groups.google.com/forum/#\"\u003ehttps://groups.google.com/forum/#\u003c/a\u003e!searchin/golang-nuts/interface/golang-nuts/_VeJ1kMpjj4/e_J3FM90PHUJ\u003c/pre\u003e",
	"user": {
		"login": "btracey",
		"id": 3680859,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "LanguageChange"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:34:27Z",
	"created_at": "2013-08-27T19:32:19Z",
	"updated_at": "2016-06-25T01:17:28Z"
}
