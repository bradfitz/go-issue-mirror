{
	"id": 66076007,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003eI can reproduce this easily after a few minutes running this script on an 8 core machine\n\n--- FAIL: TestDualStackTCPListener-107 (0.00 seconds)\n        unicast_posix_test.go:407: Second Listen(\"tcp4\", \"0.0.0.0:40030\") returns listen tcp4 0.0.0.0:40030: address already in use, expected \u0026lt;nil\u0026gt;\n\nip-10-248-36-242(~/go/src) % cat stress.bash \n#!/bin/bash\n\nset -e\n\neval $(go env)\nexport GOROOT\n\npkgs() {\n        go list std | grep -v cmd\n}\n\nrand() {\n        echo $[ 1 + $[ RANDOM % $[ $1 - 1 ] ] ]\n}\n\npkgs | xargs -n 1 -P 4 -I % sh -c 'cd $GOROOT/src/pkg/$0 \u0026\u0026 go test -v -c' %\n\nwhile true ; do \n        pkgs | xargs -n1 -P $(rand 8) -I % -t bash -xe -c \\\n                'cd $GOROOT/src/pkg/$0 \u0026\u0026 if [ -x $(basename $0).test ] ; then GOMAXPROCS=$1 $GOROOT/src/pkg/$0/$(basename $0).test || exit 255; fi ' % $(rand 128) \ndone\u003c/pre\u003e",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-03-23T02:18:54Z",
	"updated_at": "2014-12-22T06:22:49Z"
}
