{
	"id": 238015932,
	"body": "SHCreateMemStream is exported by ordinal in WindowsXP. I needed it to\ncreate a memory stream to export/import an in-memory jpeg GpImage.\n\nFinally, I solved the problem by using GlobalAlloc/Free and\nCreateStreamFromHGlobal.\n\nLe ven. 5 août 2016 à 07:54, Alex Brainman \u003cnotifications@github.com\u003e a\nécrit :\n\n\u003e It would be usefull to be able to load DLL functions by ordinal in syscall\n\u003e package.\n\u003e\n\u003e I don't see usefulness of that. You have mentioned \"SHCreateMemStream\",\n\u003e but I have never used that function. What is the problem that you are\n\u003e trying to solve?\n\u003e\n\u003e And you can do it now. You can copy syscall.GetProcAddress and change the\n\u003e function to pass integer to syscall.Syscall instead of string. I just don't\n\u003e see how this can be used to justify us adding this functionality even in\n\u003e golang.org/x/sys/windows.\n\u003e\n\u003e Alex\n\u003e\n\u003e —\n\u003e You are receiving this because you authored the thread.\n\u003e Reply to this email directly, view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/16507#issuecomment-237770700\u003e, or mute\n\u003e the thread\n\u003e \u003chttps://github.com/notifications/unsubscribe-auth/ABtU_uA2harxClZghpKKEdVTEGL5F_Kcks5qct46gaJpZM4JVvOf\u003e\n\u003e .\n\u003e\n",
	"user": {
		"login": "matwachich",
		"id": 1791230,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-06T09:58:19Z",
	"updated_at": "2016-08-06T09:58:19Z"
}
