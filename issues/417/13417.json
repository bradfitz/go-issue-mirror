{
	"id": 119172670,
	"number": 13417,
	"state": "open",
	"title": "encoding/xml: implement dual of 'omitempty' for unmarshalling «optional» fields",
	"body": "XML is often used in legacy APIs, which are often not very consistent in the data format they output. One of such inconsistencies is emitting of nodes with empty data in case it is missing, so `\u003ctag\u003e123\u003c/tag\u003e` becomes `\u003ctag\u003e\u003c/tag\u003e`, instead of being omitted entirely.\r\n\r\nIf node data type is non-string, the only way to handle this in Go currently is to mark node data type as `string`, and handle the parsing by hand. This is verbose, error-prone and in contrast with the rest of parsing, which is quite declarative.\r\n\r\nGo 1.5.1 // #8333, #8334",
	"user": {
		"login": "flyingmutant",
		"id": 73059,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2015-11-27T10:32:57Z",
	"updated_at": "2016-05-18T00:31:19Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
