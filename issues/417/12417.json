{
	"id": 104117158,
	"number": 12417,
	"state": "closed",
	"title": "encoding/xml: character encoding detection should be case insensitive",
	"body": "Hello,\r\n\r\n- *What version of Go are you using (go version)?* **go version go1.3.3 linux/amd64**\r\n- *What operating system and processor architecture are you using?* **Debian Wheezy (Linux 3.16.0-44-generic x86_64)**\r\n- *What did you do?* **I ran an app which parsed a third party XML file.**\r\n- *What did you expect to see?* **The parsing should work and the data should be extracted from the file.**\r\n- *What did you see instead?* **An error: \"xml: encoding \"Utf-8\" declared but Decoder.CharsetReader is nil\".**\r\n\r\nAs [discussed in the Google group](https://groups.google.com/forum/#!topic/golang-nuts/8LqvhPjwQcA), I encountered an issue while parsing an XML document claiming to be `Utf-8` encoded, so neither `UTF-8` nor `utf-8` [as expected by the encoding/xml library](https://github.com/golang/go/blob/9c04d00214cb836ddcf4b7b6b0c4b4e5c11bb957/src/encoding/xml/xml.go#L583).\r\n\r\n[This document](http://www.w3.org/TR/2008/REC-xml-20081126/) specifies that \"XML processors should match character encoding names in a case-insensitive way\".\r\n\r\nI plan to propose a patch doing just that, as soon as I install the golang dev tools (it is kind of my first meeting with Go).\r\n\r\nAbout the implementation, would you just write a simple comparison such as `strings.ToUpper(enc) == \"UTF-8\"`, or would you prefer using something like [the charset lookup function](https://godoc.org/golang.org/x/net/html/charset#Lookup)?\r\n\r\nThanks.",
	"user": {
		"login": "cGuille",
		"id": 803869,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2015-11-25T17:09:49Z",
	"created_at": "2015-08-31T19:20:38Z",
	"updated_at": "2015-11-25T17:09:49Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
