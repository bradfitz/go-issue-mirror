{
	"id": 162339913,
	"number": 16187,
	"state": "open",
	"title": "cmd/compile: go1.7beta2 performance regression (floats and arrays)",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\n```\r\ngo version go1.6.2 linux/amd64\r\ngo version go1.7beta2 linux/amd64\r\n```\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/taru/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/go-1.6\"\r\nGOTOOLDIR=\"/usr/lib/go-1.6/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/taru/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/tmp/go\"\r\nGOTOOLDIR=\"/tmp/go/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build453968611=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n3. What did you do?\r\n\r\nTry some float32 heavy code with arrays on 1.7beta2, saw a problem and reduced it to a self contained example:\r\n\r\ngo get [github.com/taruti/float_degradation](https://github.com/taruti/float_degradation)\r\ncd ...\r\ngo test -test.bench=.\r\n\r\nOr fancier\r\nwhile date; do go test -test.bench=. \u003e\u003e /tmp/old.txt; GOROOT=/tmp/go /tmp/go/bin/go test -test.bench=. \u003e\u003e /tmp/new.txt; done\r\n\r\n4. What did you expect to see?\r\n\r\n1.7beta2 producing as good or better code than 1.6\r\n\r\n5. What did you see instead?\r\n\r\n```\r\nbenchcmp /tmp/old.txt /tmp/new.txt \r\nbenchmark                 old ns/op     new ns/op     delta\r\nBenchmarkOptimize16-2     33310269      41841404      +25.61%\r\nBenchmarkOptimize16-2     33337835      41889202      +25.65%\r\nBenchmarkOptimize16-2     33341432      42080975      +26.21%\r\nBenchmarkOptimize16-2     33280481      41913719      +25.94%\r\nBenchmarkOptimize16-2     33236073      41971975      +26.28%\r\nBenchmarkOptimize16-2     33274075      41866159      +25.82%\r\n```\r\n",
	"user": {
		"login": "taruti",
		"id": 42174,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsInvestigation"
		},
		{
			"name": "Performance"
		}
	],
	"assignee": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"created_at": "2016-06-26T18:18:58Z",
	"updated_at": "2016-10-21T03:37:42Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
