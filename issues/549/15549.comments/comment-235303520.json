{
	"id": 235303520,
	"body": "\r\nThe crash is taking place early, during static initialization for the main load module. Trace below. Things look kosher as far as I can tell until we hit je_malloc_mutex_init, where it looks as though there is a linker issue. The more-stack sequence in the prolog of the function is OK, but once we get into the main body things are messed up. Here is the code:\r\n\r\n\tif (pthread_mutexattr_init(\u0026attr) != 0)\r\n\t\treturn (true);\r\n\r\nand here is the object code from the .o file:\r\n\r\n```\r\n/s/go-issue15549/src/github.com/cockroachdb/c-jemalloc/mutex.c:97\r\n  1b:\t48 89 e7             \tmov    %rsp,%rdi\r\n  1e:\te8 00 00 00 00       \tcallq  23 \u003cje_malloc_mutex_init+0x23\u003e\r\n\t\t\t1f: R_X86_64_PLT32\tpthread_mutexattr_init-0x4\r\n  23:\t85 c0                \ttest   %eax,%eax\r\n  25:\t74 11                \tje     38 \u003cje_malloc_mutex_init+0x38\u003e\r\n\r\n```\r\nhowever here is the object code from the a.out:\r\n\r\n```\r\n/s/go-issue15549/src/github.com/cockroachdb/c-jemalloc/mutex.c:97\r\n 16df07b:\t48 89 e7             \tmov    %rsp,%rdi\r\n 16df07e:\te8 7d 0f 92 fe       \tcallq  0\r\n 16df083:\t85 c0                \ttest   %eax,%eax\r\n 16df085:\t74 11                \tje     16df098 \u003cje_malloc_mutex_init+0x38\u003e\r\n\r\n```\r\nThe other calls in the function are similarly mangled (target of zero). Not sure how this happened, but it would definitely point to a linker error. I'll see about building a debuggable ld.gold to find out what is going haywire.\r\n\r\nFull trace:\r\n\r\n```\r\n#0  0x0000000000000000 in ?? ()\r\n#1  0x00000000016df083 in je_malloc_mutex_init (mutex=mutex@entry=0x2a8ac60 \u003cbase_mtx\u003e) at /s/go-issue15549/src/github.com/cockroachdb/c-jemalloc/mutex.c:97\r\n#2  0x00000000016bb79b in je_base_boot () at /s/go-issue15549/src/github.com/cockroachdb/c-jemalloc/base.c:147\r\n#3  0x00000000016d162b in malloc_init_hard_a0_locked () at /s/go-issue15549/src/github.com/cockroachdb/c-jemalloc/jemalloc.c:1235\r\n#4  0x00000000016d17ba in malloc_init_hard () at /s/go-issue15549/src/github.com/cockroachdb/c-jemalloc/jemalloc.c:1373\r\n#5  0x00000000016d5c38 in malloc_init () at /s/go-issue15549/src/github.com/cockroachdb/c-jemalloc/jemalloc.c:302\r\n#6  imalloc_body (slow_path=true, usize=\u003csynthetic pointer\u003e, tsd=\u003csynthetic pointer\u003e, size=\u003coptimized out\u003e) at /s/go-issue15549/src/github.com/cockroachdb/c-jemalloc/jemalloc.c:1451\r\n#7  malloc (size=\u003coptimized out\u003e) at /s/go-issue15549/src/github.com/cockroachdb/c-jemalloc/jemalloc.c:1507\r\n#8  0x0000000001cc6c15 in __morestack () at ../../../gcc-trunk/libgcc/config/i386/morestack.S:544\r\n#9  0x00007ffff7ed4b00 in pool (this=0x7ffff7fcb420 \u003c(anonymous namespace)::emergency_pool\u003e) at ../../../../gcc-trunk/libstdc++-v3/libsupc++/eh_alloc.cc:123\r\n#10 __static_initialization_and_destruction_0 (__priority=65535, __initialize_p=1) at ../../../../gcc-trunk/libstdc++-v3/libsupc++/eh_alloc.cc:250\r\n#11 _GLOBAL__sub_I_eh_alloc.cc(void) () at ../../../../gcc-trunk/libstdc++-v3/libsupc++/eh_alloc.cc:326\r\n#12 0x00007ffff7dea10a in call_init (l=\u003coptimized out\u003e, argc=argc@entry=1, argv=argv@entry=0x7fffffffdaf8, env=env@entry=0x7fffffffdb08) at dl-init.c:78\r\n#13 0x00007ffff7dea1f3 in call_init (env=\u003coptimized out\u003e, argv=\u003coptimized out\u003e, argc=\u003coptimized out\u003e, l=\u003coptimized out\u003e) at dl-init.c:36\r\n#14 _dl_init (main_map=0x7ffff7ffe1c8, argc=1, argv=0x7fffffffdaf8, env=0x7fffffffdb08) at dl-init.c:126\r\n#15 0x00007ffff7ddb30a in _dl_start_user () at rtld.c:871\r\n#16 0x0000000000000001 in ?? ()\r\n#17 0x00007fffffffdef1 in ?? ()\r\n#18 0x0000000000000000 in ?? ()\r\n\r\n```\r\n",
	"user": {
		"login": "thanm",
		"id": 12280172,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-26T15:24:40Z",
	"updated_at": "2016-07-26T15:24:40Z"
}
