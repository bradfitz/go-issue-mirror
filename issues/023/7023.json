{
	"id": 51286086,
	"number": 7023,
	"state": "closed",
	"title": "cmd/gc: corrupted export data when inlining a small function with goto",
	"body": "by **ncbray@google.com**:\n\n\u003cpre\u003eI was playing around with generating go code and found a degenerate goto case that\ncauses go test to choke.\n\n$ go version\ngo version go1.2 darwin/amd64\n\n\nfile: junk/bad.go\n\npackage junk\n\nfunc Foo() {\n        goto bar\nbar:\n        // Still reproduces with a \u0026quot;return\u0026quot; here.\n        // Does not reproduce with a \u0026quot;Foo()\u0026quot; here.\n}\n\n\nfile: junk/bad_test.go\n\npackage junk\n\nimport (\n  \u0026quot;testing\u0026quot;\n)\n\nfunc TestFoo(t *testing.T) {\n  Foo()\n}\n\n\nIt seems to build fine.\n\n$ go install ./...\n$ ls pkg/darwin_amd64/\njunk.a\n\n\nBut for some reason chokes the tester.\n\n$ go test ./...\n# testmain\n/var/folders/jd/0qfhxkbd51qf9pgggpx1xxt40000gn/T/go-build916942264/junk/_test/_testmain.go:9:\nsyntax error: unexpected \u0026lt;\nFAIL\tjunk [build failed]\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:39:06Z",
	"created_at": "2013-12-28T06:01:52Z",
	"updated_at": "2016-06-25T01:24:37Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
