{
	"id": 83595057,
	"number": 11023,
	"state": "closed",
	"title": "runtime: crash with \"leftover defer\"",
	"body": "```\r\n$ go version\r\ngo version devel +8cd191b Sat May 30 12:21:56 2015 +0000 linux/amd64\r\n$ uname -a | awk '$2=\"host\"'\r\nLinux host 3.13.0-52-generic #86~precise1-Ubuntu SMP Tue May 5 18:08:21 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n\r\nI have a process that receives data over a few hundred concurrent TCP connections and writes them to files. It's been crashing on recent versions of tip (it was stable on 1.4.1) with messages like \"runtime: g422: leftover defer sp=0xdeaddeaddeaddead pc=0x48d60e\" and \"runtime: g883: leftover defer sp=0x6576452e67736d62 pc=0x69203a746553746e\". This may be related to #9610 and #10941, but I've seen it (once) with sp != 0xdeaddeaddeaddead .\r\n\r\n```\r\nruntime: g422: leftover defer sp=0xdeaddeaddeaddead pc=0x48d60e\r\n\tdefer 0xc2087e7680 sp=0xdeaddeaddeaddead pc=0x48d60e\r\nfatal error: traceback has leftover defers\r\n\r\nruntime stack:\r\nruntime.throw(0x8ce070, 0x1d)\r\n\t/usr/local/go/src/runtime/panic.go:527 +0x96\r\nruntime.gentraceback(0x4435a0, 0xc208780a78, 0x0, 0xc208848a00, 0x0, 0x0, 0x7fffffff, 0x9298a0, 0xc208045e38, 0x0, ...)\r\n\t/usr/local/go/src/runtime/traceback.go:450 +0x7b9\r\nruntime.copystack(0xc208848a00, 0x1000)\r\n\t/usr/local/go/src/runtime/stack1.go:569 +0x180\r\nruntime.newstack()\r\n\t/usr/local/go/src/runtime/stack1.go:757 +0xb8a\r\nruntime.morestack()\r\n\t/usr/local/go/src/runtime/asm_amd64.s:330 +0x82\r\n\r\ngoroutine 422 [copystack]:\r\nruntime.cansemacquire(0xc208ed80e8, 0xc208848a80)\r\n\t/usr/local/go/src/runtime/sema.go:151 fp=0xc208780a80 sp=0xc208780a78\r\nruntime.semacquire(0xc208ed80e8, 0xc208848a01)\r\n\t/usr/local/go/src/runtime/sema.go:69 +0x5d fp=0xc208780ae0 sp=0xc208780a80\r\nnet.runtime_Semacquire(0xc208ed80e8)\r\n\t/usr/local/go/src/runtime/sema.go:48 +0x2d fp=0xc208780af8 sp=0xc208780ae0\r\nnet.(*fdMutex).RWLock(0xc208ed80e0, 0x1, 0x0)\r\n\t/usr/local/go/src/net/fd_mutex.go:143 +0x16f fp=0xc208780b60 sp=0xc208780af8\r\nnet.(*netFD).readLock(0xc208ed80e0, 0x0, 0x0)\r\n\t/usr/local/go/src/net/fd_unix.go:161 +0x40 fp=0xc208780b80 sp=0xc208780b60\r\nnet.(*netFD).Read(0xc208ed80e0, 0xc20896e00e, 0xff2, 0xff2, 0x0, 0x0, 0x0)\r\n\t/usr/local/go/src/net/fd_unix.go:221 +0x6f fp=0xc208780c50 sp=0xc208780b80\r\nnet.(*conn).Read(0xc2089ba010, 0xc20896e00e, 0xff2, 0xff2, 0x0, 0x0, 0x0)\r\n\t/usr/local/go/src/net/net.go:124 +0xe7 fp=0xc208780cb8 sp=0xc208780c50\r\nbufio.(*Scanner).Scan(0xc20882b280, 0xc2080b4240)\r\n\t/usr/local/go/src/bufio/scan.go:180 +0x87a fp=0xc208780e78 sp=0xc208780cb8\r\nredacted(0xc20812a0a0, 0x7f375ce70a30, 0xc2089ba010, 0xc2080b4240)\r\n\t/redacted.go:99 +0x93 fp=0xc208780fc0 sp=0xc208780e78\r\nruntime.goexit()\r\n\t/usr/local/go/src/runtime/asm_amd64.s:1670 +0x1 fp=0xc208780fc8 sp=0xc208780fc0\r\ncreated by redacted\r\n\t/redacted.go:81 +0x21e\r\n\r\ngoroutine 1 [chan receive]:\r\nmain.main()\r\n\t/redacted.go:230 +0xe7b\r\n\r\ngoroutine 5 [chan send]:\r\nredacted(0xc20809e000)\r\n\t/redacted.go:199 +0x1f0\r\ncreated by redacted.init.1\r\n\t/redacted.go:184 +0x6e\r\n\r\n[snip]\r\n```\r\n\r\nThe stack trace with non-0xdead address is a bit more interesting - it looks like two separate threads are dumping stacks.\r\n\r\n\r\n```\r\nruntime: g883: leftover defer sp=0x6576452e67736d62 pc=0x69203a746553746e\r\n\tdefer 0xc20af93780 sp=0x6576452e67736d62 pc=0x69203a746553746e\r\nfatal error: unexpected signal during runtime execution\r\n[signal 0xb code=0x80 addr=0x0 pc=0x452ba4]\r\n\r\nruntime stack:\r\nruntime.throw(0x8ef170, 0x2a)\r\n\t/usr/local/go/src/runtime/panic.go:527 +0x96\r\nruntime.sigpanic()\r\n\t/usr/local/go/src/runtime/sigpanic_unix.go:12 +0x5d\r\nruntime.gentraceback(0x4435a0, 0xc2088e8a78, 0x0, 0xc2095de000, 0x0, 0x0, 0x7fffffff, 0x9298a0, 0xc2085f3e38, 0x0, ...)\r\n\t/usr/local/go/src/runtime/traceback.go:448 +0x6d4\r\nruntime.copystack(0xc2095de000, 0x1000)\r\n\t/usr/local/go/src/runtime/stack1.go:569 +0x180\r\nruntime.newstack()\r\n\t/usr/local/go/src/runtime/stack1.go:757 +0xb8a\r\nruntime.morestack()\r\n\t/usr/local/go/src/runtime/asm_amd64.s:330 +0x82\r\n\r\ngoroutine 883 [copystack]:\r\nruntime.cansemacquire(0xc208ab2c48, 0xc2095de080)\r\n\t/usr/local/go/src/runtime/sema.go:151 fp=0xc2088e8a80 sp=0xc2088e8a78\r\nruntime.semacquire(0xc208ab2c48, 0xc2095de001)\r\n\t/usr/local/go/src/runtime/sema.go:69 +0x5d fp=0xc2088e8ae0 sp=0xc2088e8a80\r\nnet.runtime_Semacquire(0xc208ab2c48)\r\n\t/usr/local/go/src/runtime/sema.go:48 +0x2d fp=0xc2088e8af8 sp=0xc2088e8ae0\r\nnet.(*fdMutex).RWLock(0xc208ab2c40, 0x1, 0x0)\r\n\t/usr/local/go/src/net/fd_mutex.go:143 +0x16f fp=0xc2088e8b60 sp=0xc2088e8af8\r\nnet.(*netFD).readLock(0xc208ab2c40, 0x0, 0x0)\r\n\t/usr/local/go/src/net/fd_unix.go:161 +0x40 fp=0xc2088e8b80 sp=0xc2088e8b60\r\nnet.(*netFD).Read(0xc208ab2c40, 0xc20886b081, 0xf7f, 0xf7f, 0x0, 0x0, 0x0)\r\n\t/usr/local/go/src/net/fd_unix.go:221 +0x6f fp=0xc2088e8c50 sp=0xc2088e8b80\r\nnet.(*conn).Read(0xc209ab0508, 0xc20886b081, 0xf7f, 0xf7f, 0x0, 0x0, 0x0)\r\n\t/usr/local/go/src/net/net.go:124 +0xe7 fp=0xc2088e8cb8 sp=0xc2088e8c50\r\nbufio.(*Scanner).Scan(0xc20894b280, 0xc2080c0240)\r\nruntime: g382: leftover defer sp=0x6576452e67736d62 pc=0x69203a746553746e\r\n\tdefer 0xc20dfabfc0 sp=0x6576452e67736d62 pc=0x69203a746553746e\r\nfatal error: unexpected signal during runtime execution\r\n\t/usr/local/go/src/bufio/scan.go:180 +0x87a fp=0xc2088e8e78 sp=0xc2088e8cb8\r\nredacted(0xc20812a0a0, 0x7f4989e2f8d8, 0xc209ab0508, 0xc2080c0240)\r\n\t/redacted.go:99 +0x93 fp=0xc2088e8fc0 sp=0xc2088e8e78\r\nruntime.goexit()\r\n\t/usr/local/go/src/runtime/asm_amd64.s:1670 +0x1 fp=0xc2088e8fc8 sp=0xc2088e8fc0\r\ncreated by redacted\r\n\t/redacted.go:81 +0x21e\r\n\r\ngoroutine 1 [chan receive, 6 minutes]:\r\nmain.main()\r\n\t/redacted.go:230 +0xe7b\r\n\r\ngoroutine 5 [chan send]:\r\nredacted(0xc20809e000)\r\n\t/redacted.go:199 +0x1f0\r\ncreated by redacted.init.1\r\n\t/redacted.go:184 +0x6e\r\n\r\n[snip]\r\n```\r\n",
	"user": {
		"login": "rhysh",
		"id": 230685,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2015-06-22T18:32:37Z",
	"created_at": "2015-06-01T16:38:59Z",
	"updated_at": "2016-06-25T02:09:59Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
