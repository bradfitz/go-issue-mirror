{
	"id": 135218463,
	"number": 14443,
	"state": "open",
	"title": "runtime: rationalize runtime.Errors",
	"body": "Package runtime defines an Error interface for runtime errors and exactly one exported type that implements it: TypeAssertionError. But there are about a half dozen other panics in the runtime caused by programmer errors that are detected at runtime; things like \"index out of range\" and \"divide by zero\". Currently these are just string panics, which means they're inconsistent with TypeAssertionError and contain no detail about, for example, what the index was or what range it was out of. We should make these panics raise types that implement runtime.Error and carry actual details about the error.\r\n\r\nThis is a potentially breaking change, albeit a weak one, since programs can check the string returned by the Error() method to detect these panics (and since this is the only way to detect them right now, I suspect this happens in practice). We could introduce exported types for these panics without breaking compatibility, but can't add more information to their Error() message.",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Go2"
		}
	],
	"comments": 3,
	"created_at": "2016-02-21T15:33:11Z",
	"updated_at": "2016-02-22T16:14:56Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
