{
	"id": 66086685,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003e\u003e Go-syntax != {valid,complete}, compiler grade Go source code.\n\nNo, this is absolutely true, but Go syntax as a fmt option aids by giving type\ninformation in all other cases. You could have a Go syntax formatting that gave unnamed\ndefinitions of all composite type - but we don't have that.\n\n\u003e {float64(1.0),int8(1)) printed as '1' is a correct behavior - 1.0 is exactly same as 1\nin IEEE representation and int8(1) is exactly the same value etc.\n\nI don't believe you can make a claim for correctness or otherwise here; it comes down to\na design decision. 1.0 make well be exactly the same value as 1, but 1. or float64(1)\ngive this type information, but this doubles up that information in cases where the type\nis not a simple type, e.g. \u003ca href=\"http://play.golang.org/p/oeFhSO8_b7\"\u003ehttp://play.golang.org/p/oeFhSO8_b7\u003c/a\u003e So now we have an\napproach that is not truly general (an break in symmetry is often - maybe in this case -\nan indication of a design mis-step and something that is often raised when people\ndiscuss Go design principles).\n\n\u003e If one need more {debug,test} info, \"%T(%#v)\" is usable today (and is one of the\nsources of backward incompatibility introduced by the proposal).\n\nThe first part is addressed above, but I don't understand how this particular thing is\nany more of a backward incompatibility that any other use of %#v where people are\ncomparing against expected values. Note that I did raise the compatibility issue in the\ninitial ticket. I see this as a Go2-if-ever issue.\n\nWhat initially spurred this was that if you have a type F float64, %#v does not format\nthat differently to float64, yet there was some intention in the definition of F, so why\nnot reflect that.\u003c/pre\u003e",
	"user": {
		"login": "kortschak",
		"id": 275221,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-10-11T11:37:15Z",
	"updated_at": "2014-12-08T10:36:19Z"
}
