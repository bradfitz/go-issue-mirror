{
	"id": 230035611,
	"body": "The difference is that I would like to do it in go, not C. Sure, I could\nwrite a low level game engine in C and call into that from go. But that\ndefeats the purpose of using go in the first place.\n\nI tried to write a 2d game engine in go a few years ago, but the cgo\noverhead was too much. So I was forced to go back to C, and since all the\nlogic was in C, there wasn't much reason left to use go for that project.\n\nSuch a C block in go as I propose, would be a bit like extern \"C\" in C++,\nyou could still use a subset of go while handling the lower level API.\nOn 1 Jul 2016 9:45 pm, \"Bryan C. Mills\" \u003cnotifications@github.com\u003e wrote:\n\n\u003e To throw out a wild idea if myself, maybe consecutive calls into C could\n\u003e be grouped together and use the same C stack without swapping back.\n\u003e\n\u003e How is that different from writing a function in C that makes those calls\n\u003e in sequence?\n\u003e\n\u003e â€”\n\u003e You are receiving this because you commented.\n\u003e Reply to this email directly, view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/16051#issuecomment-230032467\u003e, or mute\n\u003e the thread\n\u003e \u003chttps://github.com/notifications/unsubscribe/AAEWeTUDLzs0Fs-SmywjjLMualwbqWF9ks5qRW5ggaJpZM4I0hlW\u003e\n\u003e .\n\u003e\n",
	"user": {
		"login": "beoran",
		"id": 71289,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-01T20:01:24Z",
	"updated_at": "2016-07-01T20:01:24Z"
}
