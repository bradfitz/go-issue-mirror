{
	"id": 226239788,
	"body": "I like the idea of nullifying the large overhead of cgo which does affect a class of programs. I'm a little concerned on how hard it would be for a programmer to prove that a C function is safe for the `#cgo nonblocking` behavior. Trivial functions are easy, but what about a moderately complex C library? How  can I convince myself that there is no codepaths that call a blocking syscall? In fact, how can I know which standard library functions do call blocking syscalls? I find `GODEBUG=cgocheck` very useful, so maybe something similar could be attempted (thought I can't see how)?",
	"user": {
		"login": "rasky",
		"id": 1014109,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-15T16:18:26Z",
	"updated_at": "2016-06-15T16:18:26Z"
}
