{
	"id": 66066818,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6 by **branimirkaradzic**:\n\n\u003cpre\u003eI integrated change and still doesn't appear fixed. I stripped down code and got better\nrepro case. See line with conn.decode = true (in func NewConn), change it to false to\nget expected behavior. Let me know if I need to better describe the problem.\n\npackage main\n\nimport (\n\t\"code.google.com/p/go.net/websocket\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"io\"\n\t\"net\"\n\t\"net/http\"\n\t\"syscall\"\n\t\"time\"\n)\n\nconst (\n\tDefaultTimeout time.Duration = 8e9\n)\n\ntype Conn struct {\n\trw     net.Conn\n\tdec    io.Reader\n\tdecode bool\n}\n\nfunc NewConn(rw net.Conn) (conn *Conn) {\n\n\tconn = new(Conn)\n\tconn.rw = rw\n\tconn.dec = base64.NewDecoder(base64.StdEncoding, rw)\n\tconn.decode = true // change this to false to see expected results.\n\n\treturn\n}\n\nfunc (conn *Conn) Read(b []byte) (n int, err error) {\n\n\tconn.rw.SetReadDeadline(time.Now().Add(DefaultTimeout))\n\tif conn.decode {\n\t\tn, err = conn.dec.Read(b)\n\t} else {\n\t\tn, err = conn.rw.Read(b)\n\t}\n\n\tif err != syscall.EAGAIN {\n\t\terr2, ok := err.(*net.OpError)\n\n\t\tif !ok || !err2.Temporary() {\n\t\t\treturn\n\t\t}\n\n\t\treturn n, nil\n\t}\n\n\treturn\n}\n\nfunc webSocketHandler(rw *websocket.Conn) {\n\n\tdefer rw.Close()\n\n\tfmt.Print(\"server: incoming\\n\")\n\n\tconn := NewConn(rw, )\n\n\tvar (\n\t\terr error\n\t\tn   int\n\t)\n\n\tnowNs := time.Now().UnixNano()\n\tnextNs := nowNs + 4e9\n\tvar calls uint64\n\n\tfor err == nil \u0026\u0026 n == 0 {\n\n\t\tb := make([]byte, 1024)\n\t\tn, err = conn.Read(b)\n\n\t\tcalls++\n\t\tnowNs = time.Now().UnixNano()\n\t\tif nowNs \u0026gt; nextNs {\n\t\t\tnextNs += 4e9\n\t\t\tfmt.Print(\"Calls in 4 secs: \", calls, \"\\n\")\n\t\t}\n\t}\n\n\tfmt.Print(\"server: client left\\n\")\n}\n\nfunc client() {\n\n\tfor {\n\n\t\t\u0026lt;-time.After(4e9)\n\n\t\tfmt.Print(\"client: connect attempt\\n\")\n\n\t\tws, err := websocket.Dial(\"ws://localhost:1234/ws\", \"\", \"\u003ca href=\"http://localhost/\"\u003ehttp://localhost/\u003c/a\u003e\")\n\n\t\tif err == nil {\n\n\t\t\tconn := NewConn(ws)\n\n\t\t\tvar (\n\t\t\t\terr error\n\t\t\t\tn   int\n\t\t\t)\n\n\t\t\tfor err == nil \u0026\u0026 n == 0 {\n\n\t\t\t\tb := make([]byte, 1024)\n\t\t\t\tn, err = conn.Read(b)\n\t\t\t}\n\n\t\t\tws.Close()\n\n\t\t\tfmt.Print(\"client: left\\n\")\n\n\t\t} else {\n\t\t\tfmt.Print(\"client: \", err, \"\\n\")\n\t\t}\n\t}\n}\n\nfunc main() {\n\n\tgo client()\n\n\thttp.Handle(\"/ws\", websocket.Handler(webSocketHandler))\n\terr := http.ListenAndServe(\":1234\", nil)\n\tif err != nil {\n\t\tpanic(\"ListenAndServe: \" + err.Error())\n\t}\n}\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-04-30T21:30:47Z",
	"updated_at": "2014-12-22T06:14:17Z"
}
