{
	"id": 149244505,
	"number": 15351,
	"state": "closed",
	"title": "function call when function is in variable works 3 times slower",
	"body": "1. What version of Go are you using (`go version`)?\r\ngo version go1.6.1 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/powerman/gocode\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/go\"\r\nGOTOOLDIR=\"/usr/lib/go/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"x86_64-pc-linux-gnu-gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"x86_64-pc-linux-gnu-g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n3. What did you do?\r\nhttps://play.golang.org/p/_fWEoXo0yF\r\nOn playground it doesn't show this issue because it doesn't play nice with time, so you have to run it on real system.\r\n\r\n4. What did you expect to see?\r\nIncr2 should not be slower than other cases.\r\n\r\n5. What did you see instead?\r\nIncr1: 4.624273ms\r\nIncr2: 15.624789ms\r\nIncr3: 4.61209ms\r\n\r\nI've also benchmarked many other variants to indirectly call function and all have same speed as normal function call - except function-in-a-var case.",
	"user": {
		"login": "powerman",
		"id": 1354301,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2016-04-18T20:13:33Z",
	"created_at": "2016-04-18T19:11:09Z",
	"updated_at": "2016-04-18T20:13:33Z"
}
