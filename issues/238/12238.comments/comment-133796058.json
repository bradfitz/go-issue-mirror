{
	"id": 133796058,
	"body": "I believe I'm able to produce a similar crash involving C-\u003eGo callbacks and stack barriers:\r\n\r\n```\r\nÂ» go test -bench . -v\r\n=== RUN   TestRealm\r\n=== RUN   TestPrefix\r\n=== RUN   TestLongestMatch\r\n=== RUN   TestMatches\r\n--- PASS: TestRealm (0.00s)\r\n--- PASS: TestLongestMatch (0.01s)\r\n--- PASS: TestMatches (0.01s)\r\n--- PASS: TestPrefix (0.01s)\r\nPASS\r\nBenchmarkInsertions-4\tat *0xc82004d520 expected stack barrier PC 0x4ebc70, found 0xc82004d5d8, goid=51\r\ngp.stkbar=[*0xc82004d2e0=0x5d35c1 *0xc82004d520=0x4ed67c *0xc82004df18=0x50736a], gp.stkbarPos=1, gp.stack=[0xc82004c000,0xc82004dfc0)\r\nfatal error: stack barrier lost\r\n\r\nruntime stack:\r\nruntime.throw(0x6bf330, 0x12)\r\n\t/usr/lib/go/src/runtime/panic.go:527 +0x90\r\nruntime.gcRemoveStackBarrier(0xc820001980, 0xc82004d520, 0x4ed67c)\r\n\t/usr/lib/go/src/runtime/mgcmark.go:579 +0x245\r\nruntime.gcUnwindBarriers(0xc820001980, 0xc82004d5d8)\r\n\t/usr/lib/go/src/runtime/mgcmark.go:610 +0xc1\r\nruntime.heapBitsBulkBarrier.func1()\r\n\t/usr/lib/go/src/runtime/mbitmap.go:409 +0x29\r\nruntime.systemstack(0xc82001e000)\r\n\t/usr/lib/go/src/runtime/asm_amd64.s:262 +0x79\r\nruntime.mstart()\r\n\t/usr/lib/go/src/runtime/proc1.go:674\r\n\r\ngoroutine 51 [running]:\r\nruntime.systemstack_switch()\r\n\t/usr/lib/go/src/runtime/asm_amd64.s:216 fp=0xc82004d430 sp=0xc82004d428\r\nruntime.heapBitsBulkBarrier(0xc82004d5d8, 0x10)\r\n\t/usr/lib/go/src/runtime/mbitmap.go:410 +0x142 fp=0xc82004d4c8 sp=0xc82004d430\r\nruntime.typedmemmove(0x612900, 0xc82004d5d8, 0xc820656cf0)\r\n\t/usr/lib/go/src/runtime/mbarrier.go:185 +0x59 fp=0xc82004d4e8 sp=0xc82004d4c8\r\nruntime.assertE2T2(0x612900, 0x612900, 0xc820656cf0, 0xc82004d5d8, 0x0)\r\n\t/usr/lib/go/src/runtime/iface.go:242 +0x92 fp=0xc82004d508 sp=0xc82004d4e8\r\ngithub.com/mattn/go-sqlite3.(*SQLiteStmt).bind(0xc820110050, 0xc82065a3c0, 0x4, 0x4, 0x0, 0x0)\r\n\t/home/dave/hack/go/src/github.com/mattn/go-sqlite3/sqlite3.go:793 +0x9de fp=0xc82004d790 sp=0xc82004d508\r\ngithub.com/mattn/go-sqlite3.(*SQLiteStmt).Exec(0xc820110050, 0xc82065a3c0, 0x4, 0x4, 0x0, 0x0, 0x0, 0x0)\r\n\t/home/dave/hack/go/src/github.com/mattn/go-sqlite3/sqlite3.go:851 +0x7b fp=0xc82004d838 sp=0xc82004d790\r\ngithub.com/mattn/go-sqlite3.(*SQLiteConn).Exec(0xc820110000, 0x6efae0, 0x83, 0xc82065a3c0, 0x4, 0x4, 0x0, 0x0, 0x0, 0x0)\r\n\t/home/dave/hack/go/src/github.com/mattn/go-sqlite3/sqlite3.go:515 +0x3b0 fp=0xc82004d938 sp=0xc82004d838\r\ndatabase/sql.(*Tx).Exec(0xc8200f3db0, 0x6efae0, 0x83, 0xc82004dcb8, 0x4, 0x4, 0x0, 0x0, 0x0, 0x0)\r\n\t/usr/lib/go/src/database/sql/sql.go:1267 +0x276 fp=0xc82004dac8 sp=0xc82004d938\r\ngithub.com/danderson/gipam/db.(*Prefix).Create(0xc82004dee8, 0x0, 0x0)\r\n\t/home/dave/hack/go/src/github.com/danderson/gipam/db/prefix.go:34 +0x64c fp=0xc82004dd00 sp=0xc82004dac8\r\nfound next stack barrier at 0xc82004df18; expected [*0xc82004d520=0x4ed67c *0xc82004df18=0x50736a]\r\nfatal error: missed stack barrier\r\npanic during panic\r\n\r\nruntime stack:\r\nruntime.startpanic_m()\r\n\t/usr/lib/go/src/runtime/panic1.go:67 +0x141\r\nruntime.systemstack(0x6ee2d8)\r\n\t/usr/lib/go/src/runtime/asm_amd64.s:278 +0xab\r\nruntime.startpanic()\r\n\t/usr/lib/go/src/runtime/panic.go:505 +0x14\r\nruntime.throw(0x6bd410, 0x14)\r\n\t/usr/lib/go/src/runtime/panic.go:526 +0x83\r\nruntime.gentraceback(0x4ebb10, 0xc82004d428, 0x0, 0xc820001980, 0x0, 0x0, 0x64, 0x0, 0x0, 0x0, ...)\r\n\t/usr/lib/go/src/runtime/traceback.go:259 +0x1053\r\nruntime.traceback1(0xffffffffffffffff, 0xffffffffffffffff, 0x0, 0xc820001980, 0x0)\r\n\t/usr/lib/go/src/runtime/traceback.go:550 +0xc8\r\nruntime.traceback(0xffffffffffffffff, 0xffffffffffffffff, 0x0, 0xc820001980)\r\n\t/usr/lib/go/src/runtime/traceback.go:527 +0x48\r\nruntime.tracebackothers(0xc820001200)\r\n\t/usr/lib/go/src/runtime/traceback.go:664 +0xda\r\nruntime.dopanic_m(0xc820001200, 0x4bddc0, 0x7f32141b1e10)\r\n\t/usr/lib/go/src/runtime/panic1.go:104 +0x1f9\r\nruntime.dopanic.func1()\r\n\t/usr/lib/go/src/runtime/panic.go:514 +0x32\r\nruntime.systemstack(0x7f32141b1de8)\r\n\t/usr/lib/go/src/runtime/asm_amd64.s:278 +0xab\r\nruntime.dopanic(0x0)\r\n\t/usr/lib/go/src/runtime/panic.go:515 +0x61\r\nruntime.throw(0x6bf330, 0x12)\r\n\t/usr/lib/go/src/runtime/panic.go:527 +0x90\r\nruntime.gcRemoveStackBarrier(0xc820001980, 0xc82004d520, 0x4ed67c)\r\n\t/usr/lib/go/src/runtime/mgcmark.go:579 +0x245\r\nruntime.gcUnwindBarriers(0xc820001980, 0xc82004d5d8)\r\n\t/usr/lib/go/src/runtime/mgcmark.go:610 +0xc1\r\nruntime.heapBitsBulkBarrier.func1()\r\n\t/usr/lib/go/src/runtime/mbitmap.go:409 +0x29\r\nruntime.systemstack(0xc82001e000)\r\n\t/usr/lib/go/src/runtime/asm_amd64.s:262 +0x79\r\nruntime.mstart()\r\n\t/usr/lib/go/src/runtime/proc1.go:674\r\nexit status 2\r\nFAIL\tgithub.com/danderson/gipam/db\t2.934s\r\n```\r\n\r\nThis crash happens repeatably within 10s of starting this benchmark, on amd64. The crash does _not_ happen in Go 1.4.2, or in Go 1.5.0 with GODEBUG=gcstackbarrieroff=1.\r\n\r\nTo reproduce, `go get github.com/danderson/gipam`; then install `github.com/danderson/go-sqlite3` as `github.com/mattn/go-sqlite3` (I'm pending a pull request, but my fork is essential because it implements the C-\u003eGo callbacks in question). Once that's done, `go test -bench . -v` on the `db` subpackage should reliably trigger the crash.\r\n\r\nNote that the cgo code in my fork of go-sqlite3 is my first attempt at doing C-\u003eGo callbacks, so it's possible that I just messed that up and am corrupting memory. However, the fact that it doesn't crash in 1.4 and that this bug talks about bugs triggered by C-\u003eGo-\u003eC transitions makes me suspicious, as this benchmark is doing hundreds of thousands of those transitions.",
	"user": {
		"login": "danderson",
		"id": 1918,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-23T07:11:54Z",
	"updated_at": "2015-08-23T07:11:54Z"
}
