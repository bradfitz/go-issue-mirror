{
	"id": 51278927,
	"number": 2238,
	"state": "closed",
	"title": "make install ignores $GOPATH",
	"body": "by **awreece**:\n\n\u003cpre\u003eGiven the following Makefile (see attached), I expect `make install` to install mylib.a\nin $(GOPATH)/pkg. \n\nWhile it is described as part of the documentation for goinstall\n(\u003ca href=\"http://code.google.com/p/go/source/browse/src/cmd/goinstall/doc.go)\"\u003ehttp://code.google.com/p/go/source/browse/src/cmd/goinstall/doc.go)\u003c/a\u003e, the functionality\nof $(GOPATH) is fairly useful. It seems like a reasonable way to specify multiple\ndirectories to check for source / object files that doesn't involve manually specifying\ninclude dirs or forcing all files to be placed in the system global $(GOROOT). \n\nWhat do you see instead?\nIt instead gets installed in the global home: see below\n\n  areece@areece-laptop:/tmp/sample$ make install\n  /tmp/sample\n  make[1]: Entering directory `/tmp/sample/src'\n  cp _obj/mylib.a \u0026quot;/home/areece/go/pkg/linux_386/mylib.a\u0026quot;\n  make[1]: Leaving directory `/tmp/sample/src'\n\nWhich operating system are you using?\nLinux\n\nWhich revision are you using?  (hg identify)\nc9da4512c385 tip\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/2238/0/sample.tar.gz\"\u003esample.tar.gz\u003c/a\u003e (440 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:12:02Z",
	"created_at": "2011-09-07T06:34:18Z",
	"updated_at": "2016-06-24T19:34:32Z"
}
