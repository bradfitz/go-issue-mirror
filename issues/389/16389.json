{
	"id": 165878509,
	"number": 16389,
	"state": "closed",
	"title": "race: Mutex failure on darwin/amd64 with go1.7rc1",
	"body": "The bug exists in the following environment, using the official binaries:\r\n\r\n`go version go1.7rc1 darwin/amd64`\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/shazow/local/tmp/go/gopath\"\r\nGORACE=\"\"\r\nGOROOT=\"/Users/shazow/local/tmp/go/go\"\r\nGOTOOLDIR=\"/Users/shazow/local/tmp/go/go/pkg/tool/darwin_amd64\"\r\nCC=\"clang\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/q7/x1hhwd5x5kg8t31__335bqgm0000gn/T/go-build492769947=/tmp/go-build -gno-record-gcc-switches -fno-common\"\r\nCXX=\"clang++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n(Apologies for the weird paths, I wanted to make sure this reproduces on a clean GOROOT/GOPATH install.)\r\n\r\nUsing the official binaries, the following passes cleanly on `go version go1.7rc1 linux/amd64` but fails on `go version go1.7rc1 darwin/amd64` and I'm not able to figure out why the offending lines are at fault. After trying all kinds of things, it seems there is an issue with the mutex implementation? I have not been able to reproduce this with a simple example yet.\r\n\r\nTo reproduce:\r\n\r\n1. Make a fresh Go environment with go1.7rc1 on darwin/amd64\r\n2. `go get github.com/shazow/ssh-chat` (current version is `9bf1f53445946fd8496cb1df9eaeb4bc88cd630f`)\r\n3. `cd $GOPATH/src/github.com/shazow/ssh-chat`\r\n4. `go test -race -v -run TestHostKick`\r\n\r\n```\r\n=== RUN   TestHostKick\r\n==================\r\nWARNING: DATA RACE\r\nRead at 0x00c4200a4618 by goroutine 42:\r\n  github.com/shazow/ssh-chat.(*Host).Connect()\r\n      /Users/shazow/local/tmp/go/gopath/src/github.com/shazow/ssh-chat/host.go:126 +0x3e8\r\n\r\nPrevious write at 0x00c4200a4618 by goroutine 43:\r\n  sync/atomic.AddInt32()\r\n      /Users/shazow/local/tmp/go/go/src/runtime/race_amd64.s:269 +0xb\r\n  sync.(*Mutex).Unlock()\r\n      /Users/shazow/local/tmp/go/go/src/sync/mutex.go:109 +0x54\r\n  github.com/shazow/ssh-chat.(*Host).Connect()\r\n      /Users/shazow/local/tmp/go/gopath/src/github.com/shazow/ssh-chat/host.go:102 +0x274\r\n\r\nGoroutine 42 (running) created at:\r\n  github.com/shazow/ssh-chat.(*Host).Serve()\r\n      /Users/shazow/local/tmp/go/gopath/src/github.com/shazow/ssh-chat/host.go:184 +0xc2\r\n\r\nGoroutine 43 (running) created at:\r\n  github.com/shazow/ssh-chat.(*Host).Serve()\r\n      /Users/shazow/local/tmp/go/gopath/src/github.com/shazow/ssh-chat/host.go:184 +0xc2\r\n==================\r\n==================\r\nWARNING: DATA RACE\r\nRead at 0x00c4200a4630 by goroutine 42:\r\n  github.com/shazow/ssh-chat.(*Host).Connect()\r\n      /Users/shazow/local/tmp/go/gopath/src/github.com/shazow/ssh-chat/host.go:126 +0x3e8\r\n\r\nPrevious write at 0x00c4200a4630 by goroutine 43:\r\n  github.com/shazow/ssh-chat.(*Host).Connect()\r\n      /Users/shazow/local/tmp/go/gopath/src/github.com/shazow/ssh-chat/host.go:101 +0x249\r\n\r\nGoroutine 42 (running) created at:\r\n  github.com/shazow/ssh-chat.(*Host).Serve()\r\n      /Users/shazow/local/tmp/go/gopath/src/github.com/shazow/ssh-chat/host.go:184 +0xc2\r\n\r\nGoroutine 43 (running) created at:\r\n  github.com/shazow/ssh-chat.(*Host).Serve()\r\n      /Users/shazow/local/tmp/go/gopath/src/github.com/shazow/ssh-chat/host.go:184 +0xc2\r\n==================\r\n--- PASS: TestHostKick (0.05s)\r\nPASS\r\nFound 2 data race(s)\r\nexit status 66\r\nFAIL\tgithub.com/shazow/ssh-chat\t1.074s\r\n```\r\n\r\nThe lines in question are\r\n\r\n```go\r\n        ...\r\n\th.mu.Lock()\r\n\tmotd := h.motd\r\n\tcount := h.count\r\n\th.count++\r\n\th.mu.Unlock()  // \u003c---- L102\r\n        ...\r\n\tif h.isOp(term.Conn) { // \u003c--- L126\r\n\t\th.Room.Ops.Add(member)\r\n\t}\r\n```\r\n\r\n`h.isOp` does not touch the mutex, nor any of the inner variables.\r\n\r\nSame test on linux/amd64:\r\n\r\n```\r\n$ go version\r\ngo version go1.7rc1 linux/amd64\r\n$ go test -v -run TestHostKick -race\r\n=== RUN   TestHostKick\r\n--- PASS: TestHostKick (0.07s)\r\nPASS\r\nok  \tgithub.com/shazow/ssh-chat\t1.089s\r\n```",
	"user": {
		"login": "shazow",
		"id": 6292,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2016-07-15T21:22:40Z",
	"created_at": "2016-07-15T21:12:10Z",
	"updated_at": "2016-07-17T18:04:32Z"
}
