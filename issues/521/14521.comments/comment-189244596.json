{
	"id": 189244596,
	"body": "The go runtime can only advise the operating system that a section of\nvirtual address space is no longer needed, it cannot force the operating\nsystem to take action. Operating systems, especially linux, and especially\nif they are not under significant memory pressure can, and regularly do,\nignore this advice.\n\nThe best way to determine the memory usage of your application is via\nnet/http/pprof, or by enabling GODEBUG=gctrace=1\n\nOn Fri, Feb 26, 2016 at 10:43 PM, Daniel Kaypour \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e Hmm, I am not sure but afaik runtime.GC() and debug.FreeOSMemory() are not\n\u003e guaranteed to release memory, since Go's GC is conservative, so it keeps\n\u003e memory, even if it is not in use, incase it has to allocate again. (Someone\n\u003e else correct me, if I am wrong. Just my observations)\n\u003e Does your application crash with out of memory?\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/14521#issuecomment-189235730\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-26T11:59:19Z",
	"updated_at": "2016-02-26T11:59:19Z"
}
