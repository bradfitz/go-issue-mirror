{
	"id": 51276524,
	"number": 467,
	"state": "closed",
	"title": "Suboptimal sort algorithm used in /src/pkg/sort/sort.go",
	"body": "by **mimenarrator**:\n\n\u003cpre\u003eThe Go sort library implements quicksort, which has a worst-case runtime of\nO(n^2), and not introsort, with a worst case runtime of O(n*log(n)), as,\nfor example, GNU's libstdc++ does. Introsort almost always uses the same\nalgorithm as quicksort, but when pathological cases are detected that lead\nto O(n^2) runtime of quicksort (by keeping track of the recursion depth),\nheapsort is used instead, since it is guaranteed O(n*log(n)), though on\naverage slower than quicksort. This is obviously not of the highest\npriority, especially given the rarity of pathological cases for the\nquicksort implementation used in Go, but they do exist, and can, for\nexample, but exploited in denial of service attacks.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 15,
	"closed_at": "2014-12-08T10:04:42Z",
	"created_at": "2009-12-26T10:01:36Z",
	"updated_at": "2015-09-02T15:11:51Z"
}
