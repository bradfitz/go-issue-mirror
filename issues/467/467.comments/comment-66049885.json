{
	"id": 66049885,
	"body": "\u003ca id=\"c8\"\u003e\u003c/a\u003eComment 8 by **l4zycod3r**:\n\n\u003cpre\u003e\u003e Because it's derived from merge sort, timsort requires at least O(n/2) extra memory.  \n\nThis sort uses pointers to values instead of real storage memory:\nLook at \u003ca href=\"http://svn.python.org/projects/python/trunk/Objects/listsort.txt\"\u003ehttp://svn.python.org/projects/python/trunk/Objects/listsort.txt\u003c/a\u003e : \n\"+ timsort can require a temp array containing as many as N//2 pointers,\n  which means as many as 2*N extra bytes on 32-bit boxes.  It can be\n  expected to require a temp array this large when sorting random data; on\n  data with significant structure, it may get away without using any extra\n  heap memory.  This appears to be the strongest argument against it, but\n  compared to the size of an object, 2 temp bytes worst-case (also expected-\n  case for random data) doesn't scare me much.\"\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-01-11T00:34:42Z",
	"updated_at": "2014-12-08T10:04:43Z"
}
