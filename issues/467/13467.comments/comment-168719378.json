{
	"id": 168719378,
	"body": "\u003e It is explicitly not a goal to make it possible to expose C types directly in Go package APIs.\r\n\r\nThe point of this request is not to write general-purpose Go packages using C types.  It is to enable the creation of support libraries for Go packages that call C functions and/or Go packages that export C APIs with richer structure than primitive pointers and integers.  (For example: one might want to return a protocol buffer from a Go function to a C or C++ caller without making more than one copy of the marshaled data.  That operation is complex enough that it needs a support library, and because it needs to manipulate Go types it must be written in Go.)\r\n\r\n\u003e As Ian said, it's not even clear this is sound.\r\n\r\nThe request is to make \"identical\" C types identical Go types, not to make C types \"with the same name\" identical Go types.  I believe it is sound provided that we enforce that the C types are actually identical.",
	"user": {
		"login": "bcmills",
		"id": 5200974,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-04T16:09:20Z",
	"updated_at": "2016-01-04T16:13:32Z"
}
