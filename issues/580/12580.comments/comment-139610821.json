{
	"id": 139610821,
	"body": "\u003e @bradfitz: I don't want to provide access to net.Conns, lest people try to read or write from them.\r\n\r\nThe Conn is already accessible (for freshly dialed connections) via Transport.Dial, so technically that problem already exists.\r\n\r\nI'm curious, though, why you're leaning towards a callback interface? Callbacks can't really do anything except call time.Now and write a log entry, unless the callbacks are allowed to customize RoundTrip similarly to Transport.Dial. Further, Callbacks have issues like those raised by @Redundancy. A new method like the following seems to satisfy all of the use cases stated so far (except for @vgalu's use case, which I don't quite understand either):\r\n\r\n```go\r\n// Note that this can be packaged into an http.RoundTripper via a per-request struct like:\r\n// type foo struct { *Transport, *RoundTripAnalytics }\r\n// where foo.RoundTrip invokes Transport.RoundTripWithAnalytics and captures the result\r\nRoundTripWithAnalytics(*Request) (*Response, *RoundTripAnalytics, error)\r\n```",
	"user": {
		"login": "tombergan",
		"id": 13954200,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-11T17:45:23Z",
	"updated_at": "2015-09-11T17:45:23Z"
}
