{
	"id": 66089662,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eThis frequent can be remedied with a function:\n\nfunc Spawn(N int32, fn func(id int), autoclose ...interface{}) {\n\tvar counter int32 = N\n\tfor k := 0; k \u0026lt; int(N); k += 1 {\n\t\tgo func(k int) {\n\t\t\tfn(k)\n\t\t\tif atomic.AddInt32(\u0026counter, -1) == 0 {\n\t\t\t\tfor _, ch := range autoclose {\n\t\t\t\t\treflect.ValueOf(ch).Close()\n\t\t\t\t}\n\t\t\t}\n\t\t}(k)\n\t}\n}\n\nAnd the usage example: \u003ca href=\"http://play.golang.org/p/8M156uFYPW\"\u003ehttp://play.golang.org/p/8M156uFYPW\u003c/a\u003e.\n\nAlternatively, the last parameter can be a callback to cleanup:\n\nfunc Spawn(N int32, fn func(id int), whendone ...func()) {\n\tvar counter int32 = N\n\tfor k := 0; k \u0026lt; int(N); k += 1 {\n\t\tgo func(k int) {\n\t\t\tfn(k)\n\t\t\tif atomic.AddInt32(\u0026counter, -1) == 0 {\n\t\t\t\tfor _, fn := range whendone {\n\t\t\t\t\tfn()\n\t\t\t\t}\n\t\t\t}\n\t\t}(k)\n\t}\n}\u003c/pre\u003e",
	"user": {
		"login": "egonelbre",
		"id": 192964,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-12-27T13:35:42Z",
	"updated_at": "2014-12-22T06:31:07Z"
}
