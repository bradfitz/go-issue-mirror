{
	"id": 182721645,
	"body": "Adjustable I think, but normally 4k.\nOn Feb 10, 2016 9:34 PM, \"Dave Cheney\" \u003cnotifications@github.com\u003e wrote:\n\n\u003e Thanks Ian. I wonder if the scavenger being disabled on arm64 and ppc64\n\u003e systems has hidden this error so far. I'm assuming that if we don't use\n\u003e madvise to return memory to the OS, mincore could be wrong and it wouldn't\n\u003e matter -- just a wild guess.\n\u003e\n\u003e What is the page size on mips64?\n\u003e\n\u003e On Thu, 11 Feb 2016, 16:21 Ian Lance Taylor \u003cnotifications@github.com\u003e\n\u003e wrote:\n\u003e\n\u003e \u003e On GNU/Linux, on 386, amd64, arm, and arm64, system calls return a\n\u003e \u003e negative errno value, in eax, rax, r0, r0, respectively. On mips64 and\n\u003e \u003e ppc64, they return a positive errno value, in r2 and r3, respectively.\n\u003e \u003e\n\u003e \u003e In the runtime package, I think that the implementation of mmap on arm64\n\u003e \u003e is wrong and the implementation of mincore on mips64 and ppc64 is wrong.\n\u003e \u003e\n\u003e \u003e —\n\u003e \u003e Reply to this email directly or view it on GitHub\n\u003e \u003e \u003chttps://github.com/golang/go/issues/14297#issuecomment-182717231\u003e.\n\u003e \u003e\n\u003e\n\u003e —\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/14297#issuecomment-182720052\u003e.\n\u003e\n",
	"user": {
		"login": "eswierk",
		"id": 355618,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-11T05:41:42Z",
	"updated_at": "2016-02-11T05:41:42Z"
}
