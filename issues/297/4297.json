{
	"id": 51281929,
	"number": 4297,
	"state": "closed",
	"title": "encoding/json documentation for tagging structs is incorrect",
	"body": "by **dan.callahan**:\n\n\u003cpre\u003eThe second sentence of the godoc for encoding/json is:\n\n\u0026gt; See \u0026quot;JSON and Go\u0026quot; for an introduction to this package:\n\u0026gt; \u003ca href=\"http://golang.org/doc/articles/json_and_go.html\"\u003ehttp://golang.org/doc/articles/json_and_go.html\u003c/a\u003e\n\nAbout 1/3 through that article, the algorithm for matching struct fields to JSON keys is\ndescribed:\n\n\u0026gt; For a given JSON key \u0026quot;Foo\u0026quot;, Unmarshal will look through the destination\nstruct's fields to find (in order of preference):\n\u0026gt; - An exported field with a tag of \u0026quot;Foo\u0026quot; (see the Go spec for more on\nstruct tags),\n\u0026gt; - An exported field named \u0026quot;Foo\u0026quot;, or\n\u0026gt; - An exported field named \u0026quot;FOO\u0026quot; or \u0026quot;FoO\u0026quot; or some other\ncase-insensitive match of \u0026quot;Foo\u0026quot;.\n\nHowever, the first step is misleading: from experimentation and reading json.Marshal's\ndocs, the field needs to be tagged `json:\u0026quot;Foo\u0026quot;`, and not just \u0026quot;Foo\u0026quot;.\n\nYou can see this within the json/encode.go's typeFields function, which calls the\nreflect.StructField's Tag.Get(\u0026quot;json\u0026quot;) method followed by json/tags.go's\nparseTag function to extract the field's name and JSON marshaling options.\n\nThus, line 133 of docs/articles/json_and_go.html (rev: 74c5c02910de) should be changed\nto refer to a tag of `json:\u0026quot;Foo\u0026quot;`.\n\nI'll submit a patch that does just that in a moment...\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:22:49Z",
	"created_at": "2012-10-28T08:46:49Z",
	"updated_at": "2016-06-24T22:27:09Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
