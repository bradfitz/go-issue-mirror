{
	"id": 154383848,
	"body": "A more complex but possibly more efficient solution would be for the HTTP stack to keep pulling requests off the socket as they arrive, and pass each request to a separate goroutine to process (HTTP pipelining is only allowed for idempotent or otherwise orthogonal requests).\r\n\r\nThe tricky bit here is ensuring that the responses generated by each of those goroutines are written to the wire in the order of their responses (which is probably just extending the implementation of `http.ResponseWriter` to buffer the local response until the previous writer has written to the wire.\r\n\r\nThis model will spot all (visible) socket disconnects quickly and also allows the server to parallelize the work for pipelined requests which is the intended benefit of pipelining but I can see your argument that pipelining is being replaced by SPDY/HTTP 2.0 so this might be too involved a change for little gain...",
	"user": {
		"login": "bossmc",
		"id": 1073983,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-06T11:15:48Z",
	"updated_at": "2015-11-06T11:15:48Z"
}
