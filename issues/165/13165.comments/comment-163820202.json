{
	"id": 163820202,
	"body": "Surely any request with an infinite response is an issue, pipelining or not?  The HTTP specs are pretty clear about the ordered serialization of pipelined responses so any client that uses pipelining has to be ready to accept that all requests after a slow request will be delayed too and deal with that.\r\n\r\nIt sounds like your proposal is to not support pipelining and `CloseNotifier` at the same time, am I understanding correctly?  I think this amounts to no longer supporting pipelining since the end of the pipeline is signalled by the client by terminating the connection (which the server now won't be able to detect).\r\n\r\nYou mention that this won't affect browsers because \"it doesn't work on the internet\", but it's used extensively by mobile browsers today (http://www.guypo.com/http-pipelining-big-in-mobile/) to cut down on page load times by eliminating high-latency round trips.  Also, HTTP is being used more and more for non-internet things (RESTful management APIs, monitoring, message busses) where pipelining is a useful tool for allowing higher throughput of requests in controlled environments (maybe here people should be switching to HTTP/2.0 but not everyone will move over immediately).  Removing pipelining support from go feels like a shame.",
	"user": {
		"login": "bossmc",
		"id": 1073983,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-11T02:52:37Z",
	"updated_at": "2015-12-11T02:52:37Z"
}
