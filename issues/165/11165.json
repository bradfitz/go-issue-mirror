{
	"id": 87406548,
	"number": 11165,
	"state": "closed",
	"title": "cmd/go: argument \"-tags\" doesn't trigger rebuild even if tags are different from last build",
	"body": "So if you setup a project that has some file that use `-tags`\r\n argument. reinstalling/building will not trigger a rebuild of the library even if the `-tags` provided are different from the last build\r\nto reproduce:\r\ndefine 2 files in a package, each one with a function that returns a different value\r\neg.\r\n```\r\n// +build alice\r\n\r\npackage thebug\r\nfunc Bob()bool {return true}\r\n```\r\n```\r\n// +build !alice\r\n\r\npackage thebug\r\nfunc Bob()bool {return false}\r\n```\r\nthen make some simple main that simply calls this function and prints the result\r\nthen compile the library\r\n`$ go install thebug`//should build with the `!alice` version  \r\n`$ go run main.go    `\r\n`false    `\r\n`$ go install -tags alice thebug    `\r\n`$ go run main.go      `\r\n`false`\r\nnotice that `thebug` was not recompiled (because no files changed) the only workaround i found was to build using the `-a` flag but that's a pain when the library you're compiling import many other library.",
	"user": {
		"login": "hydroflame",
		"id": 2773127,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2015-06-11T17:40:30Z",
	"created_at": "2015-06-11T16:35:31Z",
	"updated_at": "2016-09-23T04:34:03Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
