{
	"id": 54834130,
	"number": 9640,
	"state": "closed",
	"title": "os: File.Truncate reports unhelpful error in Linux.",
	"body": "# What version of Go are you using (go version)?\r\ngo version go1.4 linux/386\r\ngo version go1.4 windows/amd64\r\n# What operating system and processor architecture are you using?\r\nDebian Wheezy, x86\r\nWindows 7, x64\r\n# What did you do?\r\n```go\r\n    filepath := \"/play/p2/test2.txt\"\r\n\tfile, err := os.Open(filepath)\r\n\tif err != nil {\r\n\t\tfmt.Println(\"Error 1\", err)\r\n\t}\r\n\terr = file.Truncate(0)\r\n\tif err != nil {\r\n\t\tfmt.Println(\"Error 2\", err)\r\n\t}\r\n\terr = file.Close()\r\n\tif err != nil {\r\n\t\tfmt.Println(\"Error 3\", err)\r\n\t}\r\n```\r\n# What did you expect to see?\r\n`Error 2 truncate /play/p2/test2.txt: Access is denied`\r\n# What did you see instead?\r\n`Error 2 truncate /play/p2/test2.txt: invalid argument`\r\n\r\nExecuting Truncate(int) rightfully results in an error because os.Open() yields a read-only file handle.\r\nHowever, in windows this error is helpful (the \"expect to see\" above), while in linux it is not helpful (the \"see instead\" above)",
	"user": {
		"login": "Zilog8",
		"id": 218071,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2015-01-20T03:45:46Z",
	"created_at": "2015-01-20T01:46:33Z",
	"updated_at": "2016-06-25T01:58:56Z"
}
