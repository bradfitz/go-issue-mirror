{
	"id": 150540344,
	"number": 15419,
	"state": "open",
	"title": "net: support \"ndots:\" of 0 in resolv.conf?",
	"body": "I saw the source code of net/dnsconfig_unix.go line 84:\r\n```\r\ncase \"options\": // magic options\r\n\t\t\tfor _, s := range f[1:] {\r\n\t\t\t\tswitch {\r\n\t\t\t\tcase hasPrefix(s, \"ndots:\"):\r\n\t\t\t\t\tn, _, _ := dtoi(s, 6)\r\n\t\t\t\t\tif n \u003c 1 {\r\n\t\t\t\t\t\tn = 1\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconf.ndots = n\r\n```\r\nAnd found that if the value of \"ndots:\" less than 1, it will be set to 1. But does this make sense? Why can't it be set to 0?\r\n\r\nThe way how pure Go DNS resolver resolves names caused an error in my program. When I set \"ndots:\" to 0 and resolved \"mysql\", I wanted to resolve \"mysql.\" first, but instead, pure Go DNS resolver resolved \"mysql.searchdomain.\" first. As it happened, the domain name\"mysql.searchdomain.\" was valid in my DNS server, so I got a wrong IP of mysql.\r\n\r\nWhen I set \"GODEBUG=netdns=cgo\" and used the cgo-based resolver, the program worked well. ",
	"user": {
		"login": "ywk253100",
		"id": 5835782,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"created_at": "2016-04-23T10:17:00Z",
	"updated_at": "2016-07-13T17:00:23Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	}
}
