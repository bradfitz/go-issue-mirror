{
	"id": 155212564,
	"body": "Try this.  READBUFFER is the size of the read buffer being requested.  By the way, in your Go example, you should check the error return of ResolveUDPAddr: \":80891\" is not a valid UDP address.\r\n\r\n    #include \u003cerrno.h\u003e\r\n    #include \u003cstdio.h\u003e\r\n    #include \u003cstdlib.h\u003e\r\n    #include \u003cstring.h\u003e\r\n    #include \u003csys/types.h\u003e\r\n    #include \u003csys/socket.h\u003e\r\n    #include \u003cnetinet/in.h\u003e\r\n    \r\n    #define READBUFFER 8388608\r\n    \r\n    static void die(const char *s) {\r\n      fprintf(stderr, \"%s: %s\\n\", s, strerror(errno));\r\n      exit(EXIT_FAILURE);\r\n    }\r\n    \r\n    int main() {\r\n      int s;\r\n      struct sockaddr_in sin;\r\n      int size;\r\n    \r\n      s = socket(AF_INET, SOCK_DGRAM, 0);\r\n      if (s \u003c 0) {\r\n        die(\"socket\");\r\n      }\r\n      memset(\u0026sin, 0, sizeof sin);\r\n      sin.sin_port = htons(8891);\r\n      if (bind(s, (struct sockaddr *)(\u0026sin), sizeof sin) \u003c 0) {\r\n        die(\"bind\");\r\n      }\r\n      size = READBUFFER;\r\n      if (setsockopt(s, SOL_SOCKET, SO_RCVBUF, \u0026size, sizeof size) \u003c 0) {\r\n        die(\"setsockopt\");\r\n      }\r\n      return 0;\r\n    }",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-09T22:01:26Z",
	"updated_at": "2015-11-09T22:02:20Z"
}
