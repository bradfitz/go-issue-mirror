{
	"id": 51287822,
	"number": 8193,
	"state": "closed",
	"title": "all: use IndexByte where appropriate",
	"body": "\u003cpre\u003eIn src/pkg there appear to be many opportunities for use of IndexByte instead of Index.\nIndexByte has performance advantage (thanks to arch-specific optimizations), and does\nnot sacrifice correctness as far as I can see.\n\n$ g '(strings\\.|bytes\\.| )Index\\(' | grep '\u0026quot;.\u0026quot;'\n./crypto/x509/pem_decrypt.go:118: \tidx := strings.Index(dek, \u0026quot;,\u0026quot;)\n./debug/gosym/symtab.go:43: \tif i := strings.Index(s.Name, \u0026quot;.\u0026quot;); i != -1 {\n./debug/gosym/symtab.go:52: \tl := strings.Index(s.Name, \u0026quot;.\u0026quot;)\n./encoding/json/tags.go:18: \tif idx := strings.Index(tag, \u0026quot;,\u0026quot;); idx != -1 {\n./encoding/json/tags.go:34: \t\ti := strings.Index(s, \u0026quot;,\u0026quot;)\n./encoding/xml/typeinfo.go:119: \tif i := strings.Index(tag, \u0026quot; \u0026quot;); i \u0026gt;= 0 {\n./encoding/xml/xml.go:1092: \ti := strings.Index(s, \u0026quot;:\u0026quot;)\n./go/build/build.go:944: \t\ti := strings.Index(line, \u0026quot;:\u0026quot;)\n./go/build/build.go:1095: \tif i := strings.Index(name, \u0026quot;,\u0026quot;); i \u0026gt;= 0 {\n./go/build/build.go:1155: \tif dot := strings.Index(name, \u0026quot;.\u0026quot;); dot != -1 {\n./go/printer/printer.go:529: \tif i := strings.Index(prefix, \u0026quot;*\u0026quot;); i \u0026gt;= 0 {\n./math/big/rat.go:545: \tsep := strings.Index(s, \u0026quot;/\u0026quot;)\n./math/big/rat.go:559: \tsep = strings.Index(s, \u0026quot;.\u0026quot;)\n./mime/mediatype.go:22: \tslash := strings.Index(t, \u0026quot;/\u0026quot;)\n./mime/mediatype.go:102: \ti := strings.Index(v, \u0026quot;;\u0026quot;)\n./mime/mediatype.go:138: \t\tif idx := strings.Index(key, \u0026quot;*\u0026quot;); idx != -1 {\n./net/http/cgi/child.go:43: \t\tif idx := strings.Index(kv, \u0026quot;=\u0026quot;); idx != -1 {\n./net/http/cookie.go:51: \t\tj := strings.Index(parts[0], \u0026quot;=\u0026quot;)\n./net/http/cookie.go:75: \t\t\tif j := strings.Index(attr, \u0026quot;=\u0026quot;); j \u0026gt;= 0 {\n./net/http/cookie.go:199: \t\t\tif j := strings.Index(name, \u0026quot;=\u0026quot;); j \u0026gt;= 0 {\n./net/http/fs.go:479: \t\ti := strings.Index(ra, \u0026quot;-\u0026quot;)\n./net/http/request.go:459: \tdot := strings.Index(vers, \u0026quot;.\u0026quot;)\n./net/http/request.go:523: \ts1 := strings.Index(line, \u0026quot; \u0026quot;)\n./net/http/request.go:524: \ts2 := strings.Index(line[s1+1:], \u0026quot; \u0026quot;)\n./net/http/server.go:1307: \t\t\tif i := strings.Index(urlStr, \u0026quot;?\u0026quot;); i != -1 {\n./net/http/server.go:1547: \t\t\tpath = pattern[strings.Index(pattern, \u0026quot;/\u0026quot;):]\n./net/url/url.go:424: \tif strings.Index(userinfo, \u0026quot;:\u0026quot;) \u0026lt; 0 {\n./net/url/url.go:539: \t\tif i := strings.Index(key, \u0026quot;=\u0026quot;); i \u0026gt;= 0 {\n./os/user/lookup_unix.go:108: \tif i := strings.Index(u.Name, \u0026quot;,\u0026quot;); i \u0026gt;= 0 {\n./path/match.go:46: \t\t\treturn strings.Index(name, \u0026quot;/\u0026quot;) \u0026lt; 0, nil\n./regexp/regexp.go:446: \tif strings.Index(repl, \u0026quot;$\u0026quot;) \u0026gt;= 0 {\n./regexp/regexp.go:770: \t\ti := strings.Index(template, \u0026quot;$\u0026quot;)\n./unicode/maketables.go:623: \tcomment := strings.Index(line, \u0026quot;#\u0026quot;)\n$\u003c/pre\u003e",
	"user": {
		"login": "masiulaniec",
		"id": 550892,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Suggested"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:45:27Z",
	"created_at": "2014-06-12T13:16:06Z",
	"updated_at": "2016-06-25T01:36:20Z"
}
