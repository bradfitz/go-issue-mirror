{
	"id": 239218899,
	"body": "I'm happy to work on adding this (particularly the `s390x` bit).\r\n\r\nI'm interested in what thoughts people have for the API. The three options that occur to me are:\r\n 1. Function taking strings: `cpu.Has(\"ssse3\", \"popcnt\")`\r\n 2. Function taking constants: `cpu.Has(cpu.SSSE3, cpu.POPCNT)`)\r\n 3. Raw bools: `cpu.SSSE3 \u0026\u0026 cpu.POPCNT`)\r\n\r\nI'm not sure if we want to prefix with the CPU type to avoid naming conflicts. If so then perhaps `s/SSSE3/AMD64.SSSE3/`.\r\n\r\nIt might also be nice if the function (or bools) could be inlined and constant folded. In that case I suspect we'd need to limit the number of features to be checked to one per call. This could be useful in scenarios where a feature is optional on say `i386`/`ppc64`, but mandatory on newer versions of the architecture such as `amd64`/`ppc64le`.\r\n\r\nAnother possibility is that we do this in the `runtime/internal/sys` package. Something like `sys.Feature(\"ssse3\")` perhaps? There are variables in `sys` that might be useful to an application as well and could be made part of a public `cpu` package were we to ever go down that route.\r\n\r\nBTW @minux when you say:\r\n\r\n\u003e it will be processor dependent\r\n\r\nDo you mean you want the API to be processor dependent?\r\n\r\n",
	"user": {
		"login": "mundaym",
		"id": 15000766,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-11T16:44:21Z",
	"updated_at": "2016-08-11T16:44:21Z"
}
