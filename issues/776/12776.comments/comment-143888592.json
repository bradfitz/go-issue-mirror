{
	"id": 143888592,
	"body": "mapaccess with two return values will call runtime.mapaccess2\nand its \"fast\" alternatives, they don't actually copy the value\nout, they return an unsafe.Pointer for the value, and as Brad\nmentions, the compiler won't copy the object if it's assigned\nto _.\n\nAdding another map access routine to runtime that only returns\nthe ok value won't save much because once the entry is found,\nit's trivial to return it's address. And not to mention the code\nduplication if we optimize for this case.\n",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-28T22:13:12Z",
	"updated_at": "2015-09-28T22:13:12Z"
}
