{
	"id": 121443947,
	"body": "\u003e Does PE's .o format have a way to put DWARF information into the object?\r\n\u003e What is it?\r\n\r\nI don't know. But we're not talking about some \"general\" PE's .o format. We're using mingw here, so it is about what mingw requires.\r\n\r\nI am certain mingw compiled .o files do contain DWARF information. When we build cgo with hostlink=internal, we get .o files produced by mingw that contain DWARF. I can see C symbols during debugging. But I don't know what the format is.\r\n\r\nI tried to see why we don't generate DWARF symbols, and I didn't get very far. I have applied this change:\r\n```\r\ndiff --git a/src/cmd/link/internal/ld/dwarf.go b/src/cmd/link/internal/ld/dwarf.go\r\nindex b8fb2e6..d276b29 100644\r\n--- a/src/cmd/link/internal/ld/dwarf.go\r\n+++ b/src/cmd/link/internal/ld/dwarf.go\r\n@@ -2087,6 +2087,8 @@ func writedwarfreloc(s *LSym) int64 {\r\n \t\t\ti = Thearch.Elfreloc1(r, int64(r.Off))\r\n \t\t} else if HEADTYPE == obj.Hdarwin {\r\n \t\t\ti = Thearch.Machoreloc1(r, int64(r.Off))\r\n+\t\t} else if HEADTYPE == obj.Hwindows {\r\n+\t\t\t// TODO: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n \t\t} else {\r\n \t\t\ti = -1\r\n \t\t}\r\n@@ -2120,7 +2122,7 @@ func Dwarfemitdebugsections() {\r\n \t\treturn\r\n \t}\r\n \r\n-\tif Linkmode == LinkExternal {\r\n+\tif Linkmode == LinkExternal \u0026\u0026 HEADTYPE != obj.Hwindows {\r\n \t\tif !Iself \u0026\u0026 HEADTYPE != obj.Hdarwin {\r\n \t\t\treturn\r\n \t\t}\r\n```\r\nto restore writing of DWARF sections for when Linkmode == LinkExternal. And I can see Go DWARF info is stored in the exe now:\r\n```\r\nC:\\dev\\src\\foo\u003etype main.go\r\npackage main\r\n\r\nimport \"C\"\r\n\r\nvar alexval = \"alex\"\r\n\r\nfunc alexfunc(s string) string {\r\n        return s\r\n}\r\n\r\nfunc main() {\r\n        println(alexfunc(alexval))\r\n}\r\n\r\nC:\\dev\\src\\foo\u003ego build\r\n\r\nC:\\dev\\src\\foo\u003eobjdump --dwarf foo.exe | find \"alex\"\r\nobjdump: Warning: Corrupt unit length (0x0) found in section .debug_info\r\nobjdump: Warning: Only DWARF 2 and 3 aranges are currently supported.\r\nobjdump: Warning: Only DWARF 2 and 3 pubnames are currently supported\r\n    2292d       main.alexval\r\nobjdump: Warning: Bogus end-of-siblings marker detected at offset 11a6 in .debug_info section\r\nobjdump: Warning: Bogus end-of-siblings marker detected at offset 11a7 in .debug_info section\r\nobjdump: Warning: DIE at offset 11a8 refers to abbreviation number 67 which does not exist\r\nobjdump: Warning: Only DWARF version 2, 3 and 4 line info is currently supported.\r\nobjdump: Warning: Unable to load/parse the .debug_info section, so cannot interpret the .debug_loc section.\r\n\r\nC:\\dev\\src\\foo\u003e\r\n```\r\nBut DWARF info looks corrupted (see objdump warnings). And gdb complains about it too:\r\n```\r\nC:\\dev\\src\\foo\u003egdb foo.exe\r\nGNU gdb (GDB) 7.6.1\r\nCopyright (C) 2013 Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later \u003chttp://gnu.org/licenses/gpl.html\u003e\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\r\nand \"show warranty\" for details.\r\nThis GDB was configured as \"mingw32\".\r\nFor bug reporting instructions, please see:\r\n\u003chttp://www.gnu.org/software/gdb/bugs/\u003e...\r\nReading symbols from C:\\dev\\src\\foo\\foo.exe...Dwarf Error: wrong version in compilation unit header (is 0, should be 2, 3, or 4) [in module C:\\dev\\src\\foo\\foo.exe]\r\n(no debugging symbols found)...done.\r\n(gdb)\r\n```\r\n\r\nI tried reading DWARF info with our debug/dwarf package (similar to TestDWARF in debug/pe), and it does not complain about anything.\r\n\r\nI don't have any great ideas about this. Perhaps next step would be to understand why gdb and objdump complain. So I need to download their source and build them.\r\n\r\nDo you have anything better?\r\n\r\nAlex",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-15T01:13:42Z",
	"updated_at": "2015-07-15T01:13:42Z"
}
