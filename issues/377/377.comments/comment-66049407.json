{
	"id": 66049407,
	"body": "\u003ca id=\"c21\"\u003e\u003c/a\u003eComment 21:\n\n\u003cpre\u003eJames,\n\n\"A block is a sequence of declarations and statements within matching brace brackets.\nBlock = \"{\" { Statement \";\" } \"}\" . In addition to explicit blocks in the source code,\nthere are implicit blocks:\n   1. The universe block encompasses all Go source text.\n   2. Each package has a package block containing all Go source text for that package.\n   3. Each file has a file block containing all Go source text in that file.\n   4. Each if, for, and switch statement is considered to be in its own implicit block.\n   5. Each clause in a switch or select statement acts as an implicit block.\"\n\nBlocks, The Go Programming Language Specification.\n\u003ca href=\"http://golang.org/doc/go_spec.html#Blocks\"\u003ehttp://golang.org/doc/go_spec.html#Blocks\u003c/a\u003e\n\n\"In some contexts such as the initializers for if, for, or switch statements, [short\nvariable declarations] can be used to declare local temporary variables.\"\n\nShort variable declarations, The Go Programming Language Specification.\n\u003ca href=\"http://golang.org/doc/go_spec.html#Short_variable_declarations\"\u003ehttp://golang.org/doc/go_spec.html#Short_variable_declarations\u003c/a\u003e\n\nTherefore, until you can do it automatically in your head, you can simply explicitly\ninsert the implicit blocks. For example,\n\nvar x = \"unum\"\n\nfunc implicit() {\n\tfmt.Println(x) // x = \"unum\"\n\tx := \"one\"\n\tfmt.Println(x) // x = \"one\"\n\tif x, err := 1, (*int)(nil); err == nil {\n\t\tfmt.Println(x) // x = 1\n\t}\n\tfmt.Println(x) // x = \"one\"\n}\n\nfunc explicit() {\n\tfmt.Println(x) // x = \"unum\"\n\t{\n\t\tx := \"one\"\n\t\tfmt.Println(x) // x = \"one\"\n\t\t{\n\t\t\tif x, err := 1, (*int)(nil); err == nil {\n\t\t\t\tfmt.Println(x) // x = 1\n\t\t\t}\n\t\t}\n\t\tfmt.Println(x) // x = \"one\"\n\t}\n}\u003c/pre\u003e",
	"user": {
		"login": "peterGo",
		"id": 4561296,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-12-11T19:20:13Z",
	"updated_at": "2014-12-08T10:04:20Z"
}
