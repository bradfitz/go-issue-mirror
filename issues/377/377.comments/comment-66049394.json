{
	"id": 66049394,
	"body": "\u003ca id=\"c8\"\u003e\u003c/a\u003eComment 8 by **jesse.dailey**:\n\n\u003cpre\u003eThe go spec for short variable declaration specifically addresses redeclaration, and  \nexplicitly states that this should not happen.\n\nFrom the go spec:\n\"a short variable declaration may redeclare variables provided they were originally \ndeclared in the same block with the same type\"\n\nRight now, you can shadow global variables, and redeclare their type.\n\n\"Redeclaration does not introduce a new variable; it just assigns a new value to the \noriginal.\"\n\n\nvar someGlobal = \"foo\";\nfunc someFunc() (int, os.Error) {\n  return 1, nil\n}\n\nfunc TestThree(t *testing.T) {\n  if someGlobal, err := someFunc(); err == nil {\n    // rather than throwing an error, someGlobal will now silently be an int == 1\n  }\n  // now it will be a string == \"foo\" again\n}\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-02-05T17:44:34Z",
	"updated_at": "2014-12-08T10:04:20Z"
}
