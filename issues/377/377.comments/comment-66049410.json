{
	"id": 66049410,
	"body": "\u003ca id=\"c24\"\u003e\u003c/a\u003eComment 24:\n\n\u003cpre\u003eIn fact I think there is a perfect solution in one of the proposals. So, I'll sum up\nwhat I think:\n\n1. Allow arbitrary addressable expressions on the left side of ':='.\n2. Allow no new variables on the left side of ':=' (a matter of consistency in the code,\nsee examples).\n3. Use the following rule to distinguish between a need of \"declare and initialize\" and\n\"reuse\":\n\nIf the LHS looks like an identifier, then the meaning is: \"declare and initialize\".\nTrying to redeclare a variable in the current block that way will issue an error.\nOtherwise LHS must be an addressable expression and the meaning is: \"reuse\". Rule allows\none to use paren expression to trick the compiler into thinking that an identifier is an\naddressable expression.\n\nExamples:\na, err := A()   // 'a' and 'err' are identifiers - declare and initialize\nb, (err) := B() // 'b' - declare and initialize, '(err)' looks like an addressable\nexpression - reuse\n\ntype MyStruct struct {\n    a, b int\n}\n\nvar x MyStruct\nx.a, err := A()   // 'x.a' is an addressable expression - reuse, 'err' is an identifier\n- declare and initialize\nx.b, (err) := B() // 'x.b' and '(err)' are addressable expressions - reuse (special case\nwithout any new variables)\n\nOf course it could be:\nx.b, err = B()    // and that's just a matter of preferrence and consistency\n\nNote: My idea is a bit different from proposal above, the following syntax is invalid: \n(a, b), c := Foo()\n\nThe right way to do this is:\n(a), (b), c := Foo()\n\nYes, it's a bit longer. But keep in mind that the alternative is typing 'var a Type',\n'var b Type'. Using parens is perfectly fine to me for such a complex case.\n\nAlso this approach has one very cool property - it almost doesn't alter syntax (allowing\narbitrary addressable expressions on the left side of ':=' is the only change), only\nspecial semantic meaning.\u003c/pre\u003e",
	"user": {
		"login": "nsf",
		"id": 12567,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-04-06T18:02:16Z",
	"updated_at": "2014-12-08T10:04:20Z"
}
