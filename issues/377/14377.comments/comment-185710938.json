{
	"id": 185710938,
	"body": "We had a similar issue with one of our sorts where comparison was not deterministic (we used random as a tiebreaker). It makes sense that it should be, but it might be a good idea to either document it or produce a more explicit error message.\r\n\r\nExample that \"works\" in go 1.5 but crashes in 1.6:\r\n\r\n\tpackage main\r\n\r\n\timport (\r\n\t\t\"math/rand\"\r\n\t\t\"sort\"\r\n\t)\r\n\r\n\ttype Test struct{}\r\n\r\n\ttype TestSort []*Test\r\n\r\n\tfunc (v TestSort) Len() int {\r\n\t\treturn len(v)\r\n\t}\r\n\tfunc (v TestSort) Swap(i, j int) {\r\n\t\tv[i], v[j] = v[j], v[i]\r\n\t}\r\n\tfunc (v TestSort) Less(i, j int) bool {\r\n\t\treturn rand.Float32() \u003c 0.5\r\n\t}\r\n\r\n\tfunc main() {\r\n\t\tresults := []*Test{}\r\n\t\tfor i := 0; i \u003c 100; i++ {\r\n\t\t\tresults = append(results, \u0026Test{})\r\n\t\t}\r\n\t\tsort.Sort(TestSort(results))\r\n\t}\r\n",
	"user": {
		"login": "hamaxx",
		"id": 474896,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-18T13:07:03Z",
	"updated_at": "2016-02-18T13:07:23Z"
}
