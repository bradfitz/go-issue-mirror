{
	"id": 51282044,
	"number": 4377,
	"state": "closed",
	"title": "Failure to apply the \"underlying type\" assignability rule",
	"body": "\u003cpre\u003epackage main\n\nfunc main() {\n\ttype T string\n\tvar x string\n\tvar y T\n\tx = y\n\ty = x\n\t_, _ = x, y\n}\n\nThis program fails to compile:\n\nprog.go:7: cannot use y (type T) as type string in assignment\nprog.go:8: cannot use x (type string) as type T in assignment\n\nIt succeeds after running s/string/[]string/g.\n\nI was expecting both versions to work due to the rule:\n\n  A value x is assignable to a variable of type T (\u0026quot;x is assignable to T\u0026quot;)\n  if x's type V and T have identical underlying types and at least one\n  of V or T is not a named type.\u0026quot;\n\nAccording to the spec, the types of x and y have identical underlying type\nin both versions of the program, string and []string respectively. I can't find\na justification for the failure of the string version.\n\nThe compiler is 6g at version go1.0.3.\u003c/pre\u003e",
	"user": {
		"login": "masiulaniec",
		"id": 550892,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:23:14Z",
	"created_at": "2012-11-12T19:26:38Z",
	"updated_at": "2016-06-24T22:28:02Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
