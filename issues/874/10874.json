{
	"id": 76858677,
	"number": 10874,
	"state": "closed",
	"title": "runtime/race: sigsegv when using cgo callbacks with the race detector enabled",
	"body": "Only tested on linux/amd64. A simple way to reproduce this is to run the tests in misc/cgo/test \r\nwith the race detector enabled. It should crash as follows:\r\n```\r\n~/go/misc/cgo/test â€¢ GOTRACEBACK=2 go test -v -race\r\nfatal error: unexpected signal during runtime execution\r\n[signal 0xb code=0x1 addr=0x0 pc=0x415885]\r\n\r\nruntime stack:\r\nruntime.throw(0x769db0, 0x2a)\r\n\t/home/matt/go/src/runtime/panic.go:527 +0x96 fp=0x7ffff9f37c10 sp=0x7ffff9f37bf8\r\nruntime.sigpanic()\r\n\t/home/matt/go/src/runtime/sigpanic_unix.go:12 +0x5d fp=0x7ffff9f37c60 sp=0x7ffff9f37c10\r\n\r\ngoroutine 1 [syscall, locked to thread]:\r\nruntime.cgocall_errno(0x4317f0, 0xc20804bef8, 0x0)\r\n\t/home/matt/go/src/runtime/cgocall.go:125 +0xc5 fp=0xc20804bed8 sp=0xc20804beb0\r\n_/home/matt/go/misc/cgo/test._Cfunc_lockOSThreadC()\r\n\t??:0 +0x56 fp=0xc20804bef8 sp=0xc20804bed8\r\n_/home/matt/go/misc/cgo/test.init.1()\r\n\t/home/matt/go/misc/cgo/test/issue3775.go:23 +0x2d fp=0xc20804bf08 sp=0xc20804bef8\r\n_/home/matt/go/misc/cgo/test.init()\r\n\t_/home/matt/go/misc/cgo/test/_test/_obj_test/_cgo_import.go:1 +0x1859 fp=0xc20804bf88 sp=0xc20804bf08\r\nmain.init()\r\n\t_/home/matt/go/misc/cgo/test/_test/_testmain.go:172 +0x9c fp=0xc20804bf98 sp=0xc20804bf88\r\nruntime.main()\r\n\t/home/matt/go/src/runtime/proc.go:100 +0x220 fp=0xc20804bfe0 sp=0xc20804bf98\r\nruntime.goexit()\r\n\t/home/matt/go/src/runtime/asm_amd64.s:1670 +0x1 fp=0xc20804bfe8 sp=0xc20804bfe0\r\n\r\ngoroutine 17 [syscall, locked to thread]:\r\nruntime.goexit()\r\n\t/home/matt/go/src/runtime/asm_amd64.s:1670 +0x1 fp=0xc20803afe8 sp=0xc20803afe0\r\n\r\ngoroutine 2 [runnable]:\r\nruntime.forcegchelper()\r\n\t/home/matt/go/src/runtime/proc.go:144 fp=0xc2080267e0 sp=0xc2080267d8\r\nruntime.goexit()\r\n\t/home/matt/go/src/runtime/asm_amd64.s:1670 +0x1 fp=0xc2080267e8 sp=0xc2080267e0\r\ncreated by runtime.init.4\r\n\t/home/matt/go/src/runtime/proc.go:141 +0x32\r\n\r\ngoroutine 3 [GC sweep wait]:\r\nruntime.gopark(0x78d008, 0x140b740, 0x719b50, 0xd, 0x44df14, 0x1)\r\n\t/home/matt/go/src/runtime/proc.go:185 +0x123 fp=0xc208026f68 sp=0xc208026f38\r\nruntime.goparkunlock(0x140b740, 0x719b50, 0xd, 0x14, 0x1)\r\n\t/home/matt/go/src/runtime/proc.go:191 +0x5b fp=0xc208026fa0 sp=0xc208026f68\r\nruntime.bgsweep(0xc208056000)\r\n\t/home/matt/go/src/runtime/mgcsweep.go:51 +0xba fp=0xc208026fd8 sp=0xc208026fa0\r\nruntime.goexit()\r\n\t/home/matt/go/src/runtime/asm_amd64.s:1670 +0x1 fp=0xc208026fe0 sp=0xc208026fd8\r\ncreated by runtime.gcenable\r\n\t/home/matt/go/src/runtime/mgc.go:171 +0x5a\r\n\r\ngoroutine 4 [runnable]:\r\nruntime.runfinq()\r\n\t/home/matt/go/src/runtime/mfinal.go:140 fp=0xc2080277e0 sp=0xc2080277d8\r\nruntime.goexit()\r\n\t/home/matt/go/src/runtime/asm_amd64.s:1670 +0x1 fp=0xc2080277e8 sp=0xc2080277e0\r\ncreated by runtime.createfing\r\n\t/home/matt/go/src/runtime/mfinal.go:135 +0x67\r\n\r\ngoroutine 5 [runnable]:\r\nos/signal.loop()\r\n\t/home/matt/go/src/os/signal/signal_unix.go:20 fp=0xc208027fe0 sp=0xc208027fd8\r\nruntime.goexit()\r\n\t/home/matt/go/src/runtime/asm_amd64.s:1670 +0x1 fp=0xc208027fe8 sp=0xc208027fe0\r\ncreated by os/signal.init.1\r\n\t/home/matt/go/src/os/signal/signal_unix.go:28 +0x4c\r\nexit status 2\r\nFAIL\t_/home/matt/go/misc/cgo/test\t0.008s\r\n```\r\n\r\nThe common thing between the failing test and the issue with my own code seems to be callbacks from cgo into go",
	"user": {
		"login": "Thinkofname",
		"id": 774399,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2015-07-22T20:28:56Z",
	"created_at": "2015-05-15T21:12:37Z",
	"updated_at": "2016-08-05T16:09:40Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
