{
	"id": 110322174,
	"number": 12874,
	"state": "closed",
	"title": "tour: Casting return value in first methods example is inconsistent",
	"body": "Context: https://tour.golang.org/methods/2\r\n\r\nIf one is going to declare one's own type that extends float64 (i.e., MyFloat) and define an absolute value method on it, then one might expect to return a value of the same extended type (i.e., MyFloat not float64). I would change the example as below:\r\n\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"math\"\r\n)\r\n\r\ntype MyFloat float64\r\n\r\nfunc (f MyFloat) Abs() MyFloat { \\\\ Note: return type is same type as \"caller\"\r\n\tif f \u003c 0 {\r\n\t\treturn -f \\\\ Note: no casting to float64\r\n\t}\r\n\treturn f \\\\ Note: no casting to float64\r\n}\r\n\r\nfunc main() {\r\n\tf := MyFloat(-math.Sqrt2)\r\n\tfmt.Println(f.Abs())\r\n}",
	"user": {
		"login": "markcampanelli-wf",
		"id": 14183336,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2015-10-08T00:54:31Z",
	"created_at": "2015-10-07T21:33:37Z",
	"updated_at": "2015-10-08T00:54:40Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
