{
	"id": 249431228,
	"body": "@minux, doesn't seem to be. `cmd/go` is needed by `bootstrap.bash` (for avoidable reasons), but isn't needed by `make.bash`, which the builders use.\r\n\r\nThe cross-compiling builder does this instead of using `bootstrap.bash`:\r\n\r\n```go\r\n        remoteErr, err := kubeBC.Exec(\"/bin/bash\", buildlet.ExecOpts{\r\n                SystemLevel: true,\r\n                Args: []string{\r\n                        \"-c\",\r\n                        \"cd $WORKDIR/go/src \u0026\u0026 \" +\r\n                                \"./make.bash \u0026\u0026 \" +\r\n                                \"cd .. \u0026\u0026 \" +\r\n                                \"mv bin/*_*/* bin \u0026\u0026 \" +\r\n                                \"rmdir bin/*_* \u0026\u0026 \" +\r\n                                \"rm -rf pkg/linux_amd64 pkg/tool/linux_amd64 pkg/bootstrap pkg/obj\",\r\n                },\r\n                Output: st,\r\n                ExtraEnv: []string{\r\n                        \"GOROOT_BOOTSTRAP=/go1.4\",\r\n                        \"CGO_ENABLED=1\",\r\n                        \"CC_FOR_TARGET=arm-linux-gnueabihf-gcc\",\r\n                        \"GOOS=\" + goos,\r\n                        \"GOARCH=\" + goarch,\r\n                        \"GOARM=7\", // harmless if GOARCH != \"arm\"                                                                      \r\n                },\r\n                Debug: true,\r\n        })\r\n```\r\n\r\nAnd I see no reason why the `linux_amd64` host needs `cmd/go`, any networking packages (we should not use the network during the `make.bash` build)`, `cmd/vet`, etc.\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-25T16:28:28Z",
	"updated_at": "2016-09-25T16:28:28Z"
}
