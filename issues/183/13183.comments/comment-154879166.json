{
	"id": 154879166,
	"body": "Is the cost of a level of indirection and not sharing your stack worth all\nof this pain?\n\nOn Sun, Nov 8, 2015 at 3:55 PM, Austin Clements \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e You don't want it to be *solely* the responsibility of the goroutine\n\u003e itself because a common pattern is to have a top-level loop that blocks on\n\u003e a channel and when it receives something, use a bunch of stack, then unwind\n\u003e the stack, then block again. Since it could be blocked for a long time, you\n\u003e either need it to shrink its stack on the way in to the receive (very hard\n\u003e to predict when this is worthwhile) or you need something else to be able\n\u003e to shrink its stack when it has been blocked for a long time, which gets us\n\u003e right back to the problem of stack shrinking racing with a channel receive.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/13183#issuecomment-154870976\u003e.\n\u003e\n",
	"user": {
		"login": "RLH",
		"id": 972447,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-08T22:02:04Z",
	"updated_at": "2015-11-08T22:02:04Z"
}
