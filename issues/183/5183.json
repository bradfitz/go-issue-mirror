{
	"id": 51283245,
	"number": 5183,
	"state": "closed",
	"title": "sync: performance drop with mutex",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n\u003ca href=\"http://play.golang.org/p/9xuV2BXGoK\"\u003ehttp://play.golang.org/p/9xuV2BXGoK\u003c/a\u003e\n\n1. run the example locally a few times\n\nWhat do you see?\n\nChannel lock:\nrtn=2 cpu=1:     769\nrtn=2 cpu=2:     944\nrtn=2 cpu=3:     878\nrtn=2 cpu=8:     784\nrtn=3 cpu=1:     769\nrtn=3 cpu=2:     819\nrtn=3 cpu=3:     814\nrtn=3 cpu=8:     793\n\nMutex:\nrtn=2 cpu=1:     220\nrtn=2 cpu=2:     13061\nrtn=2 cpu=3:     5917\nrtn=2 cpu=8:     788\nrtn=3 cpu=1:     219\nrtn=3 cpu=2:     1019\nrtn=3 cpu=3:     1038\nrtn=3 cpu=8:     1101\n\nQuite often you can see a high performance drop (10x) when using a mutex with GOMAXPROCS\n= 2/3 and 2 goroutines.\n\nWhen using \u0026quot;go test\u0026quot; it seems to happen more consistently\n(\u003ca href=\"http://play.golang.org/p/5BYS-LEAFY)\"\u003ehttp://play.golang.org/p/5BYS-LEAFY)\u003c/a\u003e.\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?  6g\n\nWhich operating system are you using? Windows 7, 64bit\n\nWhich version are you using?  (run 'go version') go version devel +7d736eaa75da Tue Apr\n02 15:08:28 2013 +1100 windows/amd64\n\nPlease provide any additional information below.\n\nI tested it against go1.0.3 and it seems to work fine.\u003c/pre\u003e",
	"user": {
		"login": "egonelbre",
		"id": 192964,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:27:44Z",
	"created_at": "2013-04-02T10:30:24Z",
	"updated_at": "2016-06-24T22:36:55Z"
}
