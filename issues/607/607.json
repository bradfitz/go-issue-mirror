{
	"id": 51276705,
	"number": 607,
	"state": "closed",
	"title": "Documentation for array initialization",
	"body": "by **kenliz@cruzio.com**:\n\n\u003cpre\u003eThe syntax for initializing arrays of arrays is complex enough that it should be\nmentioned, either \nin the language specification, or in Effective Go. It took me some time to discover that\nthe \nfollowing works:\n\n/* this works: */\nvar int_a = [4][4]int {\n    [4]int { 1, 2, 3, 4, },\n    [4]int { 2, 4, 8, 16, },\n    [4]int { 3, 9, 27, 81, },\n    [4]int { 4, 16, 64, 256, },\n}\n/* end works */\n\nWhile the following, which looks reasonable, does not:\n\n/* this does not: */\nvar int_a = [4][4]int {\n\t{ 1, 2, 3, 4, },\n\t{ 2, 4, 8, 16, },\n\t{ 3, 9, 27, 81, },\n\t{ 4, 16, 64, 256, },\n}\n/*  end does not */\n\nI'm submitting this as a documentation bug, although some would argue that it is a\nlanguage \nspecification or implementation bug. Most compilers of typed languages accept something\nlike \nthe second form, since the type information provides enough information to give a\nconsistent \ninterpretation to the lists of values.\n\nWhat steps will reproduce the problem?\n1. Try compiling the above declarations.\n2.\n3.\n\nWhat is the expected output? What do you see instead?\nOnly the first works. The second is not accepted.\n\nWhat is your $GOOS?  $GOARCH?\ndarwin\namd64\n\nWhich revision are you using?  (hg identify)\n00a1813e5bc5 tip\n\nPlease provide any additional information below.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:05:13Z",
	"created_at": "2010-02-16T23:19:00Z",
	"updated_at": "2016-06-24T19:13:47Z"
}
