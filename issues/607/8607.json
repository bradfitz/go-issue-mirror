{
	"id": 51288439,
	"number": 8607,
	"state": "closed",
	"title": "net: wrong sample code in package document",
	"body": "by **xiezhenye**:\n\n\u003cpre\u003esample of net.Conn.Acceptï¼š\n\nln, err := net.Listen(\u0026quot;tcp\u0026quot;, \u0026quot;:8080\u0026quot;)\nif err != nil {\n\t// handle error\n}\nfor {\n\tconn, err := ln.Accept()\n\tif err != nil {\n\t\t// handle error\n\t\tcontinue\n\t}\n\tgo handleConnection(conn)\n}\n\nWhen err that Accept returns is not nil, it must not continue the loop.\nrecoverable err like syscall.EAGAIN, syscall.ECONNABORTED has been handler in Accept,\nand all the err that returned is not recoverable. continue the loop will cause dead loop.\n\nthe sample should be:\n\nln, err := net.Listen(\u0026quot;tcp\u0026quot;, \u0026quot;:8080\u0026quot;)\nif err != nil {\n\t// handle error\n}\nfor {\n\tconn, err := ln.Accept()\n\tif err != nil {\n\t\t// handle error\n\t\tbreak\n\t}\n\tgo handleConnection(conn)\n}\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2014-12-08T10:47:46Z",
	"created_at": "2014-08-28T06:01:18Z",
	"updated_at": "2016-06-25T01:40:18Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
