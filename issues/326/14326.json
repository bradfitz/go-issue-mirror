{
	"id": 133559187,
	"number": 14326,
	"state": "open",
	"title": "language: better type inference in for loops",
	"body": "Hi,\r\n\r\nIn the following code:\r\n\r\n```go\r\npackage main\r\n\r\nfunc main() {\r\n\tx := make([]int64, 1000000)\r\n\tfor i := 0; i \u003c 1000000; i++ {\r\n\t\tx[i] = i\r\n\t}\r\n}\r\n```\r\n\r\nthe compiler doesn't seem to understand how to set type of ` i `, it gives the following error: `: cannot use i (type int) as type int64 in assignment`.\r\n\r\nI know one can do: ` x[i] = int64(i) ` or even better, ` for i := int(0); i \u003c 1000000; i++ ` (the later being a bit better for performance) but in this case I would prefer the Go compiler to optimize this out and not have me manually make the changes needed.\r\n\r\nThank you.",
	"user": {
		"login": "dlsniper",
		"id": 607868,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Go2"
		}
	],
	"comments": 1,
	"created_at": "2016-02-14T17:31:32Z",
	"updated_at": "2016-02-14T17:37:51Z",
	"milestone": {
		"id": 1373555,
		"number": 30,
		"title": "Proposal"
	}
}
