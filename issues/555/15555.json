{
	"id": 153196771,
	"number": 15555,
	"state": "closed",
	"title": "export os/exec prefixSuffixSaver and friends",
	"body": "1. What version of Go are you using (`go version`)?\r\ngo version go1.6 linux/amd64\r\n\r\nThis is not a bug, but a feature request:\r\n\r\nI am using os/exec and really like Output()'s ability to capture STDERR while keeping only the head and tail of it. However, I want to apply this to STDOUT as well, to capture my own number of bytes, and I want to have all this with my own Start() and Wait() calls.\r\n\r\nFor now I have done:\r\n\r\n    cmd := exec.Command(...)\r\n    cmd.Stderr = \u0026prefixSuffixSaver{N: 4096}\r\n    cmd.Stdout = \u0026prefixSuffixSaver{N: 4096}\r\n    cmd.Start()\r\n    ...\r\n    cmd.Wait()\r\n    stdErr := cmd.Stderr.(*prefixSuffixSaver).Bytes()\r\n    stdOut := cmd.Stdout.(*prefixSuffixSaver).Bytes()\r\n\r\nBut since prefixSuffixSaver is not exported, I've had to just copy and paste all that related code in to my own package.\r\n\r\nprefixSuffixSaver is generally useful and non-trivial, so it would be great if this functionally was exposed publicly.\r\n",
	"user": {
		"login": "sb10",
		"id": 507951,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-05-05T14:02:41Z",
	"created_at": "2016-05-05T09:21:50Z",
	"updated_at": "2016-05-05T14:02:42Z"
}
