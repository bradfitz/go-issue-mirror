{
	"id": 166951823,
	"number": 16464,
	"state": "open",
	"title": "go/types, cmd/compile: disagreement on struct field offset on amd64p32",
	"body": "The compiler and go/types disagree about the offset of `y` in\r\n\r\n```go\r\nvar s struct {\r\n\tx *int\r\n\ty []byte\r\n}\r\n```\r\n\r\non amd64p32. I am using sizes `types.StdSizes{WordSize: 4, MaxAlign: 8}`. The compiler says y's offset is 4; go/types says it is 8. I think the compiler is right, insofar as code relying on this runs and works on nacl.\r\n\r\nhttps://play.golang.org/p/VbR2IIeyUt calculates and displays the offsets of x and y via unsafe and via go/types. Since the playground runs amd64p32, you can see the results directly by hitting Run. I also confirmed with nacl/amd64p32 locally.\r\n\r\nFound while working on #11041. I'm happy to look into a fix, but I'd like confirmation first that the correct answer is 4.\r\n\r\ncc @griesemer \r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"created_at": "2016-07-22T01:21:46Z",
	"updated_at": "2016-08-07T15:49:58Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
