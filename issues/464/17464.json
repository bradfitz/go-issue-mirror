{
	"id": 183259291,
	"number": 17464,
	"state": "closed",
	"title": "x/crypto/chacha20poly1305: illegal instruction on AMD E2-1800 APU",
	"body": "### What version of Go are you using (`go version`)?\r\n\r\ngo version go1.7.1 linux/amd64\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/i/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build762679001=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n### What did you do?\r\n\r\nI'm trying to encrypt some data using \"golang.org/x/crypto/chacha20poly1305\". But I receive an illegal instruction error. I have tried disabling the ASM implementation and this makes the error go away. So apparently it fails to detect that my processor does not support the ASM implementation.\r\n\r\nProcessor information:\r\n```\r\nprocessor\t: 0\r\nvendor_id\t: AuthenticAMD\r\ncpu family\t: 20\r\nmodel\t\t: 2\r\nmodel name\t: AMD E2-1800 APU with Radeon(tm) HD Graphics\r\nstepping\t: 0\r\nmicrocode\t: 0x500010d\r\ncpu MHz\t\t: 1360.000\r\ncache size\t: 512 KB\r\nphysical id\t: 0\r\nsiblings\t: 2\r\ncore id\t\t: 0\r\ncpu cores\t: 2\r\napicid\t\t: 0\r\ninitial apicid\t: 0\r\nfpu\t\t: yes\r\nfpu_exception\t: yes\r\ncpuid level\t: 6\r\nwp\t\t: yes\r\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid aperfmperf pni monitor ssse3 cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch ibs skinit wdt arat hw_pstate npt lbrv svm_lock nrip_save pausefilter vmmcall\r\nbogomips\t: 3393.80\r\nTLB size\t: 1024 4K pages\r\nclflush size\t: 64\r\ncache_alignment\t: 64\r\naddress sizes\t: 36 bits physical, 48 bits virtual\r\npower management: ts ttp tm stc 100mhzsteps hwpstate\r\n\r\nprocessor\t: 1\r\nvendor_id\t: AuthenticAMD\r\ncpu family\t: 20\r\nmodel\t\t: 2\r\nmodel name\t: AMD E2-1800 APU with Radeon(tm) HD Graphics\r\nstepping\t: 0\r\nmicrocode\t: 0x500010d\r\ncpu MHz\t\t: 850.000\r\ncache size\t: 512 KB\r\nphysical id\t: 0\r\nsiblings\t: 2\r\ncore id\t\t: 1\r\ncpu cores\t: 2\r\napicid\t\t: 1\r\ninitial apicid\t: 1\r\nfpu\t\t: yes\r\nfpu_exception\t: yes\r\ncpuid level\t: 6\r\nwp\t\t: yes\r\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid aperfmperf pni monitor ssse3 cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch ibs skinit wdt arat hw_pstate npt lbrv svm_lock nrip_save pausefilter vmmcall\r\nbogomips\t: 3393.80\r\nTLB size\t: 1024 4K pages\r\nclflush size\t: 64\r\ncache_alignment\t: 64\r\naddress sizes\t: 36 bits physical, 48 bits virtual\r\npower management: ts ttp tm stc 100mhzsteps hwpstate\r\n```\r\n\r\nExample program:\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"crypto/rand\"\r\n\t\"fmt\"\r\n\r\n\t\"golang.org/x/crypto/chacha20poly1305\"\r\n)\r\n\r\nfunc main() {\r\n\tkey := make([]byte, 32)\r\n\tif _, err := rand.Read(key); err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\te, err := chacha20poly1305.New(key)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\tnonce := make([]byte, e.NonceSize())\r\n\tadata := make([]byte, 10)\r\n\tplaintext := make([]byte, 10)\r\n\tciphertext := e.Seal(nil, nonce, plaintext, adata)\r\n\tfmt.Printf(\"%x\\n\", ciphertext)\r\n}\r\n```\r\n\r\n### What did you expect to see?\r\n\r\nI expected the program to complete without error.\r\n\r\n### What did you see instead?\r\n\r\n```\r\nSIGILL: illegal instruction\r\nPC=0x467793 m=0\r\n\r\ngoroutine 1 [running]:\r\ngolang.org/x/crypto/chacha20poly1305.chacha20Poly1305Seal(0xc42000e360, 0x1a, 0x1a, 0xc420039d20, 0x10, 0x10, 0xc42000a410, 0xa, 0xa, 0xc42000a400, ...)\r\n\t/home/i/go/src/golang.org/x/crypto/chacha20poly1305/chacha20poly1305_amd64.s:1908 +0x1573 fp=0xc420039c80 sp=0xc420039b50\r\ngolang.org/x/crypto/chacha20poly1305.(*chacha20poly1305).seal(0xc42000e340, 0x0, 0x0, 0x0, 0xc42000a3f0, 0xc, 0xc, 0xc42000a410, 0xa, 0xa, ...)\r\n\t/home/i/go/src/golang.org/x/crypto/chacha20poly1305/chacha20poly1305_amd64.go:58 +0x18b fp=0xc420039d80 sp=0xc420039c80\r\ngolang.org/x/crypto/chacha20poly1305.(*chacha20poly1305).Seal(0xc42000e340, 0x0, 0x0, 0x0, 0xc42000a3f0, 0xc, 0xc, 0xc42000a410, 0xa, 0xa, ...)\r\n\t/home/i/go/src/golang.org/x/crypto/chacha20poly1305/chacha20poly1305.go:51 +0xf9 fp=0xc420039e30 sp=0xc420039d80\r\nmain.main()\r\n\t/home/i/sigill/test.go:22 +0x268 fp=0xc420039f48 sp=0xc420039e30\r\nruntime.main()\r\n\t/usr/local/go/src/runtime/proc.go:183 +0x1f4 fp=0xc420039fa0 sp=0xc420039f48\r\nruntime.goexit()\r\n\t/usr/local/go/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc420039fa8 sp=0xc420039fa0\r\n\r\nrax    0x0\r\nrbx    0xa\r\nrcx    0xa\r\nrdx    0x0\r\nrdi    0xc42000e360\r\nrsi    0xc42000a419\r\nrbp    0xc420039b60\r\nrsp    0xc420039b50\r\nr8     0x79168a0100fe71\r\nr9     0xa0\r\nr10    0x35e5ad0c4e2ba2\r\nr11    0x25d70b20504f835\r\nr12    0x2\r\nr13    0x4d7a40\r\nr14    0x1e45a280403f9c4\r\nr15    0xac789027608ba\r\nrip    0x467793\r\nrflags 0x10216\r\ncs     0x33\r\nfs     0x0\r\ngs     0x0\r\n```\r\n",
	"user": {
		"login": "jakobvarmose",
		"id": 6318968,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "agl",
		"id": 21203,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2016-10-17T00:19:51Z",
	"created_at": "2016-10-16T10:11:43Z",
	"updated_at": "2016-10-17T00:19:51Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
