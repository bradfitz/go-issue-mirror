{
	"id": 169052035,
	"body": "Here is the simple reproduction of this to show that it is purely a bash bug:\r\n\r\n```bash\r\n#!/bin/bash\r\nfunction cleanup() {\r\n        r1=$(/bin/echo one)\r\n        r2=$(/bin/echo two)\r\n        echo \u003e\u003e/tmp/logout $r1 '!' $r2\r\n}\r\ntrap cleanup EXIT\r\nsleep 1\r\necho final\r\n```\r\n\r\nPut this in, say, `/tmp/repro` and make it executable, then run `/tmp/repro | false`. What winds up in `/tmp/logout` is the clearly incorrect `one final ! two final`. If you make the echo be to standard error via `1\u003e\u00262`, you actually get an extra `final` written before the actual `echo` output.\r\n\r\nI will see about reporting this to the Bash people.",
	"user": {
		"login": "siebenmann",
		"id": 865382,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-05T16:32:17Z",
	"updated_at": "2016-01-05T16:32:17Z"
}
