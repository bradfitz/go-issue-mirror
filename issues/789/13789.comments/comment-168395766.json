{
	"id": 168395766,
	"body": "I confirm this is a side effect of commit baa928a, although I think the root cause is related to\r\nthe way testcarchive, testcshared and testshared are written.\r\n\r\nThe one failing is testcarchive (sometimes), but because of commit baa928a, \r\ntestcshared and testshared are already running in parallel at that time. When all.bash stops, reporting the failure for testcarchive,  there are still running processes from testcshared and testshared. It is the cleaning mechanism of these test cases which can wipe out the whole repository.\r\n\r\nI can reproduce the problem at will by tweaking dist to skip some tests (in order to accelerate each run), and creating a symbolic link on the repository. The purpose of the link is to keep the directory after the problem happens (i.e. only the link is deleted, instead of the whole directory).\r\n\r\nStill, the investigation is painful. Adding traces or using monitoring tools tend to prevent the race condition to occur. Initially, I suspected the testshared test case, since it contains some scary lines such as:\r\n\r\n    defer os.RemoveAll(gorootInstallDir)\r\n\r\nBut suprinsingly, it happens the repository is deleted by the test.bash script in testcshared.\r\n\r\n    function cleanup() {\r\n    \trm -f libgo.$libext libgo2.$libext libgo4.$libext libgo.h libgo4.h\r\n    \trm -f testp testp2 testp3 testp4\r\n    \trm -rf pkg $(go env GOROOT)/${installdir}\r\n    \tif [ \"$goos\" == \"android\" ]; then\r\n    \t\tadb shell rm -rf $androidpath\r\n    \tfi\r\n    }\r\n    trap cleanup EXIT\r\n\r\nIt appears that, when running concurrently with the other test cases, the go env GOROOT command sometimes returns:\r\n\r\n      /home/vagrant/local/go ok\r\n      instead of\r\n      /home/vagrant/local/go\r\n\r\nThe third rm command is therefore expanded as:\r\n\r\n    rm -rf pkg /home/vagrant/local/go ok/pkg/linux_amd64_testcshared_shared\r\n\r\nwhich results in the repository being wiped out.\r\n\r\nI don't understand why the output of go env is altered, but it really is. I checked this point by replacing the rm by an echo.\r\n\r\nI will prepare a CL to make this test case a bit more robust, at least to avoid the whole repository to be deleted. It does not address the flakiness of testcarchive.\r\n",
	"user": {
		"login": "dspezia",
		"id": 652458,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-02T14:14:30Z",
	"updated_at": "2016-01-02T14:14:52Z"
}
