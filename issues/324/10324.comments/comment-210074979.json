{
	"id": 210074979,
	"body": "To respond to an earlier comment, if we do this it should be byte offset, not Unicode code point offset. There's almost no Go setting where Unicode code point makes sense: byte offsets give you efficient random access into a UTF-8 representation of the source, code point offsets give that up, and neither actually matches characters on the screen (due to complications like combining accents). I do understand that Unicode code point offset makes sense in Java because that's the native string representation and so it would give efficient random access in that setting. But Go should target Go, not Java.",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-14T17:52:06Z",
	"updated_at": "2016-04-14T17:52:06Z"
}
