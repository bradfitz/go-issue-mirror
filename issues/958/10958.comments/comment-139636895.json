{
	"id": 139636895,
	"body": "The load doesn't have to be atomic. The current preemption check in the function prologue isn't atomic.\r\n\r\nOne tricky bit with the compare and branch is that the actual preemption point needs to have no live registers. Presumably, for performance reasons, we want the loop to be able to keep things in registers, so the code we branch to on a preempt has to flush any live registers before the preempt and reload them after the preempt. I don't think this will be particularly hard, but it is something to consider, since it might affect which stage of the compiler is responsible for generating this code.",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-11T19:17:31Z",
	"updated_at": "2015-09-11T19:17:31Z"
}
