{
	"id": 51277163,
	"number": 958,
	"state": "closed",
	"title": "Feature req: Turn unused import/vars to a warning",
	"body": "by **jdnurmi**:\n\n\u003cpre\u003eOften while experimenting or debugging a module, I'll find it necessary (or desirable)\nto import the 'fmt' module to generate some temporary debugging printfs.\n\nAlternatively, I might temporarily comment out a section that is the only user of the\n\u0026quot;os\u0026quot;,'io' or 'http' modules in 'helper' files for debugging.\n\nThis also occurs with variables or types that get commented out in a loop, the most\ncommon occurance is something of the form:\n\nfor k,v := range someMap{\n  doSomething(k)\n  doSomethingElse(v)\n}\n\nThere, commenting out either inner loop line will make the compilation fail since k/v\nwas 'set' but unused.\n\nWhen I do this, go correctly flags that I've imported a module without using it.  I\nappreciate its semantic desire for a clean compile, but there are times when I know in\nadvance \u0026quot;It's coming back in 10 minutes, so shut-up\u0026quot;, and would like to be\nable to (for example) set my debug-build target to include\n--warn-unused{,-import,-variable}.\n\nI realize this is a convenience feature that's counter to the clarity of the language,\nbut especially as I first started learning it, the constant jumping around in the file\nto satisfy the compilers need for \u0026quot;everything in its place, and every place\nused\u0026quot; often became a frustrating irritant.\n\nI would encourage leaving the default as is, I would just like a flag (or  a pointer to\nit in the doco if it already exists) to allow those issues to not inhibit my build.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:06:30Z",
	"created_at": "2010-07-25T23:13:12Z",
	"updated_at": "2016-06-24T19:18:11Z"
}
