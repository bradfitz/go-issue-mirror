{
	"id": 67109585,
	"body": "\u003e what do you think should the Listener's Addr() method return for a listener that listens on multiple addresses?\r\n\r\nI don't have a good answer, and that's the fundamental flaw I was referring to.  Since there's nothing sane for `Addr()` to return, it may be necessary to create a new `MultiListener`, and migrate the prominent documentation and sample code.\r\n\r\n\u003e What should happen if more IPs are added to a hostname?\r\n\r\nPerhaps have a type that stores a resolved AddressSet, and another type that holds the listening sockets, where you can Read the AddressSet (to see which sockets exist) or Write it (to open new sockets and close obsolete ones).  Then sufficiently-crazy users could resolve multiple hostnames, merge the results together, and dynamically update the pool of sockets without interrupting existing listeners.\r\n\r\nBut I don't care strongly about the dynamic stuff; I just think listening on localhost or ::+0.0.0.0 should be easy.\r\n\r\nThe problem is that net.Listen() is easy, popular, and wrong.  The alternative (keeping track of multiple listening sockets, with dual-stack behavior that varies by OS) is so much more involved that people avoid doing the right thing, and IPv6 compatibility suffers as a result.",
	"user": {
		"login": "pmarks-net",
		"id": 4578188,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-16T04:01:21Z",
	"updated_at": "2014-12-16T04:01:21Z"
}
