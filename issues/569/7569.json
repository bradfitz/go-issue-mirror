{
	"id": 51286901,
	"number": 7569,
	"state": "closed",
	"title": "net/http: Transport should always verify we wrote the request",
	"body": "\u003cpre\u003eWhile debugging something else, I noticed:\n\n\u003ca href=\"https://golang.org/issue/7521?c=2\"\u003ehttps://golang.org/issue/7521?c=2\u003c/a\u003e\n\nin transport.go's\n\nfunc (pc *persistConn) roundTrip(req *transportRequest) (resp *Response, err error) {\n\n... we only check the return value of Request.Write in the case where it happens before\nthe server replies. If the server writes half of it, pauses for a moment, and then the\nserver replies with a valid happy response, we respond successfully, even if the write\nsubsequently then fails.\n\nBigger fear: could we then mark a persistConn as idle before it's finished writing and\nenqueue a second write behind it, even if the first one is blocked or will fail?\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:42:04Z",
	"created_at": "2014-03-17T22:59:53Z",
	"updated_at": "2016-06-25T01:30:06Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
