{
	"id": 51287582,
	"number": 8035,
	"state": "closed",
	"title": "go.tools/imports: Case where goimports output isn't gofmt-compatible on first try.",
	"body": "\u003cpre\u003eThis is yet another case where goimports/imports.Process() produces non gofmt-compatible\noutput on first try (it becomes okay after goimports runs a second time, so this bug is\nnot as critical as ones where gofmt/goimports undo each other's changes).\n\n\u003ca href=\"http://play.golang.org/p/yr18m3KyVw\"\u003ehttp://play.golang.org/p/yr18m3KyVw\u003c/a\u003e\n\nPress Format (with goimports) once.\n\nNote that the comments after \u0026quot;fmt\u0026quot; and \u0026quot;go/ast\u0026quot; are not properly\nindented.\n\nThis happens because Go source code is manipulated via text to insert newlines (which\nhappens as a last step, after gofmt-compatible output has already been printed). The 3rd\nparty Go package becomes a separate import group away from the standard \u0026quot;fmt\u0026quot;\nand \u0026quot;go/ast\u0026quot;, but the comments are not spaced properly.\n\nTrying to get gofmt-compatible output by manipulating text is an endless source of bugs\nsimilar to this, a category of bugs that would simply not exist if we had the ability to\nmanipulate(/generate) ASTs in code in a way that's easy and correct. That is something\nI'll probably try to work on next; I think it will be very valuable in the long run and\nit's a prerequisite for creation of new amazing tools that will make our lives better.\u003c/pre\u003e",
	"user": {
		"login": "shurcooL",
		"id": 1924134,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Suggested"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:44:32Z",
	"created_at": "2014-05-20T03:30:10Z",
	"updated_at": "2016-06-25T01:34:42Z"
}
