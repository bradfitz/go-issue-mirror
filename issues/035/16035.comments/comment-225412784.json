{
	"id": 225412784,
	"body": "\u003e My suggestion here is not to use runtime.KeepAlive to control the garbage collector. It's to use it to control when values are live.\r\n\r\nDoes `runtime.KeepAlive(lpSubKey)` also means that address of what `lpSubKey` points to will not change until `runtime.KeepAlive(lpSubKey)` is executed? If yes, then I think runtime.KeepAlive is not a good name for that function. If `runtime.KeepAlive(lpSubKey)` does not tell GC to keep whatever pointed by `lpSubKey` at the same address, then I don't see how calling `runtime.KeepAlive(lpSubKey)` in the example above is helpful - if GC moves the object before regGetValue.Call returns, then regGetValue.Call could be corrupting Go's memory.\r\n\r\n\u003e What do you think of https://golang.org/cl/24030?\r\n\r\nI am trying to understand what runtime.KeepAlive does before I can decide on your CL. Lets continue that conversation here.\r\n\r\nAlex",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-12T06:29:44Z",
	"updated_at": "2016-06-12T06:29:44Z"
}
