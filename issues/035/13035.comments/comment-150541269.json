{
	"id": 150541269,
	"body": "I think what you are seeing is NTFS alternative files streams, you've created a file called test, and in the alternative stream the sting \"testing\" is written.\n\nI think windows explorer doesn't show this properly, but should be able to reopen the same file you created and check for the contents. \n\n\nhttp://blogs.technet.com/b/askcore/archive/2013/03/24/alternate-data-streams-in-ntfs.aspx\n\n\n\u003e On 23 Oct 2015, at 20:43, Benny Ng \u003cnotifications@github.com\u003e wrote:\n\u003e \n\u003e What version of Go are you using (go version)?\n\u003e go version go1.5.1 windows/386\n\u003e \n\u003e What operating system and processor architecture are you using?\n\u003e Windows 7 64-bit\n\u003e \n\u003e What did you do?\n\u003e \n\u003e package main\n\u003e \n\u003e import (\n\u003e     \"log\"\n\u003e     \"os\"\n\u003e )\n\u003e \n\u003e func main() {\n\u003e     f, err := os.Create(\"test:.txt\")\n\u003e     if err != nil {\n\u003e         log.Fatal(err)\n\u003e     }\n\u003e     defer f.Close()\n\u003e     if _, err := f.Write([]byte(\"testing\")); err != nil {\n\u003e         log.Fatal(err)\n\u003e     }\n\u003e }\n\u003e Sorry for not using playground, still got 403 in Hong Kong.\n\u003e \n\u003e What did you expect to see?\n\u003e : is invalid character for file name on Windows. \n\u003e Expected error on os.Create or f.Write.\n\u003e \n\u003e What did you see instead?\n\u003e An empty file named test is created after running the program, without any errors returned.\n\u003e \n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub.\n\u003e \n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-23T10:45:22Z",
	"updated_at": "2015-10-23T10:45:22Z"
}
