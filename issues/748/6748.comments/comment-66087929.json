{
	"id": 66087929,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eI cannot reproduce an ast.ImportSpec with nil Path with your example. Specifically, for:\n\n$ cat x.go\npackage main\n\nimport (\n    \"fmt\n)\n\nvar _ = fmt.Println\n\nfunc main() {\n}\n\nI get a \"correctly\" looking AST given the error:\n\n$ gotype -ast x.go\n     0  *ast.File {\n     1  .  Package: x.go:1:1\n     2  .  Name: *ast.Ident {\n     3  .  .  NamePos: x.go:1:9\n     4  .  .  Name: \"main\"\n     5  .  }\n     6  .  Decls: []ast.Decl (len = 1) {\n     7  .  .  0: *ast.GenDecl {\n     8  .  .  .  TokPos: x.go:3:1\n     9  .  .  .  Tok: import\n    10  .  .  .  Lparen: x.go:3:8\n    11  .  .  .  Specs: []ast.Spec (len = 2) {\n    12  .  .  .  .  0: *ast.ImportSpec {\n    13  .  .  .  .  .  Path: *ast.BasicLit {\n    14  .  .  .  .  .  .  ValuePos: x.go:4:5\n    15  .  .  .  .  .  .  Kind: STRING\n    16  .  .  .  .  .  .  Value: \"\\\"fmt\\n)\"\n    17  .  .  .  .  .  }\n    18  .  .  .  .  .  EndPos: -\n    19  .  .  .  .  }\n    20  .  .  .  .  1: *ast.ImportSpec {\n    21  .  .  .  .  .  Path: *ast.BasicLit {\n    22  .  .  .  .  .  .  ValuePos: x.go:7:1\n    23  .  .  .  .  .  .  Kind: STRING\n    24  .  .  .  .  .  .  Value: \"\"\n    25  .  .  .  .  .  }\n    26  .  .  .  .  .  EndPos: -\n    27  .  .  .  .  }\n    28  .  .  .  }\n    29  .  .  .  Rparen: x.go:10:3\n    30  .  .  }\n    31  .  }\n    32  .  Scope: *ast.Scope {\n    33  .  .  Objects: map[string]*ast.Object (len = 0) {}\n    34  .  }\n    35  .  Imports: []*ast.ImportSpec (len = 2) {\n    36  .  .  0: *(obj @ 12)\n    37  .  .  1: *(obj @ 20)\n    38  .  }\n    39  }\nx.go:4:5: string not terminated\nx.go:7:1: expected 'STRING', found 'var'\nx.go:10:3: expected ')', found 'EOF'\n\nThe AST does contain 2 imports specs (line 12, line 20) due to the error which leads to\na synchronization problem. But both of them have a non-nil Path (line 13, line 21, with\nposition information).\n\nInspecting the parser source (go/parser/parser.go:2136 ff) shows that the only place in\nthe entire parser where an ast.ImportSpec node is created is on line 2164, and that\nImportSpec node always has a non-nil ast.BasicLit (line 2167); i.e., the ImportSpec.Path\ncannot be nil by construction (if constructed with the parser). Finally, the\nparseImportSpec function always returns a non-nil ImportSpec, equally by construction.\n\nIf you can reproduce this, please provide the complete code to reproduce. The error may\nbe elsewhere.\n\nRelated to this (but not causing a problem here) is \u003ca href=\"https://golang.org/issue/7091\"\u003eissue #7091\u003c/a\u003e.\u003c/pre\u003e\n\n\n\n_Status changed to **WaitingForReply**._",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-01-10T00:58:38Z",
	"updated_at": "2014-12-08T10:37:28Z"
}
