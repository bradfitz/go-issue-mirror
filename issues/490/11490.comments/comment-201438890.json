{
	"id": 201438890,
	"body": "I think there are two separate issues:\r\n\r\n1. The behaviour of go's internal `vcs` and the `vcs` in `tools` differ, especially with git. This makes it difficult for the authours of 3rd-party tools to match the behaviour of the go command.\r\n2. The go tool could use an internal copy of `vcs` from `tools` to avoid duplication and future drift issues.\r\n\r\nI think the first issue has a simple solution: update `tools` by applying the relevant changes made to go's internal `vcs`.\r\n\r\nThe second issue may be worth debating. @rsc already indicated that he'd rather not add more complexity to the build. Looking briefly, it doesn't appear too difficult to have the go command use the public API, though some breaking changes would likely have to be made. I am not sure what the policy is for x/tools. Then x/tools/go/vcs could be `bundle`'d into `internal/`. This approach definitely feels pretty kludgey over all. I am also unsure of the long-term vision for breaking out useful functionality from go tools.\r\n\r\nCan we split this issue? I would at least like to see/make headway on the first part, and cannot think of any reasons to object.",
	"user": {
		"login": "lrewega",
		"id": 639066,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-25T19:18:45Z",
	"updated_at": "2016-03-25T19:18:45Z"
}
