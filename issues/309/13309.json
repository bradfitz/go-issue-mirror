{
	"id": 117622772,
	"number": 13309,
	"state": "closed",
	"title": "gccgo, runtime:  Wrong size for malloc of P struct in runtime_allp.",
	"body": "I don't have a specific failure due to this, but was looking at the code for allocation of the P, M, and G structs within proc.c, and it looks to me like the size being used to allocate a P struct for the runtime_allp array is incorrect.  The call to runtime_mallocgc for a new P struct is using the size of a pointer instead of the size of the struct.  The line of code in procresize in libgo/runtime/proc.c looks like this:\r\n\r\n`p = (P*)runtime_mallocgc(sizeof(*p), 0, FlagNoInvokeGC);`\r\n\r\nSince it should be allocating a P struct I think it should be sizeof(P) instead.",
	"user": {
		"login": "laboger",
		"id": 9433228,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2015-11-18T17:39:54Z",
	"created_at": "2015-11-18T16:20:27Z",
	"updated_at": "2015-11-18T17:39:54Z"
}
