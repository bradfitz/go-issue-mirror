{
	"id": 51281600,
	"number": 4072,
	"state": "closed",
	"title": "Calling method shared with a nested struct results in all RAM being used (without exiting)",
	"body": "by **beatgammit**:\n\n\u003cpre\u003e\u003ca href=\"http://play.golang.org/p/Vw4_qB7MBI\"\u003ehttp://play.golang.org/p/Vw4_qB7MBI\u003c/a\u003e\n\nIf you comment out lines 26-28, the problem compiles fine and prints the expected\n\u0026quot;hi world\u0026quot; (from A.Name()).\n\nWhat steps will reproduce the problem?\n1. Compile the code above\n2. Open up top or some other process monitor\n3. Run executable while watching process monitor\n\nWhat is the expected output?\nThe code outputs \u0026quot;hi\u0026quot;, the result from calling B's Name().\nThis expectation is based on effective Go (from\n\u003ca href=\"http://golang.org/doc/effective_go.html#embedding)\"\u003ehttp://golang.org/doc/effective_go.html#embedding)\u003c/a\u003e:\n\u0026quot;First, a field or method X hides any other item X in a more deeply nested part of\nthe type.\u0026quot;\n\nWhat do you see instead?\nThe executable doesn't exit and takes up all available RAM.\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nFedora 16 x86_64\n\nWhich version are you using?  (run 'go version')\ngo1.0.2 (built from source from code.google.com on release branch)\n\nPlease provide any additional information below.\nIf you change the Name() -\u0026gt; Name field, everything works as expected. It seems to be\na problem in the runtime deciding between which function to call.\n\nI tried again using 6g/6l directly, same result.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:21:40Z",
	"created_at": "2012-09-13T00:37:38Z",
	"updated_at": "2016-06-24T22:24:32Z"
}
