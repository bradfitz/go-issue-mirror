{
	"id": 66067354,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eThe RFC and the Go API are at odds here: if r.URL.Path is a single\nstring, then there is no way to represent %2f as different from /,\nsince the path is already decoded.  We can't just leave the %2f,\nbecause /%2f is what you get from decoding /%252f.  Short of making\nthe Path a []string (which would be much less convenient for the vast\nmajority of code), there's no fix.\n\nThankfully, very few apps choose to assign special meaning to path\nelements containing %2f characters (this pretty much only comes up\nduring OAuth).  If your app needs to assign special meaning, the\nserver can reprocess req.RequestURI as it sees fit, and the client can\nissue requests using \u0026url.URL{Opaque: rawURI}.\n\nSee also \u003ca href=\"https://golang.org/issue/2782\"\u003eissue #2782\u003c/a\u003e.\n\nRuss\u003c/pre\u003e\n\n\n\n_Status changed to **Unfortunate**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-05-22T15:37:31Z",
	"updated_at": "2014-12-08T10:19:17Z"
}
