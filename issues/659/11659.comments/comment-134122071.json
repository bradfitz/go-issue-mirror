{
	"id": 134122071,
	"body": "#### Testing\r\n\r\n\u003e On the testing front, I think it is valuable to know that your dependencies' tests pass. @adg \r\n\r\nAgreed. Since I began using GO15VENDOREXPERIMENT=1, I began noticing failing tests in dependencies I hadn't checked before. It's something I should either look into or reevaluate which dependencies I'm using.\r\n\r\nMind you, it could still be possible to test vendor/ dependencies independently of `go test ./...`. Though in the little testing I did with a hypothetical `_vendor` folder, I did run into various issues.\r\n\r\n\u003e I think copying over each package as needed by the vendor tool is where the analysis work needs to be. @kardianos \r\n\r\nThis makes a lot of sense to me. If you want to vendor _test.go files, it may be necessary to vendor their assertion and test packages as well (like go get -t). If not, just delete the _test files or have the vendor tool provide that option.\r\n\r\n#### Installation\r\n\r\nThe original issue is with regards to installation, not testing. Using ./... with go install may be asking for trouble, but I do find it useful:\r\n\r\n```\r\ncd x/tools\r\ngo install cmd/...\r\n```\r\n\r\nI guess the @kardianos approach is to have the vendor tool or person vendoring a library be aware of main packages and not copy them if not needed. \r\n\r\n#### Deciding to use vendored tests and main packages\r\n\r\nSo which is better:\r\n\r\n* Making the decision once when vendoring files as to which files (tests/cmds) are included?\r\n* Deferring the decision to every test/install command (whatever the default may be)?",
	"user": {
		"login": "nathany",
		"id": 4566,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-24T09:55:56Z",
	"updated_at": "2015-08-24T09:55:56Z"
}
