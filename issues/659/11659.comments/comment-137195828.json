{
	"id": 137195828,
	"body": "I've been dealing with the repercussions of the vendoring experiment for a few weeks now.  I like having fine-grained control over my dependencies, and it’s awesome to be able to commit the vendor source along with my project source without having to change all the vendored import paths.\r\n\r\nI think I voice the same concern as most of the non-googlers here, which is that I didn’t expect to have golint, go vet, and go test blow up in my face when I moved everything to the vendor directory.  It’s frustrating to have to contort my workflow to accommodate external code that didn’t previously require it.\r\n\r\nHowever, I wouldn’t have known about many of these problems with the third-party libraries had I not moved them into the vendor directory.  It’s been a pain to get everything to play nice, and I understand that not everyone has the luxury of being able to fix other-people’s-code, but the new methodology incentivizes quality code… which is one reason I believe Go is as successful as it is today.\r\n\r\nIf I compare the two solutions from a long-term perspective, I see two very different outcomes.  Allowing people to ignore bad code results in a complex solution whereby some code is whitelisted, some is blacklisted, the lists require regular maintenance, and you have no guarantee of a minimum level of quality.  The other solution is to develop good code, fork bad code, and take the penalty of due diligence up front.\r\n\r\nI’m not saying either solution is right or wrong, but since this issue is still open for feedback, I’m of the opinion that the short-term pain of broken libraries will eventually subside as the authors feel the pain and/or new authors emerge.  I believe that the long-term result will be a better foundation from which to build future solutions.",
	"user": {
		"login": "wardn",
		"id": 23034,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-02T18:13:55Z",
	"updated_at": "2015-09-02T18:34:13Z"
}
