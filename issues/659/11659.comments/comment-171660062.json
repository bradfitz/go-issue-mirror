{
	"id": 171660062,
	"body": "I have been doing research and setting up a continuous integration \u0026 testing pipeline for Go during most of the day, on different tools, and this is an issue that really bothers me.\r\n\r\nI love Go for it's minimalist and clean approach. In line with that, I use the clean architecture approach (or something close to it) for most of my projects. This means I will usually have four subpackages, with the main package in the root folder. Sometimes, there are some small additional tools in the cmd folder as well. I was under the impression that this is a configuration that most projects use.\r\n\r\nI now have to use a dirty workaround to get CI to build and test properly, all due to the fact that ./.. includes folders in vendor. This is counter-intuitive and not well thought-out at all. Which is contrary to what I've come to expect and appreciate about Go. The default case should not require any workaround.\r\n\r\nThere should be a coherent approach where all go tools exclude vendor when using ./... if the GO15VENDOREXPERIMENT environment variable is set to 1. That would be consistent. As someone mentioned before, you can still do \"cd vendor \u0026\u0026 go test ./...\" if you want to include the subpackages. But you will have to be explicit about it, which is fine since it constitutes a non-default workflow imo.\r\n\r\nIf the go tool deals with vendoring using the environment flag (and by default in Go 1.6), then it should also deal with the resulting consequences and solve them in a coherent way. Let's keep it simple, folks.\r\n\r\nFor now, I'm forced to switch back to godep to keep a clean non-hacky script in my repository.",
	"user": {
		"login": "awishformore",
		"id": 3630494,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-14T14:39:44Z",
	"updated_at": "2016-01-14T14:45:12Z"
}
