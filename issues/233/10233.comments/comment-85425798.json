{
	"id": 85425798,
	"body": "As I see it, growing a bytes.Buffer can only return ErrTooLarge if allocation of the slice failed with a panic, which happens if the allocation in itself is ridiculously large. (http://golang.org/src/runtime/slice.go?s=0:0#L25)\r\n\r\nIf we simply run out of memory, the runtime doesn't just panic, it exits with a fatal error. There's no easy way to recover from an out of memory error, as most ways of recovering from that would require allocating, which you can't, so bytes.Buffer couldn't possibly protect against this, either.",
	"user": {
		"login": "dominikh",
		"id": 39825,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-24T09:48:19Z",
	"updated_at": "2015-03-24T09:48:19Z"
}
