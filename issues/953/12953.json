{
	"id": 111757161,
	"number": 12953,
	"state": "closed",
	"title": "cgo: Nowhere to specify C/C++ source files",
	"body": "1. What version of Go are you using (go version)?\r\n\r\n    go version go1.5 darwin/amd64\r\n\r\n2. What operating system and processor architecture are you using?\r\n\r\n    Darwin PANs-MacBook-Pro.local 15.0.0 Darwin Kernel Version 15.0.0: Wed Aug 26 16:57:32 PDT 2015; root:xnu-3247.1.106~1/RELEASE_X86_64 x86_64\r\n\r\n3. What did you do?\r\n\r\n    Support there's a go project based on **cgo**. Both of the C/C++ code are in the same repo. All c header files are listed in the `include` directory and c source files listed in the `src` directory. An ideal way to place the golang code is put it in a `golibmc` directory:\r\n\r\n\t```\r\n\t.\r\n\t├── golibmc\r\n\t│   └── golibmc.go\r\n\t├── include\r\n\t│   ├── hashkit\r\n\t│   │   └── crc32.h\r\n\t│   └── libmc.h\r\n\t└── src\r\n\t    ├── hashkit\r\n\t    │   └── crc32.c\r\n\t    └── libmc.c\r\n\t```\r\n\r\n4. What did you expect to see?\r\n\r\n\tI expected there was a directive (e.g.: `#cgo SOURCES ../src/*.c ../src/hashkit/*.c`) for me to specify all C/C++ source files need to be compiled. But cgo can only find source files in the same directory where the .go file exists.\r\n\r\n5. What did you see instead?\r\n\r\n\tI cannot find the expected directive mentioned in 4, then I have to re-organize the source tree in a smelly way:\r\n\t\r\n\t```\r\n\t.\r\n\t├── golibmc -\u003e src\r\n\t├── include\r\n\t│   ├── hashkit\r\n\t│   │   └── crc32.h\r\n\t│   └── libmc.h\r\n\t└── src\r\n\t    ├── golibmc.go\r\n\t    ├── hashkit\r\n\t    ├── hashkit_crc32.c\r\n\t    └── libmc.c\r\n\t```\r\n\r\n* * *\r\n\r\nAn example in the wild world is http://github.com/douban/libmc",
	"user": {
		"login": "mckelvin",
		"id": 865677,
		"type": "User",
		"site_admin": false
	},
	"comments": 13,
	"closed_at": "2015-10-16T04:42:41Z",
	"created_at": "2015-10-16T04:29:07Z",
	"updated_at": "2015-10-16T21:13:42Z"
}
