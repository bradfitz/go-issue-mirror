{
	"id": 51284514,
	"number": 5990,
	"state": "closed",
	"title": "variable life scope",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n    \u003ca href=\"http://play.golang.org/p/bopaXuF1NJ\"\u003ehttp://play.golang.org/p/bopaXuF1NJ\u003c/a\u003e\n\nWhat is the expected output?\n    value\n    value\n  in this case, 's' always represent the out scope variable, or\n    key\n  in this case, 's' always represent the inner scope variable\n\nWhat do you see instead?\n    value\n    key\n  this means, in statement 's, ok := m[s]', 's' represent the inner scope variable sometimes and represent the outer scope variable at other times\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n    8g\n\nWhich operating system are you using?\n    windows 7\n\nWhich version are you using?  (run 'go version')\n    go version go1.1.1 windows/386\n\nPlease provide any additional information below.\u003c/pre\u003e",
	"user": {
		"login": "localvar",
		"id": 504447,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 10,
	"closed_at": "2014-12-08T10:32:56Z",
	"created_at": "2013-07-30T09:42:04Z",
	"updated_at": "2016-06-24T22:53:00Z"
}
