{
	"id": 104766854,
	"number": 12480,
	"state": "open",
	"title": "runtime: support linux/arm 64kB page size",
	"body": "Hi,\r\n\r\nI bought last week a Zyxel NAS540 which uses a kernel with 64k pages. Now, after some days of investigating how I can run own software on the NAS (the NAS itself is open for access from outside), I found out that\r\n\r\n* it was really a bad idea setting kernel size from 4k to 64k because it breaks the compatibility with many many many ready build software packages\r\n* it wasn't a manufacture / device specific problem. There are some other manufactures (maybe they all using a kernel provided by the board manufacture), WD for example, having the same issue with newer firmware versions.\r\n\r\nIt would nice, if Go would be supplemented with a build for ARM/64k. Another discussion related to that topic in context with the software syncthing could also found here: https://github.com/syncthing/syncthing/issues/928\r\n\r\nI compiled syncthing like here https://forum.syncthing.net/t/request-for-64k-binaries/5555/9 described but when I start syncthing, I got errors like that and I think its a 64k problem:\r\n\r\n    [VUFJZ] 19:21:35 INFO: syncthing unknown-dev \"Beryllium Bedbug\" (go1.5 linux-arm default) unknown@unknown 1970-01-01 00:00:00 UTC\r\n    [VUFJZ] 19:21:35 INFO: My ID: VUFJZWO-S5JJRJO-TFQVE5M-5HDXDDV-NIBS3L2-KNTU2G3-HRV77Q2-LR3XXXX\r\n    [VUFJZ] 19:21:35 INFO: Database block cache capacity 8192 KiB\r\n    ...\r\n    Panic at 2015-09-03T19:21:35Z\r\n    fatal error: runtime: cannot map pages in arena address space\r\n    \r\n    runtime stack:\r\n    runtime.throw(0x6591c0, 0x30)\r\n            /usr/lib64/go/src/runtime/panic.go:527 +0x78\r\n    runtime.sysMap(0xb01000, 0x1000, 0x11200001, 0x9be1a8)\r\n            /usr/lib64/go/src/runtime/mem_linux.go:157 +0x180\r\n    runtime.mHeap_MapSpans(0x9abf08, 0x11600000)\r\n            /usr/lib64/go/src/runtime/mheap.go:314 +0xc8\r\n    runtime.mHeap_SysAlloc(0x9abf08, 0x400000, 0x10d15f20)\r\n            /usr/lib64/go/src/runtime/malloc.go:425 +0x198\r\n    runtime.mHeap_Grow(0x9abf08, 0x200, 0x0)\r\n            /usr/lib64/go/src/runtime/mheap.go:628 +0x68\r\n    runtime.mHeap_AllocSpanLocked(0x9abf08, 0x200, 0x0)\r\n            /usr/lib64/go/src/runtime/mheap.go:532 +0x6c8\r\n    runtime.mHeap_Alloc_m(0x9abf08, 0x200, 0x0, 0xa7801, 0x67924)\r\n            /usr/lib64/go/src/runtime/mheap.go:425 +0x23c\r\n    runtime.mHeap_Alloc.func1()\r\n            /usr/lib64/go/src/runtime/mheap.go:484 +0x40\r\n    runtime.systemstack(0x10d15f70)\r\n            /usr/lib64/go/src/runtime/asm_arm.s:256 +0xa8\r\n    runtime.mHeap_Alloc(0x9abf08, 0x200, 0x0, 0x10c10101, 0x10ba07ff)\r\n            /usr/lib64/go/src/runtime/mheap.go:485 +0x58\r\n    runtime.largeAlloc(0x400000, 0x1, 0x10c0b5a0)\r\n            /usr/lib64/go/src/runtime/malloc.go:745 +0xb4\r\n    runtime.mallocgc.func3()\r\n            /usr/lib64/go/src/runtime/malloc.go:634 +0x34\r\n    runtime.systemstack(0x10c19400)\r\n            /usr/lib64/go/src/runtime/asm_arm.s:242 +0x80\r\n    runtime.mstart()\r\n            /usr/lib64/go/src/runtime/proc1.go:674\r\n    \r\n    goroutine 1 [running]:\r\n    runtime.systemstack_switch()\r\n            /usr/lib64/go/src/runtime/asm_arm.s:187 +0x4 fp=0x10d2a594 sp=0x10d2a590\r\n    runtime.mallocgc(0x400000, 0x4ccc60, 0x1, 0x1)\r\n            /usr/lib64/go/src/runtime/malloc.go:635 +0x9e8 fp=0x10d2a600 sp=0x10d2a594\r\n    runtime.newarray(0x4ccc60, 0x400000, 0x10c0b5a4)\r\n            /usr/lib64/go/src/runtime/malloc.go:777 +0xe4 fp=0x10d2a620 sp=0x10d2a600\r\n    runtime.makeslice(0x4c3198, 0x0, 0x0, 0x400000, 0x0, 0x0, 0x0, 0x0)\r\n            /usr/lib64/go/src/runtime/slice.go:32 +0x1d8 fp=0x10d2a648 sp=0x10d2a620\r\n    github.com/syndtr/goleveldb/leveldb/memdb.New(0x31e24c48, 0x10c0b010, 0x400000, 0x10d2a700)\r\n            /usr/lib64/go/contrib/src/github.com/syndtr/goleveldb/leveldb/memdb/memdb.go:466 +0xa8 fp=0x10d2a698 sp=0x10d2a648\r\n    github.com/syndtr/goleveldb/leveldb.(*DB).newMem(0x10da2620, 0x0, 0x0, 0x0, 0x0)\r\n            /usr/lib64/go/contrib/src/github.com/syndtr/goleveldb/leveldb/db_state.go:125 +0x528 fp=0x10d2a710 sp=0x10d2a698\r\n    github.com/syndtr/goleveldb/leveldb.(*DB).recoverJournal(0x10da2620, 0x0, 0x0)\r\n            /usr/lib64/go/contrib/src/github.com/syndtr/goleveldb/leveldb/db.go:609 +0x1130 fp=0x10d2a978 sp=0x10d2a710\r\n    github.com/syndtr/goleveldb/leveldb.openDB(0x10d65420, 0x0, 0x0, 0x0)\r\n            /usr/lib64/go/contrib/src/github.com/syndtr/goleveldb/leveldb/db.go:122 +0x914 fp=0x10d2aa64 sp=0x10d2a978\r\n    github.com/syndtr/goleveldb/leveldb.Open(0x31e249e0, 0x10d9ec80, 0x10d4a8f0, 0x0, 0x0, 0x0)\r\n            /usr/lib64/go/contrib/src/github.com/syndtr/goleveldb/leveldb/db.go:194 +0x16c fp=0x10d2aa8c sp=0x10d2aa64\r\n    github.com/syndtr/goleveldb/leveldb.OpenFile(0x10c16dc0, 0x31, 0x10d4a8f0, 0x0, 0x0, 0x0)\r\n            /usr/lib64/go/contrib/src/github.com/syndtr/goleveldb/leveldb/db.go:216 +0x80 fp=0x10d2aab8 sp=0x10d2aa8c\r\n    main.syncthingMain()\r\n            /public/src/github.com/syncthing/syncthing/cmd/syncthing/main.go:599 +0x1624 fp=0x10d2b850 sp=0x10d2aab8\r\n    main.main()\r\n            /public/src/github.com/syncthing/syncthing/cmd/syncthing/main.go:388 +0x2394 fp=0x10d2bf94 sp=0x10d2b850\r\n    runtime.main()\r\n            /usr/lib64/go/src/runtime/proc.go:111 +0x2b4 fp=0x10d2bfbc sp=0x10d2bf94\r\n    runtime.goexit()\r\n            /usr/lib64/go/src/runtime/asm_arm.s:1036 +0x4 fp=0x10d2bfbc sp=0x10d2bfbc\r\n    \r\n    goroutine 6 [syscall]:\r\n    os/signal.loop()\r\n            /usr/lib64/go/src/os/signal/signal_unix.go:22 +0x14\r\n    created by os/signal.init.1\r\n            /usr/lib64/go/src/os/signal/signal_unix.go:28 +0x30\r\n    \r\n    goroutine 7 [chan receive]:\r\n    main.trackCPUUsage()\r\n            /public/src/github.com/syncthing/syncthing/cmd/syncthing/gui_unix.go:24 +0x108\r\n    created by main.init.3\r\n            /public/src/github.com/syncthing/syncthing/cmd/syncthing/gui_unix.go:17 +0x24\r\n    \r\n    goroutine 8 [select]:\r\n    github.com/thejerf/suture.(*Supervisor).Serve(0x10c7c080)\r\n            /usr/lib64/go/contrib/src/github.com/thejerf/suture/suture.go:432 +0xcec\r\n    created by github.com/thejerf/suture.(*Supervisor).ServeBackground\r\n            /usr/lib64/go/contrib/src/github.com/thejerf/suture/suture.go:394 +0x2c\r\n    \r\n    goroutine 9 [select]:\r\n    github.com/syncthing/syncthing/lib/events.(*Subscription).Poll(0x10c13550, 0xf8475800, 0xd, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\r\n            /usr/lib64/go/contrib/src/github.com/syncthing/syncthing/lib/events/events.go:201 +0x3d4\r\n    github.com/syncthing/syncthing/lib/events.(*BufferedSubscription).pollingLoop(0x10c0e990)\r\n            /usr/lib64/go/contrib/src/github.com/syncthing/syncthing/lib/events/events.go:239 +0x38\r\n    created by github.com/syncthing/syncthing/lib/events.NewBufferedSubscription\r\n        /usr/lib64/go/contrib/src/github.com/syncthing/syncthing/lib/events/events.go:233 +0x268\r\n    \r\n    goroutine 10 [select]:\r\n        github.com/syndtr/goleveldb/leveldb/util.(*BufferPool).drain(0x10d4aa50)\r\n            /usr/lib64/go/contrib/src/github.com/syndtr/goleveldb/leveldb/util/buffer_pool.go:206 +0x260\r\n    created by github.com/syndtr/goleveldb/leveldb/util.NewBufferPool\r\n            /usr/lib64/go/contrib/src/github.com/syndtr/goleveldb/leveldb/util/buffer_pool.go:237 +0x258",
	"user": {
		"login": "prodigy7",
		"id": 234884,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"created_at": "2015-09-03T19:38:18Z",
	"updated_at": "2016-07-19T20:22:20Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
