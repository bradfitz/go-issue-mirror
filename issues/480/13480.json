{
	"id": 120369911,
	"number": 13480,
	"state": "closed",
	"title": "cmd/compile: accepts invalid comparisons against converted nil",
	"body": "cmd/compile accepts this source:\r\n\r\n    package zero\r\n\r\n    func isZeroSlice(s []byte) bool    { return s == []byte(nil) }\r\n    func isZeroMap(m map[int]int) bool { return m == map[int]int(nil) }\r\n    func isZeroFunc(f func()) bool     { return f == (func())(nil) }\r\n\r\nbut gotype rejects it with:\r\n\r\n    zero.go:3:45: cannot compare s == []byte(nil) (operator == not defined for []byte)\r\n    zero.go:4:45: cannot compare m == map[int]int(nil) (operator == not defined for map[int]int)\r\n    zero.go:5:45: cannot compare f == (func())(nil) (operator == not defined for func())\r\n\r\nThe Go spec says \"However, as a special case, a slice, map, or function value may be compared to the predeclared identifier `nil`.\" which seems to support gotype's behavior.",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2015-12-05T05:47:06Z",
	"created_at": "2015-12-04T10:03:31Z",
	"updated_at": "2015-12-05T05:47:06Z"
}
