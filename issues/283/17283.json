{
	"id": 180102843,
	"number": 17283,
	"state": "open",
	"title": "cmd/compile: misleading error when reflect type names clash",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### What version of Go are you using (`go version`)?\r\n\r\n```\r\ngo version devel +456a01a Wed Sep 28 16:20:41 2016 +0000 linux/amd64\r\n```\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/mvdan/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/home/mvdan/tip\"\r\nGOTOOLDIR=\"/home/mvdan/tip/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build526272435=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n### What did you do?\r\n\r\nRun https://github.com/mvdan/reflect-names (play.golang.org does not do since I need multiple packages to trigger this).\r\n\r\n### What did you expect to see?\r\n\r\nAn error message that made me understand what was wrong.\r\n\r\n### What did you see instead?\r\n\r\n```\r\npanic: interface conversion: interface is foo.Bar, not foo.Bar\r\n```\r\n\r\nThe first solution that comes to mind is that if the two names clash, the full import path should be included. For example:\r\n\r\n```\r\npanic: interface conversion: interface is github.com/mvdan/reflect-names/p1/foo.Bar, not github.com/mvdan/reflect-names/p2/foo.Bar\r\n```",
	"user": {
		"login": "mvdan",
		"id": 3576549,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		}
	],
	"comments": 1,
	"created_at": "2016-09-29T16:45:32Z",
	"updated_at": "2016-10-03T18:35:58Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
