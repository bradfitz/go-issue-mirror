{
	"id": 247005954,
	"body": "FWIW a (arguably pretty naive)\r\n\r\n    curl https://api.godoc.org/packages | jq '.results[].path' | grep '/src/' | wc -l\r\n\r\nturns up 4184 import paths currently on godoc.org that would not work with this proposal and might lead to surprising results if GOPATH ever is accidentally not set (whereas now, if it is not set, there will just be a safe error). They include a lot of vendored stuff and projects that use a custom GOPATH (and might thus even, individually, benefit from this) but I'd still find it surprising if a go get suddenly deposits stuff deeply below my $GOPATH (just because I happened to accidentally run a shell without GOPATH set explicitly).\r\n\r\nJust as a different variant: There are system-specific environment variables that tell you where to put data or configs and the most correct solution under a modern linux might be to use something like `$XDG_DATA_DIR/go`. Not that I'm claiming that this is a good idea.\r\n\r\nPersonally, I think all of the things proposed here can lead to unwanted side-effects, if $GOPATH is not set, be that because it wasn't set yet, or because of an accidental non-login-shell or something at some point in time. Thus I'm in favor of either not changing the current behavior or to default to a predictable directory (and of those I'd use $HOME, but I'm openly biased as that's my current setup).\r\n\r\nAlso, in response to people suggesting using a subdirectory of $GOROOT, or (like python) _prefix_/whatever: This will disallow using a distribution-provided go installation with go get, as $GOROOT there is most often not user-writable.",
	"user": {
		"login": "Merovius",
		"id": 720787,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 2,
		"+1": 2
	},
	"created_at": "2016-09-14T13:04:17Z",
	"updated_at": "2016-09-14T13:04:17Z"
}
