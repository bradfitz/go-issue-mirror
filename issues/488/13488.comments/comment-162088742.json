{
	"id": 162088742,
	"body": "This is the first I've heard of anybody caring about this. That's a pretty delicate API.\r\n\r\nAs background, we just basically kinda have no place to put this info:\r\nhttp://play.golang.org/p/4RZwHtWKuV\r\n\r\n```go\r\n\tu, err := url.Parse(\"http://example.com/foo\")\r\n\tfmt.Printf(\"%#v, %v\\n\", u, err)\r\n\r\n\tu, err = url.Parse(\"http://example.com/foo?\")\r\n\tfmt.Printf(\"%#v, %v\\n\", u, err)\r\n\r\n\tu, err = url.Parse(\"http://example.com/foo?a=b\")\r\n\tfmt.Printf(\"%#v, %v\\n\", u, err)\r\n```\r\n\r\nCurrently says:\r\n```\r\n\u0026url.URL{Scheme:\"http\", Opaque:\"\", User:(*url.Userinfo)(nil), Host:\"example.com\", Path:\"/foo\", RawPath:\"\", RawQuery:\"\", Fragment:\"\"}, \u003cnil\u003e\r\n\u0026url.URL{Scheme:\"http\", Opaque:\"\", User:(*url.Userinfo)(nil), Host:\"example.com\", Path:\"/foo\", RawPath:\"\", RawQuery:\"\", Fragment:\"\"}, \u003cnil\u003e\r\n\u0026url.URL{Scheme:\"http\", Opaque:\"\", User:(*url.Userinfo)(nil), Host:\"example.com\", Path:\"/foo\", RawPath:\"\", RawQuery:\"a=b\", Fragment:\"\"}, \u003cnil\u003e\r\n```\r\n\r\nI suppose we could special-case this with RawPath or Opaque, but I'd kinda rather not.\r\n\r\n/cc @rsc for opinions.\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-04T21:37:34Z",
	"updated_at": "2015-12-04T21:37:34Z"
}
