{
	"id": 150399759,
	"body": "It's rare that people use container/list. Most programmers opt for just\nusing slices instead.\nI think the combination of container/list and templates is an order of\nmagnitude rarer.\nIt doesn't seem like something worth creating a special-case for.\n\nOn 23 October 2015 at 11:59, Sawood Alam \u003cnotifications@github.com\u003e wrote:\n\n\u003e You mention the List data structure, but there is no such data structure\n\u003e in Go.\n\u003e\n\u003e I am referring to the built-in implementation of the doubly linked list\n\u003e \u003chttps://golang.org/pkg/container/list/\u003e package. I think the template\n\u003e system will automatically start supporting it (unless there is hardcoded\n\u003e restriction to certain data structures) if the required iterator\n\u003e functionality is added to the List implementation.\n\u003e\n\u003e I am not much aware of the Go internals as I am new to this language, but\n\u003e I am thinking along the lines of how Sorting functionality is added to any\n\u003e arbitrary struct by attaching the necessary interface to it.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/13027#issuecomment-150397857\u003e.\n\u003e\n",
	"user": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-23T01:16:20Z",
	"updated_at": "2015-10-23T01:16:20Z"
}
