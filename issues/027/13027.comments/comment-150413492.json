{
	"id": 150413492,
	"body": "\u003e as long as a data type supports a channel, you can iterate over it.\r\n\r\nThanks @griesemer for this tip. I am not a big fan of adding unnecessary shims, especially, when I am fighting for performance and memory footprint over the elegance of the code, but I will keep this in the back of my head for places where this trick might actually be useful.\r\n\r\n\u003e @ibnesayeed your latest suggestions at extending the range clause is out of the question for Go 1.0.\r\n\r\nI think you mean `1.x`, right?\r\n\r\n\u003e But there is no chance that we are going to change how range works in any fundamental way.\r\n\r\nI think calling it a fundamental change depends on how we see it. Looking at the specs, I don't immediately see any grammar clause that will require changes. I do understand that not all the semantics can be described in the EBNF and requires additional plain text to complement it. However, rephrasing the complementary text to extend it and make it more inclusive should not be a problem. The proposal document does talk about compatibility as follows:\r\n\r\n\u003e Programs written for Go version 1.x must continue to compile and work with future versions of Go 1.\r\n\r\nWhich I think will remain valid after this proposed change.",
	"user": {
		"login": "ibnesayeed",
		"id": 65147,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-23T02:16:24Z",
	"updated_at": "2015-10-23T02:17:32Z"
}
