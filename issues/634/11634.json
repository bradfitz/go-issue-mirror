{
	"id": 93927916,
	"number": 11634,
	"state": "open",
	"title": "runtime: display fully-qualified types when strings are equal in unequal type panic",
	"body": "\u003eWhat version of Go are you using (go version)?\r\n\r\ngo version devel +bd45bce Wed Jul 8 01:20:02 2015 +0000 linux/amd64\r\n\r\n\u003eWhat operating system and processor architecture are you using?\r\n\r\nUbuntu 15.04, amd64\r\n\r\n\u003eWhat did you do?\r\n\r\nCreated a test case to see what would happen when vendoring the same package twice in two different repositories.\r\n\r\ngo15vendortest has a copy of vendortedthing under the vendor directory\r\nit also pulls in go15vendortest2 which has its own copy of vendoredthing under the vendor directory\r\n\r\n```\r\nexport GO15VENDOREXPERIMENT=1\r\ngo get github.com/frumious/go15vendortest\r\ngo15vendortest\r\n```\r\n\r\n\u003eWhat did you expect to see?\r\n\r\nA type exception with a way to tell which type came from which package.\r\n\r\n\u003eWhat did you see instead?\r\n\r\npanic: interface conversion: interface is vendoredthing.Data, not vendoredthing.Data\r\n\r\nI know why this is happening because I created it on purpose, but there seems to be no way to display where these types came from.",
	"user": {
		"login": "Frumious",
		"id": 1620064,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"created_at": "2015-07-09T01:28:42Z",
	"updated_at": "2015-11-04T20:22:52Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
