{
	"id": 51279456,
	"number": 2609,
	"state": "closed",
	"title": "runtime: map[float/complex] uses incorrect comparison",
	"body": "\u003cpre\u003epackage main\n\nvar m = make(map[float64]bool)\n\nvar f float64 = 0\n\nfunc main() {\n\tm[f] = true\n\tif f == -f {\n\t\tprintln(\u0026quot;equal\u0026quot;)\n\t} else {\n\t\tprintln(\u0026quot;not equal\u0026quot;)\n\t}\n\tif _, found := m[-f]; found {\n\t\tprintln(\u0026quot;found\u0026quot;)\n\t} else {\n\t\tprintln(\u0026quot;not found\u0026quot;)\n\t}\n}\n\nThis program prints\n\nequal\nnot found\n\nThat is wrong.  If two map key values are ==, then they should have the same value in a\nmap.\n\nThis general problem applies to maps with key types float32, float64, complex64,\ncomplex128.  The current map code winds up comparing values using memcmp, but it has to\nuse the appropriate floating point equality operator.\u003c/pre\u003e",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:13:53Z",
	"created_at": "2011-12-23T00:42:22Z",
	"updated_at": "2016-06-24T21:22:21Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
