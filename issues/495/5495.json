{
	"id": 51283722,
	"number": 5495,
	"state": "closed",
	"title": "cmd/go: go get cannot handle custom repository URLs specified using \".hg\" importpath suffix",
	"body": "by **czapkofan**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. hg init foobar\n2. cd foobar\n3. hg serve --daemon --port 80 --prefix foobar --pid-file ../foobar.pid\n4. cd ..\n5. hg clone -U \u003ca href=\"http://127.0.0.1/foobar\"\u003ehttp://127.0.0.1/foobar\u003c/a\u003e foobar2\n6. go get 127.0.0.1/foobar.hg\n\nWhat is the expected output?\n(no errors during download)\n\nWhat do you see instead?\n# cd .; hg clone -U 127.0.0.1/foobar c:\\gopath\\src\\127.0.0.1\\foobar.hg\nabort: repository 127.0.0.1/foobar not found!\npackage 127.0.0.1/foobar.hg: exit status 255\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n\nWhich operating system are you using?\nWindows 7\n\nWhich version are you using?  (run 'go version')\ngo version go1.1 windows/amd64\n\nPlease provide any additional information below.\nAFAIK, Mercurial requires a schema (http://) in the cloned URL, otherwise it assumes\nthis is a local filesystem path.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 12,
	"closed_at": "2015-03-14T01:13:01Z",
	"created_at": "2013-05-17T13:53:36Z",
	"updated_at": "2016-06-24T22:40:24Z"
}
