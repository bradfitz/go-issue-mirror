{
	"id": 82026841,
	"number": 10977,
	"state": "closed",
	"title": "cmd/compile: incorrect 'has no field or method' error",
	"body": "* What version of Go are you using (go version)?\r\n\r\nThe same problem exists on\r\n```\r\ngo version go1.4.2 linux/amd64\r\ngo version devel +5ee5528 Thu May 28 12:04:35 2015 +0000 linux/amd64\r\n```\r\n* What operating system and processor architecture are you using?\r\n\r\nLinux amd64, ubuntu 14.04\r\n\r\n* What did you do?\r\n\r\n```\r\ngit clone https://gist.github.com/883d01d0274dda5e32d1.git bug\r\ncd bug\r\ngo build\r\n```\r\n\r\n* What did you expect to see?\r\n\r\nNo error\r\n\r\n* What did you see instead?\r\n\r\n```\r\n./e.go:4: TypeType.New undefined (type *Type has no field or method New)\r\n```\r\n\r\nIf you look in [t.go]( https://gist.github.com/ncw/883d01d0274dda5e32d1#file-t-go) you can see that method is defined.\r\n\r\nIf you concatenate [e.go](https://gist.github.com/ncw/883d01d0274dda5e32d1#file-e-go) and `t.go` and compile (remove duplicate package line) then it compiles fine.\r\n\r\n[Here is the Gist](https://gist.github.com/ncw/883d01d0274dda5e32d1)\r\n\r\ne.go\r\n----\r\n\r\n```go\r\npackage foo\r\n \r\nvar (\r\n\tBase = TypeType.New()\r\n\t// To trigger the problem\r\n\t//  * Need Base as argument - it is fine if you substitute with nil\r\n\t//  * Need the x, _ = form of call\r\n\tSomething, _ = NewSomething(Base)\r\n)\r\n \r\nfunc NewSomething(t *Type) (*Type, error) {\r\n\treturn nil, nil\r\n}\r\n```\r\n\r\nt.go\r\n----\r\n\r\n```go\r\npackage foo\r\n \r\ntype Type struct{}\r\n \r\nvar TypeType *Type = \u0026Type{}\r\n \r\nfunc (t *Type) New() *Type {\r\n\treturn \u0026Type{}\r\n}\r\n```",
	"user": {
		"login": "ncw",
		"id": 536803,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2015-06-09T00:25:13Z",
	"created_at": "2015-05-28T16:53:47Z",
	"updated_at": "2016-06-25T02:09:43Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
