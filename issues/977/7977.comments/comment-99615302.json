{
	"id": 99615302,
	"body": "Here is the disassembly for armv7s version of OSAtomicCompareAndSwap64Barrier:\r\n_OSAtomicCompareAndSwap64Barrier:\r\n2f9d4198            b580        push    {r7, lr}\r\n2f9d419a            466f        mov     r7, sp\r\n2f9d419c        f8d79008        ldr.w   r9, [r7, #8]\r\n2f9d41a0        e8d9ce7f        ldrexd  r12, lr, [r9]\r\n2f9d41a4        ea8e0e01        eor.w   lr, lr, r1\r\n2f9d41a8        ea8c0c00        eor.w   r12, r12, r0\r\n2f9d41ac        ea5c0c0e        orrs.w  r12, r12, lr\r\n2f9d41b0            d10f        bne     0x2f9d41d2\r\n2f9d41b2        f3bf8f5a        dmb     ishst\r\n2f9d41b6        e8c9237c        strexd  r12, r2, r3, [r9]\r\n2f9d41ba        f1bc0f00        cmp.w   r12, #0x0\r\n2f9d41be            d00a        beq     0x2f9d41d6\r\n2f9d41c0        e8d9ce7f        ldrexd  r12, lr, [r9]\r\n2f9d41c4        ea8e0e01        eor.w   lr, lr, r1\r\n2f9d41c8        ea8c0c00        eor.w   r12, r12, r0\r\n2f9d41cc        ea5c0c0e        orrs.w  r12, r12, lr\r\n2f9d41d0            d0f1        beq     0x2f9d41b6\r\n2f9d41d2            2000        movs    r0, #0x0\r\n2f9d41d4            bd80        pop     {r7, pc}\r\n2f9d41d6            2001        movs    r0, #0x1\r\n2f9d41d8        f3bf8f5b        dmb     ish\r\n2f9d41dc            bd80        pop     {r7, pc}\r\n2f9d41de            bf00        nop\r\n\r\nI've verified that the arm64 version doesn't have barrier.\r\n\r\nWe can just add DMB instruction to our CAS implementation.\r\n",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-05-06T21:29:36Z",
	"updated_at": "2015-05-07T06:57:00Z"
}
