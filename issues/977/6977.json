{
	"id": 51286011,
	"number": 6977,
	"state": "open",
	"title": "spec: embedding overlapping interfaces should not be an error",
	"body": "\u003cpre\u003eIf you view an interface as a set of constraints on the implementing type, then\ncombining two interfaces (that are not mutually incompatible) such as:\n\n  type I interface { f(); String() string }\n  type J interface { g(); String() string } \n\nhas a natural interpretation that is equivalent to an interface containing the union of\nsuch constraints.  e.g. these should be equivalent:\n\n  type IJ interface { I; J }\n  type IJ interface { f(); g(); String() string }\n\nbut in fact the first is an error: \u0026quot;duplicate method: String\u0026quot;.  This is\nsomewhat surprising.  Is there any reason not to permit this?  The set-union behaviour\nis easy to understand, describe and implement, and it seems useful in practise when you\nhave overlapping interfaces describing different aspects of a type.\n\n(I chose String() string since I've seen many users add this constraint to their\ninterfaces.  It could be any method though.)\u003c/pre\u003e",
	"user": {
		"login": "adonovan",
		"id": 5658175,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "LanguageChange"
		},
		{
			"name": "LongTerm"
		},
		{
			"name": "NeedsFix"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 24,
	"created_at": "2013-12-17T14:49:46Z",
	"updated_at": "2016-10-19T17:55:57Z",
	"milestone": {
		"id": 2038341,
		"number": 47,
		"title": "Go1.9Early"
	},
	"reactions": {
		"total_count": 3,
		"+1": 3
	}
}
