{
	"id": 66048318,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eAs Adam pointed out, constants are untyped.   They are only given\ntypes when used in a context, and then (and only then) the default \ntype is as per the spec:\n\n    If the type is absent and the corresponding expression evaluates to an untyped\n    constant, the type of the declared variable is bool, int, float, or string respectively,   \n    depending on whether the value is a boolean, integer, floating-point, or string \n    constant\n\nIf you need to override this default in a context where the type is\nnot otherwise constrained (for example, putting a value in an interface)\nyou can, as you point out, use a conversion: float64(1).  \n\nGo's untyped constants are an explicit reaction to and avoidance\nof suffixes.  \n\nYou may be surprised to find as you write Go programs that you\ndon't need the suffixes nearly as often as you might fear.\u003c/pre\u003e\n\n_Labels changed: added **language-change**._\n\n_Owner changed to **r...@golang.org**._\n\n_Status changed to **WontFix**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2009-11-14T02:20:45Z",
	"updated_at": "2014-12-08T10:03:28Z"
}
