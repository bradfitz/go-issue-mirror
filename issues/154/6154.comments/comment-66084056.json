{
	"id": 66084056,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eFirst I want to note that unfortunately this technique of calling directly between C and\nGo is fragile.  With the current gccgo it is only safe if the C code never, ever,\nblocks, and if the call back from C to Go is always and only done from C code that is\ncalled by Go code.  You can use cgo or SWIG to safely call between C and Go.\n\nSecond, you're right.  The representation of Go function values changed, and that means\nthat your code broke.  Sorry about that.  Unfortunately I can't promise that it won't\nbreak again in the future.  To fix it for the current code, change foo_callback_t to\nthis:\n\ntypedef struct {\n  void (*callback)(int, void*);\n} *foo_callback_t;\n\nand the use of the callback to this:\n\n\tif (cb) {\n\t\tcb-\u003ecallback(bar, cb-\u003ecallback);\n\t}\n\nI'm sorry I broke your code, but this interface is not guaranteed, and your code may\nbreak again in the future.\u003c/pre\u003e\n\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-17T19:12:56Z",
	"updated_at": "2014-12-08T10:33:52Z"
}
