{
	"id": 51284757,
	"number": 6154,
	"state": "closed",
	"title": "gccgo: callback from C library causes panic",
	"body": "by **kota85**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. Install the latest gccgo from source\n2. Build the program in the attachment with `make'\n3. Run it: `./foo'\n\nWhat is the expected output?\n    $ ./foo\n    1\n    cb: 1\n    2\n\nWhat do you see instead?\n    $ ./foo\n    1\n    panic: runtime error: invalid memory address or nil pointer dereference\n    [signal 0xb code=0x1 addr=0x1]\n    \n    goroutine 1 [running]:\n    \n    goroutine 3 [runnable]:\n    created by runtime_main\n            ../../../gcc/libgo/runtime/proc.c:520\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\ngccgo\n\nWhich operating system are you using?\nUbuntu Linux 12.04LTS\n\nPlease provide any additional information below.\n\nThe program in the attachment is a minimal example of Go-C library interaction using\ngccgo. The interface exposed by the C library is callback-based: Go calls a C library\nfunction, which then makes a callback to a Go function. This callback to the Go function\nis what stopped working recently, causing a panic.\n\nI bisected the problem to this commit:\n\n$ git bisect visualize\ncommit 8381eda7ff1e5a2874d708573654e64a4efcfb4f\nAuthor: ian \u0026lt;ian@138bc75d-0d04-0410-961f-82ee72b054a4\u0026gt;\nDate:   Tue Jun 18 23:49:49 2013 +0000\n\n    compiler, runtime: Use function descriptors.\n    \n    This changes the representation of a Go value of function type\n    from being a pointer to function code (like a C function\n    pointer) to being a pointer to a struct.  The first field of\n    the struct points to the function code.  The remaining fields,\n    if any, are the addresses of variables referenced in enclosing\n    functions.  For each call to a function, the address of the\n    function descriptor is passed as the last argument.\n    \n    This lets us avoid generating trampolines, and removes the use\n    of writable/executable sections of the heap.\n    \n    \n    git-svn-id: svn+ssh://gcc.gnu.org/svn/gcc/trunk@200181 138bc75d-0d04-0410-961f-82ee72b054a4\n\n\nThe git SHAs come from this gcc git mirror: git://repo.or.cz/official-gcc.git\nThis is the offending commit via git-web:\n\u003ca href=\"http://repo.or.cz/w/official-gcc.git/commit/8381eda7ff1e5a2874d708573654e64a4efcfb4f\"\u003ehttp://repo.or.cz/w/official-gcc.git/commit/8381eda7ff1e5a2874d708573654e64a4efcfb4f\u003c/a\u003e\n\nFull bisect log:\n# bad: [6ece15c06113154a8d4b53881ed11e825ca89326] gcc/  * dwarf2out.c (CHECKSUM_BLOCK):\nNew macro.      (attr_checksum): Hash vector contents instead of pointer.      \n(attr_checksum_ordered): Likewise.\n# good: [bc85f3af1b43674782c9b5bb2240117f293b5530] compiler, libgo: Permit testing\npackage when test imports it circularly.\ngit bisect start 'HEAD' 'bc85f3af1b43674782c9b5bb2240117f293b5530'\n# good: [3cef9c110748f3f7e70965f4dd06d8048a344844]         * caf/libcaf.h\n(_gfortran_caf_critical): Add a prototype.         (_gfortran_caf_end_critical): Same.\ngit bisect good 3cef9c110748f3f7e70965f4dd06d8048a344844\n# bad: [ab4542ebddf28e6b1a332ecd22fd6f84249cf4e9] 2013-06-20  Richard Biener \n\u0026lt;rguenther@suse.de\u0026gt;\ngit bisect bad ab4542ebddf28e6b1a332ecd22fd6f84249cf4e9\n# good: [e4800344f9be29faf5d9a5dd0d4ca88ee4eddfe7] 2013-05-27  Richard Biener \n\u0026lt;rguenther@suse.de\u0026gt;\ngit bisect good e4800344f9be29faf5d9a5dd0d4ca88ee4eddfe7\n# good: [8ee7dc6fa1a663c9eea8043f84951c1e073468ff] gcc/ 2013-06-07  Kyrylo Tkachov \n\u0026lt;kyrylo.tkachov@arm.com\u0026gt;\ngit bisect good 8ee7dc6fa1a663c9eea8043f84951c1e073468ff\n# good: [b8351c16c910ac4fc8404a5164c6d5b5a0b726f1] fortran/     PR fortran/49074       \n* trans-expr.c (gfc_conv_variable): Don't walk the reference chain.     Handle NULL\narray references.         (gfc_conv_procedure_call): Remove code handling NULL array\nreferences.\ngit bisect good b8351c16c910ac4fc8404a5164c6d5b5a0b726f1\n# good: [efb66c8da3bf4104cae286f2429585d009ba0205]      * config/rs6000/rs6000.h (enum\ndata_align): New.        (LOCAL_ALIGNMENT, DATA_ALIGNMENT): Use rs6000_data_alignment.\n(DATA_ABI_ALIGNMENT): Define.   (CONSTANT_ALIGNMENT): Correct comment.  *\nconfig/rs6000/rs6000-protos.h (rs6000_data_alignment): Declare.       *\nconfig/rs6000/rs6000.c (rs6000_data_alignment): New function.\ngit bisect good efb66c8da3bf4104cae286f2429585d009ba0205\n# bad: [3390dcc4bc70a7d24ae6d23077e534ef723733ee] 2013-06-19  Paolo Carlini \n\u0026lt;paolo.carlini@oracle.com\u0026gt;\ngit bisect bad 3390dcc4bc70a7d24ae6d23077e534ef723733ee\n# good: [f28ea9122da9cde4a2fd1447db309bc8c2e8f08c] Correct ChangeLog:         PR\nrtl-optimization/57425         PR rtl-optimization/57569 -       * alias.c\n(write_dependence_p): Add new parameters mem_size, +       * alias.c\n(write_dependence_p): Add new parameters mem_mode,\ngit bisect good f28ea9122da9cde4a2fd1447db309bc8c2e8f08c\n# bad: [510b35b81b935fc5c16ce36a7ce575f698a3ad6f]       * config/fpu-387.h: Use __asm__\nand __volatile__ consistently.  (get_fpu_except_flags): Initialize result.\ngit bisect bad 510b35b81b935fc5c16ce36a7ce575f698a3ad6f\n# good: [2851d736ebf1e8cceebb9106cab69d2c3fdc7624]      PR libstdc++/57641      *\ninclude/std/mutex (timed_mutex, recursive_timed_mutex): Move common   functionality to\nnew __timed_mutex_impl mixin. Overload try_lock_until        to handle conversion\nbetween different clocks. Replace constrained      __try_lock_for_impl overloads with\nconditional increment.     * include/std/shared_mutex (shared_mutex::_Mutex): Use the\nnew mixin.   * testsuite/30_threads/timed_mutex/try_lock_until/57641.cc: New.\ngit bisect good 2851d736ebf1e8cceebb9106cab69d2c3fdc7624\n# bad: [caf122b741fb7d5f01ea4f77974e3daa5755aaeb] Daily bump.\ngit bisect bad caf122b741fb7d5f01ea4f77974e3daa5755aaeb\n# bad: [8381eda7ff1e5a2874d708573654e64a4efcfb4f] compiler, runtime: Use function\ndescriptors.\ngit bisect bad 8381eda7ff1e5a2874d708573654e64a4efcfb4f\n\nPlease take a look -- thanks!\n\n                Emilio.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/6154/0/ccallgoback.tar.bz2\"\u003eccallgoback.tar.bz2\u003c/a\u003e (915 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 7,
	"closed_at": "2014-12-08T10:33:52Z",
	"created_at": "2013-08-15T16:29:12Z",
	"updated_at": "2016-06-24T22:55:18Z"
}
