{
	"id": 51278477,
	"number": 1914,
	"state": "closed",
	"title": "cmd/compile: too many LEAQ/LEAL instructions on amd64, 386",
	"body": "\u003cpre\u003eMore can and should be gotten rid of.\nThey are making the range loop here less\nefficient than the explicit for loop in 8g.\nThere are some lingering in 6g too, but fewer.\n\npackage main\n\nimport (\n\t\u0026quot;fmt\u0026quot;\n\t\u0026quot;testing\u0026quot;\n)\n\nvar siz = 1024 * 1024\nvar buf []byte\n\nfunc init() {\n\tbuf = make([]byte, siz)\n\tfor i := range buf {\n\t\tbuf[i] = byte(i \u0026amp; 0xFF)\n\t}\n}\n\nfunc BenchmarkRange(b *testing.B) {\n\tn := 0\n\tfor i := 0; i \u0026lt; b.N; i++ {\n\t\tfor _, c := range buf {\n\t\t\tif c == 0 {\n\t\t\t\tn++\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunc BenchmarkLoop(b *testing.B) {\n\tn := 0\n\tfor i := 0; i \u0026lt; b.N; i++ {\n\t\tfor j := 0; j \u0026lt; len(buf); j++ {\n\t\t\tif buf[j] == 0 {\n\t\t\t\tn++\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunc main() {\n\tfmt.Println(testing.Benchmark(BenchmarkRange))\n\tfmt.Println(testing.Benchmark(BenchmarkLoop))\n}\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 24,
	"closed_at": "2016-03-10T18:05:19Z",
	"created_at": "2011-06-03T16:54:22Z",
	"updated_at": "2016-03-10T18:18:08Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
