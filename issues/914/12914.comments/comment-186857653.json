{
	"id": 186857653,
	"body": "I'm not quite understanding, why the `time` and `net` package can get access to a monotonic clock, through `runtime` package, but nothing else can. Surely it would be beneficial to allow others to write packages that have similar capabilities to the `time` and `net` standard libraries? It seems the protections of the monotonic clock are currently limited to the standard library and inaccessible to all other libraries.\r\n\r\nI can understand the arguments about clocks should never go backwards but the fact that `time` and `net` is already using monotonic time, in my opinion, means that discussion was had a long time ago and the argument for monotonic time won out. It's unfortunate it's been kept inaccessible to everyone else.\r\n\r\nIs it feasible and would it be acceptable to expose a `runtime.NanoTime`? That name is likely misleading though but it seems reasonable to me. (https://github.com/golang/go/blob/master/src/runtime/time.go#L296)",
	"user": {
		"login": "driskell",
		"id": 939815,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 5,
		"+1": 5
	},
	"created_at": "2016-02-21T16:59:01Z",
	"updated_at": "2016-02-21T16:59:01Z"
}
