{
	"id": 136898057,
	"number": 14542,
	"state": "closed",
	"title": "Defer is not run if another goroutine panics",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo version go1.6 darwin/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\ndarwin/amd64\r\n(also on linux/amd64 and probably others, did not test on Windows)\r\n\r\n3. What did you do?\r\n(Use play.golang.org to provide a runnable example, if possible.)\r\nhttps://play.golang.org/p/KdHIPSSiaX\r\n\r\n4. What did you expect to see?\r\nDefer called\r\n\r\n5. What did you see instead?\r\nnothing\r\n\r\nThis led to a real-life problem where I was running a process via `exec.Command` (which would have been be killed by `defer`), then later another goroutine paniced, `defer` did not run, the service manager restarted the main process and I was stuck with accumulation of infinite number of same programs (that was run via `exec.Command`) running. ( More of context here, if interested, but not necessary http://stackoverflow.com/questions/34095254/panic-in-other-goroutine-not-stopping-child-process  )\r\n\r\n",
	"user": {
		"login": "slava-vishnyakov",
		"id": 817931,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-02-27T08:56:21Z",
	"created_at": "2016-02-27T08:49:38Z",
	"updated_at": "2016-02-27T09:13:41Z"
}
