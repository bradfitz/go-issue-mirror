{
	"id": 51287530,
	"number": 8003,
	"state": "closed",
	"title": "net/http: regression in handling bad Content-Length set by client request",
	"body": "by **kushal.pisavadia@digital.cabinet-office.gov.uk**:\n\n\u003cpre\u003eTested using `go version go1.2.1 linux/amd64` and `go version go1.1.2 linux/amd64`. Also\ntested against `go version devel +f8b50ad4cac4 Mon Apr 21 17:00:27 2014 -0700 +\ndarwin/amd64` and the issue still exists.\n\nWhat steps reproduce the problem?\n\n1. Run `go run backend.go` in a shell\n2. Run `go run server.go` in a separate shell\n3. Run `ruby test_client.rb`\n\nWhat happened?\n\nIn Go 1.2 the HTTP server responds with a 500 Internal Server Error\n\nWhat should have happened instead?\n\nIn both cases it should respond with HTTP/1.1 400 Bad Request because the error string\nwill match `http: Request.ContentLength=\\d+ with Body length \\d+`.\n\nPlease provide any additional information below.\n\nFull output link and code: \u003ca href=\"https://gist.github.com/KushalP/46d2651acae353ee8ee6\"\u003ehttps://gist.github.com/KushalP/46d2651acae353ee8ee6\u003c/a\u003e\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/8003/0/backend.go\"\u003ebackend.go\u003c/a\u003e (225 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/8003/0/server.go\"\u003eserver.go\u003c/a\u003e (1268 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/8003/0/test_client.rb\"\u003etest_client.rb\u003c/a\u003e (757 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 9,
	"closed_at": "2014-12-08T10:44:22Z",
	"created_at": "2014-05-15T13:11:40Z",
	"updated_at": "2016-06-25T01:34:21Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
