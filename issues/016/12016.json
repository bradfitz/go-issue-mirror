{
	"id": 99031178,
	"number": 12016,
	"state": "closed",
	"title": "encoding/binary: Read should document use of io.EOF vs io.ErrUnexpectedEOF",
	"body": "Just like [io.ReadFull](http://golang.org/pkg/io/#ReadFull), [encoding/binary.Read](http://golang.org/pkg/encoding/binary/#Read) will return [io.EOF](http://golang.org/pkg/io/#EOF) if the given reader returns EOF before any bytes are read, but will return [io.ErrUnexpectedEOF](http://golang.org/pkg/io/#ErrUnexpectedEOF) if some (but not all) of the bytes are read before encountering EOF (binary.Read just calls io.ReadFull under the hood). IMO, this behavior should be documented so that a) callers know about it and, b) callers can rely on the behavior not changing in the future (whereas, currently, a change in this behavior wouldn't break the documented API).\r\n\r\n*This concern was originally raised [here](https://groups.google.com/forum/#!topic/golang-nuts/xk6xmgkpqNg) on golang-nuts.*\r\n\r\n* **Version:** 1.4.2\r\n* **OS/Arch:** linux/amd64\r\n",
	"user": {
		"login": "joshlf",
		"id": 1046063,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		}
	],
	"comments": 1,
	"closed_at": "2015-09-30T22:11:03Z",
	"created_at": "2015-08-04T18:33:48Z",
	"updated_at": "2015-09-30T22:11:03Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
