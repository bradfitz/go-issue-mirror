{
	"id": 66053740,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1 by **sam.irvine**:\n\n\u003cpre\u003eAs a side note, an argument can be made that the {.section \u0026lt;field-name\u0026gt;}{@}{.end}\nsyntax should not be used for an int type field coupled with a template;\n{\u0026lt;field-name\u0026gt;} should be used directly.  This probably works for most cases but I\nran into the following situation:\n\nI'm using the same template applied to two different data structures with identical\nfield names.  In particular, for structure A the field is an int and for structure B the\nfield is a pointer to a struct.  The template I'm using looks like:\n\n{.section field}\u0026lt;xmltag\u0026gt;{@}\u0026lt;/xmltag\u0026gt;{.end}\n\nI don't want the xmltag when the pointer is nil, but when it's an int value I want it\nincluded.  However, there could be all types of useful policy choices surrounding\nprimitive values (ex: include when \u0026gt; 0, include when \u0026lt; 10 \u0026\u0026 \u0026gt; 0...).\n\nPerhaps a better way would be to allow the user to specify an \"empty\" function like is\ndone with formatters?  Or perhaps I'm just pushing a little too far beyond the template\nabstractions intended level of flexibility/complexity.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-12-19T22:58:14Z",
	"updated_at": "2014-12-22T05:47:29Z"
}
