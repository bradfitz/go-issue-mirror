{
	"id": 129634339,
	"number": 14144,
	"state": "closed",
	"title": "cmd/dist: ~1GB memory needed for testing, problems on arm (Raspberry Pi 2) ",
	"body": "go version devel +6d61725 Thu Jan 28 21:10:22 2016 +0000 linux/arm\r\n\r\nLinux raspberrypi 4.1.13-v7+ #826 SMP PREEMPT Fri Nov 13 20:19:03 GMT 2015 armv7l GNU/Linux\r\n(default Raspian Jessie, updated)\r\n\r\nWhen compiling and testing (all.bash) this Go version with itself, the 4 core / 1GB Pi 2 almost chokes (\u003e90% iowait, takes a long time).\r\n\r\nThis seems unnecessary, as it is due to parallelism when running \"`go tool dist test...`\" especially in the `go/test` directory. I am seeing 14 x \"go\", 4 x \"compile\" and 4 x \"runtest.exe\" processes executing at the same time.\r\n\r\nGOMAXPROCS setting seems to have no effect due to the code in `cmd/dist/util.go`, which sets `maxbg` to at least 4 even on low memory 4 core systems like the Pi 2. It seems that builds could run much more smoothly with even 512MB if GOMAXPROCS was honored there.\r\n",
	"user": {
		"login": "myannikos",
		"id": 16948299,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-05-20T10:48:02Z",
	"created_at": "2016-01-29T01:19:33Z",
	"updated_at": "2016-05-20T10:48:02Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
