{
	"id": 241039860,
	"body": "Wow, that's a bizarre edge case.\r\n\r\nBut the RFC you cite is deprecated. The replacement seems like it's clarified the rules here:\r\n\r\nhttps://tools.ietf.org/html/rfc7231#section-5.1.1\r\n\r\n\u003e      A server MAY omit sending a 100 (Continue) response if it has\r\n\u003e      already received some or all of the message body for the\r\n\u003e      corresponding request, or if the framing indicates that there is\r\n\u003e      no message body.\r\n\u003e\r\n\u003e      A server that sends a 100 (Continue) response MUST ultimately send\r\n\u003e      a final status code, once the message body is received and\r\n\u003e      processed, unless the connection is closed prematurely.\r\n\u003e\r\n\u003e      A server that responds with a final status code before reading the\r\n\u003e      entire message body SHOULD indicate in that response whether it\r\n\u003e      intends to close the connection or continue reading and discarding\r\n\u003e      the request message (see Section 6.6 of [RFC7230]).\r\n\r\nOn a first skim, I'm not seeing the requirement in RFC 7231.\r\n\r\nA client sending 100-continue for a 0-lengthed body is dumb, too. The documented intent of 100-continue is for clients who are sending large bodies.\r\n\r\nI'm not sure this is worth fixing, or that Go is even out of compliance.\r\n\r\nDo you see otherwise in RFC 7231?\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-19T14:51:24Z",
	"updated_at": "2016-08-19T14:51:24Z"
}
