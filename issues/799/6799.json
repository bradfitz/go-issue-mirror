{
	"id": 51285740,
	"number": 6799,
	"state": "open",
	"title": "cmd/dist: support configurable number of build jobs",
	"body": "\u003cpre\u003eProblem statement:\n\nCurrently cmd/dist uses hard coded defaults for the number of concurrent jobs to execute\nduring the early stages of ./make.bash; up to the point of go_bootstrap taking over.\n\nThis number is 1 on arm machines and 4 everywhere else. For arm specifically this value\nused to be correct 3 years ago but now dual and quad core arm host are available this\nunnecessarily delays an already slow c compilation phase.\n\nThis value can be easily changed after checkout, but as the builders always build from a\nclean tree this is not an option.\n\nIt may also be for large x86 machines the value of 4 parallel jobs is too conservative,\nor to high if operating in a virtualised environment, however this is not the main focus\nof this proposal.\n\nImplementation:\n\nI propose to add a new flag cmd/dist which would override the default value. If not set\nthe current defaults of 4 (or 1 for arm) would apply.\n\nThe proposed name of this flag is -j.\n\nThis flag would also need to be passed through from the builder command via the existing\nGO_DISTFLAGS env var.\n\nBuilder owners can set GO_DISTFLAGS to control the number of parallel jobs during the\nbuild allowing them to improve build times.\n\nOnce the build arrives at go_bootstrap the current behaviour of running runtime.NumCPU()\njobs would take over. This does not change as part of this proposal.\n\nSee also: \u003ca href=\"https://groups.google.com/d/msg/golang-dev/GjhQspYudHk/vNVFsd_49AEJ\"\u003ehttps://groups.google.com/d/msg/golang-dev/GjhQspYudHk/vNVFsd_49AEJ\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"created_at": "2013-11-20T09:11:43Z",
	"updated_at": "2015-04-14T19:45:21Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
