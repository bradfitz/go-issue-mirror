{
	"id": 168366933,
	"body": "## Clues\r\n\r\nIf you move the `var fn func()` declaration to inside the loop, it reliably succeeds.\r\n\r\nIf you add the following before the `if len(m) != maxI {` check, it reliably succeeds.\r\n\r\n```\r\nv := fmt.Sprint(m)\r\n_ = v\r\n```\r\n\r\nAlso, sometimes instead of the usual panic at the end of `func test`, I see this panic:\r\n\r\n```\r\n...\r\n1250\r\n1300\r\nfatal error: concurrent map read and map write\r\n\r\ngoroutine 1 [running]:\r\nruntime.throw(0x118780, 0x21)\r\n\t/usr/local/go/src/runtime/panic.go:530 +0x90 fp=0xc8201c9ae0 sp=0xc8201c9ac8\r\nruntime.mapaccess1_fast64(0xb7e60, 0xc820313d28, 0x1a, 0xfa0000c8201b8048)\r\n\t/usr/local/go/src/runtime/hashmap_fast.go:112 +0x5a fp=0xc8201c9b00 sp=0xc8201c9ae0\r\nmain.test.func1()\r\n\t/Users/sqs/src/sourcegraph.com/sourcegraph/srclib/qqqq.go:28 +0x63 fp=0xc8201c9b98 sp=0xc8201c9b00\r\nmain.test.func1()\r\n\t/Users/sqs/src/sourcegraph.com/sourcegraph/srclib/qqqq.go:31 +0x10f fp=0xc8201c9c30 sp=0xc8201c9b98\r\nmain.test(0x51c)\r\n\t/Users/sqs/src/sourcegraph.com/sourcegraph/srclib/qqqq.go:34 +0x1e3 fp=0xc8201c9ee0 sp=0xc8201c9c30\r\nmain.main()\r\n\t/Users/sqs/src/sourcegraph.com/sourcegraph/srclib/qqqq.go:13 +0x119 fp=0xc8201c9f60 sp=0xc8201c9ee0\r\nruntime.main()\r\n\t/usr/local/go/src/runtime/proc.go:185 +0x2b0 fp=0xc8201c9fb0 sp=0xc8201c9f60\r\nruntime.goexit()\r\n\t/usr/local/go/src/runtime/asm_amd64.s:1998 +0x1 fp=0xc8201c9fb8 sp=0xc8201c9fb0\r\n```\r\n\r\nI have also seen the following panic (less common):\r\n\r\n```\r\nSIGILL: illegal instruction\r\nPC=0x9a2b m=0\r\n\r\ngoroutine 1 [running]:\r\nruntime.mapassign1(0xc0740, 0xc8200bdd88, 0xc8201f7b30, 0xc8201f7b50)\r\n    /usr/local/go/src/runtime/hashmap.go:446 +0x1fb fp=0xc8201f7af0 sp=0xc8201f7a48\r\n```",
	"user": {
		"login": "sqs",
		"id": 1976,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-02T05:43:32Z",
	"updated_at": "2016-01-02T05:43:32Z"
}
