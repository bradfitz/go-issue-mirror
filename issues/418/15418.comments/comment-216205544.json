{
	"id": 216205544,
	"body": "IMO, the docs are correct. Any numbers of goroutines may simultaneously acquire a `RLock` of the same `RWMutex`. What does not work is when the *same* goroutine calls `RLock` on a `RWMutex` when that goroutine already did that without calling `RUnlock` first.\r\n\r\nIt's a general principle, applicable to all mutexes provided by the stdlib. The same goroutine cannot lock any mutex if it already did that and did not yet unlocked it.",
	"user": {
		"login": "cznic",
		"id": 729580,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-02T11:11:33Z",
	"updated_at": "2016-05-02T11:11:33Z"
}
