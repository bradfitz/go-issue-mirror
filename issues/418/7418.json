{
	"id": 51286681,
	"number": 7418,
	"state": "closed",
	"title": "crypto/tls: Remove Lucky13 padding oracle and deprioritize RC4",
	"body": "\u003cpre\u003ecrypto/tls/cipher_suites.go says:\n  // Ciphersuite order is chosen so that ECDHE comes before plain RSA\n  // and RC4 comes before AES (because of the Lucky13 attack).\n\nI believe this refers to this bit from crypto/tls/conn.go:\n  // note that we still have a timing side-channel in the\n  // MAC check, below. An attacker can align the record\n  // so that a correct padding will cause one less hash\n  // block to be calculated. Then they can iteratively\n  // decrypt a record by breaking each byte. See\n  // \u0026quot;Password Interception in a SSL/TLS Channel\u0026quot;, Brice\n  // Canvel et al.\n  //\n  // However, our behavior matches OpenSSL, so we leak\n  // only as much as they do.\n\nIf I understand correctly, OpenSSL addressed this issue with change\n\u0026lt;\u003ca href=\"http://git.openssl.org/gitweb/?p=openssl.git\"\u003ehttp://git.openssl.org/gitweb/?p=openssl.git\u003c/a\u003e;a=commitdiff;h=e130841bccfc0bb9da254dc84e23bc6a1c78a64e\u0026gt;.\n\nIt'd be good to apply a similar fix to Go, and then adjust the default cipher suite\norder to prefer AES to RC4.\n\nFor comparison, Android's default suites\n\u0026lt;\u003ca href=\"https://android.googlesource.com/platform/external/conscrypt/+/master/src/main/java/org/conscrypt/NativeCrypto.java\u0026gt\"\u003ehttps://android.googlesource.com/platform/external/conscrypt/+/master/src/main/java/org/conscrypt/NativeCrypto.java\u0026gt\u003c/a\u003e;\u003c/pre\u003e",
	"user": {
		"login": "matthewg",
		"id": 188317,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:41:15Z",
	"created_at": "2014-02-26T22:12:24Z",
	"updated_at": "2016-06-25T01:28:30Z"
}
