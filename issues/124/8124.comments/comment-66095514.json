{
	"id": 66095514,
	"body": "\u003ca id=\"c12\"\u003e\u003c/a\u003eComment 12 by **hugoosvaldobarrera**:\n\n\u003cpre\u003eAfter carefully looking at those issues (#8453, #8455), I just noticed that they won't\nfix the problem here since they both refer to dual-stacked hosts. This scenario is on\nIPv6-only hosts.\n\n\nTo be more precise, here's the exact problem:\nThe following code is rather common in go-based applications.\n\n    $ cat test.go \n    package main\n\n    import \"net\"\n    import \"fmt\"\n\n    func main() {\n            conn, err := net.Dial(\"tcp\", \"google.com:80\")\n            if err != nil {\n                    fmt.Println(err)\n            }\n            fmt.Fprintf(conn, \"GET / HTTP/1.0\\r\\n\\r\\n\")\n    }\n    $ go run test.go\n    dial tcp 173.194.42.72:80: network is unreachable\n\nMy host has no IPv4 connectivity (but my network *does* have NAT64):\n\n    $ ifconfig wlan0\n    wlan0: flags=4163\u0026lt;UP,BROADCAST,RUNNING,MULTICAST\u0026gt;  mtu 1500\n            inet 169.254.234.197  netmask 255.255.0.0  broadcast 169.254.255.255\n            inet6 fe80::bae8:56ff:fe18:7bf6  prefixlen 64  scopeid 0x20\u0026lt;link\u0026gt;\n            inet6 2800:40:7aa:1:bae8:56ff:fe18:7bf6  prefixlen 64  scopeid 0x0\u0026lt;global\u0026gt;\n            ether b8:e8:56:18:7b:f6  txqueuelen 1000  (Ethernet)\n            RX packets 125144  bytes 154240526 (147.0 MiB)\n            RX errors 0  dropped 0  overruns 0  frame 10925\n            TX packets 92115  bytes 15505924 (14.7 MiB)\n            TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n            device interrupt 18\n\nThe above code should not return an error, since the remote host *is* reachable:\n\n    $ curl -I www.google.com\n    HTTP/1.1 302 Found\n    Cache-Control: private\n    Content-Type: text/html; charset=UTF-8\n    Location: \u003ca href=\"http://www.google.com.ar/?gfe_rd=cr\u0026ei=mqGAVNS1J8aFwASZjoCoAw\"\u003ehttp://www.google.com.ar/?gfe_rd=cr\u0026ei=mqGAVNS1J8aFwASZjoCoAw\u003c/a\u003e\n    Content-Length: 262\n    Date: Thu, 04 Dec 2014 18:02:02 GMT\n    Server: GFE/2.0\n    Alternate-Protocol: 80:quic,p=0.02\n\nAs-is common go applications have no network capabilities on ipv6-only hosts when using\nnet.Dial, which is commonly used. There's little motivations for developers out there to\nuse LookupIP and Dial, because the documentation of net.Dial seems to indicate that the\neffect would be the same.\n\nWe also can't have all this sort of low-level code repeated across every application out\nthere - these things are usually handled by the language core and/or the networking\nlibrary.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-04T18:14:29Z",
	"updated_at": "2014-12-22T06:35:10Z"
}
