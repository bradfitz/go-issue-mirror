{
	"id": 66095510,
	"body": "\u003ca id=\"c9\"\u003e\u003c/a\u003eComment 9:\n\n\u003cpre\u003eAgain, please elaborate on your issue, use cases, which feature is required for which\npackage if possible.\n\nYou are only saying \"should not fail\", \"other languages do something\", or \"why not just\ntry\". You never explain the details of the environment your issue happens. We can guess\nthat;\n- perhaps you can get both A+AAAA records to the resource,\n- perhaps your environment doesn't deploy DNS64-like namespace resolution mechanism,\n- perhaps you have IPv6 transport,\n- perhaps you don't have IPv4 transport, even it's private address's,\n- perhaps your environment doesn't deploy NAT64/464XLAT/MAP-T-like transport translation\nmechanism,\n- perhaps your environment doesn't deploy 6to4/6rd/Terado/ISATAP/MAP-E-like transport\ntunneling mechanism,\n- perhaps your node implements and runs both IPv4 and IPv6 stacks,\n- perhaps your gai.conf or other configration prefers IPv6 address family,\n- perhaps your go standard library is built with CGO_ENABLED=1 (no use of builtin DNS\nresolver).\n \nThen, when you run net.Dial(\"tcp\", \"google.com:80\") in your application;\n- glibc or similar's getaddrinfo uses IPv6 transport for DNS queries,\n- net.LookupIP returns A+AAAA records,\n- your application doesn't use Happy Eyeballs-like solution; i.e.. net.Dialer{DualStack:\ntrue},\n- net.Dial attempts a single call to syscall.Connect with A record,\n- net.Dial returns \"network is unreachable\" error.\n\nBut all above are just my dumb guesses. Even if those dumb guesses are about right,\nthere are several solutions on several areas you can use. What we, at least to me, need\nis just addressing your issue first, then developing a solution considering if it\nrequires an API change it would not be an API breaking change to keep the promise of API\ncompatibility; \u003ca href=\"http://tip.golang.org/doc/go1compat\"\u003ehttp://tip.golang.org/doc/go1compat\u003c/a\u003e.\n\n\u003e Only go (and nodejs) applications fails.\n\nInteresting, can you show us, explain how other language or its standard library can\nresolve this issue?\u003c/pre\u003e",
	"user": {
		"login": "mikioh",
		"id": 92117,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-06-07T01:36:34Z",
	"updated_at": "2014-12-08T10:45:04Z"
}
