{
	"id": 66095506,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003e\u003e I don't know how to make this clearer. :(\n\nLooks like it's been discussed from the birth of IPv6 and we still have no concrete\nsolution yet. Basically the problem contains several research area as the following:\n- for layer7-3: appropriate namespace resolution including fighting against leaky\nabstractions,\n- for layer7-3: connectivity and reachability measurement with developing useful metrics,\n- for layer4-3: a few clever techniques for traversing various address/protocol\ntranslation techniques-deployed islands.\n\n\u003e I'm not sure how other languages/libraries\n\nI don't know other libraries that behave good enough. I guess they recommend using a\ncombo of getaddrinfo and connect. Its equivalent in Go is a combo of LookupIP and Dial\nwith literal address.\n\n\u003e the below code should not fail if I don't have IPv4 addresses\n\u003e net.Dial(\"tcp\", \"google.com:80\")\n\nI don't think so, because, a) the internet is always broken somewhere, it's hard,\npointless to provide a diehard API, b) your node configuration is your matter, API\ndoesn't care, c) API already provides several control knobs; for example, you can pick\nyour favorite one from:\n1) \"tcp\"+\"www.google.com:http\"\n2) \"tcp\"+\"173.194.117.212:http\"\n3) \"tcp\"+\"[2404:6800:4004:804::1010]:http\"\n4) \"tcp4\"+\"www.google.com:http\"\n5) \"tcp4\"+\"173.194.117.212:http\"\n6) \"tcp6\"+\"www.google.com:http\"\n7) \"tcp6\"+\"[2404:6800:4004:804::1010]:http\"\n8) DualStack=true+\"tcp\"+\"www.google.com:http\"\n\n\u003e (maybe they check for the lack of IPv4-routes?)\n\nI think dealing with connected routes and/or assigned routable addresses doesn't make\nsense. How could we know that address belongs to which line: expensive LTE mobile line,\nsecure and censored company-VPN line, or dark/honeypot stuff. Instead you can implement\nyour own smart stuff that gathers environment information and selects the situational\npath, and connect to the resources using net.Dial.\n\n\u003e Go seems to be attempting to communicate to the A record every time, regardless of\nnetwork configuration.\n\nThe current standard library prefers IPv4 than IPv6 when users are not sure which\naddress family is good.\u003c/pre\u003e",
	"user": {
		"login": "mikioh",
		"id": 92117,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-06-01T02:13:35Z",
	"updated_at": "2014-12-08T10:45:01Z"
}
