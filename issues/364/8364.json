{
	"id": 51288083,
	"number": 8364,
	"state": "closed",
	"title": "encoding/csv: Fields containing quotes (but not quoted) cause parse error",
	"body": "by **ctalbot@smashwords.com**:\n\n\u003cpre\u003eTo reproduce\n\n1. Create a CSV containing quotes in a field, that is not quoted. This is most obviously\nvalid in the case of a TSV.  \nExample CSV file (cat -A'd):\nPublisher^IImprint^IVersion^ICategory$\nL. Near^IEdition^I ^IAfrican American$\nEleanor Daneer^IEdition^I ^IMysteries \u0026amp; Thrillers$\nJohn Smith^IEdition^I ^IErotica$\n\u0026quot;Mark John\u0026quot; Sebar^I ^I ^IShort Stories$\nKirsty Dinklebar^IEdition^I ^IRomance\n\nHere's a test case:\npackage csvbug\n\nimport (\n\t\u0026quot;github.com/stretchr/testify/assert\u0026quot;\n\t\u0026quot;testing\u0026quot;\n\t\u0026quot;bytes\u0026quot;\n\t\u0026quot;encoding/csv\u0026quot;\n)\n\nfunc loadTestData(filename string) ([]byte, error) {\n\tbytes, err := ioutil.ReadFile(filename)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn bytes, err\n}\n\nfunc TestApple_CanParseJunk(t *testing.T) {\n\tdata, err := loadTestData(\u0026quot;testdata/quoteinfield.tsv\u0026quot;)\n\tassert.NoError(t, err)\n\tassert.NotEmpty(t, data)\n\treader := bytes.NewReader(data)\n\tcsvReader := csv.NewReader(reader)\n\tcsvReader.Comma = '\\t'\n\tcsvReader.LazyQuotes = true\n\tcsvReader.TrailingComma = true\n\n\t_, err = csvReader.ReadAll()\n\tassert.NoError(t, err)\n}\n\n2. Parse the TSV with the following options: \ncsvReader.Comma = '\\t'\ncsvReader.LazyQuotes = true\n\nWhat happened?\nThe parse errors out: \nline 6, column 0: wrong number of fields in line\nNote also that the line number is wrong. This is not the line number of the record of\nthe field that has quotes, it is the last line in the file.\n\nWhat should have happened instead?\nThe parsed field should contain the quotes and text and not break.\nAny error should refer to the correct line.\n\nRelated:\n\u003ca href=\"https://golang.org/issue/3150\u0026amp\"\u003ehttps://golang.org/issue/3150\u0026amp\u003c/a\u003e;q=csv\u0026amp;colspec=ID%20Status%20Stars%20Release%20Owner%20Repo%20Summary\nbut the fix for that issue on codereview.appspot.com would result in incorrect data. \nAlso, the error in that case is not as severe as mine, since in my case the entire\ndocument cannot be parsed.\n\nGo version 1.3:\n$ go version\ngo version go1.3 linux/amd64\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/8364/0/quoteinfield.tsv\"\u003equoteinfield.tsv\u003c/a\u003e (213 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:46:27Z",
	"created_at": "2014-07-12T17:10:12Z",
	"updated_at": "2016-06-25T01:37:58Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
