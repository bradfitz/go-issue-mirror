{
	"id": 66071244,
	"body": "\u003ca id=\"c18\"\u003e\u003c/a\u003eComment 18 by **tais.hansen**:\n\n\u003cpre\u003eDecoding the Google OAuth2 JWT fails with the current go encoding/base64 implementation.\n\nI worked around this by adding the following before decoding:\n\n\tif l := len(s) % 4; l \u003e 0 {\n\t\ts += string([]byte{'=', '=', '='}[3-l:]) // or strings.Repeat(\"=\", 4-l)\n\t}\n\nWhere \"s\" is the encoded string.\n\n\n\nInfo:\n\nGoogle OAuth2 (OpenID) returns JWT (JSON Web Tokens) as the authentication result which\nis \"base64url\" encoded with padding removed.\n\n\u003ca href=\"https://developers.google.com/accounts/docs/OAuth2Login#exchangecode\"\u003ehttps://developers.google.com/accounts/docs/OAuth2Login#exchangecode\u003c/a\u003e\n\n\n\nFrom the JWT specification:\n\nBase64url Encoding\n      Base64 encoding using the URL- and filename-safe character set\n      defined in Section 5 of RFC 4648 [RFC4648], with all trailing '='\n      characters omitted (as permitted by Section 3.2) and without the\n      inclusion of any line breaks, white space, or other additional\n      characters.\n\n\u003ca href=\"http://tools.ietf.org/html/draft-ietf-oauth-json-web-token-20\"\u003ehttp://tools.ietf.org/html/draft-ietf-oauth-json-web-token-20\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-06-03T13:48:25Z",
	"updated_at": "2014-12-08T10:22:34Z"
}
