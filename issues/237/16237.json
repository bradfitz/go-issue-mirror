{
	"id": 163319181,
	"number": 16237,
	"state": "open",
	"title": "bytes+strings: Repeat can appear to succeed with an unreasonably large count",
	"body": "1. What version of Go are you using (`go version`)?\r\ngo version go1.6.2 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/pat/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/go\"\r\nGOTOOLDIR=\"/usr/lib/go/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n3. What did you do?\r\nhttps://play.golang.org/p/o-5UiG_cKc\r\n\r\n4. What did you expect to see?\r\nA panic because the program tries to allocate too much memory.\r\n\r\n5. What did you see instead?\r\nBoth bytes.Repeat and strings.Repeat appear to succeed, but the result is shorter than the input string.\r\n\r\nLooking at https://golang.org/src/bytes/bytes.go?s=9819:9858#L381, the cause seems to be that len(b)*count overflows, and happens to produce a result that is a small positive integer. Perhaps the routine should check for overflow and panic if one occurs.\r\n\r\n",
	"user": {
		"login": "pat42smith",
		"id": 12960541,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2016-07-01T04:53:25Z",
	"updated_at": "2016-07-01T05:08:09Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
