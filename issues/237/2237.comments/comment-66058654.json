{
	"id": 66058654,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eI see two obvious approaches to fix this:\n\na) Expand the Visitor with an error handler, and simplify the Walk signature:\n\ntype Visitor interface {\n\tVisitDir(path string, f *os.FileInfo) bool\n\tVisitFile(path string, f *os.FileInfo)\n\tError(os.Error)\n}\n\nfunc Walk(root string, v Visitor)\n\nb) Instead of a channel, provide an error handler to Walk and leave the Visitor as is:\n\nfunc Walk(root string, v Visitor, error func(os.Error))\n\n\nDiscussion: a) has the advantage of more naturally integrating any kind of error\nhandling done by a visitor's implementation, but it requires all visitors to implement\nan Error method. b) is simply an alternative to what we have now (and existing\nimplementations can be easily adjusted by providing a function/closure that sends on an\nerror channel as error handler.\n\nLooking for feedback.\u003c/pre\u003e\n\n\n\n_Status changed to **WaitingForReply**._",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-09-07T19:13:10Z",
	"updated_at": "2014-12-08T10:12:02Z"
}
