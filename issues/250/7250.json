{
	"id": 51286423,
	"number": 7250,
	"state": "closed",
	"title": "debug/macho: No support for fat archives/files",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\nThe debug/macho package provides utilities for reading the headers and load commands of\nMach images, but it only supports thin binaries. On OS X, it's fairly common to produce\nfat binaries that contain multiple MachO images for different architectures. Examples\ninclude (i386 and x86_64) and (armv7, armv7s). I think the debug/macho package should\nprovide support for reading fat binaries as well.\n\n\u003ca href=\"https://developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/MachORuntime/Reference/reference.html#//apple_ref/c/tag/fat_header\"\u003ehttps://developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/MachORuntime/Reference/reference.html#//apple_ref/c/tag/fat_header\u003c/a\u003e\n\nTo preserve the existing API, two new types would probably be necessary:\n\nFatFile and FatArch. FatFile would contain the magic and a slice of FatArchive.\nFatArchive would include the fields from the fat_arch struct and also provide a way to\nget a *macho.File object for that architecture.\n\nWhat is the expected output?\nN/A\n\nWhat do you see instead?\nN/A\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nOS X 10.9.1\n\nWhich version are you using?  (run 'go version')\ngo version go1.2 darwin/amd64\n\nPlease provide any additional information below.\u003c/pre\u003e",
	"user": {
		"login": "rsesek",
		"id": 57350,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:40:20Z",
	"created_at": "2014-02-03T15:59:38Z",
	"updated_at": "2016-06-25T01:26:45Z"
}
