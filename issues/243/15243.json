{
	"id": 147587222,
	"number": 15243,
	"state": "closed",
	"title": "Unexpected or incorrect initialization loop error",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\ngo version go1.6 darwin/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/mitchellh/code/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/Users/mitchellh/code/3rdparty/go\"\r\nGOTOOLDIR=\"/Users/mitchellh/code/3rdparty/go/pkg/tool/darwin_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"clang\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fno-common\"\r\nCXX=\"clang++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n3. What did you do?\r\n\r\nI've reproduced it in a minimal case: http://play.golang.org/p/ERjFhItIfV\r\n\r\nThat produces an \"initialization loop\" error. Note that this is a minimal case. You can imagine this [also erroring] case where it wouldn't in fact be a runtime infinite loop: http://play.golang.org/p/fVZWOf6Obw And yet it still gives us an init loop error.\r\n\r\nHowever, if I do this, it compiles fine: http://play.golang.org/p/KZkAZXyqm- \r\n\r\n4. What did you expect to see?\r\n\r\nI expected both cases to compile fine.\r\n\r\n5. What did you see instead?\r\n\r\nI saw an \"initialization loop\" error for one case when they're both seemingly equivalent. ",
	"user": {
		"login": "mitchellh",
		"id": 1299,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-04-11T23:46:06Z",
	"created_at": "2016-04-11T23:39:10Z",
	"updated_at": "2016-04-11T23:46:06Z"
}
