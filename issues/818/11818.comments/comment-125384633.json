{
	"id": 125384633,
	"body": "Hi Nigel,\r\n\r\nOverall, the proposal SGTM. I think it's an interesting area to experiment in. I think Go can be excellent for this, but as you said, there isn't yet one known best solution.\r\n\r\nI just have some non-actionable thoughts and comments I'd like to share.\r\n\r\nFirst, I like that you're looking at making it quite general and therefore possible for multiple backend implementations (OpenGL, X11, others). Just out of curiosity, I immediately started thinking how, if at all, this could have an HTML5 backend (via pure html, or perhaps canvas element, or maybe just WebGL). I don't think it's a priority, but it's interesting to see if that could fit in. I'll keep thinking about as I see `shiny` evolve.\r\n\r\nSecond, I just think it's really interesting that this proposal is being started despite there already being `github.com/google/gxui`, an experimental cross platform UI library written from scratch in pure Go. I mean it's interesting because it shows there's still room for experimentation and thinking about ways to solve the problem. Having multiple attempts shows that this is a more active area of interest and it's likely to have interesting results in the near future.\r\n\r\nFinally, I've attempted to tackle creating a cross-platform GUI in Go about a year ago myself. The GUI was not my primary goal, it was just a dependency of a larger project I wanted to build, and no pure Go cross platform GUI (like `gxui`) existed at the time so I worked on my own. See https://github.com/shurcooL/Conception-go#screenshot for a sample screenshot. It was partially a port of the original undertaking in C++, and I used it as a platform to experiment with Go and see how I liked it.\r\n\r\nIt was a rather large undertaking and I only had a chance to spend a few months to work on it in my spare time, so I wasn't able to get it to completion. I'd estimate the code being maybe 15% of where I'd want it to be. But I had good ideas about how to make it much cleaner and better. As it is now, it's really incomplete and not usable by general public, but working on the prototype proved to me that Go is quite capable of handling such tasks, it just took some interesting ways of figuring out some things. And in the end I had a project that's very easy to distribute; you can literally run a single go-get command, wait 1 minute, and have a [quite large](https://godoc.org/github.com/shurcooL/Conception-go?import-graph\u0026hide=2) project build successfully and run today.\r\n\r\nIn conclusion, I'll be keeping an eye on `shiny` as it's interesting to see how it'll go. :)",
	"user": {
		"login": "shurcooL",
		"id": 1924134,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-28T00:19:36Z",
	"updated_at": "2015-07-28T00:42:56Z"
}
