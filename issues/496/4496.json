{
	"id": 51282227,
	"number": 4496,
	"state": "closed",
	"title": "spec: permit parenthesized types for receiver types",
	"body": "\u003cpre\u003eParenthesizing types was introduced when we realized that we needed to be able to\ndisambiguate certain type expressions (such as: chan\u0026lt;-chan int vs chan(\u0026lt;-chan\nint)).\n\nWith the most recent adjustment for method expressions (\u003ca href=\"https://golang.org/issue/4457\"\u003eissue #4457\u003c/a\u003e) receiver types in\nmethod expressions can also be parenthesized.\n\nAs a result, a Type can be parenthesized in almost everywhere now but in the receiver of\na method: the receiver base type must always be of the form: T or *T. This is\nparticularly odd since we emphasize that the receiver also plays the role of an ordinary\nparameter, and all other parameter and result types can be parenthesized.\n\nWe should be consistent and allow parenthesized types everywhere.\n\nThis would be a backward-compatible language syntax relaxation.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"closed_at": "2014-12-08T10:23:56Z",
	"created_at": "2012-12-06T00:55:20Z",
	"updated_at": "2016-06-24T22:29:24Z"
}
