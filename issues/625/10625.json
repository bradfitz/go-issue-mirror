{
	"id": 72033714,
	"number": 10625,
	"state": "closed",
	"title": "container/list: list.go, Are these places can do little optimization",
	"body": "https://github.com/golang/go/blob/master/src/container/list/list.go#L185\r\nhttps://github.com/golang/go/blob/master/src/container/list/list.go#L194\r\n\r\nFor MoveBefore, if e == mark.prev, we can do nothing, \r\nMoveAfter also a reason\r\n\r\nIf I remember correctly, MoveBefore originally had such pr, also accepted, but not now how, and who can give me a reply\r\n\r\n```Go\r\n// MoveBefore moves element e to its new position before mark.\r\n// If e or mark is not an element of l, or e == mark, the list is not modified.\r\nfunc (l *List) MoveBefore(e, mark *Element) {\r\n\tif e.list != l || mark.list != l  || e == mark || e == mark.prev{\r\n\t\treturn\r\n\t}\r\n\tl.insert(l.remove(e), mark.prev)\r\n}\r\n\r\n// MoveAfter moves element e to its new position after mark.\r\n// If e or mark is not an element of l, or e == mark, the list is not modified.\r\nfunc (l *List) MoveAfter(e, mark *Element) {\r\n\tif e.list != l || mark.list != l || e == mark || e == mark.next {\r\n\t\treturn\r\n\t}\r\n\tl.insert(l.remove(e), mark)\r\n}\r\n```",
	"user": {
		"login": "chanxuehong",
		"id": 3416908,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2015-04-30T03:27:14Z",
	"created_at": "2015-04-30T01:28:08Z",
	"updated_at": "2016-06-25T02:06:54Z"
}
