{
	"id": 139168952,
	"number": 14702,
	"state": "open",
	"title": "encoding/json: Unmarshal into struct field or a map does not validate invalid json.Number",
	"body": "1. What version of Go are you using (`go version`)?\r\ngo1.6 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nlinux/amd64\r\n\r\n3. What did you do?\r\n(Use play.golang.org to provide a runnable example, if possible.)\r\nhttp://play.golang.org/p/8QZq-0vRch\r\n\r\n4. What did you expect to see?\r\nUnmarshal did not accept a invalid JSON as a json.Number, instead, it should raise an error\r\n\r\n\r\n5. What did you see instead?\r\nUnmarshal accepted a invalid JSON as a json.Number and did not raise an error\r\n\r\n#10281 is the one that actually fixed this issue, however, shouldn't unmarshal should also raise an error? Right now only Marshalling is an raising a error.\r\n\r\n@edit\r\nI actually did some further testing and it only happens when Unmarshalling into a struct field, as can be seen in the updated snippet above.\r\n\r\n@edit2\r\nIt also happens when using map[string]json.Number and I have updated the test case accordingly.\r\n\r\n\r\n",
	"user": {
		"login": "brenol",
		"id": 7342697,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2016-03-08T03:30:29Z",
	"updated_at": "2016-10-16T08:49:15Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
