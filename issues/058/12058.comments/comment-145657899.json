{
	"id": 145657899,
	"body": "@mattn \r\n\u003e `pkg-config --static` is same as just adding `LDFLAGS --static` ?\r\n\r\nNo, these are totally different things.\r\n\r\n`pkg-config --libs NAME` (with or without `--static`) provides you with compiler options needed to link against NAME).\r\n\r\n`LDFLAGS += -static` is a flag to C linker instructing it to produce a statically linked binary.\r\n\r\n\u003e Do you know what is private libraries meaning? AFAICS, they are not same.\r\n\r\nIn this context \"private libraries\" means \"all the libraries that this library itself uses/needs\". Let me give you an example.\r\n\r\nIf we want to build something *dynamically* with libsqlite, we add `-lsqlite` to `CFLAGS` (or `CXXFLAGS`, doesn't matter). Note we don't need to explicitly list the libraries that are used by `libsqlite` itself (such as `libdl`), as this is something that dynamic linker will care about (these dependencies are already embedded into `libsqlite.so`). We can list them explicitly, but that would lead to so-called overlinking (https://wiki.mageia.org/en/Overlinking_issues_in_packaging), so we'd rather not do that.\r\n\r\nNow, if we want to build something *statically*, we need to list all the libraries explicitly in `CFLAGS`, including the libraries that we need, and the libraries that those libraries need.\r\n\r\nSo, for dynamic build of something with libsqlite, we need `CLFAGS += -lsqlite`, while for static build we need `CFLAGS += -lsqlite -ldl`. This is why `pkg-config` adds support for `--static` flag.",
	"user": {
		"login": "kolyshkin",
		"id": 4522509,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-05T20:28:32Z",
	"updated_at": "2015-10-05T20:28:32Z"
}
