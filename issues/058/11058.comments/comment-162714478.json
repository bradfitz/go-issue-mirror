{
	"id": 162714478,
	"body": "\u003e @nadiasvertex The main thing is to make the function hostlink in cmd/link/internal/ld/lb.go do the right thing on Windows. On Darwin it invokes theC linker with -dynamiclib. On GNU/Linux it invokes the C linker with -Wl,-Bsymbolic -Wl,-z,relro -shared -Wl,-z,nodelete.\r\n\r\nIf you just want to build a DLL that does not contain any C code, you don't have to use external linker. I am sure you can modify Go linker to produce what you want. Go linker does just that when it creates windows executables. I don't see how creating of DLL would be different.\r\n\r\nYou will also have to deal with issues every windows DLL deals with. You must have set of mimimum functions required in DLL. You have to deal with your DLL exported functions called on different threads. You have to deal with exceptions.\r\n\r\n\u003e You might also have to worry about how thread-local storage works in a DLL (I have no idea how this sort of thing works on windows)\r\n\r\nWhat is wrong with the way thread-local storage works in Go windows executables now?\r\n\r\nAlex",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-08T00:27:03Z",
	"updated_at": "2015-12-08T00:27:03Z"
}
