{
	"id": 163938058,
	"body": "On Fri, Dec 11, 2015 at 5:09 AM, Christopher Nelson \u003c\nnotifications@github.com\u003e wrote:\n\n\u003e Perhaps someone can clarify some confusion for me.\n\u003e\n\u003e In the file cmd/link/internal/ld/data.go there is a whole block of code\n\u003e which creates an section called .init_array, and later writes values into\n\u003e this section. I added some diagnostics which show that this code is called\n\u003e on Windows as well.\n\u003e\n\u003e My question is, where does the section called \".init_array\" go after it is\n\u003e created in data.go?\n\u003e\n\nWell, on ELF, it gets written to the file in a section called\n\".init_array\", and it gets put in the DT_INIT_ARRAY dynamic tag.  I'm not\nsure what happens on PE.\n\n\n\u003e A related question is: How do I get access to the the data which is\n\u003e written there?\n\u003e\nThat's kind of the wrong question.  Either that approach is correct and it\nshould be written to the file, or it is not correct and we need to do\nsomething else on Windows.  One thing we should not do is write a\n.init_array section and then read it and change it into something else.  We\nshould the right thing initially.\n\nAlso, I found this very interesting discussion of .init_array vs. .ctors in\n\u003e gcc: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=46770\n\u003e\n\nYeah, but note that the context of the bug report is systems in which the\ndynamic linker implements DT_INIT_ARRAY, an ELF-specific concept.  If\nWindows doesn't have something like .init_array we need to do something\ndifferent on Windows.\n\nIan\n",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-11T13:39:30Z",
	"updated_at": "2015-12-11T13:39:30Z"
}
