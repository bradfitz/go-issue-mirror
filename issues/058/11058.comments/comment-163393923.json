{
	"id": 163393923,
	"body": "It turns out that the go.o file is getting created perfectly fine. If I pass -tmpdir to link.exe with a folder of my choice, the resulting archive is well-formed. In other words:\r\n\r\ngo build -x -work -buildmode=c-archive -ldflags=\"-v -tmpdir ./tmpo\" -o test.a calc.go \r\n\r\nResults in a perfectly valid test.a, which I can link against with:\r\n\r\ngcc -o test test_driver.o test.a -lws2_32 -lntdll\r\n\r\nI'm guessing that there is a race condition where the external linker is not finished with its job, but the temporary folder gets pulled out from under it.\r\n\r\nThis executable segfaults after running runtime.sdtcall1.\r\n\r\n(gdb) run\r\nStarting program: Z:\\projects\\test\\src\\calc\\test.exe\r\n[New Thread 3224.0x14c]\r\n[New Thread 3224.0xb20]\r\n[New Thread 3224.0x38c]\r\n\r\nBreakpoint 3, 0x0000000000422760 in runtime.stdcall1 ()\r\n2: x/3i $pc\r\n=\u003e 0x422760 \u003cruntime.stdcall1\u003e: sub    $0x10,%rsp\r\n   0x422764 \u003cruntime.stdcall1+4\u003e:       mov    %gs:0x28,%rbx\r\n   0x42276d \u003cruntime.stdcall1+13\u003e:      mov    0x0(%rbx),%rcx\r\n\r\n(gdb) info registers\r\nrax            0x2a     42\r\nrbx            0x4c41d8 4997592\r\nrcx            0x2      2\r\nrdx            0x24fdf0 2424304\r\nrsi            0x5      5\r\nrdi            0xdb1540 14357824\r\nrbp            0x4018c0 0x4018c0  main._cgoexpwrap_f070ceaf1261_Sum\r\nrsp            0x24fc78 0x24fc78\r\nr8             0x18     24\r\nr9             0xdb15b0 14357936\r\nr10            0x0      0\r\nr11            0x286    646\r\nr12            0x1      1\r\nr13            0x8      8\r\nr14            0x0      0\r\nr15            0x0      0\r\nrip            0x422760 0x422760 runtime.stdcall1\r\neflags         0x246    [ PF ZF IF ]\r\ncs             0x33     51\r\nss             0x2b     43\r\nds             0x0      0\r\nes             0x0      0\r\nfs             0x0      0\r\ngs             0x0      0\r\n\r\n(gdb) c\r\nContinuing.\r\n\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x000000000042276d in runtime.stdcall1 ()\r\n2: x/3i $pc\r\n=\u003e 0x42276d \u003cruntime.stdcall1+13\u003e:      mov    0x0(%rbx),%rcx\r\n   0x422774 \u003cruntime.stdcall1+20\u003e:      mov    0x30(%rcx),%rbx\r\n   0x422778 \u003cruntime.stdcall1+24\u003e:      movq   $0x1,0x328(%rbx)\r\n(gdb) info registers\r\nrax            0x2a     42\r\nrbx            0x0      0\r\nrcx            0x2      2\r\nrdx            0x24fdf0 2424304\r\nrsi            0x5      5\r\nrdi            0xdb1540 14357824\r\nrbp            0x4018c0 0x4018c0 main._cgoexpwrap_f070ceaf1261_Sum\r\nrsp            0x24fc68 0x24fc68\r\nr8             0x18     24\r\nr9             0xdb15b0 14357936\r\nr10            0x0      0\r\nr11            0x286    646\r\nr12            0x1      1\r\nr13            0x8      8\r\nr14            0x0      0\r\nr15            0x0      0\r\nrip            0x42276d 0x42276d runtime.stdcall1+13\r\neflags         0x10202  [ IF RF ]\r\ncs             0x33     51\r\nss             0x2b     43\r\nds             0x0      0\r\nes             0x0      0\r\nfs             0x0      0\r\ngs             0x0      0\r\n\r\n",
	"user": {
		"login": "nadiasvertex",
		"id": 2034108,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-09T21:15:45Z",
	"updated_at": "2015-12-09T21:17:35Z"
}
