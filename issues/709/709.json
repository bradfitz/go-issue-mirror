{
	"id": 51276835,
	"number": 709,
	"state": "closed",
	"title": "goroutine safe errno access is needed for full functionality for some foreign functions",
	"body": "by **giles.lean**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n\n1. Try to use a C function via cgo that sets errno\n2. realise that errno even if accessible is thread safe but not goroutine safe\n\n\nWhat is the expected output? What do you see instead?\n\nAn errno value maintaned per goroutine is highly desirable.  Full\nfunctionality of some foreign functions (including some standardised by\nPOSIX) is not available otherwise.\n\n\nWhat is your $GOOS?  $GOARCH?\n\nDarwin, amd64 (but the issue is an enhancement request, and OS and\narchitecture independent.\n\n\nWhich revision are you using?  (hg identify)\n\ne56803580234\n\n\nPlease provide any additional information below.\n\nI initially missed the bug tracker and opened the nearly-empty (merely a\nTODO) CL 798041 for this.  Russ Cox is aware of the issue.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2014-12-08T10:05:34Z",
	"created_at": "2010-03-31T19:02:09Z",
	"updated_at": "2016-06-24T19:15:04Z"
}
