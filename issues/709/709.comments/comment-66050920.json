{
	"id": 66050920,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2 by **Stefan.Plantikow**:\n\n\u003cpre\u003eI sidestepped this issue by using runtime.LockOSThread() and runtime.UnlockOSThread()\nwhen issuing system \ncalls via cgo.  Works like a charm.  However since there is no way to check if the\ncurrent go routine has been \nlocked to an OS thread there is no reliable way for library code to ensure OS thread\nlocking without changing the \naposteriori OS-thread-locking state for the caller of the library routine.\nruntime.IsOSThreadLocked() bool would \nresolve this.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-05-01T19:21:28Z",
	"updated_at": "2014-12-08T10:05:34Z"
}
