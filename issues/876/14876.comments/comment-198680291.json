{
	"id": 198680291,
	"body": "memmove is ok as the it's using Go ABI (all registers are caller-save.)\r\n\r\nThe problem is in cgo callback code (crosscall2): it should also save\r\ncallee-saved xmm registers.\r\n\r\nI can see that our arm version also fails to save vfp registers (s16-s31\r\n(d8-d15) are callee-save.) ARM64 needs to save lower 64-bit of v8-v15.\r\nAMD64 needs to save (only Windows requires this) lower 128-bit of\r\nxmm6-xmm15. 386 is ok.\r\n\r\nOnly ppc64x is correct in this regard. However, the problem is that on\r\ncertain architectures, we don't know if we can access FP registers,\r\ne.g. ARM with GOARM=5 and 386 with GO386=387.)\r\n",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-19T10:18:48Z",
	"updated_at": "2016-03-19T10:36:58Z"
}
