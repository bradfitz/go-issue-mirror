{
	"id": 165549671,
	"number": 16371,
	"state": "open",
	"title": "go/printer (cmd/gofmt): chooses confusing indention for nested structs",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo version go1.6.1 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/google-golang\"\r\nGOTOOLDIR=\"/usr/lib/google-golang/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -gno-record-gcc-switches -fdebug-prefix-map=/tmp/go-build255917305=/tmp/go-build\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n3. What did you do?\r\nRun `gofmt` on a file containing this code, that has confusing indention\r\n\r\n```\r\n\ttests := []struct {\r\n\t\tname  string\r\n\t\tinput *StructA\r\n\t\twant  string\r\n\t}{\r\n\t\t{\"empty\", \u0026StructA{\r\n\t\t\tNestedB: \u0026StructB{},\r\n\t\t},                       //  \u003c- Confusion indention\r\n\t\t\t\"\",                  //  \u003c- Confusion indention\r\n\t\t},\r\n\t}\r\n```\r\n\r\n\r\n4. What did you expect to see?\r\nThe indention was changed to something less confusing.\r\n\r\n\r\n5. What did you see instead?\r\nThe indention is what gofmt intends, even though it is confusion.\r\n\r\n",
	"user": {
		"login": "tbertelsen",
		"id": 6142662,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsDecision"
		}
	],
	"comments": 11,
	"created_at": "2016-07-14T12:26:04Z",
	"updated_at": "2016-10-05T19:18:21Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
