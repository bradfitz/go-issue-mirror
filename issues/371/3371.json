{
	"id": 51280494,
	"number": 3371,
	"state": "closed",
	"title": "cgo: conflicting declarations of int64/uint64 with third party libraries",
	"body": "by **tav@espians.com**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. Use //exports to make a Go function callable from C.\n2. Include a C library like OpenCV which typedefs its own int64/uint64.\n3. Build it with `go build`.\n\nWhat is the expected output?\n\n  A successful build :)\n\nWhat do you see instead?\n\nIn file included from $WORK/command-line-arguments/_obj/_cgo_export.c:2:0:\nhighgui.go:93:19: error: conflicting types for ‘int64’\n/usr/local/include/opencv2/core/types_c.h:153:17: note: previous declaration of\n‘int64’ was here\nhighgui.go:94:28: error: conflicting types for ‘uint64’\n/usr/local/include/opencv2/core/types_c.h:154:18: note: previous declaration of\n‘uint64’ was here\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n  go build\n\nWhich operating system are you using?\n\n  Ubuntu Linux 11.10 64-bit\n\n  Kernel: 3.0.0-12\n\nWhich revision are you using?  (hg identify)\n\n  3cdba7b0650c+ weekly/weekly.2012-03-13\n\nPlease provide any additional information below.\n\n  The issue is that the typedefs defined in the gccExportHeaderProlog in cmd/cgo/out.go conflict with certain third party libraries like OpenCV.\n\n  It would be great if we could prefix all of these with Go so as to minimise potential conflict, e.g. GoInt64, GoUint64, etc.\n\n  P.S. We should also update the documentation of //exports on \u003ca href=\"http://code.google.com/p/go-wiki/wiki/cgo\"\u003ehttp://code.google.com/p/go-wiki/wiki/cgo\u003c/a\u003e to use an external .c file since the current example won't work with Go1.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:17:34Z",
	"created_at": "2012-03-22T05:06:59Z",
	"updated_at": "2016-06-24T22:16:03Z"
}
