{
	"id": 75702102,
	"body": "Sure, the thread had an example of generating a tsv file I think, but my\nuse case is generating program code. I end up with a lot of empty lines\nwhere I had control tags, range tags, if tags, etc.\n\nso I have something that looks like:\n\n    {{with .BitShift}}\n        {{if ne . 0}}val \u003e\u003e= {{ . }}{{end}}\n    {{end}}\n  {{with $mask := .BitMask}}\n        {{if ne $mask 0 }}val \u0026= 0x{{ printf \"%x\" $mask }}{{end}}\n  {{if ne $mask 0 | and $.IsSigned }}\n            val = val\u003c\u003c63 | val\u003e\u003e1\n        {{end}}\n  {{end}}\n\nWhich produces a lot of empty lines. I have to put non-related things on\nthe same line, make very long lines, etc to get the formatting I want. With\nsome whitespace eating feature I could do:\n\n    {{with .BitShift-}} // eats the newline and the indentation on the next\nline\n        {{if ne . 0}}val \u003e\u003e= {{ . }}{{end}}\n    {{end-}}\n  {{with $mask := .BitMask-}}\n        {{if ne $mask 0 }}val \u0026= 0x{{ printf \"%x\" $mask }}{{end}}\n  {{if ne $mask 0 | and $.IsSigned -}}\n            val = val\u003c\u003c63 | val\u003e\u003e1\n        {{end-}}\n  {{end-}}\n\nNot sure if the dash character is the best choice, but something like that\nto suppress newlines and indentation before or after tags would do the\ntrick.\n\nOn Mon, Feb 23, 2015 at 10:12 PM, Andrew Gerrand \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e Seems like a reasonable approach. Can you give me an example of where this\n\u003e might help, so that I can judge the feature in context?\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/9969#issuecomment-75690901\u003e.\n\u003e\n",
	"user": {
		"login": "eloff",
		"id": 27574,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-24T05:30:37Z",
	"updated_at": "2015-02-24T05:30:37Z"
}
