{
	"id": 66089740,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eIt looks like your Go install has GOARM=5 hard coded.\n\nudoo(~/src) % GOARM=6 go run boom.go                                            \nudoo(~/src) % GOARM=5 go run boom.go \nstepflt 0x10ca4 0xeebf8bc2\nUnsupported floating point instruction\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0x347f0]\n\ngoroutine 1 [running]:\nruntime.panic(0x39518, 0x6d348)\n        /home/dfc/go/src/pkg/runtime/panic.c:264 +0x134\nruntime: unexpected return pc for stepflt called from 0x0\n\ngoroutine 2 [runnable]:\nruntime.MHeap_Scavenger()\n        /home/dfc/go/src/pkg/runtime/mheap.c:439\nruntime.goexit()\n        /home/dfc/go/src/pkg/runtime/proc.c:1394\nexit status 2\n\nApplying the fix,\n\n//        s, c := float32(math.Sin(float64(angle))), float32(math.Cos(float64(angle)))\n        s := float32(math.Sin(float64(angle)))\n          c := float32(math.Cos(float64(angle)))\n\nsolves the runtime error. I think we have to teach the soft float impl how to handle\nthis opcode, and you should figure out why your Go install is compiled in softfloat mode.\u003c/pre\u003e\n\n_Labels changed: added **release-go1.3**, **repo-main**, **arch-arm**._\n\n\n_Status changed to **Accepted**._",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-12-31T07:47:25Z",
	"updated_at": "2014-12-08T10:39:11Z"
}
