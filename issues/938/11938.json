{
	"id": 98161277,
	"number": 11938,
	"state": "closed",
	"title": "time: Unix docs say \"UTC\" but returns Local, without calculating timezone",
	"body": "In docs for [func Unix(sec int64, nsec int64) Time](https://github.com/golang/go/blob/b7205b92c0a5ae985a3530dc8ad17e7d3a7a807d/src/time/time.go#L966-982), it is stated: \"sec seconds and nsec nanoseconds since January 1, 1970 UTC\". The calculations inside don't seem to take Local timezone into account (unixToInternal is a const), but Time{loc: Local} is returned. I think it's not right?\r\n\r\nSimilarly in Time.Unix(), and many other different places related to \"Unix time\".",
	"user": {
		"login": "akavel",
		"id": 273837,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2015-07-30T12:55:14Z",
	"created_at": "2015-07-30T12:49:31Z",
	"updated_at": "2016-08-05T16:11:44Z"
}
