{
	"id": 181557301,
	"number": 17373,
	"state": "open",
	"title": "cmd/compile: intrinsicify user defined assembly functions",
	"body": "I'd like the compiler to intrinsicify user defined assembly functions.\r\n\r\nhere is a simple sketch of the user interface:\r\nwe introduce CLOBBER pseudo instruction to describe that after\r\ncertain instruction, certain registers are clobbered.\r\n\r\nWhen the user defines such an assembly function in a package:\r\nTEXT Â·Clz(SB), NOSPLIT, $0-4\r\n     MOVW 0(FP), R0  // compiler recognizes this as input read\r\n     CLZ R0, R1 // the new instruction template\r\n     CLOBBER [R2-R3, R11] // as an example of CLOBBER, so that compiler know to spill those registers before using this instruction template\r\n     MOVW R1, 4(FP) // compiler recognizes this as output write\r\n     RET\r\n\r\nThe user effectively tells the compiler a new rule to expand call\r\nto Clz function with a custom instruction CLZ.\r\n\r\nIf we ignore the possibility of doing register allocation for the new\r\ninstruction template, I think instrinsicify such assembly functions\r\nwith the current SSA backend is within reach.\r\n\r\nOf course, this has implications on safety, but if the user is already\r\nusing assembly, then that shouldn't be a big concern.",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		}
	],
	"comments": 0,
	"created_at": "2016-10-07T00:28:39Z",
	"updated_at": "2016-10-07T00:28:39Z",
	"reactions": {
		"total_count": 1,
		"hooray": 1
	}
}
