{
	"id": 84491350,
	"body": "\u003e I don't know, to me, it seems that the OP just want to know whether the\nendpoint is usable for his/her internal cleanups/tasks. In addition, why\nnot ErrClosedPipe?\n\nI don't see this as a discussion about the name of the exported value. The\nOP asked us to export `net.errClosing` and through this discussion it's\nbeen discovered that exporting this would be used to help suppress expected\nerrors during async close of a reading socket.\n\nMy concern is that this would also create a new contract on the\n`net.Conn.Read` method, that all implementations _must_ return this new\nexported value when closed concurrently, and they must also respect and\nbubble it up from types that they wrap. Also, while the OP has indicated\nthat for their particular example this new exported type would not be used\nto affect program flow, I am certain that users will quickly come to depend\non this value.\n\nThis is a slippery slope which I do not want to embark on. So, as a counter\nsuggestion I am proposing replacing returning `net.errClosing` with\n`io.EOF` in _as limited a scope as possible_ to satisfy the requirements of\nthe OP without introducing a new contract for all `net.Conn.Read`\nimplementations.\n\nI recognise that this is not a perfect solution, but I feel I have given\nstrong arguments why adding extra exported values to the `net.Conn`\ncontract is a bad idea.\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-22T01:45:20Z",
	"updated_at": "2015-03-22T01:45:20Z"
}
