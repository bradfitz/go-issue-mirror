{
	"id": 84512370,
	"body": "\u003e We know you introduced io.EOF to the net package (a disadvantage: it\r\n\u003e prevents to convey additional network information with net.OpError in the\r\n\u003e case of returning io.EOF), and we agreed with it because we thought that\r\n\u003e the result of any read operation on connection-oriented protocol: nread==0\r\n\u003e \u0026\u0026 err==nil is equivalent to io.EOF.\r\n\r\nMate, that was a bit uncalled for. I'm not sure what set of people you\r\nclassify as 'we' that doesn't include me, but I think it is unfair to blame\r\nme for the fact that `net.Conn.Read` obeys the `io.Reader` contract.\r\n\r\nOn Sun, Mar 22, 2015 at 2:30 PM, Mikio Hara \u003cnotifications@github.com\u003e\r\nwrote:\r\n\r\n\u003e We know you introduced io.EOF to the net package (a disadvantage: it\r\n\u003e prevents to convey additional network information with net.OpError in the\r\n\u003e case of returning io.EOF), and we agreed with it because we thought that\r\n\u003e the result of any read operation on connection-oriented protocol: nread==0\r\n\u003e \u0026\u0026 err==nil is equivalent to io.EOF.\r\n\u003e\r\n\u003e But in this case, I'm not sure your proposal is the way to go. Here are my\r\n\u003e random thoughts.\r\n\u003e\r\n\u003e    1. At the moment, we provide io.EOF and net.Error compliant values for\r\n\u003e    part of error notification protocol/contact on IO operations of\r\n\u003e    connection-oriented protocol endpoints.\r\n\u003e    2. If we need to introduce a new signal for error notification, it\r\n\u003e    should follow io package because net.Conn implements io.Reader/Writer\r\n\u003e    interfaces and it would be a rationale for introducing a disadvantage the\r\n\u003e    same as io.EOF.\r\n\u003e    3. net.OpError or other net.Error compliant types/values are important\r\n\u003e    for making diagnostics after disaster happened; I mean, for management\r\n\u003e    plane stuff. IMHO, for control plane stuff, determining the failure from\r\n\u003e    error notifications come from service access points/APIs of network\r\n\u003e    protocols don't matter because SAPs/APIs usually don't satisfy such\r\n\u003e    soft/hard error determination. (anyone shows me the perfect compliant of\r\n\u003e    RFC 5461?)\r\n\u003e\r\n\u003e â€”\r\n\u003e Reply to this email directly or view it on GitHub\r\n\u003e \u003chttps://github.com/golang/go/issues/4373#issuecomment-84510711\u003e.\r\n\u003e\r\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-22T03:50:38Z",
	"updated_at": "2015-03-22T03:51:01Z"
}
