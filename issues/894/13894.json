{
	"id": 125784071,
	"number": 13894,
	"state": "closed",
	"title": "tour: Channels unnecessarily complicated",
	"body": "Context: https://tour.golang.org/concurrency/2\r\n\r\nThis section is much harder to grasp than the others, as newcomer. The array slicing and values make it harder to comprehend. Original:\r\n```\r\n    a := []int{7, 2, 8, -9, 4, 0}\r\n[...]\r\n\tgo sum(a[:len(a)/2], c)\r\n\tgo sum(a[len(a)/2:], c)\r\n```\r\n\r\nUsing simpler array 1,2,3... and changing the following to reference using hard-coded lengths (or even just two different arrays) would make it much easier to understand the logic and derive what is happening based on the output.\r\n\r\n```\r\nfunc sum(a []int, c chan int) {\r\n\tsum := 0\r\n\tfor _, v := range a {\r\n\t\tsum += v\r\n\t}\r\n\tc \u003c- sum // send sum to c\r\n}\r\n\r\nfunc main() {\r\n\ta := []int{1, 2, 3, 4, 5, 6}\r\n\r\n\tc := make(chan int)\r\n\tgo sum(a[3:], c)\r\n\tgo sum(a[:3], c)\r\n\tx, y := \u003c-c, \u003c-c // receive from c\r\n\r\n\tfmt.Println(x, y, x+y)\r\n}\r\n```\r\nThe resulting output is then: \"15 6 21\"\r\n\r\nEdit: Being nicer after reading Community Guidelines.",
	"user": {
		"login": "guillaumenel",
		"id": 4380544,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-02-08T02:47:13Z",
	"created_at": "2016-01-09T21:57:32Z",
	"updated_at": "2016-02-08T02:47:13Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
