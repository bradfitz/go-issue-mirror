{
	"id": 147541872,
	"number": 15236,
	"state": "open",
	"title": "net/rpc: expected Timeout based alternatives to functions for rpc.Dial, rpc.DialHTTP, rpc.DialHTTPPath [proposal].",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\ngo1.6\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\nlinux/amd64\r\n\r\n3. What did you do?\r\n\r\nJust using rpc.DialHTTP, rpc.Dial from an rpc client. \r\n\r\n4. What did you expect to see?\r\n\r\nExpected Timeout based functions for rpc.Dial, rpc.DialHTTP, rpc.DialHTTPPath.\r\n\r\n5. What did you see instead?\r\n\r\nDefault functions like rpc.Dial, rpc.DialHTTP, rpc.DialHTTPPath use just net.Dial which is a dialer without any timeout, this ends up waiting too long on all operating systems leading to a perception that something is hung. It would be nicer to have a timeout based dialer for 'rpc' client, since a failover, or error could be reported to user during a disconnect can be achieved in a quick manner. \r\n\r\nThis is just a proposal, feel free to close if this is intentional to not provide timeout based dialers for rpc. ",
	"user": {
		"login": "harshavardhana",
		"id": 622699,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2016-04-11T20:14:30Z",
	"updated_at": "2016-08-22T23:05:04Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
