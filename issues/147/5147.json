{
	"id": 51283196,
	"number": 5147,
	"state": "open",
	"title": "runtime: consider caching previous map hash value",
	"body": "\u003cpre\u003eMichael Jones notes that the following pattern is common in Go code:\n\n  if v, ok := map[key]; if ok { // or !ok\n      ....\n      map[key] = newValue\n  }\n\nIf hashing that key type is expensive (say: large string/struct) and the map isn't empty\nor very small, the above code does it twice.\n\nIf we kept a per-P cache of the last key \u0026amp; last computed hash value for that P, we\ncould eliminate some hash calls.\n\nProbably worth measuring. (Probably not for Go 1.1)\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"comments": 19,
	"created_at": "2013-03-28T15:08:20Z",
	"updated_at": "2015-04-14T19:45:19Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
