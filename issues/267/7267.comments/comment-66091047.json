{
	"id": 66091047,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eMaybe something like this could do the trick \n\n// unchanged from 1.2. A direct cast to float32 may give 1.0, but should a cast preserve\nthe [0,1) condition? Something like the line below cold be done.\nfunc (r *Rand) Float64() float64 { return float64(r.Int63()) / (1 \u0026lt;\u0026lt; 63) } \n\n//All random bits preserved and it won't be 1.0. Value 1-1.e-7 may need some tweak\nfunc (r *Rand) Float32() float32 { return float32(f64*(1-1.e-7)) } \n\nExample code:\n\u003ca href=\"http://play.golang.org/p/fliCIqAVHT\"\u003ehttp://play.golang.org/p/fliCIqAVHT\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "siritinga",
		"id": 3969105,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-02-05T19:49:38Z",
	"updated_at": "2014-12-22T06:32:24Z"
}
