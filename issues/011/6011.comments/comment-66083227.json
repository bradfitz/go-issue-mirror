{
	"id": 66083227,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eAd 'except for \"if\" blocks, there is no way to make a conversion':\n\n    bool2int := map[bool]int{true: 1}\n    ...\n    myInt := bool2int[myBool] // \"conversion\"\n\nI suggest to think about the possibility that the compiler would recognize map literals\nof the above form, when the're proven to be never mutated, and optimize reading a value\nfrom 'bool2int' map(s) into proper (faster) assembly code - without any map access at\nall.\n\nIt has the little advantage of not extending the language syntax. Which I think should\nnot be done for the sole purpose of generating faster code while no semantic changes are\nbrought by it to the language.\n\nPS: In a more general approach, every 'map[bool]T' can, and probably should - if it's\nnot the case already, be rewritten by the compiler into [2]T behind the scenes while\ntranslating access to such \"maps\" into indexing the array by the ordinal number of the\nbool value.\u003c/pre\u003e",
	"user": {
		"login": "cznic",
		"id": 729580,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-02T07:37:52Z",
	"updated_at": "2014-12-08T10:33:06Z"
}
