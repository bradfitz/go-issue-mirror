{
	"id": 68510927,
	"body": "My test program looks like this:\r\nhttp://play.golang.org/p/p_STYyr-qY\r\n\r\npackage main\r\n\r\n/*\r\n#define WIN32_LEAN_AND_MEAN\r\n#include \u003cwindows.h\u003e\r\n#include \u003cprocess.h\u003e\r\n\r\n__stdcall\r\nstatic void\r\nthreadproc(void *p)\r\n{\r\nfor (;;) Sleep(2000);\r\n}\r\n\r\nvoid\r\ndo(int nthread)\r\n{\r\n   enum { MaxThread = 200000 };\r\n   int i;\r\n   static uintptr_t thread_id[MaxThread];\r\n   if(nthread \u003e MaxThread)\r\n      nthread = MaxThread;\r\n   for(i=0; i\u003cnthread; i++)\r\n      //thread_id[i] = (uintptr_t)CreateThread(0, 0x100000, (void*)threadproc, NULL, STACK_SIZE_PARAM_IS_A_RESERVATION, 0);\r\n      thread_id[i] = (uintptr_t)CreateThread(0, 0x10000, (void*)threadproc, NULL, STACK_SIZE_PARAM_IS_A_RESERVATION, 0);\r\n  for(i=0; i\u003cnthread; i++) {\r\n     WaitForSingleObject((HANDLE)thread_id[i], INFINITE);\r\n     CloseHandle((HANDLE)thread_id[i]);\r\n  }\r\n}\r\n*/\r\nimport \"C\"\r\nimport \"flag\"\r\n\r\nvar n = flag.Int(\"n\", 500, \"number of threads to create\")\r\n\r\nfunc main() {\r\n   flag.Parse()\r\n   C.do(C.int(*n))\r\n}\r\n\r\n\r\nNo matter the stack reservation size (64KB or 1MB), the maximum number of\r\nthread that I can create on my windows xp VM is about 1230.\r\n\r\nDo you spot any problems in this test?",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-01-02T06:38:21Z",
	"updated_at": "2015-01-02T06:40:39Z"
}
