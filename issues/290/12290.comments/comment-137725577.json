{
	"id": 137725577,
	"body": "There is a comment in the source code:\r\n```go\r\n    // A clearer, simpler implementation would be:\r\n    //  return float64(r.Int63n(1\u003c\u003c53)) / (1\u003c\u003c53)\r\n    // However, Go 1 shipped with\r\n    //  return float64(r.Int63()) / (1 \u003c\u003c 63)\r\n    // and we want to preserve that value stream.\r\n    //\r\n    // There is one bug in the value stream: r.Int63() may be so close\r\n    // to 1\u003c\u003c63 that the division rounds up to 1.0, and we've guaranteed\r\n    // that the result is always less than 1.0. To fix that, we treat the\r\n    // range as cyclic and map 1 back to 0. This is justified by observing\r\n    // that while some of the values rounded down to 0, nothing was\r\n    // rounding up to 0, so 0 was underrepresented in the results.\r\n    // Mapping 1 back to zero restores some balance.\r\n    // (The balance is not perfect because the implementation\r\n    // returns denormalized numbers for very small r.Int63(),\r\n    // and those steal from what would normally be 0 results.)\r\n    // The remapping only happens 1/2⁵³ of the time, so most clients\r\n    // will not observe it anyway.\r\n```",
	"user": {
		"login": "stemar94",
		"id": 9718292,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-04T12:37:50Z",
	"updated_at": "2015-09-04T12:38:48Z"
}
