{
	"id": 51281917,
	"number": 4290,
	"state": "closed",
	"title": "os/exec: add example showing use of pipe",
	"body": "\u003cpre\u003eCmd.StdoutPipe, Cmd.StdinPipe, Cmd.StderrPipe all close the client end of the pipe when\nWait returns. This is problematic when there's an independent goroutine that uses the\nclient end of the pipe. For example, this code can\nfail to copy all the data from a command.\n\n    c := exec.Command(\u0026quot;some-command\u0026quot;)\n    r, err := c.StdoutPipe()\n    if err != nil {...}\n    go io.Copy(dest, r)\n    c.Run()\n\nSince all these methods return io.*Closer types, it seems reasonable to me that the\ncaller should have the responsibility for closing them.\u003c/pre\u003e",
	"user": {
		"login": "rogpeppe",
		"id": 66491,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Suggested"
		}
	],
	"comments": 12,
	"closed_at": "2014-12-08T10:22:47Z",
	"created_at": "2012-10-26T13:42:48Z",
	"updated_at": "2016-06-24T22:27:04Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
