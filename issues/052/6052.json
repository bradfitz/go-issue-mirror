{
	"id": 51284609,
	"number": 6052,
	"state": "closed",
	"title": "cmd/gofmt: generate a better error message for composite literals that need to be parenthesized",
	"body": "\u003cpre\u003eCompile and run the following program\n\n  package main\n\n  type S struct {}\n\n  func main() {\n  \t  if x := \u0026amp;S{}; true {\n\t\t  println(\u0026quot;true\u0026quot;)\n\t  }\n  }\n\n  Also available here:\n\n  \u003ca href=\"http://play.golang.org/p/pgwmzxP81l\"\u003ehttp://play.golang.org/p/pgwmzxP81l\u003c/a\u003e\n\n\nWhat do you see instead?\n\n  \u0026quot;prog.go:7:5: expected condition, found simple statement (and 1 more errors)\u0026quot;\n\n  The resolution is to wrap the \u0026amp;S{} in parenthesis. I believe this error message is somwhat opaque and we could do a better job notifying the user about the grammar ambiguity.\u003c/pre\u003e",
	"user": {
		"login": "lexprfuncall",
		"id": 5360361,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2014-12-08T10:33:19Z",
	"created_at": "2013-08-06T00:45:04Z",
	"updated_at": "2016-06-24T22:53:45Z"
}
