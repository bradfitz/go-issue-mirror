{
	"id": 196606079,
	"body": "Hi Minux,\r\n\r\nThank you for your thorough explanation.  Please clarify your final statement (bold below):\r\n\r\nAs long as the deferred functions are called after the\r\nreturned values are updated and **before the next instruction\r\nin the calling function executes,** it doesn't matter whether\r\nit's before the return of the deferring function or after.\r\n\r\nBy \"before the next instruction in the calling function executes\" do you  mean the RET instruction in the calling function or any expression prior to RET in caller?\r\n\r\ni.e.  c( ) (t returnType) {\r\n             defer g() { t++}()\r\n             c_some_expression\r\n             return\r\n        }\r\n\r\nwhere c is caller (g is deferred function)\r\n\r\nThe reason I ask, is because my understanding is that g() will execute after c_some_expression, which is the next instruction in the calling function, but not necessarily the next instruction to be executed after g() returns.  Could please clarify.\r\n\r\nIn any case, the language in both articles is not consistent which adds to the confusion. Can we get ADG to comment, author of the blog.  \r\n\r\n\r\nBest Regards,\r\n\r\n\r\n",
	"user": {
		"login": "kkruups",
		"id": 1913254,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-15T01:50:34Z",
	"updated_at": "2016-03-15T02:03:31Z"
}
