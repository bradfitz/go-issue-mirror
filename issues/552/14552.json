{
	"id": 137060507,
	"number": 14552,
	"state": "closed",
	"title": "The variable 'err' on left side of := is not nil when a return a nil in the method on the right side.",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n1.6\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nMac OS\r\n\r\n3. What did you do?\r\n(Use play.golang.org to provide a runnable example, if possible.)\r\n\r\ntype Error1 struct {\r\n}\r\n\r\nfunc (e *Error1) Error() string {\r\n\treturn \"This is Error1\"\r\n}\r\n\r\ntype Error2 struct {\r\n}\r\n\r\nfunc (e *Error2) Error() string {\r\n\treturn \"This is Error2\"\r\n}\r\n\r\nfunc Test1() (*int, error) {\r\n\teNum := 1\r\n\treturn \u0026eNum, \u0026Error1{}\r\n}\r\n\r\nfunc Test2() (*int, *Error2) {\r\n\teNum := 2\r\n\treturn \u0026eNum, nil\r\n}\r\n\r\nfunc main() {\r\n\r\n\taNum, err := Test1()\r\n\t_, err = Test2()\r\n\r\n\tfmt.Println(*aNum)\r\n\r\n\tif err != nil {\r\n\t\tfmt.Println(\"err is not nil\")\r\n\t} else {\r\n\t\tfmt.Println(\"err is nil\")\r\n\t}\r\n}\r\n\r\n4. What did you expect to see?\r\nerr is nil\r\n\r\n5. What did you see instead?\r\nerr is not nil\r\n\r\n",
	"user": {
		"login": "chance1254",
		"id": 2375245,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-02-28T16:31:30Z",
	"created_at": "2016-02-28T14:54:54Z",
	"updated_at": "2016-02-29T04:44:24Z"
}
