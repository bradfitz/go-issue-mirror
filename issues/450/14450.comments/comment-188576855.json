{
	"id": 188576855,
	"body": "This issue is repeatable with existing package too:\r\n\r\n```\r\n\u003e mkdir /tmp/gopath2\r\n\u003e GOPATH=/tmp/gopath2 go get golang.org/x/tools/cmd/bundle\r\n\u003e GOPATH=/tmp/gopath2 go get -u .../\r\n\r\n/tmp/gopath2/src/golang.org/x/net/html/charset/charset.go:20:2: cannot find package \"golang.org/x/text/encoding\" in any of:\r\n\t/home/tmwh/go/src/golang.org/x/text/encoding (from $GOROOT)\r\n\t/tmp/gopath2/src/golang.org/x/text/encoding (from $GOPATH)\r\n/tmp/gopath2/src/golang.org/x/net/html/charset/charset.go:21:2: cannot find package \"golang.org/x/text/encoding/charmap\" in any of:\r\n\t/home/tmwh/go/src/golang.org/x/text/encoding/charmap (from $GOROOT)\r\n\t/tmp/gopath2/src/golang.org/x/text/encoding/charmap (from $GOPATH)\r\n/tmp/gopath2/src/golang.org/x/net/html/charset/charset.go:22:2: cannot find package \"golang.org/x/text/encoding/htmlindex\" in any of:\r\n\t/home/tmwh/go/src/golang.org/x/text/encoding/htmlindex (from $GOROOT)\r\n\t/tmp/gopath2/src/golang.org/x/text/encoding/htmlindex (from $GOPATH)\r\n/tmp/gopath2/src/golang.org/x/net/html/charset/charset.go:23:2: cannot find package \"golang.org/x/text/transform\" in any of:\r\n\t/home/tmwh/go/src/golang.org/x/text/transform (from $GOROOT)\r\n\t/tmp/gopath2/src/golang.org/x/text/transform (from $GOPATH)\r\n/tmp/gopath2/src/golang.org/x/net/http2/h2i/h2i.go:38:2: cannot find package \"golang.org/x/crypto/ssh/terminal\" in any of:\r\n\t/home/tmwh/go/src/golang.org/x/crypto/ssh/terminal (from $GOROOT)\r\n\t/tmp/gopath2/src/golang.org/x/crypto/ssh/terminal (from $GOPATH)\r\n```\r\n\r\nIt happens because `golang.org/x/tools/cmd/html2article` depends on `golang.org/x/net/html` and after `golang.org/x/net/html` is successfully downloaded we are trying to import all packages (`.../`) from its repository. It contains `golang.org/x/net/html/charset` which is not imported in any other packages. That's why its imports (`golang.org/x/text/encoding`, `golang.org/x/text/encoding/charmap`, `golang.org/x/text/encoding/htmlindex`...) were not downloaded. \r\n\r\nI've created the minimal packages structure for reproducing this:\r\nhttps://github.com/tmwh/go-get-issue-14450\r\nhttps://github.com/tmwh/go-get-issue-14450-b-dependency\r\nhttps://github.com/tmwh/go-get-issue-14450-d-dependency\r\n\r\nI've come up with 2 possible solutions for this problem\r\n- Don't try to import packages that were not downloaded\r\n- Download all packages that are matching the passed path even if they were downloaded as part of the other packages' repository.\r\n\r\nThe first one was smaller, so I've decided to submit it https://go-review.googlesource.com/19892 I can submit the second solution too, if it is the way you would like to handle that.",
	"user": {
		"login": "tmwh",
		"id": 1088053,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-25T02:51:21Z",
	"updated_at": "2016-02-25T02:57:55Z"
}
