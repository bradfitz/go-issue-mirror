{
	"id": 139459741,
	"number": 14726,
	"state": "closed",
	"title": "proposal: x/net/bosh: New package",
	"body": "I'd like to propose a new package at `x/net/bosh` that would implement an API similar to [`x/net/websocket`](https://godoc.org/golang.org/x/net/websocket) except for [XEP-0124: Bidirectional-streams Over Synchronous HTTP (BOSH)](https://xmpp.org/extensions/xep-0124.html).\r\n\r\nBOSH is an HTTP long-polling technique for emulating a bidirectional text stream (mostly XML, but the spec leaves it open ended so that you can stream anything) that was originally created (and is most often used for) XMPP via [XEP-0206: XMPP Over Bosh](https://xmpp.org/extensions/xep-0206.html).\r\n\r\nThis proposal is to implement a simple HTTP handler for BOSH, and ensure that the API can be used to implement profiles such as the XMPP over bosh spec (though this probably wouldn't be implemented in the package itself).\r\n\r\nI have started on an example implementation [here](https://godoc.org/bitbucket.org/mellium/bosh), but I think the actual BOSH part of it might be a good fit for the x/net/ packages (and keeping it right alongside the websocket implementation would be nice for servers that want to support both transports).\r\n\r\nThe API I'm proposing to start is just a simple `http.Handler`:\r\n\r\n```go\r\ntype SessionManager\r\n\r\n// Cleanly shut down all sessions managed by the session manager.\r\nfunc (*SessionManager) Close() {}\r\n\r\n// Returns a channel that is closed when the session manager shuts down.\r\nfunc (*SessionManager) Done() \u003c-chan bool {}\r\n\r\n// Satisfy http.Handler and handle incoming BOSH payloads.\r\nfunc (sm *SessionManager) ServeHTTP(w http.ResponseWriter, r *http.Request) {}\r\n```",
	"user": {
		"login": "SamWhited",
		"id": 512573,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		},
		{
			"name": "Proposal-Declined"
		}
	],
	"comments": 3,
	"closed_at": "2016-03-09T16:51:31Z",
	"created_at": "2016-03-09T02:48:59Z",
	"updated_at": "2016-03-09T16:51:47Z"
}
