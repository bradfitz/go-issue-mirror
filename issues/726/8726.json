{
	"id": 51288610,
	"number": 8726,
	"state": "open",
	"title": "x/tools/cmd/cover: does not take into account cgoâ€™s preprocessing",
	"body": "by **ivan.ukhov**:\n\n\u003cpre\u003eHello,\n\n\nConsider studying the test coverage of the attached example (main.go and main_test.go).\nThe example relies on some C code and, thus, involves cgo. Cgo does some preprocessing\nto the source code (main.cgo1.go) and, in particular, transforms the line\n\n13\tif C.check(C.int(0)) != 0 {\n\ninto\n\n15\tif _Cfunc_check(_Ctype_int(0)) != 0 {\n\nThe coverage profile reported by `go test -coverprofile cover.out` (cover.out) is given\nwith respect to the preprocessed code, not the original one. Consequently, some column\nnumbers reported in cover.out are invalid with respect to the original code. As a\nresult, the htmlGen function in html.go (the cover command) fails to properly detect\nblock boundaries, which boils down to some span tags left open (cover.html) and, hence,\nincorrect highlighting in HTML.\n\n\nBest wishes,\nIvan\n\n$ go version\ngo version go1.3.1 darwin/amd64\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/8726/0/main.go\"\u003emain.go\u003c/a\u003e (219 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/8726/0/main_test.go\"\u003emain_test.go\u003c/a\u003e (75 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/8726/0/cover.out\"\u003ecover.out\u003c/a\u003e (124 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/8726/0/cover.html\"\u003ecover.html\u003c/a\u003e (2217 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/8726/0/main.cgo1.go\"\u003emain.cgo1.go\u003c/a\u003e (605 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2014-09-14T11:58:26Z",
	"updated_at": "2015-04-14T19:37:33Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
