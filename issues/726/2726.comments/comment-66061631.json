{
	"id": 66061631,
	"body": "\u003ca id=\"c20\"\u003e\u003c/a\u003eComment 20:\n\n\u003cpre\u003eThe first trivial improvement here: \u003ca href=\"http://golang.org/cl/5555070/\"\u003ehttp://golang.org/cl/5555070/\u003c/a\u003e\n\nInstead of filling hashPrev and hashHead with zeros at every fillDeflate, it uses\nhashOffset that is adjusted at fill.\n\nImpact (I test on 1.5 GB avi file), -6:\n\n$ time gzip \u0026lt; /tmp/lala.avi \u0026gt; /dev/null\nreal\t0m46.657s\nuser\t0m46.415s\nsys\t0m0.200s\n\nOriginal Go (b372a927701e tip)\n$ 6g gogzip.go \u0026\u0026 6l -o gogzip gogzip.6 \u0026\u0026 time -p ./gogzip  \u0026lt; /tmp/lala.avi \u0026gt;\n/dev/null\nreal 120.20\nuser 119.63\nsys 0.45\n\nPatched Go:\n$ 6g gogzip.go \u0026\u0026 6l -o gogzip gogzip.6 \u0026\u0026 time -p ./gogzip  \u0026lt; /tmp/lala.avi \u0026gt;\n/dev/null\nreal 108.85\nuser 108.35\nsys 0.40\n\nIn short:\n\ngzip: 46.657\noriginal Go: 120.20 (2.57x gzip)\npatched Go: 108.85 (2.33x gzip, 10% improvement)\u003c/pre\u003e",
	"user": {
		"login": "krasin",
		"id": 21159,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-01-22T02:46:05Z",
	"updated_at": "2014-12-22T06:07:57Z"
}
