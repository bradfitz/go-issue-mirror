{
	"id": 196103814,
	"body": "Hijack and HTTP/2 are fundamentally incompatible. HTTP/2 permits multiple requests at a time. What would hijacking a request mean? What protocol do you expect to speak afterwards?\r\n\r\nThe usual (basically only) reason for wanting Hijack is for websockets, but websockets also don't work over HTTP/2 (due to the IETF working groups forgetting about it until the last second, basically), so browsers fall back to HTTP/1.1 before making a websocket request. You can have a whole site that's only HTTP/2, but once you try to use websockets it'll create a new TCP/TLS connection just to speak a bit of HTTP/1.1, enough do the upgrade to websockets.\r\n\r\nIf you have some custom client that's not websockets and you're speaking your own protocol, you can either just not use HTTP/2 at all, or you can do bidirectional streaming (streaming the request and streaming the response) from one Go http.Handler to an HTTP/2 client.\r\n\r\nI'm closing this because this sounds hypothetical and there's no intention to address this. If you have a valid use case I didn't think of, though, then we can reopen this.",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-14T01:52:53Z",
	"updated_at": "2016-03-14T01:52:53Z"
}
