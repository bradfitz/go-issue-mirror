{
	"id": 173945576,
	"body": "Those errors do look similar to the ones we saw on NetBSD and DragonFly.\r\n\r\n@crawshaw Is it possible for you to run this C program on Darwin/ARM, to see how signal stacks are handled for newly created threads?\r\n\r\n    #include \u003cerrno.h\u003e\r\n    #include \u003csignal.h\u003e\r\n    #include \u003cstdio.h\u003e\r\n    #include \u003cstdlib.h\u003e\r\n    #include \u003cstring.h\u003e\r\n    #include \u003cpthread.h\u003e\r\n\r\n    static void\r\n    die (const char *s)\r\n    {\r\n      perror (s);\r\n      exit (EXIT_FAILURE);\r\n    }\r\n\r\n    static void\r\n    printsigstack (const char *prefix)\r\n    {\r\n      stack_t ss;\r\n\r\n      if (sigaltstack (NULL, \u0026ss) \u003c 0)\r\n\tdie (\"sigaltstack get\");\r\n      printf (\"%s %p 0x%lx 0x%x\\n\", prefix, ss.ss_sp, (unsigned long) ss.ss_size,\r\n\t      (unsigned int) ss.ss_flags);\r\n    }\r\n\r\n    static void *\r\n    thread (void *arg)\r\n    {\r\n      stack_t ss;\r\n\r\n      printsigstack (\"thread\");\r\n      ss.ss_sp = malloc (SIGSTKSZ);\r\n      if (ss.ss_sp == NULL)\r\n\tdie (\"malloc\");\r\n      ss.ss_size = SIGSTKSZ;\r\n      ss.ss_flags = 0;\r\n      if (sigaltstack (\u0026ss, NULL) \u003c 0)\r\n\tdie (\"sigaltstack set\");\r\n      return NULL;\r\n    }\r\n\r\n    int\r\n    main ()\r\n    {\r\n      pthread_t tid;\r\n      int i;\r\n      stack_t ss;\r\n\r\n      printsigstack (\"main 1\");\r\n\r\n      i = pthread_create (\u0026tid, NULL, thread, NULL);\r\n      if (i != 0)\r\n\t{\r\n\t  errno = i;\r\n\t  die (\"pthread_create\");\r\n\t}\r\n\r\n      i = pthread_join (tid, NULL);\r\n      if (i != 0) {\r\n\terrno = i;\r\n\tdie (\"pthread_join\");\r\n      }\r\n\r\n      printsigstack (\"main 2\");\r\n\r\n      ss.ss_sp = malloc (SIGSTKSZ);\r\n      if (ss.ss_sp == NULL)\r\n\tdie (\"malloc\");\r\n      ss.ss_size = SIGSTKSZ;\r\n      ss.ss_flags = 0;\r\n      if (sigaltstack (\u0026ss, NULL) \u003c 0)\r\n\tdie (\"sigaltstack set\");\r\n\r\n      printsigstack (\"main 3\");\r\n\r\n      i = pthread_create (\u0026tid, NULL, thread, NULL);\r\n      if (i != 0)\r\n\t{\r\n\t  errno = i;\r\n\t  die (\"pthread_create\");\r\n\t}\r\n\r\n      i = pthread_join (tid, NULL);\r\n      if (i != 0) {\r\n\terrno = i;\r\n\tdie (\"pthread_join\");\r\n      }\r\n\r\n      printsigstack (\"main 4\");\r\n\r\n      return 0;\r\n    }\r\n",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-22T15:10:42Z",
	"updated_at": "2016-01-22T15:10:42Z"
}
