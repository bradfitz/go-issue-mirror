{
	"id": 51284122,
	"number": 5746,
	"state": "open",
	"title": "build: test cleanup wrt wg.Done",
	"body": "\u003cpre\u003ejust like this test example:\n\nfunc TestFailed(t *testing.T) {\n\tvar wg sync.WaitGroup\n\tfor i := 0; i \u0026lt; 2; i++ {\n\t\twg.Add(1)\n\t\tgo func(id int) {\n\t\t\t// defer wg.Done()\n\t\t\tt.Fatalf(\u0026quot;TestFailed: id = %v\\n\u0026quot;, id)\n\t\t\twg.Done()\n\t\t}(i)\n\t}\n\twg.Wait()\n}\n\ngo test\nfatal error: all goroutines are asleep - deadlock!\n\n---\n\nWhen the t.Fatalf panic, goroutine can't reach wg.Done().\nSo wg.Wait() deadlock!\n\nThere are lots of similar iusses, eg:\n\u003ca href=\"http://golang.org/src/pkg/net/rpc/server_test.go?s=12968:13320#L548\"\u003ehttp://golang.org/src/pkg/net/rpc/server_test.go?s=12968:13320#L548\u003c/a\u003e\n\nIf the issue verified, i can submit patch.\u003c/pre\u003e",
	"user": {
		"login": "chai2010",
		"id": 2295542,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Started"
		}
	],
	"comments": 10,
	"created_at": "2013-06-21T03:18:31Z",
	"updated_at": "2015-04-14T19:45:19Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
