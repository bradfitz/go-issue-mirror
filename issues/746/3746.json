{
	"id": 51281090,
	"number": 3746,
	"state": "closed",
	"title": "net: problem with Close and final packet delivery",
	"body": "by **feixings**:\n\n\u003cpre\u003elatest version of Go:1.0.1 „ÄÅ1.0.2\nWhat steps will reproduce the problem?\n1.cd C:\\Go\\src\\pkg\\net\\rpc\\jsonrpc\n2.go test\n\nWhat is the expected output?\ntest no pass\n\nWhat do you see instead?\nrpc:server cannot decode request\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n8g\n\nWhich operating system are you using?\nwindows 7\n\nWhich version are you using?  (run 'go version')\n1.0.2\n\nPlease provide any additional information below.\n/**\n* ArithClient\n */\n\npackage main\n\nimport (\n\t\u0026quot;net/rpc\u0026quot;\n\t\u0026quot;fmt\u0026quot;\n\t\u0026quot;log\u0026quot;\n)\n\ntype Args struct {\n\tA, B int\n}\n\ntype Quotient struct {\n\tQuo, Rem int\n}\n\nfunc main() {\n\n\tclient, err := rpc.DialHTTP(\u0026quot;tcp\u0026quot;, \u0026quot;127.0.0.1:1234\u0026quot;)\n\tif err != nil {\n\t\tlog.Fatal(\u0026quot;dialing:\u0026quot;, err)\n\t}\n\t// Synchronous call\n\targs := Args{17, 8}\n\tvar reply int\n\terr = client.Call(\u0026quot;Arith.Multiply\u0026quot;, args, \u0026amp;reply)\n\tif err != nil {\n\t\tlog.Fatal(\u0026quot;arith error:\u0026quot;, err)\n\t}\n\tfmt.Printf(\u0026quot;Arith: %d*%d=%d\\n\u0026quot;, args.A, args.B, reply)\n\n\tvar quot Quotient\n\terr = client.Call(\u0026quot;Arith.Divide\u0026quot;, args, \u0026amp;quot)\n\tif err != nil {\n\t\tlog.Fatal(\u0026quot;arith error:\u0026quot;, err)\n\t}\n\tfmt.Printf(\u0026quot;Arith: %d/%d=%d remainder %d\\n\u0026quot;, args.A, args.B, quot.Quo, quot.Rem)\n\n}\n\n/**\n* ArithServer\n */\n\npackage main\n\nimport (\n\t\u0026quot;fmt\u0026quot;\n\t\u0026quot;net/rpc\u0026quot;\n\t\u0026quot;errors\u0026quot;\n\t\u0026quot;net/http\u0026quot;\n)\n\ntype Args struct {\n\tA, B int\n}\n\ntype Quotient struct {\n\tQuo, Rem int\n}\n\ntype Arith int\n\nfunc (t *Arith) Multiply(args *Args, reply *int) error {\n\t*reply = args.A * args.B\n\treturn nil\n}\n\nfunc (t *Arith) Divide(args *Args, quo *Quotient) error {\n\tif args.B == 0 {\n\t\treturn errors.New(\u0026quot;divide by zero\u0026quot;)\n\t}\n\tquo.Quo = args.A / args.B\n\tquo.Rem = args.A % args.B\n\treturn nil\n}\n\nfunc main() {\n\n\tarith := new(Arith)\n\trpc.Register(arith)\n\trpc.HandleHTTP()\n\n\terr := http.ListenAndServe(\u0026quot;:1234\u0026quot;, nil)\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t}\n}\n\nrun result:\n\nrpc:server cannot decode request:WSARecv tcp 127.0.0.1:1234:The specified network name\nis no langer available.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/3746/0/rpc-demo.zip\"\u003erpc-demo.zip\u003c/a\u003e (1126 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 11,
	"closed_at": "2014-12-08T10:19:46Z",
	"created_at": "2012-06-16T14:26:48Z",
	"updated_at": "2016-06-24T22:20:31Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
