{
	"id": 118660046,
	"number": 13386,
	"state": "open",
	"title": "runtime: annotation for sysAlloced types",
	"body": "@randall77 recently found some subtle issues related to write barriers on fields that point from runtime structures allocated from non-GCed (and hence non-scanned) memory to GCed heap memory. I manually audited all non-GCed structures to find any other such pointers, but obviously manual auditing can get out of date.\r\n\r\nOne possible way to help automate this is to add an annotation on types that are allocated from non-GCed memory. This annotation would disallow pointers to types that do not have this annotation and would disallow calling new on this type (implicit heap allocations are already disallowed in the runtime). It should probably also disallow unsafe.Pointer in annotated types (effectively requiring uintptr instead).\r\n\r\n/cc @randall77 @ianlancetaylor @rsc @RLH ",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"created_at": "2015-11-24T17:13:47Z",
	"updated_at": "2016-10-12T19:20:09Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
