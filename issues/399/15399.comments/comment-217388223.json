{
	"id": 217388223,
	"body": "I have seen this issue in production. I have a very high opinion of my coworker who wrote that code, still he did this mistake. A more inexperienced programmer might even be more likely to do this mistake. My goal is to find a way to make this more unlikely in the future and thus make this world's software a little bit more secure.\r\n\r\nI know that strict checks are not in the spirit of Go. If you really want to shoot yourself in the foot, Go allows you to do so. Still, I think that one of the goals of Go and especially of the `html/template` package is to make it **easier** to write good and safe code. We do have slice boundary checks and we make it very explicit with `unsafe` to circumvent them. One may argue that `template.JS` is at the same level as `unsafe`, but to me it seems like one is quicker to use `template.JS` than to use `unsafe`.\r\n\r\nMaybe a good solution here would be to mention the `json.Unmarshal` path in the docs instead of mentioning the individual attack vectors? I think people discard this option too quickly because it looks like wasted CPU cycles if you can also directly include the JSON.",
	"user": {
		"login": "neelance",
		"id": 16184,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-06T08:51:47Z",
	"updated_at": "2016-05-06T08:51:47Z"
}
