{
	"id": 165978763,
	"number": 16399,
	"state": "open",
	"title": "path/filepath: Walk is slow",
	"body": "On my Mac laptop (SSD, warm caches),\r\n\r\n```\r\nbradfitz@laptop ~$ time (find src/ | wc -l)\r\n   42408\r\n\r\nreal    0m0.177s\r\nuser    0m0.035s\r\nsys     0m0.144s\r\nbradfitz@laptop ~$ time (find src/ | wc -l)\r\n   42408\r\n\r\nreal    0m0.178s\r\nuser    0m0.036s\r\nsys     0m0.144s\r\nbradfitz@laptop ~$ time (find src/ | wc -l)\r\n   42408\r\n\r\nreal    0m0.177s\r\nuser    0m0.035s\r\nsys     0m0.144s\r\n```\r\n\r\nBut with a basic use of `filepath.Walk` instead of `find`:\r\n\r\n```go\r\n$ cat walk.go \r\npackage main\r\n\r\nimport (\r\n        \"fmt\"\r\n        \"log\"\r\n        \"os\"\r\n        \"path/filepath\"\r\n)\r\n\r\nfunc main() {\r\n        err := filepath.Walk(\"src\", func(path string, fi os.FileInfo, err error) error {\r\n                if err != nil {\r\n                        return err\r\n                }\r\n                fmt.Println(path)\r\n                return nil\r\n        })\r\n        if err != nil {\r\n                log.Fatal(err)\r\n        }\r\n}\r\n```\r\n\r\nIt's much slower:\r\n\r\n```\r\nbradfitz@laptop ~$ time (./walk  | wc -l)\r\n   42408\r\n\r\nreal    0m0.447s\r\nuser    0m0.123s\r\nsys     0m0.406s\r\nbradfitz@laptop ~$ time (./walk  | wc -l)\r\n   42408\r\n\r\nreal    0m0.434s\r\nuser    0m0.120s\r\nsys     0m0.399s\r\nbradfitz@laptop ~$ time (./walk  | wc -l)\r\n   42408\r\n\r\nreal    0m0.435s\r\nuser    0m0.119s\r\nsys     0m0.398s\r\n```\r\n\r\nThis is the bulk of the `goimports` execution time. `goimports` actually does a slightly parallelized walk with goroutines (which helps on NFS filesystems), but it doesn't seem to matter. I'm just trying to get any Go program to be closer in performance to `find`.\r\n\r\nAny clues?\r\n\r\nSpeed tracking bug for `goimports` is #16367\r\n\r\n/cc @josharian @ianlancetaylor \r\n\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "HelpWanted"
		},
		{
			"name": "Performance"
		}
	],
	"comments": 21,
	"created_at": "2016-07-17T14:22:12Z",
	"updated_at": "2016-08-01T16:01:32Z",
	"milestone": {
		"id": 1748849,
		"number": 42,
		"title": "Go1.8Maybe"
	}
}
