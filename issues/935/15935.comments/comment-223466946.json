{
	"id": 223466946,
	"body": "\u003e Shouldn't in theory all error types the Go API returns be exported so a user can always detect them reliably without resorting to string comparisons?\r\n\r\nI don't entirely disagree. I have some ugly code that detects net/http's errTimeout by inspecting the error string. It would be nice if that error was exported.\r\n\r\nThe counter-argument is that this forces the API to have a mostly-stable list of possible errors, which can be difficult. How do you decide which errors to export? If your errors are too abstract, the error messages are less useful. If your errors are too low-level, there can be heavy churn as the code changes and old errors are deprecated (e.g., see issue #15150).\r\n\r\nStrictly speaking, I don't think all errors should be exported, but maybe there's a small set of stable errors to export? ErrRequestCanceled and ErrResponseHeadersTimedOut are both good candidates since they relate directly to behaviors controlled by the net/http API.",
	"user": {
		"login": "tombergan",
		"id": 13954200,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-03T01:16:15Z",
	"updated_at": "2016-06-03T01:16:15Z"
}
