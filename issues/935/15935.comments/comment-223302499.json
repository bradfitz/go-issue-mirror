{
	"id": 223302499,
	"body": "@davecheney we use http for some internal communication. It's around 5000 requests per second with a 100ms timeout before we cancel the request. At the moment we log all errors but would like to ignore errors that aren't important to us. If `errRequestCancalled` was exported we could type assert this error and ignore it in a more robust way than doing a `strings.HasSuffix` and hoping the messages never changes.\r\n\r\nI'm not sure which errors you would call temporary.\r\n\r\nFor example we already ignore connection refused errors using:\r\n```go\r\n\tif uerr, ok := err.(*url.Error); ok {\r\n\t\tif noerr, ok := uerr.Err.(*net.OpError); ok {\r\n\t\t\tif scerr, ok := noerr.Err.(*os.SyscallError); ok {\r\n\t\t\t\tif scerr.Err == syscall.ECONNREFUSED {\r\n\t\t\t\t\tignore = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n```",
	"user": {
		"login": "erikdubbelboer",
		"id": 522870,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-02T14:07:33Z",
	"updated_at": "2016-06-02T14:07:33Z"
}
