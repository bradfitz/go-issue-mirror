{
	"id": 98460281,
	"number": 11972,
	"state": "open",
	"title": "runtime: Version() string should be more easily discernible",
	"body": "runtime.Version() prints something like\r\n```\r\ndevel +226b28c Fri Jul 31 18:49:57 2015 +0000\r\n```\r\nat tip, and, if at a release, something like\r\n```\r\ngo1.4.2\r\n```\r\nThere's no easy way to determine which version is younger or older. Tests in external repos sometimes need to be able to distinguish against which version of the std lib they are running; typically they require a certain \"minimal\" version.\r\n\r\nThere could be a runtime.VersionNumber() that returns some form of monotonically increasing value/string; or perhaps runtime.VersionTime() could return a value that is easily converted into a time.Time. Alternatively, runtime.Version() could always start with the most recent version, followed by the current version hash if _not_ at a release. That would at least make it possible to discern against tagged releases. For instance:\r\n```\r\ngo1.4.2\r\n```\r\nmeans we are at the tagged release 1.4.2.\r\n```\r\ngo1.4.2 devel +226b28c Fri Jul 31 18:49:57 2015 +0000\r\n```\r\nwould mean we are at devel +226b28c past 1.4.2, and 1.4.2 is the most recent tagged release.\r\n\r\nAnother alternative would be to have a time stamp always.",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2015-07-31T19:53:41Z",
	"updated_at": "2015-07-31T20:06:55Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
