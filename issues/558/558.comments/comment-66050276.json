{
	"id": 66050276,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eWhen building Go on my windows system, for cov and prof, make gets install-\nmingw32_nt-5.1 from uname, which isn't explicitly handled so the executables would \nnever make it to GOBIN. On other windows systems uname could return something a \nlittle bit different, eg mingw32_nt-5.2, and it doesn't seem reasonable to \nexplicitly set cases for all the variations in the make file just to put the prof \nand cov executables in GOBIN. \n\nThere's currently no way to get the prof and cov executables in to GOBIN using the \ncurrent make files when building Go on windows. Alternatively, if the findstring \nconditional check is used and uname returns a string containing \"mingw\" the default \ninstall path, GOBIN, can be used.\n\nThe crazy thing here is that I use Go on a linux laptop and macbook pro at work and \nhome but the damn computers in our lab are 95% windows, which is where I'd really \nlike to be able to use Go!\u003c/pre\u003e",
	"user": {
		"login": "jpoirier",
		"id": 490350,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-01-25T19:59:09Z",
	"updated_at": "2014-12-08T10:05:02Z"
}
