{
	"id": 51280797,
	"number": 3558,
	"state": "closed",
	"title": "cmd/gc: confused by pakcage names",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n1. Create the following hierarchy in $GOPATH/pkg\n\ntmp\n|-- main.go\n|-- pkg1\n|   `-- pkg.go\n`-- pkg2\n    `-- pkg.go\n\n2. main.go is\n\npackage main\n\nimport (\n\tpkg \u0026quot;tmp/pkg1\u0026quot;\n\t\u0026quot;tmp/pkg2\u0026quot;\n)\n\nfunc main() {\n\tprintln(pkg.N)\n\tprintln(pkg2.N)\n}\n\n3. pkg1/pkg.go and pkg2/pkg.go are *identical*\n\npackage pkg1\n\nvar N = 2\n\nWhat is the expected output? What do you see instead?\n\nExpected: compiles file, outputs\n2\n2\n\nInstead:\n$ go build main.go\n# command-line-arguments\n./main.go:5: imported and not used: \u0026quot;tmp/pkg2\u0026quot;\n./main.go:10: undefined: pkg2\u003c/pre\u003e",
	"user": {
		"login": "remyoudompheng",
		"id": 175246,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:18:42Z",
	"created_at": "2012-04-22T13:39:20Z",
	"updated_at": "2016-06-24T22:18:14Z"
}
