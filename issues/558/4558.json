{
	"id": 51282306,
	"number": 4558,
	"state": "closed",
	"title": "spec: The blank identifier is underspecified",
	"body": "\u003cpre\u003eAll the spec says about the blank identifier is\n(\u003ca href=\"http://tip.golang.org/ref/spec#Blank_identifier)\"\u003ehttp://tip.golang.org/ref/spec#Blank_identifier)\u003c/a\u003e:\n\n\u0026quot;\u0026quot;\u0026quot;The blank identifier, represented by the underscore character _, may\nbe used in a declaration like any other identifier but the declaration does not\nintroduce a new binding.\u0026quot;\u0026quot;\u0026quot;\n\nHowever, at least in gc, it seems to mean more. It's possibly to declare types called _,\nbut those types can't be used (with a strange diagnostic):\n\n  $ cat tst.go\n  package main\n  func main() {\n    type _ int\n    var i _ = 4\n    println(i)\n  }\n  $ ~/src/go/bin/go build tst.go \n  # command-line-arguments\n  ./tst.go:5: cannot use _ as value\n\n\nThe spec doesn't say that this isn't legal.\n\nThe spec doesn't say how _ should be treated in expressions as far as I can tell (gc\ndoesn't allow it, which makes sense, but it's not mentioned).\u003c/pre\u003e",
	"user": {
		"login": "nico",
		"id": 3487,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:24:15Z",
	"created_at": "2012-12-16T21:57:00Z",
	"updated_at": "2016-06-24T22:30:08Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
