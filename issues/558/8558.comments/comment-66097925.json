{
	"id": 66097925,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eI agree with dsymonds and iant. The spec is pretty clear about what happens. Once a map\nentry has been produced, it has been produced. It won't be produced again, whether you\ndelete it or not. Adding the suggested sentence is akin to saying \"a = a - 1\" will not\ncorrupt the value of a.\n\nI suspect what you are concerned about is perhaps something else (and your example -\nwhich can be simplified to \u003ca href=\"http://play.golang.org/p/pA0CQHoHvb\"\u003ehttp://play.golang.org/p/pA0CQHoHvb\u003c/a\u003e btw. - is not necessarily\na good test case): It is possible to construct programs where elements are deleted\ndepending on specific events, and the outcome (the resulting set elements, not just the\niteration order) is not deterministic because the map iteration order is not specified.\nHere's an example:\n\n\u003ca href=\"http://play.golang.org/p/YGTThFIANO\"\u003ehttp://play.golang.org/p/YGTThFIANO\u003c/a\u003e\n\nNOTE: you must run this outside the playground since the playground always produces the\nsame (unspecified) iteration order at the moment.\n\nIn this example, you get different resulting sets depending on the iteration order.\nFurthermore, you may even get different sizes of sets.\n\nBut again, there's nothing wrong with the spec, and if you don't want the unspecified\nresult in this case, you need to first sort the set keys and iterate in a specific order.\u003c/pre\u003e\n\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-08-22T00:21:25Z",
	"updated_at": "2014-12-08T10:47:31Z"
}
