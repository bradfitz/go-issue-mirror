{
	"id": 51286883,
	"number": 7558,
	"state": "closed",
	"title": "gccgo: initialization loops are not described",
	"body": "\u003cpre\u003eTake a program with an import loop such as \u003ca href=\"http://play.golang.org/p/29okKQEmlZ\"\u003ehttp://play.golang.org/p/29okKQEmlZ\u003c/a\u003e.\n\ngc reports the cycle itself. gccgo merely reports that there is a cycle. That makes it a\nlot harder to diagnose.\n\nIn particular, I found a situation in some code where gc happily compiles it but gccgo\nclaims \u0026quot;error: variable initializer refers to itself\u0026quot;. I can't find the\ninitialization loop, but I'm not sure whether gc, gccgo or the program is at fault. In\nparticular, one of the two compilers must be at fault.\u003c/pre\u003e",
	"user": {
		"login": "dsymonds",
		"id": 31506,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "paranoiacblack",
		"id": 1035296,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2015-01-22T17:14:55Z",
	"created_at": "2014-03-17T04:38:17Z",
	"updated_at": "2016-06-25T01:29:59Z"
}
