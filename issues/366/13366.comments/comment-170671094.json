{
	"id": 170671094,
	"body": "For reference, there doesn't actually appear to be a java api to report screen dimensions in pt so I ran the following on device:\r\n\r\n```java\r\nDisplayMetrics dm = new DisplayMetrics();\r\ngetWindowManager().getDefaultDisplay().getMetrics(dm);\r\nLog.d(\"@@@\", \"width in px: \" + dm.widthPixels);\r\n\r\nfor (float n = 162; n \u003c= 180; n += 0.5) {\r\n  float v = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_PT, n, dm);\r\n  Log.d(\"@@@\", n + \"pt: \" + v);\r\n}\r\n```\r\n\r\n`162pt` is what's reported by gomobile. `180pt` is what I'd expect for `72ppi`. Here's the results of the for-loop:\r\n\r\n```\r\nwidth in px: 720\r\n162.0pt: 663.6758\r\n...\r\n175.5pt: 718.9821\r\n176.0pt: 721.0305\r\n...\r\n180.0pt: 737.41754\r\n```\r\n\r\nThis only serves to confuse the matter as ppi appears not to be 72.\r\n\r\nI created a layout as follows:\r\n\r\n```xml\r\n\u003cLinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"horizontal\"\u003e\r\n\r\n    \u003cView\r\n        android:layout_width=\"719px\"\r\n        android:layout_height=\"20dp\"\r\n        android:background=\"#ff0000\" /\u003e\r\n    \u003cView\r\n        android:layout_width=\"1px\"\r\n        android:layout_height=\"20dp\"\r\n        android:background=\"#0000ff\" /\u003e\r\n\r\n\u003c/LinearLayout\u003e\r\n```\r\n\r\nThis does what is expected, filling the entire width of the screen with a single pixel width blue line at the end. Here's a screenshot (I framed screenshot to make more apparent before cropping).\r\n\r\n![device-2016-01-11-135249](https://cloud.githubusercontent.com/assets/92266/12244797/f8defd52-b86a-11e5-845d-d48d65bb9f4a.png)\r\n",
	"user": {
		"login": "dskinner",
		"id": 92266,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-11T19:56:27Z",
	"updated_at": "2016-01-11T19:56:27Z"
}
