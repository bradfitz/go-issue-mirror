{
	"id": 66085323,
	"body": "\u003ca id=\"c7\"\u003e\u003c/a\u003eComment 7:\n\n\u003cpre\u003eBoth gc and gccgo compile the sample program without error.  It's because they both\nimplement x.M as 1) see if the type of x has a method M; 2) if not, see if the type of\n*x has a method M.\n\nThe spec says \"Selectors automatically dereference pointers to structs.  If x is a\npointer to a struct, x.y is shorthand for (*x).y; if the field y is also a pointer to a\nstruct, x.y.z is shorthand for (*(*x).y).z, and so on.\"  So both compilers are\nimplementing this approach, although arguably this should only apply to fields, not\nmethods.\n\nFor that matter both gc and gccgo accept this, which does violate the present spec,\nsince the spec explicitly says \"pointers to structs.\"  But of course this work\nconsistently for all types, not just structs.\n\npackage main\n\ntype I int\n\nfunc (p *I) M() {}\t\n\nvar i I\nvar pi *I\nvar ppi **I\n\nfunc main() {\n\ti.M()\n\tpi.M()\n\tppi.M()\n}\u003c/pre\u003e",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-02-10T22:07:49Z",
	"updated_at": "2014-12-08T10:35:01Z"
}
