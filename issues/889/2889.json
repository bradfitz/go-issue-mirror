{
	"id": 51279842,
	"number": 2889,
	"state": "closed",
	"title": "fmt:  an unknown verb on a struct should just print each field with that verb, same as for arrays",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n1. go run fmt.go (attached)\n\nWhat is the expected output? What do you see instead?\n\nWe have:\ntype foo struct {\n\tn int\n\tt time.Time\n\tp *foo\n}\n\nWe have this time:\n\n--- t = time.Now() ---\n%#v == time.Time{sec:63464136979, nsec:565853000, loc:(*time.Location)(0x4e8620)}\n%s == Mon Feb  6 09:56:19 -0500 EST 2012\n%v == Mon Feb  6 09:56:19 -0500 EST 2012\n%+v == Mon Feb  6 09:56:19 -0500 EST 2012\n\nAnd this instance of foo containing that time:\n\n--- y = \u0026amp;foo{t: t} ---\n%#v == \u0026amp;main.foo{n:0, t:time.Time{sec:63464136979, nsec:565853000,\nloc:(*time.Location)(0x4e8620)}, p:(*main.foo)(nil)}\n%s == \u0026amp;{%!s(int=0) {%!s(int64=63464136979) %!s(int32=565853000) 0x4e8620}\n\u0026lt;nil\u0026gt;}\n%v == \u0026amp;{0 {63464136979 565853000 0x4e8620} \u0026lt;nil\u0026gt;}\n%+v == \u0026amp;{n:0 t:{sec:63464136979 nsec:565853000 loc:0x4e8620} p:\u0026lt;nil\u0026gt;}\n\nNone of these verbs call time's String method, whereas %s, %v, and %+v do when t is\npassed directly.\n\nThis all works fine if the struct type defines its own String method that prints the\ntime member with %s; see type bar in the attached program.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/2889/0/fmt.go\"\u003efmt.go\u003c/a\u003e (946 bytes)",
	"user": {
		"login": "Sajmani",
		"id": 9734877,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Unfortunate"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2014-12-08T10:15:11Z",
	"created_at": "2012-02-06T15:40:35Z",
	"updated_at": "2016-06-24T21:25:47Z"
}
