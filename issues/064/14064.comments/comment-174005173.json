{
	"id": 174005173,
	"body": "Dmitry,\r\n\r\nI think there's still a race in the Broadcast case outside the mutex.\r\n\r\nSuppose there are N goroutines waiting on a cv (but not on the semaphore yet). Then another goroutine calls Broadcast, while concurrently another goroutine is calling Wait on it.\r\n\r\nWhile what's going to happen to that last goroutine is definitely non-deterministic (it may or may not get the notification), what happens to the previously N waiting goroutines *is* deterministic: they should all get the notification.\r\n\r\nUnder this implementation, it looks like one of them may not get the notification when the \"new\" goroutine steals its notification.",
	"user": {
		"login": "wedsonaf",
		"id": 7494395,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-22T18:40:20Z",
	"updated_at": "2016-01-22T18:40:20Z"
}
