{
	"id": 157088608,
	"body": "@somadivad Transpose is not the same thing as using a different stride on the same data. To do a cost-free transpose, one would have to change not the stride, but the column-major / row-major opinion on the data. Even then the interactions are quite tricky, because naively [Take View] -\u003e [Take Transpose] -\u003e [Extend View] does not give the answer you expect unless you're very careful. \r\n\r\n@nsf What you're asking for isn't covered under any proposal. In my proposal, you can view it, but not to a fixed size\r\n````\r\nvar fs = [128][64][64]float64\r\n// Get data into fs\r\n// Slice fs\r\nsub := fs[0:64, :, :]  // type of sub is [,,]float64\r\n````\r\nThere is an issue related to this https://github.com/golang/go/issues/395, but that behavior won't help for your case. A [64][64][64]T is a continuous view of data (all 64x64x64 elements are in a row), while a sliced [128][64][64] is not. Under my proposal, you can either do the subslicing mentioned above, or you can copy.",
	"user": {
		"login": "btracey",
		"id": 3680859,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-16T16:29:06Z",
	"updated_at": "2015-11-16T16:29:06Z"
}
