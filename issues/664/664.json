{
	"id": 51276774,
	"number": 664,
	"state": "closed",
	"title": "Silent exit after too many EPIPE : really a good idea ?",
	"body": "by **sloonz**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. Compile server.go\n2. Run rm -f /tmp/test.sock;./server\n3. Run python client.py\n\nWhat is the expected output? What do you see instead?\nExpected: the program never quit, or print an useful error before quitting\nCurrent behavior: the program quits with a cryptic return code \u0026quot;32\u0026quot;\n\nWhat is your $GOOS?  $GOARCH?\nGOOS = linux\nGOARCH = amd64\n\nWhich revision are you using?  (hg identify)\n53fec18b83e2 release.2010-02-17\n\n\nFrom src/pkg/os/file.go, func (file *File) Write:\n\n    if e == syscall.EPIPE {\n        file.nepipe++\n        if file.nepipe \u0026gt;= 10 {\n            Exit(syscall.EPIPE)\n        }\n    }\n\nThis behavior is:\n 1. Not documented\n 2. Pervasive in all other I/O functions (net.Conn.Write, fmt.*printf,\nbufio.Writer.*,...), without any clear indication of this behavior in the\ndocumentation\n 3. Raises errors not easy to figure (why the hell my program does randomly\nexists with code 32 ?)\n\nI think it would be wise to:\n 1. Fix the documentation, and print a developper-friendly error ; or,\n 2. Just drop these lines\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/664/0/client.py\"\u003eclient.py\u003c/a\u003e (107 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/664/0/server.go\"\u003eserver.go\u003c/a\u003e (300 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:05:26Z",
	"created_at": "2010-03-13T12:31:42Z",
	"updated_at": "2016-06-24T19:14:30Z"
}
