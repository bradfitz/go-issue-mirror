{
	"id": 171028180,
	"number": 16687,
	"state": "closed",
	"title": "encoding/base64: RawStdEncoding DecodedLen off by 1 for lengths not divisible by 3",
	"body": "1. What version of Go are you using (`go version`)?\r\ngo version go1.6.2 windows/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nset GOARCH=amd64\r\nset GOBIN=\r\nset GOEXE=.exe\r\nset GOHOSTARCH=amd64\r\nset GOHOSTOS=windows\r\nset GOOS=windows\r\nset GOPATH=c:\\dev\\go\r\nset GORACE=\r\nset GOROOT=C:\\Go\r\nset GOTOOLDIR=C:\\Go\\pkg\\tool\\windows_amd64\r\nset GO15VENDOREXPERIMENT=1\r\nset CC=gcc\r\nset GOGCCFLAGS=-m64 -mthreads -fmessage-length=0\r\nset CXX=g++\r\nset CGO_ENABLED=1\r\n\r\n3. What did you do?\r\nTest decodeLen(encodedLen(x)) != x for various values of x. Only multiples of 3 produce consistent results.\r\n\r\nSee https://play.golang.org/p/l7lcBKVxDU\r\n\r\nIt is probably mistaken, e.g.:\r\nencodedLen(1) =\u003e 2, ok since you must have 2 6-bit units to accomodate 8 bytes.\r\ndecodedLen(2) =\u003e should be 1; since you cannot extract 2 full bytes from 12 bits. In actuality, DecodedLen() returns 2.\r\n\r\nCorrecting this behavior may be bad for backward compatibility.\r\nI suggest alternately to amend the documentation.\r\n",
	"user": {
		"login": "johndoughnut",
		"id": 21013744,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-08-14T01:00:43Z",
	"created_at": "2016-08-13T21:26:14Z",
	"updated_at": "2016-08-14T01:00:43Z"
}
