{
	"id": 51279120,
	"number": 2372,
	"state": "closed",
	"title": "goroutines on single core virtual machines (ubuntu, fusion, mac)",
	"body": "by **aakaasam**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. compile and run \u0026quot;\u003ca href=\"http://go-tour.appspot.com/#61\u0026quot\"\u003ehttp://go-tour.appspot.com/#61\u0026quot\u003c/a\u003e; on single core virtual\nmachine (Ubuntu)\n\nWhat is the expected output?\nhello\nworld\nhello\nworld\nhello\nworld\nhello\nworld\nhello\nworld\n\nWhat do you see instead?\nhello\nhello\nhello\nhello\nhello\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g or 8g depending on virtual machine\n\nWhich operating system(s) are you using?\nUbuntu 10.04 or 10.10 (32 or 64)  as a virtual machine (fusion) on mac os x 10.6.8 (Core\n2 Duo)\n\nWhich revision are you using?  (hg identify)\n32a5db196298 (release-branch.r60) release/release.r60.2\n\nPlease provide any additional information below.\n\nI'm new to go. So I'm not sure what to expect from goroutines. I was, however, surprised\nto see that the goroutines in this example were not executed and all tests were passed\nduring installation of go. I guess, there should be at least some form of warning. The\ngoroutines in the example work fine on Mac OS X and in a 'dual core' virtual machine\n(Ubuntu 10.04).\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:12:43Z",
	"created_at": "2011-10-15T17:34:17Z",
	"updated_at": "2016-06-24T21:19:31Z"
}
