{
	"id": 105371575,
	"number": 12540,
	"state": "closed",
	"title": "cmd/compile: arm64 cross-compilation errors \"branch too far\"",
	"body": "When using go1.5 to cross compile a large body of code on amd64/linux and targetting GOOS=linux GOARCH=arm64 I am getting the following errors:\r\n\r\n00012 (my_code.go:246)  BEQ     2907044\r\nother_code.go:1: branch too far\r\n00032 (my_code.go:246)  BLS     2907044\r\nother_code.go:1: branch too far\r\n00224 (my_code.go:7)   BNE     2907016\r\nother_code.go:1: branch too far\r\n00284 (my_code.go:8)   BNE     2906988\r\nother_code.go:1: branch too far\r\n00344 (my_code.go:9)   BNE     2906960\r\nother_code.go:1: branch too far\r\n00404 (my_code.go:10)  BNE     2906932\r\nother_code.go:1: branch too far\r\n00464 (my_code.go:11)  BNE     2906904\r\nother_code.go:1: branch too far\r\n00524 (my_code.go:12)  BNE     2906876\r\nother_code.go:1: branch too far\r\n00584 (my_code.go:13)  BNE     2906848\r\nother_code.go:1: branch too far\r\n00644 (my_code.go:14)  BNE     2906820\r\nother_code.go:1: too many errors\r\n\r\nThe code in question (name anonymised in this dump), is basically building a big slice of function pointers. Each function pointer points to a closure. The closure is generated within the same package, but there are a lot of closures (\u003e5000). \r\n\r\nThis looks odd, the asm7.go code is being called with pc relative offsets greater than 19 bits. Happy to dig a bit further if someone can point me in the correct direction.\r\n",
	"user": {
		"login": "matt2909",
		"id": 332254,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"comments": 19,
	"closed_at": "2015-11-13T03:41:29Z",
	"created_at": "2015-09-08T12:36:59Z",
	"updated_at": "2015-11-13T03:41:29Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
