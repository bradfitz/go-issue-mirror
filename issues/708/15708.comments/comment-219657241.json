{
	"id": 219657241,
	"body": "FWIW, more examples that are rejected by all three:\r\n\r\nHere we show that it's not just the case that we don't recursively promote `(*T).M` to `T.M`, but that the presence of `(*T).M` precludes promoting any method as `T.M`:\r\n\r\n    package p\r\n\r\n    type S1 struct { S2 }\r\n    type S2 struct {}\r\n\r\n    func (*S1) M() {}\r\n    func (S2) M() {}\r\n\r\n    var _ = S1.M\r\n\r\nHere we show that even though `M` is not a member of `S2`'s method set, its presence in `*S2`s method set precludes `S3.M` from being promoted as `S1.M`.  I.e., the fact that `(*S1).M` is ambiguous precludes `S1.M` too.\r\n\r\n    package p\r\n\r\n    type S1 struct { S2; S3 }\r\n    type S2 struct {}\r\n    type S3 struct {}\r\n\r\n    func (*S2) M() {}\r\n    func (S3) M() {}\r\n\r\n    var _ = S1.M\r\n",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-17T08:49:39Z",
	"updated_at": "2016-05-17T08:49:39Z"
}
