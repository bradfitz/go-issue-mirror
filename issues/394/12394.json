{
	"id": 103828307,
	"number": 12394,
	"state": "closed",
	"title": "test: unreachable code in run.go.",
	"body": "On latest `master` commit, [lines 120-137](https://github.com/golang/go/blob/805e56ef474a8abfc4ec4159bea0c1fb584e67ed/test/run.go#L120-L137) of `test/run.go` are:\r\n\r\n```Go\r\nstatus := \"ok  \"\r\nerrStr := \"\"\r\nif _, isSkip := test.err.(skipError); isSkip {\r\n\ttest.err = nil\r\n\terrStr = \"unexpected skip for \" + path.Join(test.dir, test.gofile) + \": \" + errStr\r\n\tstatus = \"FAIL\"\r\n}\r\nif test.err != nil {\r\n\tstatus = \"FAIL\"\r\n\terrStr = test.err.Error()\r\n}\r\nif status == \"FAIL\" {\r\n\tfailed = true\r\n}\r\nresCount[status]++\r\nif status == \"skip\" \u0026\u0026 !*verbose \u0026\u0026 !*showSkips {\r\n\tcontinue\r\n}\r\n```\r\n\r\nAs far as I can tell, line 136 containing the `continue` keyword is unreachable code. The local variable `status` is declared on line 120, and can only ever contain values of `\"ok  \"` and `\"FAIL\"` before line 135 is reached which checks for `status == \"skip\"` `\u0026\u0026`ed with other booleans, which can never be true.\r\n\r\nI'm guessing it meant to check the action rather than status? Something seems off, and I'm sure it'll be obvious to the person who wrote/refactored this code.",
	"user": {
		"login": "shurcooL",
		"id": 1924134,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2015-11-24T03:21:18Z",
	"created_at": "2015-08-29T04:35:53Z",
	"updated_at": "2015-11-24T03:21:18Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
