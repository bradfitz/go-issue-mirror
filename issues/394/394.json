{
	"id": 51276424,
	"number": 394,
	"state": "closed",
	"title": "Some short declarations stopped working in 6g",
	"body": "by **kenliz@cruzio.com**:\n\n\u003cpre\u003eThe following code used to compile and run, producing either a run-time error message,\nor a \nlist of the entries in directory \u0026quot;abc\u0026quot;. Now it produces a compile time error:\n\nundef_io_ReadDir.go:10: undefined: io.ReadDir\nundef_io_ReadDir.go:15: fatal error: typecheck loop\n\npackage main\nimport (\n        \u0026quot;io\u0026quot;;\n        \u0026quot;fmt\u0026quot;;\n)\nfunc main() {\n        dirs, err := io.ReadDir(\u0026quot;abc\u0026quot;);\n        if err != nil {\n                fmt.Println(\u0026quot;Error reading dir: \u0026quot;, \u0026quot;abc\u0026quot;, err);\n        } else {\n                for i,d := range dirs {\n                        fmt.Println(i, d);\n                }\n        }\n}\n\nWhat steps will reproduce the problem?\n1. Put the above code in file: undef_io_ReadDir.go\n2. 6g undef_io_ReadDir.go\n3. Adding \u0026quot;os\u0026quot; to the import list produces an additional error:\n       undef_io_ReadDir.go:4: imported and not used: os\n\n\nWhat is the expected output? What do you see instead?\n\n\nWhat is your $GOOS?  $GOARCH?\ndarwin amd64\n\nWhich revision are you using?  (hg identify)\ne205103b02e7 tip\n\nPlease provide any additional information below.\nI don't know if this is a bug \u0026quot;fix\u0026quot;, or a new bug. My reading of the Language\nDefinition and \nEfficient Go Programming is that this idiomatic style of coding was encouraged and\nshould \nwork.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2014-12-08T10:04:26Z",
	"created_at": "2009-12-08T15:26:09Z",
	"updated_at": "2016-06-24T19:10:09Z"
}
