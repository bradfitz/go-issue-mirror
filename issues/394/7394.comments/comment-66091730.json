{
	"id": 66091730,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4 by **pcaven**:\n\n\u003cpre\u003eI was looking for a simple Go 1.3 issue to help out with the release effort, so I\nthought I'd start with this one. It didn't look like anyone had investigated it yet.\n\nI've reproduced the problem on GOARCH=\"386\" (Linux), but it seems to work correctly on\nGOARCH=amd64 (Windows). I think that explains why it fails on the Playground, but not\nwhy the original submitter saw the problem on linux/amd64.\n\nI don't have suggested fix yet, but I've tracked it down to the use of 'int' (32 bits on\n'386, 64 bits on amd64), which overflows an int variable in the math.Pow code at some\npoint after the call to math.Frexp. At the end of math.Pow it is passed as a negative\nint value to math.Ldexp, which at line #29, after normalization of the mantissa,\nexecutes:\n\nreturn Copysign(0, frac) // underflow\n\nI'll look at it some more tonight. I think there might be a simple fix in math.Pow that\navoids the call to math.Ldexp in that case, but I haven't implemented it or run any\ntests yet.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-03-06T01:48:08Z",
	"updated_at": "2014-12-08T10:41:08Z"
}
