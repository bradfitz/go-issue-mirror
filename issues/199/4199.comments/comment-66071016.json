{
	"id": 66071016,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003eusing shifts for multiplies by power of 2 is still worthwhile even for modern cpus\nand i think the article your quote only argues against transforming\nx * 31 -\u0026gt; (x \u0026lt;\u0026lt; 5) - x.\n\nfor one thing, modern cpus often have more than one execution unit that can handle\nshifts, while many of them only have one execution unit that can handle mul.\n\nAnd, yes, multiplier often use pipelining to make the throughput of mul operation\nto 1 cycle/op, but the latency is often much larger than 1, and pipelining like this\ndoesn't help the case where we don't have a steady stream of mul operations (e.g.\nif we only have 1 multiplication operation, then we must wait the latency of the\noperation)\u003c/pre\u003e",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-02-06T14:26:02Z",
	"updated_at": "2014-12-22T06:19:39Z"
}
