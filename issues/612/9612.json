{
	"id": 54588210,
	"number": 9612,
	"state": "closed",
	"title": "doc: Go 1.1 Release Notes on Method Values",
	"body": "In the release notes for Go 1.1 at \r\n\r\nhttps://golang.org/doc/go1.1#method_values,\r\n\r\nthe section on method values states:\r\n\r\n\"For instance, given a Writer value w, the expression w.Write, a method value, is a function that will always write to w; it is equivalent to a function literal closing over w\".\r\n\r\nHowever, a method value will capture the current value of w at the time w.Write is evaluated, while a function literal closing over w will capture the variable itself. If w is changed before the function is actually called, the closure will use the changed value, while the method value will remember the original value. Therefore, I think the statement cited above is not correct.\r\n\r\nIf I am missing something, please enlighten me :-)\r\n   ",
	"user": {
		"login": "nautigar",
		"id": 10563059,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2015-01-16T16:05:16Z",
	"created_at": "2015-01-16T15:35:25Z",
	"updated_at": "2016-06-25T01:58:41Z"
}
