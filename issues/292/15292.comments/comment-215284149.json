{
	"id": 215284149,
	"body": "I'm not a Go expert, but its type system doesn't seem any simpler than pre-generics Java. The type syntax is a bit lighter-weight in a nice way but the underlying complexity seems about the same.\r\n\r\nIn Genus, constraints are types but models **are** code. Models are adapters, but they adapt without adding a layer of actual wrapping. This is very useful when you want to, say, adapt an entire array of objects to a new interface. Retroactive modeling lets you treat the array as an array of objects satisfying the desired interface.\r\n",
	"user": {
		"login": "andrewcmyers",
		"id": 4623813,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-28T01:52:53Z",
	"updated_at": "2016-04-28T01:52:53Z"
}
