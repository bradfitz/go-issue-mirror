{
	"id": 215297300,
	"body": "I wouldn't be surprised if it were more complicated than (pre-generics) Java's in a type theoretic sense, even though it's simpler to use in practice. \r\n\r\nRelative complexity aside, they're different enough that Genus couldn't map 1:1. No subtyping seems like a big one.\r\n\r\nIf you're interested:\r\n\r\nThe briefest summary of the relevant philosophical/design differences I mentioned are contained in the following FAQ entries:\r\n* https://golang.org/doc/faq#implements_interface\r\n* https://golang.org/doc/faq#overloading\r\n* https://golang.org/doc/faq#covariant_types\r\n* https://golang.org/doc/faq#variant_types\r\n\r\nUnlike most languages, the Go spec is very short and clear about the relevant properties of the type system start at https://golang.org/ref/spec#Constants and go straight through until the section titled \"Blocks\" (all of which is less than 11 pages printed).",
	"user": {
		"login": "jimmyfrasche",
		"id": 375553,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-28T03:02:35Z",
	"updated_at": "2016-04-28T03:02:35Z"
}
