{
	"id": 215299252,
	"body": "I don't believe that Go has structural subtyping.\n\nWhile two types whose underlying type is identical are therefore identical\ncan be substituted for one another, https://play.golang.org/p/cT15aQ-PFr\n\nThis does not extend to two types who share a common subset of fields,\nhttps://play.golang.org/p/KrC9_BDXuh.\n\nOn Thu, Apr 28, 2016 at 1:09 PM, Andrew Myers \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e Unlike Java and C# generics, the Genus generics mechanism is not based on\n\u003e subtyping. On the other hand, it seems to me that Go does have subtyping,\n\u003e but structural subtyping. That is also a good match for the Genus approach,\n\u003e which has a structural flavor rather than relying on predeclared\n\u003e relationships.\n\u003e\n\u003e â€”\n\u003e You are receiving this because you are subscribed to this thread.\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/15292#issuecomment-215298127\u003e\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-28T03:20:23Z",
	"updated_at": "2016-04-28T03:20:23Z"
}
