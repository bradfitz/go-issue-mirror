{
	"id": 215278950,
	"body": "I've read through the Genus paper.  To the extent that I understand it, it seems nice for Java, but doesn't seem like a natural fit for Go.\r\n\r\nOne key aspect of Go is that when you write a Go program, most of what you write is code.  This is different from C++ and Java, where much more of what you write is types.  Genus seems to be mostly about types: you write constraints and models, rather than code.  Go's type system is very very simple.  Genus's type system is far more complex.\r\n\r\nThe ideas of retroactive modeling, while clearly useful for Java, do not seem to fit Go at all.  People already use adapter types to match existing types to interfaces; nothing further should be needed when using generics.\r\n\r\nIt would be interesting to see these ideas applied to Go, but I'm not optimistic about the result.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-28T01:13:09Z",
	"updated_at": "2016-04-28T01:13:09Z"
}
