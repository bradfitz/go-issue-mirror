{
	"id": 210014588,
	"body": "There are two \"requirements\" in the linked proposal that may complicate the implementation and reduce type safety:\r\n\r\n\u003e - Define generic types based on types that are not known until they are instantiated.\r\n\u003e - Do not require an explicit relationship between the definition of a generic type or function and its use. That is, programs should not have to explicitly say type T implements generic G.\r\n\r\nThese requirements seem to exclude e.g. a system similar to Rust's trait system, where generic types are constrained by trait bounds. Why are these needed?",
	"user": {
		"login": "tamird",
		"id": 1535036,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 9,
		"+1": 7,
		"heart": 2
	},
	"created_at": "2016-04-14T15:54:01Z",
	"updated_at": "2016-04-14T15:54:01Z"
}
