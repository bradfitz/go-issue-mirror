{
	"id": 51288744,
	"number": 8824,
	"state": "closed",
	"title": "cmd/gc: failure to compile mutually recursive types in a function block",
	"body": "\u003cpre\u003eCompiles:\n\npackage p\n\ntype (\n\tS struct{ t *T }\n\tT struct{ s *S }\n)\n\n\nDoes not compile:\n\npackage p\n\nfunc f() {\n\ttype (\n\t\tS struct{ t *T }\n\t\tT struct{ s *S }\n\t)\n}\n\nError from gc: \u0026quot;undefined: T\u0026quot;\n\nThe spec says: \u0026quot;The scope of a type identifier declared inside a function begins at\nthe identifier in the TypeSpec and ends at the end of the innermost containing\nblock.\u0026quot; The innermost containing block for the second code sample is the function f.\n\ngo/types also rejects the second code sample with \u0026quot;undeclared name: T\u0026quot;. I have\nnot tried gccgo.\n\nEncountered while writing test cases for \u003ca href=\"https://golang.org/issue/8818\"\u003eissue #8818\u003c/a\u003e.\u003c/pre\u003e",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:48:46Z",
	"created_at": "2014-09-26T23:44:46Z",
	"updated_at": "2016-06-25T01:42:20Z"
}
