{
	"id": 66081934,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eThe change can only be made for methods that return an error, so Fd and Name are not\ncandidates.\n\nThe following program prints:\n\nChdir panicked\nChmod panicked\nChown panicked\nClose panicked\nReaddir panicked\nReaddirnames panicked\nSeek panicked\nStat panicked\nTruncate panicked\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n)\n\nfunc test(name string, f func()){\n\tdefer func() {\n\t\tif recover() != nil {\n\t\t\tfmt.Println(name, \"panicked\")\n\t\t}\n\t}()\n\tf()\n}\n\nfunc main() {\n\tp := make([]byte, 10)\n\ttest(\"Chdir\", func(){(*os.File)(nil).Chdir()})\n\ttest(\"Chmod\", func(){(*os.File)(nil).Chmod(0)})\n\ttest(\"Chown\", func(){(*os.File)(nil).Chown(0, 0)})\n\ttest(\"Close\", func(){(*os.File)(nil).Close()})\n\ttest(\"Read\", func(){(*os.File)(nil).Read(p)})\n\ttest(\"ReadAt\", func(){(*os.File)(nil).ReadAt(p, 0)})\n\ttest(\"Readdir\", func(){(*os.File)(nil).Readdir(0)})\n\ttest(\"Readdirnames\", func(){(*os.File)(nil).Readdirnames(0)})\n\ttest(\"Seek\", func(){(*os.File)(nil).Seek(0, 0)})\n\ttest(\"Stat\", func(){(*os.File)(nil).Stat()})\n\ttest(\"Sync\", func(){(*os.File)(nil).Sync()})\n\ttest(\"Truncate\", func(){(*os.File)(nil).Truncate(0)})\n\ttest(\"Write\", func(){(*os.File)(nil).Write(p)})\n\ttest(\"WriteAt\", func(){(*os.File)(nil).WriteAt(p, 0)})\n\ttest(\"WriteString\", func(){(*os.File)(nil).WriteString(\"hi\")})\n}\u003c/pre\u003e",
	"user": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-08T03:04:06Z",
	"updated_at": "2014-12-08T10:31:57Z"
}
