{
	"id": 58856438,
	"number": 9994,
	"state": "closed",
	"title": "crypto/tls: Support for session ticket key rotation",
	"body": "In order to rotate session ticket keys effectively, it is useful for the TLS server implementation to support accepting connections with tickets encrypted with previous key(s). Currently the server supports a single session ticket key, and it is not easy to rotate the key. Also, the server cannot be configured to accept tickets encrypted with old keys.\r\n\r\nOne solution to this is to add two optional fields to `*tls.Config`:\r\n\r\n```go\r\n// GetSessionTicketKey returns the current session ticket key.\r\nGetSessionTicketKey func(*ClientHelloInfo) ([32]byte, error)\r\n\r\n// AllowPreviousSessionTicketKeys specifies the number of previous\r\n// unique session ticket keys retrieved from GetSessionTicketKey that\r\n// will be used to accept session tickets.\r\nAllowPreviousSessionTicketKeys int\r\n```\r\n\r\nThis way the server could cache n previous keys and when a session ticket using an old key is encountered it would send a new session ticket encrypted with the current key.\r\n\r\nThis is certainly not the only approach that could be taken, just a strawman proposal to start discussion.\r\n\r\n/cc @agl",
	"user": {
		"login": "titanous",
		"id": 13026,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "agl",
		"id": 21203,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2015-04-26T21:00:16Z",
	"created_at": "2015-02-25T06:26:41Z",
	"updated_at": "2016-08-08T21:04:05Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
