{
	"id": 73880175,
	"body": "This also happens with github.com/mattn/go-oci8 when I db.Exec an insert, however I don't get the call stack from inside go-oci8.\r\n\r\nIt works fine without -race. Queries work either way.\r\n\r\nUsing Go 1.4.1 x64 on Windows 7\r\n\r\n```sql\r\ncreate table test\r\n(\r\n  pk NUMBER,\r\n  id NUMBER not null\r\n)\r\n```\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"database/sql\"\r\n\t\"fmt\"\r\n\t_ \"github.com/mattn/go-oci8\"\r\n)\r\n\r\nfunc main() {\r\n\tdb, err := sql.Open(\"oci8\", \"system/manager@127.0.0.1:1521/orcl\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n\r\n\tdb.Exec(\"delete from test\")\r\n\t_, err = db.Exec(\"insert into test values (:pk, :id)\", 1, 1)\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n\r\n}\r\n```\r\n\r\n```\r\ngo run -race oracle-insert.go\r\nException 0xc0000005 0x8 0xd00000000 0xd00000000\r\nPC=0xd00000000\r\n\r\n\r\ngoroutine 17 [syscall, locked to thread]:\r\nruntime.goexit()\r\n        c:/go/src/runtime/asm_amd64.s:2232 +0x1\r\n\r\ngoroutine 5 [chan receive]:\r\ndatabase/sql.(*DB).connectionOpener(0xc082076000)\r\n        c:/go/src/database/sql/sql.go:589 +0x74\r\ncreated by database/sql.Open\r\n        c:/go/src/database/sql/sql.go:452 +0x41a\r\nrax     0x56000000000\r\nrbx     0x0\r\nrcx     0x10\r\nrdx     0x2059e30\r\nrdi     0xc082006380\r\nrsi     0xc082073968\r\nrbp     0x0\r\nrsp     0xc082073a88\r\nr8      0x3a2230\r\nr9      0x0\r\nr10     0x11768e0\r\nr11     0x12ffa08\r\nr12     0xc082073a28\r\nr13     0x1176ca0\r\nr14     0xc08201e000\r\nr15     0x0\r\nrip     0xd00000000\r\nrflags  0xd00010202\r\ncs      0x33\r\nfs      0x53\r\ngs      0x2b\r\nexit status 2\r\n```",
	"user": {
		"login": "ricsmania",
		"id": 6311027,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-11T13:26:27Z",
	"updated_at": "2015-02-11T13:26:27Z"
}
