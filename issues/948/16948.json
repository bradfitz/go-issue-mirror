{
	"id": 174451921,
	"number": 16948,
	"state": "closed",
	"title": "runtime: invalid stack pointer when parsing XML with atomic test coverage",
	"body": "### What version of Go are you using (`go version`)?\r\ndevel +f8555ea (HEAD)\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nLinux AMD64\r\n\r\n### What did you do?\r\nThe most minimal reproduction I can do tonight is these two files:\r\n\r\nxmlparsing.go\r\n```go\r\npackage xmlparsing\r\n\r\nimport (\r\n\t\"encoding/xml\"\r\n)\r\n\r\ntype Data struct {\r\n}\r\n\r\ntype Packet struct {\r\n\tSerial string `xml:\"serial,attr\"`\r\n\tData   []Data `xml:\"data\"`\r\n}\r\n\r\nfunc DecodePacket(raw []byte) (packet Packet, err error) {\r\n\terr = xml.Unmarshal(raw, \u0026packet)\r\n\treturn\r\n}\r\n```\r\n\r\nxmlparsing.go\r\n```go\r\npackage xmlparsing\r\n\r\nimport (\r\n\t\"testing\"\r\n)\r\n\r\nvar deltaData = `\u003cgroup serial=\"\"\u003e\u003c/group\u003e`\r\n\r\nfunc TestDecodePacket(t *testing.T) {\r\n\tDecodePacket([]byte(deltaData))\r\n}\r\n```\r\n\r\nrun `go test -covermode=atomic`\r\n\r\n### What did you expect to see?\r\n```\r\n$ go test -covermode=atomic\r\nPASS\r\ncoverage: 100.0% of statements\r\nok  \tlocal/xmlparsing\t0.012s\r\n```\r\nThis is the output from Go 1.7 on the same system.\r\n\r\n### What did you see instead?\r\n```\r\n$ go test -covermode=atomic\r\nruntime: bad pointer in frame local/xmlparsing.DecodePacket at 0xc420044f00: 0x19\r\nfatal error: invalid stack pointer\r\n\r\nruntime stack:\r\nruntime.throw(0x52c7a7, 0x15)\r\n\t/go/src/runtime/panic.go:566 +0x95 fp=0x7fff66fd37f0 sp=0x7fff66fd37d0\r\nruntime.adjustpointers(0xc420044f00, 0x7fff66fd38d8, 0x7fff66fd3c28, 0x5775c0)\r\n\t/go/src/runtime/stack.go:601 +0x269 fp=0x7fff66fd3860 sp=0x7fff66fd37f0\r\nruntime.adjustframe(0x7fff66fd3b30, 0x7fff66fd3c28, 0x7fff66fd3901)\r\n\t/go/src/runtime/stack.go:673 +0x5af fp=0x7fff66fd3908 sp=0x7fff66fd3860\r\nruntime.gentraceback(0xffffffffffffffff, 0xc420044d68, 0x0, 0xc420001860, 0x0, 0x0, 0x7fffffff, 0x532198, 0x7fff66fd3c28, 0x0, ...)\r\n\t/go/src/runtime/traceback.go:378 +0x109c fp=0x7fff66fd3b90 sp=0x7fff66fd3908\r\nruntime.copystack(0xc420001860, 0x1000, 0x1)\r\n\t/go/src/runtime/stack.go:902 +0x381 fp=0x7fff66fd3d60 sp=0x7fff66fd3b90\r\nruntime.newstack()\r\n\t/go/src/runtime/stack.go:1070 +0x35b fp=0x7fff66fd3ee0 sp=0x7fff66fd3d60\r\nruntime.morestack()\r\n\t/go/src/runtime/asm_amd64.s:366 +0x7f fp=0x7fff66fd3ee8 sp=0x7fff66fd3ee0\r\n\r\ngoroutine 5 [copystack]:\r\nencoding/xml.(*Decoder).unmarshal(0xc4200a02c0, 0x50e240, 0x19, 0x199, 0x0, 0x199, 0x725d4501)\r\n\t/go/src/encoding/xml/read.go:269 fp=0xc420044d70 sp=0xc420044d68\r\nencoding/xml.(*Decoder).DecodeElement(0xc4200a02c0, 0x4f8340, 0x19, 0x0, 0x1, 0x7fd4ecb621e0)\r\n\t/go/src/encoding/xml/read.go:133 +0x10b fp=0xc420044dc0 sp=0xc420044d70\r\nencoding/xml.(*Decoder).Decode(0xc4200a02c0, 0x4f8340, 0x19, 0xc420029e60, 0xc420012501)\r\n\t/go/src/encoding/xml/read.go:121 +0x48 fp=0xc420044e00 sp=0xc420044dc0\r\nencoding/xml.Unmarshal(0xc42000e400, 0x19, 0x20, 0x4f8340, 0x19, 0x19, 0x20)\r\n\t/go/src/encoding/xml/read.go:115 +0x1a2 fp=0xc420044ec8 sp=0xc420044e00\r\nlocal/xmlparsing.DecodePacket(0xc42000e400, 0x19, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x57c7d08a, 0xc4079c941d)\r\n\tlocal/xmlparsing/_test/_obj_test/xmlparsing.go:19 +0xb1 fp=0xc420044f18 sp=0xc420044ec8\r\nlocal/xmlparsing.TestDecodePacket(0xc42008c180)\r\n\t/go/src/local/xmlparsing/xmlparsing_test.go:10 +0x64 fp=0xc420044f78 sp=0xc420044f18\r\ntesting.tRunner(0xc42008c180, 0x5320b0)\r\n\t/go/src/testing/testing.go:610 +0x81 fp=0xc420044fa0 sp=0xc420044f78\r\nruntime.goexit()\r\n\t/go/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc420044fa8 sp=0xc420044fa0\r\ncreated by testing.(*T).Run\r\n\t/go/src/testing/testing.go:646 +0x2eb\r\n\r\ngoroutine 1 [chan receive]:\r\nruntime.gopark(0x532400, 0xc42006c298, 0x52aa91, 0xc, 0xc42003fb17, 0x3)\r\n\t/go/src/runtime/proc.go:259 +0x13a fp=0xc42003fab0 sp=0xc42003fa80\r\nruntime.goparkunlock(0xc42006c298, 0x52aa91, 0xc, 0x5bfa17, 0x3)\r\n\t/go/src/runtime/proc.go:265 +0x5e fp=0xc42003faf0 sp=0xc42003fab0\r\nruntime.chanrecv(0x4fdb40, 0xc42006c240, 0x0, 0xc42003fb01, 0x46851b)\r\n\t/go/src/runtime/chan.go:496 +0x2de fp=0xc42003fb78 sp=0xc42003faf0\r\nruntime.chanrecv1(0x4fdb40, 0xc42006c240, 0x0)\r\n\t/go/src/runtime/chan.go:378 +0x35 fp=0xc42003fbb0 sp=0xc42003fb78\r\ntesting.(*T).Run(0xc42008c0c0, 0x52b53a, 0x10, 0x5320b0, 0xc42003fc98)\r\n\t/go/src/testing/testing.go:647 +0x315 fp=0xc42003fc58 sp=0xc42003fbb0\r\ntesting.RunTests.func1(0xc42008c0c0)\r\n\t/go/src/testing/testing.go:793 +0x67 fp=0xc42003fca8 sp=0xc42003fc58\r\ntesting.tRunner(0xc42008c0c0, 0xc42003fd88)\r\n\t/go/src/testing/testing.go:610 +0x81 fp=0xc42003fcd0 sp=0xc42003fca8\r\ntesting.RunTests(0x5320b8, 0x5b8a90, 0x1, 0x1, 0x40ebb0)\r\n\t/go/src/testing/testing.go:799 +0x2f5 fp=0xc42003fdb8 sp=0xc42003fcd0\r\ntesting.(*M).Run(0xc42003fee8, 0x52e718)\r\n\t/go/src/testing/testing.go:743 +0x85 fp=0xc42003fe40 sp=0xc42003fdb8\r\nmain.main()\r\n\tlocal/xmlparsing/_test/_testmain.go:100 +0x1bd fp=0xc42003ff48 sp=0xc42003fe40\r\nruntime.main()\r\n\t/go/src/runtime/proc.go:183 +0x1f4 fp=0xc42003ffa0 sp=0xc42003ff48\r\nruntime.goexit()\r\n\t/go/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc42003ffa8 sp=0xc42003ffa0\r\n\r\ngoroutine 2 [force gc (idle)]:\r\nruntime.gopark(0x532400, 0x5bf020, 0x52b2bd, 0xf, 0x532314, 0x1)\r\n\t/go/src/runtime/proc.go:259 +0x13a fp=0xc420028748 sp=0xc420028718\r\nruntime.goparkunlock(0x5bf020, 0x52b2bd, 0xf, 0xc420000114, 0x1)\r\n\t/go/src/runtime/proc.go:265 +0x5e fp=0xc420028788 sp=0xc420028748\r\nruntime.forcegchelper()\r\n\t/go/src/runtime/proc.go:224 +0x9e fp=0xc4200287c0 sp=0xc420028788\r\nruntime.goexit()\r\n\t/go/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc4200287c8 sp=0xc4200287c0\r\ncreated by runtime.init.3\r\n\t/go/src/runtime/proc.go:213 +0x35\r\n\r\ngoroutine 3 [GC sweep wait]:\r\nruntime.gopark(0x532400, 0x5bf200, 0x52acc4, 0xd, 0x41c314, 0x1)\r\n\t/go/src/runtime/proc.go:259 +0x13a fp=0xc420028f38 sp=0xc420028f08\r\nruntime.goparkunlock(0x5bf200, 0x52acc4, 0xd, 0x14, 0x1)\r\n\t/go/src/runtime/proc.go:265 +0x5e fp=0xc420028f78 sp=0xc420028f38\r\nruntime.bgsweep(0xc4200180e0)\r\n\t/go/src/runtime/mgcsweep.go:63 +0xb6 fp=0xc420028fb8 sp=0xc420028f78\r\nruntime.goexit()\r\n\t/go/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc420028fc0 sp=0xc420028fb8\r\ncreated by runtime.gcenable\r\n\t/go/src/runtime/mgc.go:195 +0x61\r\n\r\ngoroutine 4 [finalizer wait]:\r\nruntime.gopark(0x532400, 0x5d9770, 0x52afed, 0xe, 0x14, 0x1)\r\n\t/go/src/runtime/proc.go:259 +0x13a fp=0xc420029708 sp=0xc4200296d8\r\nruntime.goparkunlock(0x5d9770, 0x52afed, 0xe, 0x14, 0x1)\r\n\t/go/src/runtime/proc.go:265 +0x5e fp=0xc420029748 sp=0xc420029708\r\nruntime.runfinq()\r\n\t/go/src/runtime/mfinal.go:158 +0xaf fp=0xc4200297c0 sp=0xc420029748\r\nruntime.goexit()\r\n\t/go/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc4200297c8 sp=0xc4200297c0\r\ncreated by runtime.createfing\r\n\t/go/src/runtime/mfinal.go:139 +0x62\r\nexit status 2\r\nFAIL\tlocal/xmlparsing\t0.015s\r\n```\r\n\r\nI didn't find any unsafe code in either the testing or encoding/xml packages, so this might be a memory corruption issue.\r\n",
	"user": {
		"login": "iangudger",
		"id": 7056530,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"closed_at": "2016-09-01T14:26:02Z",
	"created_at": "2016-09-01T07:09:22Z",
	"updated_at": "2016-09-02T17:00:36Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
