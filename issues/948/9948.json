{
	"id": 58411318,
	"number": 9948,
	"state": "closed",
	"title": "go/token: be clearer that Column is a byte count",
	"body": "I looked through the source code to find out, and it appears to me that in\r\n\r\n\t// Position describes an arbitrary source position\r\n\t// including the file, line, and column location.\r\n\t// A Position is valid if the line number is \u003e 0.\r\n\t//\r\n\ttype Position struct {\r\n\t\tFilename string // filename, if any\r\n\t\tOffset   int    // offset, starting at 0\r\n\t\tLine     int    // line number, starting at 1\r\n\t\tColumn   int    // column number, starting at 1 (character count)\r\n\t}\r\n\r\nthe Column is a byte count, not a character (rune) count. Bytes are much more useful when you're holding a []byte anyway, so that's what I was hoping. Probably docs should be updated.\r\n\r\nIt might also help here:\r\n\r\n    To create the Pos value for a specific source offset, first add the\r\n    respective file to the current file set (via FileSet.AddFile) and then\r\n    call File.Pos(offset) for that file. Given a Pos value p for a specific\r\n    file set fset, the corresponding Position value is obtained by calling\r\n    fset.Position(p).\r\n\r\nto say \"a specific source file offset (measured in bytes)\". It may be that token is agnostic about this and the bytes part is imposed by go/scanner, but this is where people will look. Maybe \"usually measured in bytes\" if that's a concern.",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"closed_at": "2015-02-23T18:36:12Z",
	"created_at": "2015-02-20T21:14:24Z",
	"updated_at": "2016-06-25T02:01:33Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
