{
	"id": 80695521,
	"number": 10948,
	"state": "open",
	"title": "net: Use `splice` for TCPConn.ReadFrom on Linux",
	"body": "`sendfile` only allows the source to be a `mmap`-able file descriptor. Using `splice` in the implementation of `(net.Conn).ReadFrom` allows `net.Conn` to get the same sort of performance benefits as `*os.File` when `io.Copy` is used. (In theory, the src can be any fd.)\r\n\r\nPros:\r\n - Uses the fastest (AFAIK) socket -\u003e socket method available on Linux. (Fundamentally, this is how haproxy works.)\r\n - Can be non-blocking (in the sense that both sockets are talking to the netpoller.)\r\n - Transparent perf improvements to existing users of `io.Copy`.\r\n\r\nCons:\r\n - Increased implementation complexity: requires two calls to `splice`, and a call to `pipe`, along with associated `pd.WaitRead()`/`pd.WaitWrite()` business.\r\n - Architecture-specific. \r\n\r\nFor people [writing proxies in Go](https://github.com/mailgun/vulcand), this kind of optimization could be huge.\r\n\r\nIf this sounds agreeable, I can send in a patch next week.",
	"user": {
		"login": "philhofer",
		"id": 2940902,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "OS-Linux"
		}
	],
	"comments": 14,
	"created_at": "2015-05-25T22:51:08Z",
	"updated_at": "2016-03-14T12:12:21Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	},
	"reactions": {
		"total_count": 4,
		"+1": 4
	}
}
