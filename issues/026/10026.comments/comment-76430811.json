{
	"id": 76430811,
	"body": "Since GC found a value of 0x9 in a field it thinks should be a pointer, it\nis a similar symptom to the issue we ran into when using C pointer fields\nfor non pointer values.  But I thought I read that the gc in 1.3 was\nalready strict enough to flag those cases as violations.\n\nThe initial goroutine stack size seems to have decreased between 1.3.3 and\n1.4.2.  runtime/stack.h:StackMin is 8k in 1.3.3 and now is 2k in 1.4.2.\nMaybe that is causing another problem to surface.  We ran into another\nproblem where addresses passed to C were not allocated from the heap but\nthere the value gc was claiming was invalid really had been a valid address\nin the past, so not something that looked like 0x9.\n\n\n\nOn Fri, Feb 27, 2015 at 11:33 AM, Leo Kim \u003cnotifications@github.com\u003e wrote:\n\n\u003e Interesting. Also, I forgot to add that this doesn't reproduce with Go\n\u003e 1.3.3 in the same Windows environment.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/10026#issuecomment-76423977\u003e.\n\u003e\n",
	"user": {
		"login": "FrankReh",
		"id": 5726008,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-27T17:09:49Z",
	"updated_at": "2015-02-27T17:09:49Z"
}
