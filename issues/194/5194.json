{
	"id": 51283260,
	"number": 5194,
	"state": "closed",
	"title": "runtime: string hashmap optimizations",
	"body": "\u003cpre\u003eSome possible optimizations in the single-bucket string hashmap lookup cases, in\nhashmap_fast.c:\n\n* If EQMAYBE, also compare .str to see if they match.\n\n* Make EQMAYBE still scan the first 32 bytes of each of the 8 items in the bucket, as is\ndone for quick keys, even if the keys are all huge.  We could at least rule some out.\n\n* Keep track of more than one keymaybe index. Make the keymaybe uint8 instead be a\nbitmask? (If so, add a compile-time check that sizeof(keymaybe) * 8 \u0026gt;= BUCKETSIZE) \nKeith guesses we could do a couple memeq even on big keys and still be faster than\nhashing.\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Performance"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:27:50Z",
	"created_at": "2013-04-03T17:40:45Z",
	"updated_at": "2016-06-24T22:37:03Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
