{
	"id": 66099861,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3 by **brendanmcmillion**:\n\n\u003cpre\u003eThe output of GHASH is 128-bits.  It's not being used for compression, it's being used\nto prevent an all 0 initial counter block (ICB) because if the ICB is all 0s and the\nplaintext of the first block is known, then an attacker can trivially find the hash\nsubkey for GHASH.\n\nIf the IV is all 0s, but it's 96-bits, then you know the ICB isn't all 0s because it's\nbeen explicitly set to have at least one 1 bit.\n\nIn many ways, you could argue that 128-bit IVs are more secure because of the larger\nspace to prevent repetition and the fact that an attacker doesn't actually know the\nvalue of the ICB.\n\nBut nonetheless, the mode was standardized in a particular way and Golang's\nimplementation doesn't work in that way, which is generally regarded as a problem in its\nown right.\n\nThank you for your time, btw.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-11-03T21:00:57Z",
	"updated_at": "2014-12-08T10:49:39Z"
}
