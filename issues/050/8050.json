{
	"id": 51287607,
	"number": 8050,
	"state": "closed",
	"title": "go.tools/go/types: cannot assign interface variables of different types but identical method sets if there is a blank method",
	"body": "\u003cpre\u003eThis code is accepted:\n\npackage p\n\ntype I interface {\n\t_()\n}\n\nvar a, b I\n\nfunc _() {\n\ta = b\n\tb = a\n}\n\nThis code is not accepted:\n\npackage p\n\ntype I1 interface {\n\t_()\n}\n\ntype I2 interface {\n\t_()\n}\n\nvar a I1\nvar b I2\n\nfunc _() {\n\ta = b\n\tb = a\n}\n\nThe 2nd example would be accepted if the method were called m (rather than blank _ ).\n\nThe problem is that lookup methods exclude lookups for _ right away. This shortcut is\npossibly not permitted; but it depends on how the spec should be interpreted in this\ncase.\n\nFix this pending outcome of \u003ca href=\"https://golang.org/issue/6604\"\u003eissue #6604\u003c/a\u003e.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:44:39Z",
	"created_at": "2014-05-20T18:36:32Z",
	"updated_at": "2016-06-25T01:34:50Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
