{
	"id": 241252924,
	"body": "looking into this.\r\n\r\nDuring inlining in mkinlcall1 fn.func.Inl contains return @\"unsafe\".Pointer(int(0x0)) so somewhere the conversion got lost in binary export-\u003eimport  and ssa expr() later trips on the OCONV from INT to TUNSAFEPTR generated by the inlining. Seems like maybe in bimport.go node() case OLITERAL we could handle unsafe.Pointer specially.\r\n\r\n```\r\n\t\tif !typ.IsUntyped() {\r\n\t\t\tif typ.IsUnsafePtr() {\r\n\t\t\t\tconv := Nod(OCALL, typenod(Types[TUINTPTR]), nil)\r\n\t\t\t\tconv.List.Set1(n)\r\n\t\t\t\tn = conv\r\n\t\t\t}\r\n```",
	"user": {
		"login": "martisch",
		"id": 184995,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-21T11:45:19Z",
	"updated_at": "2016-08-21T14:55:00Z"
}
