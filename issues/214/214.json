{
	"id": 51276188,
	"number": 214,
	"state": "closed",
	"title": "Constant expressions not evaluated exactly",
	"body": "by **vincent-google@vinc17.net**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n\n1. Compile and link the following program:\n\npackage main\n\nfunc main() {\n  print(1.7e300 / 3 * 3 - 1.7e300, \u0026quot;\\n\u0026quot;)\n}\n\n2. Run 6.out\n\nWhat is the expected output? What do you see instead?\n\nOne should get something representing 0 (the exact value), as according to\nthe language specifications[*], constant expressions are evaluated exactly,\nbut I get:\n-2.919962e+194\n\n[*] \u003ca href=\"http://golang.org/doc/go_spec.html#Constant_expressions\"\u003ehttp://golang.org/doc/go_spec.html#Constant_expressions\u003c/a\u003e\n\u0026quot;Constant expressions are always evaluated exactly; intermediate values and\nthe constants themselves may require precision significantly larger than\nsupported by any predeclared type in the language.\u0026quot;\n\nWhat is your $GOOS?  $GOARCH?\nlinux amd64\n\nWhich revision are you sync'ed to?  (hg log -l 1)\n\nchangeset:   4065:ce0a8285caf5\ntag:         tip\nuser:        Adam Langley \u0026lt;agl@golang.org\u0026gt;\ndate:        Sun Nov 15 14:00:46 2009 -0800\nsummary:     crypto/md5: fix comment typo.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:03:40Z",
	"created_at": "2009-11-16T01:06:53Z",
	"updated_at": "2016-06-24T19:05:03Z"
}
