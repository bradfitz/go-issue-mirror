{
	"id": 66091331,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eYes, r or gri reported the same thing last week I think, but I cannot find that one. The\nissue is that the compiler treats all top-level variables as separate for the purposes\nof computing an order, and so the \"a before b\" you are relying on is not there in the\ncompiler. However, it is also unclear to me whether it is really there in practice. What\nabout:\n\nvar a, b = f(), g()\n\nfunc f() int {\n    return b\n}\n\nfunc g() int {\n    return 5\n}\n\nToday the compiler just initializes b - which means calling g - before calling f, as it\nmust. We could make this an init loop error, and perhaps we should, but I think that's a\nlanguage change at this point.\n\nIf I remember correctly, the earlier report (which I also cannot find) contained a\nsimilar example. There's a spec question here before there's a compiler bug.\n\nIt would be nice to answer the spec question at least before Go 1.3.\u003c/pre\u003e\n\n_Labels changed: added **release-go1.3**._\n\n\n_Status changed to **Accepted**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-02-13T15:06:27Z",
	"updated_at": "2014-12-08T10:40:43Z"
}
