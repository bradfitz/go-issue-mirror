{
	"id": 169931493,
	"number": 16637,
	"state": "open",
	"title": "cmd/compile: illegal instruction on s390x",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n```\r\ngo version go1.7rc5 linux/amd64\r\n```\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"\"\r\nGORACE=\"\"\r\nGOROOT=\"/root/s390x_1.7rc5/go\"\r\nGOTOOLDIR=\"/root/s390x_1.7rc5/go/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build390085214=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n3. What did you do?\r\n```\r\nexport GOROOT=/root/s390x_1.7rc5/go\r\nexport GOROOT_BOOTSTRAP=/root/s390x_1.7rc5/go\r\nGOOS=linux GOARCH=s390x ./bootstrap.bash\r\n```\r\ncopy go-linux-s390x-bootstrap.tbz to the s390x server:\r\n```\r\nlinux02:~/s390x_1.7rc5/go-linux-s390x-bootstrap/bin # uname -a\r\nLinux linux02 3.0.101-0.47.71-default #1 SMP Thu Nov 12 12:22:22 UTC 2015 (b5b212e) s390x s390x s390x GNU/Linux\r\n```\r\n\r\n```\r\nlinux02:~/s390x_1.7rc5/go-linux-s390x-bootstrap/bin # lscpu\r\nArchitecture:          s390x\r\nCPU op-mode(s):        32-bit, 64-bit\r\nByte Order:            Big Endian\r\nCPU(s):                2\r\nOn-line CPU(s) list:   0,1\r\nThread(s) per core:    1\r\nCore(s) per socket:    1\r\nSocket(s) per book:    1\r\nBook(s):               2\r\nVendor ID:             IBM/S390\r\nBogoMIPS:              3246.00\r\nHypervisor:            z/VM 6.3.0\r\nHypervisor vendor:     IBM\r\nVirtualization type:   full\r\nDispatching mode:      horizontal\r\n```\r\nextract archive and run go.\r\n\r\n4. What did you expect to see?\r\n```\r\nRunnable go binary file.\r\n```\r\n\r\n5. What did you see instead?\r\n```\r\nlinux02:~/s390x_1.7rc5/go-linux-s390x-bootstrap/bin # ./go\r\nIllegal instruction\r\n```\r\nor with gdb:\r\n```\r\nlinux02:~/s390x_1.7rc5/go-linux-s390x-bootstrap/bin # gdb ./go\r\nGNU gdb (GDB) SUSE (7.5.1-0.7.29)\r\nCopyright (C) 2012 Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later \u003chttp://gnu.org/licenses/gpl.html\u003e\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\r\nand \"show warranty\" for details.\r\nThis GDB was configured as \"s390x-suse-linux\".\r\nFor bug reporting instructions, please see:\r\n\u003chttp://www.gnu.org/software/gdb/bugs/\u003e...\r\nReading symbols from /root/s390x_1.7rc5/go-linux-s390x-bootstrap/bin/go...done.\r\nwarning: File \"/root/s390x_1.7rc5/go-linux-s390x-bootstrap/src/runtime/runtime-gdb.py\" auto-loading has been declined by your `auto-load safe-path' set to \"$debugdir:$datadir/auto-load\".\r\nTo enable execution of this file add\r\n\tadd-auto-load-safe-path /root/s390x_1.7rc5/go-linux-s390x-bootstrap/src/runtime/runtime-gdb.py\r\nline to your configuration file \"/root/.gdbinit\".\r\nTo completely disable this security protection add\r\n\tset auto-load safe-path /\r\nline to your configuration file \"/root/.gdbinit\".\r\nFor more information about this security protection see the\r\n\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:\r\n\tinfo \"(gdb)Auto-loading safe path\"\r\n(gdb) run\r\nStarting program: /root/s390x_1.7rc5/go-linux-s390x-bootstrap/bin/go \r\n\r\nProgram received signal SIGILL, Illegal instruction.\r\n_rt0_s390x_linux () at /root/s390x_1.7rc5/go-linux-s390x-bootstrap/src/runtime/rt0_linux_s390x.s:16\r\n16\t\tBR main(SB)\r\n(gdb)\r\n```\r\n",
	"user": {
		"login": "malinindmitry",
		"id": 9119322,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsInvestigation"
		}
	],
	"comments": 5,
	"created_at": "2016-08-08T14:04:36Z",
	"updated_at": "2016-08-09T15:09:21Z",
	"milestone": {
		"id": 1748849,
		"number": 42,
		"title": "Go1.8Maybe"
	}
}
