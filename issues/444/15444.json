{
	"id": 151028531,
	"number": 15444,
	"state": "closed",
	"title": "x/net/http2: HeaderFrameWriter will drop valid Header Frames if StreamDep=0",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)? `go version go1.6 darwin/amd64`\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/nimi/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/Cellar/go/1.6/libexec\"\r\nGOTOOLDIR=\"/usr/local/Cellar/go/1.6/libexec/pkg/tool/darwin_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"clang\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fno-common\"\r\nCXX=\"clang++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n3. What did you do?\r\n\r\nWhile debugging issue #15425, I changed the [default stream header priority frame](https://github.com/nemothekid/net/commit/aeb45a1fe1c0d808ad1fdc1a1ad1a3f947d5de9d) to `StreapDep=0,Weight=255` in order to [mimic Chrome](http://blog.kazuhooku.com/2015/04/dependency-based-prioritization-makes.html).\r\nSetting Stream Dependecy to 0 should be valid.\r\n\r\n4. What did you expect to see?\r\n\r\nThe client should accept the header frame.\r\n\r\n5. What did you see instead?\r\n\r\nThe client drops the header frame, as it things 0 is not a valid frame. In [frame.go#980](https://github.com/golang/net/blob/master/http2/frame.go#L980), `WriteHeaders` does not consider steam 0 to be a valid dependent stream id. As far as the spec is concerned, (and based off what I think Chrome does), 0 *is* a valid dependent stream id (meaning the stream doesn't depend on anything).\r\n\r\nHowever the `validStreamID` function, does not consider this, and writing the header fails.\r\n",
	"user": {
		"login": "nemothekid",
		"id": 940094,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2016-04-26T22:44:22Z",
	"created_at": "2016-04-26T03:02:14Z",
	"updated_at": "2016-04-26T22:44:22Z"
}
