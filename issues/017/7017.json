{
	"id": 51286080,
	"number": 7017,
	"state": "closed",
	"title": "cmd/vet: exits with code 0 after outputting warning (should exit with 1)",
	"body": "by **ej@evanjones.ca**:\n\n\u003cpre\u003eThe go vet docs state: \u0026quot;Its exit code is 2 for erroneous invocation of the tool, 1\nif a problem was reported, and 0 otherwise.\u0026quot; However, the command only ever returns\n0 or 2. I tested both with go1.2 and go version devel +9963a911bc14 Thu Dec 26 13:03:30\n2013 -0800 darwin/amd64. See the commands below.\n\nResult:\n* Exit code success: 0\n* Exit code after warning: 0 (SHOULD BE 1)\n* Exit code with bad flags: 2\n\n\n\nexample.go:\n\npackage main\n\nimport (\n\t\u0026quot;fmt\u0026quot;\n\t\u0026quot;go/ast\u0026quot;\n)\n\nfunc main() {\n\tc := ast.Comment{0, \u0026quot;text\u0026quot;}\n\tfmt.Println(\u0026quot;c: \u0026quot;, c)\n}\n\n\n\nCommands:\n\nYoho:~ ej$ go version\ngo version go1.2 darwin/amd64\nYoho:~ ej$ go vet example.go; echo \u0026quot;CODE: $?\u0026quot;\nexample.go:9: go/ast.Comment composite literal uses unkeyed fields\nCODE: 0\nYoho:~ ej$ go vet -bad example.go \u0026amp;\u0026gt; /dev/null; echo \u0026quot;CODE: $?\u0026quot;\nCODE: 2\nYoho:~ ej$ go tool vet example.go; echo \u0026quot;CODE: $?\u0026quot;\nexample.go:9: go/ast.Comment composite literal uses unkeyed fields\nCODE: 0\nYoho:~ ej$ /usr/local/go/pkg/tool/darwin_amd64/vet example.go; echo \u0026quot;CODE: $?\u0026quot;\nexample.go:9: go/ast.Comment composite literal uses unkeyed fields\nCODE: 0\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:39:05Z",
	"created_at": "2013-12-26T23:08:13Z",
	"updated_at": "2016-06-25T01:24:32Z"
}
