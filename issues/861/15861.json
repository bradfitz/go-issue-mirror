{
	"id": 157245160,
	"number": 15861,
	"state": "open",
	"title": "runtime: unexpected fault address 0xffffffffffffffff (and other more innocent addresses)",
	"body": "After updating the go version from 1.5.1 to 1.6.2 our application crashed right after startup in production. \r\nWe run it with start-stop-daemon and use the '-u' flag to change the user. This is relevant because changing this to sudo-ing the start-stop-daemon to the user instead of using the flag the crash vanished. We figured this out trough experimentation.\r\n```\r\n# this crashes\r\nstart-stop-daemon -u user --start golang-cool-api-v2000 \r\n```\r\n``` \r\n# this doesn't crash\r\nsudo -u user start-stop-daemon --start golang-cool-api-v2000 \r\n```\r\n  \r\n1. What version of Go are you using (`go version`)?\r\n1.6.2\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nLinux 3.2.12-gentoo 64bit\r\n\r\n3. What did you do?\r\nUpdate to golang 1.6.2 from 1.5.1\r\n\r\n4. What did you expect to see?\r\nNo difference :)\r\n\r\n5. What did you see instead?\r\n```\r\nunexpected fault address 0xffffffffffffffff\r\nfatal error: fault\r\n[signal 0xb code=0x1 addr=0xffffffffffffffff pc=0xffffffffffffffff]\r\n\r\ngoroutine 19 [running]:\r\nruntime.throw(0x9a3280, 0x5)\r\n        /usr/local/go/src/runtime/panic.go:547 +0x90 fp=0xc82002aed8 sp=0xc82002aec0\r\nruntime.sigpanic()\r\n        /usr/local/go/src/runtime/sigpanic_unix.go:27 +0x2ab fp=0xc82002af28 sp=0xc82002aed8\r\nruntime.call32(0x0, 0xc820109d20, 0xc820bea000, 0x1000000010)\r\n        /usr/local/go/src/runtime/asm_amd64.s:472 +0x3e fp=0xc82002af50 sp=0xc82002af28\r\nruntime.runfinq()\r\n        /usr/local/go/src/runtime/mfinal.go:200 +0x299 fp=0xc82002afc0 sp=0xc82002af50\r\nruntime.goexit()\r\n        /usr/local/go/src/runtime/asm_amd64.s:1998 +0x1 fp=0xc82002afc8 sp=0xc82002afc0\r\ncreated by runtime.createfing\r\n        /usr/local/go/src/runtime/mfinal.go:139 +0x60\r\n```\r\nthe address isn't the same between crashes\r\n```\r\nunexpected fault address 0xc8206fdd4a\r\nfatal error: fault\r\n[signal 0xb code=0x2 addr=0xc8206fdd4a pc=0xc8206fdd4a]\r\n\r\ngoroutine 18 [running]:\r\nruntime.throw(0x9a3280, 0x5)\r\n        /usr/local/go/src/runtime/panic.go:547 +0x90 fp=0xc82002e6d8 sp=0xc82002e6c0\r\nruntime.sigpanic()\r\n        /usr/local/go/src/runtime/sigpanic_unix.go:27 +0x2ab fp=0xc82002e728 sp=0xc82002e6d8\r\nruntime.call32(0x0, 0xc820c4a040, 0xc820c5c000, 0x1000000010)\r\n        /usr/local/go/src/runtime/asm_amd64.s:472 +0x3e fp=0xc82002e750 sp=0xc82002e728\r\nruntime.runfinq()\r\n        /usr/local/go/src/runtime/mfinal.go:200 +0x299 fp=0xc82002e7c0 sp=0xc82002e750\r\nruntime.goexit()\r\n        /usr/local/go/src/runtime/asm_amd64.s:1998 +0x1 fp=0xc82002e7c8 sp=0xc82002e7c0\r\ncreated by runtime.createfing\r\n        /usr/local/go/src/runtime/mfinal.go:139 +0x60\r\n```\r\nThis stacktrace doesn't contain any relevant information for me. All the stackframes of the other goroutines don't seem the same between crashes.\r\n It might be relevant (given the mfina.go in the stack) that this happened two times after the 9th gc and once after the 7th gc (GODEBUG=\"gctrace=2\" is set)",
	"user": {
		"login": "MStoykov",
		"id": 312246,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"created_at": "2016-05-27T16:34:40Z",
	"updated_at": "2016-06-10T17:38:21Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
