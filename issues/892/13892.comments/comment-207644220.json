{
	"id": 207644220,
	"body": "So the root cause of this issue is that the implementation of sendfile() for Solaris is not correct. In particular, for sizes beyond the size of the socket buffer, the same data will be sent `(data_len / socket_buffer_size) + (data_len % socket_buffer_size)` times.\r\n\r\nThis is only vaguely referenced in the Solaris sendfile(3c) man page.  The FreeBSD sendfile(2) man page however makes this quite clear:\r\n\r\n\u003e     When using a socket marked for non-blocking I/O, sendfile() may send\r\n\u003e     fewer bytes than requested.  In this case, the number of bytes success-\r\n\u003e     fully written is returned in *sbytes (if specified), and the error\tEAGAIN\r\n\u003e     is returned.\r\n\r\nAs a result, I believe the implementations for the following platforms may not actually be correct:\r\n- dragonfly\r\n- freebsd\r\n- solaris\r\n\r\nI am currently testing to determine whether any other platforms need a similar fix.",
	"user": {
		"login": "binarycrusader",
		"id": 541114,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-08T23:19:58Z",
	"updated_at": "2016-04-08T23:19:58Z"
}
