{
	"id": 51286745,
	"number": 7463,
	"state": "open",
	"title": "x/tools/cmd/goimports: fails to distinguish package from global variable",
	"body": "by **peterbourgon**:\n\n\u003cpre\u003e$ go version\ngo version go1.2.1 darwin/amd64\n\n$ cat a.go\npackage main\n\nimport (\n        logpkg \u0026quot;log\u0026quot;\n        \u0026quot;os\u0026quot;\n)\n\nvar (\n        log = logpkg.New(os.Stdout, \u0026quot;\u0026quot;, 0)\n)\n\nfunc main() {\n        b()\n}\n\n$ cat b.go\n~/src/tmp/logerr cat b.go\npackage main\n\nfunc b() {\n        log.Printf(\u0026quot;hello\u0026quot;)\n}\n\n$ goimports -d b.go\ngoimports -d b.go\ndiff b.go gofmt/b.go\n--- /var/folders/lj/1qllh78d2qqbyxkdg5jldcym0000gn/T/gofmt154060612     2014-03-04\n14:56:26.000000000 +0100\n+++ /var/folders/lj/1qllh78d2qqbyxkdg5jldcym0000gn/T/gofmt436718547     2014-03-04\n14:56:26.000000000 +0100\n@@ -1,5 +1,7 @@\n package main\n\n+import \u0026quot;log\u0026quot;\n+\n func b() {\n        log.Printf(\u0026quot;hello\u0026quot;)\n }\n\ngoimports doesn't detect that log.Printf in b.go refers to the global variable\n\u0026quot;log\u0026quot; defined in a.go, and erroneously imports the log package. Put another\nway, the expected diff is nothing.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Thinking"
		}
	],
	"comments": 16,
	"created_at": "2014-03-04T13:59:17Z",
	"updated_at": "2016-07-21T20:00:43Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	}
}
