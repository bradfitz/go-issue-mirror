{
	"id": 66096119,
	"body": "\u003ca id=\"c8\"\u003e\u003c/a\u003eComment 8:\n\n\u003cpre\u003eDmitry, I found I had to -benchtime=4s before the numbers stopped being noisy. (Notably\nfor -cpu=1)  That was on real hardware, with 8 cores.\n\nRuss, I understand that sync.Pool is heavier than a lock + slice.\n\nI asked what the alternative was. I'm confused by your:\n\n\u003e then maybe package sync needs to provide a faster free list.\n\nThat sounds awfully like a sync.Pool. You want a lighter freelist than sync.Pool in sync\ntoo? That would be confusing, having two very similar-but-different mechanisms.\nPresumably the lighter version wouldn't have a per-CPU cache, and thus could avoid the\n[128]byte false-sharing-avoidance pad. But I doubt it'd do too well without that. I\nguess you mean just using atomics to do a lock-free queue of unsafe.Pointer or\ninterface{}. Seems like it wouldn't be better enough to warrant the confusion.\n\nI'll watch this bug with interest.\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-06-19T06:15:20Z",
	"updated_at": "2014-12-08T10:45:41Z"
}
