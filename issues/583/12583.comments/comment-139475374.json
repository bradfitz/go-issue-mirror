{
	"id": 139475374,
	"body": "On 11 September 2015 at 14:44, Matthew Dempsky \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e Unlike for C, this feature needs to be part of the Go toolchain, because\n\u003e Go supports package initializers that run before main.\n\u003e\nWell, yes, but...\n\n\n\u003e The simple crunchgen approach of renaming the main symbol in existing\n\u003e packages and adding a new multiplexing main wrapper function fails\n\u003e because we don't want (for example) gofmt and vet's flags to interfere,\n\u003e so we need to control what init routines are called.\n\u003e\n These init routines don't get called by magic: they are called by\nmain.init. So, yes, replacing main with a multiplexing version won't work\n(particularly as I don't think the symbol called \"main\" always ends up\nbeing called!) but (I think) you could replace \"main.init\" and \"main.main\"\nto achieve the desired effect. Still not sure it's a good idea though...\n\nCheers,\nmwh\n",
	"user": {
		"login": "mwhudson",
		"id": 672022,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-11T07:41:34Z",
	"updated_at": "2015-09-11T07:41:34Z"
}
