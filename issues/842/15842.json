{
	"id": 156865582,
	"number": 15842,
	"state": "open",
	"title": "encoding/asn1: valid GeneralizedTime not parsed",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo version go1.6.2 darwin/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/.../golang\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"/usr/local/bin/gcc-5\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fno-common\"\r\nCXX=\"/usr/local/bin/c++-5\"\r\nCGO_ENABLED=\"1\"\r\n\r\n3. What did you do?\r\nI Unmarshall 3rdparty asn1 data\r\n\r\n\r\n4. What did you expect to see?\r\nIt to be unmarshalled successfully it is correct.\r\n\r\n\r\n5. What did you see instead?\r\nasn1: time did not serialize back to the original value and may be invalid: given \"20160525195606.36Z\", but serialized as \"20160525195606Z\"\r\n\r\n\r\nNote that the data is 3rdparty, I have no control over it. I see that golang asn1 disclames limited support. I am curious what are my options to workaround the issue - is it just a fork of the original library or there are other ways to hook my own parser for the GeneralizedTime?\r\n\r\n",
	"user": {
		"login": "ggeorgiev",
		"id": 1084892,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"created_at": "2016-05-25T22:34:44Z",
	"updated_at": "2016-05-26T04:18:07Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
