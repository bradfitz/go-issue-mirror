{
	"id": 66096727,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eIn the original example, the dividend is not non-negative, since it is a signed integer,\nso it cannot be replaced by a shift.\n\nFor example (-1) \u0026gt;\u0026gt; 3 == -1 which is different from (-1) / 8.\nDivision by 8 rounds *up* negative numbers, so it cannot be the same as right-shift\nwhich always rounds down.\n\nTo implement x/8 it is possible to write (x \u0026gt;= 0  ? x\u0026gt;\u0026gt;3 : (x+7)\u0026gt;\u0026gt;3))\nwhich is translated as (x + (x \u0026lt; 0 ? 7 : 0)) \u0026gt;\u0026gt; 3\n\nAs a consequence the compiler produces for x / 8 the following expression:\n\n(x + int(uint(x\u0026gt;\u0026gt;63)\u0026gt;\u0026gt;61)) \u0026gt;\u0026gt; 3\n\nsince x\u0026gt;\u0026gt;63 is -1 for negative x, 0 otherwise, so shifting by 61 bits will produce\nthe desired \"x \u0026lt; 0 ? 7 : 0\".\n\nThe nonsensical assembly shown by dfc is a different issue.\u003c/pre\u003e",
	"user": {
		"login": "remyoudompheng",
		"id": 175246,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-07-07T20:24:36Z",
	"updated_at": "2014-12-22T06:36:07Z"
}
