{
	"id": 66096726,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eI believe this is because / 8 cannot be rewritten as \u003e\u003e 3 if the dividend is signed. \n\nI verified this by rewriting division to take a uint, and we get better (but not\nperfect) code\n\n\"\".division t=1 size=32 value=0 args=0x10 locals=0\n        000000 00000 (div.go:3) TEXT    \"\".division+0(SB),4,$0-16\n        000000 00000 (div.go:3) NOP     ,\n        000000 00000 (div.go:3) NOP     ,\n        000000 00000 (div.go:3) MOVQ    \"\".bits+8(FP),BX\n        0x0005 00005 (div.go:3) FUNCDATA        $2,gclocals·9308e7ef08d2cc2f72ae1228688dacf9+0(SB)\n        0x0005 00005 (div.go:3) FUNCDATA        $3,gclocals·3280bececceccd33cb74587feedb1f9f+0(SB)\n        0x0005 00005 (div.go:4) MOVQ    BX,AX\n        0x0008 00008 (div.go:4) ADDQ    $7,BX\n        0x000c 00012 (div.go:4) MOVQ    AX,BX\n        0x000f 00015 (div.go:4) ADDQ    $7,BX\n        0x0013 00019 (div.go:4) SHRQ    $3,BX\n        0x0017 00023 (div.go:4) MOVQ    BX,\"\".~r1+16(FP)\n        0x001c 00028 (div.go:4) RET     ,\n\n\nInterestingly 0x0005 and 0x0008 make no sense. It copies BX to AX, then adds 7 to BX,\nthen copies AX to BX, overwriting the previous addition of BX, then adds 7 to BX _again,\nthen shifts BX 3 bits to the right, as expected.\u003c/pre\u003e",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-07-07T13:16:06Z",
	"updated_at": "2014-12-08T10:46:17Z"
}
