{
	"id": 51285016,
	"number": 6331,
	"state": "closed",
	"title": "cmd/gc: escape analysis should free objects that could not be stack allocated",
	"body": "\u003cpre\u003eA recent change set a threshold of 16MiB for stack allocating objects.  Objects larger\nthan 16MiB will be heap allocated even when their scope is known to be limited.\n\nInstead of treating these objects as having indefinite scope, the compiler could\nautomatically insert a call to free when their containing scope is exited.\n\nLooking toward the future, this is probably not profitable for small objects as better\ngarbage collection mechanisms are known to outperform individual frees.  This is usually\nnot the case for large objects as garbage collectors  make a lifetime assumption based\non the size of an object.  In the large object case an explicit reclamation is likely to\nbe a win into the future.\u003c/pre\u003e",
	"user": {
		"login": "lexprfuncall",
		"id": 5360361,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "GarbageCollector"
		}
	],
	"comments": 4,
	"closed_at": "2015-01-16T11:35:08Z",
	"created_at": "2013-09-04T23:09:13Z",
	"updated_at": "2016-06-25T01:18:08Z"
}
