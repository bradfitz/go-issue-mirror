{
	"id": 66049258,
	"body": "\u003ca id=\"c7\"\u003e\u003c/a\u003eComment 7 by **charlie.c.kim**:\n\n\u003cpre\u003eThis should be sufficient for now -- use a random id for every DNS request.   ID is\nalready checked.\n\nOther:\nSource port randomization should also be checked.\nIs this the best way to get 16 unsigned bits of random number: uint16(rand.Uint32())?\nOther DNS spoof issues should be checked out.\n\n\ndiff -r bdfc3faa253a src/pkg/net/dnsclient.go\n--- a/src/pkg/net/dnsclient.go  Fri Dec 04 21:58:32 2009 -0800\n+++ b/src/pkg/net/dnsclient.go  Fri Dec 04 23:16:04 2009 -0800\n@@ -17,6 +17,7 @@\n import (\n        \"once\";\n        \"os\";\n+        \"rand\";\n )\n\n // DNSError represents a DNS lookup error.\n@@ -44,7 +45,7 @@\n                return nil, \u0026DNSError{\"name too long\", name, \"\"}\n        }\n        out := new(_DNS_Msg);\n-       out.id = 0x1234;\n+       out.id = uint16(rand.Uint32());          // random to minimize spoof\n        out.question = []_DNS_Question{\n                _DNS_Question{name, _DNS_TypeA, _DNS_ClassINET},\n        };\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2009-12-05T07:04:31Z",
	"updated_at": "2014-12-08T10:04:12Z"
}
