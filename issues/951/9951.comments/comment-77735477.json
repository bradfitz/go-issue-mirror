{
	"id": 77735477,
	"body": "I've not seen the problem since I last reported it. I've used this go\nversion:\n\ngo version devel +edadffa Fri Feb 20 18:31:25 2015 +0000 linux/amd64\n\nOn 8 March 2015 at 13:34, Dylan Visher \u003cnotifications@github.com\u003e wrote:\n\n\u003e Same issue is happening for me on Mac OSX 10.10.2 on a Macbook Pro. This\n\u003e bug is present on 1.4.2 as well as the current master branch (go version\n\u003e devel +cbc854a Sat Mar 7 07:09:04 2015 +0000 darwin/amd64). This is the\n\u003e smallest panic trace I have managed to isolate so far. I have updated all\n\u003e of the packages in my path \"go get -u all\".\n\u003e\n\u003e runtime:greyobject: checkmarks finds unexpected unmarked object obj=0x2138e77a8, mbits-\u003ebits=0x1 *mbits-\u003ebitp=0x9f\n\u003e runtime: found obj at *(0x20bbcdb90+0x28)\n\u003e runtime:greyobject Span: obj=0x2138e77a8 k=0x109c73 s.start=0x2138e6000 s.limit=0x2138e8000 s.sizeclass=1 s.elemsize=8\n\u003e  *(obj+0) = 0x2118578c0\n\u003e fatal error: checkmark found unmarked object\n\u003e\n\u003e runtime stack:\n\u003e runtime.throw(0x4bbbf0, 0x1f)\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/panic.go:508 +0x98 fp=0x2087cfc10 sp=0x2087cfbf8\n\u003e runtime.greyobject(0x2138e77a8, 0x20bbcdb90, 0x28, 0x2087cfd00, 0x220890e800, 0x220890e800)\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/mgc.go:440 +0x2c9 fp=0x2087cfc70 sp=0x2087cfc10\n\u003e runtime.scanobject(0x20bbcdb90, 0x8f90470, 0x0, 0x220890e800, 0x220890e800)\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/mgc.go:573 +0x3f0 fp=0x2087cfd20 sp=0x2087cfc70\n\u003e runtime.drainworkbuf(0x220890e800, 0x1)\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/mgc.go:650 +0x184 fp=0x2087cfd50 sp=0x2087cfd20\n\u003e runtime.scanblock(0x0, 0x0, 0x0)\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/mgc.go:610 +0xe5 fp=0x2087cfd98 sp=0x2087cfd50\n\u003e runtime.gchelper()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/mgc.go:1562 +0x75 fp=0x2087cfdc8 sp=0x2087cfd98\n\u003e runtime.stopm()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/proc1.go:1052 +0x164 fp=0x2087cfdf0 sp=0x2087cfdc8\n\u003e runtime.gcstopm()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/proc1.go:1215 +0xff fp=0x2087cfe20 sp=0x2087cfdf0\n\u003e runtime.schedule()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/proc1.go:1424 +0xa4 fp=0x2087cfe50 sp=0x2087cfe20\n\u003e runtime.gosched_m(0x2086fe120)\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/proc1.go:1535 +0x119 fp=0x2087cfe70 sp=0x2087cfe50\n\u003e runtime.newstack()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/stack1.go:712 +0xa3a fp=0x2087cffc8 sp=0x2087cfe70\n\u003e runtime.morestack()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/asm_amd64.s:311 +0x7e fp=0x2087cffd0 sp=0x2087cffc8\n\u003e\n\u003e goroutine 1 [runnable]:golang.org/x/tools/go/pointer.(*analysis).setValueNode(0x208a116c0, 0x22089e9948, 0x212277500, 0x17800, 0x20f4d7d40)\n\u003e     /Users/dylanvisher/go/src/golang.org/x/tools/go/pointer/gen.go:73 fp=0x2124d6e08 sp=0x2124d6e00golang.org/x/tools/go/pointer.(*analysis).genFunc(0x208a116c0, 0x20f4d7d40)\n\u003e     /Users/dylanvisher/go/src/golang.org/x/tools/go/pointer/gen.go:1189 +0xda9 fp=0x2124d7088 sp=0x2124d6e08golang.org/x/tools/go/pointer.(*analysis).generate(0x208a116c0)\n\u003e     /Users/dylanvisher/go/src/golang.org/x/tools/go/pointer/gen.go:1273 +0x481 fp=0x2124d7240 sp=0x2124d7088golang.org/x/tools/go/pointer.Analyze(0x20c09ec10, 0x0, 0x0, 0x0)\n\u003e     /Users/dylanvisher/go/src/golang.org/x/tools/go/pointer/analysis.go:287 +0x1232 fp=0x2124d7970 sp=0x2124d7240golang.org/x/tools/oracle.ptrAnalysis(0x20c09ec00, 0x210f05e90)\n\u003e     /Users/dylanvisher/go/src/golang.org/x/tools/oracle/oracle.go:478 +0x34 fp=0x2124d79a8 sp=0x2124d7970golang.org/x/tools/oracle.doCallgraph(0x20c09ec00, 0x0, 0x0, 0x0, 0x0, 0x0)\n\u003e     /Users/dylanvisher/go/src/golang.org/x/tools/oracle/callgraph.go:25 +0x94 fp=0x2124d7b60 sp=0x2124d79a8golang.org/x/tools/oracle.(*Oracle).query(0x20c09ec00, 0x66efa0, 0x0, 0x0, 0x0, 0x0)\n\u003e     /Users/dylanvisher/go/src/golang.org/x/tools/oracle/oracle.go:420 +0x10b fp=0x2124d7bc8 sp=0x2124d7b60golang.org/x/tools/oracle.Query(0x0, 0x0, 0x0, 0x7fff5fbff187, 0x9, 0x0, 0x0, 0x0, 0x0, 0x675760, ...)\n\u003e     /Users/dylanvisher/go/src/golang.org/x/tools/oracle/oracle.go:270 +0x641 fp=0x2124d7d50 sp=0x2124d7bc8\n\u003e main.main()\n\u003e     /Users/dylanvisher/go/src/golang.org/x/tools/cmd/oracle/main.go:169 +0x74c fp=0x2124d7f98 sp=0x2124d7d50\n\u003e runtime.main()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/proc.go:86 +0x1d3 fp=0x2124d7fe0 sp=0x2124d7f98\n\u003e runtime.goexit()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/asm_amd64.s:2430 +0x1 fp=0x2124d7fe8 sp=0x2124d7fe0\n\u003e\n\u003e goroutine 2 [force gc (idle)]:\n\u003e runtime.gopark(0x546ed8, 0x675270, 0x4852d0, 0xf)\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/proc.go:151 +0x108 fp=0x208718798 sp=0x208718768\n\u003e runtime.goparkunlock(0x675270, 0x4852d0, 0xf)\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/proc.go:157 +0x48 fp=0x2087187c0 sp=0x208718798\n\u003e runtime.forcegchelper()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/proc.go:120 +0xce fp=0x2087187e0 sp=0x2087187c0\n\u003e runtime.goexit()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/asm_amd64.s:2430 +0x1 fp=0x2087187e8 sp=0x2087187e0\n\u003e created by runtime.init·4\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/proc.go:108 +0x33\n\u003e\n\u003e goroutine 3 [garbage collection]:\n\u003e runtime.systemstack_switch()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/asm_amd64.s:199 fp=0x208718f48 sp=0x208718f40\n\u003e runtime.gcwork(0x0)\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/malloc.go:583 +0x2b9 fp=0x208718fc0 sp=0x208718f48\n\u003e runtime.backgroundgc()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/mgc0.go:87 +0x62 fp=0x208718fe0 sp=0x208718fc0\n\u003e runtime.goexit()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/asm_amd64.s:2430 +0x1 fp=0x208718fe8 sp=0x208718fe0\n\u003e created by runtime.gogc\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/malloc.go:501 +0xe2\n\u003e\n\u003e goroutine 4 [finalizer wait]:\n\u003e runtime.gopark(0x546ed8, 0x689388, 0x484a10, 0xe)\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/proc.go:151 +0x108 fp=0x208719748 sp=0x208719718\n\u003e runtime.goparkunlock(0x689388, 0x484a10, 0xe)\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/proc.go:157 +0x48 fp=0x208719770 sp=0x208719748\n\u003e runtime.runfinq()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/malloc.go:959 +0xb7 fp=0x2087197e0 sp=0x208719770\n\u003e runtime.goexit()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/asm_amd64.s:2430 +0x1 fp=0x2087197e8 sp=0x2087197e0\n\u003e created by runtime.createfing\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/malloc.go:939 +0x68\n\u003e\n\u003e goroutine 17 [GC sweep wait]:\n\u003e runtime.gopark(0x546ed8, 0x689390, 0x47b430, 0xd)\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/proc.go:151 +0x108 fp=0x20871bf98 sp=0x20871bf68\n\u003e runtime.goparkunlock(0x689390, 0x47b430, 0xd)\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/proc.go:157 +0x48 fp=0x20871bfc0 sp=0x20871bf98\n\u003e runtime.bgsweep()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/mgc0.go:111 +0xdd fp=0x20871bfe0 sp=0x20871bfc0\n\u003e runtime.goexit()\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/asm_amd64.s:2430 +0x1 fp=0x20871bfe8 sp=0x20871bfe0\n\u003e created by runtime.gc\n\u003e     /Users/dylanvisher/gosource/go/src/runtime/mgc.go:2131 +0xe6b\n\u003e\n\u003e —\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/9951#issuecomment-77729012\u003e.\n\u003e\n",
	"user": {
		"login": "anacrolix",
		"id": 988750,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-08T06:22:50Z",
	"updated_at": "2015-03-08T06:22:50Z"
}
