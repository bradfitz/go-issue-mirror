{
	"id": 73557856,
	"body": "I don't see any problems with this statement. In fact, if you look up immutability, Wikipedia says:\r\n\r\n\"In object-oriented and functional programming, an immutable object is an object whose state cannot be modified after it is created.\"\r\n\r\nas the very first sentence. This is exactly how we see Go strings (http://en.wikipedia.org/wiki/Immutable_object)\r\n\r\nIt may not be \"formal\" but the spec is on purpose semi-formal, which is why it is actually readable.\r\n\r\nAlso, we cannot remove 3): \"non-constant\" is crucial here because even if you have a constant string and constant index, say \"hello\"[0], this expression is not constant.\r\n\r\nI'd be ok to add that one cannot assign to s[i] (your proposal 2), for consistency, and to add to Effective Go if there's a good spot.\r\n\r\nLeaving to r, rsc, iant to chime in.\r\n",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-09T18:06:20Z",
	"updated_at": "2015-02-09T18:06:20Z"
}
