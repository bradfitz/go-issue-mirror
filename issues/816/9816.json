{
	"id": 57064735,
	"number": 9816,
	"state": "closed",
	"title": "spec: remove \"strings are immutable\" statement",
	"body": "This statement causes numerous confusion in mailing lists, people try to tie it to thread-safety and inability to assign to string variables. And it does not have any formal meaning behind it. The formal part here is that string indexing operation cannot be assigned to and is not addressable. And that is stated right in the next paragraph: \"if s[i] is the i'th byte of a string, \u0026s[i] is invalid\" and duplicated in description of addressability and assignment statement.\r\n\r\nThe kind of \"immutability\" that statement refers to is implementation ground. And so better be described in Effective Go in extended form with implications to thread-safety and string copying.\r\n\r\nThe proposed changes:\r\n1. Remove \"Strings are immutable: once created, it is impossible to change the contents of a string\".\r\n2. Add it is illegal to assign to s[i] right after \"if s[i] is the i'th byte of a string, \u0026s[i] is invalid\" for consistency.\r\n3. Remove \"non-constant\" in \"a[x] is the non-constant byte value at index x and the type of a[x] is byte\".\r\n4. Add a section to Effective Go with the discussion of string \"immutability\".",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 8,
	"closed_at": "2015-02-09T18:42:24Z",
	"created_at": "2015-02-09T17:47:27Z",
	"updated_at": "2016-06-25T02:00:24Z"
}
