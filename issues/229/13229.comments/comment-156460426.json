{
	"id": 156460426,
	"body": "Alberto,\r\nIf you really cared, you would have read my patch and see the two relevant literature references as comments.\r\nAlso, yes I would appreciate if a reviewer god damn reads the .ucking wiki article. I did not expect them to do a literature research on the subject!\r\nJust read the comments made to this issue and the original thread. Most commenters really did not care to read the wiki or the patch.\r\n\r\nbits\u003c100 is just a made up limit, I havent read or come up with any \"bit limit\" on when lucas should be used. In any case, real applications will care for primes of 200+ bits. For example EdDsa uses 250+ bits primes.\r\n\r\nsprp: strong probable prime (standard term in number theory)\r\nslprp: strong lucas probable prime (standard term in number theory)\r\nReally easy definitions, you would quickly recognize them if you cared to read my patch, the wiki or the papers ;)\r\n\r\nAs you know, Go has a compatibility promise. I did not want to clutter the api, just extend the current api with how Sage/Pari/Gp does it. Notice that there is no loss of MR(n) functionality. \r\nThat's why we need 'configuration'.\r\nUsers just use whatever they want. n=0 for BPSW, n\u003e0 if they want MR(n).\r\n\r\nIf you cared to read some basic info about primality testing, you would not ask why we use the strong versions, but i'll explain in any case: strong tests are better detectors of primes/composites. Also the existing MR code is itself a strong probable prime test ;)\r\n\r\nGmp is the only serious lib that does not employ lucas tests, dont know why. Why dont you ask them and let us know.\r\n\r\nBPSW is:\r\n- either necessary/sufficient (notice the math term;) for primality\r\n- or it has an extremely extremely low error rate (MR's is 1/4). Nobody was able to provide a composite that fools this test since 1980! You can contruct composites that fool MR(n=64) for example.\r\n\r\nNobody knows which yet.\r\n\r\nYou should use BPSW, if not, you should use MR(n=40+) for a serious application. BPSW is faster than the latter case.\r\n\r\nProbable prime means:\r\n- either prime\r\n- very rare composite that fooled your prp test.\r\n\r\nThat is the mathematically correct term for what all these functions produce.\r\n\r\nI hope I covered all your questions, let me know if I missed anything. ",
	"user": {
		"login": "jfcg",
		"id": 1410597,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-13T15:19:07Z",
	"updated_at": "2015-11-13T15:19:07Z"
}
