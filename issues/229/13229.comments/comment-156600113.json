{
	"id": 156600113,
	"body": "Speed is not the only concern.\n\nThe major client for ProbablyPrime is crypto/rsa.\n\nI did a survey of major open source crypto libraries to see how\ndo they test for primes when generating RSA keys:\n\nOpenSSL:\nhttps://www.openssl.org/docs/manmaster/crypto/BN_generate_prime.html\nOnly uses Miller-Rabin probabilistic primality test, with bounded\nfalse positive rate of at most 2^-80 for random input.\n\nNSS: function mpp_make_prime in\nhttp://hg.mozilla.org/projects/nss/file/tip/lib/freebl/mpi/mpprime.c#l392\nuses Fermat test followed by Miller-Rabin tests.\n\nCryptoPP: RSA key generation uses the VerifyPrime function at\nhttps://github.com/weidai11/cryptopp/blob/master/nbtheory.cpp#L249\nand VerifyPrime uses strong lucas test followed by Miller-Rabin tests.\n\nIt's interesting to see that:\n1. all of them uses MR test in the last step (ranging from 2 rounds\nto 40 rounds, our crypto/rand.Prime uses 20 rounds)\n2. none of them uses Baillie-PSW,\n3. only CryptoPP uses strong lucas test.\n",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-14T00:40:33Z",
	"updated_at": "2015-11-14T00:40:33Z"
}
