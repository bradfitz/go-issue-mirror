{
	"id": 159396445,
	"body": "yes, windoze timers have much less resolution. The n that gives me (on my ubuntu laptop) equal times is 5 (for generating 1000 random odd ints):\r\n\r\n// 501 to 512 bits, 5 of them are primes\r\nMR(n=5) took 60.024664 ms\r\nBPSW took 60.833635 ms\r\n\r\n// 1013 to 1024 bits, 4 of them are primes\r\nMR(n=5) took 299.454722 ms\r\nBPSW took 298.373894 ms\r\n\r\nFor 512 bit numbers, 261 of them exactly pass basic tests. So 256+5*5=281 MR-rounds took 60 ms.\r\nFor BPSW 261 base2 tests + 5 JL took 60 ms.\r\nSo a JL \u003e 4 MR-rounds. (about ~5-7 MR-rounds. base2 test is slightly faster than base-x now, hence the bigger sign)\r\n\r\nFor 1024 bit numbers, 251 of them exactly pass basic tests. 247+4*5=267 MR-rounds took 299 ms.\r\nFor BPSW 251 base2 tests + 4 JL took 299 ms.\r\nSo again JL \u003e 4 MR-rounds, about ~5-7 MR-rounds.\r\n\r\nI think we have done enough timing measurements and have a pretty good idea about what component of each test takes how long.\r\nSince Lucas test is executed only when the input is a strong probable prime to base 2, we have a pretty good average run time for BPSW. It is strictly faster than MR-only test when rounds \u003e 5.\r\nAny decent application, sure of random input, has to use rounds \u003e= 40 in my opinion for MR-only.\r\n\r\nBPSW could become faster if we spend time to mongomerify lucasMod function, but I think the effort is not worth it. We will increase its speed only for strong pseudoprimes-to-base-2 which are very rare.\r\n\r\nI think it is time to decide on how to proceed further. What do you think of the signature issue ?",
	"user": {
		"login": "jfcg",
		"id": 1410597,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-24T20:30:27Z",
	"updated_at": "2015-11-24T20:30:27Z"
}
