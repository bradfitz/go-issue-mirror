{
	"id": 130460492,
	"number": 14178,
	"state": "closed",
	"title": "x/crypto/openpgp: Infinite loop handling truncated clearsigned messages",
	"body": "When attempting to decode an OpenPGP clearsigned message that has been truncated, the parser at [golang.org/x/crypto/openpgp/clearsign](https://godoc.org/golang.org/x/crypto/openpgp/clearsign) enters into an infinite loop. This is clearly wrong. I would have expected that the decoder behave the same way as if it were given any other bad input: it fails to decode a PGP packet and returns all the data.\r\n\r\nThere is a fix for this bug at https://go-review.googlesource.com/#/c/17693/, it just needs reviewing.\r\n\r\nMinimal program that triggers the bug:\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n        \"fmt\"\r\n        \"golang.org/x/crypto/openpgp/clearsign\"\r\n)\r\n\r\nfunc main() {\r\n        message := \"-----BEGIN PGP SIGNED MESSAGE-----\\n\\nHello\"\r\n        fmt.Println(clearsign.Decode([]byte(message)))\r\n}\r\n```\r\n\r\nExpected output:\r\n\r\n    \u003cnil\u003e [45 45 45 ...]\r\n\r\nActual output:\r\n\r\n    (doesn't terminate)\r\n\r\nMy go version:\r\n\r\n    go version go1.5.3 darwin/amd64",
	"user": {
		"login": "bwester",
		"id": 1501338,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "agl",
		"id": 21203,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-03-10T22:09:19Z",
	"created_at": "2016-02-01T19:38:26Z",
	"updated_at": "2016-03-10T22:09:19Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
