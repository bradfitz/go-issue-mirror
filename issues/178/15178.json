{
	"id": 146665623,
	"number": 15178,
	"state": "closed",
	"title": "fmt: documentation unclear regarding %g precision formatting",
	"body": "Current go 1.5 documentation is not clear regarding the %g formatting. In particular, it states\r\n\r\n\u003e For floating-point values, width sets the minimum width of the field and precision sets the number of places after the decimal, if appropriate, except that for %g/%G it sets the total number of digits. For example, given 123.45 the format %6.2f prints 123.45 while %.4g prints 123.5. The default precision for %e and %f is 6; for %g it is the smallest number of digits necessary to identify the value uniquely. \r\n\r\nThis seems to imply that width for %g/%G is the total number of digits that will be outputted, while it is the number of significant digits, therefore leading zeroes does not contribute to the count. For example, formatting 0.001234 with %.3g will be printed without changes, 0.001234, while from the docs it seems that only 0.001 should be printed.\r\n\r\nI propose to change the documentation and change the following:\r\n\r\n\u003e except that for %g/%G it sets the total number of digits. For example, given 123.45 the format %6.2f prints 123.45 while %.4g prints 123.5.\r\n\r\nwith the following (bold used to mark the changes)\r\n\r\n\u003e except that for %g/%G it sets the total number of **significant** digits. For example, given 123.45 the format %6.2f prints 123.45 while %.4g prints 123.5**, and 0.00123 is printed as 0.001 by %.3f, but printed as 0.00123 by %.3g**.\r\n\r\nOr with a better statement and/or example if the one I provided are not accurate enough.",
	"user": {
		"login": "akiross",
		"id": 884092,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-04-14T00:13:35Z",
	"created_at": "2016-04-07T15:49:31Z",
	"updated_at": "2016-04-14T00:13:35Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
