{
	"id": 51277624,
	"number": 1304,
	"state": "closed",
	"title": "runtime: panic leaves memory in unpredictable state",
	"body": "\u003cpre\u003eAs Mikael Tillenius reported in the mailing list, runtime panics may leave global\nvariables in an unpredictable state.  The following program, for instance, will print\n\u0026quot;a = 1\u0026quot;, rather than most expected \u0026quot;a = 2\u0026quot;.\n\npackage main\n\nvar a = 1\n\nfunc main() {\n    defer func() {\n        recover()\n        println(\u0026quot;a =\u0026quot;, a)\n    }()\n    a = 2\n    a = a/0\n    a = 3\n}\n\nAs a consequence, even if panics are recovered, when there is interaction with global\nvariables, they may leave the system in an unpredictable state.  Due to the nature of\nthe problem, not even synchronization primitives will make the behavior predictable.\n\nAt the very least, the issue should be documented in the specification and memory model.\u003c/pre\u003e",
	"user": {
		"login": "niemeyer",
		"id": 378683,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 9,
	"closed_at": "2014-12-08T10:07:43Z",
	"created_at": "2010-11-28T02:53:42Z",
	"updated_at": "2016-06-24T19:22:39Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
