{
	"id": 153907610,
	"number": 15624,
	"state": "open",
	"title": "encoding/json: unable to decode int64 slice",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n 1.6\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nset GOARCH=amd64\r\nset GOBIN=\r\nset GOEXE=.exe\r\nset GOHOSTARCH=amd64\r\nset GOHOSTOS=windows\r\nset GOOS=windows\r\nset GOPATH=D:\\litead\\oxygen\r\nset GORACE=\r\nset GOROOT=C:\\go\r\nset GOTOOLDIR=C:\\go\\pkg\\tool\\windows_amd64\r\nset GO15VENDOREXPERIMENT=1\r\nset CC=gcc\r\nset GOGCCFLAGS=-m64 -mthreads -fmessage-length=0\r\nset CXX=g++\r\nset CGO_ENABLED=1\r\n\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n[https://play.golang.org/p/A4CLM3P6Dw](https://play.golang.org/p/A4CLM3P6Dw)\r\n\r\n4. What did you expect to see?\r\ndecode the int64 slice successfully\r\n\r\n5. What did you see instead?\r\nan error:\r\n\u003e json: cannot unmarshal string into Go value of type int64\r\n\r\naccording to the documentation, the behavior is correct, but this makes it hard to decode an int64 slice (although there are workarounds). It will be good if 'string' tag could also be applied to slices.\r\n\r\n\r\n",
	"user": {
		"login": "localvar",
		"id": 504447,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FeatureRequest"
		}
	],
	"comments": 1,
	"created_at": "2016-05-10T01:53:17Z",
	"updated_at": "2016-08-12T01:33:28Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
