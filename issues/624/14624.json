{
	"id": 138282922,
	"number": 14624,
	"state": "open",
	"title": "cmd/link: traverse the symbol table less",
	"body": "@ianlancetaylor commented in CL 20165:\r\n\r\n\u003e The single slowest operation a linker can do is traverse the symbol table and look at every symbol.  The single biggest improvement in link time in the gold linker was changing the number of symbol table traversals from about 25 to about 3.  Yet cmd/link traverses the entire symbol table all the time.  It's not good.\r\n\r\n@crawshaw replied:\r\n\r\n\u003e Agreed. There are a couple of other not good features:\r\n\u003e\r\n\u003e  * LSym has a Type word, but it's not filled out until some nebulous intermediate pass, so lots of code (like this) ends up string matching on the symbol name prefix.\r\n\u003e  * dodata does some odd build-a-linked-list, then sort-the-linked-list-into-segments game.\r\n\u003e\r\n\u003e I think these problems and the many traversals could be fixed by the object file reader assigning Type and building useful link-wide slices when a symbol is read in. But it is pretty major surgery I'm not ready to perform.\r\n\r\nI've moved this to an issue, since folks look for work and ideas in issues.\r\n\r\ncc @mwhudson who likes object files. :)\r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"comments": 1,
	"created_at": "2016-03-03T20:03:05Z",
	"updated_at": "2016-04-10T00:48:16Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
