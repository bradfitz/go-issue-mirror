{
	"id": 51288410,
	"number": 8589,
	"state": "closed",
	"title": "spec: allow elision of explicit type for key in map literal",
	"body": "\u003cpre\u003eGiven a type\ntype T struct {\n\tmethod   string\n}\n\nThis is not accepted:\n\nvar _ = map[T]int{\n\t{\u0026quot;foo\u0026quot;}: 3,\n}\n\nInstead one must write\n\nvar _ = map[T]int{\n\tT{\u0026quot;foo\u0026quot;}: 3, // must mention T\n}\n\nYet this is accepted:\n\nvar _ = map[int]T{\n\t3: {\u0026quot;foo\u0026quot;},\n}\n\nFeels inconsistent.\n\nThe spec says that *elements* can elide the type (T), but for maps it seems perfectly\nreasonable to permit elision for the key as well. That would be backwards-compatible.\u003c/pre\u003e",
	"user": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "LanguageChange"
		},
		{
			"name": "Started"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2015-03-20T23:09:12Z",
	"created_at": "2014-08-25T22:45:46Z",
	"updated_at": "2016-06-25T01:40:10Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
