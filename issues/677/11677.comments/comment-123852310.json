{
	"id": 123852310,
	"body": "\u003e I think for 1.6 we need to make all work equally available to all goroutines. That is, allow mutators to rescan stacks and globals if that's the next piece of work that GC needs to perform.\r\n\r\nI think this is a good idea.\r\n\r\n\u003e We need to put them to sleep before the allocation. That is, you already have credit to pay for the allocation, or you are not allowed to do it.\r\n\r\nPerhaps. Currently, we only do assists if we just did a large allocation or got a new span to keep it off the common path, which means it would be tricky to do the assist before we do the allocation. But we could change this so it updates the assist debt first and if it's over some small-ish threshold, do the assist (or any number of variations on this theme).\r\n\r\n\u003e I am also worried about transition period when heap profile/size changes. If controller parameters are incorrect, can't mutators under-help and lead to overallocation?\r\n\r\nNo, modulo bugs like this one. We conservatively base the total assist work on the entire allocated heap size. (Note that this is different from what went out in the original GC pacing proposal, which was much less conservative and occasionally had very bad results.)",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-22T20:27:09Z",
	"updated_at": "2015-07-22T20:28:45Z"
}
