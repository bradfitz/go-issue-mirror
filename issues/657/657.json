{
	"id": 51276766,
	"number": 657,
	"state": "closed",
	"title": "crypto/tls: Conn.WaitConnectionState unrealiable?",
	"body": "by **matthew.dempsky**:\n\n\u003cpre\u003eThere's no documentation on what crypto.tls.Conn.WaitConnectionState is \nactually supposed to do, so maybe this is intentional, but looking at the code, \nit appears that if the handshake has already been made by time the caller \ncalls WaitConnectionState, then he will get an immediate ConnectionState \nresponse, and then the channel will still get queued.\n\nI would think the channel should only get added to waitQueue if the \nhandshake has not already been made, so that the record processor does not \ntry to write to the channel again later.\n\n\u003ca href=\"http://golang.org/src/pkg/crypto/tls/record_process.go#L134\"\u003ehttp://golang.org/src/pkg/crypto/tls/record_process.go#L134\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:05:25Z",
	"created_at": "2010-03-08T21:15:36Z",
	"updated_at": "2016-06-24T19:14:24Z"
}
