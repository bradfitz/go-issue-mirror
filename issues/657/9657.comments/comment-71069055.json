{
	"id": 71069055,
	"body": "@minux @griesemer @bradfitz Thank you all for the careful responses.\r\n\r\nI do see your point on the basis that calling `(*bufio.Writer).Reset(nil)` should result in a poised writer. On principle, this makes sense.\r\n\r\nHowever, having the entire process panic when `http.Client` holds onto an `io.Reader` that may no longer be valid seems problematic. If you look at the tip of the trace again, the call to `(*bufio.Writer).Reset(nil)` is a part of the buffer pool implementation in `net/http` because its the buffer on `*http.response` that is actually causing the panic:\r\n\r\n```\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal 0xb code=0x1 addr=0x20 pc=0x78154a]\r\n \r\ngoroutine 92 [running]:\r\nbufio.(*Writer).flush(0xc208208900, 0x0, 0x0)\r\n\t/usr/local/go/src/bufio/bufio.go:530 +0xda\r\nbufio.(*Writer).Flush(0xc208208900, 0x0, 0x0)\r\n\t/usr/local/go/src/bufio/bufio.go:519 +0x3a\r\nnet/http.(*response).Flush(0xc2085bfae0)\r\n\t/usr/local/go/src/net/http/server.go:1047 +0x4c\r\n```\r\n(from https://gist.github.com/stevvooe/12e63e5f902b5ba7ec01)\r\n\r\nI'll drop this issue for now and see about a coming up with a reproduction that is simpler than the docker code base. For now, we have a fix that isolates the client's Close call from response's possibly closed writer.",
	"user": {
		"login": "stevvooe",
		"id": 120601,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-01-22T18:14:58Z",
	"updated_at": "2015-01-22T18:14:58Z"
}
