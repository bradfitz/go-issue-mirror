{
	"id": 192610574,
	"body": "Trimright removes characters in the set e from b, starting from the right. It's not what you want. \n\nYou want, n := b[:len(b)-len(e)]\n\nAs you know that e is the suffix of b\n\n\u003e On 5 Mar 2016, at 20:15, Hongjian Zhu \u003cnotifications@github.com\u003e wrote:\n\u003e \n\u003e Please answer these questions before submitting your issue. Thanks!\n\u003e \n\u003e What version of Go are you using (go version)?\n\u003e go1.6 darwin/amd64\n\u003e \n\u003e What operating system and processor architecture are you using (go env)?\n\u003e darwin/amd64\n\u003e \n\u003e What did you do? (Use play.golang.org to provide a runnable example, if possible.)\n\u003e package main\n\u003e \n\u003e import (\n\u003e \"fmt\"\n\u003e \"path/filepath\"\n\u003e \"strings\"\n\u003e )\n\u003e \n\u003e func main() {\n\u003e path := \"Order.thrift\"\n\u003e \n\u003e b := filepath.Base(path)\n\u003e fmt.Println(b) // Order.thrift\n\u003e \n\u003e e := filepath.Ext(path)\n\u003e fmt.Println(e) // .thrift\n\u003e \n\u003e n := strings.TrimRight(b, e)\n\u003e fmt.Println(n)\n\u003e }\n\u003e \n\u003e What did you expect to see?\n\u003e Order\n\u003e \n\u003e What did you see instead?\n\u003e Orde\n\u003e \n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub.\n\u003e \n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-05T09:21:00Z",
	"updated_at": "2016-03-05T09:21:00Z"
}
