{
	"id": 66093058,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003eI assume for m[v] you mean a map to convert from bools to a number? That's clever. I\nhadn't done that myself because I hoped the compiler would inline the function I made to\ndo it and perhaps get rid of the branches as well.\n\n1. This is going to boil down to how people feel about \"idiomatic\" vs \"standard\" type\nconversions. If you are OK with these particular conversions being idiomatic and don't\nmind sprinkling map or function declartions throughout your code to convert bools to\nnumbers then this change isn't for you.\n\n2. If on the other hand you've ever wanted to do a bool/numeric conversion and felt that\nthe code should *read like a conversion*, then this change is for you.\n\n3. I want to point out that this isn't really much of a language change, it's more of\nrelaxation of the current compiler implementations. The language already accepts the\nconstruct from a syntax/grammar standpoint. The current versions just disallows these\nparticular conversions. As language changes go, this is about as small a language change\nas is possible. As noted above, the language change is documented by adding \"or bool\ntypes\" to a single sentence of the reference spec.\u003c/pre\u003e",
	"user": {
		"login": "tildeleb",
		"id": 834628,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-03-31T16:06:10Z",
	"updated_at": "2014-12-08T10:42:32Z"
}
