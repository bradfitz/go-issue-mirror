{
	"id": 51280002,
	"number": 3009,
	"state": "closed",
	"title": "cmd/go: allow top-level package outside $GOPATH",
	"body": "\u003cpre\u003eSuppose I wanted to check some Go code into an existing source tree.  (To help make the\nexample concrete, agl wrote a tool in Go to extract some data out of some table in some\nother file in the Chrome tree.)\n\nIt appears that \u0026quot;go build\u0026quot; is designed only for projects that are written\nsolely in Go, as there's not a obvious place to point GOROOT etc.\n\nWe can instead write out build files using \u0026quot;go tool 6g\u0026quot; etc. to produce\nbinaries, but it appears that \u0026quot;go test\u0026quot; also relies on being in a Go-only\nsource tree.  Is there an alternative approach for testing we should take?   (For\nexample, it seems the \u0026quot;testing\u0026quot; standard library also is intertwined with\n\u0026quot;go test\u0026quot; behavior.)\u003c/pre\u003e",
	"user": {
		"login": "evmar",
		"id": 3847,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 9,
	"closed_at": "2014-12-08T10:15:42Z",
	"created_at": "2012-02-13T18:10:27Z",
	"updated_at": "2016-06-24T21:27:16Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
