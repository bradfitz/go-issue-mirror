{
	"id": 51282623,
	"number": 4774,
	"state": "closed",
	"title": "spec: panic description is not quite right",
	"body": "\u003cpre\u003eThis is how a panic runs:\n\n- A panic causes the stack of deferred functions to be run. If one of them calls recover\nand returns without retriggering a different panic, the panic is considered to have\nstopped.\n\n- When a panic stops, the function frames on the stack up to and including the one that\ndeferred the most recently run deferred function are popped.\n\nIt is important for error reporting and such that the pops come only after the panic has\nbeen stopped. Otherwise the deferred functions (or the top level) cannot print\ninformation about the context of the panic, as the context would have been thrown away\nby the time of the deferred execution.\n\nThis was an explicit decision in the original proposal\n(\u003ca href=\"https://groups.google.com/d/msg/golang-nuts/HOXNBQu5c-Q/Je0qo1hbxIsJ)\"\u003ehttps://groups.google.com/d/msg/golang-nuts/HOXNBQu5c-Q/Je0qo1hbxIsJ)\u003c/a\u003e but it has not\nmade it into the spec. If anything the spec contradicts this description.\n\nNeed to fix the spec.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:25:22Z",
	"created_at": "2013-02-08T17:39:09Z",
	"updated_at": "2016-06-24T22:32:33Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
