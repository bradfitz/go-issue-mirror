{
	"id": 90720323,
	"number": 11382,
	"state": "closed",
	"title": "x/mobile/bind/java: translate panic to a java error",
	"body": "A `panic()` from Go code eventually results in a syscall to `exit(2)` which terminates the Android app. This \"clean\" exit prevents Crashlytics (https://get.fabric.io/crashlytics) from capturing a Go panic as a crash.\r\n\r\nCrashlytics support told me:\r\n\u003e We do install a signal handler to capture the crashes. You could write a custom panic() function in Go that uses the OS package to raise a signal, but we are hestitant to treat an exit() as a crash in the native code as it would be the program telling the OS that everything is fine.\r\n\r\nCould we recover these panics and throw a Java Error? Or perhaps syscall `abort` (which should be caught by a SIGABRT handler) instead of `exit`?",
	"user": {
		"login": "jamesshoebox",
		"id": 10502430,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 11,
	"closed_at": "2015-07-11T11:39:14Z",
	"created_at": "2015-06-24T16:05:03Z",
	"updated_at": "2016-07-11T22:38:04Z"
}
