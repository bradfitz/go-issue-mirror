{
	"id": 66049467,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5:\n\n\u003cpre\u003e@i3dmaster\n\nYes, Python's x[:] is creating a new list, and so is any other slicing done in a list. \nIn Go, slices are not copies, anywhere. So it's consistent both in Python and in Go.  If\n[:] or [:n] are supported in Go, they should of course follow the existing local\nconvention.\n\nThen, my 2 bits:\n\nSince [:] would be a no-op in Go, it doesn't feel necessary.\n\n[:n] seems like an obvious benefit, because:\n\n- It saves typing a constant\n- It is symetrical with [n:]\n- Python's history shows frequent use, and no drawbacks.\u003c/pre\u003e",
	"user": {
		"login": "niemeyer",
		"id": 378683,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-06-26T17:26:53Z",
	"updated_at": "2014-12-08T10:04:22Z"
}
