{
	"id": 66097010,
	"body": "\u003ca id=\"c13\"\u003e\u003c/a\u003eComment 13:\n\n\u003cpre\u003eIan,\n\nBrad got me a script that lets me run the docker sid instance we're using on the\nbuilders. Here is the objdump -dr for the first function in _all.o. The others all look\nthe same.\n\nDisassembly of section .text:\n\n00000000 \u0026lt;goCallback\u0026gt;:\n       0:\t53                   \tpush   %ebx\n       1:\te8 fc ff ff ff       \tcall   2 \u0026lt;goCallback+0x2\u0026gt;\n\t\t\t2: R_386_PC32\t__x86.get_pc_thunk.bx\n       6:\t81 c3 02 00 00 00    \tadd    $0x2,%ebx\n\t\t\t8: R_386_GOTPC\t_GLOBAL_OFFSET_TABLE_\n       c:\t83 ec 1c             \tsub    $0x1c,%esp\n       f:\t8b 44 24 24          \tmov    0x24(%esp),%eax\n      13:\t89 44 24 10          \tmov    %eax,0x10(%esp)\n      17:\t6a 04                \tpush   $0x4\n      19:\t8d 44 24 14          \tlea    0x14(%esp),%eax\n      1d:\t50                   \tpush   %eax\n      1e:\tff b3 00 00 00 00    \tpushl  0x0(%ebx)\n\t\t\t20: R_386_GOT32\t_cgoexp_1d8c0581a5cc_goCallback\n      24:\te8 fc ff ff ff       \tcall   25 \u0026lt;goCallback+0x25\u0026gt;\n\t\t\t25: R_386_PLT32\tcrosscall2\n      29:\t83 c4 28             \tadd    $0x28,%esp\n      2c:\t5b                   \tpop    %ebx\n      2d:\tc3                   \tret    \n      2e:\t66 90                \txchg   %ax,%ax\n\nOn a more normal Linux system I get:\n\n00000000 \u0026lt;goCallback\u0026gt;:\n       0:\t53                   \tpush   %ebx\n       1:\t83 ec 28             \tsub    $0x28,%esp\n       4:\te8 fc ff ff ff       \tcall   5 \u0026lt;goCallback+0x5\u0026gt;\n\t\t\t5: R_386_PC32\t__i686.get_pc_thunk.bx\n       9:\t81 c3 02 00 00 00    \tadd    $0x2,%ebx\n\t\t\tb: R_386_GOTPC\t_GLOBAL_OFFSET_TABLE_\n       f:\t8b 44 24 30          \tmov    0x30(%esp),%eax\n      13:\tc7 44 24 08 04 00 00 \tmovl   $0x4,0x8(%esp)\n      1a:\t00 \n      1b:\t89 44 24 1c          \tmov    %eax,0x1c(%esp)\n      1f:\t8d 44 24 1c          \tlea    0x1c(%esp),%eax\n      23:\t89 44 24 04          \tmov    %eax,0x4(%esp)\n      27:\t8b 83 00 00 00 00    \tmov    0x0(%ebx),%eax\n\t\t\t29: R_386_GOT32\t_cgoexp_1d8c0581a5cc_goCallback\n      2d:\t89 04 24             \tmov    %eax,(%esp)\n      30:\te8 fc ff ff ff       \tcall   31 \u0026lt;goCallback+0x31\u0026gt;\n\t\t\t31: R_386_PLT32\tcrosscall2\n      35:\t83 c4 28             \tadd    $0x28,%esp\n      38:\t5b                   \tpop    %ebx\n      39:\tc3                   \tret    \n      3a:\t8d b6 00 00 00 00    \tlea    0x0(%esi),%esi\n\nIt looks like I should just allow pushl in addition to mov?\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-10-06T16:29:18Z",
	"updated_at": "2014-12-22T06:36:17Z"
}
