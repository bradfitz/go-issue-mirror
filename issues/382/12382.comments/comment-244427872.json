{
	"id": 244427872,
	"body": "My coworker is proposing a stored procedure API that works akin to\r\n\r\n```sql\r\nCREATE PROCEDURE GetThing(thingID INTEGER, getRelatedThing1 BOOLEAN, getRelatedThing2 BOOLEAN)\r\n```\r\n\r\nwhere the result set can have one to three sets of rows. How about something like this?\r\n\r\n```go\r\nfunc GetThing(t *sql.Tx, thingID int, getRelatedThing1 bool, getRelatedThing2 bool) (t *Thing, r1 *Related, r2 *Related2, err error) {\r\n    r, err := t.Query(\"CALL GetThing(?, ?, ?);\", thingID, getRelatedThing1, getRelatedThing2)\r\n    if err != nil { return nil, nil, nil err }\r\n    defer r.Close()\r\n\r\n    for r.Next() {\r\n        // r.Scan() into t\r\n    }\r\n    if err := r.Err(); err != nil { return nil, nil, nil, err }\r\n\r\n    if getRelatedThing1 {\r\n        for r.Next() {\r\n            // r.Scan() into r1\r\n        }\r\n        if err := r.Err(); err != nil { return nil, nil, nil, err }\r\n    }\r\n\r\n    if getRelatedThing2 {\r\n        for r.Next() {\r\n            // r.Scan() into r2\r\n        }\r\n        if err := r.Err(); err != nil { return nil, nil, nil, err }\r\n    }\r\n\r\n    return\r\n}\r\n```\r\n\r\nOr should the `NextResultSet()` be explicit? In that case\r\n\r\n```go\r\n    if getRelatedThing1 {\r\n        if err := r.NextSet(); err != nil { return nil, nil, nil, err }\r\n        for r.Next() {\r\n```\r\n\r\n?",
	"user": {
		"login": "andlabs",
		"id": 718242,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-02T16:46:58Z",
	"updated_at": "2016-09-02T16:48:16Z"
}
