{
	"id": 66075155,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eRe #3: \u003ca href=\"https://golang.org/issue/658\"\u003eissue #658\u003c/a\u003e should be clear, now, too. The example given there:\n\nfunc f(s1 uint, s2 uint) bool {\n  return ((1 \u0026lt;\u0026lt; 32) \u0026lt;\u0026lt; s1) \u0026gt; ((1 \u0026lt;\u0026lt; 32) \u0026lt;\u0026lt; s2)\n}\n\nhas two untyped constant operands 1 \u0026lt;\u0026lt; 32 which are untyped integers. Both sides\nare untyped integer constants, and the default type for untyped integer constants is\nint. That is, the shifts must be typed as if 1\u0026lt;\u0026lt;32 where of type int. On a system\nwhere ints are 32bit, this will lead to a compile-time error. On systems where ints are\n64bit, this will compile, and 1\u0026lt;\u0026lt;32 is an int64 value.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-05-07T03:57:44Z",
	"updated_at": "2014-12-22T06:22:23Z"
}
