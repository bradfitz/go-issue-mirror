{
	"id": 66081980,
	"body": "\u003ca id=\"c7\"\u003e\u003c/a\u003eComment 7:\n\n\u003cpre\u003eRuss,\n\nHere is CL \u003ca href=\"https://golang.org/cl/11266043/\"\u003ehttps://golang.org/cl/11266043/\u003c/a\u003e that changes both usleep and osyield\nto run on os stack. But it is crashing in misc/cgo/test during cgo callback, because m\nis not set (see below). It is crashing in usleep, not osyield, but I think it just\nmatter of luck. So I think we cannot assume m is set, therefore we cannot switch stacks\nhere.\n\nAlex\n\n\nC:\\go\\root\\misc\\cgo\\test\u0026gt;c:\\bin\\gdb --args  test.test.exe -test.run=Cthread\nGNU gdb (GDB) 7.5.50.20130118\nCopyright (C) 2013 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later \u0026lt;\u003ca href=\"http://gnu.org/licenses/gpl.html\u0026gt\"\u003ehttp://gnu.org/licenses/gpl.html\u0026gt\u003c/a\u003e;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"i686-pc-mingw32\".\nFor bug reporting instructions, please see:\n\u0026lt;\u003ca href=\"http://www.gnu.org/software/gdb/bugs/\u0026gt\"\u003ehttp://www.gnu.org/software/gdb/bugs/\u0026gt\u003c/a\u003e;.\nThis binary was built by Equation Solution \u0026lt;\u003ca href=\"http://www.Equation.com\u0026gt\"\u003ehttp://www.Equation.com\u0026gt\u003c/a\u003e;...\nReading symbols from C:\\go\\root\\misc\\cgo\\test\\test.test.exe...done.\n(gdb) r\nStarting program: C:\\go\\root\\misc\\cgo\\test\\test.test.exe \"-test.run=Cthread\"\n[New Thread 4788.0x9c0]\n[New Thread 4788.0xeb8]\n[New Thread 4788.0x1848]\n[New Thread 4788.0x1210]\n[New Thread 4788.0xaa4]\n[New Thread 4788.0x638]\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 4788.0x638]\nruntime.usleep1 (duration=void)\n    at C:/go/root/src/pkg/runtime/sys_windows_386.s:338\n338             MOVL    m(CX), BP\n(gdb) disas\nDump of assembler code for function runtime.usleep1:\n   0x00420b00 \u0026lt;+0\u0026gt;:     mov    0x4(%esp),%ebx\n   0x00420b04 \u0026lt;+4\u0026gt;:     mov    $0x420b30,%eax\n   0x00420b09 \u0026lt;+9\u0026gt;:     mov    %fs:0x14,%ecx\n=\u0026gt; 0x00420b10 \u0026lt;+16\u0026gt;:    mov    0x4(%ecx),%ebp\n   0x00420b13 \u0026lt;+19\u0026gt;:    mov    0x0(%ebp),%esi\n   0x00420b16 \u0026lt;+22\u0026gt;:    cmp    %esi,(%ecx)\n   0x00420b18 \u0026lt;+24\u0026gt;:    jne    0x420b1d \u0026lt;runtime.usleep1+29\u0026gt;\n   0x00420b1a \u0026lt;+26\u0026gt;:    call   *%eax\n   0x00420b1c \u0026lt;+28\u0026gt;:    ret\n   0x00420b1d \u0026lt;+29\u0026gt;:    mov    0x10(%esi),%esi\n   0x00420b20 \u0026lt;+32\u0026gt;:    mov    %esp,-0x4(%esi)\n   0x00420b23 \u0026lt;+35\u0026gt;:    lea    -0x4(%esi),%esp\n   0x00420b26 \u0026lt;+38\u0026gt;:    call   *%eax\n   0x00420b28 \u0026lt;+40\u0026gt;:    mov    (%esp),%esp\n   0x00420b2b \u0026lt;+43\u0026gt;:    ret\nEnd of assembler dump.\n(gdb) info reg\neax            0x420b30 4328240\necx            0x0      0\nedx            0x0      0\nebx            0xa      10\nesp            0x314afeb0       0x314afeb0\nebp            0x314aff30       0x314aff30\nesi            0xa      10\nedi            0x0      0\neip            0x420b10 0x420b10 \u0026lt;runtime.usleep1+16\u0026gt;\neflags         0x10206  [ PF IF RF ]\ncs             0x1b     27\nss             0x23     35\nds             0x23     35\nes             0x23     35\nfs             0x3b     59\ngs             0x0      0\n(gdb) bt\n#0  runtime.usleep1 (duration=void)\n    at C:/go/root/src/pkg/runtime/sys_windows_386.s:338\n#1  0x00410442 in runtime.usleep (us=void)\n    at C:/go/root/src/pkg/runtime/os_windows.c:292\n#2  0x00413dcd in lockextra (nilokay=void)\n    at C:/go/root/src/pkg/runtime/proc.c:765\n#3  0x00413b31 in runtime.needm (x=void)\n    at C:/go/root/src/pkg/runtime/proc.c:625\n#4  0x0041ff8c in runtime.cgocallback_gofunc (fn=void, frame=void,\n    framesize=void) at C:/go/root/src/pkg/runtime/asm_386.s:533\n#5  0x0041ff61 in runtime.cgocallback (fn=void, frame=void, framesize=void)\n    at C:/go/root/src/pkg/runtime/asm_386.s:511\n#6  0x00433050 in _cgoexp_a69528917655_Add (a=void, n=void)\n    at C:/DOCUME~1/brainman/LOCALS~1/Temp/go-build810375227/_/C_/go/root/misc/cgo/test/_test/_cgo_defun.c:446\n#7  0x0048b72b in crosscall2 () at C:/go/root/src/pkg/runtime/cgo/asm_386.s:22\n#8  0x00000000 in ?? ()\n(gdb)\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-07-15T07:19:54Z",
	"updated_at": "2014-12-22T06:26:27Z"
}
