{
	"id": 231206687,
	"body": "Thanks for all the info.\r\n\r\nWindows is different than Unix in that a call to `syscall.Syscall` can call a Windows callback which will call `runtime.cgocallback`.  As far as I know there is nothing that prevents passing the address of a stack variable, converted to `uintptr`, to `syscall.Syscall`.  If a callback then causes the stack to grow, the variable will move, possibly leading to odd results.  I don't have any reason to think that is the problem here, but I'm curious whether anybody knows of anything that will prevent that from happening.\r\n\r\nAnyhow, back to this issue.  Can you find out whether it fixes the problem if you set the environment variable `GODEBUG` to `gcshrinkstackoff=1`?",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-07T21:03:32Z",
	"updated_at": "2016-07-07T21:03:32Z"
}
