{
	"id": 113508188,
	"body": "Here we go.\r\n\r\n```\r\npackage crash\r\n\r\nimport (\r\n        \"encoding/json\"\r\n        \"strconv\"\r\n        \"testing\"\r\n)\r\n\r\ntype C struct {\r\n        A string\r\n        X [200]float64\r\n        B map[string]struct{}\r\n        Y [200]float64\r\n}\r\n\r\nfunc TestUnmarshal(t *testing.T) {\r\n\r\n        c := C{\r\n                A: \"hello world\",\r\n                B: map[string]struct{}{},\r\n        }\r\n        for i := 0; i \u003c 1000; i++ {\r\n                c.B[strconv.Itoa(i)] = struct{}{}\r\n        }\r\n\r\n        var cs []C\r\n        for i := 0; i \u003c 250; i++ {\r\n                cs = append(cs, c)\r\n        }\r\n\r\n        data, err := json.Marshal(cs)\r\n        if err != nil {\r\n                t.Error(err)\r\n        }\r\n\r\n        cs = nil\r\n        if err := json.Unmarshal(data, \u0026cs); err != nil {\r\n                t.Error(err)\r\n        }\r\n        for _, c := range cs {\r\n                if have, want := c.A, \"hello world\"; have != want {\r\n                        t.Errorf(\"have %s, want %s\", have, want)\r\n                }\r\n        }\r\n}\r\n```\r\n\r\nDifferent crashes, e.g.:\r\n\r\n```\r\nunexpected fault address 0xb01dfacedebac1e\r\nfatal error: fault\r\n[signal 0xb code=0x1 addr=0xb01dfacedebac1e pc=0xac24]\r\n\r\ngoroutine 19 [running]:\r\nruntime.throw(0x1ac1f0, 0x5)\r\n\t/s/go/src/runtime/panic.go:527 +0x96 fp=0x82044e800 sp=0x82044e7e8\r\nruntime.sigpanic()\r\n\t/s/go/src/runtime/sigpanic_unix.go:27 +0x2ba fp=0x82044e850 sp=0x82044e800\r\nruntime.evacuate(0x136bc0, 0x8203668d0, 0x88502c794dbcc7a2)\r\n\t/s/go/src/runtime/hashmap.go:803 +0x94 fp=0x82044e910 sp=0x82044e850\r\nruntime.growWork(0x136bc0, 0x8203668d0, 0x88502c794dbcc7a2)\r\n\t/s/go/src/runtime/hashmap.go:791 +0x5e fp=0x82044e930 sp=0x82044e910\r\nruntime.mapassign1(0x136bc0, 0x8203668d0, 0x820862800, 0x2b5c70)\r\n\t/s/go/src/runtime/hashmap.go:433 +0x175 fp=0x82044e9d8 sp=0x82044e930\r\nreflect.mapassign(0x136bc0, 0x8203668d0, 0x820862800, 0x2b5c70)\r\n\t/s/go/src/runtime/hashmap.go:955 +0x3f fp=0x82044ea00 sp=0x82044e9d8\r\nreflect.Value.SetMapIndex(0x136bc0, 0x8206a2830, 0xd5, 0x137ac0, 0x820862800, 0x58, 0x1361e0, 0x2b5c70, 0xd9)\r\n\t/s/go/src/reflect/value.go:1469 +0x31a fp=0x82044eab0 sp=0x82044ea00\r\nencoding/json.(*decodeState).object(0x82043e000, 0x136bc0, 0x8206a2830, 0xd5)\r\n\t/s/go/src/encoding/json/decode.go:613 +0xe23 fp=0x82044ee58 sp=0x82044eab0\r\nencoding/json.(*decodeState).value(0x82043e000, 0x136bc0, 0x8206a2830, 0xd5)\r\n\t/s/go/src/encoding/json/decode.go:289 +0x3bd fp=0x82044ef30 sp=0x82044ee58\r\nencoding/json.(*decodeState).object(0x82043e000, 0x181ce0, 0x8206a21e0, 0xd9)\r\n\t/s/go/src/encoding/json/decode.go:606 +0x1151 fp=0x82044f2d8 sp=0x82044ef30\r\nencoding/json.(*decodeState).value(0x82043e000, 0x181ce0, 0x8206a21e0, 0xd9)\r\n\t/s/go/src/encoding/json/decode.go:289 +0x3bd fp=0x82044f3b0 sp=0x82044f2d8\r\nencoding/json.(*decodeState).array(0x82043e000, 0x12e860, 0x820372020, 0xd7)\r\n\t/s/go/src/encoding/json/decode.go:440 +0xa6b fp=0x82044f5b8 sp=0x82044f3b0\r\nencoding/json.(*decodeState).value(0x82043e000, 0x126fa0, 0x820372020, 0x16)\r\n\t/s/go/src/encoding/json/decode.go:286 +0x3dd fp=0x82044f690 sp=0x82044f5b8\r\nencoding/json.(*decodeState).unmarshal(0x82043e000, 0x126fa0, 0x820372020, 0x0, 0x0)\r\n\t/s/go/src/encoding/json/decode.go:150 +0x196 fp=0x82044f768 sp=0x82044f690\r\nencoding/json.Unmarshal(0x8209fe000, 0x251c01, 0x412881, 0x126fa0, 0x820372020, 0x0, 0x0)\r\n\t/s/go/src/encoding/json/decode.go:78 +0x12b fp=0x82044f7d8 sp=0x82044f768\r\nrealzeit.io/rtb/util/campaigns.TestUnmarshal(0x8203a0000)\r\n\t/go/src/realzeit.io/rtb/util/campaigns/unmarshal_test.go:37 +0x3ba fp=0x820451f38 sp=0x82044f7d8\r\ntesting.tRunner(0x8203a0000, 0x28c3a0)\r\n\t/s/go/src/testing/testing.go:455 +0x98 fp=0x820451f70 sp=0x820451f38\r\nruntime.goexit()\r\n\t/s/go/src/runtime/asm_amd64.s:1691 +0x1 fp=0x820451f78 sp=0x820451f70\r\ncreated by testing.RunTests\r\n\t/s/go/src/testing/testing.go:560 +0x86d\r\n\r\ngoroutine 1 [chan receive]:\r\ntesting.RunTests(0x1ffb00, 0x28c3a0, 0x1, 0x1, 0x1)\r\n\t/s/go/src/testing/testing.go:561 +0x8ad\r\ntesting.(*M).Run(0x820337f08, 0xffffffffffffffff)\r\n\t/s/go/src/testing/testing.go:493 +0x70\r\nmain.main()\r\n\trealzeit.io/rtb/util/campaigns/_test/_testmain.go:54 +0x116\r\nexit status 2\r\n```\r\n",
	"user": {
		"login": "robx",
		"id": 132113,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-19T12:59:51Z",
	"updated_at": "2015-06-19T12:59:51Z"
}
