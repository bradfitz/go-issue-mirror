{
	"id": 209659957,
	"body": "Sorry, I'd never heard of Nano Server before this. I wrote b8af3fd1bd6338f315d92592c28ff26753f2f118 but I did so blindly using MSDN docs (where I didn't see any reference to Nano Server), and testing on Go's trybot buidlers. Another contributor (@alexbrainman) verified it still passes on Windows XP, since we don't have a Windows XP build machine anymore (I'm working on resurrecting one).\r\n\r\nIf this Nano Server is something we should support, I suppose we'll need builders for it. I filed #15287 for that.\r\n\r\nOur bar for Go point releases is very high. I don't think we would issue a point release for an unreleased in-development operating system, even for our Docker friends. We do, however, have another point release coming for all the other Go 1.6.x non-security bugs (1.6.2: https://github.com/golang/go/issues?utf8=%E2%9C%93\u0026q=milestone%3AGo1.6.2+), so it's possible we could put some minimal change in there for that.\r\n\r\nBut...\r\n\r\n\u003e We are working internally at Microsoft to see if/how we can support LOAD_LIBRARY_SEARCH_SYSTEM32 with reverse forwarders. \r\n\r\n... it does sound like a Windows problem. We're using a that flag bit to say \"use a system DLL, not the malicious DLL in the user's Downloads folder\". If you moved Windows system DLLs around and need to remap things, I expect Windows to still map things and yet honor our intention with that flag.",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-13T21:41:53Z",
	"updated_at": "2016-04-13T21:41:53Z"
}
