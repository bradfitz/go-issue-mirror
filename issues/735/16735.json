{
	"id": 171404109,
	"number": 16735,
	"state": "closed",
	"title": "syscall: how to deal with ABI changes? (freebsd in this case)",
	"body": "Hello,\r\n\r\n1. What version of Go are you using (`go version`)?\r\n1.6 \u0026 1.7 \u0026 master 1.8\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nFreeBSD 9.x / 10.3 / upcoming 11.0\r\n\r\nAn interesting problem: between 8.x and 9.x in 3/2014 (see https://github.com/freebsd/freebsd/commit/b38edcd355dfe9c2ac4080b8837687b0dba7dd41#diff-6769d113f5fa92d186538ae4c8659029) some structures were changed in the kernel ABI (and thus breaking it).  Current Go repo has a copy of the 8.0 `if.h` file translated in go `struct`.  How would you deal with such an ABI change with respect to the go translation?\r\n\r\nIn the current FreeBSD port system, we have an patch that re-sync with the current ABI (although it is currently incomplete as it does not deal with `ztypes_freebsd_arm.go` at all but I'll fix that) and I'd like to see that patch (see https://github.com/freebsd/freebsd-ports/blob/master/lang/go/files/struct-if_data-patch) upstreamed if possible.\r\n\r\nThe problem is that I'm not sure how (and have some difficulty to test right now) a go compiled binary with the modifications would work on a pre-ABI change system (although it is rather old and unsupported right now, I'd hate to break that) and how, in the go side of things, deal with that (versioned `*_freebsd_*` files? Something else?).\r\n\r\nThanks.\r\n\r\n",
	"user": {
		"login": "keltia",
		"id": 142030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "OS-FreeBSD"
		}
	],
	"comments": 4,
	"closed_at": "2016-08-16T21:01:56Z",
	"created_at": "2016-08-16T13:09:45Z",
	"updated_at": "2016-10-14T00:40:04Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
