{
	"id": 173084155,
	"number": 16870,
	"state": "open",
	"title": "cmd/compile: comma-ok form with interface{} seems to read garbage",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\n- playground\r\n- `go version go1.7 linux/amd64`\r\n- `go version devel +35f5517 2016-08-16 01:04:17 +0000 linux/amd64`\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\nplayground and\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/tv/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/home/tv/src/go-1.7\"\r\nGOTOOLDIR=\"/home/tv/src/go-1.7/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/home/tv/tmp/go-build074452883=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n3. What did you do?\r\n\r\nInspired by https://github.com/golang/go/issues/15782#issuecomment-220754850 I decided to explore what giving types to the comma-ok form even means. It seems I got things to break:\r\n\r\nA) https://play.golang.org/p/rogSaQq7Hf panics on playground, 1.7 and tip say `ok=\u003cinvalid reflect.Value\u003e`. I was curious how `fmt` ends up with invalid `reflect.Value`s, and explored further.\r\n\r\nB) echlebek on IRC came up with https://play.golang.org/p/LOXGni0AH9 which results in `ok` being a `complex` on playground! Behavior seen on Go1.7: `ok=(1.3109511e-38+0i)`, `ok=1.3109511e-38`,\r\n```\r\ntv@brute ~/tmp$ go-tip run LOXGni0AH9.go\r\nv=0\r\nfatal error: unexpected signal during runtime execution\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0xc440097ec0 pc=0x40a7dc]\r\n\r\ngoroutine 1 [running]:\r\nruntime.throw(0x4ab6f3, 0x2a)\r\n\t/home/tv/src/go/src/runtime/panic.go:566 +0x95 fp=0xc42004b898 sp=0xc42004b878\r\nruntime.sigpanic()\r\n\t/home/tv/src/go/src/runtime/sigpanic_unix.go:12 +0x2cc fp=0xc42004b8f0 sp=0xc42004b898\r\nruntime.additab(0x7fd05f4c1000, 0x101)\r\n\t/home/tv/src/go/src/runtime/iface.go:98 +0x8c fp=0xc42004b9e0 sp=0xc42004b8f0\r\nruntime.getitab(0x491d80, 0xc42004bf00, 0x1, 0x0)\r\n\t/home/tv/src/go/src/runtime/iface.go:79 +0x1af fp=0xc42004ba78 sp=0xc42004b9e0\r\nruntime.assertE2I2(0x491d80, 0xc42004bf00, 0x7fd05f51d000, 0xc42004bb38, 0xc420000258)\r\n\t/home/tv/src/go/src/runtime/iface.go:383 +0x7a fp=0xc42004baa8 sp=0xc42004ba78\r\nfmt.(*pp).handleMethods(0xc42008c000, 0xc400000076, 0x200000000)\r\n\t/home/tv/src/go/src/fmt/print.go:554 +0xb4 fp=0xc42004bb58 sp=0xc42004baa8\r\nfmt.(*pp).printArg(0xc42008c000, 0xc42004bf00, 0x7fd05f51d000, 0x76)\r\n\t/home/tv/src/go/src/fmt/print.go:665 +0x17b fp=0xc42004bc50 sp=0xc42004bb58\r\nfmt.(*pp).doPrintf(0xc42008c000, 0x4a6489, 0x7, 0xc42004bef8, 0x1, 0x1)\r\n\t/home/tv/src/go/src/fmt/print.go:985 +0x1240 fp=0xc42004bd38 sp=0xc42004bc50\r\n...\r\n```\r\n",
	"user": {
		"login": "tv42",
		"id": 419909,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"comments": 9,
	"created_at": "2016-08-24T23:48:34Z",
	"updated_at": "2016-08-26T18:00:22Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	},
	"reactions": {
		"total_count": 8,
		"+1": 8
	}
}
