{
	"id": 207163426,
	"body": "@mdlayher,\r\n\r\nI didn't have a look at your proposal/prototype carefully, and probably have no spare time for this feature (including #10565 opened by me) during Go 1.7 development cycle, but a bit. I think that the basic requirements for this feature look like the following:\r\n\r\n1. Need to use the net package\r\n - As a glue to crypto/tls and net/http packages\r\n2. Need to have a replacement for the syscall package\r\n - No use of types in the syscall package is mandatory because the syscall package is locked down and will be deprecated\r\n - The new package should provide a type that represents some sort of tuple known as a socket\r\n - The new package should provide flexibility for system adaptation not only for the existing kernels but for upcoming kernels that have fancy new network sockets\r\n3. Need to have a replacement for the runtime package\r\n - This requirement might be optional, but having a way to use runtime-integrated network poller would be better\r\n - The new package should provide basic event notification mechanism on the runtime-integrated network poller\r\n\r\n#10565 just covers R1, and perhaps your proposal too.\r\n\r\nI'd like to see a design that fulfils the above requirements, at least R1 and R2. Otherwise, the design would be the source of trouble in future, like \"I cannot achieve my goal because of the lack of R2 (or both R2 and R3).\" I suppose that a typical use case would be either R1+R2 or R2+R3; the former is for people who want to use the existing read/write methods in the net package with new socket types and the latter is for people who want to use new read/write methods with new socket types.\r\n\r\nThoughts?",
	"user": {
		"login": "mikioh",
		"id": 92117,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-08T01:34:14Z",
	"updated_at": "2016-04-08T01:34:14Z"
}
