{
	"id": 66069790,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eStill seeing this stuff. Here's another one:\n\n--- FAIL: TestIdentityResponse-46 (0.00 seconds)\nserve_test.go:350: for \u003ca href=\"http://127.0.0.1:39895/?te=\"\u003ehttp://127.0.0.1:39895/?te=\u003c/a\u003e expected res.ContentLength of 3; got\n-1\nserve_test.go:353: for \u003ca href=\"http://127.0.0.1:39895/?te=\"\u003ehttp://127.0.0.1:39895/?te=\u003c/a\u003e expected Content-Length header of\n\"3\"; got \"\"\nserve_test.go:357: for \u003ca href=\"http://127.0.0.1:39895/?te=\"\u003ehttp://127.0.0.1:39895/?te=\u003c/a\u003e expected len(res.TransferEncoding) of\n0; got 1 ([chunked])\nserve_test.go:350: for \u003ca href=\"http://127.0.0.1:39895/?te=identity\"\u003ehttp://127.0.0.1:39895/?te=identity\u003c/a\u003e expected res.ContentLength of\n3; got -1\nserve_test.go:353: for \u003ca href=\"http://127.0.0.1:39895/?te=identity\"\u003ehttp://127.0.0.1:39895/?te=identity\u003c/a\u003e expected Content-Length\nheader of \"3\"; got \"\"\nserve_test.go:357: for \u003ca href=\"http://127.0.0.1:39895/?te=identity\"\u003ehttp://127.0.0.1:39895/?te=identity\u003c/a\u003e expected\nlen(res.TransferEncoding) of 0; got 1 ([chunked])\nFAIL\n\nIt helps to disable TestStressSurpriseServerCloses (because it takes a while) and then\nrun:\n\n#!/bin/bash\nset -xe\ngo test -c net/http\nwhile true; do\nGOMAXPROCS=$[ 1 + $[ RANDOM % 1024 ]] ./http.test -test.v\ndone\n\nAlso, I've found that TestStressSurpriseServerCloses deadlocks from time to time. It\nseems related to some kind of error condition that arises when the system has too many\nsockets in the TIME_WAIT state. Running TestStressSurpriseServerCloses in a loop for\nabout 10 to 20 iterations produces this situation.\u003c/pre\u003e",
	"user": {
		"login": "alberts",
		"id": 409689,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-11-23T13:33:32Z",
	"updated_at": "2014-12-08T10:21:20Z"
}
