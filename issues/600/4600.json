{
	"id": 51282362,
	"number": 4600,
	"state": "closed",
	"title": "strings: Count is O(n*m)",
	"body": "\u003cpre\u003eThe simple algorithm used in strings.Count and bytes.Count is n^2 when linear algorithms\nare known, although they require precomputation and allocation. It may be worth looking\nat the parameters in the call to decide when a smarter algorithm is worthwhile.\n\nA simple non-allocating heuristic would be to check not only the first byte before using\n== but also the last byte. Another option would be to check the first and last bytes of\nthe strings in the == operator before doing the O(n) scan, at least when n is large.\nSuch tricks will not eliminate n^2 behavior but can make it less likely to arise. (Since\nin Count the lengths always match, the usual efficient cut-off of checking the lengths\ndoes nothing.)\n\nNoticed in \u003ca href=\"https://plus.google.com/115609618223925128756/posts/5EG3QHA1ugH\"\u003ehttps://plus.google.com/115609618223925128756/posts/5EG3QHA1ugH\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:24:26Z",
	"created_at": "2012-12-30T16:33:09Z",
	"updated_at": "2016-06-24T22:30:35Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
