{
	"id": 153639743,
	"number": 15600,
	"state": "open",
	"title": "encoding/xml: Unmarshal panics when using wrong type with ',innerxml' tag",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo version go1.6.2 linux/amd64\r\n\r\n\r\n3. What did you do?\r\nhttps://play.golang.org/p/EJ3Bch1Di6\r\n\r\n4. What did you expect to see?\r\nAn error that the type of the field is wrong\r\n\r\n5. What did you see instead?\r\n\r\n```\r\npanic: reflect.Set: value of type []uint8 is not assignable to type []int\r\n\r\ngoroutine 1 [running]:\r\npanic(0x4f1740, 0xc82000a430)\r\n\t/usr/lib/go/src/runtime/panic.go:481 +0x3e6\r\nreflect.Value.assignTo(0x4ea680, 0xc820010320, 0x97, 0x549580, 0xb, 0x4e9120, 0x0, 0x0, 0x0, 0x0)\r\n\t/usr/lib/go/src/reflect/value.go:2164 +0x3be\r\nreflect.Value.Set(0x4e9120, 0xc820010240, 0x197, 0x4ea680, 0xc820010320, 0x97)\r\n\t/usr/lib/go/src/reflect/value.go:1334 +0x95\r\nencoding/xml.(*Decoder).unmarshal(0xc8200b6000, 0x51a180, 0xc820010240, 0x199, 0xc820014240, 0x0, 0x0)\r\n\t/usr/lib/go/src/encoding/xml/read.go:549 +0x1c1b\r\nencoding/xml.(*Decoder).DecodeElement(0xc8200b6000, 0x4e4320, 0xc820010240, 0x0, 0x0, 0x0)\r\n\t/usr/lib/go/src/encoding/xml/read.go:133 +0x1c3\r\nencoding/xml.(*Decoder).Decode(0xc8200b6000, 0x4e4320, 0xc820010240, 0x0, 0x0)\r\n\t/usr/lib/go/src/encoding/xml/read.go:121 +0x4a\r\nencoding/xml.Unmarshal(0xc820010260, 0x11, 0x20, 0x4e4320, 0xc820010240, 0x0, 0x0)\r\n\t/usr/lib/go/src/encoding/xml/read.go:115 +0x270\r\nmain.main()\r\n\t/tmp/foo.go:15 +0xcf\r\n```\r\n\r\n",
	"user": {
		"login": "dominikh",
		"id": 39825,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2016-05-08T06:33:41Z",
	"updated_at": "2016-05-10T15:54:50Z",
	"milestone": {
		"id": 1748849,
		"number": 42,
		"title": "Go1.8Maybe"
	}
}
