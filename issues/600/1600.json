{
	"id": 51278045,
	"number": 1600,
	"state": "closed",
	"title": "[68]g \u0026 gofmt: fail for multi-dimensional ... array length notation",
	"body": "\u003cpre\u003epackage main\n\nimport \u0026quot;fmt\u0026quot;\n\nfunc main() {\n\tvar a1 = [2][3]int{{1, 2, 3}, {4, 5, 6}}\n\tvar a2 = [...][3]int{{1, 2, 3}, {4, 5, 6}}\n\t// 6g: 10: use of [...] array outside of array literal\n \t// gofmt: 10:15: expected operand, found '...'\n\tvar a3 = [2][...]int{{1, 2, 3}, {4, 5, 6}}\n\t// gofmt: 12:19: expected operand, found '...'\n \tvar a4  = [...][...]int{{1,2,3},{4,5,6}}\n\tfmt.Println(len(a1), len(a1[0]), a1)\n\tfmt.Println(len(a2), len(a2[0]), a2)\n \tfmt.Println(len(a3), len(a3[0]), a3)\n \tfmt.Println(len(a4), len(a4[0]), a4)\n}\n\n\u0026quot;The notation ... specifies an array length equal to the maximum element index plus\none.\u0026quot;\n\u003ca href=\"http://golang.org/doc/go_spec.html#Composite_literals\"\u003ehttp://golang.org/doc/go_spec.html#Composite_literals\u003c/a\u003e\n\nThe [68]g and gofmt programs sometimes fail for multi-dimensional ... array length\nnotation with error messages \u0026quot;use of [...] array outside of array literal\u0026quot; and\n\u0026quot;expected operand, found '...'\u0026quot; respectively.\n\nlinux/amd64/386 at hg id b8d901732d17 tip.\u003c/pre\u003e",
	"user": {
		"login": "peterGo",
		"id": 4561296,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:09:03Z",
	"created_at": "2011-03-10T18:00:20Z",
	"updated_at": "2016-06-24T19:26:24Z"
}
