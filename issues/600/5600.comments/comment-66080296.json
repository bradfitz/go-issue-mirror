{
	"id": 66080296,
	"body": "\u003ca id=\"c5\"\u003e\u003c/a\u003eComment 5 by **letters.random13**:\n\n\u003cpre\u003ei don't understand one word of what that msg means. i do not know if it is related at\nall to the silent failure. \n\nsrc/cmd/ld/ldelf.c:585:                 diag(\"%s: sym#%d: ignoring %s in section %d\n(type %d)\", pn, i, sym.name, sym.shndx, sym.type);\n  \n     583                  sect = obj-\u003esect+sym.shndx;\n     584                  if(sect-\u003esym == nil) {\n     585                          diag(\"%s: sym#%d: ignoring %s in section %d (type %d)\", pn, i, sym.name, sym.shndx, sym.type);\n     586                          continue;\n     587                  }\n\nsince it is from a \"diag/continue\" not a \"diag/errorexit\" or goto bad as elsewhere in\nthat loop, maybe it means nothing, except if this diag() is:\n  src/cmd/5l/list.c:474:diag(char *fmt, ...)\n\nthere is a possibly worrisome magic number nerrors = 20 (!?) that would cause an\nerrorexit regardless\n  \n     490          nerrors++;\n     491          if(nerrors \u003e 20) {\n     492                  print(\"too many errors\\n\");\n     493                  errorexit();\n     494          }\n\nbut, i only count 14 diag output lines (or maybe 7, repeated) in the original output.\n\nif there are any instructions how to gdb this to get less cryptic details, i would try\nit, but i don't see how to do that inside of or outside of make.bash, etc.\ni also see some \"debug[...]\" lines, but don't see how to access / activate those\n(flagparse?) via make.bash, etc.\n\ni can confirm the problem is still present in go1.1.2\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-09-07T10:12:48Z",
	"updated_at": "2014-12-08T10:30:29Z"
}
