{
	"id": 212507834,
	"body": "I believe the spec is correct here; but I agree that it perhaps could be organized more clearly (this latter point is of a more general nature - so let's leave that alone for now). Specifically, the spec says, as you pointed out:\r\n\r\n\u003e A constant value x can be converted to type T in any of these cases:\r\n\u003e \r\n\u003e x is representable by a value of type T.\r\n\u003e x is a floating-point constant, T is a floating-point type, and x is representable by a value of type T after rounding using IEEE 754 round-to-even rules, but with an IEEE -0.0 further rounded to an unsigned 0.0. The constant T(x) is the rounded value.\r\n\u003e x is an integer constant and T is a string type. The same rule as for non-constant x applies in this case.\r\n\r\n`\"foo\"` is clearly a constant value. But `\"foo\"` is not _representable_ as a value of type `[]byte` (nor is it a floating point or integer constant). Hence this section does not apply, but the next sentences do:\r\n\r\n\u003e Specific rules apply to (non-constant) conversions between numeric types or to and from a string type. These conversions may change the representation of x and incur a run-time cost.\r\n\r\nThat is, []byte(\"foo\") conversions are non-constant, and they do change representation - and even incur a runtime cost.\r\n\r\nThe term \"representable\" is not well defined - we have been using it somewhat loosely with numeric values only. I'm going to file a separate issue for that.",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-20T16:43:04Z",
	"updated_at": "2016-04-20T16:43:04Z"
}
