{
	"id": 137595219,
	"body": "Caleb, I can see your point. It would definitely be something that people would have to watch out for in the future. If this feature is added to the reflect package then I don’t see how that additional “cognitive” burden of having to watch out for parameter changes and freeze API functions could be avoided. I don’t necessarily think that it would impact most people, but I can see how it could lead to some tricky issues between dependencies.\r\n\r\nRuss, thank for your insight. I also read through the named parameters discussion that Minux referenced and it seems that both proposals present similar issues. I have a better appreciation of the problems involved here.\r\n\r\nObviously changing the definition of the function Type to include parameter names this late in the 1.x release is out of the question, and I don't even think that's necessarily a good idea. And I can see why you would be reluctant to expand the scope of the reflect package beyond Type information, especially without a clear boundary.\r\n\r\nMinux thank you for the suggestion, I took a similar path here.\r\n\r\nTaking all of your points into consideration, I think that this proposal would cause more complications than solutions. I'm going to close it for now, please re-open if you feel like additional discussion is warranted. ",
	"user": {
		"login": "nenadl",
		"id": 1445362,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-03T22:53:42Z",
	"updated_at": "2015-09-03T22:53:42Z"
}
