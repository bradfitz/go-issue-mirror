{
	"id": 66799015,
	"body": "git submit should NOT switch you back to master. We tried that in hg submit on a release branch and it was very confusing. \r\n\r\nFor what it's worth, people who are doing just one thing at a time can actually use:\r\n\r\ngit change work\r\ngit add\r\ngit change # edit message\r\ngit mail\r\ngit submit\r\ngit sync\r\ngit add, git change, git mail, git submit, git sync\r\ngit add, git change, git mail, git submit, git sync\r\ngit add, git change, git mail, git submit, git sync\r\ngit add, git change, git mail, git submit, git sync\r\n\r\nwithout ever moving off the work branch. That's a perfectly fine and supported workflow today. We shouldn't break it. (Here, \"git submit\" means click Submit in the UI. But adding \"git submit\" is on my list for today, and if we do that it can also do the \"git sync\", shortening the cycle to just \"git add, git change, git mail, git submit, repeat\")\r\n\r\ngit submit should NOT delete branches. If you do that, even the reflog is deleted, so there's no way (short of pawing through the git object store) to find the old work if you want it.\r\n\r\nThe same goes for git sync. It should NOT switch branches and NOT delete branches.\r\n\r\nI don't object to 'git review cleanup'. I think 'git start' is probably a little too tied to Brad's workflow. Note that it's easy to write a git alias for that instead of baking it into git-review.\r\n",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-12T16:47:03Z",
	"updated_at": "2014-12-12T16:47:03Z"
}
