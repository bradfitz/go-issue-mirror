{
	"id": 129257372,
	"body": "Can you show the exact command you used to produce this binary?\n\nThanks\n\nDave\nOn 10 Aug 2015 8:08 am, \"Tobias Schwab\" \u003cnotifications@github.com\u003e wrote:\n\n\u003e I am getting the error Illegal instruction when running a simple program\n\u003e (as simple as a \"hello world\" with no dependencies, even when only using\n\u003e print(\"hello world\")) on linux/arm (raspberry pi B model) which I cross\n\u003e compiled on linux/amd64 with 1.5.rc1 no matter what value I set GOARM to\n\u003e (tested it with 5, 6 and 7).\n\u003e\n\u003e Running the program with gdb gives me this error:\n\u003e\n\u003e Program received signal SIGILL, Illegal instruction.\n\u003e runtime.check () at /src/runtime/runtime1.go:146\n\u003e\n\u003e so I guess it is related to the float32 variables here:\n\u003e https://github.com/golang/go/blob/master/src/runtime/runtime1.go#L146\n\u003e\n\u003e The very same program cross compiles just fine with 1.4.2 (using GOARM 5\n\u003e and 6) and just gives me the usual error when trying GOARM=7\n\u003e\n\u003e runtime: this CPU has no VFPv3 floating point hardware, so it cannot run\n\u003e this GOARM=7 binary. Recompile using GOARM=6.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/12087\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-09T22:33:00Z",
	"updated_at": "2015-08-09T22:33:00Z"
}
