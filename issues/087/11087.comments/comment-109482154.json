{
	"id": 109482154,
	"body": "\u003e by this logic you should not allow server certificates that don't specify ExtKeyUsageServerAuth.\r\n\r\nWe don't. Although, as a retreat at the hands of practicality, we accept no EKUs to mean \"all\" in that case. (And we accept the Netscape EKU.)\r\n\r\n\u003e I'd appreciate it if you could point me to how I could bypass automatic verification in the context of a TLS HTTP server application.\r\n\r\nJust set RequestClientCert or RequireAnyClientCert (http://golang.org/pkg/crypto/tls/#ClientAuthType) and then http://golang.org/pkg/crypto/tls/#Conn.ConnectionState to get the chain that the client provided. That can can be passed to Verify with whatever options you wish. See http://golang.org/src/crypto/tls/handshake_server.go#L605",
	"user": {
		"login": "agl",
		"id": 21203,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-05T23:30:06Z",
	"updated_at": "2015-06-05T23:30:06Z"
}
