{
	"id": 66076558,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eThis report does not contain much actionable information.\n\nWhat kind of failure are you seeing that you don't know how to rerun?\n\nIt is true that the test script does not include every command that is being run, but\nthat's mostly by design. 99% of the time that is noise.\n\nThe short answer to the general question is that if the failure looks like:\n\nok  \tnet/smtp\t0.041s\nok  \tnet/textproto\t0.027s\nok  \tnet/url\t0.022s\nok  \tos\t2.116s\nok  \tos/exec\t1.189s\nok  \tos/signal\t0.454s\nok  \tos/user\t0.025s\nok  \tpath\t0.047s\nok  \tpath/filepath\t0.958s\nruntime: unknown argument frame size for reflect.methodValueCall called from 0x7878c\n[reflect_test.funcÂ·009]\nfatal error: invalid stack\n...\nFAIL\treflect\t0.126s\n\nthen that means you should rerun 'go test reflect'. \n\nIf the failure happens at the end and refers to a file like test/fixedbugs/bug123.go you\ncan cd into the test directory and run 'go run run.go -- fixedbugs/bug123.go'. The --\nkeeps 'go run' from trying to handle the Go file itself.\n\nFor other failures, there should be enough tracing prints (they begin with #) in the\noutput to follow along in run.bash. If not, we should fix that.\u003c/pre\u003e\n\n_Labels changed: added **priority-later**, removed **priority-triage**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-07-30T17:19:53Z",
	"updated_at": "2014-12-08T10:27:11Z"
}
