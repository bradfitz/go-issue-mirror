{
	"id": 100280360,
	"number": 12112,
	"state": "closed",
	"title": "cmd/go: go get fetches packages which are vendored",
	"body": "# GO15VENDOREXPERIMENT=1\r\n\r\nRelated, but separate: #12111\r\n\r\nOver here, I have a demo package: https://github.com/pwaller/vendor-collision\r\n\r\nIf you `go get -v github.com/pwaller/vendor-collision`:\r\n\r\n```\r\n$ go get -v github.com/pwaller/vendor-collision\r\nFetching https://vendor.org/p/vendor/example.org/library?go-get=1\r\nhttps fetch failed.\r\nimport \"vendor.org/p/vendor/example.org/library\": https fetch: Get https://vendor.org/p/vendor/example.org/library?go-get=1: read tcp 192.168.0.108:58977-\u003e69.172.201.208:443: read: connection reset by peer\r\npackage vendor.org/p/vendor/example.org/library: unrecognized import path \"vendor.org/p/vendor/example.org/library\"\r\n```\r\n\r\nThe surprising thing here is that it tries to fetch packages from vendor.org even though they are already available in `/vendor/`.\r\n\r\nFor the purposes of this bug, the only feature of the repository that matters is that there is `vendor-collision/main.go` which imports `vendor.org/p` which lives at `vendor-collision/vendor/vendor.org/p`.",
	"user": {
		"login": "pwaller",
		"id": 438648,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2015-08-11T13:54:51Z",
	"created_at": "2015-08-11T10:23:19Z",
	"updated_at": "2015-08-11T13:54:51Z"
}
