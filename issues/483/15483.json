{
	"id": 151728796,
	"number": 15483,
	"state": "open",
	"title": "cmd/go: can't use `go generate` in package called documentation",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo version go1.6 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\n\r\n3. What did you do?\r\n```\r\n $ cat gen.go\r\n//go:generate ./gen.sh\r\n\r\npackage documentation\r\n\r\n$ go generate\r\ncan't load package: package .: no buildable Go source files in /home/dominikh/work/gopath/doc\r\n```\r\n\r\n\r\n4. What did you expect to see?\r\nThe `go generate` to work\r\n\r\n5. What did you see instead?\r\n    ```\r\n    can't load package: package .: no buildable Go source files in /home/dominikh/work/gopath/doc\r\n    ```\r\n\r\nPackage documentation is special because the Go tool ignores files belonging to it. However, it would be useful to be able to use `go generate` with those, instead of having to rely on another build system.\r\n\r\nConcrete use case: I have a documentation package at the root of the project, documenting the architecture, dependencies and so on of the project. Part of that documentation has to be generated.",
	"user": {
		"login": "dominikh",
		"id": 39825,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		}
	],
	"comments": 1,
	"created_at": "2016-04-28T19:55:07Z",
	"updated_at": "2016-10-06T20:14:54Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
