{
	"id": 66049207,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2 by **e.scott.daniels**:\n\n\u003cpre\u003eI believe your problem is a logic issue, not an issue with the language or generated \nbinary. \n\nYour Run() method is consuming 100% of the cpu and the listen method is not getting \nany cycles. When you add just a bit of I/O (line 35), it allows the listen method to \nbe driven which can accept the session and eventually will allow the Handle() method \nto be driven.  If you start your programme and then run top in another window you'll \nsee that it's eating 100% of one of the processors. \n\nIf you want to keep the same Run() driver construct, I think it best to use a select \nstatement to poll; I've attached an example.  You'll also want to wrap your Handle() \nlogic in a for{} so that you'll process more than just the first buffer.   Executed \nusing the select, top shows that the process is well behaved and using next to no \nCPU when waiting for connections or data.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/332/2/runbbb.go\"\u003erunbbb.go\u003c/a\u003e (418 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2009-11-26T06:37:03Z",
	"updated_at": "2014-12-08T10:04:09Z"
}
