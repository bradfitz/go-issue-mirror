{
	"id": 67096803,
	"body": "Fair enough; it's not that commit.\r\n\r\nMore details: Linux amd64, ~6GB RAM, 1GB swap.\r\n\r\nAt some point high VM does seem to become a problem. We were seeing failures depending on how `/proc/sys/vm/overcommit_memory` and friends are configured. With the defaults, tests started failing with out-of-memory. Setting it to always permit allocation (`echo 1 \u003e /proc/sys/vm/overcommit_memory`) \"worked\".\r\n\r\nAs a dramatic example, a worker pool of 8000 goroutines has no hope of working in Go 1.4 with `-race` on our machine. With 1.3.3, this works for much longer before eventually failing (after running out of swap). So it seems like the overhead of goroutines with `-race` is generally much larger in 1.4 than it was in 1.3.3.\r\n\r\nBottom line is this behavior seems to have changed between 1.3 and 1.4. It's not blocking us anymore but wanted to at least log the issue so others can find it. We can spend more time on whittling it down to a reproducible example, but it seems like something that applies across-the-board (-race + N goroutines).",
	"user": {
		"login": "vito",
		"id": 1880,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-16T01:10:19Z",
	"updated_at": "2014-12-16T01:10:19Z"
}
