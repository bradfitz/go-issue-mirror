{
	"id": 135067360,
	"body": "The main reason to pass by value is simplicity.\r\n\r\nIn my opinion, a `decimal128` type is as fundamental as `float64`, and we should be able to work with the former as easily as with the latter, in similar way.\r\nAnd when you declare a `float64`, it is a value, not a pointer.\r\n\r\nPeople are happy with `float64`, and there is not much discussion about its 64bits fixed-sizeness or 15 significant digits precision.\r\nIt is just that `float64`is _\"good enough\"_ for a lot of applications, and really simple to use.\r\nFor more stringent requirements, it is now possible to use `big.Float` instead of `float64`, at the price of some more complexity.\r\n\r\nThe purpose of this proposal is essentially to have a fixed-size `decimal128` type in the language, that is _\"good enough\"_, like `float64`is.\r\nAnd if this default is not enough, people can use a more specialized arbitrary-precision decimal package, as discussed in [proposal: math/big: Decimal #12127].\r\n\r\nThat being said, there is no hurry to include `decimal128` in Go.\r\nI just think that this issue is a good place to receive suggestions on this topic, and see if there is sufficient support and need for such data type...",
	"user": {
		"login": "rin01",
		"id": 9582469,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-26T15:35:05Z",
	"updated_at": "2015-08-26T15:35:05Z"
}
