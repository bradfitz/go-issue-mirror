{
	"id": 251400054,
	"body": "Recursion's also bad.  I had a CL to deal with it -- start with optimistic estimate of no-escape, iterate to a fixed point -- but I was also looking at recursive data structures, and our approximation is so coarse that we cannot tell one part from another and that usually caused \"escape\" anyhow.  I measured it on make.bash, it had very little effect, and it was a tricky piece of code.\r\n\r\n*However*, subdividing a slice is something else...\r\n\r\nI had an idea earlier this week that for the interprocedural analysis that might also be relevant, if I am summarizing f, and\r\n```\r\nfunc f(x someInterface) {\r\n   x.someMethod()\r\n}\r\n```\r\nthat in the event that x was not otherwise escaping, I could include a list of all interface methods applied to it.  If the caller has more information about the true type, it may be able to derive a better answer (like \"x.String() does not escape x\").  I don't think this is on the table for 1.8, given everything else, but now it's nagging at me.",
	"user": {
		"login": "dr2chase",
		"id": 1928999,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-04T14:14:13Z",
	"updated_at": "2016-10-04T14:14:13Z"
}
