{
	"id": 51288039,
	"number": 8332,
	"state": "closed",
	"title": "syscall: Potential infinite loop in syscall/str.go",
	"body": "by **fuzxxl**:\n\n\u003cpre\u003eThe file syscall/str.go defines a function itoa() like this:\n\n     7\tfunc itoa(val int) string { // do it here rather than with fmt to avoid dependency\n     8\t\tif val \u0026lt; 0 {\n     9\t\t\treturn \u0026quot;-\u0026quot; + itoa(-val)\n    10\t\t}\n    11\t\tvar buf [32]byte // big enough for int64\n    12\t\ti := len(buf) - 1\n    13\t\tfor val \u0026gt;= 10 {\n    14\t\t\tbuf[i] = byte(val%10 + '0')\n    15\t\t\ti--\n    16\t\t\tval /= 10\n    17\t\t}\n    18\t\tbuf[i] = byte(val + '0')\n    19\t\treturn string(buf[i:])\n    20\t}\n\nIf the smallest possible integer is passed to this function, it runs into an infinite\nloop / infinite recursion since the negative of the smallest integer is again a negative\nvalue. This might be a potential security vulnerability.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:46:17Z",
	"created_at": "2014-07-06T21:39:09Z",
	"updated_at": "2016-06-25T01:37:40Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
