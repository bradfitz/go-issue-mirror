{
	"id": 95062141,
	"number": 11717,
	"state": "closed",
	"title": "cmd/go: go get -t ignores vendor folder",
	"body": "Version of Go:\r\ngo version devel +b6ead9f Tue Jul 7 21:53:11 2015 +0000 linux/amd64\r\n\r\nOS and architecture:\r\nlinux/amd64 (ubuntu 14.04)\r\n\r\nWhat did I do:\r\nRan `go get -t` with vendoring turned on, expected it to only try to download test dependencies that didn't exist, like `go get`\r\n\r\nWhat did I see instead:\r\nIt tried to download dependencies that already existed in the `vendor/` folder\r\n\r\nReproducing:\r\n\r\nProject hierarchy (located in `$GOPATH/src/github.com/azylman/demo`):\r\n\r\n```\r\nmain.go\r\nmain_test.go\r\nvendor/\r\n  example.org/\r\n    thing/\r\n      thing.go\r\n```\r\n\r\nFiles:\r\n```go\r\n// main.go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"example.org/thing\"\r\n)\r\n\r\nfunc main() {\r\n\tfmt.Println(thing.One, thing.Two)\r\n}\r\n```\r\n\r\n```go\r\n// main_test.go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"testing\"\r\n\r\n\t\"example.org/thing\"\r\n)\r\n\r\nfunc TestNothing(t *testing.T) {\r\n\tfmt.Println(thing.One)\r\n}\r\n```\r\n\r\n```go\r\n// vendor/example.org/thing/thing.go\r\npackage thing\r\n\r\nconst (\r\n\tOne = iota + 1\r\n\tTwo\r\n)\r\n```\r\n\r\nOutput:\r\n```shell\r\n$ export GO15VENDOREXPERIMENT=1\r\n\r\n$ go run main.go\r\n1 2\r\n\r\n$ go test\r\n1\r\nPASS\r\nok  \tgithub.com/azylman/demo\t0.006s\r\n\r\n$ go get\r\n\r\n$ go get -t\r\npackage example.org/thing: unrecognized import path \"example.org/thing\"\r\n```",
	"user": {
		"login": "azylman",
		"id": 790102,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2015-07-22T21:18:16Z",
	"created_at": "2015-07-14T23:03:15Z",
	"updated_at": "2016-08-05T16:10:31Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
