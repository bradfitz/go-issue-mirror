{
	"id": 218435505,
	"body": "Just debugged another case, which turned out to be this issue.\r\nAfter inserting a dead function call program becomes 2.5% slower.\r\n\r\ngo version devel +b4538d7 Wed May 11 06:00:33 2016 +0000 linux/amd64\r\nwith this patch:\r\n```\r\n--- a/src/runtime/proc.go\r\n+++ b/src/runtime/proc.go\r\n@@ -1028,12 +1028,41 @@ func startTheWorldWithSema() {\r\n        add := needaddgcproc()\r\n        lock(\u0026sched.lock)\r\n \r\n+       var p1 *p\r\n        procs := gomaxprocs\r\n-       if newprocs != 0 {\r\n-               procs = newprocs\r\n-               newprocs = 0\r\n+       if true {\r\n+               if newprocs != 0 {\r\n+                       procs = newprocs\r\n+                       newprocs = 0\r\n+               }\r\n+               p1 = procresize(procs)\r\n+       } else {\r\n+\r\n+               if newprocs != 0 {\r\n+                       procs = newprocs\r\n+                       newprocs = 0\r\n+                       p1 = procresize(procs)\r\n+               } else {\r\n+                       _g_.m.p.ptr().status = _Prunning\r\n+                       var runnablePs *p\r\n+                       for i := gomaxprocs - 1; i \u003e= 0; i-- {\r\n+                               p := allp[i]\r\n+                               if _g_.m.p.ptr() == p {\r\n+                                       continue\r\n+                               }\r\n+                               p.status = _Pidle\r\n+                               if runqempty(p) {\r\n+                                       pidleput(p)\r\n+                               } else {\r\n+                                       p.m.set(mget())\r\n+                                       p.link.set(runnablePs)\r\n+                                       runnablePs = p\r\n+                               }\r\n+                       }\r\n+                       p1 = runnablePs\r\n+               }\r\n        }\r\n-       p1 := procresize(procs)\r\n+\r\n        sched.gcwaiting = 0\r\n        if sched.sysmonwait != 0 {\r\n                sched.sysmonwait = 0\r\n```\r\n\r\nThen depending on presence of the following patch:\r\n```\r\n--- a/src/runtime/mgc.go\r\n+++ b/src/runtime/mgc.go\r\n@@ -1608,7 +1608,7 @@ func gcMark(start_time int64) {\r\n                traceGCScanDone()\r\n        }\r\n \r\n-       cachestats()\r\n+       //cachestats()\r\n \r\n        // Update the reachable heap stat.\r\n        memstats.heap_reachable = work.bytesMarked\r\n```\r\n\r\nThe test program:\r\nhttps://gist.githubusercontent.com/dvyukov/419e97e80f28cf7a0c656b03b99b7a49/raw/003bb12b73498f512514c0dad436e9da38b4f990/gistfile1.txt\r\nperformance changes +/-2.5%.\r\n\r\nWith the call commented out I consistently see:\r\n```\r\n$ nice -20 taskset -c 0-11 time /tmp/gif100\r\n7.90user 0.05system 0:07.95elapsed 100%CPU\r\n```\r\n\r\nWithout the call commented out:\r\n```\r\n$ nice -20 taskset -c 0-11 time /tmp/gif101\r\n8.11user 0.05system 0:08.15elapsed 100%CPU\r\n```\r\n\r\nAll time is spent in computations:\r\n```\r\n  95.11%  gif101   gif101             [.] image/draw.drawPaletted\r\n   0.92%  gif101   gif101             [.] compress/lzw.(*encoder).Write\r\n   0.79%  gif101   gif101             [.] image.(*Paletted).At\r\n   0.58%  gif101   gif101             [.] compress/lzw.(*decoder).decode\r\n   0.37%  gif101   gif101             [.] image/color.(*RGBA).RGBA\r\n   0.32%  gif101   gif101             [.] compress/lzw.(*decoder).readLSB\r\n   0.23%  gif101   gif101             [.] compress/lzw.(*encoder).writeLSB        \r\n```\r\n\r\ndrawPaletted magically becomes faster after the change.\r\n\r\nDiff in CPU profiles still does not make any sense to me, it looks like percents are just randomly shuffled.\r\nFaster version:\r\nhttps://gist.githubusercontent.com/dvyukov/b6ebfbae2b5bb7423e8e3b34b565de1d/raw/57fd60ef4220bd60445d713282cae03cda4f7fe6/gistfile1.txt\r\nSlower version:\r\nhttps://gist.githubusercontent.com/dvyukov/9d7a9dc9a19a3d2628d7a439c7c0aa9e/raw/69d411f7a42f732614ba05dbe500a3f42f74d429/gistfile1.txt\r\n\r\n@aclements @RLH @randall77 @dr2chase ",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-11T11:43:33Z",
	"updated_at": "2016-05-11T11:43:33Z"
}
