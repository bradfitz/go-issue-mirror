{
	"id": 179429620,
	"number": 17249,
	"state": "closed",
	"title": "runtime/netpoll: heavy epoll_wait activity on AF_LOCAL sockets we're not really waiting for",
	"body": "### What version of Go are you using (`go version`)?\r\n\r\ngo version go1.7.1 linux/amd64\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\nGOARCH=\"amd64\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGORACE=\"\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build017533435=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n### Description\r\n\r\nGolang's epoll-based poller uses EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET on all the sockets it listens on (including unix domain sockets), even those that had not yet been used, and thus did not yet have a chance to return EAGAIN during read/write. This differs a bit from the man-page suggested usage scenario.\r\n\r\nThis might result in high netpoll activity - with thousands of epoll_wait()'s constantly returning a \"ready-to-write\" AF_LOCAL socket (a syslog-ng socket in my example).\r\n\r\n### How to reproduce\r\n\r\nConnect to a busy syslog-ng unixgram socket, make netpoll wait on some other network operation - a GET on localhost:12345 in this example:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n  \"net/http\"\r\n  \"net\"\r\n  \"fmt\"\r\n)\r\n\r\nfunc main() {\r\n  a, _ := net.Dial(\"unixgram\", \"/var/run/syslog\")\r\n  _ = a\r\n  b, _ := http.Get(\"http://localhost:12345/\")\r\n  fmt.Println(b)\r\n}\r\n``` \r\n### Redacted strace output\r\n\r\n~~~\r\nfd 3 - /var/run/syslog, syslog-ng unix datagram socket - unix-dgram(\"/var/run/syslog\")\r\n\r\n[pid 27747] socket(PF_LOCAL, SOCK_DGRAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0 \u003cunfinished ...\u003e\r\n[pid 27813] \u003c... select resumed\u003e )      = 0 (Timeout)\r\n[pid 27813] select(0, NULL, NULL, NULL, {0, 20} \u003cunfinished ...\u003e\r\n[pid 27747] \u003c... socket resumed\u003e )      = 3\r\n[pid 27813] \u003c... select resumed\u003e )      = 0 (Timeout)\r\n[pid 27747] setsockopt(3, SOL_SOCKET, SO_BROADCAST, [1], 4 \u003cunfinished ...\u003e\r\n[pid 27813] select(0, NULL, NULL, NULL, {0, 20} \u003cunfinished ...\u003e\r\n[pid 27747] \u003c... setsockopt resumed\u003e )  = 0\r\n[pid 27747] connect(3, {sa_family=AF_LOCAL, sun_path=\"/var/run/syslog\"}, 16 \u003cunfinished ...\u003e\r\n[pid 27813] \u003c... select resumed\u003e )      = 0 (Timeout)\r\n[pid 27813] select(0, NULL, NULL, NULL, {0, 20} \u003cunfinished ...\u003e\r\n[pid 27747] \u003c... connect resumed\u003e )     = 0\r\n[pid 27747] epoll_create1(EPOLL_CLOEXEC \u003cunfinished ...\u003e\r\n[pid 27813] \u003c... select resumed\u003e )      = 0 (Timeout)\r\n[pid 27747] \u003c... epoll_create1 resumed\u003e ) = 4\r\n[pid 27813] select(0, NULL, NULL, NULL, {0, 20} \u003cunfinished ...\u003e\r\n\r\nfd 3 gets added to the epoll instance at fd 4, with event data set to {u32=4082519848, u64=140161750290216}:\r\n\r\n[pid 27747] epoll_ctl(4, EPOLL_CTL_ADD, 3, {EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, {u32=4082519848, u64=140161750290216}}) = 0\r\n[pid 27747] getsockname(3, {sa_family=AF_LOCAL, NULL}, [2]) = 0\r\n[pid 27747] getpeername(3, {sa_family=AF_LOCAL, sun_path=\"/var/run/syslog\"}, [20]) = 0\r\n[pid 27813] \u003c... select resumed\u003e )      = 0 (Timeout)\r\n[pid 27813] select(0, NULL, NULL, NULL, {0, 20} \u003cunfinished ...\u003e\r\n[pid 27813] \u003c... select resumed\u003e )      = 0 (Timeout)\r\n[pid 27813] select(0, NULL, NULL, NULL, {0, 20} \u003cunfinished ...\u003e\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, 0) = 1\r\n[pid 27816] epoll_wait(4,  \u003cunfinished ...\u003e\r\n[pid 27813] \u003c... select resumed\u003e )      = 0 (Timeout)\r\n[pid 27813] select(0, NULL, NULL, NULL, {0, 20} \u003cunfinished ...\u003e\r\n[pid 27818] select(0, NULL, NULL, NULL, {0, 3} \u003cunfinished ...\u003e\r\n\r\nFirst sign of \"available for write()\" for fd 3:\r\n\r\n[pid 27816] \u003c... epoll_wait resumed\u003e {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4,  \u003cunfinished ...\u003e\r\n[pid 27813] \u003c... select resumed\u003e )      = 0 (Timeout)\r\n[pid 27818] \u003c... select resumed\u003e )      = 0 (Timeout)\r\n[pid 27813] select(0, NULL, NULL, NULL, {0, 20} \u003cunfinished ...\u003e\r\n\r\nepoll_wait()'s continue to return EPOLLOUT for fd 3:\r\n\r\n[pid 27816] \u003c... epoll_wait resumed\u003e {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n\r\nfd 5 will be used for the GET request:\r\n\r\n[pid 27747] socket(PF_INET, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, IPPROTO_IP \u003cunfinished ...\u003e\r\n[pid 27817] \u003c... select resumed\u003e )      = 0 (Timeout)\r\n[pid 27813] \u003c... select resumed\u003e )      = 0 (Timeout)\r\n[pid 27813] select(0, NULL, NULL, NULL, {0, 20}) = 0 (Timeout)\r\n[pid 27747] \u003c... socket resumed\u003e )      = 5\r\n[pid 27813] select(0, NULL, NULL, NULL, {0, 20} \u003cunfinished ...\u003e\r\n[pid 27747] setsockopt(5, SOL_SOCKET, SO_BROADCAST, [1], 4) = 0\r\n[pid 27747] connect(5, {sa_family=AF_INET, sin_port=htons(12345), sin_addr=inet_addr(\"127.0.0.1\")}, 16 \u003cunfinished ...\u003e\r\n[pid 27813] \u003c... select resumed\u003e )      = 0 (Timeout)\r\n[pid 27813] select(0, NULL, NULL, NULL, {0, 20} \u003cunfinished ...\u003e\r\n[pid 27747] \u003c... connect resumed\u003e )     = -1 EINPROGRESS (Operation now in progress)\r\n\r\nfd 5 being added to the epoll instance with {u32=4082519656, u64=140161750290024}:\r\n\r\n[pid 27747] epoll_ctl(4, EPOLL_CTL_ADD, 5, {EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, {u32=4082519656, u64=140161750290024}} \u003cunfinished ...\u003e\r\n[pid 27816] \u003c... epoll_wait resumed\u003e {{EPOLLOUT, {u32=4082519656, u64=140161750290024}}}, 128, -1) = 1\r\n[pid 27747] \u003c... epoll_ctl resumed\u003e )   = 0\r\n[pid 27816] epoll_wait(4,  \u003cunfinished ...\u003e\r\n[pid 27816] \u003c... epoll_wait resumed\u003e {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27747] getsockopt(5, SOL_SOCKET, SO_ERROR,  \u003cunfinished ...\u003e\r\n[pid 27816] epoll_wait(4,  \u003cunfinished ...\u003e\r\n[pid 27747] \u003c... getsockopt resumed\u003e [0], [4]) = 0\r\n[pid 27747] getsockname(5, {sa_family=AF_INET, sin_port=htons(24603), sin_addr=inet_addr(\"127.0.0.1\")}, [16]) = 0\r\n[pid 27817] \u003c... select resumed\u003e )      = 0 (Timeout)\r\n[pid 27747] getpeername(5, {sa_family=AF_INET, sin_port=htons(12345), sin_addr=inet_addr(\"127.0.0.1\")}, [16]) = 0\r\n[pid 27747] setsockopt(5, SOL_TCP, TCP_NODELAY, [1], 4) = 0\r\n[pid 27816] \u003c... epoll_wait resumed\u003e {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27747] setsockopt(5, SOL_SOCKET, SO_KEEPALIVE, [1], 4 \u003cunfinished ...\u003e\r\n[pid 27816] epoll_wait(4,  \u003cunfinished ...\u003e\r\n[pid 27747] \u003c... setsockopt resumed\u003e )  = 0\r\n[pid 27747] setsockopt(5, SOL_TCP, TCP_KEEPINTVL, [30], 4) = 0\r\n[pid 27747] setsockopt(5, SOL_TCP, TCP_KEEPIDLE, [30], 4) = 0\r\n[pid 27816] \u003c... epoll_wait resumed\u003e {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4,  \u003cunfinished ...\u003e\r\n\r\nThe GET request itself:\r\n\r\n[pid 27747] write(5, \"GET / HTTP/1.1\\r\\nHost: localhost:\"..., 96 \u003cunfinished ...\u003e\r\n[pid 27816] \u003c... epoll_wait resumed\u003e {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27817] mprotect(0x7f79f2d5f000, 4096, PROT_NONE \u003cunfinished ...\u003e\r\n[pid 27816] epoll_wait(4,  \u003cunfinished ...\u003e\r\n[pid 27747] \u003c... write resumed\u003e )       = 96\r\nProcess 27846 attached\r\n[pid 27813] select(0, NULL, NULL, NULL, {0, 320} \u003cunfinished ...\u003e\r\n[pid 27816] \u003c... epoll_wait resumed\u003e {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4,  \u003cunfinished ...\u003e\r\n[pid 27813] select(0, NULL, NULL, NULL, {0, 640} \u003cunfinished ...\u003e\r\n[pid 27816] \u003c... epoll_wait resumed\u003e {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27817] read(5,  \u003cunfinished ...\u003e\r\n[pid 27816] epoll_wait(4,  \u003cunfinished ...\u003e\r\n[pid 27817] \u003c... read resumed\u003e 0xc4200fd000, 4096) = -1 EAGAIN (Resource temporarily unavailable)\r\n[pid 27816] \u003c... epoll_wait resumed\u003e {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27813] \u003c... select resumed\u003e )      = 0 (Timeout)\r\n[pid 27816] epoll_wait(4,  \u003cunfinished ...\u003e\r\n[pid 27816] \u003c... epoll_wait resumed\u003e {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n\r\nWaiting for the GET reply, we get tens of thousands of epoll_wait() EPOLLOUT events for fd 3:\r\n\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n...\r\n[pid 27816] epoll_wait(4, {{EPOLLOUT, {u32=4082519848, u64=140161750290216}}}, 128, -1) = 1\r\n...\r\n~~~\r\n\r\n### Expected behavior\r\n\r\nIt seems the poller should not add the fd's we're not really waiting for with the EPOLLIN|EPOLLOUT flags.",
	"user": {
		"login": "tpotega",
		"id": 20204290,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsDecision"
		}
	],
	"comments": 14,
	"closed_at": "2016-10-05T15:47:23Z",
	"created_at": "2016-09-27T08:36:34Z",
	"updated_at": "2016-10-05T15:47:23Z",
	"milestone": {
		"id": 1748849,
		"number": 42,
		"title": "Go1.8Maybe"
	}
}
