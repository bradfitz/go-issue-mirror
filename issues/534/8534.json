{
	"id": 51288339,
	"number": 8534,
	"state": "closed",
	"title": "net/http: ResponseWriter leaves connection open after WriteTimeout",
	"body": "\u003cpre\u003ego1.3.1\n\nrun the following http server:\n\n\n```\npackage main\n\nimport (\n\t\u0026quot;fmt\u0026quot;\n\t\u0026quot;net/http\u0026quot;\n\t\u0026quot;time\u0026quot;\n)\n\nfunc handler(w http.ResponseWriter, r *http.Request) {\n\ttime.Sleep(2 * time.Second)\n\tmsg := []byte(\u0026quot;Hello world!\\n\u0026quot;)\n\tn, err := w.Write(msg)\n\tfmt.Printf(\u0026quot;Wrote %d out of %d bytes\\n\u0026quot;, n, len(msg))\n\tfmt.Println(\u0026quot;Error was:\u0026quot;, err)\n}\nfunc main() {\n\thttp.HandleFunc(\u0026quot;/\u0026quot;, handler)\n\tserver := http.Server{\n\t\tAddr:         \u0026quot;:8123\u0026quot;,\n\t\tReadTimeout:  time.Second,\n\t\tWriteTimeout: time.Second,\n\t}\n\tserver.ListenAndServe()\n}\n```\n\nWhat happens:\n\nThe Write always succeeds in this handler, and the connection is left open hanging the\nclient. \n\n\nWhat should happen:\n\n- Connection closed due to timeout\n- Preferably return an error when writes fail (though this may not be feasible due to\ninternal buffering)\u003c/pre\u003e",
	"user": {
		"login": "jbardin",
		"id": 35067,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 11,
	"closed_at": "2014-12-08T10:47:24Z",
	"created_at": "2014-08-15T13:22:21Z",
	"updated_at": "2016-06-25T01:39:40Z",
	"milestone": {
		"id": 1067218,
		"number": 21,
		"title": "Go1.4"
	}
}
