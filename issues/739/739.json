{
	"id": 51276878,
	"number": 739,
	"state": "closed",
	"title": "variable overwrite behavior in \"select\" defers from otherwise",
	"body": "\u003cpre\u003eBefore filing a bug, please check whether it has been fixed since\nthe latest release: run \u0026quot;hg pull -u\u0026quot; and retry what you did to\nreproduce the problem.  Thanks.\n\nWhat steps will reproduce the problem?\nTry the program:\n\npackage main\n\nimport \u0026quot;fmt\u0026quot;\n\nfunc f(ch chan int) (n int) {\n        select {\n        case n := \u0026lt;-ch:\n                fmt.Printf(\u0026quot;n=%d\\n\u0026quot;,n)\n                return\n        }\n        panic(\u0026quot;x\u0026quot;)\n}\n\nfunc main() {\n        ch := make(chan int)\n        go func(){\n                ch \u0026lt;- 5\n        }()\n        fmt.Printf(\u0026quot;f=%d\\n\u0026quot;,f(ch))\n}\n\nWhat is the expected output? What do you see instead?\n\nWhat you MAY expect is (see discussion below):\nn=5\nf=5\n\nWhat you see is:\nn=5\nf=0\n\nWhat is your $GOOS?  $GOARCH?\ndarwin, amd64\n\nWhich revision are you using?  (hg identify)\n613f36280394+ tip\n\nPlease provide any additional information below.\n\nThis situation has created sneaky bugs in my programs.\nI think that either, the correct behavior should be to\noutput:\nn=5\nf=5\nOr, when the compiler sees the reassignment of an \nexisting variable in \u0026quot;case n := \u0026lt;-ch:\u0026quot;, it should output\na compiler error, just like it would do if you had\na clause like \u0026quot;n := 4\u0026quot; in the body of f().\u003c/pre\u003e",
	"user": {
		"login": "petar",
		"id": 285131,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 7,
	"closed_at": "2014-12-08T10:05:40Z",
	"created_at": "2010-04-21T23:50:16Z",
	"updated_at": "2016-06-24T19:15:28Z"
}
