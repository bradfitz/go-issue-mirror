{
	"id": 194589506,
	"body": "\u003e would allow users to automatically validate the heritage of a Golang tarball/MSI.\r\n\r\nIf either\r\n\r\n1.  the download came from https://storage.googleapis.com/golang/*\r\n\r\n2.  the SHA-256 of any set of bytes downloaded from any mirror (are there any mirrors?) matches the SHA-256 published at https://golang.org/dl/,\r\n\r\nthen its heritage is the Go team.\r\n\r\nYou used the word \"automatically\".\r\n\r\nFor 1), use curl without --insecure and curl will automatically validate Google's cert.\r\n\r\nFor 2), just append \".sha256\" to URLs.  Here is how to verify a hypothetical HTTP download against the HTTPS-verified SHA-256:\r\n\r\n```\r\n$ curl --silent -O http://storage.googleapis.com/golang/go1.6.src.tar.gz\r\n$ (curl --silent https://storage.googleapis.com/golang/go1.6.src.tar.gz.sha256; echo \"  go1.6.src.tar.gz\") \u003e sums\r\n$ sha256sum --check sums\r\ngo1.6.src.tar.gz: OK\r\n```\r\n\r\nIt's hypothetical because you can also just download it over https.",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-10T00:37:43Z",
	"updated_at": "2016-03-10T00:37:43Z"
}
