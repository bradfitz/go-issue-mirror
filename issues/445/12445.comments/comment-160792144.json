{
	"id": 160792144,
	"body": "\u003eI'm with Minux that if we're trying to determine overlap, ask the runtime directly. I think this handles the common case, effectively the stride==1 case. unsafe.Overlap(p unsafe.Pointer, plen uintptr, q unsafe.Pointer, qlen uintptr) bool? The nice thing about this function is that the API is GC-agnostic (the implementation would have to understand the GC, of course).\r\n\r\nThis does not handle the block matrix use that we have.\r\n\r\n\u003eMaybe we handle stride\u003e1 queries as the stride==1 query above together with the guarantee that uintptr(p)-uintptr(q) is always correct if p and q are in the same allocation? I'm less sure about whether this makes sense and/or is possible given a moving GC.\r\n\r\nNor does this AFAICS.",
	"user": {
		"login": "kortschak",
		"id": 275221,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-30T23:12:54Z",
	"updated_at": "2015-11-30T23:12:54Z"
}
