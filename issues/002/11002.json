{
	"id": 82815996,
	"number": 11002,
	"state": "closed",
	"title": "cmd/go: linker issue when using clang with cgo on linux",
	"body": "Hello,\r\n\r\n### 1. What go version do I use? \r\n\r\n`go version go1.4.2 linux/amd64`.\r\n\r\n### 2. What operating system do I use?\r\n\r\n[alpine linux](http://alpinelinux.org) as [official docker image](https://registry.hub.docker.com/_/alpine/) build steps can be taken from [this Dockerfile](https://gist.github.com/bodokaiser/bf602abf269ea45b9369).\r\n\r\n### 3. What did I do?\r\n\r\nI want to compile a go project which uses cgo to do some work in [opencv](http://opencv.org).\r\nYou can see the [file which imports C](https://gist.github.com/bodokaiser/aef6b01a62c7e6f7c8b9).\r\n\r\n### 4. What did I expect to happen?\r\n\r\nThat cgo works platform independent across unix* and between gcc and clang.\r\n\r\n### 5. What happened instead?\r\n\r\n```sh\r\n/usr/bin/ld: -r and -shared may not be used together\r\nclang-3.6: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\n### 6. What did I do as workaround?\r\n\r\nI prefixed the go command with `CC=\"\" CXX=\"\"` so that go uses gcc instead of clang.\r\n\r\nPossible related issues:\r\n- https://github.com/golang/go/issues/7800\r\n\r\nBest Bodo",
	"user": {
		"login": "bodokaiser",
		"id": 1780466,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 20,
	"closed_at": "2015-06-01T17:17:05Z",
	"created_at": "2015-05-30T13:39:24Z",
	"updated_at": "2016-06-25T02:09:51Z"
}
