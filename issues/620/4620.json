{
	"id": 51282396,
	"number": 4620,
	"state": "closed",
	"title": "cmd/gc: Wrong multiple assignment evaluation order",
	"body": "\u003cpre\u003eRun the following program:\n\npackage main\n\nfunc main() {\n\tprintln(foo())\n}\n\ntype L struct { x ,y int }\n\nfunc foo() (n int) {\n\tvar x = map[L]int{}\n\tx[L{1,2}] = 20\n\tvar y = L{0, 0}\n\ty, x[y] = L{1, 2}, 10\n\treturn x[L{1,2}]\n}\n\nThe output is 10, but should be 20.\n\nThe spec seems to be clear that the map index operand should be evaluated before y is\nassigned the value L{1,2}:\n\n\u0026quot;The assignment proceeds in two phases. First, the operands of index expressions\nand pointer indirections (including implicit pointer indirections in selectors) on the\nleft and the expressions on the right are all evaluated in the usual order. Second, the\nassignments are carried out in left-to-right order.\u0026quot;\u003c/pre\u003e",
	"user": {
		"login": "DanielMorsing",
		"id": 545573,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 7,
	"closed_at": "2014-12-08T10:24:32Z",
	"created_at": "2013-01-05T19:23:30Z",
	"updated_at": "2016-06-24T22:30:47Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
