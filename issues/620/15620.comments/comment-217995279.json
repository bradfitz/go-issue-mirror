{
	"id": 217995279,
	"body": "Per Order of Evaluations (https://tip.golang.org/ref/spec#Order_of_evaluation), functions calls are executed from left to right, and per the example in that section, the `len` and `append` function calls are executed as `len` followed by `append`. So we can rewrite the assignment as:\r\n```\r\nn := len(xs)\r\nxs, xs[n-1] = append(xs[:i], xs[i+1:]...), 0\r\n```\r\nThere are no assignments to `i` and `n`, so they don't change and we can thus write this code as:\r\n```\r\nxs, xs[4] = append(xs[:2], xs[3:]...), 0\r\n```\r\nPer the spec \"First, the operands of index expressions and pointer indirections (including implicit pointer indirections in selectors) on the left and the expressions on the right are all evaluated in the usual order. Second, the assignments are carried out in left-to-right order.\" (https://tip.golang.org/ref/spec#Assignments).\r\n\r\nThe _operand_ of the index expression on the left is 4 (and it would still be 4 even if we evaluated it only now). Then all the expressions on the right are evaluated. The result of the `append` call is:\r\n```\r\n[]int{0, 1, 3, 4}\r\n```\r\nSo we are left with:\r\n```\r\nxs, xs[4] = []int{0, 1, 3, 4}, 0\r\n```\r\nNote that the spec says that the _operands_ of index expressions are evaluated first, not the index expressions themselves. Then assignment occurs from left to right. That is, only then are the index expressions evaluated, from left to right as the assignments occur:\r\n```\r\nxs = []int{0, 1, 3, 4}\r\nxs[4] = 0\r\n```\r\nAfter the first assignment, the length of `xs` is 4, so I would expect the 2nd assignment, and in fact this parallel assignment to panic with an index out of bounds error.\r\n\r\nI'd argue that this is a bug in gc and gccgo is correct.\r\n\r\nI'd also recommend to not write code like this (correct or not) as it is not easily readable in the first place.",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-09T21:27:26Z",
	"updated_at": "2016-05-09T21:27:26Z"
}
