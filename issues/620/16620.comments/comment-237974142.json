{
	"id": 237974142,
	"body": "@josharian I think what you are thinking of is that it is critical that a condition variable not miss a signal/broadcast in between the unlock and the goroutine suspension.  Other than that there is no implied atomicity.  A simple implementation of condition variables can easily make that mistake--unlock, check signal, (receive unnoticed signal), suspend.  Our implementation doesn't have that problem.  The required atomicity is in `runtime.notifyListWait`, via the internal lock it acquires.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-05T21:48:22Z",
	"updated_at": "2016-08-05T21:48:22Z"
}
