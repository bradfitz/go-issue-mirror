{
	"id": 124579423,
	"body": "If we dropped the NONBLOCK flag then the semantics of crypto/rand would be \"maybe it blocks, maybe it doesn'tâ€”depends on your kernel\". It will be many years until this new system call has filtered down to all the LTS releases etc and those semantics seem bad. \r\n\r\nIt's also not clear that we could provide a `WaitForEntropy` call even if we wanted to. Without the new system call, can user-space find that out? There's the `RNDGETENTCNT` ioctl, but that returns the number of bits in the entropy pool. But that's different from whether it's seeded or not. One can read from `/dev/random` and drain the pool to zero, but then a zero from `RNDGETENTCNT` doesn't mean that it's not seeded.\r\n\r\nWe can't read a byte from `/dev/random` to check it because, if every Go process did that, they would start blocking, and blocking unnecessarily.\r\n\r\nSo, on the (many) systems where we can't figure out the return value for `WaitForEntropy`, do we block forever, panic, or just return true?",
	"user": {
		"login": "agl",
		"id": 21203,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-24T17:01:05Z",
	"updated_at": "2015-07-24T17:01:05Z"
}
