{
	"id": 111792921,
	"number": 12956,
	"state": "closed",
	"title": "Error variable fails err != nil check even when nil",
	"body": "I'm honestly not sure what the conditions are exactly but the below code will reproduce the problem on these settings:\r\n\r\ngo version go1.5 darwin/amd64 (built from commit bb03defe933c89fee44be675d7aa0fbd893ced30)\r\ngo version go1.4.2 linux/amd64 (yum epel package)\r\n\r\nChanging `var err error` to `var err *Error` makes the code work.\r\n\r\nSteps to reproduce:\r\n* go run bug.go\r\n\r\nExpected result:\r\nProgram exits normally\r\n\r\nActual result:\r\nPanic during panic since the `if err != nil` check succeeds.\r\n\r\n```\r\npackage main\r\n\r\ntype Error struct {\r\n\tErr error\r\n}\r\n\r\nfunc (err *Error) Error() string {\r\n\treturn err.Err.Error()\r\n}\r\n\r\nfunc test() *Error {\r\n\treturn nil\r\n}\r\n\r\nfunc main() {\r\n\tvar err error\r\n\terr = test()\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n}\r\n```",
	"user": {
		"login": "perj",
		"id": 224521,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2015-10-16T09:30:42Z",
	"created_at": "2015-10-16T09:15:33Z",
	"updated_at": "2015-10-16T09:46:31Z"
}
