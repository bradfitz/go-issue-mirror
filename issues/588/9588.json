{
	"id": 54308788,
	"number": 9588,
	"state": "closed",
	"title": "encoding/csv: BOM presents in fields read with Reader",
	"body": "I was checking the header fields of an external CSV file and noticed, that the file BOM is part of the first field when reading with csv.Reader.\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"encoding/csv\"\r\n\t\"fmt\"\r\n)\r\n\r\nfunc main() {\r\n\tcsvData := []byte(\"\\uFEFFa,b\")\r\n\r\n\tr := bytes.NewReader(csvData)\r\n\r\n\tcsvR := csv.NewReader(r)\r\n\r\n\theader, err := csvR.Read()\r\n\r\n\tif err != nil {\r\n\t\tfmt.Println(err.Error())\r\n\t\treturn\r\n\t}\r\n\r\n\tfmt.Printf(\"%q\", header[0]) // prints \"\\ufeffa\" where I expected \"a\"\r\n}\r\n```\r\n[snippet on playground](http://play.golang.org/p/5lETSMcixh)\r\n\r\nRelated: Since `U+FEFF` is called a \"[...] space\", I was expected string.TrimSpace to remove it, which it did not. (Which would have been my preferable work-around to remove and spaces around fields). I would guess this is also the reason why `csvR.TrimLeadingSpace = true` does not remove the BOM.",
	"user": {
		"login": "tp",
		"id": 52437,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2015-01-14T15:52:48Z",
	"created_at": "2015-01-14T10:55:19Z",
	"updated_at": "2016-06-25T01:58:30Z"
}
