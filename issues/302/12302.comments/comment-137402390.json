{
	"id": 137402390,
	"body": "@kostya-sh @davecheney There is one  feature I can use alongside SemVer that I did not easily experience before. That is, when using a dependency management tool I can set a version constraint. For example, I can tell my tool to use the version `\"\u003e1.4, \u003c2.0\"`. Because SemVer has semantic meaning I'm telling it to use anything newer than 1.4 (where a feature was added I'm using) but less than 2.0 where the API to the package changed. This is quite useful during development where my tooling can keep my package up to date.",
	"user": {
		"login": "mattfarina",
		"id": 62991,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-03T10:23:59Z",
	"updated_at": "2015-09-03T10:23:59Z"
}
