{
	"id": 137190661,
	"body": "\u003eThat's great, but by code I meant a tool that makes use of the fact that versions follow a standard.\r\n\r\nI believe gopkg.in is the prime example we have today. For example, you can browse to a package path and see what major versions are available, what minor and patch version is the latest and get links to the source and docs.\r\n\r\nExample project pages:\r\n\r\nhttps://gopkg.in/stack.v1\r\nhttps://gopkg.in/inconshreveable/log15.v2\r\nhttps://gopkg.in/natefinch/lumberjack.v2\r\nhttps://gopkg.in/gomail.v2\r\nhttps://gopkg.in/go-on/stack.v6\r\n\r\nAlthough gopkg.in uses a looser interpretation of semver and allows for branches to satisfy a release (in addition to tags), it is certainly a tool that takes advantage of a tag naming convention very similar to the current proposal.\r\n\r\nCode for gopkg.in is at: https://github.com/niemeyer/gopkg",
	"user": {
		"login": "ChrisHines",
		"id": 1060711,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-02T17:56:59Z",
	"updated_at": "2015-09-02T18:00:05Z"
}
