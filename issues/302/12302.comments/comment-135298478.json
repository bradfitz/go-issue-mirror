{
	"id": 135298478,
	"body": "\u003e I agree, and think that semver is a concrete and well understood standard that works well. Do you think that Go should develop its own version numbering scheme ? What benefits do you think that would have over semver ?\r\n\r\nI think that it doesn't matter much what version numbering scheme is used. However when there is a possibility that two incompatible versions of the same package are used as dependencies of a single project (in semver terms libfoo 1.x and libfoo 2.y) then having libfooone x and libfootwo y is easier to deal with. So semver way of dealing with breaking changes by incrementing major version doesn't work in all cases.\r\n\r\nI understand that this is not applicable to all packages and cannot be enforced thus this is just a recommendation.\r\n\r\n\u003e I point to the ubiquitous success of gofmt as an example. Code that is no go formatted is considered my many to be a first order indicator of a lack of quality.\r\n\r\nI think you are mixing the cause and effect here. I believe that the only reason of a single formatting style for Go code is the existence of gofmt. The tool came first and no formal document describing formatting rules was necessary. Compare this with PEP-8 and python.\r\n\r\nWhy no one tags their repositories now (is it true btw?)? Could it be because there are no tools that support tags?\r\n\r\n",
	"user": {
		"login": "kostya-sh",
		"id": 7126275,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-27T05:31:07Z",
	"updated_at": "2015-08-27T05:31:07Z"
}
