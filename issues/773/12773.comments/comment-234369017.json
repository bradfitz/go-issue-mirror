{
	"id": 234369017,
	"body": "@robpike  Thank you for your feedback.\r\n\u003e the problem is ill defined\r\n\r\nCould you be more specific here? I'm unsure what you find ill-defined of the above.\r\n\r\n\u003e  it seems other solutions exist\r\n\r\nI can agree with this. Let me take the windows service problem for as a poster child of why I use this. There are four ways from a windows service to find a configuration:\r\n * Put the configuration file in a known location. This has problems as drive letters are often C:\\, but may be any other letter (esp for Program Files). Not a good option on windows.\r\n * The official central location for configuration on windows is the windows registry. This works but go has limited support for w/r registry values. Most importantly this means a larger more intrusive install step that isn't cleaned up when you just remove the folder.\r\n * Pass in an initial root path or configuration path to the windows service when it is installed. This works and is how the Oracle DB does it on windows. This works, but can be trickier for ops to install then...\r\n * Put the configuration into a well known location *relative* to the executable. Ops like it because it is copy and register the service.\r\n\r\nNow I also use the same technique on non-windows platforms because of, habit, same code base, portable, and it remains easy.\r\n\r\nI respect your decision and agree that Russ should have buy in. But I did want to try ensure I mapped out the alternatives that I see. If I have missed one or if you feel I mischaracterized an option, let me know. I support it going into \"os\" because that's where people tend to look for it and people get it \"wrong\" otherwise:\r\n\r\nhttp://stackoverflow.com/questions/12090170/go-find-the-path-to-the-executable\r\nhttp://stackoverflow.com/questions/18537257/golang-how-to-get-the-directory-of-the-currently-running-file\r\n\r\n",
	"user": {
		"login": "kardianos",
		"id": 755121,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-21T20:10:49Z",
	"updated_at": "2016-07-21T20:10:49Z"
}
