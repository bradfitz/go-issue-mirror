{
	"id": 233784662,
	"body": "@robpike There are three primary problems I solve with the Executable call today:\r\n\r\n * Finding configuration properties for windows services.\r\n * Finding resources (CSS, HTML, SQL, ...) for services.\r\n * For `github.com/kardianos/service`, finding the default executable to register in the system service manager such as windows service, systemd, or launchd. \r\n\r\nWindows services always start up with an initial working directory of %SYSTEM%, usually `C:\\windows\\system32` (there is no way to configure this) . In this case the os.Args[0] doesn't give the correct path either if memory serves. I often place configuration files for windows services adjacent to their executable for easy access and deployment. The other ways to solve this problem is to pass in arguments when installing the service pointing to a root folder or configuration file, or by reading and writing to the windows registry. I don't like dealing with the registry and prefer simple local config files.\r\n\r\nResources such as CSS, HTML, or other files I either place adjacent to the executable or zip up and embed within the executable. Unless there is some deployment constraint, I prefer placing resources adjacent to the executable directly on the filesystem. I could use on os.Args[0], but I prefer not to rely on it because it can be faked. If I see the executable next to the resources on the filesystem and I use Executable(), it doesn't matter how the thing is started up, it *will* find the resources.\r\n",
	"user": {
		"login": "kardianos",
		"id": 755121,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	},
	"created_at": "2016-07-19T22:22:08Z",
	"updated_at": "2016-07-20T14:20:39Z"
}
