{
	"id": 66087031,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eThe code's changed since this was filed but the test program shows the same behaviour.\nFor reference, the section from RFC2616:\n\n\"Any HTTP/1.1 message containing an entity-body SHOULD include a Content-Type header\nfield defining the media type of that body. If and only if the media type is not given\nby a Content-Type field, the recipient MAY attempt to guess the media type via\ninspection of its content and/or the name extension(s) of the URI used to identify the\nresource. If the media type remains unknown, the recipient SHOULD treat it as type\n\"application/octet-stream\".\"\n\nI don't think a nil error from parsePostForm would be good since there's no case to\nhandle empty Content-Type (\u003ca href=\"http://golang.org/src/pkg/net/http/request.go?#L681)\"\u003ehttp://golang.org/src/pkg/net/http/request.go?#L681)\u003c/a\u003e so you\nwould get both nil error and nil Request.PostForm.\n\nTo treat absent Content-Type as application/octet-stream, a change would need to be made\nto mime.checkMediaTypeDisposition (or a check made before calling it).\n\nThe question then is what ParseForm could do with application/octet-stream (probably\nnothing). So maybe this just requires documenting.\n\n(I'm looking at this because of \u003ca href=\"https://golang.org/issue/6334)\"\u003ehttps://golang.org/issue/6334)\u003c/a\u003e.\u003c/pre\u003e",
	"user": {
		"login": "mattrco",
		"id": 207735,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-12-10T12:41:18Z",
	"updated_at": "2014-12-08T10:36:39Z"
}
