{
	"id": 51282609,
	"number": 4765,
	"state": "closed",
	"title": "runtime: linux/arm OABI detection causes segfault on kernel without thumb support",
	"body": "by **andrew@andreworr.ca**:\n\n\u003cpre\u003eOn an arm5tejl processor running an eabi linux kernel *without* thumb support, executing\na golang binary (compiled with GOARM=5) will result in a segfault when the\nrt0_linux_arm.s tries to branch to thumb code in order to set up the OABI check.\n\nI was able to monkey patch this for my situation by commenting out the thumb part as\nshown here:\n\u003ca href=\"https://github.com/xorrbit/golang/commit/42667df7216df6d9014fb4c4ea75d718d55491f9\"\u003ehttps://github.com/xorrbit/golang/commit/42667df7216df6d9014fb4c4ea75d718d55491f9\u003c/a\u003e. After\ncompiling my binaries with this patched copy of the golang compiler I was able to\nexecute them fine.\n\nI looked into the history of this OABI check and I'm not sure that there is a better way\nto do it. It is unfortunate that this is the only tiny bit of thumb code that is\ngenerated, and that it causes a segfault if you run it on a kernel without thumb support.\n\nGranted, this is probably a somewhat rare situation (running a kernel without thumb\nsupport on a processor that supports thumb). I talked to the devs who ship this kernel\nand there is no particular reason thumb isn't enabled, the processor supports it but\nthey never required it. This is all on a custom board running a custom kernel.\n\nI thought I would log this here anyways in case anyone else encountered this problem. A\nfix would be great but I can't find of a proper way to fix this that would add more\ncomplexity.\n\nThanks\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:25:18Z",
	"created_at": "2013-02-05T18:52:15Z",
	"updated_at": "2016-06-24T22:32:26Z"
}
