{
	"id": 108529998,
	"number": 12765,
	"state": "closed",
	"title": "OS X negative values issue using binary.LittleEndian Put/Uint32()",
	"body": "In trying to save/load data to files I've been converting `int` values to `[]byte` arrays using the `binary` package. However I'm getting issues with negative numbers, which when tested using Playground, work, but when run on my local OS X they do not.\r\n\r\n\t\tpackage main\r\n\r\n\t\timport \"fmt\"\r\n\t\timport \"encoding/binary\"\r\n\r\n\t\tfunc main() {\r\n\t\t\tvar a int\r\n\t\t\ta = -650\r\n\r\n\t\t\tb := make([]byte, 4)\r\n\t\t\tbinary.LittleEndian.PutUint32(b, uint32(a))\r\n\r\n\t\t\tfmt.Println(toInt(b))\r\n\t\t}\r\n\r\n\t\tfunc toInt(b []byte) int {\r\n\t\t\treturn int(binary.LittleEndian.Uint32(b))\r\n\t\t}\r\n\r\nhttp://play.golang.org/p/pYWj1hBCUS\r\n\r\nPlayground outputs `-650` (expected), while on OS X I get `4294966646`.\r\n\r\nMy system is a 2011 Macbook Air running OS X 10.9.5. I've tried this with Go 1.4.2, 1.5 and 1.5.1 (installed with Homebrew), but the results are the same each time.\r\n\r\nIs this an OS X issue, or desired behaviour?",
	"user": {
		"login": "mrcook",
		"id": 1093101,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2015-09-27T13:44:11Z",
	"created_at": "2015-09-27T11:21:48Z",
	"updated_at": "2015-09-27T13:44:11Z"
}
