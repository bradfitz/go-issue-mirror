{
	"id": 51288421,
	"number": 8598,
	"state": "closed",
	"title": "encoding/json: Unmarshal does not handle structs with lowercase fields",
	"body": "by **ginabythebay**:\n\n\u003cpre\u003eWhat does 'go version' print? 1.3\n\nWhat steps reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\n1. Run this: \u003ca href=\"http://play.golang.org/p/EXzXy8Ec01\"\u003ehttp://play.golang.org/p/EXzXy8Ec01\u003c/a\u003e\n\nWhat happened? There is no error and the struct has no fields set\n\nWhat should have happened instead? The name field should have been set to foo.\n\nPlease provide any additional information below.\n\nApparently Unmarshal silently ignores field names that are lowercase.  If I change the\n'name' field in the struct to 'Name', then it works.  This is especially painful as\nexamples in effective go (e.g. \u003ca href=\"https://golang.org/doc/effective_go.html#formatting)\"\u003ehttps://golang.org/doc/effective_go.html#formatting)\u003c/a\u003e show\nstructs with lowercase fields.  Ideally, Unmarshal would handle structs with lowercase\nfields.  If that isn't practical for some reason, the docs should mention it, and\nperhaps Unmarshal should return an error if passed a struct type which has no fields\nthat are settable.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:47:44Z",
	"created_at": "2014-08-26T21:36:20Z",
	"updated_at": "2016-06-25T01:40:14Z"
}
