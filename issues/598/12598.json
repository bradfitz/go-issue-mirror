{
	"id": 106141231,
	"number": 12598,
	"state": "closed",
	"title": "x/mobile: Android net.Dial(\"tcp\", ip, port) returns \"protocol not available\"",
	"body": "**Updated Sep 14:** Added Samsung Grand Prime and Chuwi Vi8 to working device list.\r\n\r\nGo ver: devel +0b5bcf5 Sat Sep 12 08:34:52 2015 +0000 linux/amd64\r\nGo Mobile ver:  +65551d8 Fri Sep 11 20:14:45 2015 +0000 (android); androidSDK=/opt/Android/Sdk/platforms/android-23\r\nAndroid Studio ver: 1.4 Beta3\r\nGo Mobile Bind Plugin: 0.2.2\r\nBuild Env: Linux x86_64\r\n\r\nProblem:\r\n------------\r\n\r\nTCP networking code generated for Android packaged as .so in APK with studio and go-bind plugin will sometimes work, and most often times, result in \"protocol not available\" error in net.Dial().\r\n\r\n```\r\ndial tcp 173.205.184.7:80: protocol not available\r\n```\r\n\r\nSetup:\r\n---------\r\n1) Manifest has   ```xml \u003cuses-permission android:name=\"android.permission.INTERNET\" /\u003e ```\r\n2) Java tcp does work, verified in same apk. \r\n3) Tested both calling go via java using go-bind bridge on java main thread and java background thread. Result is the same. \r\n\r\nExpectation:\r\n------------------\r\n* From NDK docs, native libraries should inherit rights from java/manifest and it should have access to TCP protocol at least. \r\n* Also did not expect some devices to work while most devices failed. If there is a permission issue, it should either all work or all fail.\r\n\r\nTest Code:\r\n--------------\r\nAt the bottom I have included the Go code and relevant Java code you can insert into any go mobile android  project. \r\n\r\nWorking Devices:\r\n* Asus Zenfone2 (5.0) (x86 devices but runs the generated armv7 .so via libhoudini just fine)\r\n* Chuwi VL8 Tablet (4.4.4) Mediatek arm9 cpu\r\n* Samsung Grand Prime SM-G5308W (4.4.4)\r\n* Chuwi Vi8 Tablet (4.4.4) (x86 device...)\r\n\r\nFailed Devices:\r\n* Lollipop API 22 armv7 Emulator\r\n* Samsung SM-T320 (CM 5.1.1)\r\n* Samsung GT-N7102 (4.3)\r\n* Samsung T807T (4.4.2)\r\n* Samsung Galaxy S5 (5.1.1)\r\n* Nexus 7 (5.1.1)\r\n* LG G3 D851 (5.0.1)\r\n* OnePlus (CM 4.4.4)\r\n\r\nI will try to update the device list with working/non-working as I find more devices to test on. \r\n\r\n```go\r\n\r\npackage gosocket\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"net\"\r\n\t\"strconv\"\r\n\t\"strings\"\r\n)\r\n\r\n//in java call this and pass host, and port\r\nfunc GetTestResult(h string, p int) {\r\n\tconst ERR_PROTOCOL_NOT_AVAILABLE = \"protocol not available\"\r\n\r\n\tdst := h + \":\" + strconv.Itoa(p)\r\n\r\n\tfmt.Println(\"Starting go test...\", dst)\r\n\r\n\tch := make(chan struct{}, 0)\r\n\r\n\t//test TCP dial in go routines....\r\n\tfor i := 0; i \u003c 5; i++ {\r\n\r\n\t\tgo func(ch chan struct{}) {\r\n\t\t\t_, err := net.Dial(\"tcp\", dst)\r\n\r\n\t\t\tif err != nil \u0026\u0026 strings.Contains(err.Error(), ERR_PROTOCOL_NOT_AVAILABLE) {\r\n\t\t\t\tfmt.Println(err)\r\n\t\t\t} else {\r\n\t\t\t\tfmt.Println(\"GOT TCP!\")\r\n\r\n\t\t\t\t//err is fine as long as it is not ERR_PROTOCOL_NOT_AVAILABLE\r\n\t\t\t\tif err != nil {\r\n\t\t\t\t\tfmt.Println(\"With Err:\", err)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfmt.Println(\"completed tcp go routine..\")\r\n\r\n\t\t\tch \u003c- struct{}{}\r\n\t\t}(ch)\r\n\r\n\t\t\u003c-ch\r\n\t}\r\n\r\n\t//test TCP dial in plain serial....\r\n\tfor i := 0; i \u003c 5; i++ {\r\n\r\n\t\t_, err := net.Dial(\"tcp\", dst)\r\n\r\n\t\tif err != nil \u0026\u0026 strings.Contains(err.Error(), ERR_PROTOCOL_NOT_AVAILABLE) {\r\n\t\t\tfmt.Println(err)\r\n\t\t} else {\r\n\t\t\tfmt.Println(\"GOT TCP!\")\r\n\r\n\t\t\t//err is fine as long as it is not ERR_PROTOCOL_NOT_AVAILABLE\r\n\t\t\tif err != nil {\r\n\t\t\t\tfmt.Println(\"With Err:\", err)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfmt.Println(\"completed tcp serial..\")\r\n\r\n\t}\r\n}\r\n\r\n```\r\n\r\n```java\r\n@Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n\r\n        //CHANGE ME....\r\n        String host = \"173.205.184.7\";\r\n        int port = 80;\r\n\r\n        Log.d(\"xing\", \"about to call go in main thread...\");\r\n\r\n        //call go in main thread\r\n        Gosocket.GetTestResult(host, port);\r\n\r\n        Thread r = new Thread() {\r\n\r\n            @Override\r\n            public void run() {\r\n                android.os.Process.setThreadPriority(android.os.Process.THREAD_PRIORITY_BACKGROUND);\r\n\r\n\r\n                Log.d(\"xing\", \"about to call go in background...\");\r\n\r\n                //call go in background thread...\r\n                Gosocket.GetTestResult(host, port);\r\n            }\r\n        };\r\n\r\n        r.start();\r\n\r\n    }\r\n```",
	"user": {
		"login": "diegomontoya",
		"id": 417764,
		"type": "User",
		"site_admin": false
	},
	"comments": 20,
	"closed_at": "2016-04-13T03:37:05Z",
	"created_at": "2015-09-12T08:29:31Z",
	"updated_at": "2016-04-13T03:37:05Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
