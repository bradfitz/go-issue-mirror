{
	"id": 147133031,
	"number": 15211,
	"state": "open",
	"title": "proposal: test: indicate when no tests match -run",
	"body": "When using `go test -run` to filter tests, there's no clear indication when no tests match. The proposal is to change testing and test package to provide and display this information.\r\n\r\nExamples:\r\n\r\n```\r\n$ go test -run DontMatchAnything\r\ntesting: warning: no tests match regexp: DontMatchAnything      # 1\r\nPASS\r\n?   \t_/tmp\t[no tests match regexp]                         # 2\r\n\r\n$ go test -run DontMatchAnything testing/...\r\n?   \ttesting\t[no tests match regexp]\r\n?   \ttesting/iotest\t[no test files]\r\n?   \ttesting/quick\t[no tests match regexp]\r\n\r\n$ go test -run Mutually testing/...       # Test matches in testing/quick\r\n?   \ttesting\t[no tests match regexp]\r\n?   \ttesting/iotest\t[no test files]\r\nok  \ttesting/quick\t0.004s\r\n```\r\n\r\nIn all cases the exit code would remaing 0, as it would be without the proposal.\r\n\r\nThe testing package would output the line indicated by (1) and the go test, instead of \"ok ...\" would output \"? ...\" for the package, like in the line indicated by (2), in the same style as when there are no test files.\r\n\r\nWhile it's possible to use -v and inspect whether tests were ran or not, it's easy to get confused as the output for not matching anything (with verbose) is identical to output of matching without verbose.\r\n",
	"user": {
		"login": "cmarcelo",
		"id": 10478,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		}
	],
	"comments": 20,
	"created_at": "2016-04-09T14:29:10Z",
	"updated_at": "2016-04-27T13:04:08Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
