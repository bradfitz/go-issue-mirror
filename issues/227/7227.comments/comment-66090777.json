{
	"id": 66090777,
	"body": "\u003ca id=\"c41\"\u003e\u003c/a\u003eComment 41:\n\n\u003cpre\u003eWhen Go is the host environment there's the monkey patch work around (#22) that's been\nproven to work for at least Qt and Python. \nWhen the host environment is not Go, and Go is loaded into the process to extend the\nfunctionality of these hosts that might or might not require its own set of signal\nhandlers it gets trickier.\n\nWhile traditionally such extensions are compiled into a shared library, and those are\nthe glasses I've been wearing, it seems to me that it'd be so much more robust to simply\nrun the host and the plugin in separate processes communicating via some form of rpc\nshim. It certainly would make it much clearer on exactly who owns a SIGSEGV, SIGBUS or\nSIGFPE, and the program(s) would be able to make better decisions on how to handle them.\n\nRPC works for me so I'm fine with whatever approach is taken here (including none).\n\nFor reference I wrote a little python script for lldb\n(\u003ca href=\"https://gist.github.com/quarnster/9992193)\"\u003ehttps://gist.github.com/quarnster/9992193)\u003c/a\u003e to dump info when sigaction is called to see\nwhat Python, Java and Ruby does for a simple \"hello world\" program.\n\nPython does:\nInstalled a new signal handler for signal: SIGPIPE: ignore\nInstalled a new signal handler for signal: SIGXFSZ: ignore\nInstalled a new signal handler for signal: SIGINT: (void (*)(int)) __sa_handler =\n0x00000001000b6043 (Python`___lldb_unnamed_function1745$$Python)\n\nJava does:\nInstalled a new signal handler for signal: SIGUSR2: (void (*)(int)) __sa_handler =\n0x00000001033b2fca (libjvm.dylib`SR_handler(int, __siginfo*, __darwin_ucontext*))\nInstalled a new signal handler for signal: SIGSEGV: (void (*)(int)) __sa_handler =\n0x00000001033b3431 (libjvm.dylib`signalHandler(int, __siginfo*, void*))\nInstalled a new signal handler for signal: SIGPIPE: (void (*)(int)) __sa_handler =\n0x00000001033b3431 (libjvm.dylib`signalHandler(int, __siginfo*, void*))\nInstalled a new signal handler for signal: SIGBUS: (void (*)(int)) __sa_handler =\n0x00000001033b3431 (libjvm.dylib`signalHandler(int, __siginfo*, void*))\nInstalled a new signal handler for signal: SIGILL: (void (*)(int)) __sa_handler =\n0x00000001033b3431 (libjvm.dylib`signalHandler(int, __siginfo*, void*))\nInstalled a new signal handler for signal: SIGFPE: (void (*)(int)) __sa_handler =\n0x00000001033b3431 (libjvm.dylib`signalHandler(int, __siginfo*, void*))\nInstalled a new signal handler for signal: SIGXFSZ: (void (*)(int)) __sa_handler =\n0x00000001033b3431 (libjvm.dylib`signalHandler(int, __siginfo*, void*))\nInstalled a new signal handler for signal: SIGHUP: (void (*)(int)) __sa_handler =\n0x00000001033b122b (libjvm.dylib`UserHandler(int, void*, void*))\nInstalled a new signal handler for signal: SIGINT: (void (*)(int)) __sa_handler =\n0x00000001033b122b (libjvm.dylib`UserHandler(int, void*, void*))\nInstalled a new signal handler for signal: SIGTERM: (void (*)(int)) __sa_handler =\n0x00000001033b122b (libjvm.dylib`UserHandler(int, void*, void*))\nInstalled a new signal handler for signal: SIGQUIT: (void (*)(int)) __sa_handler =\n0x00000001033b122b (libjvm.dylib`UserHandler(int, void*, void*))\n\nRuby does:\nInstalled a new signal handler for signal: SIGINT: (void (*)(int)) __sa_handler =\n0x00000001000c30fb\n(libruby.2.0.0.dylib`___lldb_unnamed_function2046$$libruby.2.0.0.dylib)\nInstalled a new signal handler for signal: SIGHUP: (void (*)(int)) __sa_handler =\n0x00000001000c30fb\n(libruby.2.0.0.dylib`___lldb_unnamed_function2046$$libruby.2.0.0.dylib)\nInstalled a new signal handler for signal: SIGQUIT: (void (*)(int)) __sa_handler =\n0x00000001000c30fb\n(libruby.2.0.0.dylib`___lldb_unnamed_function2046$$libruby.2.0.0.dylib)\nInstalled a new signal handler for signal: SIGTERM: (void (*)(int)) __sa_handler =\n0x00000001000c30fb\n(libruby.2.0.0.dylib`___lldb_unnamed_function2046$$libruby.2.0.0.dylib)\nInstalled a new signal handler for signal: SIGALRM: (void (*)(int)) __sa_handler =\n0x00000001000c30fb\n(libruby.2.0.0.dylib`___lldb_unnamed_function2046$$libruby.2.0.0.dylib)\nInstalled a new signal handler for signal: SIGUSR1: (void (*)(int)) __sa_handler =\n0x00000001000c30fb\n(libruby.2.0.0.dylib`___lldb_unnamed_function2046$$libruby.2.0.0.dylib)\nInstalled a new signal handler for signal: SIGUSR2: (void (*)(int)) __sa_handler =\n0x00000001000c30fb\n(libruby.2.0.0.dylib`___lldb_unnamed_function2046$$libruby.2.0.0.dylib)\nInstalled a new signal handler for signal: SIGBUS: (void (*)(int)) __sa_handler =\n0x00000001000c3b9b\n(libruby.2.0.0.dylib`___lldb_unnamed_function2054$$libruby.2.0.0.dylib)\nInstalled a new signal handler for signal: SIGSEGV: (void (*)(int)) __sa_handler =\n0x00000001000c3bb7\n(libruby.2.0.0.dylib`___lldb_unnamed_function2055$$libruby.2.0.0.dylib)\nInstalled a new signal handler for signal: SIGPIPE: ignore\nInstalled a new signal handler for signal: SIGINT: ignore\u003c/pre\u003e",
	"user": {
		"login": "quarnster",
		"id": 1230389,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-04-06T12:41:53Z",
	"updated_at": "2014-12-08T10:40:09Z"
}
