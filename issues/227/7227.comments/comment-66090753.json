{
	"id": 66090753,
	"body": "\u003ca id=\"c18\"\u003e\u003c/a\u003eComment 18:\n\n\u003cpre\u003eI think SIGABRT is a red herring, here's one for SYS_OPEN:\n\n014/02/01 13:11:54 start\n2014/02/01 13:11:54 6 \u0026lt;nil\u0026gt;\n2014/02/01 13:11:54 hello\n\n2014/02/01 13:11:54 i:  0\nfatal error: runtime: stack split during syscall\n\nruntime stack:\nruntime.throw(0x427a1ec)\n\t/Users/quarnster/code/3rdparty/go/src/pkg/runtime/panic.c:464 +0x69\nruntime.newstack()\n\t/Users/quarnster/code/3rdparty/go/src/pkg/runtime/stack.c:261 +0x6c3\nruntime.morestack()\n\t/Users/quarnster/code/3rdparty/go/src/pkg/runtime/asm_amd64.s:225 +0x61\n\ngoroutine 5 [stack split]:\nruntime: unexpected return pc for runtime.sighandler called from 0x7fff8aee85aa\nruntime.sighandler(0x2, 0x0, 0x0, 0x0)\n\t/Users/quarnster/code/3rdparty/go/src/pkg/runtime/signal_amd64.c:43 fp=0x6cbae70\ncreated by github.com/niemeyer/qml.Init\n\t/Users/quarnster/code/go/src/github.com/niemeyer/qml/qml.go:58 +0xa0\n\ngoroutine 1 [chan receive]:\ngithub.com/niemeyer/qml.gui(0xc210049140)\n\t/Users/quarnster/code/go/src/github.com/niemeyer/qml/bridge.go:69 +0xbd\ngithub.com/niemeyer/qml.(*Common).Create(0xc21000a310, 0x0, 0x1a, 0x6b11190)\n\t/Users/quarnster/code/go/src/github.com/niemeyer/qml/qml.go:636 +0x117\nmain.main()\n\t/private/tmp/main.go:57 +0x29c\n\ngoroutine 3 [syscall]:\nos/signal.loop()\n\t/Users/quarnster/code/3rdparty/go/src/pkg/os/signal/signal_unix.go:21 +0x1e\ncreated by os/signal.initÂ·1\n\t/Users/quarnster/code/3rdparty/go/src/pkg/os/signal/signal_unix.go:27 +0x31\n\ngoroutine 4 [syscall]:\nruntime.goexit()\n\t/Users/quarnster/code/3rdparty/go/src/pkg/runtime/proc.c:1394\n\ngoroutine 6 [chan receive]:\nmain.blah()\n\t/private/tmp/main.go:19 +0xdb\ncreated by main.main\n\t/private/tmp/main.go:56 +0x27d\nexit status 2\n\n\nI changed the code like this:\nfunc (t *tt) Test() {\n\tcmd := exec.Command(\"echo\", \"hello\")\n\tp, _ := cmd.StdoutPipe()\n\tcmd.Start()\n\tdata := make([]byte, 1024)\n\tlog.Println(p.Read(data))\n\tlog.Println(string(data))\n\tlog.Println(\"But not here\")\n}\n\nThe reading of the pipe, printing the result and the string converted data always\nsucceeds. The \"But not here\"  is seldom printed and we get a stack trace like the above\ninstead, other times it is printed but then the program doesn't resume.\n\nIf I change it to:\nfunc (t *tt) Test() {\n\tfor i := 0; i \u0026lt; 1000000; i++ {\n\t\tlog.Println(\"But not here\", i)\n\t}\n}\n\nIt runs just fine.\u003c/pre\u003e",
	"user": {
		"login": "quarnster",
		"id": 1230389,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-02-01T13:00:53Z",
	"updated_at": "2014-12-22T06:32:06Z"
}
