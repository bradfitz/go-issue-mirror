{
	"id": 232559186,
	"body": "\u003e I am pretty sure the installer sets GOROOT, so setting an install path to C:\\Go17 should work fine.\r\n\r\nI am not sure about GOROOT.\r\n\r\nBut I was concerned about what happens to the PATH. The installer is updating global user PATH variable to include %GOROOT%\\bin directory in it. For example, if you tell installer to install your Go into c:\\go, you PATH will have:\r\n```\r\nset PATH=....;c:\\go\\bin\r\n```\r\nDo you suggest we install different version of Go into, for example, c:\\go17 and add c:\\go17\\bin to the global PATH? Like:\r\n```\r\nset PATH=....;c:\\go\\bin;c:\\go17\\bin\r\n```\r\nBut then Windows will find go.exe in c:\\go\\bin, not in c:\\go17\\bin. How are you going to control which version you want to use?\r\n\r\nSame for GOROOT.\r\n\r\nAlso do not forget that GOROOT_FINAL is set to \"c:\\go\" for a reason here https://github.com/golang/build/blob/master/cmd/release/release.go#L315. All binary *.a files under %GOROOT%\\pkg contain full path to the package source files. *.a files will be copied by installer to the user disk as is. When user links these into her executable it will still contain c:\\go\\... regardless of where these are on the disk. So your stack traces and debugging file paths will be different to reality (unless you install Go into c:\\go).\r\n\r\nAlex",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-14T05:18:38Z",
	"updated_at": "2016-07-14T05:18:38Z"
}
