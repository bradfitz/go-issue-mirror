{
	"id": 165662054,
	"number": 16379,
	"state": "open",
	"title": "runtime: Profile open file descriptors through pprof",
	"body": "The runtime should profile file descriptors (possibly in a similar way to memory profiling, controlled by an environment variable) and expose this information over pprof profiles.\r\n\r\nE.g., when there's a file descriptor leak, it would be great to know:\r\n - what type of fds are leaking (files, sockets)\r\n - for sockets, more information about the remote peer\r\n - call stack when the file descriptor was allocated\r\n\r\nBy default the rate of profiling could be 0% or 1% to avoid impacting performance, but the ability to turn this up to 100% would significantly improve the experience for debugging file descriptor leaks. The cost of capturing the call stack shouldn't significantly effect the open operation either.\r\n\r\ncc @Sajmani @bradfitz ",
	"user": {
		"login": "prashantv",
		"id": 140159,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2016-07-14T21:23:06Z",
	"updated_at": "2016-07-16T21:45:40Z",
	"milestone": {
		"id": 1748849,
		"number": 42,
		"title": "Go1.8Maybe"
	}
}
