{
	"id": 175849776,
	"number": 17030,
	"state": "open",
	"title": "test/run.go: errcheck ineffective when error pattern matches test case file position information.",
	"body": "- What version of Go are you using (`go version`)?\r\n\r\ntip @ https://github.com/golang/go/commit/ed8f207940c8787d344664a43071b235e2ce5c68\r\n\r\n- What operating system and processor architecture are you using (`go env`)?\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/jnml\"\r\nGORACE=\"\"\r\nGOROOT=\"/home/jnml/go\"\r\nGOTOOLDIR=\"/home/jnml/go/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build952459844=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n----\r\n\r\n- Discussion\r\n\r\nThe expected error pattern is checked against the actual error message at [run.go:857](https://github.com/golang/go/blob/ed8f207940c8787d344664a43071b235e2ce5c68/test/run.go#L857). Invoking, for example, `go run run.go - ./method2.go` in `$GOROOT/test`, the performed `regexp` vs  `errmsg` pairs are\r\n\r\n```\r\n`receiver.* pointer|invalid pointer or interface receiver` `method2.go:18: invalid receiver type P (P is a pointer type)`\r\n`receiver.* pointer|invalid pointer or interface receiver` `method2.go:19: invalid receiver type *P1 (P1 is a pointer type)`\r\n`receiver.*interface|invalid pointer or interface receiver` `method2.go:24: invalid receiver type I (I is an interface type)`\r\n`receiver.*interface|invalid pointer or interface receiver` `method2.go:25: invalid receiver type *I1 (I1 is an interface type)`\r\n`method` `method2.go:31: (*Val).val undefined (type *Val has no method val)`\r\n`method` `method2.go:36: pv.val undefined (type *Val is pointer to interface, not interface)`\r\n`method` `method2.go:37: pv.val undefined (type *Val is pointer to interface, not interface)`\r\n```\r\n\r\nError patterns for lines {31,36,37} above are considered satisfied regardless of the compiler error message because the pattern matches the test case file position information itself, ie. errcheck fails to detect the actual mismatches at, in this example, lines 36 and 37.\r\n",
	"user": {
		"login": "cznic",
		"id": 729580,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2016-09-08T20:02:19Z",
	"updated_at": "2016-09-09T09:43:26Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
