{
	"id": 155558632,
	"number": 15730,
	"state": "open",
	"title": "cmd/compile: copy causes escape",
	"body": "1. What version of Go are you using (`go version`)?\r\ngo version devel +0a9595f Tue May 17 18:46:03 2016 -0400 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/austin/r/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/home/austin/go.dev\"\r\nGOTOOLDIR=\"/home/austin/go.dev/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build366275436=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n3. What did you do?\r\n```go\r\npackage main\r\n\r\nvar sink [100]byte\r\n\r\nfunc test(args ...interface{}) {\r\n\tfor _, arg := range args {\r\n\t\tswitch arg := arg.(type) {\r\n\t\tcase string:\r\n\t\t\t// copy causes args to escape and causes the\r\n\t\t\t// convT2E in main to allocate.\r\n\t\t\tcopy(sink[:], arg)\r\n\r\n\t\t\t// Manually copying means args does not escape\r\n\t\t\t// and the convT2E in main does not allocate.\r\n\t\t\t//for i := 0; i \u003c len(arg); i++ {\r\n\t\t\t//\tsink[i] = arg[i]\r\n\t\t\t//}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunc main() {\r\n\ttest(\"abc\")\r\n}\r\n```\r\n\r\n4. What did you expect to see?\r\nI expected \"abc\" in `main` to not escape and the conversion to `interface{}` to not allocate.\r\n\r\n5. What did you see instead?\r\nIf I use `copy` in `test`, escape analysis determines that arg's content escapes, which causes the args slice to escape, which causes the `convT2E` in `main` to allocate. However, if I do the copy \"manually\" by looping over the string, args does not escape, and the `convT2E` happens on the stack.\r\n\r\n/cc @dr2chase @randall77 \r\n",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2016-05-18T17:29:52Z",
	"updated_at": "2016-06-17T01:12:32Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
