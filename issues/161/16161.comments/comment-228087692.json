{
	"id": 228087692,
	"body": "We could also consider adding `NewPtr`\r\n\r\n    // NewPtr returns a Value representing a pointer of the specific type initialized to point to a new zero\r\n    // value of the pointer's element type. This is equivalent to New(typ.Elem()).\r\n    func NewPtr(typ Type) Value {\r\n        if typ == nil || typ.Kind() != Ptr {\r\n            panic(\"reflect.NewPtr of non-pointer type\")\r\n        }\r\n        ptr := unsafe_New(typ.Elem().(*rtype))\r\n        return Value{typ.(*rtype), ptr, flag(Ptr)}\r\n    }",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-23T15:28:41Z",
	"updated_at": "2016-06-23T15:28:41Z"
}
