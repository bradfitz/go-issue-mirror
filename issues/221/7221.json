{
	"id": 51286373,
	"number": 7221,
	"state": "closed",
	"title": "cmd/go: test hides -v from underlying binary",
	"body": "\u003cpre\u003eGo help test says:\n\nThe go tool treats as a flag the first argument that begins with\na minus sign that it does not recognize itself; that argument and all subsequent\narguments are passed as arguments to the test binary.\n\nBut this isn't quite true. Given\n\npackage foo\n\nimport (\n\t\u0026quot;flag\u0026quot;\n\t\u0026quot;testing\u0026quot;\n)\n\nvar v = flag.Int(\u0026quot;v\u0026quot;, 23, \u0026quot;test\u0026quot;)\n\nfunc TestFlag(t *testing.T) {\n\tprintln(*v)\n}\n\nOne would expect\n\n$ go test -- -v 27\n\nto print 27, but it prints 23.\n\n\n$ go test -- -v 27\n23\nPASS\nok  \t_/Users/r/foo\t0.026s\n$ \n\nShould probably fix this for 1.3, since the issue of how to pass flags to tests comes up\na lot. In particular, github.com/golang/glog has a -v flag that this bug prevents\nsetting, at least directly. Here's a workaround:\n\nvar myV = flag.Int(\u0026quot;myV\u0026quot;, 23, \u0026quot;test\u0026quot;)\n\nfunc TestFlag(t *testing.T) {\n  flag.Lookup(\u0026quot;v\u0026quot;).Value.Set(fmt.Sprint(*myV))\n  println(*v, *myV)\n}\u003c/pre\u003e",
	"user": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:40:06Z",
	"created_at": "2014-01-27T23:02:57Z",
	"updated_at": "2015-12-14T17:00:16Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
