{
	"id": 66098552,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eThis is consequence from the spec's assignability rules even it's perhaps not obvious. I\ndon't think it requires further clarification in the spec (it's too special a case, and\nthe compiler's error message explains the problem very well).\n\nThe interfaces are not assignable because they are different since the method signatures\nare not identical: The result type of I.f is I, while the result type of J.f is J. I and\nJ are named types and they are different.\n\nOr in other words, when comparing function types, type identify rules apply, not\nassignment rules.\n\nThe following program compiles fine:\n\n\u003ca href=\"http://play.golang.org/p/fA5sHQXaFv\"\u003ehttp://play.golang.org/p/fA5sHQXaFv\u003c/a\u003e\n\ngc provides a clear error message explaining the problem. go/types can do this as well\n(I think there's a TODO somewhere).\n\nOne might argue that for interface identity (involved here when comparing function\nresult types), perhaps different rules should apply. But until this situation becomes a\nreal problem, I think we should stick with the rules we have (I can understand that the\nsituation may occur, but it's probably a rare case).\u003c/pre\u003e\n\n_Labels changed: added **repo-main**, **documentation**._\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-09-10T05:26:45Z",
	"updated_at": "2014-12-08T10:48:12Z"
}
