{
	"id": 66055551,
	"body": "\u003ca id=\"c9\"\u003e\u003c/a\u003eComment 9 by **Edward.Casey.Adams**:\n\n\u003cpre\u003ePerhaps Cgo users should link to libiconv (\u003ca href=\"http://www.gnu.org/software/libiconv/)\"\u003ehttp://www.gnu.org/software/libiconv/)\u003c/a\u003e\ninstead?\n\nThe problem is that both the width and the unicode encoding for wchar_t is not well\ndefined. (See \u003ca href=\"http://en.wikipedia.org/wiki/Wide_character#C.2FC.2B.2B)\"\u003ehttp://en.wikipedia.org/wiki/Wide_character#C.2FC.2B.2B)\u003c/a\u003e For example, on\nWindows/Visual Studio platforms, wchar_t is 16 bits wide and encoded in UTF-16LE,\nwhereas most linux distros wchar_t is defined to be 32 bits wide, but most unicode is in\nUTF-8 stored in regular chars and most anything else won't be little-endian. Thus adding\nC.WcharString() adds ambiguity.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-03-13T05:20:45Z",
	"updated_at": "2014-12-08T10:09:27Z"
}
