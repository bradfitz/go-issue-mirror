{
	"id": 66085254,
	"body": "\u003ca id=\"c11\"\u003e\u003c/a\u003eComment 11 by **gaijin.shenoy**:\n\n\u003cpre\u003eDave,\n\nI looked at it a bit more and this seems to be due to the LazyQuotes parsing logic.\nI.e., the root cause is the same as that in \u003ca href=\"https://golang.org/issue/3150\"\u003eissue #3150\u003c/a\u003e\n(\u003ca href=\"https://golang.org/issue/3150\u0026can=1\u0026q=TrailingComma\u0026colspec=ID%20Status%20Stars%20Priority%20Owner%20Reporter%20Summary)\"\u003ehttps://golang.org/issue/3150\u0026can=1\u0026q=TrailingComma\u0026colspec=ID%20Status%20Stars%20Priority%20Owner%20Reporter%20Summary)\u003c/a\u003e\n\nEssentially, the parser does not treat field values with quotes correctly. It expects\neither the entire field to be quoted or none of it. In other words, it seems that you\ncannot encode the following line (delimited by '|') as a single value -\n|He said - \"what?\".|\n\nIf LazyQuotes is false, this is flagged as a 'BareQuote' error. If LazyQuotes is true,\nthis sucks in following lines into a huge string. This was what was causing the buffer\nto grow.\n\nSo either |He said - what?.| or |\"He said - what?.\"| would be parsed ok.\n\nThe quote handling, even if broken, should terminate at most at end of line. This would\ngive the wrong number of fields for the line but at least it won't go nuts doing memory\nallocations. However, ideally, it should accept quoted substrings - I'll try and fix the\ncode in question and provide a patch ...\n\nCheers\nSudhir\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-09-11T01:16:20Z",
	"updated_at": "2014-12-08T10:34:58Z"
}
