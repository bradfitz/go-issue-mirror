{
	"id": 66087882,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eNot LimitedReader.  That's just a max.\n\n*os.File maybe, but that requires statting and seeking to figure out where you're at.\nLikewise with SectionReader, which doesn't require a stat but does require a Seek (but\nthe seek is guaranteed to succeed).  Also \u003ca href=\"http://play.golang.org/p/Ee5I6oesXW\"\u003ehttp://play.golang.org/p/Ee5I6oesXW\u003c/a\u003e makes me\nnervous.\n\nI'm nervous about seeking and statting, because for example: if those return an error,\ndoes NewRequest return an error (unlike Go 1.[012]), or does it silently just not set a\nContent-Length (surprising).  Neither answer is good.\n\nAdding a new interface like interface { ContentLength() int64 } would infect or\nencourage infection lots of types, so that's out.  Likewise with a hidden interface.\n\nAdding io.SizedReader is close to interesting, but I actually want io.SizeReaderAt (see\n\u003ca href=\"http://talks.golang.org/2013/oscon-dl.slide#49)\"\u003ehttp://talks.golang.org/2013/oscon-dl.slide#49)\u003c/a\u003e which I've used for a number of things\ninside Google.  But even a *\n\nI'm inclined to do nothing.\u003c/pre\u003e\n\n\n\n_Status changed to **Thinking**._",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-11-13T23:37:53Z",
	"updated_at": "2014-12-08T10:37:26Z"
}
