{
	"id": 66095091,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eEasier repro:\n\npackage main\n\nfunc stackit(n int) {\n\tif n == 0 {\n\t\treturn\n\t}\n\tstackit(n - 1)\n}\n\nfunc main() {\n\tdefer ((func())(nil))()\n\tstackit(1000)\n}\n\nIt's deferring a call to a nil object.  The stack copier barfs when it comes upon such a\ndefer record.  The defer hasn't executed yet.\n\nIt's easy enough to make the stack copier ignore such defers.  But shouldn't we panic on\nsuch a defer as soon as it is requested?\n\nThis is related to \u003ca href=\"https://golang.org/issue/8045\"\u003eissue #8045\u003c/a\u003e.  \"defer nil()\" should do the same thing as \"go nil()\".\u003c/pre\u003e\n\n\n_Owner changed to @randall77._",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-05-23T23:13:44Z",
	"updated_at": "2014-12-08T10:44:37Z"
}
