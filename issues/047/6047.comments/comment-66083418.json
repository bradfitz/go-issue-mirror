{
	"id": 66083418,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003e# Can't we do something like what windows does for profiling -- a dedicated\nthread that periodically queries state of all other threads?\n\nNot easily. I do hope that removing the workaround will prompt people to\nthink about working solutions, just like what happened with \"stack\nunavailable\" in the goroutine dumps.\n\nI believe a dedicated thread can be made to work, but I also believe it\nrequires using the Mach API to query the thread status, and we don't have\nan easy way from within the runtime to do that. I started looking into that\n(libmach/darwin.c has some code; look for thread_suspend and so on) but I\nam not sure that it can be used easily from within the running process, and\nI am not sure whether all the calls we need are available as direct system\ncalls or whether we'd have to wrap more of the Mach message passing layer.\nWe can't use task_suspend because it would suspend the thread doing the\nprofiling.\n\nMy kernel fix needs some cleanup and testing before others should try it,\nbut it is a significantly smaller change and seems to be reliable.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-08-05T20:02:12Z",
	"updated_at": "2014-12-08T10:33:16Z"
}
