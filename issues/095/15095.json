{
	"id": 145600230,
	"number": 15095,
	"state": "open",
	"title": "go generate doesn't obey $GOPATH that `go` uses",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n```\r\ngo version go1.5.3 linux/amd64\r\n```\r\nbut present in latest golang too i think.\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/james/code/gopath/\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/golang\"\r\nGOTOOLDIR=\"/usr/lib/golang/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n3. What did you do?\r\nI ran:\r\n\r\n```\r\nexport GOPATH=something\r\nGOPATH=whatever go generate\r\n```\r\n\r\n4. What did you expect to see?\r\n5. What did you see instead?\r\n\r\nI expected go generate to use the $GOPATH `whatever`, instead it uses `something`\r\n\r\nThis is obviously a huge issue because if you want to override the GOPATH in a script, this causes completely unexpected results!",
	"user": {
		"login": "purpleidea",
		"id": 135091,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"created_at": "2016-04-04T06:53:50Z",
	"updated_at": "2016-04-07T23:27:27Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
