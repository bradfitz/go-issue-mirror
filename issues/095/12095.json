{
	"id": 100037640,
	"number": 12095,
	"state": "closed",
	"title": "proposal: generic pointer",
	"body": "this introduces a new type to the language, denoted \"*\".\r\nthis proposal shall consist of:\r\n- Motivation: a documented set of real world problems targeted\r\n- Suite of test cases: smoke tests, demonstrate usage, stress the implementations\r\n- Implementations: a maintained patch series for various go compilers, kept up to date with upstream\r\n- Design doc? needs help due to new process\r\n- appengine Playground: closed due to bugs\r\n- changes to go/doc/go_spec.html : **not yet written**\r\n\r\n# Motivation:\r\n**Static typed reusable collection.** Due to type safety and boxing, EFACE (interface{}) cannot be used. Due to bloat and maintenance issues in a context of open source, code generation shall be avoided at any cost. Upstream ticket: https://github.com/Workiva/go-datastructures/issues/65\r\n\r\n# Test suite\r\n**Link list** - a smoke test. expected to evolve as this proposal matures.\r\nhttps://github.com/anlhord/gpt.git \r\n\r\n# Implementations:\r\n**gccgo gofrontend**\r\ngit: https://github.com/anlhord/gpt.git \r\nthread: https://groups.google.com/forum/#!topic/gofrontend-dev/VOtbIKclOPo\r\n\r\n# Compatibility impact:\r\nFully backward compatible. (Programs written for Go version 1.x will continue to compile and work with this proposal)",
	"user": {
		"login": "anlhord",
		"id": 10063650,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		}
	],
	"comments": 6,
	"closed_at": "2015-09-15T17:00:12Z",
	"created_at": "2015-08-10T11:07:17Z",
	"updated_at": "2015-09-15T17:00:12Z"
}
