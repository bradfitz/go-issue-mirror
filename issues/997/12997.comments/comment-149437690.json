{
	"id": 149437690,
	"body": "Technically both versions are non compliant.\nhttp://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html says the Host header\nmay contain only a hostname and an optional port.\n\nThe workaround for you is to not pass a URL to that field.\n\nI think the solution would be to leverage the fact that method returns an\nerror and do some validation before issuing the request.\n\n/cc @bradfitz\n\nOn Tue, Oct 20, 2015 at 4:30 PM, Nishanth B \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e This code below results in an incomplete HTTP Host header being passed on\n\u003e go version go1.5.1 linux/amd64. Older versions did not show this problem\n\u003e (tested on go version go1.3 linux/amd64)\n\u003e\n\u003e package main\n\u003e\n\u003e import (\n\u003e \"fmt\"\n\u003e \"net/url\"\n\u003e \"net/http\"\n\u003e \"strings\"\n\u003e )\n\u003e\n\u003e func main() {\n\u003e uv := url.Values{\"data\":{\"test\"}}.Encode()\n\u003e client := \u0026http.Client{}\n\u003e req,_ := http.NewRequest(\"POST\",\"http://localhost:8000\n\u003e \",strings.NewReader(uv))\n\u003e req.Host = http://www.myhost.com\n\u003e req.Header.Add(\"Content-Type\",\"application/x-www-form-urlencoded\")\n\u003e req.Header.Add(\"Content-Length\",string(len(uv)))\n\u003e resp,err := client.Do(req)\n\u003e if err != nil {\n\u003e fmt.Println(\"Got err: \", err)\n\u003e }\n\u003e fmt.Println(resp)\n\u003e }\n\u003e\n\u003e Request sent (go version go1.5.1 linux/amd64)\n\u003e\n\u003e POST / HTTP/1.1\n\u003e Host: http:\n\u003e User-Agent: Go-http-client/1.1\n\u003e Content-Length: 9\n\u003e Content-Type: application/x-www-form-urlencoded\n\u003e Accept-Encoding: gzip\n\u003e\n\u003e data=test\n\u003e\n\u003e Request sent (go version go1.3 linux/amd64)\n\u003e\n\u003e POST / HTTP/1.1\n\u003e Host: http://www.myhost.com\n\u003e User-Agent: Go 1.1 package http\n\u003e Content-Length: 9\n\u003e Content-Type: application/x-www-form-urlencoded\n\u003e Accept-Encoding: gzip\n\u003e\n\u003e data=test\n\u003e\n\u003e Thanks,\n\u003e Nishanth\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/12997\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-20T05:34:21Z",
	"updated_at": "2015-10-20T05:34:21Z"
}
