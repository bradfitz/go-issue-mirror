{
	"id": 159038399,
	"number": 15997,
	"state": "closed",
	"title": "strconv: Unquote preserves literal carriage returns in raw string literals",
	"body": "Package strconv says:\r\n\r\n\u003e Unquote interprets s as a single-quoted, double-quoted, or backquoted Go string literal, returning the string value that s quotes.\r\n\r\nI understand \"backquoted Go string literal\" to mean what the Go spec calls a \"raw string literal\".  Also, according to the Go spec:\r\n\r\n\u003e Carriage return characters ('\\r') inside raw string literals are discarded from the raw string value.\r\n\r\nHowever, it seems that strconv.Unquote keeps carriage return characters rather than discarding them: https://play.golang.org/p/G-4x0-Mdop  (Note that the `\\r` escape sequence is interpreted by the Go interpreted string literal, so the string value seen by strconv.Unquote is the three byte sequence: GRAVE ACCENT, CARRIAGE RETURN, GRAVE ACCENT.)\r\n\r\nIt may be too late to change strconv.Unquote's behavior, but perhaps the existing behavior can be better documented at least.",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		}
	],
	"assignee": {
		"login": "quentinmit",
		"id": 115761,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-10-17T18:34:19Z",
	"created_at": "2016-06-07T22:21:16Z",
	"updated_at": "2016-10-17T18:34:19Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
