{
	"id": 104043492,
	"number": 12411,
	"state": "closed",
	"title": "cmd/compile: wrong modulo code generation",
	"body": "The following code behaves differently on {dev.ssa, gccgo} vs {go1.4, go1.5, master}. The expected result is to print nothing and exit with exit code 0.\r\n\r\n```go\r\npackage main\r\n\r\nimport \"fmt\"\r\nimport \"os\"\r\n\r\nfunc main() {\r\n        if got := f1_ssa(4); got != 0 {\r\n                fmt.Printf(\"f1_ssa(4) = %v, wanted 0\\n\", got)\r\n                os.Exit(1)\r\n        }\r\n}\r\nfunc f1_ssa(a4 int) int {\r\n        switch {\r\n        } // prevent inlining\r\n        return 2*a4%3%(2%(a4\u003c\u003c2^a4%3))\r\n}\r\n```\r\n\r\ndev.ssa **works** ```go version devel +3b7f0c9 Mon Aug 31 03:07:43 2015 +0000 linux/amd64```\r\nmaster **broken** ```go version devel +019297a Mon Aug 31 04:42:04 2015 +0000 linux/amd64```\r\ngo1.4 **broken** ```go version go1.4.1 linux/amd64```\r\ngo1.5 **broken** ```go version go1.5 linux/amd64```\r\n\r\nThis is related to modulo.  Works correctly on playground http://play.golang.org/p/rSBXghm4TM (Go 1.5 linux/amd64p32)",
	"user": {
		"login": "brtzsnr",
		"id": 57079,
		"type": "User",
		"site_admin": false
	},
	"comments": 12,
	"closed_at": "2015-12-16T20:58:41Z",
	"created_at": "2015-08-31T12:19:14Z",
	"updated_at": "2015-12-16T20:58:41Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
