{
	"id": 166161470,
	"number": 16411,
	"state": "open",
	"title": "x/tools/cmd/goimports: Doesn't add package if already imported for side effects (underscore import).",
	"body": "I'm not sure if this is a bug or a feature request or known accepted behavior in `goimports` - I'll let @bradfitz  decide, but consider the following unfinished Go program:\r\n\r\n```Go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"image\"\r\n\t_ \"image/png\"\r\n\t\"os\"\r\n)\r\n\r\nfunc main() {\r\n\tvar img image.Image // some image\r\n\terr := png.Encode(os.Stdout, img)\r\n\tfmt.Println(err)\r\n}\r\n```\r\n\r\nOne would normally expect the `png.Encode` usage to cause `goimports` to add the `image/png` import.\r\n\r\nHowever, it does nothing. It's because that package is already imported for side effects.\r\n\r\nThis was slightly unexpected. But I'm not sure what ideal behavior would be.\r\n\r\n- Should it replace the underscore import with normal import? Probably not.\r\n- Should it add a second entry for `image/png`, keeping the underscore import alone? Maybe?\r\n- What about renamed packages, if there's a `pathpkg \"path\"` import and someone writes `path.Join`, should `goimports` add a second import for `path` package? Or should underscore imports be treated differently than other renamed packages?\r\n\r\nI'm only reporting this because I ran into it and it didn't seem to be reported already.",
	"user": {
		"login": "shurcooL",
		"id": 1924134,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2016-07-18T18:32:51Z",
	"updated_at": "2016-07-18T18:56:11Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
