{
	"id": 66048306,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eWe have talked this over a lot and decided that, although it might have been better to\nleave octal out \nfrom the beginning, taking it out has major consequences and compensating for its\nremoval will make \nthe language uglier. First, if octal goes away then we would want to forbid leading\nzeros in decimal \nnumbers because people porting  or interfacing to C code, or even people used to writing\nC code, would \nhave uncaught subtle errors.  That alone makes the opening argument in the discussion\nless convincing: \nremove octal so we can have leading zeros, but then we can't have leading zeros because\nof the bugs \nthat come in.  One could argue that the bugs are limited in scope, but they will happen\nand be hard to \nfind.\n\nAnd if we're going to play with radix changes for inputting numbers, we would want to\nfix the problem \nonce and for all, with something like 16r8000 and 8r377, but those don't sit right;\nthey're just ugly.  Of \ncourse one could grandfather 0x but then there are two unrelated notations for numbers,\nand that's bad.\n\nFinally, can we remove octal from character and string constants?  If not, there's an\ninconsistency that's \ntroubling.  The relationship between char constants, string constants, and integer\nconstants is a careful \nbalance and this gets us in unsettling territory.\n\nSo after a long discussion, we've decided to leave the status quo, which is familiar to\neveryone, because \nthe fix seems to make things more uglier and more complicated rather than simpler.\u003c/pre\u003e\n\n\n\n_Status changed to **WontFix**._",
	"user": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2009-11-18T19:20:38Z",
	"updated_at": "2014-12-08T10:03:27Z"
}
