{
	"id": 129934828,
	"number": 14151,
	"state": "closed",
	"title": "tour: text does not make sense unless you're familiar with shift operators",
	"body": "Context: https://tour.golang.org/basics/16\r\n\r\nI love this tour and only take the time to give feedback due to that appreciation. This example uses shift operators in this block: \r\n \r\n```\r\nconst (\r\n\tBig   = 1 \u003c\u003c 100\r\n\tSmall = Big \u003e\u003e 99\r\n)\r\n```\r\n\r\nI found this code, along with the description of how conversation is taking place, to require knowledge of the operators in use. It seems reasonable to give a brief instruction on the operators in use or at least why they're there. \r\n\r\nExisting text: \r\n\r\n\u003e Numeric constants are high-precision values.\r\n\u003e \r\n\u003e An untyped constant takes the type needed by its context.\r\n\u003e \r\n\u003e Try printing needInt(Big) too.\r\n\u003e \r\n\u003e (An int can store at maximum a 64-bit integer, and sometimes less.)\r\n\r\n\r\n**One option:**\r\n\r\nNumeric constants are high-precision values. An untyped constant takes the type needed by its context. To show this, we use the shift operator to generate numbers that require `float`s. You can learn more about these [operators here](https://golang.org/ref/spec#Operators).\r\n\r\nTry printing needInt(Big) too.\r\n\r\n(An int can store at maximum a 64-bit integer, and sometimes less.)\r\n\r\n\r\n**Longer option** - append a quote from https://golang.org/ref/spec#Operators:     \r\nThe shift operators shift the left operand by the shift count specified by the right operand. They implement arithmetic shifts if the left operand is a signed integer and logical shifts if it is an unsigned integer. There is no upper limit on the shift count. Shifts behave as if the left operand is shifted n times by 1 for a shift count of n. As a result, x \u003c\u003c 1 is the same as x*2 and x \u003e\u003e 1 is the same as x/2 but truncated towards negative infinity.\r\n\r\n",
	"user": {
		"login": "mjbrender",
		"id": 1744971,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"closed_at": "2016-02-08T04:04:18Z",
	"created_at": "2016-01-30T03:33:15Z",
	"updated_at": "2016-02-08T04:04:18Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
