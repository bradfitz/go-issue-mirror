{
	"id": 67794235,
	"body": "One of two things is happening. \r\n\r\n1. My old cross compile scripts explicitly disable cgo, which is required for the android/arm port\r\n2. You haven't supplied the correct CC variables to point to a version of gcc that can produce arm code.\r\n\r\nI don't think using my cross compile scripts to produce an android development environment will be successful.\r\n\r\n\r\n\r\n\u003e On 22 Dec 2014, at 12:23, Aditya Mukerjee \u003cnotifications@github.com\u003e wrote:\r\n\u003e \r\n\u003e After updating to 1.4, I wanted to check out the sample Android applications. At first, go get golang.org/x/mobile/example/basic failed, as it couldn't find EGL/egl.h and GLES2/gl2.h (solution: install libgles2-mesa-dev and libegl1-mesa-dev, after which go get succeeds).\r\n\u003e \r\n\u003e After installing these, I attempted to set up cross-compilation for the android/arm platform. For convenience, I used davecheney's helper script (it does not include android/arm, so I added it manually). Using this script, I am able to build Go for all the platforms except android/arm, which gives the following error:\r\n\u003e \r\n\u003e gcc: error: unrecognized command line option ‘-marm’\r\n\u003e \r\n\u003e However, freebsd/arm and linux/arm succeed with no such issue. (Attempting to compile the sample Android application fails with the same error message, for what it's worth).\r\n\u003e \r\n\u003e I initially thought this was an issue with Debian (Wheezy) packages being out of date, but I run into the same issues on Arch as well (both machines are x86_64, and both have the Android SDK installed).\r\n\u003e \r\n\u003e —\r\n\u003e Reply to this email directly or view it on GitHub.\r\n\u003e ",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-22T01:41:25Z",
	"updated_at": "2014-12-22T01:41:25Z"
}
