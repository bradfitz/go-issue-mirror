{
	"id": 58522702,
	"number": 9959,
	"state": "closed",
	"title": "sync/atomic: LoadInt64 panics on ARM when uint64 variable is not 64bit aligned",
	"body": "The following code works fine on Windows x86_64 and fails on Debian Jessie on a Raspberry Pi 2 ARMv7, both go version 1.4:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n    \"sync/atomic\"\r\n    \"fmt\"\r\n)\r\n\r\ntype buffer struct {\r\n        id int32 // remove this, or make it int64 and the code will run fine\r\n        done int64\r\n}\r\n\r\nfunc test(buf *buffer) bool {\r\n        if atomic.LoadInt64(\u0026buf.done) == 1 {\r\n                return true\r\n        }\r\n\r\n        return false\r\n}\r\nfunc main() {\r\n        var buf buffer\r\n\t\t\t\tbuf.done = 1\r\n        fmt.Println(\"pre-fail\")\r\n        res := test(\u0026buf)\r\n        fmt.Println(\"post-fail\", res)\r\n}\r\n```\r\n\r\nNot sure if this is a bug in LoadInt64 or a bug in the go memory layouter...",
	"user": {
		"login": "Hades32",
		"id": 167847,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2015-02-22T23:37:41Z",
	"created_at": "2015-02-22T22:05:38Z",
	"updated_at": "2016-06-25T02:01:40Z"
}
