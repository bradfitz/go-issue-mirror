{
	"id": 139877304,
	"number": 14749,
	"state": "closed",
	"title": "encoding/json: add Encoder option to control escaping behavior",
	"body": "1. What version of Go are you using? `5.3`\r\n\r\n2. What operating system and processor architecture are you using? `amd64,windows`\r\n\r\n3. What did you do?\r\n```go\r\npackage main\r\n\r\nimport \"fmt\"\r\nimport \"encoding/json\"\r\n\r\nfunc main() {\r\n    mapD := map[string]string{\"trouble\": \"\u003c/script\u003e\"}\r\n    mapB, _ := json.Marshal(mapD)\r\n    fmt.Println(string(mapB))\r\n}\r\n```\r\n\r\n4. What did you expect to see?\r\n\u003ccode\u003e{\"trouble\":\"\u0026lt;/script\u0026gt;\"}\u003c/code\u003e\r\n\r\n5. What did you see instead?\r\n\u003ccode\u003e{\"trouble\":\"\\u003c/script\\u003e\"}\u003c/code\u003e\r\n\r\nRelated: https://github.com/golang/go/issues/14135\r\n\r\nComment: In my JSON implementation for Java, I have made JavaScript serialization an *option*.  When supplied as JavaScript the above does not break signatures (JSON.stringify() performs the normal serialization), but \"on the wire\" you should IMHO always use ES6: https://mailarchive.ietf.org/arch/msg/json/I2dF4osWAUlvax48WTxnAei3ldQ\r\n\r\n",
	"user": {
		"login": "cyberphone",
		"id": 8044211,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Suggested"
		}
	],
	"assignee": {
		"login": "cespare",
		"id": 318501,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"closed_at": "2016-04-22T21:36:23Z",
	"created_at": "2016-03-10T12:50:53Z",
	"updated_at": "2016-04-22T21:36:23Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
