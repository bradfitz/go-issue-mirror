{
	"id": 223266232,
	"body": "[Here](https://gist.github.com/jacobsa/936e3f4ce48d4f11b27b70d34a743ae4) is a minimal program to reproduce the issue. It downloads a 719 MB file from Google Cloud Storage with a loop that reads 1 MB every 5 ms (i.e. throughput should be up to 200 MB/s, likely bottlenecked on the network connection). This approximates what gcsfuse is doing, since fuse reads 128 KiB with high latency between calls.\r\n\r\nThe following runs are on a GCE VM in asia-east1-a running CentOS 7. I use the `cputime` tool to make it easier to see the OS's view of peak memory usage, but the GC trace also makes the difference clear.\r\n\r\n```\r\n% go version\r\ngo version go1.6.2 linux/amd64\r\n% go get github.com/jacobsa/cputime\r\n% go build -o /tmp/download_with_delay download_with_delay.go\r\n```\r\n\r\nWith HTTP/2:\r\n\r\n```\r\n% GODEBUG=gctrace=1,http2client=1 cputime /tmp/download_with_delay\r\ngc 1 @0.040s 1%: 0.26+0.90+0.31 ms clock, 0.52+0.21/0.77/0.82+0.62 ms cpu, 4-\u003e4-\u003e1 MB, 5 MB goal, 4 P\r\ngc 2 @0.290s 0%: 0.017+1.0+0.27 ms clock, 0.068+0.41/0.79/1.2+1.1 ms cpu, 4-\u003e4-\u003e3 MB, 5 MB goal, 4 P\r\ngc 3 @0.416s 0%: 0.015+1.5+0.26 ms clock, 0.061+0.009/1.3/1.4+1.0 ms cpu, 9-\u003e9-\u003e6 MB, 10 MB goal, 4 P\r\ngc 4 @0.430s 0%: 0.014+1.4+0.29 ms clock, 0.056+0/0.030/2.6+1.1 ms cpu, 14-\u003e14-\u003e10 MB, 15 MB goal, 4 P\r\ngc 5 @0.446s 0%: 0.013+2.3+0.31 ms clock, 0.053+0/0.50/3.4+1.2 ms cpu, 25-\u003e25-\u003e18 MB, 26 MB goal, 4 P\r\ngc 6 @0.509s 0%: 0.019+5.1+0.48 ms clock, 0.079+0/1.0/6.0+1.9 ms cpu, 49-\u003e49-\u003e33 MB, 50 MB goal, 4 P\r\ngc 7 @0.575s 0%: 0.018+7.3+0.68 ms clock, 0.074+0/1.5/7.3+2.7 ms cpu, 96-\u003e96-\u003e65 MB, 97 MB goal, 4 P\r\ngc 8 @0.725s 0%: 0.016+12+0.44 ms clock, 0.065+0/1.6/12+1.7 ms cpu, 191-\u003e191-\u003e128 MB, 192 MB goal, 4 P\r\ngc 9 @1.335s 0%: 0.017+61+0.48 ms clock, 0.068+0/0.25/63+1.9 ms cpu, 381-\u003e381-\u003e380 MB, 382 MB goal, 4 P\r\ngc 10 @2.009s 0%: 0.017+98+0.47 ms clock, 0.070+0/1.7/98+1.8 ms cpu, 885-\u003e885-\u003e506 MB, 886 MB goal, 4 P\r\n11:28:30.849059 Copied 719208526 bytes in 3.940939993s (182496695.528853 bytes/s)\r\n\r\n----------\r\nMax RSS:   920.18 MiB\r\n```\r\n\r\nWithout HTTP/2:\r\n\r\n```\r\n% GODEBUG=gctrace=1,http2client=0 cputime /tmp/download_with_delay\r\ngc 1 @0.042s 1%: 0.071+0.66+0.28 ms clock, 0.21+0.30/0.58/0.56+0.86 ms cpu, 4-\u003e4-\u003e1 MB, 5 MB goal, 4 P\r\n11:29:16.552639 Copied 719208526 bytes in 4.42289009s (162610535.501686 bytes/s)\r\n\r\n----------\r\nMax RSS:   12.95 MiB\r\n```\r\n\r\nIn other words the HTTP/2 run used 71 times as much memory, and generated a whole lot of garbage while doing so. The difference in throughput was well within the run to run variation that I see on this VM. In contrast I've never seen a run without HTTP/2 that used more than 20 MB of memory.",
	"user": {
		"login": "jacobsa",
		"id": 202895,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-02T11:34:04Z",
	"updated_at": "2016-06-02T11:34:04Z"
}
