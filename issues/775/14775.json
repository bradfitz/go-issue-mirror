{
	"id": 140191519,
	"number": 14775,
	"state": "open",
	"title": "cmd/compile: stack allocation phase in large functions slows down SSA compiler",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ndevel for 1.7\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\namd64\r\n\r\n3. What did you do?\r\nDownloaded [Dave Cheney's genpkg](https://godoc.org/github.com/davecheney/genpkg) to explore performance problems.\r\n```\r\nmkdir x\r\ngo run gen.go -n 3000  -noinitfn \u003e x/types.go\r\ntime go build  -gcflags='-d=ssa/check/off -memprofile=x.mprof' ./x\r\ngo tool pprof -alloc_space ${GOROOT}/pkg/tool/darwin_amd64/compile x/x.mprof\r\n```\r\nwith results\r\n\r\n```\r\nShowing top 30 nodes out of 40 (cum \u003e= 1810.24MB)\r\n      flat  flat%   sum%        cum   cum%\r\n 1819.24MB 20.43% 20.43%  1819.24MB 20.43%  cmd/compile/internal/ssa.(*Func).newValue\r\n  947.75MB 10.64% 31.08%  2753.49MB 30.93%  cmd/compile/internal/gc.(*state).lookupVarOutgoing\r\n  947.44MB 10.64% 41.72%   947.44MB 10.64%  cmd/compile/internal/ssa.(*stackAllocState).buildInterferenceGraph\r\n  638.83MB  7.18% 48.89%   642.34MB  7.21%  cmd/compile/internal/ssa.(*stackAllocState).stackalloc\r\n  625.34MB  7.02% 55.92%  1041.10MB 11.69%  cmd/compile/internal/ssa.(*regAllocState).init\r\n  581.15MB  6.53% 62.45%   649.08MB  7.29%  cmd/compile/internal/gc.genssa\r\n  525.89MB  5.91% 68.35%   526.62MB  5.91%  cmd/compile/internal/ssa.cse\r\n  482.10MB  5.41% 73.77%   482.10MB  5.41%  cmd/compile/internal/ssa.schedule\r\n  460.90MB  5.18% 78.94%  2667.34MB 29.96%  cmd/compile/internal/ssa.(*regAllocState).regalloc\r\n  416.07MB  4.67% 83.62%  1476.37MB 16.58%  cmd/compile/internal/ssa.(*stackAllocState).init\r\n  415.25MB  4.66% 88.28%   415.77MB  4.67%  cmd/compile/internal/ssa.(*regAllocState).computeLive\r\n  312.07MB  3.51% 91.79%   312.07MB  3.51%  cmd/compile/internal/ssa.(*Func).newSparseSet\r\n  169.05MB  1.90% 93.68%   169.05MB  1.90%  cmd/compile/internal/ssa.tighten\r\n  111.31MB  1.25% 94.93%   112.86MB  1.27%  cmd/compile/internal/ssa.(*stackAllocState).computeLive\r\n```\r\n\r\n4. What did you expect to see?\r\nNot that much slowdown and memory consumption.\r\n\r\n5. What did you see instead?\r\nMuch slowdown and memory consumption.\r\n\r\nNote that two similar bugs are filed, one against the ssa.go variable lookup code, the other against regalloc/stackalloc, since the fixes are independent.",
	"user": {
		"login": "dr2chase",
		"id": 1928999,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		},
		{
			"name": "ToolSpeed"
		}
	],
	"assignee": {
		"login": "dr2chase",
		"id": 1928999,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"created_at": "2016-03-11T14:04:14Z",
	"updated_at": "2016-05-26T23:10:29Z",
	"milestone": {
		"id": 1709364,
		"number": 39,
		"title": "Go1.8Early"
	}
}
