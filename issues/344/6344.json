{
	"id": 51285042,
	"number": 6344,
	"state": "closed",
	"title": "go.tools/go/types: spurious type error in argument assignability conversion",
	"body": "\u003cpre\u003eHi Robert,\n\nthis program:\n \u003ca href=\"http://play.golang.org/p/JMCWHDpFyE\"\u003ehttp://play.golang.org/p/JMCWHDpFyE\u003c/a\u003e\ncauses a spurious type error with go/types:\n cannot use se (variable of type main.SE) as parameter of type []interface{}\n\nInterestingly this only occurs during parameter passing; this statement:\n  var i []interface{} = se \ncauses no error.\n\n\nAside: this is a minimization of the following test case:\n\n% go build code.google.com/p/go.tools/gotype\n% ./gotype src/pkg/fmt/{fmt,scan}_test.go\n../src/pkg/fmt/fmt_test.go:592:24: cannot use tt.val (variable of type fmt_test.SE) as\nparameter of type []interface{}\n\nwhich suggests that it would be good to extend go/types.stdlib_test to run over the\nentire tree, including tests.  Obviously this poses some challenges---augmenting\nmultiple packages with in-package *_test.go files creates cycles in the import\ngraph---but I think there are good reasons for supporting that as a use-case.\nRead importer.go comments in \u003ca href=\"https://golang.org/cl/13579043/\"\u003ehttps://golang.org/cl/13579043/\u003c/a\u003e to see what I\nmean.  Let's talk on your return.\u003c/pre\u003e",
	"user": {
		"login": "adonovan",
		"id": 5658175,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2014-12-08T10:34:54Z",
	"created_at": "2013-09-06T18:21:52Z",
	"updated_at": "2016-06-25T01:18:20Z"
}
