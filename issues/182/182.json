{
	"id": 51276151,
	"number": 182,
	"state": "closed",
	"title": "Compiler is asking for an unnecessary semi-colon?",
	"body": "by **2prashant**:\n\n\u003cpre\u003eI compiled the \u0026quot;echo.go\u0026quot; program in the tutorial (inlined below).  When I\nadd a line above the s += flag.Arg(i) line  (also in the code snippet\nbelow) - the compiler fails if the additional line is not terminated by a\nsemi colon.\n\nThis seems to be a violation of the 'no-semi-colon-statement-terminators'\npolicy, hence I'm filing this bug.\n\nhere is the code:\n\npackage main\nimport (\u0026quot;os\u0026quot;;\u0026quot;flag\u0026quot;)\nvar omitNewLine = flag.Bool(\u0026quot;n\u0026quot;, false, \u0026quot;dont print final newline\u0026quot;)\nconst (Space = \u0026quot; \u0026quot;; NewLine = \u0026quot;\\n\u0026quot;)\n\nfunc main() {\n     flag.Parse();\n     s := \u0026quot; \u0026quot;;\n     for i := 0; i \u0026lt; flag.NArg(); i ++ {\n         if i \u0026gt; 0 {\n            s += Space\n         }\n         //uncommenting below line causes program not to compile unless\nsemi colon is added to it. \n         //os.Stdout.WriteString(i + \u0026quot;=\u0026quot; + flag.Arg(i) + \u0026quot;\\n\u0026quot;)\n         s += flag.Arg(i)\n     }\n     if !*omitNewLine {\n        s += NewLine\n     }\n     os.Stdout.WriteString(s)\n\n}\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:03:34Z",
	"created_at": "2009-11-14T20:07:23Z",
	"updated_at": "2016-06-24T19:04:41Z"
}
