{
	"id": 51283623,
	"number": 5434,
	"state": "closed",
	"title": "Spec is inconsistent when using \"up to\"",
	"body": "by **peter.armitage**:\n\n\u003cpre\u003e3 instances of the phrase \u0026quot;up to\u0026quot; at \u003ca href=\"http://tip.golang.org/ref/spec\"\u003ehttp://tip.golang.org/ref/spec\u003c/a\u003e\n\n\u0026quot;a slice of length up to that capacity can be created by slicing a new one from the\noriginal slice.\u0026quot;\n\n\u0026quot;If only the first iteration variable is present, the range loop produces iteration\nvalues from 0 up to len(a) and does not index into the array or slice itself.\u0026quot;\n\n\u0026quot;Next, any deferred functions run by F's caller are run, and so on up to any\ndeferred by the top-level function in the executing goroutine.\u0026quot;\n\nThe first and last are inclusive. The limit on slicing is up to and including the\ncapacity. Functions deferred by a top-level function are run during a panic.\n\nThe second use is exclusive. The iteration value of a range clause does not include\nlen(a).\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:29:26Z",
	"created_at": "2013-05-09T17:17:03Z",
	"updated_at": "2016-06-24T22:39:41Z"
}
