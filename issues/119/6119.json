{
	"id": 51284703,
	"number": 6119,
	"state": "closed",
	"title": "runtime: large hashmaps confuse the garbage collector when GOMAXPROCS\u003e=2",
	"body": "\u003cpre\u003eAs discussed in \u003ca href=\"https://groups.google.com/forum/#\"\u003ehttps://groups.google.com/forum/#\u003c/a\u003e!topic/golang-nuts/aa14gSRKPM0 there\nseems to be a memory leak caused by having a large map when running with\nGOMAXPROCS\u0026gt;=2.\n\nIn \u003ca href=\"http://play.golang.org/p/IhCBf2f_hT\"\u003ehttp://play.golang.org/p/IhCBf2f_hT\u003c/a\u003e, will work properly (sit a a constant memory use\nlevel) if GOMAXPROCS=1. But when GOMAXPROCS\u0026gt;=2, none of the slices allocated in the\nloop get collected, and the memory use of the program keeps growing.\n\nAttached are the outputs of the program when run with GCDEBUG=gctrace=1 under\nGOMAXPROCS=1 and GOMAXPROCS=2\n\nNot that changing the \u0026quot;knobs\u0026quot; at the top of the code can fix the situation:\n - If N_ELEMS=1e6 (instead of 1e7), then the problem doesn't happen\n - If the type of m_type is the commented out slice type instead of a map, then the problem doesn't happen either, even when growing the size of N_ELEMS to use a similar amount of RAM.\n\nWhich suggests that the issue only occurs with a sufficiently large enough hashmap.\n\ngo version devel +7064d3304d65 Mon Aug 12 22:04:10 2013 +0400 darwin/amd64\n\nIt has also be shown to be present on go version go1.1.1 darwin/amd64, and the original\nissue in the thread was for linux.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/6119/0/procs1.txt\"\u003eprocs1.txt\u003c/a\u003e (1562 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/6119/0/procs2.txt\"\u003eprocs2.txt\u003c/a\u003e (692 bytes)",
	"user": {
		"login": "cookieo9",
		"id": 109270,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 17,
	"closed_at": "2014-12-08T10:33:36Z",
	"created_at": "2013-08-12T20:33:59Z",
	"updated_at": "2016-06-24T22:54:55Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
