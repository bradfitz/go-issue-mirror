{
	"id": 68332208,
	"body": "Hmm, I realize now that `godoc` differs from `build.Import` in that it does not ignore .go files in package documentation. On the contrary, it must use that file. So the view of a \"Go package\" is different for `cmd/godoc` vs. `cmd/go`/`build.Import`.\r\n\r\n\u003e https://go.googlesource.com/tools/+/master/godoc/server.go#97\r\n\u003e\r\n\u003e Read the comment I quoted and see why package documentation is a special\r\ncase.\r\n\u003e This behavior won't go away as long as we still have commands written in C.\r\n\r\nI see, that makes sense, thank you.\r\n\r\nAnyway, the reason I considered this an (minor) issue is because IMO the behavior of godoc.org and `cmd/godoc` should match when displaying Go package docs, and in this case they do not. But I need to think more about this and perhaps the issue is in godoc.org after all.\r\n\r\nAlso, this concept of package name `documentation` does not seem to be documented well, but your link hints as to why: it's a historic feature, and `+build ignore` is recommended. But still, given that it is a part of the Go project, it should be better (more explicitly) documented. (I was trying hard to understand what it does because I need to be able to tell when a given folder contains a \"Go package\" or not.)",
	"user": {
		"login": "shurcooL",
		"id": 1924134,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-30T05:51:39Z",
	"updated_at": "2014-12-30T06:04:44Z"
}
