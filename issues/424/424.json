{
	"id": 51276459,
	"number": 424,
	"state": "closed",
	"title": "bad source location in stack trace for indirect method lookup",
	"body": "\u003cpre\u003eWhen I run the code below, I get the following traceback:\n\nmain·*Efoo·String+0x4 /Users/rog/src/tst.go:32\n\tmain·*Efoo·String()\nfmt·*pp·printField+0x1481 /Users/rog/other/go/src/pkg/fmt/print.go:417\n\tfmt·*pp·printField(0x9c000, 0x7b120, 0x7c110, 0x70000, 0x0, ...)\n[...]\n\nline 32 is clearly wrong, as there tst.go is only 22 lines long.\nin larger example, the error message was shown in a different\nfile in the same package.\n\nthe underlying problem AFAICS is that the runtime is doing\nthe pointer indirection to get hold of the Efoo instance,\nbut that's failing; but there's no place in the source code to point to.\n\nas a naive user of the language, i would find it intuitive if String was called anyway\nwith a nil instance, \nrather than crashing, but i appreciate that this would not work on value instances.\n\ndarwin 386\nb0228622515a+ tip\n\npackage main\nimport \u0026quot;fmt\u0026quot;\ntype Foo struct { };\nfunc (f *Foo) String() string { return \u0026quot;foo\u0026quot; }\ntype Efoo struct { *Foo }\nvar print = fmt.Println\t\t// removing this line influences the reported error.\nfunc main() {\n\tvar id *Efoo;\n\tfmt.Println(id);\n}\u003c/pre\u003e",
	"user": {
		"login": "rogpeppe",
		"id": 66491,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:04:32Z",
	"created_at": "2009-12-14T10:42:55Z",
	"updated_at": "2016-06-24T19:10:30Z"
}
