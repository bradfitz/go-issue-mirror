{
	"id": 51897075,
	"number": 9306,
	"state": "open",
	"title": "x/mobile/app: support all-Go app development on windows",
	"body": "The http://golang.org/x/mobile/app package lets you run all-Go apps on desktop darwin and linux with nothing more than the stock Go build. Just `go get` and you're programming. This is done via cgo: we ask for a window, get an OpenGL context, and map mouse events to touch events.\r\n\r\nWe should do the same for Windows. There are a few complications.\r\n\r\nThe first is by default there is C compiler for cgo on windows. On both linux and OS X we can rely on the user to install gcc/xcode because the platform makes it easy. By comparison MinGW is an extra, non-obvious step for windows users and VC++ isn't supported (and not necessarily any more obvious).\r\n\r\nThe second is there is no OpenGL. Well, there is kinda, as provided by graphics card makers, but support in particular for OpenGL ES 2 and EGL is spotty. Luckily, Chrome has this problem too and maintain an open source project implementing ES 2 and EGL for Windows on top of DirectX: https://code.google.com/p/angleproject/\r\n\r\nI want to avoid importing angleproject directly into the mobile repository as it has several licenses and I want to keep the notices story for the Go repository simple. So we will need another repository that contains a package that links against angleproject and creates the window.\r\n\r\nIs there any way about needing windows users to install a C compiler? Can we ship a binary .dll in a repository that is downloaded with go get? If we do, what about the cgo parts of `mobile/app` and `mobile/gl`? Can they be provided by the .dll even if we fetch it as part of a different repository? For `mobile/app` probably, but `mobile/gl` is harder.",
	"user": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"comments": 25,
	"created_at": "2014-12-13T19:28:16Z",
	"updated_at": "2016-04-30T22:21:14Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
