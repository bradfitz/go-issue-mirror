{
	"id": 130430828,
	"body": "can't repro (go.crypto 2f3083f6163ef51179ad42ed523a18c9a1141467, go1.4.2).\r\n\r\ntest program:\r\n\r\npackage main\r\n\r\nimport (\r\n\t\"os\"\r\n\t\"net\"\r\n\t\"log\"\r\n\r\n\t\"golang.org/x/crypto/ssh\"\r\n\t\"golang.org/x/crypto/ssh/agent\"\r\n)\r\n\r\nfunc main() {\r\n\t// Run a command for test\r\n\tlog.Println(\"pid \", os.Getpid())\r\n\tfor i := 0; i \u003c 100; i++ {\r\n\t\tlog.Println(\"attempt \", i)\r\n\t\ts := os.Getenv(\"SSH_AUTH_SOCK\")\r\n\t\tc, err := net.Dial(\"unix\", s)\r\n\t\tif err != nil { log.Fatal(err)}\r\n\t\ta := agent.NewClient(c)\r\n\t\t// Construct the configuration with password authentication\r\n\t\tConfig := \u0026ssh.ClientConfig{\r\n\t\t\tUser: \"hanwen\",\r\n\t\t\tAuth: []ssh.AuthMethod{ ssh.PublicKeysCallback(a.Signers) },\r\n\t\t}\r\n\r\n\t\tClient, err := ssh.Dial(\r\n\t\t\t\"tcp\",\r\n\t\t\t\"localhost:22\",\r\n\t\t\tConfig,\r\n\t\t)\r\n\t\tif err != nil {\r\n\t\t\tprintln(\"Can't connect to host!\\n\",\r\n\t\t\t\t\"Reason is: \", err.Error())\r\n\t\t}\r\n\r\n\t\t// create session\r\n\t\tsession, err := Client.NewSession()\r\n\t\tif err != nil {\r\n\t\t\tprintln(\r\n\t\t\t\t\"Failed to create the session!\\n\",\r\n\t\t\t\t\"Reason is :\", err.Error(),\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t// run a command\r\n\t\t err = session.Run(\"whoami\")\r\n\t\t if err != nil {\r\n\t\t println(\"Failed to execute a command!\\n\",\r\n\t\t \"Reason is: \", err.Error(),\r\n\t\t )\r\n\t\t }\r\n\r\n\t\t//close session\r\n\t\tsession.Close()\r\n\t\tClient.Close()\r\n\t}\r\n}\r\n",
	"user": {
		"login": "hanwen",
		"id": 31547,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-12T20:12:11Z",
	"updated_at": "2015-08-12T20:12:11Z"
}
