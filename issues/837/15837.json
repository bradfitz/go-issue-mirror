{
	"id": 156811583,
	"number": 15837,
	"state": "open",
	"title": "cmd/compile: remove instruction reordering by obj package",
	"body": "It's confusing, especially to assembly writers, when obj package reorders their instructions from under them.  It also interferes with any instruction layout done earlier in the compiler, e.g. SSA scheduling.\r\n\r\nIt may be as simple as removing the Follow pass from cmd/internal/obj/plist.go (and all the associated code for each arch).\r\n\r\nThe follow pass does the following optimization: for unconditional branches, copy a few instructions from the destination instead of jumping to the copy.\r\n\r\nFor typical loops, SSA currently generates:\r\n```\r\nloop:\r\n   CMP ...\r\n   JGE exit\r\n   ..loop body..\r\n   jmp loop\r\nexit:\r\n```\r\nThe follow pass rewrites this to:\r\n```\r\n   CMP ...\r\n   JGE exit\r\nloop:\r\n   ..loop body..\r\n   CMP ...\r\n   JLT loop\r\nexit:\r\n```\r\nWe probably want to do this loop head peeling some other way (in SSA?).\r\n\r\n@rsc \r\n",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"comments": 2,
	"created_at": "2016-05-25T17:52:34Z",
	"updated_at": "2016-05-25T18:16:42Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	},
	"reactions": {
		"total_count": 2,
		"+1": 2
	}
}
