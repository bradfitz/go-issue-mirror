{
	"id": 51288764,
	"number": 8837,
	"state": "closed",
	"title": "encoding/json: Unmarshal: slice handling underspecified?",
	"body": "\u003cpre\u003eIn the below code (from \u003ca href=\"http://play.golang.org/p/gX3MRTQyPA)\"\u003ehttp://play.golang.org/p/gX3MRTQyPA)\u003c/a\u003e, it appears impossible to\npredict program's output based solely on documentation of package encoding/json.\n\n\tlist := []int{-1}\n\terr := json.Unmarshal([]byte(\u0026quot;[1]\u0026quot;), \u0026amp;list)\n\tif err != nil \n\t\tlog.Fatal(err)\n\t}\n\tlog.Printf(\u0026quot;%+v\u0026quot;, list)\n\nI can think of the following likely outcomes:\n\n  [-1]\n  [1]\n  [-1, 1]\n\nPackage encoding/json chooses [1] but I cannot seem to find a sentence that guarantees\nit.\n\nIn contrast, relevant quote from package encoding/xml: \u0026quot;Unmarshal maps an XML\nelement to a slice by extending the length of the slice and mapping the element to the\nnewly created value.\u0026quot;\u003c/pre\u003e",
	"user": {
		"login": "masiulaniec",
		"id": 550892,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2015-07-15T05:51:15Z",
	"created_at": "2014-09-29T22:00:15Z",
	"updated_at": "2016-07-18T19:45:22Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
