{
	"id": 66092388,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003e6c0339d94123 introduces a similar breakage in XML, which in turn breaks a bunch of other\nstuff, like go.text/cldr. Also, it introduces what I think is a bug in reflect.\n\nI don't think 6c0339d94123 is correct, in that it may fix things, but also breaks\nthings. From the Go spec on embedding:\n\nA field or method f of an anonymous field in a struct x is called promoted if x.f is a\nlegal selector that denotes that field or method f.\nPromoted fields act like ordinary fields of a struct except that they cannot be used as\nfield names in composite literals of the struct.\n\nThe behavior in Go is consistent with this, even when it applies to exported fields of\nunexported structs:\na.C = \"foo\" works, as per the definition, and a{C: \"foo\"} does not, also per the\ndefinition.\n\nIf we allow exported fields of unexported structs to be promoted by this mechanism, it\nshould be consistent with reflect's behavior in my opinion.\n\nHowever, since 6c0339d94123 a variable that is visible and accessible by virtue of the\n\"promotion rule\" cannot be set despite the same rule.\n\nI would suggest reverting the change until this is fixed. It results in more breakage\nthan that it fixes, it seems to me.\u003c/pre\u003e",
	"user": {
		"login": "mpvl",
		"id": 6445383,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-03-20T20:24:00Z",
	"updated_at": "2014-12-08T10:41:50Z"
}
