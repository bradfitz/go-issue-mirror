{
	"id": 51277922,
	"number": 1522,
	"state": "closed",
	"title": "windows: syscall causing a fault recently",
	"body": "by **mt4swm**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1.  In syscall, add \n   //sys ReadConsoleW(handle int32, buf []uint16, done *uint32) (errno int)\n  to syscall_windows.go, update\n  zsyscall_windows_386.go.\n\n2.  Compile the attached program main.go.\n\n3.  After it has been started on Windows, the program\n  reads from the console using ReadConsoleW. As soon\n  as a line has been entered, it will crash. It seems,\n  it can't return from the syscall properly.\n\nWhat is the expected output?\n\n  Normal termination, with a message saying \u0026quot;after syscall\u0026quot;.\n  (The ReadConsoleW function worked some weeks before,\n  see below.)\n\nWhat do you see instead?\n\nthrow: fault\n\n[signal 0x1099e000 code=0x400 addr=0x10970208 pc=0x0]\n\nruntime.throw+0x3d /mnt/speicher/micha/go/src/pkg/runtime/runtime.c:78\n\truntime.throw(0x4e573f, 0x7c91ee18)\nruntime.sigpanic+0x5b /mnt/speicher/micha/go/src/pkg/runtime/windows/thread.c:289\n\truntime.sigpanic()\n\ngoroutine 1 [3]:\nruntime.entersyscall+0x24 /mnt/speicher/micha/go/src/pkg/runtime/proc.c:577\n\truntime.entersyscall()\nruntime.syscall+0x8c /mnt/speicher/micha/go/src/pkg/runtime/windows/thread.c:240\n\truntime.syscall(0x7c87171c, 0x4, 0x2a26ac, 0x2a26cc, 0x2a26ac, ...)\nsyscall.Syscall6+0x40 /mnt/speicher/micha/go/src/pkg/runtime/windows/syscall.c:52\n\tsyscall.Syscall6(0x7c87171c, 0x4, 0x3, 0x1099e000, 0x400, ...)\nsyscall.ReadConsoleW+0x7d\n/mnt/speicher/micha/go/src/pkg/syscall/zsyscall_windows_386.go:894\n\tsyscall.ReadConsoleW(0x3, 0x1099e000, 0x400, 0x400, 0x10970208, ...)\nmain.main+0x14a /mnt/speicher/micha/go/src/pkg/cmd2/main.go:25\n\tmain.main()\nruntime.mainstart+0xf /mnt/speicher/micha/go/src/pkg/runtime/386/asm.s:93\n\truntime.mainstart()\nruntime.goexit /mnt/speicher/micha/go/src/pkg/runtime/proc.c:149\n\truntime.goexit()\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n\n  8g\n\nWhich operating system are you using?\n\n  Linux (386), compiling for GOOS=windows\n\nWhich revision are you using?  (hg identify)\n\n  136a9bd4fcfc\n\nPlease provide any additional information below.\n\nCode like the attached one worked previously, as can\nbe checked with e.g. release.2010-12-22.\n\nIn my console encoding patch (see golang-nuts\nthread \u0026quot;UTF-8 and Windows Console\u0026quot;) I already\nused syscall.ReadConsoleW and WriteConsoleW\nwithout problems, now it behaves the same as\nthe attached program.\n\nCould it have something todo with stack sizes?\n\nThe program has an option -readfile,\nwhich will select syscall.Readfile rather than\nsyscall.ReadConsoleW.  If this option is given,\nthe program won't crash.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/1522/0/main.go\"\u003emain.go\u003c/a\u003e (603 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:08:42Z",
	"created_at": "2011-02-16T17:49:31Z",
	"updated_at": "2016-06-24T19:25:26Z"
}
