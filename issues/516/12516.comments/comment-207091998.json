{
	"id": 207091998,
	"body": "On Apr 7, 2016 5:09 PM, \"Demetri Obenour\" \u003cnotifications@github.com\u003e wrote:\n\u003e The problem is that the Windows ABI requires that ALL frames through\nwhich an exception may propagate have stack unwind information. The only\nfunctions that do not require it are functions from which no SEH exception\nmay ever be thrown. Transitively. That means that ANY function that may\ncall into C needs unwind info.\n\u003e\n\u003e One alternative is to only call into C via an assembler trampoline that\nensures no Go code is on the stack when C code is executing.\n\nWe already do that. Go code and C code are running on different stacks.\nStack unwind won't work because there is no way to describe unwinding\nacross two stacks.\n",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-07T21:18:40Z",
	"updated_at": "2016-04-07T21:18:40Z"
}
