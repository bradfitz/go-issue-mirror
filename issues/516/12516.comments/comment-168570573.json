{
	"id": 168570573,
	"body": "\u003e ... the C++ code, compiled by the C++ compiler, does use SEH.\r\n\r\nAs far as I know SEH is not used on Windows 64-bit (windows-amd64 in Go speak). See http://www.ntcore.com/files/vista_x64.htm#Exception_Handling\r\n\r\nAlso http://blogs.msdn.com/b/freik/archive/2006/01/04/509372.aspx provides some details about exception handling on Windows 64-bit\r\n\r\n\u003e Windows finds the Go exception handlers fine.\r\n\r\nWe use standard AddVectoredExceptionHandler Windows API to inform Windows about our handler.\r\n\r\n\u003e It fails to find the C++ SEH exception handler, but only after the Go runtime has started, or perhaps only when called from Go. I don't know what the key difference is.\r\n\r\nIf you read the articles above, you will see that Windows requires every stack frame to contain apropriate unwind information. Go does not generate any of that. I am not sure about gcc C++. Maybe gcc generates appropriate unwind information. Maybe Windows requires that full stack has unwind information. I don't know.\r\n\r\nAlex",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-04T03:10:42Z",
	"updated_at": "2016-01-04T03:10:42Z"
}
