{
	"id": 236258586,
	"body": "\u003e I think it should be doable by writing a `post-checkout` hook\r\n\r\nThat's actually a really good idea, I'll see if it works!\r\n\r\n\u003e Git is already doing this check, as you pointed out by showing the output of \"git pull\". I don't think it's worth duplicating this check in `go get`. There are probably a hundred other configurations that cause errors too, should we duplicate all of Git's logic in `go get`?\r\n\r\nMy argument that it might be worth it is go keeps those repos pretty deeply nested, likely inconveniently far away from whatever your cwd is or whatever you're trying to actually work on (again, even worse if it's something else running `go get` outside of a terminal, but that's not go's fault). It's an annoying context switch, and I think it would be reasonably easy to avoid in this case.\r\n\r\n\u003e Setting `--rebase=false` doesn't prevent a commit from being created, and even if it did, people have preferences for rebase vs. merge.\r\n\r\nAgreed, what it *does* do is let you fast-forward if that's possible, and you can do that without becoming an author or committer. If I only got this failure when fast-forward wasn't possible in package repos, it probably wouldn't have bothered me enough to think about it.\r\n\r\n\u003e If you think of it solely as a package manager, then yeah, it makes a lot of sense to enforce a single, working, Git configuration. But go get is not just a package manager - it's a tool for managing your GOPATH, where user-written code also lives.\r\n\r\nSure, I understand that. This problem just happens to be with the packages for me. For a repo I'm developing in I'm just using git like normal, and it's unlikely anything would trigger a pull on that except for me doing it manually because I want to pull it. I'm much less aware of what's pulling which package when, where, and why. They're third-party packages, something requires them, I'd prefer they just worked however they need to work. I admit I do not know (being new to go) if there is any distinction made in go between working repos and dependencies that get pulled to act as packages. Either way would probably seem reasonable to me, for different reasons.\r\n\r\n\u003e I don't see why those preferences need to be anywhere other than where they are now, `.git/config`. As I tried to explain above, the Git repositories that go clones are not special in any way.\r\n\r\nYeah I like that idea the least. They're not *special*, they're just (packages anyway) far removed from whatever somebody is actually trying to work on when one gets cloned or updated.\r\n\r\n\u003eDitto, this is already the purpose of `.git/config`, why invent another config file?\r\n\r\nThis would not be my first choice either, but if you have something that wants to clone or update a bunch of packages, it's annoying to go update a bunch of `.git/config` files every time.\r\n\r\nIf go is trying to manage this work behind the scenes on behalf of the user, which it is, I don't think it's a good idea for it to assume that everybody's global git config by itself will allow go to manage clone/pull/whatever operations by itself on a bunch of repositories. I don't think it's a good idea precisely because git is designed to have tiered configurations. The global one is settings that apply to all of your user's repos machine-wide, the local one is for settings that need to be different in different repositories. If go wants to more-or-less-seamlessly manage some git repos, it should let me help it do that somehow.\r\n\r\nSo, I think beyond the scope of this specific problem, it's not great that go doesn't provide *some* way to say \"hey, here's how I want the repositories you `go get` configured, please.\"\r\n\r\nWith regards to this specific issue, I've also pinged the git mailing list to ask why rebase doesn't avoid this check when it should know it won't make new commits, and/or why it doesn't detect this and fast-forward instead of rebasing in this case since the end-result should be identical AFAIK. If and when they respond, I'll let you guys know what they say in case you're interested.",
	"user": {
		"login": "dakotahawkins",
		"id": 638578,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-29T18:31:53Z",
	"updated_at": "2016-07-29T18:32:33Z"
}
