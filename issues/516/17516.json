{
	"id": 183996361,
	"number": 17516,
	"state": "open",
	"title": "x/tools/cmd/guru: confusing behavior on source files whose package can't be located",
	"body": "CL 30451 caused guru to silently treat a file that it can't locate beneath $GOPATH as if it belonged to an anonymous package (actually, one named \"command-line-arguments\") containing just that file.  The behavior is convenient for some queries since it allows you to, for instance, describe arbitrary identifiers in any Go source file.  However, for \"reverse\" queries such as \"implements\", its benefits are more dubious.  Although it may cause \"implements\" facts within that single file to be reported, guru will fail to report \"implements\" facts about packages that import this one, since without knowing the true name of the query package, it cannot enumerate the packages that import it.\r\n\r\nThe tool should at least issue a warning* when it does this kind of guesswork, and should perhaps not do it at all for queries that use the import graph.\r\n\r\n*though warnings are tricky because they may interfere with structured JSON output for editors that merge subcommands' stdout and stderr.",
	"user": {
		"login": "alandonovan",
		"id": 8433140,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		}
	],
	"comments": 0,
	"created_at": "2016-10-19T15:31:50Z",
	"updated_at": "2016-10-20T22:15:15Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
