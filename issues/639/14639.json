{
	"id": 138448377,
	"number": 14639,
	"state": "open",
	"title": "compress/gzip: Reader unable to parse headers with long comments",
	"body": "Using ```go1.6```\r\n\r\nRFC 1952 for gzip does not specify a length for the comment and name fields.\r\n\u003e If FCOMMENT is set, a zero-terminated file comment is\r\n\u003e present.  This comment is not interpreted; it is only\r\n\u003e intended for human consumption.  The comment must consist of\r\n\u003e ISO 8859-1 (LATIN-1) characters.  Line breaks should be\r\n\u003e denoted by a single line feed character (10 decimal).\r\n\r\nThe current implementation is inconsistent:\r\n* `gzip.Writer` permits the writing of any length comment/name string in `gzip.Header`.\r\n* `gzip.Reader` fails to read any comment/name string in `gzip.Header` longer than 511 bytes.\r\n\r\nPlayground example: https://play.golang.org/p/Zvjf8Q7jXe\r\nChange 512 to 511 in the example, and it works again.\r\n\r\nThis causes issues reading gzip files produced by [GZinga](https://github.com/eBay/GZinga), which produces syntactically valid gzip files, but abuses the comment field to store meta data.",
	"user": {
		"login": "dsnet",
		"id": 6354026,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "dsnet",
		"id": 6354026,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2016-03-04T11:17:42Z",
	"updated_at": "2016-05-09T20:47:07Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
