{
	"id": 244074072,
	"body": "@prattmic \r\n\r\n\u003e Does that space go between the params and autos?\r\n\r\nWhich space? The space for the return address? The return address is saved at a known fixed offset from the stack pointer, usually 0, but 120 on sparc64. It is below the arguments passed to the next function.\r\n\r\nIf you don't put at at a fixed address, you can't have variadic functions (not an issue for Go, but in general). For Go however, it would be much difficult to implement context save and restore (e.g. for the select statement).\r\n\r\n\u003e Where should the SP point on function entry?\r\n\r\nOn link register architectures, it should point to the previous stack frame. The callee modifies the stack pointer. But perhaps you mean something else, because this is true for pretty much any ABI on link register architectures. Where else could the stack pointer point to?\r\n\r\nPerhaps you are referring to the virtual SP register in the go assembly? Perhaps you are wondering how to set Spadj? What exactly do you mean?\r\n\r\n\r\n",
	"user": {
		"login": "4ad",
		"id": 1331747,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-01T13:12:28Z",
	"updated_at": "2016-09-01T13:12:28Z"
}
