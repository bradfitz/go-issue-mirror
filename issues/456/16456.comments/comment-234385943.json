{
	"id": 234385943,
	"body": "Actually, something else we could do is just not spew to the server log if `lenData == 0`, but still return `ErrHijacked` like we do today:\r\n\r\n```go\r\nfunc (w *response) Write(data []byte) (n int, err error) {\r\n        return w.write(len(data), data, \"\")\r\n}\r\n\r\nfunc (w *response) WriteString(data string) (n int, err error) {\r\n        return w.write(len(data), nil, data)\r\n}\r\n\r\n// either dataB or dataS is non-zero.    \r\nfunc (w *response) write(lenData int, dataB []byte, dataS string) (n int, err error) {\r\n        if w.conn.hijacked() {\r\n                w.conn.server.logf(\"http: response.Write on hijacked connection\")\r\n                return 0, ErrHijacked\r\n        }\r\n```\r\n\r\nChanging the code to be:\r\n\r\n```go                                                                                                                                                                         \r\nfunc (w *response) write(lenData int, dataB []byte, dataS string) (n int, err error) {\r\n        if w.conn.hijacked() {\r\n                if lenData \u003e 0 {\r\n                        w.conn.server.logf(\"http: response.Write on hijacked connection\")\r\n                }\r\n                return 0, ErrHijacked\r\n        }\r\n```\r\n\r\nThen you just do a Write(nil) and check the error value, but we still spam the logs in the majority of cases for people making actual coding mistakes, which is why the log was there in the first place.\r\n\r\nNo new API.\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-07-21T21:13:47Z",
	"updated_at": "2016-07-21T21:14:17Z"
}
