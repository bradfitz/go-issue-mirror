{
	"id": 163728600,
	"body": "It would also be useful to be able to use `test` as a build tag to only include certain files in the build when testing.\r\n\r\n```\r\n// +build test\r\n```\r\n\r\nA file with such a tag would be included in the build under `go test`, but excluded under `go build` or `go run`.  \r\n\r\nThis tag would enable test data and/or helper functions to be shared across related packages.  Currently the only way to share test data/code with another package is to remove the `_test` suffix, which is of course undesirable because now that code is always included in the build.\r\n\r\nHere's a specific example of how this is useful.  In my current project I have the following packages:\r\n\r\n- `models` -- contains my types.  \r\n- `store` -- handles persistence of model types \r\n- `search` -- implements search indexing/retrieval within model types\r\n\r\nWithin the `models` package, I now have a testdata_test.go file that contains sample model data and functions to generate random model data.  I use this extensively in other tests within the `models` package.  However, even if I capitalize variable names and functions in this file, I can't access them from tests within the `store` or `search` package.  If I could replace the `_test` suffix with the `test` tag, my test data and helpers would be visible in other packages, but only included in test builds.\r\n",
	"user": {
		"login": "mmindenhall",
		"id": 1106269,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 3,
		"+1": 3
	},
	"created_at": "2015-12-10T19:38:35Z",
	"updated_at": "2015-12-10T19:38:35Z"
}
