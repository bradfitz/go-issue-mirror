{
	"id": 130065998,
	"body": "If not already considered a part of the issue, let me please ask for one more, I believe closely related thing above the subject: Pinning guarantees rules, ie. either defining an explicit mechanism, maybe an annotation `//go:pinned`, for making things with static addresses; or having an indirect mechanism, like eg. that `b := make([]byte, n, m)` under certain specified conditions produces an immovable `\u0026b[0]`, etc. Actually supporting a byte slice is enough (for me). What about automatically, always and everywhere pinning any `unsafe.Pointer`???",
	"user": {
		"login": "cznic",
		"id": 729580,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-11T20:48:11Z",
	"updated_at": "2015-08-11T21:35:53Z"
}
