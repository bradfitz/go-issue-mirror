{
	"id": 66070431,
	"body": "\u003ca id=\"c10\"\u003e\u003c/a\u003eComment 10:\n\n\u003cpre\u003eThe difference to those other contexts is that those ones all have\nactual realistic implementation alternatives: linux vs. darwin might\nmean just different syscalls or whatever, gccgo vs. gc means symbol\ninformation, appengine vs. !appengine means using unsafe or doing it\nslower. In each alternative it is usually understood that the\nfunctionality is generally there, just in a different form. That's not\ntrue in the go1.1 scenario.\n\nThe use case here is also fairly niche. We are doing it for:\n  - a programmer using Debian (or similar) with only go1.0.x\n  - who is not able/willing to install go1.1 via distro, PPA or from source\n  - who nonetheless wants to upgrade a package they use that wants to\nstart using a go1.1 feature, but doesn't want to use that feature\n  - who is not able/willing to wind that package back to a pre-go1.1\nstate, nor fork it themselves\n  - who is able to convince the package owner to support the go1.1 tag\nand provide dummy version of all parts of their package's API that use\nthe go1.1 feature\n\nThat's a lot of caveats for a niche when there are a good half dozen\nor so workarounds.\u003c/pre\u003e",
	"user": {
		"login": "dsymonds",
		"id": 31506,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-11-08T00:11:29Z",
	"updated_at": "2014-12-08T10:21:53Z"
}
