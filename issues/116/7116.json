{
	"id": 51286212,
	"number": 7116,
	"state": "open",
	"title": "x/tools/cmd/godoc: should exploit information provided by source file organisation",
	"body": "\u003cpre\u003eWhen creating documentation, godoc ignores the organization of the source code into\nfiles. Larger packages are usually split into separate files, with each file covering a\ncertain aspect of the package, and sometimes also the package's API.\n\nFor instance, go.tools/go/types API defines a set of \u0026quot;Object\u0026quot; and\n\u0026quot;Type\u0026quot; types, which are grouped into separate files (objects.go, types.go).\ngodoc simply groups all types alphabetically and thus the original grouping which does\nhelp understanding is lost.\n\nWe should come up with a mechanism to exploit this information if possible; ideally w/o\nintroducing mechanism for the programmer (but perhaps a convention).\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2014-01-13T19:19:05Z",
	"updated_at": "2015-04-14T19:40:01Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
