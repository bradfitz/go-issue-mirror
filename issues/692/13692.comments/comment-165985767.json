{
	"id": 165985767,
	"body": "\"x2\" is not a string, it is an untyped (ideal) string literal.\n\n\u003e On 20 Dec 2015, at 00:50, Anders Törnqvist \u003cnotifications@github.com\u003e wrote:\n\u003e \n\u003e When I do this:\n\u003e \n\u003e type X string\n\u003e func printX(x X) {\n\u003e     fmt.Println(\"x: \", x)\n\u003e }\n\u003e func main() {\n\u003e     x1 := X(\"x1\")\n\u003e     printX(x1)      // 1. \n\u003e     printX(\"x2\")    // 2.\n\u003e }\n\u003e I expect 2. to fail since \"x2\" is a string.\n\u003e \n\u003e But it works since it auto coerce \"x2\" string type to type X.\n\u003e \n\u003e Go\n\u003e \n\u003e go version go1.4.2 darwin/amd64\n\u003e OS X\n\u003e \n\u003e ProductName: Mac OS X\n\u003e ProductVersion: 10.10.5\n\u003e BuildVersion: 14F1509\n\u003e Darwin Kernel Version 14.5.0: Tue Sep 1 21:23:09 PDT 2015;\n\u003e root:xnu-2782.50.1~1/RELEASE_X86_64 x86_64 i386 MacBookPro11,1 Darwin\n\u003e \n\u003e Full Code Example\n\u003e \n\u003e package main\n\u003e \n\u003e import \"fmt\"\n\u003e \n\u003e type X string\n\u003e type Y []byte\n\u003e \n\u003e func printX(x X) {\n\u003e     fmt.Println(\"x: \", x)\n\u003e }\n\u003e \n\u003e func printY(y Y) {\n\u003e     fmt.Println(\"y: \", y)\n\u003e     fmt.Println(\"y as string: \", string(y))\n\u003e }\n\u003e \n\u003e func main() {\n\u003e     x1 := X(\"x1\")\n\u003e     printX(x1)\n\u003e     // The following does not work, since wrong type:\n\u003e     // x2 := \"x2\"\n\u003e     // printX(x2)\n\u003e     printX(\"x2\") // works, since auto coercion from type string to type X :(\n\u003e \n\u003e     y1 := Y(\"y1\")\n\u003e     printY(y1)\n\u003e     printY([]byte{45, 45}) // works, since auto coercion from type []byte to type Y :(\n\u003e }\n\u003e The above code on Go Playground: https://play.golang.org/p/IFGDcg86Q0\n\u003e \n\u003e —\n\u003e Reply to this email directly or view it on GitHub.\n\u003e \n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-19T13:57:02Z",
	"updated_at": "2015-12-19T13:57:02Z"
}
