{
	"id": 66053363,
	"body": "\u003ca id=\"c9\"\u003e\u003c/a\u003eComment 9:\n\n\u003cpre\u003eThrough reflection, the fmt package performs intelligent printing of values.\n\n\"Regardless of the verb, if an operand is an interface value, the internal concrete\nvalue is used, not the interface itself.\"\n\nPackage fmt\n\u003ca href=\"http://golang.org/pkg/fmt/\"\u003ehttp://golang.org/pkg/fmt/\u003c/a\u003e\n\n\tv := a.objects[k]\n\tfmt.Printf(\"v=%#v\\n\", v)\n\t=\u003e v=(*main.structA)(nil)\n\tfmt.Printf(\"is this nil? %v\\n\", v == nil)\n\t=\u003e is this nil? true\n\nThe type of the variable v is the type of the value type for the map, that is, *structA.\nSince a.objects[k] does not exist, v will be the nil, the zero value for type *structA.\n\n\tnext := object.getObject(0)\n\tfmt.Printf(\"next=%#v\\n\", next)\n\t=\u003e next=(*main.structA)(nil)\n\tfmt.Printf(\"is this still nil? %v\\n\", next == nil)\n\t=\u003e is this still nil? false\n\nThe type of the variable next is the type of the return value for the object.getObject\nmethod, that is, interfaceA. The nil value printed is the internal concrete value for\nthe type *structA, not the value of the interface interfaceA itself. The value of\ninterfaceA is not nil.\n\n\"Does this make sense?\" falung\n\nIt makes sense to me.\u003c/pre\u003e",
	"user": {
		"login": "peterGo",
		"id": 4561296,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-11-19T18:26:30Z",
	"updated_at": "2014-12-08T10:07:39Z"
}
