{
	"id": 51276217,
	"number": 234,
	"state": "closed",
	"title": "Possibility to add filters to channels for upfront validation",
	"body": "by **per.arneng**:\n\n\u003cpre\u003eIt would be nice if was possible to add a function that will act as a\nfilter on a channel so that it could for example validate the channel\nsynchronosly before the data is put on the channel. This will make it\npossible to ensure that all data on the channel is correct and valid and\nany errors will come to the caller upfront instead of beeing detected at\nthe consumer end. And maybe it should be possible to specify several\nfilters in a list or chain them.\nDo not know the syntax for it but something like this:\n\n// the filter takes an argument that is the\n// same type as the channel and returns a value\n// that is also the same type and that value will\n// go in to the channel. There should also be a\n// way of indicating an error but im not sure\n// about the best way to do that in Go\nfunc aboveZerofilter(a int) int {\n  if a \u0026lt; 0 {\n    // do some error handling\n  }\n  return a;\n} \n\n// creates a channel that can only take positive ints\nfunc newPositiveNrChannel() {\n  chan := make(chan(aboveZerofilter) int) ;\n  return chan;\n}\n\nfunc main() {\n  chan := newPositiveNrChannel();\n  chan \u0026lt;- -1; // get some kind of error in some way..\n}\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:03:46Z",
	"created_at": "2009-11-16T21:58:31Z",
	"updated_at": "2016-06-24T19:05:17Z"
}
