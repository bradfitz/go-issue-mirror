{
	"id": 189980779,
	"body": "I'm at a stage where I don't think I can take this further without access to a failing system to play with (I'm on linux here). Clearly the issue is that invoking gfortran minimally as it is done by test.bash does not fail when it should and so thinks it can proceed. What might be helpful is to report what go/build is passing to execute when gfortran is called via cgo.\r\n\r\n```diff\r\ndiff --git a/src/cmd/go/build.go b/src/cmd/go/build.go\r\nindex 89ab1c0..ff7574d 100644\r\n--- a/src/cmd/go/build.go\r\n+++ b/src/cmd/go/build.go\r\n@@ -2044,6 +2044,11 @@ func (b *builder) runOut(dir string, desc string, env []string, cmdargs ...inter\r\n                }\r\n        }\r\n \r\n+       if cmdline[0] == \"gfortran\" {\r\n+               fmt.Println(cmdline)\r\n+               fmt.Println(mergeEnvLists(env, envForDir(dir, os.Environ())))\r\n+       }\r\n+\r\n        nbusy := 0\r\n        for {\r\n                var buf bytes.Buffer\r\n```\r\n\r\nThen play with gfortran invocations for helloworld.f90 using the options that are passed until you get a helloworld.f90 build failure (also considering env vars).",
	"user": {
		"login": "kortschak",
		"id": 275221,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-29T00:37:03Z",
	"updated_at": "2016-02-29T00:37:03Z"
}
