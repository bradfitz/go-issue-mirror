{
	"id": 66054782,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eLooks good to me:\nfirst  5000000\t       388 ns/op\nlast  5000000\t       392 ns/op\nrange 10000000\t       221 ns/op\n\nI think your benchmark is flawed.  You are running a range loop inside a loop.\nUse one loop and it appears to be slightly faster (cannot explain that).\n\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"testing\"\n)\n\nfunc main() {\n\tfmt.Printf(\"first %v\\n\", testing.Benchmark(benchFirstDelete))\n\tfmt.Printf(\"last %v\\n\", testing.Benchmark(benchLastDelete))\n\tfmt.Printf(\"range %v\\n\", testing.Benchmark(benchRangeDelete))\n}\n\nfunc benchFirstDelete(b *testing.B){\n\tb.StopTimer()\n\tm := make(map[int]int)\n\tfor j := 0; j \u0026lt; b.N; j++ {\n\t\tm[j] = 0\n\t}\n\tif len(m) != b.N {\n\t\tpanic(\"before\")\n\t}\n\tb.StartTimer()\n\tfor j := 0; j \u0026lt; b.N; j++ {\n\t\tm[j] = 0, false\n\t}\n\tif len(m) != 0 {\n\t\tpanic(\"after\")\n\t}\n}\n\nfunc benchLastDelete(b *testing.B){\n\tb.StopTimer()\n\tm := make(map[int]int)\n\tfor j := 0; j \u0026lt; b.N; j++ {\n\t\tm[j] = 0\n\t}\n\tif len(m) != b.N {\n\t\tpanic(\"before\")\n\t}\n\tb.StartTimer()\n\tfor j := b.N-1; j \u0026gt;= 0; j-- {\n\t\tm[j] = 0, false\n\t}\n\tif len(m) != 0 {\n\t\tpanic(\"after\")\n\t}\n}\n\nfunc benchRangeDelete(b *testing.B){\n\tb.StopTimer()\n\tm := make(map[int]int)\n\tfor j := 0; j \u0026lt; b.N; j++ {\n\t\tm[j] = 0\n\t}\n\tif len(m) != b.N {\n\t\tpanic(\"before\")\n\t}\n\tb.StartTimer()\n\tfor k := range m {\n\t\tm[k] = 0, false\n\t}\n\tif len(m) != 0 {\n\t\tpanic(\"after\")\n\t}\n}\u003c/pre\u003e\n\n\n\n_Status changed to **WorkingAsIntended**._",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-02-22T16:54:35Z",
	"updated_at": "2014-12-22T05:54:19Z"
}
