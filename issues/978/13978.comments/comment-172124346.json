{
	"id": 172124346,
	"body": "Thanks for the report.  Unfortunately I don't see enough here to know what to fix.  Are you saying that the Go program simply crashes with \"Segmentation fault (core dumped)\" and doesn't print anything else?  That should (of course) never happen.\r\n\r\nThere is something odd here.  Your `go version` output says darwin/amd64, but your backtrace says sys_linux_amd64.s.  Which is it?\r\n\r\nThe backtrace line suggests that the crash is because `g != nil` but `g.m == nil` or `g.m.gsignal == nil`.  Not sure how that could happen.\r\n\r\nIf you can figure out the arguments in the core dump, you can determine where the first SIGSEGV occurred by looking at the ctx argument to sigtrampgo.  It will be a pointer to a sigcontext struct, defined in runtime/defs_linux_amd64.go.  The rip field should point to the instruction that got the error.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-15T23:20:59Z",
	"updated_at": "2016-01-15T23:20:59Z"
}
