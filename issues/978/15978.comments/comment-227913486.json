{
	"id": 227913486,
	"body": "@hirochachacha, thank you for suggestion. I tried it:\r\n```\r\ndiff --git a/src/os/os_windows_test.go b/src/os/os_windows_test.go\r\nindex 05d7a8f..dae4c04 100644\r\n--- a/src/os/os_windows_test.go\r\n+++ b/src/os/os_windows_test.go\r\n@@ -5,6 +5,7 @@\r\n package os_test\r\n \r\n import (\r\n+\t\"encoding/binary\"\r\n \t\"io/ioutil\"\r\n \t\"os\"\r\n \tosexec \"os/exec\"\r\n@@ -245,3 +246,66 @@ func TestDeleteReadOnly(t *testing.T) {\r\n \t\tt.Fatal(err)\r\n \t}\r\n }\r\n+\r\n+func createSymlink(symlinkfilename string, targetfilename string) (err error) {\r\n+\tconst FSCTL_SET_REPARSE_POINT = 0x900a4\r\n+\tvar le = binary.LittleEndian\r\n+\t// typedef struct _REPARSE_DATA_BUFFER {\r\n+\t//   uint32 ReparseTag;\r\n+\t//   uint16 ReparseDataLength;\r\n+\t//   uint16 Reserved;\r\n+\t//   uint16 SubstituteNameOffset;\r\n+\t//   uint16 SubstituteNameLength;\r\n+\t//   uint16 PrintNameOffset;\r\n+\t//   uint16 PrintNameLength;\r\n+\t//   uint32  Flags;\r\n+\t//   WCHAR  PathBuffer[1];\r\n+\t// } REPARSE_DATA_BUFFER, *PREPARSE_DATA_BUFFER;\r\n+\tfd, err := syscall.CreateFile(syscall.StringToUTF16Ptr(targetfilename), syscall.GENERIC_READ|syscall.GENERIC_WRITE, 0, nil, syscall.CREATE_ALWAYS,\r\n+\t\tsyscall.FILE_FLAG_OPEN_REPARSE_POINT|syscall.FILE_FLAG_BACKUP_SEMANTICS, 0)\r\n+\tif err != nil {\r\n+\t\treturn err\r\n+\t}\r\n+\tdefer syscall.CloseHandle(fd)\r\n+\tsympath := syscall.StringToUTF16(symlinkfilename)\r\n+\tsympath = sympath[:len(sympath)-1]\r\n+\trdbbuf := make([]byte, 20+len(sympath)*4)\r\n+\tle.PutUint32(rdbbuf[:4], syscall.IO_REPARSE_TAG_SYMLINK)\r\n+\tle.PutUint16(rdbbuf[4:6], uint16(len(rdbbuf)-8))\r\n+\tle.PutUint16(rdbbuf[8:10], 0)\r\n+\tle.PutUint16(rdbbuf[10:12], uint16(len(sympath)*2))\r\n+\tfor i, w := range sympath {\r\n+\t\tle.PutUint16(rdbbuf[20+i*2:20+i*2+2], w)\r\n+\t}\r\n+\tle.PutUint16(rdbbuf[12:14], uint16(len(sympath)*2))\r\n+\tle.PutUint16(rdbbuf[14:16], uint16(len(sympath)*2))\r\n+\tfor i, w := range sympath {\r\n+\t\tle.PutUint16(rdbbuf[20+len(sympath)*2+i*2:20+len(sympath)*2+i*2+2], w)\r\n+\t}\r\n+\treturn syscall.DeviceIoControl(fd, FSCTL_SET_REPARSE_POINT, \u0026rdbbuf[0], uint32(len(rdbbuf)), nil, 0, nil, nil)\r\n+}\r\n+\r\n+func TestReadlink(t *testing.T) {\r\n+\tdefer chtmpdir(t)()\r\n+\tf, err := os.Create(\"test\")\r\n+\tif err != nil {\r\n+\t\tt.Fatal(err)\r\n+\t}\r\n+\tf.Close()\r\n+\terr = createSymlink(\"test\", \"linkToTest\")\r\n+\tif err != nil {\r\n+\t\tt.Fatal(err)\r\n+\t}\r\n+\tdefer func() {\r\n+\t\tif r := recover(); r != nil {\r\n+\t\t\tt.Fatal(r)\r\n+\t\t}\r\n+\t}()\r\n+\ttarget, err := os.Readlink(\"linkToTest\")\r\n+\tif err != nil {\r\n+\t\tt.Fatal(err)\r\n+\t}\r\n+\tif target != \"test\" {\r\n+\t\tt.Error(\"readlink is broken\")\r\n+\t}\r\n+}\r\n\r\n```\r\n\r\nbut the test fails on both my Windows XP:\r\n```\r\nC:\\Documents and Settings\\brainman\u003eu:\\test -test.v -test.run=Readlink\r\n=== RUN   TestReadlink\r\nException 0xc0000005 0x1 0x0 0x7c80168e\r\nPC=0x7c80168e\r\n\r\nsyscall.Syscall9(0x7c801629, 0x8, 0x780, 0x900a4, 0x10d862d0, 0x24, 0x0, 0x0, 0x0, 0x0, ...)\r\n        /root/go/src/runtime/syscall_windows.go:185 +0x4a\r\nsyscall.DeviceIoControl(0x780, 0x900a4, 0x10d862d0, 0x24, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)\r\n        /root/go/src/syscall/zsyscall_windows.go:1314 +0xaf\r\nos_test.createSymlink(0x544e44, 0x4, 0x545f55, 0xa, 0x0, 0x0)\r\n        /root/go/src/os/os_windows_test.go:285 +0x6ff\r\nos_test.TestReadlink(0x10d80280)\r\n        /root/go/src/os/os_windows_test.go:295 +0x131\r\ntesting.tRunner(0x10d80280, 0x55d68c)\r\n        /root/go/src/testing/testing.go:610 +0x8c\r\ncreated by testing.(*T).Run\r\n        /root/go/src/testing/testing.go:646 +0x2a5\r\n\r\ngoroutine 1 [chan receive]:\r\ntesting.(*T).Run(0x10d80280, 0x5466e5, 0xc, 0x55d68c, 0x1d1cc01)\r\n        /root/go/src/testing/testing.go:647 +0x2c4\r\ntesting.RunTests.func1(0x10d80200)\r\n        /root/go/src/testing/testing.go:793 +0xa1\r\ntesting.tRunner(0x10d80200, 0x10dafed0)\r\n        /root/go/src/testing/testing.go:610 +0x8c\r\ntesting.RunTests(0x55d56c, 0x5d1540, 0x44, 0x44, 0x10db6201)\r\n        /root/go/src/testing/testing.go:799 +0x332\r\ntesting.(*M).Run(0x10daff74, 0x10db0180)\r\n        /root/go/src/testing/testing.go:743 +0x79\r\nmain.main()\r\n        os/_test/_testmain.go:194 +0x100\r\neax     0x0\r\nebx     0x0\r\necx     0x0\r\nedx     0x7c90e514\r\nedi     0x6feec\r\nesi     0x0\r\nebp     0x6fec4\r\nesp     0x6fe94\r\neip     0x7c80168e\r\neflags  0x10246\r\ncs      0x1b\r\nfs      0x3b\r\ngs      0x0\r\n\r\n```\r\nand my Windows 7:\r\n```\r\nC:\\Users\\brainman\u003eu:\\test -test.v -test.run=Readlink\r\n=== RUN   TestReadlink\r\n--- FAIL: TestReadlink (0.02s)\r\n        os_windows_test.go:297: Access is denied.\r\nFAIL\r\n```\r\n\r\nWhat do I do wrong?\r\n\r\nAlex",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-23T00:06:20Z",
	"updated_at": "2016-06-23T00:06:20Z"
}
