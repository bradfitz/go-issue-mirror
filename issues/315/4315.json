{
	"id": 51281956,
	"number": 4315,
	"state": "open",
	"title": "cmd/compile: possible escape analysis cleanup",
	"body": "\u003cpre\u003efrom lvd; not a requirement for go 1.1\n\ndiff -r 959dee37d03d src/cmd/gc/esc.c\n--- a/src/cmd/gc/esc.c Tue Oct 30 11:10:08 2012 +1100\n+++ b/src/cmd/gc/esc.c Tue Oct 30 11:24:15 2012 +0100\n@@ -390,15 +390,18 @@\n  break;\n  }\n\n- escloopdepth(e, n-\u0026gt;left);\n- escloopdepth(e, n-\u0026gt;right);\n- escloopdepthlist(e, n-\u0026gt;list);\n- escloopdepth(e, n-\u0026gt;ntest);\n+ // TODO(lvd) left, right, list, ntest and rlist should only contain\nexpressions, not statements\n+ // and the standard tree compiles fine with these branches commented\nout, but that may not\n+ // outweigh the time spent debugging a misjudged label leading to a\nspurious stackallocation\n+ // when someone violates this assumption somewhere unrelated.\n+// escloopdepth(e, n-\u0026gt;left);\n+// escloopdepth(e, n-\u0026gt;right);\n+// escloopdepthlist(e, n-\u0026gt;list);\n+// escloopdepth(e, n-\u0026gt;ntest);\n  escloopdepth(e, n-\u0026gt;nincr);\n  escloopdepthlist(e, n-\u0026gt;nbody);\n  escloopdepthlist(e, n-\u0026gt;nelse);\n- escloopdepthlist(e, n-\u0026gt;rlist);\n-\n+// escloopdepthlist(e, n-\u0026gt;rlist);\n }\n\n static void\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"created_at": "2012-10-30T16:44:43Z",
	"updated_at": "2015-06-08T06:23:42Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
