{
	"id": 65882851,
	"number": 10315,
	"state": "closed",
	"title": "gccgo: fails on PPC crosscompilation with cgo",
	"body": "I am trying to use gccgo5 for the cross-compilation. After successfully resolved issues in the #10310 i am able to build ppc projects for the PPC on the amd64 machine. Only broken part is CGO cross compilation for the GO/C source code. I think that problem is in incorrect dwarf parsing, but not sure yet. \r\n\r\nTo enable it i set CGO_ENABLED=1 and CC/CXX to the correct cross-compiler binaries.\r\nBelow is an illustration, I am using [hello-cgo](https://github.com/kyleconroy/hello-cgo):\r\n\r\n```\r\nbuilder@5dc5de8d9844:~/hello-cgo$ go build -x\r\nWORK=/tmp/go-build093303459\r\nmkdir -p $WORK/_/opt/turris/hello-cgo/_obj/\r\ncd /opt/turris/hello-cgo\r\nCGO_LDFLAGS=\"-g\" \"-O2\" /opt/turris/x-tools/x86_64-turris-linux-gnu/libexec/gcc/x86_64-turris-linux-gnu/5.0.0/cgo -objdir $WORK/_/opt/turris/hello-cgo/_obj/ -gccgo -- -I $WORK/_/opt/turris/hello-cgo/_obj/ hello.go\r\n# _/opt/turris/hello-cgo\r\n./hello.go:10:2: call of non-function C.hello\r\n```\r\nI also tried to run cgo directly, using `go tool cgo hello.go`. It fails with the same message and leaves `_obj/_cgo_.o` file which looks like correct ppc binary. According to the code it looks like object compiles correctly, but later cgo binary fails to find corresponding DWARF records and fail. I also created gist with `-debug-gcc` output: https://gist.github.com/samm-git/cc580ad8af5f7941977b\r\n\r\n Could you please help me with this issue, or at least point to the right direction?",
	"user": {
		"login": "samm-git",
		"id": 1388875,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2015-04-02T11:37:44Z",
	"created_at": "2015-04-02T08:54:24Z",
	"updated_at": "2016-06-25T02:04:31Z"
}
