{
	"id": 51288412,
	"number": 8590,
	"state": "open",
	"title": "spec: disallow `type P *T` if T has methods",
	"body": "\u003cpre\u003eWe already disallow named pointer types as types of receivers or anonymous fields. We\nmay want to consider outlawing them more generally since they have some strange\nproperties because methods do not automatically indirect pointers, while fields do.\n\nHere's an example: \u003ca href=\"http://play.golang.org/p/BsThM7_Jcd\"\u003ehttp://play.golang.org/p/BsThM7_Jcd\u003c/a\u003e\n\nWhen we see p.m we don't know if p should be automatically indirected unless we know\nthat m is a field. Since we (a compiler/typechecker) cannot know this w/o looking it up\nfirst, for fields it is necessary to do a 2nd lookup if the first one (w/o indirection)\nfinds nothing. If the 2nd lookup results in finding a method (rather than a field), it\nmust be discarded.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Go2"
		},
		{
			"name": "LanguageChange"
		},
		{
			"name": "LongTerm"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"created_at": "2014-08-25T23:13:58Z",
	"updated_at": "2015-12-04T09:02:07Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
