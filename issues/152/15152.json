{
	"id": 146296198,
	"number": 15152,
	"state": "closed",
	"title": "cmd/compile: incomplete optimization of inlining leads to useless instructions.",
	"body": "1. What version of Go are you using (`go version`)?\r\n\r\ngo version go1.6 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n3. What did you do?\r\n\r\nGiven this example:\r\nhttps://play.golang.org/p/LqaVgTCP57\r\n\r\nCompiling it with default optimization options correctly inlines the call to the empty function `f()` but its argument, even if not \"consumed\" by anything in the inlined call to `f()` is still computed. I was expecting a deeper optimization level correctly seeing that these rvalues are not used at all when `f()` is empty.\r\n\r\nHere are the output of gc using the `-S` flag with and without inlining to highlight the fact that the computation of the arguments are still here whether the inlining results in a noop or not.\r\n\r\n```\r\n$ go build -gcflags='-S' example.go\r\n...\r\n        0x0000 00000 (/home/julio/farjump/lab/example.go:11)    MOVQ    $42, AX\r\n        0x0007 00007 (/home/julio/farjump/lab/example.go:12)    CMPQ    AX, $42\r\n        0x000b 00011 (/home/julio/farjump/lab/example.go:12)    SETEQ   AL\r\n...\r\n```\r\n\r\n```\r\n$ go build -gcflags='-l -S' example.go\r\n...\r\n        0x0018 00024 (/home/julio/farjump/lab/example.go:11)    MOVQ    (SP), BX\r\n        0x001c 00028 (/home/julio/farjump/lab/example.go:12)    CMPQ    BX, $42\r\n        0x0020 00032 (/home/julio/farjump/lab/example.go:12)    SETEQ   (SP)\r\n        0x0024 00036 (/home/julio/farjump/lab/example.go:12)    PCDATA  $0, $0\r\n        0x0024 00036 (/home/julio/farjump/lab/example.go:12)    CALL    \"\".f(SB)\r\n...\r\n```\r\n\r\n4. What did you expect to see?\r\n\r\nThe data-flow analyser should be able to delete useless arguments (and associated computations).\r\n\r\n5. What did you see instead?\r\n\r\nUseless instructions.\r\n\r\n",
	"user": {
		"login": "Julio-Guerra",
		"id": 172303,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-04-06T15:54:17Z",
	"created_at": "2016-04-06T12:15:12Z",
	"updated_at": "2016-04-06T15:54:17Z"
}
