{
	"id": 60957858,
	"number": 10152,
	"state": "open",
	"title": "runtime: inlined function doesn't appear in stack trace",
	"body": "Let's say I have a struct like the one below.\r\n\r\n    type st struct {\r\n    \ti *struct {\r\n\t\tj int\r\n    \t}\r\n    }\r\n\r\nSometimes I forget to check if a field is nil. If I do a return statement that ends up dereferencing a nil pointer, like http://play.golang.org/p/WzyNpsiBam, I would expect the stack trace from the panic to be on the same line as the return statement. Instead, the stack trace indicates that the nil pointer dereference happened on the same line as the caller.\r\n\r\nInterestingly, the same thing happens if I assign to a variable first.\r\nhttp://play.golang.org/p/M3q3cSLgBk\r\n\r\nIf I enter another function before returning the variable, the stack trace is correct.\r\nhttp://play.golang.org/p/eOZc34Uya7",
	"user": {
		"login": "stvnrhodes",
		"id": 1432746,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"created_at": "2015-03-13T01:49:51Z",
	"updated_at": "2016-01-25T19:54:57Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
