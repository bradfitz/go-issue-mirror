{
	"id": 186338352,
	"body": "I was so happy to see you mention your concurrent stack shrinking change in the reddit AMA, and look forward to seeing its details! Did you end up pursuing in-place shrinking with a buddy allocator?\r\n\r\nFor the real application, I've been able to get pause times to around 10-15ms by disabling stack shrinking and confining the program to a single NUMA node (before I learned of the MPOL_BIND trick), when running with around 250,000 goroutines. It's great to know they'll only be temporary workarounds. Thanks!\r\n\r\nStack shrinking is turned off for both of the test outputs I shared in this bug. I haven't dug into why the pauses are still 130ms when stack shrinking and NUMA migration are both disabled. How fast do you expect the pauses to be for the program I've included when running with 1e6 goroutines with 1kB stacks? How big does a program have to be in any dimension before the 10ms goal no longer applies?\r\n",
	"user": {
		"login": "rhysh",
		"id": 230685,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-19T18:10:46Z",
	"updated_at": "2016-02-19T18:10:46Z"
}
