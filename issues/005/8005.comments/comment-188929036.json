{
	"id": 188929036,
	"body": "That program is interesting; there are two things going on.\r\n\r\n(1) t gets stuffed into an `interface{}`, which generates a copy of t. Vet could (and probably should) be taught about that. For stuff like that, if the compiler can do it, vet can, and vice versa.\r\n\r\n(2) t gets hidden inside a reflect.Value. Neither vet nor the compiler can help 100% with that, although vet could issue a warning and the compiler can't (because the compiler doesn't do warnings and doesn't do false positives). In order to catch that in the general case, I think we'd need runtime support as well as compiler support; that's a bigger change.\r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-25T18:55:54Z",
	"updated_at": "2016-02-25T18:55:54Z"
}
