{
	"id": 188701677,
	"body": "I like this suggestion.\n\nOn Thu, 25 Feb 2016, 20:55 Roger Peppe \u003cnotifications@github.com\u003e wrote:\n\n\u003e govet is fine, but I wonder if a stronger guarantee, always checked by the\n\u003e compiler, might be better.\n\u003e\n\u003e How about this?\n\u003e\n\u003e The compiler provides a predefined zero-size type, say \"nocopy\" or\n\u003e \"static\".\n\u003e No value with this type may be copied.\n\u003e\n\u003e To mark a structure so that it can't be copied, just embed\n\u003e it in the struct:\n\u003e\n\u003e type Mutex struct {\n\u003e     nocopy\n\u003e     state int32\n\u003e     sema  uint32\n\u003e }\n\u003e\n\u003e This means that such structs must be initialised with a composite literal\n\u003e with keyed fields, but that's recommended practice anyway.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/8005#issuecomment-188697787\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-25T10:03:07Z",
	"updated_at": "2016-02-25T10:03:07Z"
}
