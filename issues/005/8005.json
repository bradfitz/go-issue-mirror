{
	"id": 51287533,
	"number": 8005,
	"state": "closed",
	"title": "runtime: add NoCopy documentation struct type?",
	"body": "\u003cpre\u003eFrom a conversation with Alan Donovan about how we might detect accidental copies of\ntypes that shouldn't be copyable, I proposed:\n\npackage runtime  // or wherever\n\n// NoCopy is an annotation that the containing type shouldn't be copied\n// by value. It has zero size so may be embedded freely.\ntype NoCopy struct{}\n\nThen we could do govet checks.\n\nOr even compiler checks (more controversial probably).\n\nThen sync.Cond and sync.Mutex could use it. The latter has no checks, because\nsync.Cond's runtime copyChecker takes up space.\n\nOnly tagging this Go1.4 for eventual discussion.\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Thinking"
		}
	],
	"comments": 42,
	"closed_at": "2016-03-01T14:50:59Z",
	"created_at": "2014-05-15T20:08:16Z",
	"updated_at": "2016-03-05T22:48:01Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
