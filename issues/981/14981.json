{
	"id": 143768871,
	"number": 14981,
	"state": "closed",
	"title": "net/http: http.MaxBytesReader has a bug",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\ngo version go1.6 windows/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nset GOARCH=amd64\r\nset GOBIN=\r\nset GOEXE=.exe\r\nset GOHOSTARCH=amd64\r\nset GOHOSTOS=windows\r\nset GOOS=windows\r\nset GOPATH=d:\\gopath\r\nset GORACE=\r\nset GOROOT=d:\\go\r\nset GOTOOLDIR=d:\\go\\pkg\\tool\\windows_amd64\r\nset GO15VENDOREXPERIMENT=1\r\nset CC=gcc\r\nset GOGCCFLAGS=-m64 -mthreads -fmessage-length=0\r\nset CXX=g++\r\nset CGO_ENABLED=1\r\n\r\n3. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n\r\nhttp://play.golang.org/p/bfo9_XiI49\r\n\r\n4. What did you expect to see?\r\n```\r\n----------------------------------------\r\n99 \u003cnil\u003e\r\n0 EOF\r\n0 EOF\r\n0 EOF\r\n----------------------------------------\r\n100 \u003cnil\u003e\r\n0 EOF\r\n0 EOF\r\n0 EOF\r\n----------------------------------------\r\n100 \u003cnil\u003e\r\n0 http: request body too large\r\n0 http: request body too large\r\n0 http: request body too large\r\n```\r\n\r\n5. What did you see instead?\r\n```\r\n----------------------------------------\r\n99 \u003cnil\u003e\r\n0 EOF\r\n0 EOF\r\n0 EOF\r\n----------------------------------------\r\n100 \u003cnil\u003e\r\n0 EOF\r\n0 http: request body too large\r\n0 http: request body too large\r\n----------------------------------------\r\n100 \u003cnil\u003e\r\n0 http: request body too large\r\n0 EOF\r\n0 http: request body too large\r\n```\r\n\r\nhere is my code to fix it.\r\n```Go\r\ntype maxBytesReader struct {\r\n\tw         ResponseWriter\r\n\tr         io.ReadCloser // underlying reader\r\n\tn         int64         // max bytes remaining\r\n\tstopped   bool\r\n\tsawEOF    bool\r\n\toverLimit bool\r\n}\r\n\r\nfunc (l *maxBytesReader) Read(p []byte) (n int, err error) {\r\n\ttoRead := l.n\r\n\tif l.n \u003c= 0 {\r\n\t\tif l.overLimit {\r\n\t\t\treturn l.tooLarge()\r\n\t\t}\r\n\t\tif l.sawEOF {\r\n\t\t\treturn 0, io.EOF\r\n\t\t}\r\n\t\t// The underlying io.Reader may not return (0, io.EOF)\r\n\t\t// at EOF if the requested size is 0, so read 1 byte\r\n\t\t// instead. The io.Reader docs are a bit ambiguous\r\n\t\t// about the return value of Read when 0 bytes are\r\n\t\t// requested, and {bytes,strings}.Reader gets it wrong\r\n\t\t// too (it returns (0, nil) even at EOF).\r\n\t\ttoRead = 1\r\n\t}\r\n\tif int64(len(p)) \u003e toRead {\r\n\t\tp = p[:toRead]\r\n\t}\r\n\tn, err = l.r.Read(p)\r\n\tif err == io.EOF {\r\n\t\tl.sawEOF = true\r\n\t}\r\n\tif l.n \u003c= 0 {\r\n\t\t// If we had zero bytes to read remaining (but hadn't seen EOF)\r\n\t\t// and we get a byte here, that means we went over our limit.\r\n\t\tif n \u003e 0 {\r\n\t\t\tl.overLimit = true\r\n\t\t\treturn l.tooLarge()\r\n\t\t}\r\n\t\treturn 0, err\r\n\t}\r\n\tl.n -= int64(n)\r\n\treturn\r\n}\r\n```\r\n\r\n",
	"user": {
		"login": "chanxuehong",
		"id": 3416908,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"closed_at": "2016-05-11T17:11:19Z",
	"created_at": "2016-03-27T02:16:28Z",
	"updated_at": "2016-05-11T17:11:19Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
