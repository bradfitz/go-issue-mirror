{
	"id": 145720076,
	"body": "What is `Log` exactly? Given there is `TestResult.Output`, I'd expect `Result.Log` to contain direct writes to `os.Stdout` in the test binary. Direct writes to `os.Stderr` would result in `Result` objects with `Log` property in stderr of `go test`.\r\n\r\nIf we implement framing that @rsc suggested, then `Result` should probably also have `Build string` field that would contain anything `go build` would print. At this time, only `-n` and `-x` causes `go test` to produce extra output. In json format it would be printed out as `{ \"Build\": \"mkdir ...\"}`.\r\n\r\nI'm proposing raw `Build string` in contrast to more semantic `\"Cmd string\"` for `-n`/`-x` because otherwise we would force ourself into a trap that any future `go build` output must have a field in `Result`.\r\n\r\nI can write a design doc if nobody minds.",
	"user": {
		"login": "nodirt",
		"id": 643254,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-06T01:47:24Z",
	"updated_at": "2015-10-06T01:56:52Z"
}
