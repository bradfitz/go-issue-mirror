{
	"id": 51286016,
	"number": 6981,
	"state": "closed",
	"title": "net/http: Request.Body should specify body is not closed on errors",
	"body": "by **michael.schurter**:\n\n\u003cpre\u003enet/http.Request.Body does not mention it will *not* get closed on errors:\n\n    // For client requests, a nil body means the request has no\n    // body, such as a GET request. The HTTP Client's Transport\n    // is responsible for calling the Close method.\n\nnet/http.RoundTripper does not mention Body will *not* get closed on errors:\n\n    // RoundTrip should not modify the request, except for\n    // consuming and closing the Body.\n\n\nnet/http.*Client.Do does not mention the behavior of Request.Body\n\n\nOnly net/http.*Client.Post hints the body is closed only when err == nil:\n\n    If the provided body is also an io.Closer, it is closed after the body is successfully written to the server.\n\n\n\nTherefore, only a consumer of the Post API will get a hint that the request body is only\nclosed on successful requests.\n\nIt would be nice if other methods of sending requests clarified the behavior.\n\n\nReasoning: if you're using io.Pipe() to transform your request body, it's very easy to\ndeadlock your process if you don't properly close the io.PipeReader.\nUnless you notice the *Client.Post docs, it takes a *lot* of digging through go's source\ncode to find precisely where request bodies are closed.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:38:51Z",
	"created_at": "2013-12-18T02:26:44Z",
	"updated_at": "2016-06-25T01:24:10Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
