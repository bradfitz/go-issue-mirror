{
	"id": 66080603,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2 by **tv@duh.org**:\n\n\u003cpre\u003eWell, it's very much a skeleton at the moment, but I've started brainstorm-implementing\na vfs type layer here:\n\n\u003ca href=\"https://github.com/tvierling/go-vfs\"\u003ehttps://github.com/tvierling/go-vfs\u003c/a\u003e\n\nThe basic planned structure is for two types of accessibility: an iterable-only,\nsequential-access interface (Ã  la most archives), and a random-path-access filesystem\nthat implements and extends the above with a full complement of operations (applicable\nto real filesystems, as well as virtual accessors that support path-type operations...\nsay, URIs or anything else that can be structured as a path tree).\n\nNot too sure where I'm going with it yet, but I'm open to ideas thrown in as issues on\nthe github repo.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-29T23:28:01Z",
	"updated_at": "2014-12-08T10:30:46Z"
}
