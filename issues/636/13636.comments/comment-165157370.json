{
	"id": 165157370,
	"body": "I think it's a combination of typedefs and macro defines, I tried chasing the maze a bit but it's hard to do by hand in particular when there are many conditional includes and defines.\r\nUnfortunately I could not come up with a simple test case and the actual case where it fails is more complicated and proprietary to post.\r\n\r\nFor now I solved the problem by converting [16]C.__u8 to a Go [16]byte right away and passing that to the function instead. It involves an extra copy, but in this case it's only 16 bytes so not a big deal.\r\n\r\nAs a general (perhaps temporary) solution, would it be possible to add an experimental cgo directive to declare identical types, e.g. __u8 == u8 == unsigned char?",
	"user": {
		"login": "bits01",
		"id": 10517679,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-16T16:05:15Z",
	"updated_at": "2015-12-16T16:05:15Z"
}
