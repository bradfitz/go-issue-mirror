{
	"id": 125202044,
	"number": 13841,
	"state": "open",
	"title": "runtime/pprof: CPU profiles incorrect for kernels with broken setitimer support",
	"body": "As of Go 1.6, pprof's CPU profiles are known to be incorrect on a few systems due to what are arguably kernel bugs. This issue documents those systems.\r\n\r\nThe text below distinguishes a profile being incomplete (missing profile samples for code that was running) from being incorrect (containing samples for code that wasn't running).\r\n\r\n* DragonflyBSD (all known versions): Delivers a profiling signal only when a thread runs continuously for an entire clock tick (20ms). In workloads with high context-switch or garbage collection rates, this may cause profiles to be incomplete.\r\n* Linux (without CONFIG_HIGH_RES_TIMERS=y): Delivers a profiling signal only when a thread runs continuously for an entire clock tick (often 10ms). In workloads with high context-switch or garbage collection rates, this may cause profiles to be incomplete. Most Linux kernels in use today do enable high-resolution timers and therefore do _not_ suffer from this problem.\r\n* NetBSD (all known versions): Delivers signals to the wrong thread. On such systems, profiles are commonly very incorrect.\r\n* OpenBSD (all known versions): Delivers a profiling signal only when a thread runs continuously for an entire clock tick (20ms). In workloads with high context-switch or garbage collection rates, this may cause profiles to be incomplete.\r\n* OS X (fixed in OS X 10.11 El Capitan): Deliver signals to the wrong thread. On such systems, profiles are commonly very incorrect. See rsc.io/pprof_mac_fix for a workaround on those early systems.\r\n* Solaris (fixed in Solaris 8): Delivers a profiling signal only when a thread runs continuously for an entire clock tick (10ms). In workloads with high context-switch or garbage collection rates, this may cause profiles to be incomplete. Solaris 8 fixes the problem on systems with APIC hardware (most x86 systems). On systems that continue to exhibit the problem, adding `set hires_tick = 1` to `/etc/system` can mitigate this problem somewhat by reducing the clock tick to 1ms.\r\n\r\nPlease comment on this issue only if the text above is incomplete or incorrect; we will keep this top-level comment up to date.",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"created_at": "2016-01-06T15:46:55Z",
	"updated_at": "2016-07-08T00:01:41Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
