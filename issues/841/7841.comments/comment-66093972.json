{
	"id": 66093972,
	"body": "\u003ca id=\"c24\"\u003e\u003c/a\u003eComment 24:\n\n\u003cpre\u003eI asked about PtrTo etc because the type that reflect is being asked about is an\nallocated pointer (the 40-bit number 0xc208248e10), which is either a\nruntime-constructed type or not a type at all (a bug). It seems likely to be a bug (and\nthe reason for the crash) but I'm not 100% sure. One thing that might be interesting\nwould be to edit reflect/type.go to put a print before the Implements method calls\nimplements:\n\nfunc (t *rtype) Implements(u Type) bool {\n        if u == nil {\n                panic(\"reflect: nil type passed to Type.Implements\")\n        }\n        if u.Kind() != Interface {\n                panic(\"reflect: non-interface type passed to Type.Implements\")\n        }\nprintln(\"reflect.implements\", u.(*rtype), t)\n        return implements(u.(*rtype), t)\n}\n\nand then run the program and see what kinds of values it prints normally and if they are\nobviously different for the crashing call. \n\nIn addition to that, it would be useful to turn off Debug=3 but then run with\nGODEBUG=allocfreetrace=1. That should not cause mixed output like the Debug=3 trace did.\nThere will be file names and function names in the trace. If you would prefer to mail me\nthe trace directly that's fine. If you want to go to the trouble to obfuscate the names\nyou can do that too but please do something deterministic so that the same name\nappearing multiple times gets the same rewrite each time.\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-05-14T14:07:04Z",
	"updated_at": "2014-12-08T10:43:29Z"
}
