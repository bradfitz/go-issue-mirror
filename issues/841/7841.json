{
	"id": 51287285,
	"number": 7841,
	"state": "closed",
	"title": "reflect: reflect.unpackEface reflect/value.go:174 unexpected fault address 0x0",
	"body": "by **toffaletti**:\n\n\u003cpre\u003eWhat does 'go version' print?\n\ngo version devel +f613443bb13a Tue Apr 22 21:12:15 2014 -0700 linux/amd64\n\nWhat steps reproduce the problem?\n\nI haven't been able to distill this to code I can share, but it involves concurrent\nrequests to an http server that spawns many goroutines and connects to other services to\nassemble results. The crash happens in the code that is writing the response back to the\nclient. The crash is repeatable, but only when access to the server is concurrent. I've\ncompiled the code with the race detector and it crashes before any data races are\ndiscovered.\n\nThe server has other resources which exercise most of the same code paths as the\ncrashing one but use static file input instead of talking to backend services and\nspawning goroutines. I've yet to reproduce the crash using these resources.\n\nThe crash is not repeatable on 1.2.1 and is data race clean for a large set of inputs.\n\nWhat happened?\n\nunexpected fault address 0x0                                                            \n                                                                                        \n                                                 fatal error: fault                     \n                                                                                        \n                                                                                        \n         [signal 0x7 code=0x80 addr=0x0 pc=0x5b4315]                                    \n                                                                                        \n                                                          \n\ngoroutine 115 [running]:\nruntime.throw(0x12e48d6)\n        /go/src/pkg/runtime/panic.c:520 +0x69 fp=0xc209eef238\nruntime.sigpanic()\n        /go/src/pkg/runtime/os_linux.c:232 +0x25b fp=0xc209eef250\nreflect.unpackEface(0x64616f6c6e776f64, 0x676e69, 0x0, 0x0, 0x0, 0x0)\n        /go/src/pkg/reflect/value.go:174 +0xd5 fp=0xc209eef2b0\nreflect.Value.Elem(0xa882c0, 0xc2098662d0, 0x0, 0x146, 0x0, 0x0, 0x0, 0x0)\n        /go/src/pkg/reflect/value.go:843 +0xdd fp=0xc209eef340\nencoding/json.interfaceEncoder(0xc209ab8160, 0xa882c0, 0xc2098662d0, 0x0, 0x146,\n0xa88200)\n        /go/src/pkg/encoding/json/encode.go:555 +0xc6 fp=0xc209eef390\nencoding/json.(*arrayEncoder).encode(0xc20815e248, 0xc209ab8160, 0xa73140, 0xc20855ab10,\n0x0, 0x176, 0x47e300)\n        /go/src/pkg/encoding/json/encode.go:685 +0x191 fp=0xc209eef410\nencoding/json.*arrayEncoder.(encoding/json.encode)·fm(0xc209ab8160, 0xa73140,\n0xc20855ab10, 0x0, 0x176, 0x47e300)\n        /go/src/pkg/encoding/json/encode.go:692 +0x70 fp=0xc209eef450\nencoding/json.(*sliceEncoder).encode(0xc20815e110, 0xc209ab8160, 0xa73140, 0xc20855ab10,\n0x0, 0x176, 0x100)\n        /go/src/pkg/encoding/json/encode.go:662 +0xf1 fp=0xc209eef490\nencoding/json.*sliceEncoder.(encoding/json.encode)·fm(0xc209ab8160, 0xa73140,\n0xc20855ab10, 0x0, 0x176, 0x0)\n        /go/src/pkg/encoding/json/encode.go:671 +0x70 fp=0xc209eef4d0\nencoding/json.(*structEncoder).encode(0xc209432030, 0xc209ab8160, 0xc41880,\n0xc20855aa80, 0x0, 0x196, 0x47e300)\n        /go/src/pkg/encoding/json/encode.go:582 +0x337 fp=0xc209eef648\nencoding/json.*structEncoder.(encoding/json.encode)·fm(0xc209ab8160, 0xc41880,\n0xc20855aa80, 0x0, 0x196, 0xc20855aa00)\n        /go/src/pkg/encoding/json/encode.go:596 +0x70 fp=0xc209eef688\nencoding/json.(*ptrEncoder).encode(0xc20815e180, 0xc209ab8160, 0xa615c0, 0xc209138b50,\n0x0, 0x166, 0x0)\n        /go/src/pkg/encoding/json/encode.go:704 +0x15d fp=0xc209eef6f8\nencoding/json.*ptrEncoder.(encoding/json.encode)·fm(0xc209ab8160, 0xa615c0,\n0xc209138b50, 0x0, 0x166, 0xa61500)\n        /go/src/pkg/encoding/json/encode.go:709 +0x70 fp=0xc209eef738\nencoding/json.(*arrayEncoder).encode(0xc20815e188, 0xc209ab8160, 0xa70080, 0xc20a4eec60,\n0x0, 0x172, 0x47e300)\n        /go/src/pkg/encoding/json/encode.go:685 +0x191 fp=0xc209eef7b8\nencoding/json.*arrayEncoder.(encoding/json.encode)·fm(0xc209ab8160, 0xa70080,\n0xc20a4eec60, 0x0, 0x172, 0x7fdb2af0c100)\n        /go/src/pkg/encoding/json/encode.go:692 +0x70 fp=0xc209eef7f8\nencoding/json.(*sliceEncoder).encode(0xc20815e190, 0xc209ab8160, 0xa70080, 0xc20a4eec60,\n0x0, 0x172, 0x47e300)\n        /go/src/pkg/encoding/json/encode.go:662 +0xf1 fp=0xc209eef838\nencoding/json.*sliceEncoder.(encoding/json.encode)·fm(0xc209ab8160, 0xa70080,\n0xc20a4eec60, 0x0, 0x172, 0xc20a4eec00)\n        /go/src/pkg/encoding/json/encode.go:671 +0x70 fp=0xc209eef878\nencoding/json.(*encodeState).reflectValue(0xc209ab8160, 0xa70080, 0xc20a4eec60, 0x0,\n0x172)\n        /go/src/pkg/encoding/json/encode.go:297 +0x93 fp=0xc209eef8b0\nencoding/json.(*encodeState).marshal(0xc209ab8160, 0xa70080, 0xc20a4eec60, 0x0, 0x0)\n        /go/src/pkg/encoding/json/encode.go:268 +0xf6 fp=0xc209eef900\nencoding/json.(*Encoder).Encode(0xc20945cb60, 0xa70080, 0xc20a4eec60, 0x0, 0x0)\n        /go/src/pkg/encoding/json/stream.go:161 +0xf4 fp=0xc209eef9b0\n\nWhat should have happened instead?\n\nPlease provide any additional information below.\n\nPerhaps related to #6788?\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 46,
	"closed_at": "2014-12-08T10:43:28Z",
	"created_at": "2014-04-23T07:00:24Z",
	"updated_at": "2016-06-25T01:32:51Z"
}
