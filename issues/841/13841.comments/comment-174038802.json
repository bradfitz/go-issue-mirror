{
	"id": 174038802,
	"body": "I don't believe the description of OpenBSD is entirely accurate.  In particular, OpenBSD's \"hard clock\" interrupt runs at 100Hz (i.e., 10ms clock tick intervals) on all CPUs supported by Go.  Also, I don't see any evidence that OpenBSD's kernel cares about whether the process was running for the full time slice; only that it was running when the interrupt fired.  The process may only have actually run for the last 1ms of the clock slice, but it will still have its timer credited for the full 10ms.\r\n\r\nLastly, I'm not sure it's relevant to the runtime/pprof tests, but for completeness: OpenBSD sends SIGPROF to the *process*, not the thread.  It's just that it favors sending to the running thread when possible.  If the interrupted thread has blocked SIGPROF and the process has other threads that are not blocking SIGPROF, the kernel will send SIGPROF to one of those instead.",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-22T20:34:29Z",
	"updated_at": "2016-01-22T20:34:29Z"
}
