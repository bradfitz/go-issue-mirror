{
	"id": 138385828,
	"number": 14635,
	"state": "open",
	"title": "runtime: add softfloat for mips64?",
	"body": "It seems most mips64 hardware don't have FPU, yet one of\r\nour tests test/bench/go1 is very heavy on floating point, so\r\neven on a 2GHz mips64 core, that test needs \u003e10mins alone,\r\nwhereas the whole all.bash completes in ~30mins. The problem\r\nis that we're using kernel to trap and emulate every single FP\r\ninstruction, which has extremely large overhead.\r\n\r\nI'm wondering if we should introduce softfloat for MIPS64 like\r\nwhat we did for GOARM=5.\r\n\r\nImplementation problems aside, the biggest question is how\r\nto enable or disable softfloat on the toolchain level? Should we\r\nintroduce a GOMIPS environment variable? Or should we just\r\nalways use insert calls to _sfloat before any consecutive FP\r\ninstructions, and make _sfloat does nothing if the system has\r\na FPU? I don't like the way GOARM works and I think it confuses\r\nmore than it helped. (Esp. modern ARM chips usually contain\r\nFPU whereas very few MIPS64 chips contain FPU.)\r\n\r\n\r\n/cc @cherrymui ",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2016-03-04T05:52:46Z",
	"updated_at": "2016-03-04T05:52:46Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
