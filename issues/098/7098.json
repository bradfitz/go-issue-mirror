{
	"id": 51286186,
	"number": 7098,
	"state": "closed",
	"title": "net: fix probabilities in shuffleByWeight",
	"body": "\u003cpre\u003eIt's a bit hard to reproduce since this method isn't exposed and doesn't have test cases\nI can see.\n\nWhen you have a DNS SRV entries with identical priorities and small weights, you don't\nget a uniform distribution.\n\nSay you have:\n\nserver-a priority:0 weight:1\nserver-b priority:0 weight:1\n\nI would expect that ~50% of the time in a large number of samples that I would get\nserver-a first in the list returned by LookupSRV.\n\nThat's not what happens here. It's more like a 70-30 split - consistently.\n\nIn dnsclient.go:\n\n  for sum \u0026gt; 0 \u0026amp;\u0026amp; len(addrs) \u0026gt; 1 {\n    s := 0\n    n := rand.Intn(sum + 1) \u0026lt;-- I believe this increment is not necessary.\n    for i := range addrs {\n      s += int(addrs[i].Weight)\u003c/pre\u003e",
	"user": {
		"login": "msolo",
		"id": 5078276,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 7,
	"closed_at": "2014-12-08T10:39:28Z",
	"created_at": "2014-01-10T18:37:00Z",
	"updated_at": "2016-06-25T01:25:21Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
