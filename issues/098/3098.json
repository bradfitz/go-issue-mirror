{
	"id": 51280121,
	"number": 3098,
	"state": "closed",
	"title": "exported converted booleans don't retain their converted type",
	"body": "by **ehog.hedge**:\n\n\u003cpre\u003eThis is using\n\n 9f37fbaa3d47+ tip\n FC14, AMD64\n\n[weekly 2012-02-14 does NOT have this problem]\n\nIt looks like some recent changes to ideal booleans (perhaps)\nhave messed something up over package boundaries. I reduced\na compilation failure [of code that compiled a couple of weeks\nago]  down to this test case:\n\n//////////////////////////////////////////////////////////////////////////\npackage B\n\ntype Boolean bool\n\nconst BTrue = Boolean(true)\n\ntype Thing interface { Do() }\n\nfunc (b Boolean) Do() {}\n\n/////////////////////////////////////////////////////////////////////////////\n\npackage main\n\nimport \u0026quot;B\u0026quot;\nimport \u0026quot;fmt\u0026quot;\n\nconst btrue = B.Boolean(true)\n\nfunc main() {\n       var t B.Thing = B.Boolean(true)\n       var u B.Thing = btrue\n       var v B.Thing = B.BTrue\n       fmt.Println(t, u, v)\n}\n\n////////////////////////////////////////////////////////////////////////////\n\nBUGS: go tool 6g B.go\nBUGS: go tool 6g -I. A.go\nA.go:11: cannot use B.BTrue (type bool) as type B.Thing in assignment:\n       bool does not implement B.Thing (missing Do method)\ngo tool 6g: exit status 1\n\n//////////////////////////////////////////////////////////////////////////////\n\nIt looks to me as though the exported B.BTrue has bee stripped\nof its Boolean wrapper. The local btrue, and an explicit\nconversion, both work ...\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:16:09Z",
	"created_at": "2012-02-21T20:25:00Z",
	"updated_at": "2016-06-24T21:28:22Z"
}
