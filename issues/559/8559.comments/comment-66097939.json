{
	"id": 66097939,
	"body": "\u003ca id=\"c13\"\u003e\u003c/a\u003eComment 13:\n\n\u003cpre\u003e\u003e I'm sorry, I'm not sure I really understand the question.  And perhaps this should go\nto the mailing list anyhow.\n\nOk, one more try and then I will go to the mailing list, if I am still motivated. \nThanks for making an effort to understand me.\n\n\n\u003e The import path for any package is set by the string used to import it.  The main\npackage--the one that runs the program--is never imported.\n\nComment #6 begs to differ: \"you can think of the main package as implicitly imported as\n\"main\" by the runtime package\".\n\n\n\u003e So there is no string to use.  Therefore, we use \"main\".  What else should we use?\n\nWell, if anyone else were to import the package, they would import it using the path to\nits source under GOPATH.  I suggest we use that same path when building it as a command\n\nFor example, when I run \"go install code.google.com/p/go.tools/cmd/godoc\", then I think\npackage main should have PkgPath==\"code.google.com/p/go.tools/cmd/godoc\".\n\n\n\u003e I think you are asking why, if the main package is imported, that does not set the\npackage for the main package that runs the program.\n\nThis is not what I am asking.\u003c/pre\u003e",
	"user": {
		"login": "gordonklaus",
		"id": 1638352,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-08-23T07:31:11Z",
	"updated_at": "2014-12-08T10:47:32Z"
}
