{
	"id": 51281729,
	"number": 4160,
	"state": "closed",
	"title": "compress/lzw Write() reports incorrect number of bytes written",
	"body": "by **peter.waller**:\n\n\u003cpre\u003eThe following code fails:\n\n\n\tpackage main\n\n\timport (\n\t\t\u0026quot;bytes\u0026quot;\n\t\t\u0026quot;compress/lzw\u0026quot;\n\t\t\u0026quot;io\u0026quot;\n\t\t\u0026quot;log\u0026quot;\n\t)\n\n\tfunc main() {\n\t\tcompressed_data := new(bytes.Buffer)\n\t\twcd := lzw.NewWriter(compressed_data, lzw.LSB, 8)\n\n\t\ts := \u0026quot;asdf\u0026quot;\n\t\tn, err := wcd.Write([]byte(s))\n\t\tif n != len(s) {\n\t\t\tlog.Fatalf(\u0026quot;Didn't write the correct number of bytes. \u0026quot;+\n\t\t\t\t\u0026quot;Expected %d, got %d, err = %v\u0026quot;, len(s), n, err)\n\t\t}\n\t}\n\nIn turn, this means that it's not possible to use io.Copy() to copy a reader to an lzw\nwriter, because that fails due to a \u0026quot;short write\u0026quot;.\n\nI believe this issue is caused by an incorrect calculation of the length of the number\nof bytes written, which is computed as the `len(p)` where the byte slice `p` is\nconditionally truncated:\n\n\u003ca href=\"http://code.google.com/p/go/source/browse/src/pkg/compress/lzw/writer.go?r=99bb8c9e067d#143\"\u003ehttp://code.google.com/p/go/source/browse/src/pkg/compress/lzw/writer.go?r=99bb8c9e067d#143\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:22:06Z",
	"created_at": "2012-09-26T12:13:13Z",
	"updated_at": "2016-06-24T22:25:37Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
