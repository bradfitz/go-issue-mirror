{
	"id": 51283215,
	"number": 5160,
	"state": "open",
	"title": "runtime: optionally allow callers to intern strings",
	"body": "\u003cpre\u003eDuplicate strings can waste memory and cause lots of allocations, but may be cheaper at\nallocation time.\n\nInterning strings has a lookup cost, but can save memory and even CPU by reduced number\nof GCs.\n\nI'd like to have this choice, for when I know my strings are large and likely duplicates.\n\nManual interning in user code,\n\n  var internedStrings struct{\n     sync.RWMutex\n     m map[string]string\n  }\n\n... leads to lock contention and a map that grows forever.\n\nThe runtime could have a less contentious map and could integrate with the garbage\ncollector, such that strings that are only referenced from the intern table to\nthemselves are still collected and removed from the internal map.\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "GarbageCollector"
		},
		{
			"name": "Performance"
		}
	],
	"comments": 12,
	"created_at": "2013-03-29T23:44:50Z",
	"updated_at": "2015-04-14T19:45:19Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
