{
	"id": 251580953,
	"body": "FWIW I looked at the code and though about this for a few minutes.\r\n\r\nReader.Read will currently always return (Record, nil) on EOF and (nil, EOF)\\*\\* on the next call if no other error happens. In fact it will always return either a Record or an error except when FieldsPerRecord is set and doesn't match the colums read.\r\n\r\nThis could be changed to return a Record (if any) even if there was an error (as with the FieldsPerRecord case) but the current implementation of parseRecord (which is used by Read) only returns a Record *and* an error if the error is io.EOF, which means the only noticeable change would be that Read could now report (Record, EOF) in addition to (nil, EOF).\r\n\r\nI'm in favor of keeping the current implementation and just extending the comment with something like\r\n\r\n```go\r\n// If Read encounters the end of the input and the row was not empty,\r\n// it will return the record without an error. Otherwise it will return\r\n// no record and io.EOF.\r\n```\r\n\r\n\\*\\* Note that this is not necessarily true. I haven't looked at the code of bufio.Reader (which csv.Reader uses), but technically the next error will be whatever the bufio.Reader returns on the next call.",
	"user": {
		"login": "nuss-justin",
		"id": 6443781,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-05T04:47:50Z",
	"updated_at": "2016-10-05T04:47:50Z"
}
