{
	"id": 96323189,
	"body": "Yeah, the feature does make sense for certain applications where\nyou can trust the content to be the \"normal\" zip files, so implementing it\nas a go-gettable package would be great (I think you can reuse a lot of\nthe code in the package). But for the standard archive/zip package, I\nthink we'd better not introduce non-general interfaces that might have\nsecurity issues if used improperly.\n\nThanks.\n\nPS: if your installer unzip file directly from http/https, you use use one\nof\nthe range request adapters (search godoc or golang-nuts) that turns\nany idempotent http response into seekable stream and then use the\nstandard archive/zip. As long as you extract strictly according to the order\nin the zip file, I don't think the performance will be that bad (basically\nit will\nfirst seek to the end, read the central directories and then go back to\nthe beginning and extract files.)\n",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-04-26T04:48:01Z",
	"updated_at": "2015-04-26T04:48:01Z"
}
