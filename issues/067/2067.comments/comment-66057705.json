{
	"id": 66057705,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3 by **christopher.helck**:\n\n\u003cpre\u003eI have a greatly simplified the program that produces the same problem:\n---------------------------\npackage main\n\nimport (\n\t\"gob\"\n\t\"os\"\n\t\"runtime\"\n)\n\ntype Pile map[int][]int\n\nfunc NewPile() *Pile {\n\tp := make(Pile)\n\tfor i := 0; i\u0026lt;50000; i++ {\n\t\tp[i] = append(p[i], 16)\n\t}\n\treturn \u0026p\n}\n\nfunc save(pile *Pile) os.Error {\n\tf, _ := os.Create(\"/dev/null\")\n\tdefer f.Close()\n\n\tencoder := gob.NewEncoder(f)\n\treturn encoder.Encode(*pile)\n}\n\nfunc main() {\n\tpile := NewPile()\n\tfor {\n\t\tsave(pile)\n\t}\n\truntime.GC()                 // Move this inside loop for more detail\n}\n--------------------------------------\nI run with GOGCTRACE enabled. I've modified malloc.goc so the trace prints the before\nand after heap size in bytes, not MBytes. Here is the output:\n-----------------------------------------------\ngc1: 0+0+0 ms 96640 -\u0026gt; 95824 Bytes 931 -\u0026gt; 865 (931-66) objects 493 pointer lookups\n(477 size, 16 addr)\ngc2: 0+0+0 ms 367264 -\u0026gt; 365280 Bytes 2968 -\u0026gt; 2927 (3034-107) objects 701 pointer\nlookups (617 size, 84 addr)\ngc3: 4+0+0 ms 732232 -\u0026gt; 732232 Bytes 15754 -\u0026gt; 15754 (15861-107) objects 7606\npointer lookups (4064 size, 3542 addr)\ngc4: 2+0+0 ms 1466264 -\u0026gt; 1466264 Bytes 38411 -\u0026gt; 38411 (38518-107) objects 8914\npointer lookups (4714 size, 4200 addr)\ngc5: 3+0+0 ms 2935936 -\u0026gt; 2796032 Bytes 72752 -\u0026gt; 63652 (72859-9207) objects 8994\npointer lookups (4760 size, 4234 addr)\ngc6: 4+6+0 ms 6173296 -\u0026gt; 4102216 Bytes 204690 -\u0026gt; 63691 (213897-150206) objects\n9033 pointer lookups (4770 size, 4263 addr)\ngc7: 5+8+0 ms 8209064 -\u0026gt; 5388472 Bytes 248997 -\u0026gt; 63718 (399203-335485) objects\n9041 pointer lookups (4772 size, 4269 addr)\ngc8: 6+12+0 ms 10778976 -\u0026gt; 6912512 Bytes 322731 -\u0026gt; 63748 (658216-594468) objects\n9057 pointer lookups (4777 size, 4280 addr)\ngc9: 7+13+0 ms 13829464 -\u0026gt; 9271944 Bytes 363864 -\u0026gt; 63782 (958332-894550) objects\n9099 pointer lookups (4781 size, 4318 addr)\ngc10: 9+16+0 ms 18800728 -\u0026gt; 13089632 Bytes 444930 -\u0026gt; 63837 (1339480-1275643)\nobjects 9156 pointer lookups (4789 size, 4367 addr)\ngc11: 12+24+0 ms 26297760 -\u0026gt; 18025816 Bytes 626354 -\u0026gt; 63923 (1901997-1838074)\nobjects 9228 pointer lookups (4801 size, 4427 addr)\ngc12: 15+34+0 ms 36199752 -\u0026gt; 24412032 Bytes 851764 -\u0026gt; 64027 (2689838-2625811)\nobjects 9330 pointer lookups (4814 size, 4516 addr)\ngc13: 21+49+0 ms 48828304 -\u0026gt; 32676536 Bytes 1116077 -\u0026gt; 64176 (3741888-3677712)\nobjects 9514 pointer lookups (4834 size, 4680 addr)\ngc14: 39+64+0 ms 65942248 -\u0026gt; 44057552 Bytes 1487501 -\u0026gt; 64374 (5165213-5100839)\nobjects 9697 pointer lookups (4863 size, 4834 addr)\ngc15: 47+100+0 ms 88115592 -\u0026gt; 58946240 Bytes 1990836 -\u0026gt; 64640 (7091675-7027035)\nobjects 9966 pointer lookups (4897 size, 5069 addr)\ngc16: 47+114+0 ms 117895344 -\u0026gt; 79621232 Bytes 2594030 -\u0026gt; 64981 (9621065-9556084)\nobjects 10334 pointer lookups (4944 size, 5390 addr)\ngc17: 62+151+0 ms 159322216 -\u0026gt; 108207376 Bytes 3486504 -\u0026gt; 65459\n(13042588-12977129) objects 10823 pointer lookups (5006 size, 5817 addr)\ngc18: 82+208+0 ms 216417552 -\u0026gt; 146541504 Bytes 4731204 -\u0026gt; 66120\n(17708333-17642213) objects 11447 pointer lookups (5091 size, 6356 addr)\ngc19: 113+273+0 ms 293086192 -\u0026gt; 198624832 Bytes 6376653 -\u0026gt; 67055\n(24018866-23951811) objects 12441 pointer lookups (5209 size, 7232 addr)\ngc20: 153+429+0 ms 397252440 -\u0026gt; 269071360 Bytes 8621778 -\u0026gt; 68264\n(32573589-32505325) objects 13779 pointer lookups (5365 size, 8414 addr)\nruntime: memory allocated by OS not in usable range\nruntime: memory allocated by OS not in usable range\nruntime: out of memory: cannot allocate 65536-byte block (536870912 in use)\nthrow: out of memory\n\nruntime.throw+0x43 /home/chris/go/src/pkg/runtime/runtime.c:102\n\truntime.throw(0x8119080, 0x20)\nruntime.MCache_Alloc+0x8f /home/chris/go/src/pkg/runtime/mcache.c:26\n\truntime.MCache_Alloc(0x38f000, 0x2, 0x10, 0x1, 0xb77cfff0, ...)\nruntime.mallocgc+0xeb /home/chris/go/src/pkg/runtime/malloc.c:36\n\truntime.mallocgc(0x10, 0x0, 0x1, 0x1, 0x806cd05, ...)\nruntime.mal+0x43 /home/chris/go/src/pkg/runtime/malloc.c:301\n\truntime.mal(0xc, 0x80985b0)\nunsafe.New+0x84 /home/chris/go/src/pkg/runtime/iface.c:763\n\tunsafe.New(0x80b4e1c, 0x80985b0, 0x80b4e1c, 0x80985b0)\nreflect.New+0x70 /home/chris/go/src/pkg/reflect/value.go:1679\n\treflect.New(0x977e7240, 0x80985b0, 0x0, 0x977e7240)\ngob.unsafeAddr+0x74 /home/chris/go/src/pkg/gob/decode.go:1264\n\tgob.unsafeAddr(0x80985a8, 0xb77cfff0, 0x0, 0xb77ce401, 0x3, ...)\ngob.encodeReflectValue+0xdf /home/chris/go/src/pkg/gob/encode.go:405\n\tgob.encodeReflectValue(0xb6c202a0, 0x80985a8, 0xb77cfff0, 0x0, 0x978522a0, ...)\ngob.*Encoder·encodeMap+0x130 /home/chris/go/src/pkg/gob/encode.go:419\n\tgob.*Encoder·encodeMap(0xb57e7a20, 0xb57e7a4c, 0x809970c, 0x977dd8c0, 0x0, ...)\ngob._func_015+0x113 /home/chris/go/src/pkg/gob/encode.go:564\n\tgob._func_015(0x97abc170, 0x97abc178, 0x97abc190, 0x97abc180, 0x97abc198, ...)\ngob.*Encoder·encodeSingle+0xa8 /home/chris/go/src/pkg/gob/encode.go:355\n\tgob.*Encoder·encodeSingle(0xb57e7a20, 0xb57e7a4c, 0x977de6b0, 0xb760aa50, 0x8099714, ...)\ngob.*Encoder·encode+0x181 /home/chris/go/src/pkg/gob/encode.go:689\n\tgob.*Encoder·encode(0xb57e7a20, 0xb57e7a4c, 0x809970c, 0x977dd8c0, 0x0, ...)\ngob.*Encoder·EncodeValue+0x1b8 /home/chris/go/src/pkg/gob/encoder.go:236\n\tgob.*Encoder·EncodeValue(0xb57e7a20, 0x809970c, 0x977dd8c0, 0x0, 0x0, ...)\ngob.*Encoder·Encode+0x46 /home/chris/go/src/pkg/gob/encoder.go:168\n\tgob.*Encoder·Encode(0xb57e7a20, 0x809970c, 0x977dd8c0, 0x977dd8c0, 0xb6c200a0, ...)\nmain.save+0xb9 /home/chris/gotest/src/gobble/memory/main.go:25\n\tmain.save(0x977d05f8, 0x0, 0x0)\nmain.main+0x32 /home/chris/gotest/src/gobble/memory/main.go:31\n\tmain.main()\nruntime.mainstart+0xf /home/chris/go/src/pkg/runtime/386/asm.s:93\n\truntime.mainstart()\nruntime.goexit /home/chris/go/src/pkg/runtime/proc.c:244\n\truntime.goexit()\n----- goroutine created by -----\n_rt0_386+0xc1 /home/chris/go/src/pkg/runtime/386/asm.s:80\n-----------------------------------------------\nIf I change the code and place the runtime.GC() inside the loop then I get lots of lines\nlike these:\n------------------------------------------\n\ngc41: 26+6+0 ms 46841144 -\u0026gt; 44562568 Bytes 214148 -\u0026gt; 64121 (5465242-5401121)\nobjects 9643 pointer lookups (4840 size, 4803 addr)\ngc42: 27+6+0 ms 48057656 -\u0026gt; 45508768 Bytes 214161 -\u0026gt; 64135 (5615282-5551147)\nobjects 9657 pointer lookups (4843 size, 4814 addr)\ngc43: 28+6+0 ms 48930128 -\u0026gt; 46651552 Bytes 214173 -\u0026gt; 64146 (5765320-5701174)\nobjects 9673 pointer lookups (4844 size, 4829 addr)\n------------------------------------------------\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-07-24T04:16:13Z",
	"updated_at": "2014-12-22T05:57:05Z"
}
