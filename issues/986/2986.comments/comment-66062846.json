{
	"id": 66062846,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eI think it is a mistake to close this issue. I don't think it is related to\n\u003ca href=\"https://golang.org/issue/2920\"\u003ehttps://golang.org/issue/2920\u003c/a\u003e.\n\nI think make.bash can't be used to compile windows binaries on linux. It can't be used\nfor cross-compiling as is.\n\nTo cross-compile, just build \"native\" tools by running ./make.bash, then build\ncorrespondent version of runtime. For example, when using linux, you could build windows\nruntime like:\n\nGOOS=windows go tool dist install pkg/runtime\n\nOnce runtime is done, you could build and install any windows program or package by\n\nGOOS=windows go install \u0026lt;import_path\u0026gt;\n\nAdd $GOARCH everywhere if you \"native\" and \"cross-compiled\" cpus are different too.\n\nGOOS=windows GOARCH=386 go tool dist install pkg/runtime\nGOOS=windows GOARCH=386 go install \u0026lt;import_path\u0026gt;\n\nIn that case, you might also have to build correspondent compilers first. For example,\nif building windows/386 binaries on linux/amd64, you would have to build all 8*\ncompilers by hand:\n\ngo tool dist install cmd/8c\ngo tool dist install cmd/8a\ngo tool dist install cmd/8g\ngo tool dist install cmd/8l\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-02-12T07:08:20Z",
	"updated_at": "2014-12-22T06:09:37Z"
}
