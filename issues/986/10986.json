{
	"id": 82442340,
	"number": 10986,
	"state": "closed",
	"title": "runtime: GC pause on Go 1.5 is much longer than Go 1.4 when there is a map with lots of entries.",
	"body": "Go version is 1.4.2 and `Go devel +80864cf Fri May 29 04:33:15 2015 +0000`.\r\nOS is linux/amd64.\r\n\r\nGC pause time is about 600ms on Go 1.5 and 300ms on Go 1.4.\r\n\r\nSample code to test GC pause time.\r\n\r\n    package main\r\n\t\r\n\timport (\r\n\t\t\"fmt\"\r\n\t\t\"runtime\"\r\n\t\t\"runtime/debug\"\r\n\t\t\"time\"\r\n\t)\r\n\t\r\n\tfunc GCPause() time.Duration {\r\n\t\truntime.GC()\r\n\t\tvar stats debug.GCStats\r\n\t\tdebug.ReadGCStats(\u0026stats)\r\n\t\treturn stats.Pause[0]\r\n\t}\r\n\t\r\n\tfunc main() {\r\n\t\tn := 3000 * 1000\r\n\t\tm := make(map[string][]byte)\r\n\t\tfor i := 0; i \u003c n; i++ {\r\n\t\t\tkey := fmt.Sprintf(\"key%v\", i)\r\n\t\t\tval := make([]byte, 10)\r\n\t\t\tm[key] = val\r\n\t\t}\r\n\t\tfmt.Println(\"GC pause with 3 million map entries:\", GCPause())\r\n\t}",
	"user": {
		"login": "coocood",
		"id": 891222,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2015-05-29T15:56:01Z",
	"created_at": "2015-05-29T14:05:16Z",
	"updated_at": "2016-06-25T02:09:47Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
