{
	"id": 205812374,
	"body": "I am going to propose the following patch:\r\n```\r\n    Author: Breno Leitao \u003cbreno.leitao@gmail.com\u003e\r\n    Date:   Mon Apr 4 16:09:55 2016 -0400\r\n\r\n    Increase _MaxGomaxprocs to support big machines\r\n    \r\n    Currently go does not support machines that contains \u003e 256 CPUs, as IBM's E880\r\n    that could host 1536 hardware thread, when configured with 192 CPU cores and\r\n    SMT (Symmetric Multi Thread) 8.\r\n    \r\n    For example, when running a go program on this machine, I got, the following\r\n    problem[1]:\r\n    \r\n      procresize: invalid arg\r\n    \r\n    This is because of the following code:\r\n    \r\n      _MaxGomaxprocs = 1 \u003c\u003c 8\r\n    \r\n      if old \u003c 0 || old \u003e _MaxGomaxprocs || nprocs \u003c= 0 || nprocs \u003e _MaxGomaxprocs {\r\n          throw(\"procresize: invalid arg\")\r\n      }\r\n    \r\n    This patch just redefine _MAxGomaxprocs to 1 \u003c\u003c 12.\r\n\r\ndiff --git a/src/runtime/runtime2.go b/src/runtime/runtime2.go\r\nindex e0137f7..508cecb 100644\r\n--- a/src/runtime/runtime2.go\r\n+++ b/src/runtime/runtime2.go\r\n@@ -472,7 +472,7 @@ type p struct {\r\n const (\r\n \t// The max value of GOMAXPROCS.\r\n \t// There are no fundamental restrictions on the value.\r\n-\t_MaxGomaxprocs = 1 \u003c\u003c 8\r\n+\t_MaxGomaxprocs = 1 \u003c\u003c 12\r\n )\r\n \r\n type schedt struct {\r\n\r\n```",
	"user": {
		"login": "leitao",
		"id": 148379,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-05T13:46:31Z",
	"updated_at": "2016-04-05T13:49:28Z"
}
