{
	"id": 177301579,
	"number": 17131,
	"state": "open",
	"title": "net: UnixListener.Close can be dangerous",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### What version of Go are you using (`go version`)?\r\ngo version devel +7f583a4 Wed Sep 14 13:28:13 2016 +0000 linux/amd64\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"\"\r\nGORACE=\"\"\r\nGOROOT=\"/home/moroz/go\"\r\nGOTOOLDIR=\"/home/moroz/go/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build862845019=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n### What did you do?\r\nHere is simple program which shows the problem:\r\nhttps://gist.github.com/7595f6db11d7202cb3fa12e64a862c61\r\n\r\n### What did you expect to see?\r\nUnixListener.Close() unlinks unix-socket only once.\r\n\r\n### What did you see instead?\r\nUnixListener.Close() unconditionally unlinks unix-socket file - with closed listener you can unlink it again, Close will return an error, but file will be deleted anyway.\r\n\r\nI've encountered this problem when worked with grpc, which supposed that it's safe to call Close() multiple times and actually I thought so, too.\r\nI wonder if it's too bad to have sync.Once there.\r\nThanks!\r\n\r\n",
	"user": {
		"login": "LK4D4",
		"id": 101445,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "NeedsFix"
		}
	],
	"comments": 1,
	"created_at": "2016-09-15T22:05:28Z",
	"updated_at": "2016-10-07T18:57:20Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
