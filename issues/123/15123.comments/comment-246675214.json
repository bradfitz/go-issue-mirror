{
	"id": 246675214,
	"body": "@noblehng Wire protocols often support setting the transaction level in the protocol itself. Like types the ISO standard defines a set number of types. Unlike types, databases rarely deviate from that list.\r\n\r\nI agree that different database implementations will give slightly different meaning to different iso levels. However here are the levels I would define:\r\n```\r\ntype Isolation byte\r\nconst (\r\n    IsoDefault Isolation = iota * 2\r\n    IsoReadUncommited\r\n    IsoReadCommited\r\n    IsoWriteCommited\r\n    IsoRepeatableRead\r\n    IsoSerializable\r\n    IsoSnapshot\r\n    IsoLinearizable\r\n)\r\n\r\nconst IsoReadOnly Isolation = 1\r\n```\r\nIf you can't fit your isolation level into one of those logical levels, it probably isn't a transactional database. There are implementation differences, but there are only so many logical ways to read and write data concurrently.\r\n\r\nFor example, in some database drivers, `IsoSerializable` and `IsoSnapshot` could mean the same level and IsoLinearizable would return `errIsoNotSupported` and that's okay to me.",
	"user": {
		"login": "kardianos",
		"id": 755121,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-13T13:08:29Z",
	"updated_at": "2016-09-13T13:09:40Z"
}
