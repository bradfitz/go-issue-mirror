{
	"id": 246577786,
	"body": "About transaction isolation level, almost all database could set it and the access mode after the transaction begin with a `SET TRANSACTION ...` statement, so a *Tx.Exec() could already do that.\r\n\r\nIf it would be set when start a tranction, the signature should like `func (*DB) BeginContext(ctx context.Context, flags uint32) (*Tx, error)`, and the meaning of the flags should be driver defined.\r\n\r\nThe reason is that different databases could have different flags or different value for a same meaning flag. And most importantly, different databases or even different database versions have different meaning for a same isolation level name. For example, Oracle's serializable is just snapshot isolation, which is repeatable read in current PostgreSQL, and which in turn is stricter than repeatable read defined by SQL-92 but still not true serializable.",
	"user": {
		"login": "noblehng",
		"id": 6649504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-13T05:25:40Z",
	"updated_at": "2016-09-13T05:27:03Z"
}
