{
	"id": 110443455,
	"body": "I don't follow, Rick.\r\nWhat is \"pointer returned by the allocation\"?\r\n\r\nI mean the scenario that I already described in:\r\nhttps://github.com/golang/go/issues/9984#issuecomment-103009836\r\n\r\nNamely:\r\nObject at pointer P is free and contains garbage from the previous life.\r\nThread 1 allocates P and zeroes the object at P.\r\nThread 1 write pointer P into heap.\r\nGC thread 2 independently discovers pointer P and starts scanning it.\r\nThread 2 reads a pointer from object pointed to by P.\r\nNow, there is nothing that guarantees that thread 2 won't see the relic garbage in the pointer slot.\r\nGC explodes on invalid pointer.\r\n",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-06-09T17:42:06Z",
	"updated_at": "2015-06-09T17:42:06Z"
}
