{
	"id": 51287098,
	"number": 7710,
	"state": "closed",
	"title": "cmd/gc: pessimistic escape analysis",
	"body": "\u003cpre\u003ego version devel +2e0890c1d9d6 Fri Apr 04 08:15:27 2014 -0700 linux/amd64\n\nBuild the following program with:\n$ go tool 6g -m /tmp/escape.go\n\npackage main\nimport \u0026quot;fmt\u0026quot;\ntype T struct {\n\tx int\n}\nfunc noescape(p **T) {\n\tt := *p\n\tfmt.Println(t)\n}\nfunc main() {\n\tt := \u0026amp;T{42}\n\tnoescape(\u0026amp;t)\n}\n\n\u003ca href=\"http://play.golang.org/p/-6e2VTI_nU\"\u003ehttp://play.golang.org/p/-6e2VTI_nU\u003c/a\u003e\n\n/tmp/escape.go:9: leaking param: p\n/tmp/escape.go:11: noescape ... argument does not escape\n/tmp/escape.go:15: moved to heap: t\n/tmp/escape.go:16: \u0026amp;t escapes to heap\n/tmp/escape.go:15: \u0026amp;T literal escapes to heap\n\nParam p is not leaking here.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Performance"
		}
	],
	"comments": 4,
	"closed_at": "2015-05-11T17:42:57Z",
	"created_at": "2014-04-04T18:08:17Z",
	"updated_at": "2016-06-25T01:31:31Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
