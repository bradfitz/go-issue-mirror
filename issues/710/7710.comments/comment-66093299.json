{
	"id": 66093299,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eFWIW, I've hit this during runtime C-\u003eGo conversion of netpoll. The code is:\n\n// make pd ready, newly runnable goroutines (if any) are enqueued info gpp list\nfunc netpollReady(gpp **g, pd *pollDesc) {\n\tgp := netpollUnblock(pd, 'r', true)\n\tif gp != nil {\n\t\tgp.schedlink = *gpp\n\t\t*gpp = gp\n\t}\n}\n\nfunc netpoll(block bool) (gp *g) {\n...\n\t\t\t\tnetpollReady(\u0026gp, (*pollDesc)(ev.udata), mode)\n...\n\treturn\n}\n\nHere gp in netpoll somehow escapes to heap. I believe it is not.\n\nWe can't allocate in that code, so it's not just performance issue.\nWe need either fix this issue, or figure out some workaround.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-08-28T12:13:10Z",
	"updated_at": "2014-12-08T10:42:47Z"
}
