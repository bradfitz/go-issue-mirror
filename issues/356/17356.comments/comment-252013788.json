{
	"id": 252013788,
	"body": "Because the package is being compiled in C99 mode, a function that is plain `inline` (not `extern inline` or `static inline`) does not provide a definition if the function is not inlined.  That is what is happening here.  clang decides not to inline the function, so it discards the function definition.  In effect, this kind of `inline` function is like a macro: if you don't define it nothing appears in the object file.\r\n\r\nThis is an issue that occurs in plain C as well.  It has nothing to do with Go as such.  The code only works if the compiler decides to inline all functions.\r\n\r\nThe simple fix is to change the comment in the matching_cgo.go to use `static inline` instead.\r\n\r\nClosing because there is nothing to fix in Go.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-06T16:20:44Z",
	"updated_at": "2016-10-06T16:20:44Z"
}
