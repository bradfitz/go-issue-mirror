{
	"id": 67351994,
	"body": "I have some more information.   I rolled back the version of github.com/mattn/go-sqlite3 to a previous version where the only thing that changed is the amalgamated sqlite3 code.  The stars aligned such that the bug was not hit.  I instrumented the code in sqlite3 so i could dump the aSyscall array and observe the function pointers it was using for the different kernel32 functions.\r\n\r\nWhen everything is working, every function pointer in the aSyscall array properly points to the import thunks for the kernel32 functions:\r\n\r\n```\r\naSyscall[0]: current=0000000000642FF0 default=0000000000000000 name=AreFileApisANSI\r\naSyscall[1]: current=0000000000000000 default=0000000000000000 name=CharLowerW\r\naSyscall[2]: current=0000000000000000 default=0000000000000000 name=CharUpperW\r\naSyscall[3]: current=0000000000642FF8 default=0000000000000000 name=CloseHandle\r\naSyscall[4]: current=0000000000643000 default=0000000000000000 name=CreateFileA\r\naSyscall[5]: current=0000000000643008 default=0000000000000000 name=CreateFileW\r\naSyscall[6]: current=0000000000643010 default=0000000000000000 name=CreateFileMappingA\r\naSyscall[7]: current=0000000000643018 default=0000000000000000 name=CreateFileMappingW\r\naSyscall[8]: current=0000000000643020 default=0000000000000000 name=CreateMutexW\r\naSyscall[9]: current=0000000000643028 default=0000000000000000 name=DeleteFileA\r\naSyscall[10]: current=0000000000643030 default=0000000000000000 name=DeleteFileW\r\naSyscall[11]: current=0000000000000000 default=0000000000000000 name=FileTimeToLocalFileTime\r\naSyscall[12]: current=0000000000000000 default=0000000000000000 name=FileTimeToSystemTime\r\naSyscall[13]: current=0000000000643038 default=0000000000000000 name=FlushFileBuffers\r\naSyscall[14]: current=0000000000643040 default=0000000000000000 name=FormatMessageA\r\naSyscall[15]: current=0000000000643048 default=0000000000000000 name=FormatMessageW\r\n.... and so on\r\n```\r\n\r\nThe dissassembly for the import thunks:\r\n```\r\n00000000`00642ff0 ff242580416400  jmp     qword ptr [a_out!crosscall2+0x2094a0 (00000000`00644180)]\r\n00000000`00642ff7 90              nop\r\n00000000`00642ff8 ff242588416400  jmp     qword ptr [a_out!crosscall2+0x2094a8 (00000000`00644188)]\r\n00000000`00642fff 90              nop\r\n00000000`00643000 ff242590416400  jmp     qword ptr [a_out!crosscall2+0x2094b0 (00000000`00644190)]\r\n00000000`00643007 90              nop\r\n00000000`00643008 ff2425a8416400  jmp     qword ptr [a_out!crosscall2+0x2094c8 (00000000`006441a8)]\r\n00000000`0064300f 90              nop\r\n00000000`00643010 ff242598416400  jmp     qword ptr [a_out!crosscall2+0x2094b8 (00000000`00644198)]\r\n00000000`00643017 90              nop\r\n00000000`00643018 ff2425a0416400  jmp     qword ptr [a_out!crosscall2+0x2094c0 (00000000`006441a0)]\r\n00000000`0064301f 90              nop\r\n00000000`00643020 ff2425b0416400  jmp     qword ptr [a_out!crosscall2+0x2094d0 (00000000`006441b0)]\r\n00000000`00643027 90              nop\r\n00000000`00643028 ff2425b8416400  jmp     qword ptr [a_out!crosscall2+0x2094d8 (00000000`006441b8)]\r\n00000000`0064302f 90              nop\r\n00000000`00643030 ff2425c0416400  jmp     qword ptr [a_out!crosscall2+0x2094e0 (00000000`006441c0)]\r\n00000000`00643037 90              nop\r\n00000000`00643038 ff2425c8416400  jmp     qword ptr [a_out!crosscall2+0x2094e8 (00000000`006441c8)]\r\n00000000`0064303f 90              nop\r\n00000000`00643040 ff2425d0416400  jmp     qword ptr [a_out!crosscall2+0x2094f0 (00000000`006441d0)]\r\n00000000`00643047 90              nop\r\n00000000`00643048 ff2425d8416400  jmp     qword ptr [a_out!crosscall2+0x2094f8 (00000000`006441d8)]\r\n```\r\n\r\nThen, i changed the repro code to add a cgo function that uses a few kernel32 functions.  The cgo function is *not* called by repro code.  Just having it there causes the function pointer in the aSyscall table for that function to not be an address to an import thunk, but rather the address to the Import Address Table entry *for* the function.\r\n\r\nNew repro code:\r\n```\r\npackage main\r\n\r\n/*\r\n#cgo CFLAGS: -DWIN32_LEAN_AND_MEAN\r\n#include \u003cwindows.h\u003e\r\n\r\nvoid Blah() {\r\n\tGetLastError();\r\n\tCreateMutexW(NULL, FALSE, NULL);\r\n\tFlushFileBuffers(NULL);\r\n}\r\n*/\r\nimport \"C\"\r\n\r\nimport (\r\n\t\"database/sql\"\r\n\t\"fmt\"\r\n\r\n\t_ \"github.com/mattn/go-sqlite3\"\r\n)\r\n\r\nfunc main() {\r\n\tdb, err := sql.Open(\"sqlite3\", \"foo.db\")\r\n\tif err != nil {\r\n\t\tfmt.Printf(\"unable to open: %s\", err)\r\n\t\treturn\r\n\t}\r\n\t_, err = db.Exec(\"CREATE TABLE IF NOT EXISTS foo(id INTEGER PRIMARY KEY)\")\r\n\tfmt.Println(\"exec:\", err)\r\n\tdb.Close()\r\n\tfmt.Println(\"done.\")\r\n}\r\n```\r\n\r\naSyscall dump of broken version:\r\n```\r\naSyscall[0]: current=0000000000642FF0 default=0000000000000000 name=AreFileApisANSI\r\naSyscall[1]: current=0000000000000000 default=0000000000000000 name=CharLowerW\r\naSyscall[2]: current=0000000000000000 default=0000000000000000 name=CharUpperW\r\naSyscall[3]: current=0000000000644050 default=0000000000000000 name=CloseHandle\r\naSyscall[4]: current=0000000000642FF8 default=0000000000000000 name=CreateFileA\r\naSyscall[5]: current=0000000000643000 default=0000000000000000 name=CreateFileW\r\naSyscall[6]: current=0000000000643008 default=0000000000000000 name=CreateFileMappingA\r\naSyscall[7]: current=0000000000643010 default=0000000000000000 name=CreateFileMappingW\r\naSyscall[8]: current=0000000000644058 default=0000000000000000 name=CreateMutexW\r\naSyscall[9]: current=0000000000643018 default=0000000000000000 name=DeleteFileA\r\naSyscall[10]: current=0000000000643020 default=0000000000000000 name=DeleteFileW\r\naSyscall[11]: current=0000000000000000 default=0000000000000000 name=FileTimeToLocalFileTime\r\naSyscall[12]: current=0000000000000000 default=0000000000000000 name=FileTimeToSystemTime\r\naSyscall[13]: current=0000000000644070 default=0000000000000000 name=FlushFileBuffers\r\naSyscall[14]: current=0000000000643028 default=0000000000000000 name=FormatMessageA\r\naSyscall[15]: current=0000000000643030 default=0000000000000000 name=FormatMessageW\r\n```\r\n\r\nand the import thunks:\r\n```\r\n00000000`00642ff0 ff242598416400  jmp     qword ptr [a_out!crosscall2+0x2094b8 (00000000`00644198)]\r\n00000000`00642ff7 90              nop\r\n00000000`00642ff8 ff2425a0416400  jmp     qword ptr [a_out!crosscall2+0x2094c0 (00000000`006441a0)]\r\n00000000`00642fff 90              nop\r\n00000000`00643000 ff2425b8416400  jmp     qword ptr [a_out!crosscall2+0x2094d8 (00000000`006441b8)]\r\n00000000`00643007 90              nop\r\n00000000`00643008 ff2425a8416400  jmp     qword ptr [a_out!crosscall2+0x2094c8 (00000000`006441a8)]\r\n00000000`0064300f 90              nop\r\n00000000`00643010 ff2425b0416400  jmp     qword ptr [a_out!crosscall2+0x2094d0 (00000000`006441b0)]\r\n00000000`00643017 90              nop\r\n00000000`00643018 ff2425c0416400  jmp     qword ptr [a_out!crosscall2+0x2094e0 (00000000`006441c0)]\r\n00000000`0064301f 90              nop\r\n00000000`00643020 ff2425c8416400  jmp     qword ptr [a_out!crosscall2+0x2094e8 (00000000`006441c8)]\r\n00000000`00643027 90              nop\r\n00000000`00643028 ff2425d0416400  jmp     qword ptr [a_out!crosscall2+0x2094f0 (00000000`006441d0)]\r\n00000000`0064302f 90              nop\r\n00000000`00643030 ff2425d8416400  jmp     qword ptr [a_out!crosscall2+0x2094f8 (00000000`006441d8)]\r\n00000000`00643037 90              nop\r\n```\r\n\r\nIn this instance, import thunks for CloseHandle, CreateMutexW, and FlushFileBuffers are not even generated.  The aSyscall entries for these functions are set to the address of the Import Address Table entries for the functions.\r\n\r\nFor example, kernel32!CreateMutexW resides at 00000000\\`77850880.  The Import Address Table entry for the function is at 00000000\\`00644058:\r\n\r\n```\r\n0:000\u003e dps 00644050\r\n00000000`00644050  00000000`77861950 kernel32!CloseHandle\r\n00000000`00644058  00000000`77850880 kernel32!CreateMutexW\r\n00000000`00644060  00000000`77985380 ntdll!RtlDeleteCriticalSection\r\n00000000`00644068  00000000`779b2f80 ntdll!RtlEnterCriticalSection\r\n00000000`00644070  00000000`778460e0 kernel32!FlushFileBuffers\r\n...\r\n```\r\n\r\nThe function pointer for CreateMutexW in the aSyscall array should be to an import thunk that looks something like the following:\r\n```\r\n00000000`00XXXXXX YYYYYYYYYYYYYYYY  jmp     qword ptr [a_out!00000000\\`00644058]\r\n```\r\nInstead, the function pointer **is** 00000000\\`00644058, which is wrong.  It should either set to an import thunk which jumps to the address stored in the IAT for kernel!CreateMutexW or the direct address to kernel32!CreateMutexW.\r\n\r\nLong story short, when the function is called, the addresses in the IAT are executed as code, beginning at 00000000`00644058, which of course crashes.\r\n\r\nHere is my function to dump the aSyscall table:\r\n```\r\nvoid sqlite3_dump_asyscall() {\r\n  int i = 0;\r\n  for (i = 0; i \u003c sizeof(aSyscall) / sizeof(*aSyscall); ++i) {\r\n    printf(\"aSyscall[%d]: current=%p default=%p name=%s\\n\",\r\n        i, aSyscall[i].pCurrent, aSyscall[i].pDefault, aSyscall[i].zName);\r\n  }\r\n}\r\n```\r\n\r\nAnd i call it in the sqlite3.go init function:\r\n```\r\nfunc init() {\r\n\tsql.Register(\"sqlite3\", \u0026SQLiteDriver{})\r\n\tC.sqlite3_dump_asyscall()\r\n}\r\n```",
	"user": {
		"login": "azdagron",
		"id": 7400314,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-17T16:45:54Z",
	"updated_at": "2014-12-17T16:45:54Z"
}
