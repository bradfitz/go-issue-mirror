{
	"id": 225682929,
	"body": "Having a Go implementation of the BPF VM sounds great to have in x/net/bpf directly, IMO. It only grows the package API by one function (or is there more?), and it's a natural fit. The package docs will need to be tweaked to point out that this is not how you access the in-kernel filtering functionality, but that's simple enough.\r\n\r\nMy standard concern when implementing something like that is having a good interoperability test, to make sure the VM matches the reference implementation's behavior. Do you have such a test already?\r\n\r\nI'm -0.5 on having automagic use of the VM on platforms that don't support BPF. To me, the packet filtering performance is part of the BPF contract when you attach a program to a socket, so having it sometimes be fast and sometimes be _much_ slower is an undesirably surprising behavior. If a caller wants that behavior, I'd rather have it be explicit in their code, where they do a RecvFrom followed by running the Go VM themselves.",
	"user": {
		"login": "danderson",
		"id": 1918,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-13T19:28:37Z",
	"updated_at": "2016-06-13T19:28:37Z"
}
