{
	"id": 66095167,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1 by **richard.scothern**:\n\n\u003cpre\u003eTo see this in action, install imagemagick and run the following commands.  'convert' is\nan imagemagick command line tool for image transformations.  This command resizes a\n3264x2448 jpeg to 800x800. \n\n$ time  convert balloon02.jpg -colorspace RGB -resize 128x128 -auto-orient\nballoon02-128x128.jpg\n\nreal\t0m0.165s\nuser\t0m0.628s\nsys\t0m0.020s\n\nIf you profile with perf, you will note that 60% of the time is spent decoding, and ~20%\nresizing.  Here, a 'size hint' is passed to the jpeg decoder to inform it that the\noutput will be no larger than 128x128:\n\n$ time  convert balloon02.jpg -jpeg:size=128x128 -colorspace RGB -resize 128x128\n-auto-orient balloon02-128x128.jpg\n\nreal\t0m0.078s\nuser\t0m0.040s\nsys\t0m0.032s\n\nNote that the first example completes in 165ms and the second in 78ms.  The output\nimages are practically identical.  In reality, JPEG decoding time in GO is linear with\nthe input image size, but with hinting it becomes constant.\n\nImagemagick is by no means a fast image processing library.  vips\n(\u003ca href=\"http://www.vips.ecs.soton.ac.uk/)\"\u003ehttp://www.vips.ecs.soton.ac.uk/)\u003c/a\u003e is far more performant and offers the same feature.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-05-21T04:12:35Z",
	"updated_at": "2014-12-08T10:44:43Z"
}
