{
	"id": 51281570,
	"number": 4055,
	"state": "closed",
	"title": "doc: write page explaining append and slices well",
	"body": "\u003cpre\u003eWhat steps will reproduce the problem?\n\n\u003ca href=\"http://play.golang.org/p/3vfzRJflIm\"\u003ehttp://play.golang.org/p/3vfzRJflIm\u003c/a\u003e\n\nWhat is the expected output? All rows should be in increasing order.\n\n0 1 2\n1 2 3\n2 3 4\n...\n\nWhat do you see instead? Some values are duplicated.\n\n0 1 2\n1 2 3\n4 4 4\n...\n\nWhich compiler/os/version are you using?\n\n6g, Windows 7, version 1.0.2\n\n\nIt seems that append is not thread-safe function although it looks like a pure function.\nMaybe this possible problem should be more explicitly documented. It has this bad\nproperty of almost working correctly.\n\nIf the declaration for append would be something like:\n  func append(slice *[]Type, elems ...Type)\n\nit would make modification of the underlying slice visible.\n\nThe fix for the program is trivial:\n\na := make([]int, len(x)+1)\ncopy(a, x)\na[len(a)-1] = i\u003c/pre\u003e",
	"user": {
		"login": "egonelbre",
		"id": 192964,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 22,
	"closed_at": "2014-12-08T10:21:30Z",
	"created_at": "2012-09-08T06:28:49Z",
	"updated_at": "2016-06-24T22:24:20Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
