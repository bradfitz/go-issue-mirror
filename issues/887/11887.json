{
	"id": 97524470,
	"number": 11887,
	"state": "open",
	"title": "cmd/link: OS X codesign only works with -ldflags -s",
	"body": "Using the Go 1.5 compiler toolchain and compiling a binary that uses CGO and then `codesign`ing that binary, upon attempting to execute the program it will be killed immediately by the system. Codesigning a non-cgo binary works just fine, as expected.\r\n\r\nGiven the following small program:\r\n\r\n```go\r\npackage main\r\n\r\n/*\r\nint\r\ncfunc() {\r\n\treturn 2;\r\n}\r\n*/\r\nimport \"C\"\r\nimport \"fmt\"\r\n\r\nfunc main() {\r\n\tfmt.Println(\"cfunc says:\", C.cfunc())\r\n}\r\n```\r\n\r\nand building simply with `go build` and running `codesign -f -s my_cert ./myprog`, when attempting to execute the program in a shell the response is \"killed: ./myprog\".\r\n\r\nThe system log reports:\r\n\r\n    $ taskgated[92]: no signature for pid=1991 (cannot make code: UNIX[No such process])\r\n\r\nTested against Go1.5beta2 and:\r\n\r\n    $ go version devel +765cea2 Mon Jul 27 18:03:45 2015 +0000 darwin/amd64",
	"user": {
		"login": "derekparker",
		"id": 1314079,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "OS-Darwin"
		}
	],
	"comments": 14,
	"created_at": "2015-07-27T18:25:10Z",
	"updated_at": "2016-03-23T12:44:24Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
