{
	"id": 51281305,
	"number": 3887,
	"state": "closed",
	"title": "encoding/json: inconsistent handling of keys with spaces",
	"body": "\u003cpre\u003e---------- Forwarded message ----------\nFrom:  \u0026lt;billkatz@gmail.com\u0026gt;\nDate: Mon, Jul 16, 2012 at 2:19 PM\nSubject: [golang-dev] JSON key names with spaces get decoded properly but encoded\nincorrectly\nTo: golang-dev@googlegroups.com\n\n\nI've run into a snag using JSON keys with spaces in the encoding/json package.  \n\nAn example:\n\ntype Message struct {\n    Name string `json:\u0026quot;myName\u0026quot;`\n    Number int `json:\u0026quot;my number\u0026quot;`\n}\n\nDecodes work properly, correctly parsing a JSON string for something like:\n\n{\u0026quot;myName\u0026quot;: \u0026quot;Ed\u0026quot;, \u0026quot;my number\u0026quot;: 42}\n\nBut when encoding, json.Marshall will output:\n\n{\u0026quot;myName\u0026quot;: \u0026quot;Ed\u0026quot;, \u0026quot;Number\u0026quot;: 42}\n\nSeems like any spaces in key name will cause encoding to drop back to the struct's field\nname instead of the tag value.  I assume this is not by design and a patch is desired?\u003c/pre\u003e",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Suggested"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"closed_at": "2014-12-08T10:20:33Z",
	"created_at": "2012-07-29T22:56:19Z",
	"updated_at": "2016-06-24T22:22:19Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
