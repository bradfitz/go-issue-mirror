{
	"id": 66078460,
	"body": "\u003ca id=\"c39\"\u003e\u003c/a\u003eComment 39 by **julius.volz**:\n\n\u003cpre\u003eWe are also getting SIGSEGV on Go 1.1-rc1 for our server\n(\u003ca href=\"http://github.com/prometheus/prometheus)\"\u003ehttp://github.com/prometheus/prometheus)\u003c/a\u003e, but *only* when running \"go tool pprof\"\nagainst it. Otherwise, it keeps on running stable.\n\nNote that we are using cgo to wrap LevelDB. Initially, with Go 1.0.3, we got \"runtime:\nsignal received on thread not created by Go.\" when pprof-ing, so we found\n\u003ca href=\"https://groups.google.com/forum/?fromgroups=#\"\u003ehttps://groups.google.com/forum/?fromgroups=#\u003c/a\u003e!searchin/golang-nuts/pprof/golang-nuts/6q8RVoXhg4g/1WQfLMKLJBkJ\nand after upgrading to a newer version of Go (1.1-rc1) which contains the mentioned\nSIGPROF fix (\u003ca href=\"https://golang.org/cl/6498057)\"\u003ehttps://golang.org/cl/6498057)\u003c/a\u003e, the message about receiving a\nsignal in a non-Go-spawned thread is gone, but the program still crashes with\n\"Segmentation fault (core dumped)\".\n\nI'm not sure if our issue is the same as this, but it does sound similar, and there was\nmention above that the crashes might be triggered by profiling too.\n\nThe output of our server run and crash (with GOGCTRACE=1):\n\u003ca href=\"https://gist.github.com/juliusv/d4baa7db4a1e8185614d\"\u003ehttps://gist.github.com/juliusv/d4baa7db4a1e8185614d\u003c/a\u003e\n\nAttaching a gdb to it before it crashed and then looking at the crash state:\n\u003ca href=\"https://gist.github.com/juliusv/5df83f642809b4d97f1a\"\u003ehttps://gist.github.com/juliusv/5df83f642809b4d97f1a\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-05-06T00:17:24Z",
	"updated_at": "2014-12-08T10:28:50Z"
}
