{
	"id": 131208563,
	"number": 14218,
	"state": "open",
	"title": "proposal: serialize Reloc.Variant field to Go object files",
	"body": "In RISC architectures, address relocations usually need to\r\nchange a pair of instructions, and sometimes the fields to\r\nstuff the constant in are different depending on the instruction.\r\n\r\nFor example, Power load/store instructions have two forms,\r\nD form and DS-form.\r\n\r\nCurrently, we have two separate relocations in `cmd/internal/obj`:\r\n`R_ADDRPOWER` and `R_ADDRPOWER_DS`, which really\r\nare the same except how to stuff the const into instruction.\r\n\r\nWe already have a `Reloc.Variant` field to handle a similar concept:\r\nslight variants on the same conceptual relocation type, but it's\r\nonly used by the linker to implement internal linking (to represent\r\nELF relocations).\r\n\r\nThe proposal is to serialize the `Variant` field into object file, so\r\nthat the compiler can also use the variant mechanism.\r\n\r\nThe benefit is that: the variants are defined in arch-specific\r\npackages, and generic code handle the relocations defined\r\nin `cmd/internal/obj` don't need to know about all the arch\r\nspecific variants of a relocation as the details are irrelevant\r\nunless you are dealing with instruction encoding.",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		}
	],
	"comments": 8,
	"created_at": "2016-02-04T01:19:31Z",
	"updated_at": "2016-10-03T22:42:44Z",
	"milestone": {
		"id": 1373555,
		"number": 30,
		"title": "Proposal"
	}
}
