{
	"id": 87332142,
	"body": "Another issue.\r\n\r\n### Change Request Summary\r\n\r\n```\r\nGetActiveUniform(p Program, u Uniform) -\u003e GetActiveUniform(p Program, index uint)\r\nGetActiveAttrib(p Program, a Attrib) -\u003e GetActiveAttrib(p Program, index uint)\r\n```\r\n\r\n### Rationale\r\n\r\nUniforms have concept of a _Uniform Location_, as well as _index_. (Something similar, but less clearly defined also applies to attributes.)\r\n\r\nThe OpenGL ES spec for [`glGetUniformLocation`](https://www.khronos.org/opengles/sdk/docs/man3/html/glGetUniformLocation.xhtml) states the return type is `GLint` and it represents:\r\n\r\n\u003e glGetUniformLocation returns an integer that represents the **location** of a specific uniform variable within a the default uniform block of a program object.\r\n\r\n(Emphasis added by me.)\r\n\r\nUniform index type used is similar but not the same, it's `GLuint`. See, e.g., https://www.khronos.org/opengles/sdk/docs/man3/html/glGetActiveUniform.xhtml.\r\n\r\nThe WebGL spec defines a named type `WebGLUniformLocation` to represent Uniform Location, and also uses `GLuint` for the index.\r\n\r\nConsider `glGetUniformLocation`:\r\n\r\n```\r\nWebGLUniformLocation? getUniformLocation(WebGLProgram? program, DOMString name)\r\n```\r\n\r\nThe current equivalent `x/mobile/gl` API is:\r\n\r\n```Go\r\n// GetUniformLocation returns the location of uniform variable.\r\n//\r\n// http://www.khronos.org/opengles/sdk/docs/man3/html/glGetUniformLocation.xhtml\r\nfunc GetUniformLocation(p Program, name string) Uniform\r\n```\r\n\r\nWhich is good (although I would've preferred the name `UniformLocation` rather than deviating from the spec).\r\n\r\nBut another func expects an index of the uniform, not Uniform Location as its parameter:\r\n\r\n```\r\nWebGLActiveInfo? getActiveAttrib(WebGLProgram? program, GLuint index);\r\nWebGLActiveInfo? getActiveUniform(WebGLProgram? program, GLuint index);\r\n```\r\n\r\nYet the `x/mobile/gl` API expects a Uniform Location type instead of an index:\r\n\r\n```Go\r\n// GetActiveUniform returns details about an active uniform variable.\r\n//\r\n// http://www.khronos.org/opengles/sdk/docs/man3/html/glGetActiveUniform.xhtml\r\nfunc GetActiveUniform(p Program, u Uniform) (name string, size int, ty Enum)\r\n```\r\n\r\nThis makes `GetActiveUniform` really awkward to use, because there is no way to get/create the `Uniform` type.\r\n\r\nThe typical usage of `GetActiveUniform` makes sense when the parameter, correctly, is an index:\r\n\r\n```Go\r\nuniformCount := gl.GetProgrami(program, gl.ACTIVE_UNIFORMS)\r\nfor index := 0; index \u003c uniformCount; index++ {\r\n\tname, size, ty := gl.GetActiveUniform(program, index)\r\n\t...\r\n}\r\n```\r\n\r\nAs things are, I need to try to create a `Uniform` type by doing `gl.Uniform{Value: int32(i)}`, which is awkward and not cross-platform compatible.\r\n\r\nOn desktop both Uniform Location and index are internally just integers, so it can be done, but that's going around the type system instead of using it correctly. The problem is that in WebGL, the Uniform Location is actually a JavaScript Object, while uniform index is an integer, so it can't work. See [this answer](http://stackoverflow.com/a/12851272/622447) for relevant info.\r\n\r\nI highly recommend following the spec and using the type system correctly here. `GetActiveUniform` and `GetActiveAttrib` should accept an index as their 2nd parameter, not location type.\r\n\r\nWould that change be amenable to you?\r\n\r\n~~**Edit:** This also applies to `EnableVertexAttribArray`, `DisableVertexAttribArray`, and `VertexAttribPointer`. They take an index, not location type. **Edit 2:** Actually, the spec is pretty confusing/inconsistent for attrib location/indicies... It seems they're mixed and match and treated the same. :/ **Edit 3**: After looking more into it, this does not apply to any of those 3, sorry.~~",
	"user": {
		"login": "shurcooL",
		"id": 1924134,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-03-29T00:10:55Z",
	"updated_at": "2015-03-29T06:25:01Z"
}
