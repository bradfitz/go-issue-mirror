{
	"id": 66056921,
	"body": "\u003ca id=\"c15\"\u003e\u003c/a\u003eComment 15 by **webmaster@webmaster.ms**:\n\n\u003cpre\u003eYes, I wrote NewCallback as a Syscall parameter being aware it is never collected.\nBut it is wrong, it shoule be like this:\n\n// cb existence prevent callback to be collected\ncb := syscall.NewCallback(\n      func(hwnd syscall.Handle, lparam uintptr) uintptr {\n        counter++\n        return 1 // continue enumeration\n      })\nsyscall.Syscall(uintptr(pEnumWindows), 2, cb, 888, 0)\ncb = nil // thunk can be garbage collected from here on\n\nSimilar IronPython issue with callbacks\n\u003ca href=\"http://groups.google.com/group/ironpy/browse_thread/thread/374a4d164dacb674/5156c037a60ecc2d\"\u003ehttp://groups.google.com/group/ironpy/browse_thread/thread/374a4d164dacb674/5156c037a60ecc2d\u003c/a\u003e\nAs soon as user stops keeping callback object in a variable, callback can be collected.\nIt will result in no more notifications in .NET or in crash in case of Go if user would\nwrite code like I did in the message above.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-08-27T15:03:34Z",
	"updated_at": "2014-12-08T10:10:31Z"
}
