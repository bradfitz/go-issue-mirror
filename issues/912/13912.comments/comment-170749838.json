{
	"id": 170749838,
	"body": "i think it must be because openal is dynamically extensible, that it makes everything accessible via only a few general functions, that only vary by parameter type, and then uses another parameter to indicate the actual thing being set/read. \r\nwhich is how offset could be int or float, when float includes the same functionality.\r\n\r\ni did look through the spec briefly, looking for other omissions that might be sensibly added, and didn't find any more, but i guess there will be others that are effectively only present because of this extensibility.\r\nthe approach seems to have been to have anything that possibly makes sense, maybe also to lessen type conversions?\r\n\r\nbut, the Go wrapper's current approach of hiding the parametrised calls, by sending each through a separate function, stops the dynamic extension mechanism, in that, it means any extensions would require functions to be added statically.\r\n",
	"user": {
		"login": "splace",
		"id": 1234848,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-12T01:16:07Z",
	"updated_at": "2016-01-12T01:16:07Z"
}
