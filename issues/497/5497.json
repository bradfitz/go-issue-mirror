{
	"id": 51283724,
	"number": 5497,
	"state": "open",
	"title": "cmd/link: external linker generates larger binaries than 6l/8l",
	"body": "by **unclejacksons**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n\nUsing 6l from Go 1.1:\ngo build -ldflags '-s -linkmode internal' -tags release\ngithub.com/valyala/ybc/apps/go/memcached\nwc -c memcached \n  1562016 memcached\n\nUsing Go 1.1 the patch which passes '-s' to ld:\ngo build -ldflags '-s' -tags release github.com/valyala/ybc/apps/go/memcached\nwc -c memcached \n  2096920 memcached\n\nUsing Go 1.1 release:\nwc -c memcached\n  3194317 memcached\n\nWhat is the expected output?\nThe resulting binary linked with the external linker should be smaller, its size should\nbe closer to that of the binary linked with 6l.\nSince Go 1.1 defaults to using the external linker because it's more mature, it should\ngenerate smaller binaries.\n\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nUbuntu 13.04 amd64\n\nWhich version are you using?  (run 'go version')\ngo version go1.1 linux/amd64 from\n\u003ca href=\"https://go.googlecode.com/files/go1.1.linux-amd64.tar.gz\"\u003ehttps://go.googlecode.com/files/go1.1.linux-amd64.tar.gz\u003c/a\u003e\n\n\nWhat can be done to make the resulting binaries smaller?\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"created_at": "2013-05-17T16:43:22Z",
	"updated_at": "2015-06-08T06:25:58Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
