{
	"id": 66086234,
	"body": "\u003ca id=\"c8\"\u003e\u003c/a\u003eComment 8:\n\n\u003cpre\u003e\u003e ... but if the source data comes from a driver which follows the 'convert to []byte'\nrule it fails, because deserializing []byte into interface{} results in the same thing\nwhen the original value was a varchar, blob, or fixed width char(n); heck, xml in\nsqlserver is a []byte.\n\nYes, you can change your (*Column).Scan to have:\n\ncase []byte:\n        c.Val = string(x)\n\nbut this way you cannot distinguish between string columns and others (blobs, ...).\n\n\u003e ... types that actually *are* strings actually wind up being []byte because the\ndriver's obey the above documentation (see mgodbc for a case in point, line 916)\n\nI am not sure mgodbc is doing good here. string to []byte conversions and back are not\nfree, you can look at generated asm (go build -ldflags \"-a\" ...) to see what happens\nunder covers.\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-10-21T04:11:25Z",
	"updated_at": "2014-12-08T10:35:53Z"
}
