{
	"id": 51284436,
	"number": 5947,
	"state": "closed",
	"title": "bufio buffer exactly full",
	"body": "by **alex@lx.lc**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n1. Call bufio-object.Write that will exactly fill up buffer\n2. Call bufio-object.ReadFrom\n\n\nWhat is the expected output?\nReturned bytes read, \u0026lt;nil\u0026gt;\n\nWhat do you see instead?\nReturns 0, \u0026lt;nil\u0026gt;\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nLinux\n\nWhich version are you using?  (run 'go version')\n1.1.1\n\nPlease provide any additional information below.\n\nPlease see \u003ca href=\"https://groups.google.com/forum/#\"\u003ehttps://groups.google.com/forum/#\u003c/a\u003e!topic/golang-nuts/iK9eNI9weyg \n\nIf a user fills up a buffer completely with a write call, that is, the length of the\nright is exactly the length left in the buffer, it does not flush.  Then, a ReadFrom\nwill try to write to a full buffer and return 0, nil.   \nIn actuality, there are two ways to fix this.  One is to change all Write, WriteString,\netc to flush if len(data) \u0026gt;= b.Available(), rather than just greater than.  That is,\nwhy not flush if we've topped off the buffer?  This may have other complications,\nhowever.\nThe other possible solution is the move the b.Available check in bufio.ReadFrom to the\ntop of the for loop.  \n\nI was going to submit a patch doing either or both of the above, but wanted to report it\nhere for visibility and input before doing so.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"comments": 9,
	"closed_at": "2014-12-08T10:32:42Z",
	"created_at": "2013-07-24T16:31:04Z",
	"updated_at": "2016-06-24T22:52:34Z",
	"milestone": {
		"id": 1067201,
		"number": 13,
		"title": "Go1.1.2"
	}
}
