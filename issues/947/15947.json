{
	"id": 158260592,
	"number": 15947,
	"state": "closed",
	"title": "cmd/go: match go-import package prefixes by slash",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\ngo version go1.6.2 darwin/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/sm\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"clang\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fno-common\"\r\nCXX=\"clang++\"\r\nCGO_ENABLED=\"1\"\r\n```\r\n\r\n3. What did you do?\r\n\r\nI am hosting the following information over https:\r\n\r\n```\r\ncurl https://go.mcquay.me/?go-get=1                                                                                                                        \r\n\u003c!DOCTYPE html\u003e\r\n\u003chtml\u003e\u003chead\u003e\r\n\u003cmeta name=\"go-import\" content=\"go.mcquay.me/sm/fooa git https://s.mcquay.me/sm/ud\"\u003e\r\n\u003cmeta name=\"go-import\" content=\"go.mcquay.me/sm/foob git https://s.mcquay.me/sm/ud\"\u003e\r\n\u003cmeta name=\"go-import\" content=\"go.mcquay.me/sm/fooaa git https://s.mcquay.me/sm/ud\"\u003e\r\n\u003c/head\u003e\r\n\u003cbody\u003e\u003cp\u003ego tool metadata in head\u003c/p\u003e\u003c/body\u003e\r\n\u003c/html\u003e\r\n```\r\n\r\nand when I point the go tool at it, the following work:\r\n\r\n    go get -x go.mcquay.me/sm/fooa\r\n    go get -x go.mcquay.me/sm/foob\r\n\r\nBut this fails:\r\n\r\n    go get -x go.mcquay.me/sm/fooaa\r\n    package go.mcquay.me/sm/fooaa: unrecognized import path \"go.mcquay.me/sm/fooaa\" (parse https://go.mcquay.me/sm/fooaa?go-get=1: multiple meta tags match import path \"go.mcquay.me/sm/fooaa\")\r\n\r\n\r\n4. What did you expect to see?\r\n\r\nI'd expect that these are separate repositories and can be used to build and emit different pkg/bins. I'd expect the go tool to install it correctly.\r\n\r\n5. What did you see instead?\r\n\r\n`go get` failed with message:\r\n\r\n    package go.mcquay.me/sm/fooaa: unrecognized import path \"go.mcquay.me/sm/fooaa\" (parse https://go.mcquay.me/sm/fooaa?go-get=1: multiple meta tags match import path \"go.mcquay.me/sm/fooaa\")\r\n\r\n\r\nI can appreciate that the go tool can't clone a repo into a folder that's already a repo. The check on:\r\n\r\nhttps://github.com/golang/go/blob/master/src/cmd/go/vcs.go#L782\r\n\r\nseems a bit aggressive. Perhaps it just needs to be relaxed and test substrings on '/' boundaries?",
	"user": {
		"login": "smcquay",
		"id": 333234,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2016-06-03T19:48:19Z",
	"created_at": "2016-06-02T23:16:43Z",
	"updated_at": "2016-06-03T19:48:19Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
