{
	"id": 66075551,
	"body": "\u003ca id=\"c11\"\u003e\u003c/a\u003eComment 11:\n\n\u003cpre\u003eT ATOMIC_FETCH_ADD_ORDER(T*, T);\nT ATOMIC_EXCHANGE_ORDER(T*, T);\nT ATOMIC_COMPARE_EXCHANGE_ORDER(T*, T, T);  // ideally (T*, T*, T) where second operand\nis a pointer to CMP and is updated on failure\nT ATOMIC_LOAD_ORDER(T*);\nvoid ATOMIC_STORE_ORDER(T*, T);\n\nWhere ORDER is one of RELAXED/CONSUME/ACQUIRE/RELEASE/ACQ_REL/CEQ_CST.\n\nIt is portable (employed by C/C++).\n\nRELAXED operations do not need to dump/restore registers.\n\nOn x86, CEQ_CST STORE is XCHG, other stores are MOV. All loads are MOV. All RMW\noperations are LOCK prefixed and so SEQ_CST.\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-07-15T23:06:47Z",
	"updated_at": "2014-12-08T10:26:20Z"
}
