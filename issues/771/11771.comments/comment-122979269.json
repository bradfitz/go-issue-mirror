{
	"id": 122979269,
	"body": "What is it about what I'm asking or doing that you think is unique?\r\nClearly, 'text' files having different line endings isn't something unique to me.  Even ignoring the historical reasons for CRLF, LFCR, LF, or CR endings, most text based internet protocols in fact dictate CRLF.  Besides the expected CRLF, HTTP even has acceptance of both bare LF and CR as required.  Source files consumed by compilers have historically never cared either.\r\n\r\nSo if you have test code that explicitly requires 'text' files they work on to remain in a very specific format then those files should be named in such a way as to make this clear or they should write those files themselves (or work in memory).  Ideally, they would be written properly and not care.  If you guys want to kick the can and mark your *entire source tree* as 'binary,' that's certainly your right, but to imply that me having an expectation of properly handling text files in development, runtime, and in source code management is somehow unique to me is really strange.\r\n\r\nSo either that, or you're saying me 'vendoring' Go itself is unique?  If so, that's just the nature of our  business.  If we have to support and patch a product that's ten years old then we need all the tools used to be versioned alongside everything else so it can still be built.  Developers don't install much of anything if we can avoid it.  It's all checked in and versioned appropriately and developers fetch the code to build as well as the code that builds it all together.  Recent Microsoft tools (C++ from v8 on) being a perfect example of garbage that can't simply be 'checked in.' :\\",
	"user": {
		"login": "pbennett",
		"id": 170563,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-20T18:32:23Z",
	"updated_at": "2015-07-20T19:00:50Z"
}
