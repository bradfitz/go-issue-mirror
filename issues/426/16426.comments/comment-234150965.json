{
	"id": 234150965,
	"body": "Any interest in the encoding.Validator interface? I could write a formal\nproposal if there are enough interest.\n\nMy current thought looks like this:\n\ntype Location int64 // byte offset\n\ntype Validator interface {\n      // Validate validates the object, begin and end is the half-open\ninterval for the stream occupied by this object.\n      Validate(begin, end Location) error\n}\n\nUsing a special type avoid existing Validate funcs accidentally implement\nthe new interface.\n\nWe might need a better name because Validate might already be used widely.\n\nIf an object implements Validator interface, then its Validate method will\nbe called after it's unmarshaled.\n",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	},
	"created_at": "2016-07-21T04:01:05Z",
	"updated_at": "2016-07-21T04:01:05Z"
}
