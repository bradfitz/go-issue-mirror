{
	"id": 90329891,
	"number": 11348,
	"state": "closed",
	"title": "x/crypto/ssh: Server panic on invalid input",
	"body": "The following input makes the x/crypto/ssh server crash:\r\n```\r\n[]byte(\"\\n\\x00\\x00\\x00\\x16\\x00\\x140000000000000000\\xff\\xff\\xff\\xff\")\r\n```\r\n\r\nDiscovered by fuzzing (see the excellent github.com/dvyukov/go-fuzz), triggerable by\r\n1) run x/crypto/ssh server\r\n2) feed it those bytes (e.g. with nc or go)\r\n3) watch it panic\r\n\r\n```\r\npanic: runtime error: slice bounds out of range\r\n\r\ngoroutine 5 [running]:\r\ngolang.org/x/crypto/ssh.parseString(0xc20801e391, 0x4, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc20800a300)\r\n\t/go/path/src/golang.org/x/crypto/ssh/messages.go:490 +0x150\r\ngolang.org/x/crypto/ssh.parseNameList(0xc20801e391, 0x4, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x15)\r\n\t/go/path/src/golang.org/x/crypto/ssh/messages.go:502 +0x95\r\ngolang.org/x/crypto/ssh.Unmarshal(0xc20801e391, 0x4, 0x4, 0x54e900, 0xc208001320, 0x0, 0x0)\r\n\t/go/path/src/golang.org/x/crypto/ssh/messages.go:360 +0xeff\r\ngolang.org/x/crypto/ssh.(*handshakeTransport).enterKeyExchange(0xc208056000, 0xc20801e380, 0x15, 0x15, 0x0, 0x0)\r\n\t/go/path/src/golang.org/x/crypto/ssh/handshake.go:295 +0x134\r\ngolang.org/x/crypto/ssh.(*handshakeTransport).readOnePacket(0xc208056000, 0x0, 0x0, 0x0, 0x0, 0x0)\r\n\t/go/path/src/golang.org/x/crypto/ssh/handshake.go:166 +0x1f3\r\ngolang.org/x/crypto/ssh.(*handshakeTransport).readLoop(0xc208056000)\r\n\t/go/path/src/golang.org/x/crypto/ssh/handshake.go:133 +0x28\r\ncreated by golang.org/x/crypto/ssh.newServerTransport\r\n\t/go/path/src/golang.org/x/crypto/ssh/handshake.go:108 +0xea\r\n\r\ngoroutine 1 [chan receive]:\r\ngolang.org/x/crypto/ssh.(*connection).serverHandshake(0xc20804e200, 0xc208058210, 0xc20801f060, 0x0, 0x0)\r\n\t/go/path/src/golang.org/x/crypto/ssh/server.go:193 +0x64f\r\ngolang.org/x/crypto/ssh.NewServerConn(0x7f8486836d18, 0xc20801f060, 0xc208058000, 0x7f8486836d18, 0xc208030018, 0x0, 0x0, 0x0)\r\n\t/go/path/src/golang.org/x/crypto/ssh/server.go:146 +0x103\r\nmain.main()\r\n\t/go/path/src/github.com/taruti/sshfuzz/ex1/ssh.go:28 +0x32d\r\n\r\n```\r\n",
	"user": {
		"login": "taruti",
		"id": 42174,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "agl",
		"id": 21203,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2015-06-29T15:46:22Z",
	"created_at": "2015-06-23T09:03:04Z",
	"updated_at": "2016-06-28T21:53:46Z"
}
