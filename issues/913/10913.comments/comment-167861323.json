{
	"id": 167861323,
	"body": "Q1. For git I would say rev=xxx (or commit=xxx) is sufficient for repo-rev. The git tools that take a commit will accept a branch, tag, hash or any other string that can name a commit, so I would expect this to do the same (i.e. I can say rev=mybranch, rev=mytag, rev=xxxxcommithash and all will work) I don't know if that is true for other repo types (mercurial, bzr etc.) or if they need the extra info to interpret the string as a branch/tag/etc. Possibly this needs to be different to follow the normal syntax for  different repo types?\r\n\r\nQ2. Fail outright. Anyone who needs backwards compat will have to set things up to work the old way anyway (HEAD or the magic go1 branch), so there's no point in them using the new feature. If they use the new feature it is safe to assume they have not intentionally set things up to work the old way, and if it appears to work by accident Bad Things will probably happen.\r\n\r\nPerhaps a safe way to ensure a clean failure would be use `\u003cmeta name=\"go-import-rev\"\u003e`, so old go won't even find the new directive. That would also allow you to set up both \"go-import\" for old go and \"go-import-rev\" for new go, e.g. go-import might point to a different repo that has the proper branch cloned as master for backwards compat.",
	"user": {
		"login": "alanconway",
		"id": 7780958,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-29T19:36:05Z",
	"updated_at": "2015-12-29T19:36:45Z"
}
