{
	"id": 191453315,
	"body": "I hadn't considered closing on buffered channels, but I believe the proposal is still good. If all readers are closed (implying nobody is going to receive on the channel ever again), then sends on a closed buffered channel can still act like they do today, i.e. panic. All the proposal enables is for senders to know that no receives are going to happen ever again on that channel.\r\n\r\nI'm totally for the unidirectionality of data across channels. However, if you take a hard line for unidirectionality of control you have to create outside mechanisms for bidirectional signalling.  You don't have to look far to see great examples of the usefulness of bidirectional signalling. Can you imagine a world where you had to signal to a TCP server, or the other end of a unix pipe, that you were no longer going to be receiving data by using an out of band channel? That would certainly increase the complexity of using those transports. That is the story we have with channels today.\r\n\r\nAs for the evidence that sender side ref counting isn't commonly needed, you only need to hit the blogosphere for a short time to see the mounting complaints against channels when trying to compose them in a way that allows for clean tear down in practical use cases. Maybe I'll compile a list.\r\n\r\nThe code example that implements ref counting on top of channels is great. My complaint is if you embrace channels in your architecture, you end up with all sorts of channel types.  You get to repeat that code for every channel type.  _queue discussion on generics_. :trollface:\r\n\r\nI love the conservative approach to raising the bar on language changes. Being able to fit Go in one's head is an attractive part of the language. I believe that this proposal helps make channels more widely useful given the cost of including them in the language in the first place.",
	"user": {
		"login": "azdagron",
		"id": 7400314,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-02T22:02:33Z",
	"updated_at": "2016-03-02T22:02:33Z"
}
