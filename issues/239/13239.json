{
	"id": 116878106,
	"number": 13239,
	"state": "open",
	"title": "net/rpc: HandleHTTP should be idempotent.",
	"body": "Our team wrote a library to expose health metrics of a process. We wanted an anonymous import of our library to be enough to expose metrics. Our init method would handle setting up the RPC handlers including calling rpc.HandleHTTP().\r\n\r\nUnfortunately, we discovered that this approach was hostile toward any other code that happens to call rpc.HandleHTTP(). rpc.HandleHTTP() panics if called twice. Alas, we had to move the rpc.HandleHTTP() call out of our library and leave it up to clients to remember to explicitly call it in their main. If the client forgets to do this, our library won't expose their health metrics. Worse than that, the client won't see any error letting them know that our library is not working.\r\n\r\nIt would be nice if rpc.HandleHTTP() could be idempotent. That is, calling it multiple times should be the same as calling it once. Then our API could call it on behalf of clients without fear of breaking other code the client uses.\r\n\r\n\r\n\r\n",
	"user": {
		"login": "keep94",
		"id": 1761650,
		"type": "User",
		"site_admin": false
	},
	"comments": 0,
	"created_at": "2015-11-13T23:59:46Z",
	"updated_at": "2015-11-14T01:14:26Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
