{
	"id": 132977466,
	"body": "I could be wrong but I have a feeling that it has to do something with the new GC.\r\nWhen the program is compiled with Go 1.5 its memory profile shows much less memory usage.\r\nSo probably the new GC is more eager to free up all those unref'd objects from the memory. IMO either the more frequent GC interruptions cause this slowdown somehow or maybe the too frequent memory deallocations cause some sort of a free memory fragmentation. Is it possible that the too frequent GC interruptions interfere with optimal utilization of the CPU's level 1 cache and pipelines? It's just a wild guess...\r\nCan the go runtime configured to run the GC less frequently?",
	"user": {
		"login": "tssajo",
		"id": 2164104,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-20T11:13:22Z",
	"updated_at": "2015-08-20T11:15:10Z"
}
