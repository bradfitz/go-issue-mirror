{
	"id": 183344031,
	"number": 17476,
	"state": "closed",
	"title": "database/sql: Too many TIME_WAIT sockets using Golang Connection Pool !!!",
	"body": "### What version of Go are you using (`go version`)?\r\ngo version go1.5.1 linux/amd64\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nCentOS release 6.7 (Final)\r\n3.10.5-3.el6.x86_64 \r\n\r\n### What did you do?\r\ni write a log server using Golang,it's main work is to insert each log from client request into remote mysql.\r\ni use Golang sql as below:\r\n```\r\n \"database/sql\"\r\n  _ \"github.com/go-sql-driver/mysql\" \r\n```\r\nAnd i use db as Golang document described below:\r\n\u003e The returned DB is safe for concurrent use by multiple goroutines and maintains its own pool of idle connections. Thus, the Open function should be called just once. It is rarely necessary to close a DB.\r\nhttps://golang.org/pkg/database/sql/#Open\r\n\r\n### What did you expect to see?\r\nI expect to see many ESTABLISHED sockets under the circumstances of large concurrency.\r\n\r\n### What did you see instead?\r\nThere are many TIME_WAIT and few ESTABLISHED sockets in the http process!\r\n\r\n\r\n",
	"user": {
		"login": "duyanghao",
		"id": 12867714,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2016-10-17T07:56:09Z",
	"created_at": "2016-10-17T07:28:25Z",
	"updated_at": "2016-10-17T08:39:36Z"
}
