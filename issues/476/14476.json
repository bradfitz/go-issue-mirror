{
	"id": 135619689,
	"number": 14476,
	"state": "closed",
	"title": "runtime: go 1.6 segfault with musl libc",
	"body": "I am attempting to compile go 1.6 from a go 1.4.3 bootstrap.  The build environment is Alpine linux 3.3.1 with the vanilla (i.e., no grsec) 4.1.15 kernel.  The libc is musl.  Go gets compiled using the build.bash script, and no errors are thrown.  However, the resulting binary gives a segmentation fault whenever I attempt to use it.\r\n\r\n    abuildx86:~/aports/community/go/src/go/bin$ strace ./go\r\n    execve(\"./go\", [\"./go\"], [/* 18 vars */]) = 0\r\n    set_thread_area({entry_number:-1, base_addr:0xb7768844, limit:1048575, seg_32bit:1, contents:0,      read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0 (entry_number:6)\r\n    set_tid_address(0xb7768860)             = 29565\r\n    mprotect(0xb7767000, 4096, PROT_READ)   = 0\r\n    --- SIGSEGV {si_signo=SIGSEGV, si_code=SEGV_MAPERR, si_addr=0} ---\r\n    +++ killed by SIGSEGV +++\r\n    Segmentation fault\r\n\r\n    abuildx86:~/aports/community/go/src/go/bin$ uname -a\r\n    Linux abuildx86 4.1.15 #1-Alpine SMP Tue Dec 15 09:29:30 GMT 2015 i686 Linux\r\n    abuildx86:~/aports/community/go/src/go/bin$ ldd go\r\n    \t/lib/ld-musl-i386.so.1 (0x80001000)\r\n    \tlibc.musl-x86.so.1 =\u003e /lib/ld-musl-i386.so.1 (0x80001000)\r\n    abuildx86:~/aports/community/go/src/go/bin$ \r\n\r\n\r\nThis same environment has no problems compiling go 1.5.3 from source.  My other alpine 3.3.1 VM with amd64 also has no issues compiling / running 1.5.3 or 1.6, even with the grsec kernel.\r\n\r\nAny thoughts?",
	"user": {
		"login": "nathanejohnson",
		"id": 1360240,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"comments": 19,
	"closed_at": "2016-02-24T02:07:43Z",
	"created_at": "2016-02-23T03:28:27Z",
	"updated_at": "2016-07-15T23:13:59Z",
	"milestone": {
		"id": 1688612,
		"number": 37,
		"title": "Go1.6.2"
	},
	"reactions": {
		"total_count": 2,
		"+1": 2
	}
}
