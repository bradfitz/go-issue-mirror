{
	"id": 165494916,
	"number": 16368,
	"state": "closed",
	"title": "syscall: cannot use go generate to invoke mksyscall_windows.go on linux",
	"body": "Before go1.7 I could use `go generate` to generate $GOROOT\\src\\syscall\\zsyscall_windows.go on my Linux computer. Not anymore:\r\n```\r\n# cd $GOROOT/src/syscall                                                 \r\n# go version                                                             \r\ngo version devel +a1110c3 Tue Jul 12 19:18:08 2016 +0000 linux/386                   \r\n# GOOS=windows go generate                                               \r\nfork/exec /tmp/go-build001548608/command-line-arguments/_obj/exe/mksyscall_windows.exe: exec format error                                                                 \r\nsyscall_windows.go:17: running \"go\": exit status 1                                   \r\n#                                                                        \r\n```\r\n\r\nThis is because `go generate` command respect GOOS and GOARCH now. I tried running `go generate` without GOOS=windows, but it does nothing because //go:generate is in syscall_windows.go (windows only file).\r\n\r\nIan suggested (https://github.com/golang/go/issues/16120#issuecomment-232481269) we should move //go:generate line into syscall.go.\r\n\r\nWe have other packags std and x/... that use mksyscall_windows.go in a similar fashion. This issue is to make sure everything is fixed.\r\n\r\nAlex",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"comments": 9,
	"closed_at": "2016-08-24T00:53:30Z",
	"created_at": "2016-07-14T07:25:38Z",
	"updated_at": "2016-08-26T08:00:39Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
