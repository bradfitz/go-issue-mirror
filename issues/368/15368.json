{
	"id": 149496862,
	"number": 15368,
	"state": "closed",
	"title": "Golang catch stdout and send http.ResponseWriter",
	"body": "1. What version of Go are you using (`go version`)?\r\ngo version go1.6 linux/amd64\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/loow/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\r\nGO15VENDOREXPERIMENT=\"1\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n3. What did you do?\r\nI wanted to catch the whole os.Stdout and os Stderr and send it in http response. I didn't get the whole. Example at the git clone.\r\n\r\n4. What did you expect to see?\r\n```\r\nCloning into '/home/loow/github/wallball'...\r\nremote: Counting objects: 13, done.\r\nremote: Total 13 (delta 0), reused 0 (delta 0), pack-reused 13\r\nUnpacking objects: 100% (13/13), done.\r\nChecking connectivity... done.\r\n```\r\n\r\n5. What did you see instead?\r\n```\r\nCloning into '/home/loow/github/wallball'...\r\n```\r\n\r\nMy code: \r\n```\r\ntype flushWriter struct {\r\n\tf http.Flusher\r\n\tw io.Writer\r\n}\r\n\r\nfunc (fw *flushWriter) Write(p []byte) (n int, err error) {\r\n\tn, err = fw.w.Write(p)\r\n\teH(err)\r\n\tif fw.f != nil {\r\n\t\tfw.f.Flush()\r\n\t}\r\n\treturn\r\n}\r\n\r\nfunc pioBuild(w http.ResponseWriter, r *http.Request) {\r\n\r\n\tfw := flushWriter{w: w}\r\n\tif f, ok := w.(http.Flusher); ok {\r\n\t\tfw.f = f\r\n\t}\r\n\tcmd := exec.Command(\"/bin/sh\", \"/srv/pio/build.sh\")\r\n\tcmd.Stdout = \u0026fw\r\n\r\n\r\n\tcmd.Stderr = \u0026fw\r\n\r\n\tcmd.Start()\r\n\tcmd.Wait()\r\n\r\n\tio.WriteString(w, \"End\")\r\n}\r\n```\r\n",
	"user": {
		"login": "PumpkinSeed",
		"id": 5867522,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-04-19T15:44:47Z",
	"created_at": "2016-04-19T15:31:55Z",
	"updated_at": "2016-04-19T16:07:01Z"
}
