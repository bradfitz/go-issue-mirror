{
	"id": 51277670,
	"number": 1338,
	"state": "closed",
	"title": "Cannot take the address of the result of append",
	"body": "by **yiyu.jgl**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n\n// Example:\npackage main\n\nfunc main() {\n\t_ = \u0026amp;append([]int{1, 2}, 3)[:]\n}\n\nWhat is the expected output?\n\nA successful compile.\n\nWhat do you see instead?\n\nprog.go:4: cannot take the address of append(slice literal, 3)[:]\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\nWhich operating system are you using?\nWhich revision are you using?  (hg identify)\n\nGo Playground at golang.org\n\nPlease provide any additional information below.\n\nIn my opinion, it should be possible to directly take the address of append, as in\n\u0026amp;append(a, b), but I'm not sure the spec allows it. However, it specifically says\nthe address operator can be used with an slice indexing operation, so I think it should\nwork for \u0026amp;append(a, b)[:]\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:07:53Z",
	"created_at": "2010-12-11T10:45:51Z",
	"updated_at": "2016-06-24T19:23:05Z"
}
