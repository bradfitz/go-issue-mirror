{
	"id": 168295675,
	"number": 16535,
	"state": "open",
	"title": "x/tools/cmd/gorename: keyword as identifier",
	"body": "While refactoring some code written a bit too C-stylish with constants in uppercase I by mistake renamed a constant named SWITCH to switch.  This particular operation was successful but the next rename failed.\r\n\r\nI remember reading that gorename should take a well-typed program and either return an error or another well-typed program as its output. But in this case it broke the code for me by my own stupidity.\r\n\r\nWould it be possible to have gorename check for reserved keywords before applying the requested changes?\r\n\r\n```\r\npackage main\r\nfunc main() {\r\n\tSWITCH := \"X\"\r\n\t_ = SWITCH\r\n}\r\n```\r\nRenaming the variable SWITCH to lowercase and then trying to rename it to something else.\r\n```\r\n$ gorename -from 'main.go::SWITCH' -to switch\r\nRenamed 2 occurrences in 1 file in 1 package.\r\n\r\n$ gorename -from 'main.go::switch' -to toggleSwitch\r\n/Users/matseng/gocode/src/github.com/smallroomlabs/bug1/main.go:4:9: expected operand, found ':=' (and 2 more errors)\r\ngorename: couldn't load packages due to errors: github.com/smallroomlabs/bug1\r\n```",
	"user": {
		"login": "SmallRoomLabs",
		"id": 325326,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2016-07-29T10:24:24Z",
	"updated_at": "2016-08-01T16:00:49Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
