{
	"id": 51286848,
	"number": 7535,
	"state": "open",
	"title": "encoding/xml: Encoder duplicates namespace tags",
	"body": "by **seanerussell**:\n\n\u003cpre\u003e== What does 'go version' print?\n\ngo version go1.2.1 darwin/amd64\n\n== What steps reproduce the problem?\n\n\u003ca href=\"http://play.golang.org/p/3_oUruPYhq\"\u003ehttp://play.golang.org/p/3_oUruPYhq\u003c/a\u003e\n\n== What happened?\n\nEncoder.EncodeToken duplicates namespace attributes.\n\n== What should have happened instead?\n\nThe encoded document should have had a single namespace attribute.\n\n== Please provide any additional information below.\n\nAttribute names on an element must be unique; this is a well-formedness constraint per\nthe XML 1.0 specification (\u003ca href=\"http://www.w3.org/TR/xml/#uniqattspec)\"\u003ehttp://www.w3.org/TR/xml/#uniqattspec)\u003c/a\u003e. Per the\nspecification, both validating and non-validating parsers must report well-formedness\nviolations (\u003ca href=\"http://www.w3.org/TR/xml/#sec-conformance)\"\u003ehttp://www.w3.org/TR/xml/#sec-conformance)\u003c/a\u003e.\n\nEncoding and decoding XML documents should be idempotent and produce equivalent\ndocuments.  This issue means that not only that decoding and encoding the result\nproduces a non-equivalent document, but that the document it generates is\nnot-well-formed.\n\nThis issue only occurs with namespaces.  Normal attributes are handled correctly.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		}
	],
	"comments": 6,
	"created_at": "2014-03-13T11:32:21Z",
	"updated_at": "2016-10-07T18:26:37Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
