{
	"id": 125305547,
	"body": "That sounds good, but it is very far from the case with HTML5. HTML5 takes Postel's principle to the extreme: any random string of data can be parsed as an HTML5 document. (It probably won't validate, but it will parse.) There are places in the spec where parsers are allowed to return errors, but they also specify what the result should be if they don't. In all those cases, we chose to have the html package continue parsing instead of returning an error.\r\n\r\nHaving the rendered output exactly the same as the input is actually quite rare, because of things like capitalization and attribute quoting. `\u003cINPUT TYPE=TEXT\u003e` renders as `\u003cinput type=\"text\" /\u003e`. But where things get really interesting is in situations like this where the parse tree is not well-formed. See http://godoc.org/golang.org/x/net/html#Render for more details.",
	"user": {
		"login": "andybalholm",
		"id": 868908,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-27T18:59:09Z",
	"updated_at": "2015-07-27T18:59:09Z"
}
