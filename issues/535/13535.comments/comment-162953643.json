{
	"id": 162953643,
	"body": "With the background sweeper disabled as a workaround, the performance metrics become much clearer:\r\n\r\nBefore:\r\n```\r\n       4901.222760 task-clock (msec)         #    1.054 CPUs utilized            ( +-  0.13% )\r\n             2,136 context-switches          #    0.436 K/sec                    ( +-  2.96% )\r\n                99 cpu-migrations            #    0.020 K/sec                    ( +-  6.83% )\r\n            82,005 page-faults               #    0.017 M/sec                    ( +-  0.18% )\r\n    18,211,805,777 cycles                    #    3.716 GHz                      ( +-  0.18% )\r\n     5,917,997,422 stalled-cycles-frontend   #   32.50% frontend cycles idle     ( +-  0.53% )\r\n   \u003cnot supported\u003e stalled-cycles-backend  \r\n    42,052,410,589 instructions              #    2.31  insns per cycle        \r\n                                             #    0.14  stalled cycles per insn  ( +-  0.04% )\r\n     7,711,177,418 branches                  # 1573.317 M/sec                    ( +-  0.04% )\r\n        16,829,018 branch-misses             #    0.22% of all branches          ( +-  0.21% )\r\n\r\n       4.650601834 seconds time elapsed                                          ( +-  0.12% )\r\n\r\n        12,926,113 cache-misses              #   41.799 % of all cache refs      ( +-  0.22% )\r\n        30,924,384 cache-references                                              ( +-  0.42% )\r\n\r\n       4.643145976 seconds time elapsed                                          ( +-  0.15% )\r\n```\r\n\r\nAfter:\r\n```\r\n       5000.849191 task-clock (msec)         #    1.050 CPUs utilized            ( +-  0.24% )\r\n             2,122 context-switches          #    0.424 K/sec                    ( +-  2.10% )\r\n               107 cpu-migrations            #    0.021 K/sec                    ( +-  6.88% )\r\n            82,336 page-faults               #    0.016 M/sec                    ( +-  0.15% )\r\n    18,617,298,137 cycles                    #    3.723 GHz                      ( +-  0.11% )\r\n     6,249,607,127 stalled-cycles-frontend   #   33.57% frontend cycles idle     ( +-  0.32% )\r\n   \u003cnot supported\u003e stalled-cycles-backend  \r\n    42,576,852,645 instructions              #    2.29  insns per cycle        \r\n                                             #    0.15  stalled cycles per insn  ( +-  0.02% )\r\n     7,554,217,419 branches                  # 1510.587 M/sec                    ( +-  0.02% )\r\n        17,991,876 branch-misses             #    0.24% of all branches          ( +-  0.11% )\r\n       \r\n       4.762153202 seconds time elapsed                                          ( +-  0.16% )\r\n\r\n        19,667,208 cache-misses              #   42.460 % of all cache refs      ( +-  0.11% )\r\n        46,319,111 cache-references                                              ( +-  0.30% )\r\n\r\n       4.751449585 seconds time elapsed                                          ( +-  0.12% )\r\n```\r\n\r\nIt's clear we're getting for more LLC references and misses. The increased LLC references are presumably from lower-level cache misses. All of the other counters are virtually identical between the runs.\r\n\r\nA differential profile of cache-references shows that runtime.memclr goes from 0.75% to 27.82% (1st place) and runtime.mCentral_Grow goes from 0.34% to 2.70% (6th place).  The rest of the profile is basically unchanged.\r\n\r\nAccording to `perf record -g -e cache-references ./bench.after.fp -test.bench Binary`, 99% of the cache-references in memclr are from newobject -\u003e mCache_Refill -\u003e mCentral_CacheSpan -\u003e mCentral_Grow -\u003e mHeap_Alloc -\u003e memclr.\r\n\r\nCounting the number of mCache_Grow calls reveals that this commit raised it by 6X from 38,805 to 232,021. However, we're clearly satisfying these from the heap (not from the OS), because the max RSS is virtually unchanged at ~600MB.",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-08T17:29:54Z",
	"updated_at": "2015-12-08T17:29:54Z"
}
