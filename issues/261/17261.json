{
	"id": 179748404,
	"number": 17261,
	"state": "open",
	"title": "x/time/rate: document that the rate limiter is safe for concurrent usage",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### What version of Go are you using (`go version`)?\r\n\r\ngo version go1.7.1 linux/amd64\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/ingo/sources/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build059178747=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n\r\n### What did you do?\r\n\r\nRead documentation of https://godoc.org/golang.org/x/time/rate\r\n\r\n### What did you expect to see?\r\n\r\nMention that all types (or at least which types, functions, methods) are safe for concurrent usage and don't need extra locking around them.\r\n\r\n### What did you see instead?\r\n\r\nNothing. But I concluded that by reading the code.\r\n",
	"user": {
		"login": "nightlyone",
		"id": 1767118,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		}
	],
	"comments": 1,
	"created_at": "2016-09-28T11:35:07Z",
	"updated_at": "2016-09-28T16:15:31Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
