{
	"id": 51282392,
	"number": 4618,
	"state": "closed",
	"title": "cmd/gc: \u0026T{} will always be allocated on heap even when it never escapes",
	"body": "\u003cpre\u003eThis program:\npackage main\n\ntype T struct { int }\n\nfunc main() {\n        a := new(T)\n        b := \u0026amp;T{}\n        if a == b { println(\u0026quot;OK\u0026quot;) }\n}\n\nwhen compiled with gc -m it says:\nx.go:5: can inline main\nx.go:6: main new(T) does not escape\nx.go:7: main \u0026amp;T literal does not escape\n\nbut inspecting the generated assembly shows that b is allocated on heap despite\nthe fact that b doesn't escape.\u003c/pre\u003e",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Performance"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:24:32Z",
	"created_at": "2013-01-05T09:04:07Z",
	"updated_at": "2016-06-24T22:30:46Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
