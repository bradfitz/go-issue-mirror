{
	"id": 51281886,
	"number": 4263,
	"state": "closed",
	"title": "spec:  loosen restriction on pointer comparisons",
	"body": "by **r.w.johnstone**:\n\n\u003cpre\u003eWhile go does not support pointer arithmetic, that does not necessarily preclude\nallowing pointer comparison.\n\nAs a motivating example, consider a structure implementing set operations.  One approach\nwould be to keep the pointers sorted in an array.  This allows quick member testing and\nquick comparison.  However, it is difficult to sort the pointers (An address can be\nretrieved through the reflection API) without using unsafe.\n\nSince pointer equality is already supported, pointer comparisons (i.e. \u0026lt; and \u0026gt;)\nwould be natural.  Alternatively, the language could support casting any pointer to\nuintptr, although obviously the reverse cast would still need to require unsafe.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:22:41Z",
	"created_at": "2012-10-19T17:36:24Z",
	"updated_at": "2016-06-24T22:26:46Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
