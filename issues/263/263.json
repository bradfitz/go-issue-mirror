{
	"id": 51276256,
	"number": 263,
	"state": "closed",
	"title": "http.ServeMux could allow a user specified default handler",
	"body": "by **Scott.Kimble**:\n\n\u003cpre\u003eWhich revision are you sync'ed to?  (hg log -l 1)\nchangeset:   3975:b51fd2d6c160\ntag:         tip\n\nIn some cases, a user of http.ServeMux my want to control the contents of a\n\u0026quot;404 page not found\u0026quot; response.\n\nBelow is a patch intended as an example of how it may be done.  The example\ndemonstrates 2 approaches.\n\nThe first approach defines an additional func, DeafultHandle, that is\ncalled to override the default handler.  I takes 1 parameter, the custom\nhandler.\n\nThe second approach allows the a user to specify \u0026quot;\u0026quot;, the empty string, as\nthe pattern parameter when calling Handle.  In this case, the handler\nparameter will be used to override the default handler. \n\ndiff -r b51fd2d6c160 src/pkg/http/server.go\n--- a/src/pkg/http/server.go\tTue Nov 10 20:05:24 2009 -0800\n+++ b/src/pkg/http/server.go\tWed Nov 18 21:15:46 2009 -0800\n@@ -424,0 +424,5 @@\n+// An internal default handler is called when no other handler matches.\n+// The user override the default handler in one of 2 ways.\n+//   1: Call Handler with the pattern set to \u0026quot;\u0026quot;, the empty string.\n+//   2. Call DefaultHandler.\n+//\n@@ -429,0 +434,1 @@\n+\tdh Handler;\n@@ -432,1 +438,1 @@\n-func NewServeMux() *ServeMux\t{ return \u0026amp;ServeMux{make(map[string]Handler)} }\n+func NewServeMux() *ServeMux\t{ return \u0026amp;ServeMux{make(map[string]Handler),\nNotFoundHandler()} }\n@@ -490,1 +496,1 @@\n-\t\th = NotFoundHandler()\n+\t\th = mux.dh;\n@@ -496,0 +502,2 @@\n+// When the pattern parameter is \u0026quot;\u0026quot;, the empty string, the handler\n+// parameter is\n@@ -497,1 +505,6 @@\n-\tif pattern == \u0026quot;\u0026quot; || pattern[0] != '/' {\n+\tif pattern == \u0026quot;\u0026quot; {\n+\t\tmux.dh = handler;\n+\t\treturn;\n+\t}\n+\n+\tif pattern[0] != '/' {\n@@ -511,0 +524,4 @@\n+func (mux *ServeMux) DefaultHandle(handler Handler) {\n+\tmux.dh = handler;\n+}\n+\n@@ -515,0 +532,5 @@\n+// DefaultHandle registers the handler parameter as the default handler \n+// in the DefaultServeMux.  This handler is called when no other\n+// handler matches.\n+func DefaultHandle(handler Handler)\t{ DefaultServeMux.DefaultHandle(handler) }\n+\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2014-12-08T10:03:53Z",
	"created_at": "2009-11-19T05:27:47Z",
	"updated_at": "2016-06-24T19:05:38Z"
}
