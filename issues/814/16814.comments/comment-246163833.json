{
	"id": 246163833,
	"body": "@minux Initially my need was to find out where the binaries in my bin/ came from (import path). This is useful for many things, including updating installed binaries (think `go get -u`). https://github.com/FiloSottile/gorebuild basically does this, but it only appears to work with the same GOPATH, as the import path is not stored to the binary, so it has its limitations. Version information (vcs id, tag/branch) stored in the binary would make this even better, and could even be used by programs to display their own version information that way.\r\n\r\nHopefully the first part is uncontroversial and you can agree that at least the path that could be used with go get should be reliably available to enable a better gorebuild, regardless whether the binary came from a binary distribution, scp'ed from another machine or go get.\r\n\r\n\r\nMy argument for the imported packages would be about transparency and auditability, secure development practices. For example it could be used to detect whether the binary is affected by a bug fix or vulnerability, and as a way of e.g. re-creating the build artifact (e.g. validate that a build is not compromised). It would be great if it was possible to independently re-create a binary build, all the way to matching checksum. Maybe this would come with an opt-out.",
	"user": {
		"login": "joneskoo",
		"id": 305104,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-11T06:00:05Z",
	"updated_at": "2016-09-11T06:00:05Z"
}
