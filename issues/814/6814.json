{
	"id": 51285770,
	"number": 6814,
	"state": "open",
	"title": "cmd/compile: improve compiler error message when accessing type instead of instance of type",
	"body": "\u003cpre\u003e\u003ca href=\"http://play.golang.org/p/54n3Rs7JHT\"\u003ehttp://play.golang.org/p/54n3Rs7JHT\u003c/a\u003e\n\nIf you have a function that has f which is a Foo, and try to reference Foo.Bar instead\nof f.Bar, you get the following error message:\n\nprog.go:10: Foo.Bar undefined (type Foo has no method Bar)\n [process exited with non-zero status]\n\nI can see where this is coming from, because it's valid syntax if you're trying to get a\nmethod, but I wonder if there could be a different error message when Foo has the field\nBar as in this case Foo is trying to be used as a value.\u003c/pre\u003e",
	"user": {
		"login": "btracey",
		"id": 3680859,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"created_at": "2013-11-21T22:11:32Z",
	"updated_at": "2015-06-08T06:22:52Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
