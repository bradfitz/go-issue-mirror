{
	"id": 115326261,
	"number": 13162,
	"state": "open",
	"title": "cmd/compile: performance issue with ranging over string",
	"body": "Looping over a string with range is significantly slower than using utf8.DecodeRuneInString.\r\n\r\nSo using \r\n`for i, r := range s { ... }`\r\n\r\nis significantly slower than \r\n\r\n```go\r\nvar size int\r\nfor i := 0; i \u003c len(s); {\r\n\t\tr := rune(s[i])\r\n\t\tif r \u003c RuneSelf {\r\n\t\t\ti++\r\n\t\t} else {\r\n\t\t\tr, size = DecodeRune(s[i:])\r\n\t\t\ti += size\r\n\t\t}\r\n}\r\n```\r\n\r\nAn (approximate) example of is one gets by comparing the benchmarks of the implementations for bytes and strings in unicode/utf8:\r\n\r\n```\r\nBenchmarkRuneCountTenASCIIChars-8           \t100000000\t        16.6 ns/op\r\nBenchmarkRuneCountInStringTenASCIIChars-8   \t30000000\t        43.1 ns/op\r\n\r\nBenchmarkValidTenASCIIChars-8               \t100000000\t        13.8 ns/op\r\nBenchmarkValidStringTenASCIIChars-8         \t30000000\t        52.5 ns/op\r\n```\r\n\r\nThe benchmarks for the *String versions are considerably slower than their bytes counterparts, when processing ASCII.",
	"user": {
		"login": "mpvl",
		"id": 6445383,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Performance"
		}
	],
	"assignee": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2015-11-05T16:50:56Z",
	"updated_at": "2016-05-05T17:12:34Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
