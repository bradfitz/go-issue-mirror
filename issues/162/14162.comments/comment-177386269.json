{
	"id": 177386269,
	"body": "Looks like our replies crossed.\r\n\r\n\u003e All we need is a way for goroutines (or functions) to register that they want to handle an OOM panic. The heavy allocation functions register this interest and no-one else does.\r\n\r\nI see. I think this is how you're proposing to get around failed allocations on system goroutines as well (though it's still a problem for failed allocations on system stacks). Still, if the failed allocation happens on a goroutine that isn't registered for OOM panics, what happens? Do you pick a random registered goroutine to take the panic? Do you trigger the panic no matter where the goroutine(s) is/are, even if it's not in allocation?\r\n\r\nI'll have to think about this a bit. I'm still interested in exploring alternative mechanisms.",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-31T04:31:51Z",
	"updated_at": "2016-01-31T04:31:51Z"
}
