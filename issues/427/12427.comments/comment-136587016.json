{
	"id": 136587016,
	"body": "When you say that something takes a *C.char as its argument and describe that as a C string, you are creating the expectation in many readers that it will actually be treated as a C string. C strings are null terminated (and so by definition do not contain nulls). Making an argument an unsafe.Pointer (and not calling it a C string in documentation) makes it clear that it is not being treated as a C string and so nulls do not matter. Contrast the lack of ambiguity in C.GoBytes versus the current ambiguity in C.GoStringN.\r\n\r\nI agree that C.GoStringN serves a useful purpose today with its current semantics and anyway, the current behaviour is what it is and people have written code to that behaviour. I just want those semantics to be clear to everyone who reads `godoc cmd/cgo`.",
	"user": {
		"login": "siebenmann",
		"id": 865382,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-09-01T05:00:35Z",
	"updated_at": "2015-09-01T05:00:35Z"
}
