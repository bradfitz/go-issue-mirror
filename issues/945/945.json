{
	"id": 51277145,
	"number": 945,
	"state": "closed",
	"title": "UnixGram implementation problems",
	"body": "by **jdnurmi**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. See attached (C) (go) and (python) files\n  - Python files are demonstration senders (unbound unix socket and bound unix sockets)\n  - C shows returns \u0026amp; errors for packets RX'd\n  - .go's implement unix dgram using Read, ReadFrom, and for kicks, ReadFromUDP.\n2. Make files;  See that the .c rxsock always reports data received (but not always an\naddress) regardless of a bound or unbound client.\n3. Run any of the .go versions to experience deviations.\n\nWhat is the expected output?\nI would expect the matrix of Data\u0026amp;Addr to yield:\n\n           |Bound|Unbound|Error|\nRead       |   X | X     | -   |\nReadFrom   |   X | X (nil address)| ?|\nReadFromUDP| -   | -     | X |\n\nIn all cases (but the last), I would expect Read* to return the number of bytes read,\nand the error (or lack of address) to indicate an unbound sender.\n\nReadFrom should return the sending unix socket address when querying readFrom, instead\nof returning null\n\nWhat do you see instead?\n\nRead always works.\nReadFrom returns 0 for len, an error, and a nil address for an un-named socket.\nReadFrom returns the correct number of bytes, no address, and an error for a named\nsocket.\n\n\nReadFrom returns nil for the address regardless of a bound or unbound client socket.\n\nWhat is your $GOOS?  $GOARCH?\nlinux, amd64\n\nWhich revision are you using?  (hg identify)\npulled  HEAD, 20100722\n\nPlease provide any additional information below.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2014-12-08T10:06:27Z",
	"created_at": "2010-07-23T19:03:50Z",
	"updated_at": "2016-06-24T19:18:00Z"
}
