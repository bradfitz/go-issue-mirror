{
	"id": 66051974,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eIt's actually the call to Printf that leads to the panic. The *UDPAddr type has a String\nmethod that dereferences the pointer, and if it's a nil pointer (as in this case) it\npanics. I've created a CL.\n\nRelevant stack trace:\n\nadg ~/test/udp$ ./rxsock-go-readfrom-udp \npanic: runtime error: invalid memory address or nil pointer dereference\n\npanic PC=0x2c39e8\nruntime.panic+0x7c /Users/adg/go/src/pkg/runtime/proc.c:1012\n\truntime.panic(0x0, 0x7830)\npanicstring+0x60 /Users/adg/go/src/pkg/runtime/runtime.c:83\n\tpanicstring(0x5cf70, 0x2ea240)\nsigpanic+0x84 /Users/adg/go/src/pkg/runtime/darwin/thread.c:459\n\tsigpanic()\nnet.*UDPAddr·String+0x17 /Users/adg/go/src/pkg/net/udpsock.go:33\n\tnet.*UDPAddr·String(0x16d9d, 0x32f068, 0x20000000c, 0x66e7)\nfmt.*pp·printField+0x26d6 /Users/adg/go/src/pkg/fmt/print.go:626\n\tfmt.*pp·printField(0x0, 0x5e4d8, 0x0, 0x2dd420, 0x0, ...)\nfmt.*pp·doPrintf+0x6cc /Users/adg/go/src/pkg/fmt/print.go:958\n\tfmt.*pp·doPrintf(0x32f000, 0x5e4d8, 0x0, 0x76, 0x0, ...)\nfmt.Fprintf+0x57 /Users/adg/go/src/pkg/fmt/print.go:263\n\tfmt.Fprintf(0x32f000, 0x62078, 0x13, 0x2dd210, 0x300000003, ...)\nfmt.Printf+0x72 /Users/adg/go/src/pkg/fmt/print.go:271\n\tfmt.Printf(0x2dd2a0, 0x2d4090, 0x62078, 0x13, 0x2dd210, ...)\nmain.main+0x31b /Users/adg/test/udp/rxsock-readfrom-udp.go:24\n\tmain.main()\nmainstart+0xf /Users/adg/go/src/pkg/runtime/amd64/asm.s:60\n\tmainstart()\ngoexit /Users/adg/go/src/pkg/runtime/proc.c:145\n\tgoexit()\u003c/pre\u003e\n\n\n_Owner changed to **a...@golang.org**._\n\n_Status changed to **Accepted**._",
	"user": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-07-26T02:31:12Z",
	"updated_at": "2014-12-08T10:06:27Z"
}
