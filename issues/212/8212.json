{
	"id": 51287851,
	"number": 8212,
	"state": "closed",
	"title": "Language Specification is unclear about first-in-first-out property of channels.",
	"body": "\u003cpre\u003eSee: \u003ca href=\"http://golang.org/ref/spec#Channel_types\"\u003ehttp://golang.org/ref/spec#Channel_types\u003c/a\u003e\n\nThe Language Specification states about channels:\n\n    \u0026quot;Channels act as first-in-first-out queues.\u0026quot;\n\nAllways? Even with multiple senders on a blocked channel? Is the first blocked send used\nonce there is a receive possible? At the moment, this seems to be the case, but is this\naccidental, or intentional?\n\nThe next sentence is:\n\n    \u0026quot;For example, if one goroutine sends values on a channel and a second goroutine receives them, the values are received in the order sent.\u0026quot;\n\nWhat other examples are there? Are there examples of when a channel doesn't act as a\nirst-in-first-out queue?\u003c/pre\u003e",
	"user": {
		"login": "pebbe",
		"id": 829557,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:45:34Z",
	"created_at": "2014-06-15T15:05:15Z",
	"updated_at": "2016-06-25T01:36:31Z"
}
