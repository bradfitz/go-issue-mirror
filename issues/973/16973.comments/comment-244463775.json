{
	"id": 244463775,
	"body": "0: common ancestor when all descendants compute E.\r\n1: common ancestor when all non-panic descendants compute E.\r\n2: common ancestor when all high-frequency (within-loop) descendants compute E.\r\n3: common ancestor when all high-frequency (according to profiling) descendants compute E.\r\n\r\nIt might be less of a problem child if we're careful; I recall a lot of the work goes into the partitioning, less into the finding common paths.\r\n\r\nRecall we already sort by dominator entry-number -- if there is a common ancestor to a bunch of nodes, then the first one is leftmost at its depth, and all the intervals (modulo numbering offset games, which we can deal with in a minute) must fill the interval of the common ancestor.  There's some generational glitches -- suppose a is ancestor, and a.LL, a.LR, a.RRL, a.RRR,  a.RL all have a common E, then LL+LR implies L, RRL+RRR implies RR, RR+RL implies R, L+R implies A.\r\n\r\nThis might be a clever little recursive algorithm that is not that expensive.\r\n\r\nHandling the more complex cases might work best if we compute a dominator tree/forest for a flow graph that doesn't include panic edges, and we wouldn't want to extend lifetimes unnecessarily anyway just because a block had a common ancestor with a panic that shared a CSE.  I.e., we could compute a different dominator numbering and use that for CSE purposes to get the effect of (1) above",
	"user": {
		"login": "dr2chase",
		"id": 1928999,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-02T19:14:15Z",
	"updated_at": "2016-09-02T19:14:15Z"
}
