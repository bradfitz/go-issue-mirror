{
	"id": 182984946,
	"body": "@bep knows this as well as anyone. \r\n\r\nI'm not sure if I understand this all correctly at all. From my reading of this thread and some of the related ones it sounds to me like go template blocks will use a vanilla *template.Template for the children (overriders)?\r\n\r\nIf so I think the approach the go team has taken makes sense from an implementation perspective, but is also a bit shortsighted. I don't think it's reasonable to assume that people would want a plain `*template.Template` for each of the master templates, particularly if they (as is in Hugo's case) have extended the functionality of the templates with additional functions. It seems very odd to me that these functions would be present in the parent but not in the children templates (not sure what the right terminology is here).\r\n\r\nI've always thought the templates worked a bit strangely as you need to create a template and then chain off of it to create others, but it's worked really well for Hugo by creating an empty template at the root, customizing it and then all of the others effectively extend it. It's disappointing that this feature would not respect that valid use pattern. \r\n\r\nPlease correct me if I'm wrong.\r\n\r\n ",
	"user": {
		"login": "spf13",
		"id": 173412,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-11T18:12:52Z",
	"updated_at": "2016-02-11T18:37:45Z"
}
