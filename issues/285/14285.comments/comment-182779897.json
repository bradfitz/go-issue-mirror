{
	"id": 182779897,
	"body": "Hugo's approach is basically:\r\n\r\n```\r\nroot := template.New(\"\")\r\nroot.Funcs(funcs)\r\n// add embedded templates ...\r\n\r\n// Then add all the user and theme templates (including partials, shortcodes, views)\r\n// may use a master/overlay construct\r\nroot.New(\"template1\").Parse(...)\r\nroot.New(\"template2\").Parse(...)\r\n\r\n// ...\r\n\r\ntemplateForPage := root.Lookup(\"template1\")\r\n```\r\n\r\nIf I read you correct, this approach will not work with blocks and master/overlay templates, but you would have to get rid of the global and track the individual templates (with funcs and all the other dependencies (templates) duplicated/cloned) in your own registry?\r\n\r\nI guess that would work, but it sounds like fighting the original design .\r\n\r\nNot sure what I expected by the new `block` feature, but I did expect it to be more integrated, something a la:\r\n\r\n```\r\nroot.New(\"template1\").Parse(master, overlay)\r\n```",
	"user": {
		"login": "bep",
		"id": 394382,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-11T09:27:52Z",
	"updated_at": "2016-02-11T17:42:09Z"
}
