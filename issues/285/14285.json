{
	"id": 132645589,
	"number": 14285,
	"state": "closed",
	"title": "text/template: make blocks easier to use",
	"body": "I spent a little too much time trying to get the new `block` syntax in Go 1.6 implemented in `Hugo`, with no success. \r\n\r\nWhich is telling me that you should try to supply a \"more real\" example in the documentation. \r\n\r\nHugo uses the built-in associative transitive map to store its templates, so adding a new template is something like:\r\n\r\n```go\r\nhugoTemplates.New(\"homePage\").Parse(someTemplate)\r\n```\r\n\r\nAs I understand the new `block` implementation, one needs to first parse it with the master file (with the `block` keywords), then do a \"overlay\" (a modification, a re-parsing) of the same template with the template with the definitions.\r\n\r\nHow to do that with the above I cannot figure out (other than the simple standalone clone example in the doc -- I could clone it, but how do I replace the template in the map?).\r\n\r\nMy naive approach would be:\r\n\r\n```go\r\nm, _ := hugoTemplates.New(\"home\").Parse(master)\r\nm.Parse(overlay)\r\n``` \r\n\r\nAnd this works ... for the first template. Adding a second breaks in confusing ways.\r\n\r\nRef. https://github.com/spf13/hugo/issues/1832\r\n\r\nAlso see https://github.com/golang/go/issues/3812",
	"user": {
		"login": "bep",
		"id": 394382,
		"type": "User",
		"site_admin": false
	},
	"comments": 23,
	"closed_at": "2016-10-10T19:18:36Z",
	"created_at": "2016-02-10T09:21:24Z",
	"updated_at": "2016-10-10T19:18:36Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
