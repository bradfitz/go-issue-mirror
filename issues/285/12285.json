{
	"id": 102668310,
	"number": 12285,
	"state": "closed",
	"title": "fmt: value implementing Stringer (GoString) cause infinite recursion with %s (%v)",
	"body": "The fmt.Print{f, ln} function generates a stackoverflow when the format flag is `%v` to output the value of a type that implements the Stringer interface.  This is true when the implementation of the String() method also uses `fmt` with flag `%v` or `%s` flag to output the string as shown in the example below.\r\n\r\n**1)What version of Go are you using (go version)?**\r\n`go version go1.4.2 linux/amd64`\r\n\r\n**2) What operating system and processor architecture are you using?**\r\nUbuntu 14 trusty\r\nLinux Kernel 3.14\r\n\r\n**3)What did you do ?**\r\nThe following simple program.\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n)\r\n\r\ntype mytype string\r\n\r\nfunc (m mytype) String() string {\r\n\treturn fmt.Sprintf(\"%s\", m)\r\n}\r\n\r\nfunc main() {\r\n\ts := mytype(\"hello\")\r\n\tfmt.Printf(\"%v\", s)\r\n}\r\n```\r\n4) **What did you expect to see?**\r\nExpects the value of `s` to be printed.\r\n\r\n**5) What did you see instead?**\r\n```\r\nruntime: goroutine stack exceeds 1000000000-byte limit\r\nfatal error: stack overflow\r\n```",
	"user": {
		"login": "vladimirvivien",
		"id": 309126,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2015-08-24T00:31:50Z",
	"created_at": "2015-08-23T22:48:34Z",
	"updated_at": "2016-08-24T06:01:33Z"
}
