{
	"id": 96580145,
	"number": 11823,
	"state": "closed",
	"title": "runtime: getproccount fails on systems with large CPU masks",
	"body": "`runtime.getproccount()` lacks a retry loop with a growing buffer.  If the kernel CPU mask exceeds the supplied size (1024 bits), `r` will be an error code, and the function will panic.\r\n\r\nThis is from a system with a CPU mask size of 4096 bits:\r\n\r\n    panic: nil\r\n    fatal error: panic on system stack\r\n    runtime: panic before malloc heap initialized\r\n    \r\n    runtime stack:\r\n    fatal error: gentraceback before goexitPC initialization\r\n    runtime: panic before malloc heap initialized\r\n    panic during panic\r\n    \r\n    runtime stack:\r\n    fatal error: gentraceback before goexitPC initialization\r\n    runtime: panic before malloc heap initialized\r\n    stack trace unavailable\r\n\r\nNote that the kernel CPU mask may be significantly larger than the number of threads supported by the system, depending on the CPU topology reported by the firmware to the kernel.",
	"user": {
		"login": "fweimer",
		"id": 2729073,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2015-07-22T20:54:17Z",
	"created_at": "2015-07-22T14:21:04Z",
	"updated_at": "2016-08-05T16:10:53Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
