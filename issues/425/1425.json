{
	"id": 51277788,
	"number": 1425,
	"state": "closed",
	"title": "select can be unfair",
	"body": "by **ejsherry**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n;cat unfair.go\npackage main\n\nimport \u0026quot;fmt\u0026quot;\n\nfunc main() {\n\tc := make(chan bool)\n\td := make(chan bool)\n\tgo func() {\n\t\tfor {\n\t\t\tc \u0026lt;- true\n\t\t}\n\t}()\n\tvar A [3]int\n\tfor i := 0; i \u0026lt; 4000; i++ {\n\t\tselect {\n\t\tcase \u0026lt;-c:\n\t\t\tA[0]++\n\t\tcase \u0026lt;-c:\n\t\t\tA[1]++\n\t\tcase \u0026lt;-c:\n\t\t\tA[2]++\n\t\tcase \u0026lt;-d:\n\t\t}\n\t}\n\tfmt.Println(A)\n}\n;6g unfair.go\u0026amp;\u0026amp;6l unfair.6\u0026amp;\u0026amp;./6.out\n\nWhat is the expected output?\n[1333 1333 1333], approximately.\n\nWhat do you see instead?\n[1484 1008 1508]\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nlinux\n\nWhich revision are you using?  (hg identify)\n8daa95cbf1cf\n\nPlease provide any additional information below.\nBoth pass 1 and 2 of runtimeÂ·selectgo exhibit this unfair behaviour. By contrast,\nNewsqueak's select and plan9port's libthread behave fairly.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/1425/0/unfair.go\"\u003eunfair.go\u003c/a\u003e (286 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:08:16Z",
	"created_at": "2011-01-17T23:08:20Z",
	"updated_at": "2016-06-24T19:24:12Z"
}
