{
	"id": 158688762,
	"body": "@cznic You understand that's not the problem that's biting us here, right?  What we're worried about is where an important field is loaded from an object (like an OS file or socket descriptor), the object goes unreachable at some point within a function, yet the field value is still in use.  If the object has a finalizer, and if the finalizer (say) closes that file while the called function is still using it, that's a problem.  It's neither new nor unique to either Go or native code.\r\n\r\nThis becomes more likely the more excited the optimizer is.  The optimizer has to be taught some manners in the presence of finalizers.",
	"user": {
		"login": "dr2chase",
		"id": 1928999,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-11-21T22:53:02Z",
	"updated_at": "2015-11-21T22:53:02Z"
}
