{
	"id": 66080353,
	"body": "\u003ca id=\"c9\"\u003e\u003c/a\u003eComment 9 by **arnehormann**:\n\n\u003cpre\u003eI should probably add that I am more than willing to prepare a CL myself, I only want to\nknow if this is eligible for inclusion first.\n\nI'm not saying it is impossible to get what I want, I can get there with unsafe. I'd\njust prefer to have a way without unsafe that is fit for inclusion in the drivers and\neases the maintenance burden.\n\nI built such a workaround with support code usable by other drivers in a separate\npackages for github.com/go-sql-driver/mysql:\n\u003ca href=\"https://github.com/arnehormann/sqlinternals/tree/master/mysqlinternals\"\u003ehttps://github.com/arnehormann/sqlinternals/tree/master/mysqlinternals\u003c/a\u003e\n\nI didn't evaluate it yet, but I think this can help users cut down the amount of\nconversions and probably also allocations. I also see potential for marshalling (JSON\ncould store fields as numbers instead of strings without a check).\n\nThinking about it, I also see another, more direct way to get column information:\nChange the return value of Columns() from []string to []Stringer and pass values\nprovided by the driver. The driver can provide an interface tailored to its database the\nStringers can be cast to.\nThat would not cause an api addition but a go fix repairable change, though all drivers\nwould have to change as well.\nI don't think it's possible now under the Go1 guarantee as it's not really a bug but\nmore a shortcoming IMO, but maybe for Go2...\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-05T07:45:07Z",
	"updated_at": "2014-12-08T10:30:33Z"
}
