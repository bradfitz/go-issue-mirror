{
	"id": 171941697,
	"number": 16791,
	"state": "open",
	"title": "encoding/csv: Reading is slow",
	"body": "```\r\n$ go version\r\ngo version go1.7 linux/amd64\r\n```\r\n\r\nReading of csv files is, out of the box, quite slow (tl;dr: 3x slower than a simple Java program, 1.5x slower than the obvious python code). A typical example:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"bufio\"\r\n\t\"encoding/csv\"\r\n\t\"fmt\"\r\n\t\"io\"\r\n\t\"os\"\r\n)\r\n\r\nfunc main() {\r\n\tf, _ := os.Open(\"mock_data.csv\")\r\n\tdefer f.Close()\r\n\r\n\tr := csv.NewReader(f)\r\n\tfor {\r\n\t\tline, err := r.Read()\r\n\t\tif err == io.EOF {\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tif line[0] == \"42\" {\r\n\t\t\tfmt.Println(line)\r\n\t\t}\r\n\t}\r\n\r\n}\r\n```\r\n\r\nPython3 equivalent:\r\n\r\n```python\r\nimport csv\r\nwith open('mock_data.csv') as f:\r\n    r = csv.reader(f)\r\n    for row in r:\r\n        if row[0] == \"42\":\r\n            print(row)\r\n\r\n```\r\n\r\nEquivalent Java code:\r\n\r\n```java\r\nimport java.io.BufferedReader;\r\nimport java.io.FileReader;\r\n\r\npublic class ReadCsv {\r\n    public static void main(String[] args) {\r\n        BufferedReader br;\r\n        String line;\r\n        try {\r\n            br = new BufferedReader(new FileReader(\"mock_data.csv\"));\r\n            while ((line = br.readLine()) != null) {\r\n\t\t\t\tString[] data = line.split(\",\");\r\n\t\t\t\tif (data[0].equals(\"42\")) {\r\n\t\t\t\t\tSystem.out.println(line);\r\n\t\t\t\t}\r\n            }\r\n\t\t} catch (Exception e) {}\r\n\t}\r\n}\r\n```\r\n\r\nTested on a 50MB, 1'000'002 lines csv file generated as:\r\n\r\n```python\r\ndata = \",Carl,Gauss,cgauss@unigottingen.de,Male,30.4.17.77\\n\"\r\nwith open(\"mock_data.csv\", \"w\") as f:\r\n    f.write(\"id,first_name,last_name,email,gender,ip_address\\n\")\r\n    f.write((\"1\"+data)*int(1e6))\r\n    f.write(\"42\"+data);\r\n```\r\n\r\nResults:\r\n\r\n```\r\nGo:       avg 1.489 secs\r\nPython:   avg 0.933 secs  (1.5x faster)\r\nJava:     avg 0.493 secs  (3.0x faster)\r\n```\r\n\r\nGo error reporting is obviously better than the one you can have with that Java code, and I'm not sure about Python, but people has been complaining about `encoding/csv` slowness, so it's probably worth investigating whether the `csv` package can be made faster. \r\n",
	"user": {
		"login": "ALTree",
		"id": 3586803,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "HelpWanted"
		},
		{
			"name": "Performance"
		}
	],
	"comments": 10,
	"created_at": "2016-08-18T16:17:07Z",
	"updated_at": "2016-08-24T17:04:17Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
