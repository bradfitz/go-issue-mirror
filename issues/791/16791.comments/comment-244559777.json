{
	"id": 244559777,
	"body": "It's almost OT but the equivalent of defer in Java is a try-with-resources, i.e. the try with parenthesis,\r\nso the code in Java should be\r\n\r\n```java\r\npublic static void main(String[] args) throws IOException {\r\n  try(BufferedReader reader = Files.newBufferedReader(Paths.get(\"mock_data.csv\"))) {\r\n    String line;\r\n    while((line = reader.readLine()) {\r\n      String[] data = line.split(\",\");\r\n      if (data[0].equals(\"42\")) {\r\n        System.out.println(line);\r\n      }\r\n    }\r\n  } // close() is implicitly called here\r\n}\r\n```\r\nor with the Stream API of Java 8\r\n```java\r\npublic static void main(String[] args) throws IOException {\r\n  try(Stream stream = Files.lines(Paths.get(\"mock_data.csv\"))) {\r\n    stream\r\n      .filter(l -\u003e l.split(\",\")[0].equals(\"42\"))\r\n      .forEach(System.out::println);\r\n  } // close() is implicitly called here\r\n}\r\n```",
	"user": {
		"login": "forax",
		"id": 828220,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-03T17:41:05Z",
	"updated_at": "2016-09-03T17:41:05Z"
}
