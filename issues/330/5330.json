{
	"id": 51283480,
	"number": 5330,
	"state": "closed",
	"title": "io: PipeWriter allows Write after Close",
	"body": "by **xuxinhua1984**:\n\n\u003cpre\u003eThe version: all Go version\n\nThe example code:\n\n\u003ca href=\"http://play.golang.org/p/mOhFH_rIYT\"\u003ehttp://play.golang.org/p/mOhFH_rIYT\u003c/a\u003e\n\nThe ouput:\n\n\u003ca href=\"http://studygolang.com\"\u003ehttp://studygolang.com\u003c/a\u003e\nThe data：[]byte{}\nThe error： close...\nThe number of bytes after writing:  22 . The error： io: read/write on closed pipe\n\n\nBefore calling Write method, I call CloseWithError, and The reader can read the data.\n\nIn io package, change the file of \u0026quot;pipe.go\u0026quot; Line 76：\n\n        p.l.Lock()\n\tdefer p.l.Unlock()\n\tif p.werr != nil {\n\t\tp.rwait.Signal()\n\t\terr = ErrClosedPipe\n\t\treturn\n\t}\n\tp.data = b\n\tp.rwait.Signal()\n\nThe code:\n        if p.werr != nil {\n\t\tp.rwait.Signal()\n\t\terr = ErrClosedPipe\n\t\treturn\n\t}\nis added。\n\nAfter that, The output of the example:\n\nThe number of bytes after writing:  0 . The error： io: read/write on closed pipe\nThe data：[]byte{}\nThe error： close...\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:28:47Z",
	"created_at": "2013-04-22T14:09:48Z",
	"updated_at": "2016-06-24T22:38:37Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
