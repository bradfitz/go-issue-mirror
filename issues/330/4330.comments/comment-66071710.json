{
	"id": 66071710,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eLet's spec out how the godoc command-line should work:\n\nGodoc's first non-flag argument must be one of:\n1. a package import path (treated as relative to $GOROOT/src/pkg or $GOPATH/src)\n2a. a command name (treated as relative to $GOROOT/src/cmd)\n2b. a command name prefixed with \"cmd/\" (treated as relative to $GOROOT/src)\n3. a relative path to a package or command (may or may not be inside $GOROOT or $GOPATH)\n\nIn each of these cases, we know what to display:\n1. docs for the first package found by go/build\n2a. docs for the command; if there is a conflict between the command name and an import\npath (1) then the import path is matched first, and a warning is printed to use \"godoc\ncmd/foo\" for docs on command foo.\n2b. docs for the command.\n3. docs for the package or command found at that path\n\nThe missing piece that is confusing Rob here is that \"foo\" is not equivalent to \"./foo\".\nI changed this in golang.org/cl/7132044, but Russ took issue with the change, and we\nsettled on providing a warning if \"godoc foo\" is issued and the directory ./foo exists.\n\nAny opinions?\u003c/pre\u003e",
	"user": {
		"login": "adg",
		"id": 8446613,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-01-29T05:27:34Z",
	"updated_at": "2014-12-08T10:22:59Z"
}
