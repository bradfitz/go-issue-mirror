{
	"id": 87426789,
	"number": 11166,
	"state": "closed",
	"title": "spec: wrong statement about numeric operators",
	"body": "The spec says:\r\n_Arithmetic operators apply to numeric values and yield a result of the **same type as the first operand**._\r\n\r\nThis seems to be in contrast with other rules that hold and don't depend on the operands' order, namely:\r\n_if the operands of a binary operation are different kinds of untyped constants, the operation and, for non-boolean operations, the result use the kind that appears later in this list: integer, rune, floating-point, complex. For example, an untyped integer constant divided by an untyped complex constant yields an untyped complex constant._\r\nand\r\n_Except for shift operations, if one operand is an untyped constant and the other operand is not, the constant is converted to the type of the other operand._\r\n\r\nFor a concrete example, see http://play.golang.org/p/CrwpUYEQvo",
	"user": {
		"login": "robzan8",
		"id": 8711500,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 8,
	"closed_at": "2015-06-11T20:47:03Z",
	"created_at": "2015-06-11T17:44:02Z",
	"updated_at": "2016-06-25T02:10:57Z"
}
