{
	"id": 167605704,
	"body": "The extra field contains these bytes:\r\n\r\n```\r\n00000000  cc 5e 88 1b 94 0e 31 5f  9a 04 e7 35 7f f2 04 c7  |.^....1_...5....|\r\n00000010  f3 cf e5 a1 67 5a 74 45  2d 1f 36 dc 71 2b ac 04  |....gZtE-.6.q+..|\r\n00000020  9f 6d d3 39 d9 02 a1 11  c4 10 a8 13 ae 8a 6b 0f  |.m.9..........k.|\r\n00000030  24 b5 df 16 0f 15 6a 99                           |$.....j.|\r\n```\r\n\r\nThat's obviously wrong, since it's supposed to contain a sequence of entries each beginning with a 2-byte tag + 2-byte size. Maybe dexprotector even does this intentionally, to make some analysis tools reject the zip file. \r\n\r\nHowever, this is something that was added late to zip files, and early versions of the tools are expected to ignore the extra fields, and most do. The only reason we parse the extra fields is to look for the zip64 extension. Obviously it's not present in this file, so I think rather than return ErrFormat we should just stop looking and keep going. \r\n\r\nThis is the second time we've had problems with our extra field parsing being too strict. Let's just make it best effort and be done with it. It's clearly something zip implementations disagree about.\r\n",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-28T17:13:42Z",
	"updated_at": "2015-12-28T17:13:42Z"
}
