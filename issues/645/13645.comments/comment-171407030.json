{
	"id": 171407030,
	"body": "1. [2016-01-13T14:02:22-ceeb52d/linux-arm64-linaro](https://build.golang.org/log/8a5ff417506671ce41029c5a2cbc05d13b3fba99): TestStackCache is stuck (non-Parallel test). Lots of runnable goroutines at the beginning of runtime_test.growing. Maybe something wrong with stack growth? TestFutexsleep is done, but two goroutines spawned from it are still running (presumably in the futex sleep). TestStackGrowth and TestStackGrowthCallback are waiting for the parallel phase.\r\n2. [2016-01-13T14:02:22-ceeb52d/linux-arm64-canonical](https://build.golang.org/log/dcb1ca82aeff9b693b6270296f9ac4c3bd4e7843): RunTests is in fmtDuration -\u003e fmt.Sprinf -\u003e prologue of fmt.(*pp).doPrintf in state runnable. Maybe also stuck growing the stack? TestFutexsleep, TestStackGrowth and TestStackGrowthCallback are identical to failure 1.\r\n3. [2016-01-13T04:49:19-4ffba76/linux-amd64-nocgo](https://build.golang.org/log/7c6994cadd6414ff82a1f3e595292c6ed762a7c3): Regular runtime test. No TestFutexsleep (the test would have been skipped). Otherwise identical to failure 2.\r\n4. [2016-01-12T17:31:01-505fa7b/linux-ppc64le-canonical](https://build.golang.org/log/09d6519812133df7b2ecd686ded1f50cdfad60f1): RunTests is in fmtDuration in \"GC assist wait\". Otherwise identical to failure 3.\r\n5. [2016-01-12T02:00:48-352e287/linux-amd64-sid](https://build.golang.org/log/338b1b66a8c1672d742ab75b92b155594c3f1edd): Identical to failure 1.\r\n6. [2016-01-12T01:56:04-1abb863/linux-amd64-clang](https://build.golang.org/log/04cc15c395368df9cd59351c4d6fef42dc9e2917): Identical to failure 4.\r\n\r\nThere's also a recent timeout not in the runtime test. It might be unrelated:\r\n[2016-01-12T02:00:48-352e287/linux-amd64-race](https://build.golang.org/log/8c382d35fa67de8235ccb31aed0ebe92fbe482ed): Timeout in net/http. No obvious culprit; everybody is waiting on everyone else.",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-13T19:28:45Z",
	"updated_at": "2016-01-13T19:34:44Z"
}
