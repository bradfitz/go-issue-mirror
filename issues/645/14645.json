{
	"id": 138522603,
	"number": 14645,
	"state": "closed",
	"title": "reflect: ginko/gbytes reflect-heavy tests fail since Go 1.6",
	"body": "These tests pass in Go 1.4, 1.5, and 1.6, but fail at tip.\r\n\r\nThey use no unsafe and have no detectable races.\r\n\r\nThey do however use tons of reflect, and unfortunately use a non-standard testing library making them harder to debug.\r\n\r\nRepro: (seen on OS X and Linux)\r\n```\r\n$ go get github.com/onsi/gomega/gbytes\r\n$ go test github.com/onsi/gomega/gbytes\r\n\r\n•••••••••••••••••••\r\n------------------------------\r\n•! Panic [0.000 seconds]\r\nBuffer\r\n/Users/bradfitz/src/github.com/onsi/gomega/gbytes/buffer_test.go:158\r\n  detecting regular expressions\r\n  /Users/bradfitz/src/github.com/onsi/gomega/gbytes/buffer_test.go:135\r\n    should fire the appropriate channel when the passed in pattern matches, then close it [It]\r\n    /Users/bradfitz/src/github.com/onsi/gomega/gbytes/buffer_test.go:101\r\n\r\n    Test Panicked\r\n    reflect: Call using chan\u003c- interface {} as type ginkgo.Done\r\n    /Users/bradfitz/go/src/runtime/panic.go:441\r\n\r\n    Full Stack Trace\r\n    \t/Users/bradfitz/go/src/runtime/panic.go:441 +0x222\r\n    reflect.Value.call(0x2fd0c0, 0xc82000dc60, 0x13, 0x41420c, 0x4, 0xc820034f48, 0x1, 0x1, 0x0, 0x2e4d20, ...)\r\n    \t/Users/bradfitz/go/src/reflect/value.go:372 +0x114f\r\n    reflect.Value.Call(0x2fd0c0, 0xc82000dc60, 0x13, 0xc820034f48, 0x1, 0x1, 0xc82001ef40, 0x23b8de, 0xc82001ef78)\r\n    \t/Users/bradfitz/go/src/reflect/value.go:303 +0x97\r\n    github.com/onsi/ginkgo/internal/leafnodes.newRunner.func1(0xc820256000)\r\n------------------------------\r\n•! Panic [0.000 seconds]\r\nBuffer\r\n/Users/bradfitz/src/github.com/onsi/gomega/gbytes/buffer_test.go:158\r\n  detecting regular expressions\r\n  /Users/bradfitz/src/github.com/onsi/gomega/gbytes/buffer_test.go:135\r\n    should fast-forward the buffer upon detection [It]\r\n    /Users/bradfitz/src/github.com/onsi/gomega/gbytes/buffer_test.go:109\r\n\r\n    Test Panicked\r\n    reflect: Call using chan\u003c- interface {} as type ginkgo.Done\r\n    /Users/bradfitz/go/src/runtime/panic.go:441\r\n\r\n    Full Stack Trace\r\n    \t/Users/bradfitz/go/src/runtime/panic.go:441 +0x222\r\n    reflect.Value.call(0x2fd0c0, 0xc82000dd50, 0x13, 0x41420c, 0x4, 0xc820034f48, 0x1, 0x1, 0x0, 0x2e4d20, ...)\r\n    \t/Users/bradfitz/go/src/reflect/value.go:372 +0x114f\r\n    reflect.Value.Call(0x2fd0c0, 0xc82000dd50, 0x13, 0xc820034f48, 0x1, 0x1, 0xc82001ef40, 0x23b8de, 0xc82001ef78)\r\n    \t/Users/bradfitz/go/src/reflect/value.go:303 +0x97\r\n    github.com/onsi/ginkgo/internal/leafnodes.newRunner.func1(0xc8202565a0)\r\n------------------------------\r\n•! Panic [0.000 seconds]\r\nBuffer\r\n/Users/bradfitz/src/github.com/onsi/gomega/gbytes/buffer_test.go:158\r\n  detecting regular expressions\r\n  /Users/bradfitz/src/github.com/onsi/gomega/gbytes/buffer_test.go:135\r\n    should only fast-forward the buffer when the channel is read, and only if doing so would not rewind it [It]\r\n    /Users/bradfitz/src/github.com/onsi/gomega/gbytes/buffer_test.go:121\r\n\r\n    Test Panicked\r\n    reflect: Call using chan\u003c- interface {} as type ginkgo.Done\r\n    /Users/bradfitz/go/src/runtime/panic.go:441\r\n\r\n    Full Stack Trace\r\n    \t/Users/bradfitz/go/src/runtime/panic.go:441 +0x222\r\n    reflect.Value.call(0x2fd0c0, 0xc82000de50, 0x13, 0x41420c, 0x4, 0xc820034f48, 0x1, 0x1, 0x0, 0x2e4d20, ...)\r\n    \t/Users/bradfitz/go/src/reflect/value.go:372 +0x114f\r\n    reflect.Value.Call(0x2fd0c0, 0xc82000de50, 0x13, 0xc820034f48, 0x1, 0x1, 0xc82001ef40, 0x23b8de, 0xc82001ef78)\r\n    \t/Users/bradfitz/go/src/reflect/value.go:303 +0x97\r\n    github.com/onsi/ginkgo/internal/leafnodes.newRunner.func1(0xc820256960)\r\n------------------------------\r\n•! Panic [0.000 seconds]\r\nBuffer\r\n/Users/bradfitz/src/github.com/onsi/gomega/gbytes/buffer_test.go:158\r\n  detecting regular expressions\r\n  /Users/bradfitz/src/github.com/onsi/gomega/gbytes/buffer_test.go:135\r\n    should be possible to cancel a detection [It]\r\n    /Users/bradfitz/src/github.com/onsi/gomega/gbytes/buffer_test.go:134\r\n\r\n    Test Panicked\r\n    reflect: Call using chan\u003c- interface {} as type ginkgo.Done\r\n    /Users/bradfitz/go/src/runtime/panic.go:441\r\n\r\n    Full Stack Trace\r\n    \t/Users/bradfitz/go/src/runtime/panic.go:441 +0x222\r\n    reflect.Value.call(0x2fd0c0, 0xc82000df40, 0x13, 0x41420c, 0x4, 0xc820034f48, 0x1, 0x1, 0x0, 0x2e4d20, ...)\r\n    \t/Users/bradfitz/go/src/reflect/value.go:372 +0x114f\r\n    reflect.Value.Call(0x2fd0c0, 0xc82000df40, 0x13, 0xc820034f48, 0x1, 0x1, 0xc82001ef40, 0x23b8de, 0xc82001ef78)\r\n    \t/Users/bradfitz/go/src/reflect/value.go:303 +0x97\r\n    github.com/onsi/ginkgo/internal/leafnodes.newRunner.func1(0xc820256d80)\r\n------------------------------\r\n••\r\n\r\nSummarizing 4 Failures:\r\n\r\n[Panic!] Buffer detecting regular expressions [It] should fire the appropriate channel when the passed in pattern matches, then close it \r\n/Users/bradfitz/go/src/runtime/panic.go:441\r\n\r\n[Panic!] Buffer detecting regular expressions [It] should fast-forward the buffer upon detection \r\n/Users/bradfitz/go/src/runtime/panic.go:441\r\n\r\n[Panic!] Buffer detecting regular expressions [It] should only fast-forward the buffer when the channel is read, and only if doing so would not rewind it \r\n/Users/bradfitz/go/src/runtime/panic.go:441\r\n\r\n[Panic!] Buffer detecting regular expressions [It] should be possible to cancel a detection \r\n/Users/bradfitz/go/src/runtime/panic.go:441\r\n\r\n```\r\n\r\nIt does not seem SSA related. I tested at the SSA merge commit (rev 9d854fd44ae669f60c15133a4d2ce407ea2bccc4) which is broken, but rev dd0a128 (just before SSA) is still broken.\r\n\r\nI haven't bisected further.\r\n\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"comments": 5,
	"closed_at": "2016-03-04T20:34:52Z",
	"created_at": "2016-03-04T16:48:06Z",
	"updated_at": "2016-03-04T20:34:52Z",
	"milestone": {
		"id": 1414136,
		"number": 32,
		"title": "Go1.7Early"
	}
}
