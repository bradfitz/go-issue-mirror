{
	"id": 229850617,
	"body": "I think this can be done with providing a custom `net.Listener` to `(*http.Server).Serve`.\r\n\r\nThat is embedding a `*net.TCPListener` and overwriting the `Accept` method, which return a custom `net.Conn`. The custom `net.Conn` will embed a `*net.TCPConn` and overwrite the `Write` method.\r\n\r\nThe overwritten `Write` method could reset the write deadline on every write, or use a atomic counter to reset the write deadline on some numbers/bytes of consecutively write. But for truly on demand write deadline resetting, one still need some way to do that on the higer level handler side.\r\n\r\nSince a http/2 connection can do multiplexing, it would be helpful to have a set of timeouts for individual stream. When a stream hang on client, we could use those timeouts to release resources associated with that stream, this is not possible with setting deadlines on the lower level underlying connection.",
	"user": {
		"login": "noblehng",
		"id": 6649504,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	},
	"created_at": "2016-07-01T04:20:19Z",
	"updated_at": "2016-07-01T05:45:39Z"
}
