{
	"id": 66070752,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eThis is a package I've created to makeup for missing functionality that I needed:\n\n\u003ca href=\"https://github.com/webconnex/xmlutil\"\u003ehttps://github.com/webconnex/xmlutil\u003c/a\u003e\n\nWith the opening example in the issue, I can do this:\n\n\tx := xmlutil.NewXmlUtil()\n\tx.RegisterNamespace(\"\u003ca href=\"http://www.w3.org/2001/XMLSchema-instance\"\u003ehttp://www.w3.org/2001/XMLSchema-instance\u003c/a\u003e\", \"xsi\")\n\tx.RegisterTypeMore(\"\", xml.Name{},\n\t\t[]xml.Attr{\n\t\t\txml.Attr{xml.Name{\"xsi\",\"type\"},\"xsd:string\"},\n\t\t})\n\nAnd this causes any tags with a string value to have an attribute of\nxsi:type=\"xsd:string\"\n\nI built it primarily for use with Soap. It depends on encoding/xml for reading tokens.\nIt's a bit spartan on some of the Marshal/Unmarshal functionality in encoding/xml.\nSpecifically it doesn't have parent tags `foo\u003ebar`, and it doesn't have many of the\nmodifiers (like innerxml). But it does allow you to register types, which is used with\ngeneric interfaces and allows you to add attributes. I hope to have some examples soon.\n\nThe type registration is isolated in an instance of \"XmlUtil\". This allows you to have\nspecific behaviors with built-in types that you might not want in other parts of your\napplication. In my case I'm working with multiple SOAP Api's, and not all of them\nrequire/want xsi:type.\n\nNot sure if this is useful to you guys or not. If it is let me know. I haven't added any\nlicensing yet, so let me know how it should be licensed.\u003c/pre\u003e",
	"user": {
		"login": "lukescott",
		"id": 486224,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-06-17T21:59:07Z",
	"updated_at": "2014-12-08T10:22:08Z"
}
