{
	"id": 169833050,
	"body": "Just in case this helps anyone, per @robpike's comment above, I wanted to do something like this:\r\n\r\n```\r\ngo test --coverprofile foo --coverpkg ./... ./...\r\n```\r\nI was able to do so by combining 'go list' and @wadey's tool:\r\n\r\n```\r\n# For each package with test files, run with full coverage (including other packages)\r\ngo list -f '{{if gt (len .TestGoFiles) 0}}\"go test -covermode count -coverprofile {{.Name}}.coverprofile -coverpkg ./... {{.ImportPath}}\"{{end}}' ./... | xargs -I {} bash -c {}\r\n\r\n# Merge the generated cover profiles into a single file\r\ngocovmerge `ls *.coverprofile` \u003e coverage.txt\r\n\r\n# run 'go tool cover -html cover.txt' or upload to travis, codecov, coveralls, etc.\r\n```\r\nNote that if you have multiple leaf packages with the same name (I have listener/tcp and cmd/send/tcp), it will be necessary to add additional qualifiers to the generated `.coverprofile` file name to prevent one package from overwriting the other.  For example, I used  `-coverprofile {{.Name}}_{{len .Imports}}_{{len .Deps}}.coverprofile`, which generates something like `tcp_6_64.coverprofile` and `tcp_15_70.coverprofile`.\r\n",
	"user": {
		"login": "mmindenhall",
		"id": 1106269,
		"type": "User",
		"site_admin": false
	},
	"reactions": {
		"total_count": 5,
		"+1": 5
	},
	"created_at": "2016-01-07T22:54:52Z",
	"updated_at": "2016-01-07T22:54:52Z"
}
