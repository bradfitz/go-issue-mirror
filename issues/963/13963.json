{
	"id": 126810480,
	"number": 13963,
	"state": "open",
	"title": "x/exp/shiny: panic is not panicky",
	"body": "go version devel +c5a2f36 Thu Jan 14 20:57:21 2016 +0000 darwin/amd64\r\n\r\nOnce a window has been initialized, any panics (either by calling panic() or some other means) do not exit the program or print a stack trace, but rather cause the program to hang. If the window has been published, the cursor becomes a spinning beachball.\r\n```\r\n$ git diff\r\ndiff --git a/shiny/example/basic/main.go b/shiny/example/basic/main.go\r\nindex d427b34..f88d34b 100644\r\n--- a/shiny/example/basic/main.go\r\n+++ b/shiny/example/basic/main.go\r\n@@ -40,6 +40,8 @@ func main() {\r\n                }\r\n                defer w.Release()\r\n \r\n+               panic(\"help!\")\r\n+\r\n                winSize := image.Point{256, 256}\r\n                b, err := s.NewBuffer(winSize)\r\n                if err != nil {\r\n$ go build main.go \r\n$ ./main \r\n(hangs forever)\r\n```\r\n\r\ncc @crawshaw @nigeltao ",
	"user": {
		"login": "jnjackins",
		"id": 449232,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"created_at": "2016-01-15T05:31:22Z",
	"updated_at": "2016-01-21T17:51:57Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
