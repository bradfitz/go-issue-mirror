{
	"id": 192469027,
	"body": "@Martin -- 1. I'm pretty sure the usual computer rules can be followed. So,\nif z and w are complex, we can define z + w = complex(real(z) + real(w),\nimag(z) + imag(w)) and ignore the question of an unsigned infinity.\n\nIf you look at the source for cmplx.IsInf(z), you'll see that if either\nreal(z) or imag(z) is Inf, then z is Inf, even if the other part is NaN.\nFor example, cmplx.IsInf(complex(math.Inf(1), math.NaN())) == true and\ncmplx.IsNaN(complex(math.Inf(1), math.NaN())) == false.\n\n2. We can ignore the question of an unsigned infinity, the way we do in\ncmplx.IsInf(z). We don't care if it is +math.Inf(1) or math.Inf(-1). And\nreal(complex(math.Inf(1), math.Inf(1))) returns math.Inf(1).\n\nOn Fri, Mar 4, 2016 at 2:44 PM, Martin Möhrmann \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e @cldorian \u003chttps://github.com/cldorian\u003e\n\u003e sorry, tried to reformulate in my post. The questions for me are:\n\u003e\n\u003e    1.\n\u003e\n\u003e    if +inf is correct then should (+inf+infi)+(+inf+infi) yield NaN+NaNi\n\u003e    instead of +inf+infi since unsigned infinities should not be added.\n\u003e    2.\n\u003e\n\u003e    If we treat +Inf for complex as an unsigned infinity (which\n\u003e    1.0+0i)/0.0 = +Inf suggests) then is it ok that real(+inf+infi) returns a\n\u003e    signed float infinity?\n\u003e\n\u003e —\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/14644#issuecomment-192434736\u003e.\n\u003e\n",
	"user": {
		"login": "cldorian",
		"id": 10041646,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-04T21:16:32Z",
	"updated_at": "2016-03-04T21:16:32Z"
}
