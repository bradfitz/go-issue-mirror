{
	"id": 240293732,
	"body": "\u003e let's print again:\r\n\u003e println(\"[scavengelist]\",len,start,end,s.base(),s.npages,sys.PhysPageSize,_PageSize)\r\n\u003e Then I got following:\r\n\u003e [scavengelist] -65536 4972019712 4971954176 4972003328 1 65536 8192\r\n\r\n@bronze1man, this is very helpful. Could you try changing mheap.go line 920 to say \"if start \u003e= end\" (and reverting your change to PhysPageSize)?\r\n\r\n\u003e I am testing on iOS 9 and golang1.7 ,not on iOS 10.\r\n\u003e It is ok with iOS 9 and golang1.6.\r\n\r\nNote that Go 1.6 simply never used MADV_FREE or returned memory to the OS on ARM64. That's all new in Go 1.7.\r\n\r\n\u003e I'm even more puzzled. Why decreasing PhysPageSize fixes\r\n\u003e the problem? With higher PhysPageSize, we always align\r\n\u003e the address to madvise using the higher value, which should\r\n\u003e also be aligned to any smaller power-of-two too.\r\n\u003e \r\n\u003e Am I missing something?\r\n\r\n@minux, I think the rounding check at mheap.go:920 is wrong (oops). Decreasing PhysPageSize to 8K makes the rounding a no-op, which covers up the bad check.",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-17T02:04:19Z",
	"updated_at": "2016-08-17T02:04:19Z"
}
