{
	"id": 201382845,
	"body": "@randall77, this is a regression in the SSA back end, similar to the reslicing one. The old back end avoided updating the base pointer in the append fast path, and therefore avoided the write barrier.\r\n\r\n```\r\n$ cat /tmp/x.go\r\npackage p\r\n\r\nfunc f(x *[]int) []int {\r\n\t*x = append(*x, 1)\r\n\treturn *x\r\n}\r\n$ go tool compile -ssa=0 -S /tmp/x.go | grep :4\r\n\t// fast path - no write barrier\r\n\t0x0028 00040 (/tmp/x.go:4)\tMOVQ\t\"\".x+88(FP), BX\r\n\t0x002d 00045 (/tmp/x.go:4)\tNOP\r\n\t0x002d 00045 (/tmp/x.go:4)\tMOVQ\t(BX), DX\r\n\t0x0030 00048 (/tmp/x.go:4)\tMOVQ\t8(BX), AX\r\n\t0x0034 00052 (/tmp/x.go:4)\tMOVQ\t16(BX), CX\r\n\t0x0038 00056 (/tmp/x.go:4)\tMOVQ\tAX, BP\r\n\t0x003b 00059 (/tmp/x.go:4)\tINCQ\tBP\r\n\t0x003e 00062 (/tmp/x.go:4)\tCMPQ\tBP, CX\r\n\t0x0041 00065 (/tmp/x.go:4)\tJHI\t$1, 128\r\n\t0x0043 00067 (/tmp/x.go:4)\tMOVQ\tBP, 8(BX)\r\n\t0x0047 00071 (/tmp/x.go:4)\tLEAQ\t(DX)(AX*8), BX\r\n\t0x004b 00075 (/tmp/x.go:4)\tMOVQ\t$1, (BX)\r\n\r\n\t// slow path code at bottom of function\r\n\t0x0080 00128 (/tmp/x.go:4)\tLEAQ\ttype.[]int(SB), BX\r\n\t0x0087 00135 (/tmp/x.go:4)\tMOVQ\tBX, (SP)\r\n\t0x008b 00139 (/tmp/x.go:4)\tMOVQ\tDX, 8(SP)\r\n\t0x0090 00144 (/tmp/x.go:4)\tMOVQ\tAX, 16(SP)\r\n\t0x0095 00149 (/tmp/x.go:4)\tMOVQ\tCX, 24(SP)\r\n\t0x009a 00154 (/tmp/x.go:4)\tMOVQ\tBP, 32(SP)\r\n\t0x009f 00159 (/tmp/x.go:4)\tPCDATA\t$0, $0\r\n\t0x009f 00159 (/tmp/x.go:4)\tCALL\truntime.growslice(SB)\r\n\t0x00a4 00164 (/tmp/x.go:4)\tMOVQ\t40(SP), DX\r\n\t0x00a9 00169 (/tmp/x.go:4)\tMOVQ\t48(SP), AX\r\n\t0x00ae 00174 (/tmp/x.go:4)\tMOVQ\t56(SP), CX\r\n\t0x00b3 00179 (/tmp/x.go:4)\tMOVQ\t\"\".x+88(FP), BX\r\n\t0x00b8 00184 (/tmp/x.go:4)\tCMPQ\tBX, $0\r\n\t0x00bc 00188 (/tmp/x.go:4)\tJEQ\t$1, 260\r\n\t0x00be 00190 (/tmp/x.go:4)\tMOVQ\tAX, BP\r\n\t0x00c1 00193 (/tmp/x.go:4)\tMOVQ\tAX, \"\".autotmp_0001+64(SP)\r\n\t0x00c6 00198 (/tmp/x.go:4)\tINCQ\tBP\r\n\t0x00c9 00201 (/tmp/x.go:4)\tMOVQ\tBP, 8(BX)\r\n\t0x00cd 00205 (/tmp/x.go:4)\tMOVQ\tCX, 16(BX)\r\n\t0x00d1 00209 (/tmp/x.go:4)\tMOVQ\tDX, \"\".autotmp_0000+72(SP)\r\n\t0x00d6 00214 (/tmp/x.go:4)\tCMPB\truntime.writeBarrier(SB), $0\r\n\t0x00dd 00221 (/tmp/x.go:4)\tJNE\t$0, 231\r\n\t0x00df 00223 (/tmp/x.go:4)\tMOVQ\tDX, (BX)\r\n\t0x00e2 00226 (/tmp/x.go:4)\tJMP\t71\r\n\t0x00e7 00231 (/tmp/x.go:4)\tMOVQ\tBX, (SP)\r\n\t0x00eb 00235 (/tmp/x.go:4)\tMOVQ\tDX, 8(SP)\r\n\t0x00f0 00240 (/tmp/x.go:4)\tPCDATA\t$0, $1\r\n\t0x00f0 00240 (/tmp/x.go:4)\tCALL\truntime.writebarrierptr(SB)\r\n\t0x00f5 00245 (/tmp/x.go:4)\tMOVQ\t\"\".autotmp_0000+72(SP), DX\r\n\t0x00fa 00250 (/tmp/x.go:4)\tMOVQ\t\"\".autotmp_0001+64(SP), AX\r\n\t0x00ff 00255 (/tmp/x.go:4)\tJMP\t71\r\n\t0x0104 00260 (/tmp/x.go:4)\tMOVL\tAX, (BX)\r\n\t0x0106 00262 (/tmp/x.go:4)\tJMP\t190\r\n\t0x0108 00264 (/tmp/x.go:4)\tNOP\r\n$ \r\n\r\n$ go tool compile -ssa=1 -S /tmp/x.go | grep :4\r\n\t// fast path - unnecessary update of base, including test of write barrier flag + possible call\r\n\t0x0017 00023 (/tmp/x.go:4)\tMOVQ\t\"\".x+88(FP), CX\r\n\t0x001c 00028 (/tmp/x.go:4)\tMOVQ\t16(CX), DX\r\n\t0x0020 00032 (/tmp/x.go:4)\tMOVQ\t8(CX), BX\r\n\t0x0024 00036 (/tmp/x.go:4)\tMOVQ\tBX, \"\".autotmp_0000+72(SP)\r\n\t0x0029 00041 (/tmp/x.go:4)\tMOVQ\t(CX), BP\r\n\t0x002c 00044 (/tmp/x.go:4)\tLEAQ\t1(BX), SI\r\n\t0x0030 00048 (/tmp/x.go:4)\tMOVQ\tSI, \"\".autotmp_0001+64(SP)\r\n\t0x0035 00053 (/tmp/x.go:4)\tCMPQ\tSI, DX\r\n\t0x0038 00056 (/tmp/x.go:4)\tJGT\t$0, 140\r\n\t0x003a 00058 (/tmp/x.go:4)\tMOVQ\t$1, (BP)(BX*8)\r\n\t0x0043 00067 (/tmp/x.go:4)\tMOVQ\tSI, 8(CX)\r\n\t0x0047 00071 (/tmp/x.go:4)\tMOVQ\tDX, 16(CX)\r\n\t0x004b 00075 (/tmp/x.go:4)\tMOVL\truntime.writeBarrier(SB), AX\r\n\t0x0051 00081 (/tmp/x.go:4)\tTESTB\tAL, AL\r\n\t0x0053 00083 (/tmp/x.go:4)\tJNE\t$0, 119\r\n\t0x0055 00085 (/tmp/x.go:4)\tMOVQ\tBP, (CX)\r\n\r\n\t// slow path for write barrier call in append \"fast\" path\r\n\t0x0077 00119 (/tmp/x.go:4)\tMOVQ\tCX, (SP)\r\n\t0x007b 00123 (/tmp/x.go:4)\tMOVQ\tBP, 8(SP)\r\n\t0x0080 00128 (/tmp/x.go:4)\tPCDATA\t$0, $0\r\n\t0x0080 00128 (/tmp/x.go:4)\tCALL\truntime.writebarrierptr(SB)\r\n\r\n\t// slow path for append calling growslice\r\n\t0x008c 00140 (/tmp/x.go:4)\tLEAQ\ttype.[]int(SB), AX\r\n\t0x0093 00147 (/tmp/x.go:4)\tMOVQ\tAX, (SP)\r\n\t0x0097 00151 (/tmp/x.go:4)\tMOVQ\tBP, 8(SP)\r\n\t0x009c 00156 (/tmp/x.go:4)\tMOVQ\tBX, 16(SP)\r\n\t0x00a1 00161 (/tmp/x.go:4)\tMOVQ\tDX, 24(SP)\r\n\t0x00a6 00166 (/tmp/x.go:4)\tMOVQ\tSI, 32(SP)\r\n\t0x00ab 00171 (/tmp/x.go:4)\tPCDATA\t$0, $0\r\n\t0x00ab 00171 (/tmp/x.go:4)\tCALL\truntime.growslice(SB)\r\n\t0x00b0 00176 (/tmp/x.go:4)\tMOVQ\t40(SP), BP\r\n\t0x00b5 00181 (/tmp/x.go:4)\tMOVQ\t56(SP), DX\r\n\t0x00bf 00191 (/tmp/x.go:4)\tMOVQ\t\"\".autotmp_0000+72(SP), BX\r\n\t0x00c4 00196 (/tmp/x.go:4)\tMOVQ\t\"\".autotmp_0001+64(SP), SI\r\n\t0x00c9 00201 (/tmp/x.go:4)\tJMP\t58\r\n\t0x00ce 00206 (/tmp/x.go:4)\tNOP\r\n$ ",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-25T17:44:00Z",
	"updated_at": "2016-03-25T17:44:00Z"
}
