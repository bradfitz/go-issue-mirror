{
	"id": 51289091,
	"number": 9096,
	"state": "closed",
	"title": "io: WriteFull",
	"body": "\u003cpre\u003eI'd like io.WriteFull, to mirror io.ReadFull.\n\nWriteFull would be a tiny wrapper that just validated a io.Writer implementation's\nreturn values:\n\n   // WriteFull writes p to w. It returns either the Writer's error,\n   // or ErrShortWrite if the writer returned a nil error and didn't write enough.\n   func WriteFull(w io.Writer, p []byte) error {\n         n, err := w.Write(p)\n         if err == nil \u0026amp;\u0026amp; n != len(p) { \n            err = ErrShortWrite\n         }\n         return err\n   }\n\nDoing this all the time defensively is tedious.\u003c/pre\u003e",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2014-12-08T10:49:50Z",
	"created_at": "2014-11-13T01:17:12Z",
	"updated_at": "2016-06-25T01:44:24Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
