{
	"id": 66077819,
	"body": "\u003ca id=\"c9\"\u003e\u003c/a\u003eComment 9:\n\n\u003cpre\u003eThe underlying problem is that token.Positions report positions as modified via //line\ncomments. To properly solve this, we need access to both the original (non-modified)\nline positions, and the modified line positions. This requires an API change (adding\nanother position accessor), and may have complex consequences for clients of token\npositions if we change the semantics of the current Position accessor.\n\nFor instance, commenting out go/token/position.go:272-281, which means \"ignore //line\ncomments\" resolves this specific test case.\n\nRuss suggests providing another accessor, go/token.File.RawLine (which would also\nrequire go/token.File.RawPosition). gofmt would only rely on raw positions, since it\nformats the raw source irrespective of how that source was generated.\n\nAlternatively, one might provide go/token.File.ModifiedLine, and ModifiedPosition, which\nwould take the role of the current Line and Position accessors, and the current Line and\nPosition accessors would provide the raw information instead. This would make sense if\nmost tools cared mostly about the actual position of the incoming Go source code, rather\nthan the //line-directed source positions.\n\nThere may also be a chance we can circumvent the issue by using the go/printer.SourcePos\nmode with gofmt (simply setting it though didn't resolve the issue - there may be other\nbugs).\n\nMarking Go1.3Maybe for now.\u003c/pre\u003e\n\n_Labels changed: added **release-go1.3maybe**, removed **release-go1.3**._",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-04-02T23:23:40Z",
	"updated_at": "2014-12-08T10:28:17Z"
}
