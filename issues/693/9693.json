{
	"id": 55468918,
	"number": 9693,
	"state": "closed",
	"title": "encoding/json: add offset to the reported errors",
	"body": "Sometimes JSON data can be inconsistent (Ex: bad APIs).  One field can be string in one row, in another float64. It would help to figure out what field is responsible if there was at least the `offset` from the JSON file associated with the reported error.\r\n\r\nExample:\r\n\r\n```\r\ntype NEObject struct {\r\n\tA1            string  `json:\"A1\"`\r\n\tA2            string  `json:\"A2\"`\r\n\tA3            string  `json:\"A3\"`\r\n\tBV            float64 `json:\"BV\"`\r\n\tDT            string  `json:\"DT\"`\r\n\tG             float64 `json:\"G\"`\r\n\tGM            float64 `json:\"GM\"`\r\n\tH             float64 `json:\"H\"`\r\n\tHSigma        string  `json:\"H_sigma\"`\r\n}\r\n```\r\n\r\nSuppose there is a data.json file that contains 10k rows and row 1230 has field HSigma a float64 instead of string. The error reported when unmarshalling would be:\r\n\r\n`json: cannot unmarshal string into Go value of type float64` \r\n\r\nWhich is not very useful since we have a few string fields and we don't know the row. Instead something like this would tell me where I should look in my json file:\r\n\r\n`json: cannot unmarshal 'string' into Go value of type 'float64' offset 7427`",
	"user": {
		"login": "xarg",
		"id": 94721,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 0,
	"closed_at": "2015-01-29T09:57:12Z",
	"created_at": "2015-01-26T10:51:31Z",
	"updated_at": "2016-06-25T01:59:22Z"
}
