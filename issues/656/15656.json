{
	"id": 154363455,
	"number": 15656,
	"state": "open",
	"title": "encoding/base64: wrongly decodes bad base64 as valid",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Go are you using (`go version`)?\r\n\r\ngo1.6\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\nAll operating systems.\r\n\r\n3. What did you do?\r\nhttps://play.golang.org/p/DiwWTDmGyC\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"encoding/base64\"\r\n\t\"encoding/hex\"\r\n\t\"fmt\"\r\n)\r\n\r\nfunc main() {\r\n\t// Good base64.\r\n\tgoodBytes, err := base64.StdEncoding.DecodeString(\"WvLTlMrX9NpYDQlEIFlnDA==\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\treturn\r\n\t}\r\n\t// Bad base64.\r\n\tbadBytes, err := base64.StdEncoding.DecodeString(\"WvLTlMrX9NpYDQlEIFlnDB==\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\treturn\r\n\t}\r\n\tgoodHex := hex.EncodeToString(goodBytes)\r\n\tbadHex := hex.EncodeToString(badBytes)\r\n\tfmt.Println(goodHex)\r\n\tfmt.Println(badHex)\r\n\t\r\n\tgoodBytes, err = hex.DecodeString(goodHex)\r\n\tif err != nil {\r\n\t    fmt.Println(err)\r\n\t    return\r\n\t}\r\n\t\r\n\tbadBytes, err = hex.DecodeString(badHex)\r\n\tif err != nil {\r\n\t    fmt.Println(err)\r\n\t    return\r\n\t}\r\n\t\r\n\tgoodBase64 := base64.StdEncoding.EncodeToString(goodBytes)\r\n\tbadBase64 := base64.StdEncoding.EncodeToString(badBytes)\r\n\tfmt.Println(goodBase64)\r\n\tfmt.Println(badBase64)\r\n}\r\n```\r\n\r\n4. What did you expect to see?\r\n\r\nError for the second bad base64 \r\n\r\n```\r\n\tbadBytes, err := base64.StdEncoding.DecodeString(\"WvLTlMrX9NpYDQlEIFlnDB==\")\r\n```\r\n\r\nHere err should be non 'nil'.\r\n\r\nAn example of ruby decoder throwing ArgumentError for similar conditions under RFC4648.\r\n```\r\nrequire \"base64\"\r\n\r\ngood = Base64.strict_decode64(\"WvLTlMrX9NpYDQlEIFlnDA==\") ## RFC4648\r\nputs good.length\r\n\r\nbegin\r\n  bad = Base64.strict_decode64(\"WvLTlMrX9NpYDQlEIFlnDB==\") ## RFC4648\r\n  puts bad.length\r\nrescue ArgumentError\r\n  puts \"Invalid base64\"\r\nend\r\n```\r\n\r\n5. What did you see instead?\r\n\r\nSuccess for the second bad base64. \r\n",
	"user": {
		"login": "harshavardhana",
		"id": 622699,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FeatureRequest"
		}
	],
	"comments": 5,
	"created_at": "2016-05-11T23:11:23Z",
	"updated_at": "2016-07-17T08:00:15Z",
	"milestone": {
		"id": 1748849,
		"number": 42,
		"title": "Go1.8Maybe"
	}
}
