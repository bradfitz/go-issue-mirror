{
	"id": 101220496,
	"body": "@josharian have you tried running exactly \"time go build -a -p 4 std\"?\r\n\r\nWhat does the following debug output shows on your machine?\r\n```\r\ndiff --git a/src/cmd/go/build.go b/src/cmd/go/build.go\r\nindex fda126b..ceca4c5 100644\r\n--- a/src/cmd/go/build.go\r\n+++ b/src/cmd/go/build.go\r\n@@ -18,6 +18,7 @@ import (\r\n        \"os\"\r\n        \"os/exec\"\r\n        \"path\"\r\n+       \"sync/atomic\"\r\n        \"path/filepath\"\r\n        \"regexp\"\r\n        \"runtime\"\r\n@@ -1139,6 +1140,12 @@ func (b *builder) do(root *action) {\r\n        if buildN {\r\n                par = 1\r\n        }\r\n+       var executing uint32\r\n+       go func() {\r\n+               for range time.NewTicker(500*time.Millisecond).C {\r\n+                       fmt.Printf(\"EXECUTING %v\\n\", executing)\r\n+               }\r\n+       }()\r\n        for i := 0; i \u003c par; i++ {\r\n                wg.Add(1)\r\n                go func() {\r\n@@ -1154,7 +1161,9 @@ func (b *builder) do(root *action) {\r\n                                        b.exec.Lock()\r\n                                        a := b.ready.pop()\r\n                                        b.exec.Unlock()\r\n+                                       atomic.AddUint32(\u0026executing, 1)\r\n                                        handle(a)\r\n+                                       atomic.AddUint32(\u0026executing, ^uint32(0))\r\n                                case \u003c-interrupted:\r\n                                        setExitStatus(1)\r\n                                        return\r\n```",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-05-12T10:02:31Z",
	"updated_at": "2015-05-12T10:02:31Z"
}
