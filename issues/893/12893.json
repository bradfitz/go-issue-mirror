{
	"id": 110738281,
	"number": 12893,
	"state": "closed",
	"title": "proposal: Implement a feature rich CLI parser for Go",
	"body": "While the current flag library is good enough for many purposes, I sometimes find it too barebones. Here are the things I am looking for in particular:\r\n\r\n* Support for GNU style `--long=LONG` options.\r\n* Ability to define the prefix character which allows implementing Windows styple /f switches.\r\n* Support for mixing positional arguments with options. In fact, unless I am much mistaken, there is no support for parsing and validating positional arguments at all.\r\n* A way to make a flag mandetory or optional.\r\n* A way to restrict the choices a flag can have.\r\n* A way for a flag to have multiple values.\r\n* A way to read composite values and automatically map the components to the fields of a struct.\r\n\r\nTo summarise, I am looking for an argument parser on par with or more feature rich than Python's argparse. While there are some third party libraries that provide these features (or I could roll out my own), I feel that a powerful CLI parser should be a part of the standard library.\r\n\r\nWhether it is implemented by extending the flags package or as a completely new library is secondary.",
	"user": {
		"login": "satyenr",
		"id": 6915153,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2015-10-09T21:34:27Z",
	"created_at": "2015-10-09T21:24:15Z",
	"updated_at": "2016-10-09T20:21:05Z"
}
