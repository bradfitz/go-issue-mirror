{
	"id": 51286492,
	"number": 7295,
	"state": "open",
	"title": "go/types: Predicates export",
	"body": "by **MWSherman**:\n\n\u003cpre\u003eSome API ideas for an approach to exporting methods in predicates.go.\n\n(Follow-on to a short discussion here:\n\u003ca href=\"https://golang.org/issue/6634?c=11)\"\u003ehttps://golang.org/issue/6634?c=11)\u003c/a\u003e.\n\nI’m glad that Comparable was exported. The use cases there, I assume, are to allow the\nuser to determine:\n\n- whether the == operator can be used on the type\n- whether the type can be used as a map key\n\n@gordon rightly pointed out that many of those methods are small boilerplate helpers,\nand thus would crowd the API, but perhaps we might consider establishing a qualification\nfor export.\n\nFor example, exporting Ordered will allow the user to determine usable operators (as\nabove), in this case \u0026lt; and \u0026gt;. I’d be tempted to export Numeric, since that also\ndescribes a class of legal operations.\n\nOne other that comes to mind is “Addable”, which would encompass types for which the\n+ operator is legal, presumably something like IsNumeric | IsString.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Thinking"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"created_at": "2014-02-10T02:13:54Z",
	"updated_at": "2015-07-31T17:35:48Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
