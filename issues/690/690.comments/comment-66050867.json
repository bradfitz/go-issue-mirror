{
	"id": 66050867,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eDecimal 0.1, used in your examples, is a classic example of a decimal number that\ncan't be exactly represented as a finite binary floating-point number [Goldberg, p4];\nwe use an approximation. Rounding error is inherent in floating-point calculations.\n\nAs you have seen, %g rounds with a particular purpose, \"as many digits as are \nnecessary for strconv.Atof64 [or  strconv.Atof32] to reconstruct exactly the same\nvalue\"; it works.\n\nAs \u003ca href=\"https://golang.org/issue/458\"\u003eissue #458\u003c/a\u003e suggests, use %6g, or something similar, for your purpose.\n\nWhat Every Computer Scientist Should Know About Floating-Point Arithmetic, David Goldberg\n\u003ca href=\"http://dlc.sun.com/pdf/800-7895/800-7895.pdf\"\u003ehttp://dlc.sun.com/pdf/800-7895/800-7895.pdf\u003c/a\u003e\u003c/pre\u003e",
	"user": {
		"login": "peterGo",
		"id": 4561296,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2010-03-23T23:54:17Z",
	"updated_at": "2014-12-08T10:05:31Z"
}
