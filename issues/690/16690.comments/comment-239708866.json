{
	"id": 239708866,
	"body": "```\r\nWhat's the use case for passing negative values to this function?\r\n```\r\nI don't know the answer for this, perhaps @hirochachacha could chime in on their usage that might have led them to catching this bug.\r\nMaybe we could also ask @campoy for help querying the Github corpus in BigQuery as was done here https://github.com/golang/go/issues/14595#issuecomment-235651095?\r\n\r\nHowever:\r\nSearching in the stdlib for users of SimpleFold, there are 29 uses of it across 11 unique files\r\n```shell\r\n$ git grep -E 'unicode\\.SimpleFold\\(' * | cut -d\":\" -f1 | sort | uniq | wc -l\r\n      11\r\n```\r\n```shell\r\n$ git grep -nE 'unicode\\.SimpleFold\\(' *\r\nsrc/bytes/bytes.go:712:\t\tr := unicode.SimpleFold(sr)\r\nsrc/bytes/bytes.go:714:\t\t\tr = unicode.SimpleFold(r)\r\nsrc/cmd/doc/pkg.go:640:\t\tr1 := unicode.SimpleFold(r)\r\nsrc/cmd/go/main.go:763:\t\t\tr = unicode.SimpleFold(r0)\r\nsrc/regexp/onepass.go:387:\t\t\t\tfor r1 := unicode.SimpleFold(r0); r1 != r0; r1 = unicode.SimpleFold(r1) {\r\nsrc/regexp/onepass.go:411:\t\t\t\tfor r1 := unicode.SimpleFold(r0); r1 != r0; r1 = unicode.SimpleFold(r1) {\r\nsrc/regexp/syntax/compile.go:271:\tif len(r) != 1 || unicode.SimpleFold(r[0]) == r[0] {\r\nsrc/regexp/syntax/parse.go:119:\t\tunicode.SimpleFold(re.Rune[0]) == re.Rune[2] \u0026\u0026\r\nsrc/regexp/syntax/parse.go:120:\t\tunicode.SimpleFold(re.Rune[2]) == re.Rune[0] ||\r\nsrc/regexp/syntax/parse.go:123:\t\t\tunicode.SimpleFold(re.Rune[0]) == re.Rune[1] \u0026\u0026\r\nsrc/regexp/syntax/parse.go:124:\t\t\tunicode.SimpleFold(re.Rune[1]) == re.Rune[0] {\r\nsrc/regexp/syntax/parse.go:199:\tfor r = unicode.SimpleFold(r); r != r0; r = unicode.SimpleFold(r) {\r\nsrc/regexp/syntax/parse.go:1724:\t\tf := unicode.SimpleFold(c)\r\nsrc/regexp/syntax/parse.go:1727:\t\t\tf = unicode.SimpleFold(f)\r\nsrc/regexp/syntax/parse_test.go:335:\t\t\t\t\tif unicode.SimpleFold(r) != r {\r\nsrc/regexp/syntax/parse_test.go:409:\tc := unicode.SimpleFold(r)\r\nsrc/regexp/syntax/parse_test.go:414:\t\tc = unicode.SimpleFold(c)\r\nsrc/regexp/syntax/parse_test.go:422:\t\tif unicode.SimpleFold(i) == i {\r\nsrc/regexp/syntax/prog.go:213:\t\t\tfor r1 := unicode.SimpleFold(r0); r1 != r0; r1 = unicode.SimpleFold(r1) {\r\nsrc/strings/strings.go:712:\t\tr := unicode.SimpleFold(sr)\r\nsrc/strings/strings.go:714:\t\t\tr = unicode.SimpleFold(r)\r\nsrc/unicode/example_test.go:117:\tfmt.Printf(\"%#U\\n\", unicode.SimpleFold('A'))      // 'a'\r\nsrc/unicode/example_test.go:118:\tfmt.Printf(\"%#U\\n\", unicode.SimpleFold('a'))      // 'A'\r\nsrc/unicode/example_test.go:119:\tfmt.Printf(\"%#U\\n\", unicode.SimpleFold('K'))      // 'k'\r\nsrc/unicode/example_test.go:120:\tfmt.Printf(\"%#U\\n\", unicode.SimpleFold('k'))      // '\\u212A' (Kelvin symbol, â„ª)\r\nsrc/unicode/example_test.go:121:\tfmt.Printf(\"%#U\\n\", unicode.SimpleFold('\\u212A')) // 'K'\r\nsrc/unicode/example_test.go:122:\tfmt.Printf(\"%#U\\n\", unicode.SimpleFold('1'))      // '1'\r\nsrc/unicode/maketables.go:1320:\t\t\tif g := unicode.SimpleFold(i); g != f {\r\nsrc/unicode/maketables.go:1321:\t\t\t\tfmt.Fprintf(os.Stderr, \"unicode.SimpleFold(%#U) = %#U, want %#U\\n\", i, g, f)\r\n```",
	"user": {
		"login": "odeke-em",
		"id": 4898263,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-15T00:26:44Z",
	"updated_at": "2016-08-15T00:26:44Z"
}
