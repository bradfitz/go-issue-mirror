{
	"id": 112736460,
	"number": 13020,
	"state": "closed",
	"title": "cmd/vet: make -all -shadow mean all default checks and also -shadow",
	"body": "Currently the only way to run all vet checks in a single invocation is `-test` flag:\r\n\r\n    go tool vet -test *.go\r\n\r\nHowever the `-test` flag documentation says that it is supposed to be used only for testing.\r\n\r\nIt is possible to achieve the same effect by invoking go tool vet multiple times:\r\n\r\n    go tool vet *.go\r\n    go tool vet -shadow *.go\r\n\r\nThe problem with this approach is that if more experimental checks are added in the future or shadow become a standard checker these commands will have to be changed.\r\n\r\nI propose to\r\n\r\n- add `-extra` flag to go vet tool that enables all experimental checkers that are not enabled by `-all` flag (similar to -Wall and -Wextra in gcc).\r\n- remove (or deprecate) `-test` flag. Use combination of `-all` and `-extra` flags in the tests\r\n\r\nExamples:\r\n\r\n- Run all standard checks (exactly the same as now): `go tool vet *.go` or `go tool vet -all *.go`\r\n- Run all extra checks (currently the only extra check is shadow): `go tool vet -extra *.go`\r\n- Run all checks (including extra checks): `go tool vet -all -extra *.go`\r\n\r\nThis change will also allow integrating shadow vet check into Emacs flycheck package. See the following discussion for more details: https://github.com/flycheck/flycheck/issues/765\r\n",
	"user": {
		"login": "kostya-sh",
		"id": 7126275,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		},
		{
			"name": "Proposal-Accepted"
		}
	],
	"comments": 4,
	"closed_at": "2015-12-05T04:07:58Z",
	"created_at": "2015-10-22T05:58:36Z",
	"updated_at": "2015-12-05T04:07:58Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
