{
	"id": 51276263,
	"number": 268,
	"state": "closed",
	"title": "SIGCHLD wakes up time.Sleep",
	"body": "by **gfranxman**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. Calling ForkExec\n2. Calling time.Sleep\n\n--- example ---\npackage main\n\nimport \u0026quot;fmt\u0026quot;\nimport \u0026quot;os\u0026quot;\nimport \u0026quot;time\u0026quot;\n\nfunc main() {\n    fmt.Printf(\u0026quot;First 5 sec Sleep\\n\u0026quot; ) ;\n    time.Sleep(1000* 1000*1000 * 5) ;\n\n    // forkexec seems to break the timer\n    pid, err := os.ForkExec(\u0026quot;/bin/date\u0026quot;, []string{\u0026quot;date\u0026quot;}, os.Environ(),\n\u0026quot;\u0026quot;, []*os.File{os.Stdin, os.Stdout, os.Stderr});\n    fmt.Printf( \u0026quot;pid, err:%d, %d\\n\u0026quot; , pid, err ) ;\n\n    fmt.Printf(\u0026quot;Second 5 sec Sleep\\n\u0026quot; ) ;\n    time.Sleep(1000* 1000*1000 * 5) ;\n\n    fmt.Printf(\u0026quot;Done\\n\u0026quot; ) ;\n}\n--- /example --\n\n\nWhat is the expected output? What do you see instead?\n\nI would expect the example program to output \u0026quot;First 5 sec Sleep\u0026quot; then pause\nfor 5 seconds, then output \u0026quot;Second 5 sec Sleep\u0026quot; and pause for 5 more\nseconds before printing \u0026quot;Done\u0026quot;.    The output from the ForkExec'd /bin/date\ncommand should shouw up asynchonously.\n\nWhat is your $GOOS?  $GOARCH?\nGOARCH=amd64\nGOOS=linux\n\n\nWhich revision are you sync'ed to?  (hg log -l 1)\n\n$ hg log -l 1\nchangeset:   4108:d1b75410b793\ntag:         tip\nuser:        Adam Langley \u0026lt;agl@golang.org\u0026gt;\ndate:        Tue Nov 17 18:21:47 2009 -0800\nsummary:     crypto/rsa: add PKCS#1 v1.5 signature support.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"closed_at": "2014-12-08T10:03:54Z",
	"created_at": "2009-11-19T16:18:17Z",
	"updated_at": "2016-06-24T19:05:42Z"
}
