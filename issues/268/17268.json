{
	"id": 179882568,
	"number": 17268,
	"state": "open",
	"title": "net/http: sanity check the IDNA implementation",
	"body": "Opening this bug for @mpvl to sanity check the new net/http implementation of IDNA.\r\n\r\nIt's all been committed. See `func idnaASCII` in `net/http/request.go`:\r\n\r\n```go\r\nfunc idnaASCII(v string) (string, error) {\r\n        if isASCII(v) {\r\n                return v, nil\r\n        }\r\n        // The idna package doesn't do everything from                                                                                  \r\n        // https://tools.ietf.org/html/rfc5895 so we do it here.                                                                        \r\n        // TODO(bradfitz): should the idna package do this instead?                                                                     \r\n        v = strings.ToLower(v)\r\n        v = width.Fold.String(v)\r\n        v = norm.NFC.String(v)\r\n        return idna.ToASCII(v)\r\n}\r\n```\r\n\r\nI'm not a domain expert.\r\n\r\nIn particular, do we do what Chrome and Firefox do? A user should be able to type in any case with any widths in their URL bar (or in an HTML file's `\u003ca href=\".....\"\u003e` attribute) and they should all canonicalize the same way.\r\n\r\nThanks!\r\n\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsDecision"
		}
	],
	"assignee": {
		"login": "mpvl",
		"id": 6445383,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"created_at": "2016-09-28T20:40:11Z",
	"updated_at": "2016-10-07T20:00:22Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
