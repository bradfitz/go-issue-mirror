{
	"id": 251897987,
	"body": "The two CLs mentioned here are close to passing all tests defined in http://www.unicode.org/Public/idna/9.0.0/IdnaTest.txt. That's the easy part. Now comes the hard part: defining what to do with errors.\r\n\r\nAn error does not mean a domain name cannot be used. For example, a browser may decide to show a label as punycode, instead of Unicode, in case of some errors.  An implementation may also add additional constraints based on confusables and cross-script spoofing, for example.\r\n\r\nThe policy for Chrome is described here: https://www.chromium.org/developers/design-documents/idn-in-google-chrome. This also gives a decent overview how other browsers behave.\r\n\r\nWe have to choose which policies we want to implement here. I would _not_ pick something that is language-dependent. Other than that, something like Firefox (and what Chrome will be) seems the nicest to me. Safari's approach looks like its the easiest to implement.\r\n\r\n",
	"user": {
		"login": "mpvl",
		"id": 6445383,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-06T08:25:08Z",
	"updated_at": "2016-10-06T08:25:08Z"
}
