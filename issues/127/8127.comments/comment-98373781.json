{
	"id": 98373781,
	"body": "It seems dynamic symbols reading was implemented with the following commit:\r\n\r\n    commit f5b600f70cbe1e504a7623a7e0636535c49ea6c8\r\n    Author: Pietro Gagliardi \u003cpietro10@mac.com\u003e\r\n    Date:   Thu Jul 10 12:44:40 2014 -0700\r\n\r\n    debug/elf: add (*File).DynamicSymbols, ErrNoSymbols, and tests for (*File).Symbols and (*File).DynamicSymbols, and formalize symbol order.\r\n\r\n    Added a complement to (*File).Symbols for the dynamic symbol table.\r\n    Would be useful, for instance, if seraching for certain shared objects\r\n    compatible with certain libraries (for instance, LADSPA requires an\r\n    exported symbol \"ladspa_descriptor\").\r\n\r\n    Added a variable ErrNoSymbols that canonicalizes a return from\r\n    (*File).Symbols and (*File).DyanmicSymbols if the file has no symbols.\r\n\r\n    Added tests for both (*File).Symbols and (*File).DynamicSymbols;\r\n    there was never a test for (*File).Symbols at all. A small C program using\r\n    libelf, included in the test data, was used to produce the golden\r\n    symbols to compare against.\r\n\r\n    As part of the requirements for testing, (*File).Symbols and (*File).DynamicSymbols now document the order in which the symbol tables are returned (in the order the symbols appear in the file).\r\n\r\n    All tests currently pass.\r\n\r\n    LGTM=iant\r\n    R=golang-codereviews, iant\r\n    CC=golang-codereviews\r\n    https://golang.org/cl/107530043\r\n\r\nIs there anything missing, or can this issue be closed?\r\nBtw, it does not appear in the go1.4 release notes.",
	"user": {
		"login": "dspezia",
		"id": 652458,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-05-02T16:02:03Z",
	"updated_at": "2015-05-02T16:02:03Z"
}
