{
	"id": 130940247,
	"body": "The following proposal documents can be used to understand what other packages are doing:\r\n- [JSR 13](https://www.jcp.org/en/jsr/detail?id=13) for Java. Interestingly the original author seems to be Mike Cowlishaw.\r\n- [PEP 0327](https://www.python.org/dev/peps/pep-0327/) for Python\r\n\r\nReference documentation: [Java BigDecimal](http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html), [Python decimal](https://docs.python.org/3/library/decimal.html)\r\n\r\nBoth Java and Python implementations are based on a decimal arithmetic model, as defined by the relevant standards: IEEE 854 , ANSI X3-274 and the proposed [revision](http://grouper.ieee.org/groups/754/revision.html) of IEEE 754.\r\n\r\nWhile Java and Python implementations are slightly different they have the following commonalities:\r\n- Both exact unrounded decimal arithmetic (sometimes called fixed-point arithmetic) and rounded floating-point arithmetic are supported\r\n- A decimal number has a sign, coefficient digits, and an exponent.\r\n- A notion of significant places so that 1.30 + 1.20 is 2.50 is supported. The trailing zero is kept to indicate significance.\r\n- A concept of context for arithmetic operations specifying precision and rounding rules\r\n\r\nPython `decimal` is more complete implementation comparing to Java `BigDecimal`:\r\n- Infinities and NaNs are supported\r\n- Error behaviour is configurable via context (hardcoded in Java)\r\n- more numeric operations are implemented\r\n",
	"user": {
		"login": "kostya-sh",
		"id": 7126275,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-14T03:14:29Z",
	"updated_at": "2015-08-14T04:06:58Z"
}
