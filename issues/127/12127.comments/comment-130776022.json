{
	"id": 130776022,
	"body": "math/big is all about arbitrary precision arithmetic, and in the case of Float, the precision can be set arbitrarily (within memory limits, essentially).\r\n\r\nI'd be ok with a big.Decimal type; as long as it's also arbitrary precision. Fixed-size data types such as decQuad, decDouble belong into a separate package in my mind.\r\n\r\nIn fact, the Float implementation already uses some (minimal) decimal arithmetic for Float-\u003estring conversion; having an actual Decimal type would make that code unnecessary (in favor of using a fully-fledged Decimal implementation).\r\n\r\nThat said, I would like to see more \"meat\" around this proposal. With the Float implementation, the fixed-width IEEE floating-point spec provided reasonable guidance. What are the parameters for a Decimal implementation? Is it at Fixed-point implementation (arbitrary size number with fixed decimal point), or decimal floating-point representation (like Float, with mantissa and exponent, but the mantissa is always decimal)? Are the other options? What are the pros and cons? What are other packages doing? What is required for say business/banking applications?\r\n",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-08-13T17:42:43Z",
	"updated_at": "2015-08-13T17:42:43Z"
}
