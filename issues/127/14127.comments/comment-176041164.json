{
	"id": 176041164,
	"body": "Nice, \"http.test -test.v -test.run=TestRoundTripGzip\" can crash the kernel.\r\n```\r\n/netbsd: uvm_fault(0xfffffe8079bc8e80, 0x0, 1) -\u003e e\r\nnetbsd-amd64 /netbsd: fatal page fault in supervisor mode\r\nnetbsd-amd64 /netbsd: trap type 6 code 0 rip ffffffff805bf9d5 cs 8 rflags 10246 cr2 18 ilevel 0 rsp fffffe80443f5c88\r\nnetbsd-amd64 /netbsd: curlwp 0xfffffe805bc46a80 pid 23983.2 lowest kstack 0xfffffe80443f32c0\r\nnetbsd-amd64 /netbsd: panic: trap\r\nnetbsd-amd64 /netbsd: cpu0: Begin traceback...\r\nnetbsd-amd64 /netbsd: vpanic() at netbsd:vpanic+0x13c\r\nnetbsd-amd64 /netbsd: snprintf() at netbsd:snprintf\r\nnetbsd-amd64 /netbsd: startlwp() at netbsd:startlwp\r\nnetbsd-amd64 /netbsd: alltraps() at netbsd:alltraps+0x96\r\nnetbsd-amd64 /netbsd: sys___kevent50() at netbsd:sys___kevent50+0x33\r\nnetbsd-amd64 /netbsd: syscall() at netbsd:syscall+0x9a\r\nnetbsd-amd64 /netbsd: --- syscall (number 435) ---\r\nnetbsd-amd64 /netbsd: 45f643:\r\nnetbsd-amd64 /netbsd: cpu0: End traceback...\r\nnetbsd-amd64 /netbsd: \r\nnetbsd-amd64 /netbsd: dumping to dev 0,1 (offset=0, size=0): not possible\r\nnetbsd-amd64 /netbsd: rebooting...\r\n```\r\nThe result of disasm /netbsd says:\r\n```\r\nffffffff805bf959:       00 \r\nffffffff805bf95a:       48 8b 43 08             mov    0x8(%rbx),%rax\r\nffffffff805bf95e:       49 89 45 18             mov    %rax,0x18(%r13)\r\nffffffff805bf962:       48 8b 43 08             mov    0x8(%rbx),%rax\r\nffffffff805bf966:       4c 89 28                mov    %r13,(%rax)\r\nffffffff805bf969:       49 8d 45 10             lea    0x10(%r13),%rax\r\nffffffff805bf96d:       48 89 43 08             mov    %rax,0x8(%rbx)\r\nffffffff805bf971:       83 43 70 01             addl   $0x1,0x70(%rbx)\r\nffffffff805bf975:       41 83 4d 50 02          orl    $0x2,0x50(%r13)\r\nffffffff805bf97a:       e9 72 ff ff ff          jmpq   ffffffff805bf8f1 \u003ckevent1+0x4b2\u003e\r\nffffffff805bf97f:       48 8b 7c 24 50          mov    0x50(%rsp),%rdi\r\nffffffff805bf984:       e8 07 a8 07 00          callq  ffffffff8063a190 \u003cmutex_spin_exit\u003e\r\nffffffff805bf989:       48 8b 7c 24 10          mov    0x10(%rsp),%rdi\r\nffffffff805bf98e:       e8 6d a7 07 00          callq  ffffffff8063a100 \u003cmutex_enter\u003e\r\nffffffff805bf993:       ba 01 00 00 00          mov    $0x1,%edx\r\nffffffff805bf998:       48 8b 74 24 18          mov    0x18(%rsp),%rsi\r\nffffffff805bf99d:       4c 89 ef                mov    %r13,%rdi\r\nffffffff805bf9a0:       e8 42 e9 ff ff          callq  ffffffff805be2e7 \u003cknote_detach\u003e\r\nffffffff805bf9a5:       48 8b 7c 24 50          mov    0x50(%rsp),%rdi\r\nffffffff805bf9aa:       e8 91 a7 07 00          callq  ffffffff8063a140 \u003cmutex_spin_enter\u003e\r\nffffffff805bf9af:       e9 3d ff ff ff          jmpq   ffffffff805bf8f1 \u003ckevent1+0x4b2\u003e\r\nffffffff805bf9b4:       48 89 14 24             mov    %rdx,(%rsp)\r\nffffffff805bf9b8:       48 8b 7c 24 50          mov    0x50(%rsp),%rdi\r\nffffffff805bf9bd:       e8 ce a7 07 00          callq  ffffffff8063a190 \u003cmutex_spin_exit\u003e\r\nffffffff805bf9c2:       bf 01 00 00 00          mov    $0x1,%edi\r\nffffffff805bf9c7:       e8 a7 9c 00 00          callq  ffffffff805c9673 \u003c_kernel_lock\u003e\r\nffffffff805bf9cc:       49 8b 45 68             mov    0x68(%r13),%rax\r\nffffffff805bf9d0:       31 f6                   xor    %esi,%esi\r\nffffffff805bf9d2:       4c 89 ef                mov    %r13,%rdi\r\nffffffff805bf9d5:       ff 50 18                callq  *0x18(%rax) // rip\r\nffffffff805bf9d8:       41 89 c4                mov    %eax,%r12d\r\nffffffff805bf9db:       31 f6                   xor    %esi,%esi\r\nffffffff805bf9dd:       bf 01 00 00 00          mov    $0x1,%edi\r\nffffffff805bf9e2:       e8 0b 9e 00 00          callq  ffffffff805c97f2 \u003c_kernel_unlock\u003e\r\nffffffff805bf9e7:       48 8b 7c 24 50          mov    0x50(%rsp),%rdi\r\nffffffff805bf9ec:       e8 4f a7 07 00          callq  ffffffff8063a140 \u003cmutex_spin_enter\u003e\r\nffffffff805bf9f1:       41 8b 75 50             mov    0x50(%r13),%esi\r\nffffffff805bf9f5:       40 f6 c6 02             test   $0x2,%sil\r\nffffffff805bf9f9:       48 8b 14 24             mov    (%rsp),%rdx\r\nffffffff805bf9fd:       0f 85 75 fd ff ff       jne    ffffffff805bf778 \u003ckevent1+0x339\u003e\r\nffffffff805bfa03:       45 85 e4                test   %r12d,%r12d\r\nffffffff805bfa06:       0f 85 8f fe ff ff       jne    ffffffff805bf89b \u003ckevent1+0x45c\u003e\r\nffffffff805bfa0c:       83 e6 fe                and    $0xfffffffe,%esi\r\nffffffff805bfa0f:       41 89 75 50             mov    %esi,0x50(%r13)\r\nffffffff805bfa13:       e9 60 fd ff ff          jmpq   ffffffff805bf778 \u003ckevent1+0x339\u003e\r\nffffffff805bfa18:       49 8b 45 18             mov    0x18(%r13),%rax\r\nffffffff805bfa1c:       48 89 43 08             mov    %rax,0x8(%rbx)\r\nffffffff805bfa20:       e9 47 fe ff ff          jmpq   ffffffff805bf86c \u003ckevent1+0x42d\u003e\r\nffffffff805bfa25:       44 8b 44 24 38          mov    0x38(%rsp),%r8d\r\nffffffff805bfa2a:       48 8b 4c 24 28          mov    0x28(%rsp),%rcx\r\nffffffff805bfa2f:       48 8b 54 24 48          mov    0x48(%rsp),%rdx\r\nffffffff805bfa34:       48 8d b4 24 90 00 00    lea    0x90(%rsp),%rsi\r\nffffffff805bfa3b:       00\r\n```\r\nso the crash happened around\r\n```\r\nstatic int\r\nkqueue_scan(...)\r\n{\r\n\t\t\t(snip)\r\n\t\t\tif (nkev == kevcnt) {\r\n\t\t\t\t/* do copyouts in kevcnt chunks */\r\n\t\t\t\tmutex_spin_exit(\u0026kq-\u003ekq_lock);\r\n\t\t\t\terror = (*keops-\u003ekeo_put_events)\r\n\t\t\t\t    (keops-\u003ekeo_private,\r\n\t\t\t\t    kevbuf, ulistp, nevents, nkev);\r\n\t\t\t\tmutex_spin_enter(\u0026kq-\u003ekq_lock);\r\n\t\t\t\tnevents += nkev;\r\n\t\t\t\tnkev = 0;\r\n\t\t\t\tkevp = kevbuf;\r\n\t\t\t}\r\n```\r\nin http://cvsweb.netbsd.org/bsdweb.cgi/src/sys/kern/kern_event.c?rev=1.80.2.1\u0026content-type=text/x-cvsweb-markup\u0026only_with_tag=netbsd-7-0-RELEASE.",
	"user": {
		"login": "mikioh",
		"id": 92117,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-28T07:54:30Z",
	"updated_at": "2016-01-28T07:54:30Z"
}
