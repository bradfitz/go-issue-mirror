{
	"id": 135448396,
	"number": 14466,
	"state": "open",
	"title": "cmd/vet: Doesn't complain when the field tags are not parsable by the reflect: StructTag.Get() call",
	"body": "Hi, I have noticed a problem with `go vet` that have stung me recently. \r\n`Go vet` doesn't report an error in the field tag formatting.\r\n\r\nLet's take an example struct : \r\n```\r\n// TestStruct comment\r\ntype TestStruct struct {\r\n\tA string `json:\"jsona\",xml:\"xmla\"`\r\n}\r\n```\r\nAs you can see I have set the field tags, and while the tags looks OK, the tag format is incorrect. To illustrate, the example code:\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"reflect\"\r\n)\r\n\r\n// TestStruct comment\r\ntype TestStruct struct {\r\n\tA string `json:\"jsona\",xml:\"xmla\"`\r\n}\r\n\r\nfunc main() {\r\n\r\n\tvar theStruct = TestStruct{\"A\"}\r\n\r\n\tfmt.Println(\"First field tag: \", reflect.TypeOf(theStruct).Field(0).Tag)\r\n\tfmt.Println(\"Json tag value:  \", reflect.TypeOf(theStruct).Field(0).Tag.Get(\"json\"))\r\n\tfmt.Println(\"XML tag value:   \", reflect.TypeOf(theStruct).Field(0).Tag.Get(\"xml\"))\r\n}\r\n```\r\nDid return \r\n```\r\nFirst field tag:  json:\"jsona\",xml:\"xmla\"\r\nJson tag value:   jsona\r\nXML tag value:  \r\n```\r\n\r\nThe problem here is the coma character between `json` and `xml` tags. \r\nThe go vet tool doesn't complain about this type of error and I would like to fix it if it is OK. \r\n\r\nI will raise a pull request if the maintainers agree that this is a bug in the go vet tool indeed. ",
	"user": {
		"login": "szank",
		"id": 773802,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2016-02-22T15:17:02Z",
	"updated_at": "2016-05-18T00:01:53Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	},
	"reactions": {
		"total_count": 1,
		"+1": 1
	}
}
