{
	"id": 91837682,
	"number": 11466,
	"state": "closed",
	"title": "runtime: recycle large stack spans",
	"body": "https://golang.org/cl/11502 fixes a race in concurrent GC by delaying the freeing of large stack spans until the end of mark termination. However, it's fine to reuse this memory for other stacks, as long as the span itself remains a stack span. We do this for small stacks because there's already a cache free small stacks. For 1.6, consider adding a similar mechanism that lets us reuse large stack spans and free only those that remain unused at the end of mark termination.\r\n\r\n@randall77 @rsc @RLH ",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2015-12-14T21:58:02Z",
	"created_at": "2015-06-29T15:31:28Z",
	"updated_at": "2015-12-14T21:58:02Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
