{
	"id": 66928099,
	"body": "For the 32-bit ports, probably we should switch to a scheme that does not\nrely on\na single bitmap for all the Go heap.\n\nA similar problem exists on windows/386, that some DLL loads in the middle\nof\nthe user's address space, and fragmented the VM space so that there is\nenough\nVM in total, but there is no 768MB of contiguous VM space. On windows this\nproblem is exaggerated by the fact that by default, each user process only\nhas\n2GB of VM space.\n\nDo we know why the ART runtime reserves so much VM space?\n\nCould we make the change such that it first tries 512MB arena, and if\nfailed,\nprint a message to logcat (perhaps more importantly, cat a copy of\n/proc/self/maps\nto logcat to aid diagnosis, could sandboxed app read /proc/self/maps?) and\nfallback to 256MB arena?",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-14T20:25:11Z",
	"updated_at": "2014-12-14T20:25:11Z"
}
