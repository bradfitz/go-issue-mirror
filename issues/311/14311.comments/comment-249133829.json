{
	"id": 249133829,
	"body": "@raspy `root_unix.go` defines only one single certificate **file** for each distribution.\r\n\r\nI also just ran into this problem on an old openSUSE 13.1 system  where `root_unix.go` of go1.7.1 uses `/etc/ssl/ca-bundle.pem` which is a symlink to `/var/lib/ca-certificates/ca-bundle.pem`. The file has this header:\r\n```\r\n#\r\n# automatically created by /usr/lib/ca-certificates/update.d/certbundle.run. Do not edit!\r\n#\r\n# Use of this file is deprecated and should only be used as last\r\n# resort by applications that do not support p11-kit or reading /etc/ssl/certs.\r\n# You should avoid hardcoding any paths in applications anyways though. Use\r\n# functions that know the operating system defaults instead:\r\n#\r\n# - openssl: SSL_CTX_set_default_verify_paths()\r\n# - gnutls: gnutls_certificate_set_x509_system_trust(cred)\r\n```\r\nUnfortunately, on this system nobody ever  executed `/usr/lib/ca-certificates/update.d/certbundle.run` and (apart from the header) the file was sempty and thus certificate validation failed (e.g. `go get`).\r\n\r\nExecuting the script fixes the problem but not everyone was happy with the solution and commented that Go shouldn't rely on this deprecated file on openSUSE.",
	"user": {
		"login": "knweiss",
		"id": 1123418,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-23T08:31:06Z",
	"updated_at": "2016-09-23T12:06:56Z"
}
