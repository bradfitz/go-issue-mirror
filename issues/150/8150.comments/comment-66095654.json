{
	"id": 66095654,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4 by **gnormington@gopivotal.com**:\n\n\u003cpre\u003eThanks for the fast feedback.\n\n\u003e An interface value is an instance of an interface type[0]\n\u003e as is an integer value an instance of an integer type.\n\nOf course, but that just pushes the problem back to what it means to instantiate an\ninterface type, which I don't think is clear in the spec.\n\n\u003e An interface has always both a static type and a dynamic type.\n\nI find this really confusing. The spec defines \"interface\" as follows: \"An interface\ntype specifies a method set called its interface.\"\n\nHow can a method set have a dynamic type? Surely only values have dynamic types?\n\n\u003e An interface value (IV) can be nil and can hold a nil value.\n\nPerhaps \"can hold a nil dynamic value\" would be less confusing, if that's what you mean.\n\n\u003e The former situation applies when the IV has no dynamic\n\u003e type because nothing has been assigned to the IV. The later\n\u003e situation applies when the dynamic type of the IV is nil.\n\nYou seem to be saying that:\n\nvar v1 myInterface\n\nresults in v1 being nil and having no dynamic type whereas\n\nvar v1 myInterface\nv1 = nil\n\nresults in v1 holding a nil value and having a nil dynamic type. Agreed?\n\nBut there is another case to consider: an IV which has a non-nil dynamic type and a nil\ndynamic value, e.g. (*MyError, nil) from the FAQ.\n\n\u003e The static type of an IV is the type IV was declared to be:\n\u003e\n\u003e        var v1 interface{}\n\u003e        var v2 myInterface\n\u003e        var v3 int\n\u003e\n\u003e The static type doesn't change exactly as the type of v3 never changes.\n\nSure.\n\n\u003e\n\u003e Etc., ie. all (of the other) observations in the OP are already\n\u003e well defined in the language specification.\n\nIf by OP, you mean the opening text of this bug report, I'm afraid I disagree. With a\nbit of polishing up (or even correction - see above), the following statements would be\na valuable addition to the spec:\n\n\u003e An interface value (IV) can be nil and can hold a nil value.\n\u003e The former situation applies when the IV has no dynamic\n\u003e type because nothing has been assigned to the IV. The later\n\u003e situation applies when the dynamic type of the IV is nil.\n\nbut, if these are already well defined in the spec, I'm wondering where as I've clearly\nnot found the right section yet.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-06-04T15:59:33Z",
	"updated_at": "2014-12-08T10:45:13Z"
}
