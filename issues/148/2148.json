{
	"id": 51278799,
	"number": 2148,
	"state": "closed",
	"title": "Set Timeout for Accept and AcceptTCP methods",
	"body": "\u003cpre\u003eSet Timeout for Accept and AcceptTCP methods in package net.\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n8g\n\nWhich operating system are you using?\nWindows 7\n\nWhich revision are you using?  (hg identify)\ntip\n\nPlease provide any additional information below.\n\npackage main\n\nimport ( \n       \u0026quot;fmt\u0026quot;\n       \u0026quot;flag\u0026quot;\n       \u0026quot;net\u0026quot;\n)\n\nvar listening bool = true\n\nfunc main() {\n     flag.Parse()\n\n     address, err := net.ResolveTCPAddr(\u0026quot;tcp\u0026quot;, \u0026quot;:8080\u0026quot;)\n\n     if err != nil {\n        panic(err)\n     }\n\n     fmt.Printf(\u0026quot;ListenTCP\\n\u0026quot;)\n     l, err := net.ListenTCP(\u0026quot;tcp\u0026quot;, address)\n\n     if err != nil {\n        panic(err)\n     }\n\n     defer l.Close()\n\n     for {\n         \n         // this point is unreachable so far that any client to connect\n         if !listening {\n            break\n         }\n\n         fmt.Printf(\u0026quot;AcceptTCP\\n\u0026quot;)\n         conn, err := l.AcceptTCP()\n\n         if err != nil {\n            panic(err)\n         }\n\n         fmt.Printf(\u0026quot;conn %s\u0026quot;, conn)\n     }\n}\u003c/pre\u003e",
	"user": {
		"login": "dopsilva",
		"id": 1541125,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:11:33Z",
	"created_at": "2011-08-11T18:21:54Z",
	"updated_at": "2016-06-24T19:33:18Z"
}
