{
	"id": 66077385,
	"body": "\u003ca id=\"c12\"\u003e\u003c/a\u003eComment 12:\n\n\u003cpre\u003eI can reproduce on the ODROID-X, the crash is independent of the value of GOARM, but it\ndisppears when you disable cgo.\n\nIt is not linked to stripping specifically: if you simply do \"objcopy go go.copy\" and\nrun \"go.copy get code.google.com/p/rsc/xmpp\", you get the same crash.\n\nOn tip:\n\nfatal error: malloc/free - deadlock\n[signal 0xb code=0x1 addr=0x2f0 pc=0x74930]\n\ngoroutine 6 [syscall]:\n[fp=0xb69dda34] return()\n\t/storage/remy/go/src/pkg/runtime/asm_arm.s:275\n[fp=0xb69dda5c] runtime.cgocall(0x263b74, 0xb69dda74)\n\t/storage/remy/go/src/pkg/runtime/cgocall.c:162 +0xec\n[fp=0xb69dda70] net._C2func_getaddrinfo(0x4e81c8, 0x0, 0x106e38c0, 0x10600d70, 0x74a0c,\n...)\n\tnet/_obj/_cgo_defun.c:43 +0x30\n[fp=0xb69ddb98] net.cgoLookupIPCNAME(0x106e37e0, 0xf, 0x0, 0x0, 0x0, ...)\n\tnet/_obj/_cgo_gotypes.go:180 +0xfc\n[fp=0xb69ddbc4] net.cgoLookupIP(0x106e37e0, 0xf, 0x0, 0x0, 0x0, ...)\n\tnet/_obj/_cgo_gotypes.go:226 +0x54\n[fp=0xb69ddc18] net.cgoLookupHost(0x106e37e0, 0xf, 0x0, 0x0, 0x0, ...)\n\tnet/_obj/_cgo_gotypes.go:104 +0x54\n[fp=0xb69ddc3c] net.lookupHost(0x106e37e0, 0xf, 0x0, 0x0, 0x0, ...)\n\t/storage/remy/go/src/pkg/net/lookup_unix.go:56 +0x4c\n\nThe crash exists since cgo is enabled on ARM (sometimes you need to apply revision\n8d25c35f12ee to link properly).\n\nHere are the section before and after objcopy:\n\nBEFORE\n\nThere are 33 section headers, starting at offset 0x134:\n\nSection Headers:\n  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al\n  [ 0]                   NULL            00000000 000000 000000 00      0   0  0\n  [ 1] .text             PROGBITS        00010c00 000c00 253248 00  AX  0   0  4\n  [ 2] .rodata           PROGBITS        00263e48 253e48 104d80 00   A  0   0  8\n  [ 3] .typelink         PROGBITS        00368bc8 358bc8 0007cc 00   A  0   0  4\n  [ 4] .gosymtab         PROGBITS        00369398 359398 143d0e 00   A  0   0  8\n  [ 5] .gopclntab        PROGBITS        004ad0a8 49d0a8 0161c2 00   A  0   0  8\n  [ 6] .rel              REL             004c3270 4b3270 000008 08   A 13   0  4\n  [ 7] .gnu.version      VERSYM          004c3278 4b3278 000028 02   A 13   0  2\n  [ 8] .gnu.version_r    VERNEED         004c32a0 4b32a0 000040 00   A 12   2  4\n  [ 9] .hash             HASH            004c32e0 4b32e0 000070 04   A 13   0  4\n  [10] .rel.plt          REL             004c3350 4b3350 000078 08   A 13   0  0\n  [11] .plt              PROGBITS        004c33c8 4b33c8 0000c8 04  AX  0   0  4\n  [12] .dynstr           STRTAB          004c3490 4b3490 00012c 00   A  0   0  1\n  [13] .dynsym           DYNSYM          004c35c0 4b35c0 000140 10   A 12   0  4\n  [14] .shstrtab         STRTAB          00000000 4b3700 00018c 00      0   0  1\n  [15] .got              PROGBITS        004c4000 4b4000 000004 04  WA  0   0  4\n  [16] .got.plt          PROGBITS        004c4008 4b4008 000048 04  WA  0   0  4\n  [17] .dynamic          DYNAMIC         004c4050 4b4050 000098 08  WA 12   0  4\n  [18] .noptrdata        PROGBITS        004c40e8 4b40e8 010254 00  WA  0   0  8\n  [19] .data             PROGBITS        004d4340 4c4340 0079dc 00  WA  0   0  8\n  [20] .bss              NOBITS          004dbd20 4cbd20 005dd4 00  WA  0   0  8\n  [21] .noptrbss         NOBITS          004e1af8 4d1af8 005d10 00  WA  0   0  8\n  [22] .interp           PROGBITS        00010bed 000bed 000013 00   A  0   0  1\n  [23] .symtab           SYMTAB          00000000 4cc000 022510 10     24 291  4\n  [24] .strtab           STRTAB          00000000 4ee510 035786 00      0   0  1\n  [25] .debug_abbrev     PROGBITS        00000000 523c96 0000d3 00      0   0  1\n  [26] .debug_line       PROGBITS        00000000 523d69 029f35 00      0   0  1\n  [27] .debug_frame      PROGBITS        00000000 54dc9e 01c694 00      0   0  1\n  [28] .debug_info       PROGBITS        00000000 56a332 0c0bd0 00      0   0  1\n  [29] .debug_pubnames   PROGBITS        00000000 62af02 03dab6 00      0   0  1\n  [30] .debug_pubtypes   PROGBITS        00000000 6689b8 015b69 00      0   0  1\n  [31] .debug_aranges    PROGBITS        00000000 67e521 000efc 00      0   0  1\n  [32] .debug_gdb_script PROGBITS        00000000 67f41d 000031 00      0   0  1\nKey to Flags:\n  W (write), A (alloc), X (execute), M (merge), S (strings)\n  I (info), L (link order), G (group), T (TLS), E (exclude), x (unknown)\n  O (extra OS processing required) o (OS specific), p (processor specific)\n\nAFTER\n\nThere are 33 section headers, starting at offset 0x627610:\n\nSection Headers:\n  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al\n  [ 0]                   NULL            00000000 000000 000000 00      0   0  0\n  [ 1] .text             PROGBITS        00010c00 000c00 253248 00  AX  0   0  4\n  [ 2] .rodata           PROGBITS        00263e48 253e48 104d80 00   A  0   0  8\n  [ 3] .typelink         PROGBITS        00368bc8 358bc8 0007cc 00   A  0   0  4\n  [ 4] .gosymtab         PROGBITS        00369398 359398 143d0e 00   A  0   0  8\n  [ 5] .gopclntab        PROGBITS        004ad0a8 49d0a8 0161c2 00   A  0   0  8\n  [ 6] .dynsym           DYNSYM          004c35c0 4b35c0 000140 10   A 13   0  4\n  [ 7] .rel              REL             004c3270 4b3270 000008 08   A  6   0  4\n  [ 8] .gnu.version      VERSYM          004c3278 4b3278 000028 02   A  6   0  2\n  [ 9] .gnu.version_r    VERNEED         004c32a0 4b32a0 000040 00   A 13   2  4\n  [10] .hash             HASH            004c32e0 4b32e0 000070 04   A  6   0  4\n  [11] .rel.plt          REL             004c3350 4b3350 000078 08   A  6  12  1\n  [12] .plt              PROGBITS        004c33c8 4b33c8 0000c8 04  AX  0   0  4\n  [13] .dynstr           STRTAB          004c3490 4b3490 00012c 00   A  0   0  1\n  [14] .got              PROGBITS        004c4000 4b4000 000004 04  WA  0   0  4\n  [15] .got.plt          PROGBITS        004c4008 4b4008 000048 04  WA  0   0  4\n  [16] .dynamic          DYNAMIC         004c4050 4b4050 000098 08  WA 13   0  4\n  [17] .noptrdata        PROGBITS        004c40e8 4b40e8 010254 00  WA  0   0  8\n  [18] .data             PROGBITS        004d4340 4c4340 0079dc 00  WA  0   0  8\n  [19] .bss              NOBITS          004dbd20 4cbd1c 005dd4 00  WA  0   0  8\n  [20] .noptrbss         NOBITS          004e1af8 4cbd1c 005d10 00  WA  0   0  8\n  [21] .interp           PROGBITS        00010bed 000bed 000013 00   A  0   0  1\n  [22] .debug_abbrev     PROGBITS        00000000 4cbd1c 0000d3 00      0   0  1\n  [23] .debug_line       PROGBITS        00000000 4cbdef 029f35 00      0   0  1\n  [24] .debug_frame      PROGBITS        00000000 4f5d24 01c694 00      0   0  1\n  [25] .debug_info       PROGBITS        00000000 5123b8 0c0bd0 00      0   0  1\n  [26] .debug_pubnames   PROGBITS        00000000 5d2f88 03dab6 00      0   0  1\n  [27] .debug_pubtypes   PROGBITS        00000000 610a3e 015b69 00      0   0  1\n  [28] .debug_aranges    PROGBITS        00000000 6265a7 000efc 00      0   0  1\n  [29] .debug_gdb_script PROGBITS        00000000 6274a3 000031 00      0   0  1\n  [30] .shstrtab         STRTAB          00000000 6274d4 00013c 00      0   0  1\n  [31] .symtab           SYMTAB          00000000 627b38 0226e0 10     32 320  4\n  [32] .strtab           STRTAB          00000000 64a218 035657 00      0   0  1\nKey to Flags:\n  W (write), A (alloc), X (execute), M (merge), S (strings)\n  I (info), L (link order), G (group), T (TLS), E (exclude), x (unknown)\n  O (extra OS processing required) o (OS specific), p (processor specific)\u003c/pre\u003e",
	"user": {
		"login": "remyoudompheng",
		"id": 175246,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-04-06T08:28:38Z",
	"updated_at": "2014-12-08T10:27:54Z"
}
