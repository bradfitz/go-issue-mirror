{
	"id": 254524222,
	"body": "I am saying that Apple does not document the dynamic linker behavior.  The only thing they consider stable is invoking the XCode linker to produce a binary.  If we do anything else we will eventually run into the problem that Go version N does not build on MacOS version Q.  In other words, to build on MacOS version Q you need to run Go version N+1.  I agree that if we do dynamic linking we can be in a better situation than we currently are, because today we see that Go version N built on MacOS version Q-1 does not run on MacOS version Q.  If we implement the (undocumented) dynamic linking correctly, then we will avoid that problem: Go version N may not build on MacOS version Q, but at least a program bult with Go version N on MacOS version Q-1 will run on MacOS version Q.\r\n\r\nThat said it's important to note that this will not fix the bootstrapping problem.  We will be forced to backport all dynamic linker changes to Go 1.4.  Perhaps we can avoid that by forcing Go 1.4 to always use external linking on Darwin when bootstrapping.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-18T14:26:31Z",
	"updated_at": "2016-10-18T14:26:31Z"
}
