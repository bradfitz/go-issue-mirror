{
	"id": 154354393,
	"number": 15654,
	"state": "closed",
	"title": "testing: confusing failures when t.Error called after test has returned",
	"body": "Pre-1.7, calling t.Error after a Test function returned had no effect. Now it causes the test suite to fail, but (confusingly) the cause of the failure isn't reported in any way.\r\n\r\n```go\r\npackage t_test\r\n\r\nimport (\r\n        \"testing\"\r\n        \"time\"\r\n)\r\n\r\nfunc TestA(t *testing.T) {\r\n        go func() {\r\n                time.Sleep(10 * time.Millisecond)\r\n                t.Errorf(\"failed after success\")\r\n        }()\r\n}\r\n\r\nfunc TestB(t *testing.T) {\r\n        time.Sleep(1 * time.Second)\r\n}\r\n```\r\n\r\n```\r\n$ go version\r\ngo version go1.6 linux/amd64\r\n$ go test . -test.v\r\n=== RUN   TestA\r\n--- PASS: TestA (0.00s)\r\n=== RUN   TestB\r\n--- PASS: TestB (1.00s)\r\nPASS\r\nok      _/usr/local/google/home/dneil/src/testex        1.022s\r\n```\r\n\r\n```\r\n$ ~/go/bin/go version\r\ngo version devel +15285d4 Wed Apr 27 11:08:58 2016 -0700 linux/amd64\r\n$ ~/go/bin/go test . -test.v\r\n=== RUN   TestA\r\n--- PASS: TestA (0.00s)\r\n=== RUN   TestB\r\n--- PASS: TestB (1.00s)\r\nFAIL\r\nexit status 1\r\nFAIL    _/usr/local/google/home/dneil/src/testex        1.013s\r\n```\r\n\r\nThe test is clearly at fault, so this becoming a failure isn't a problem at all. However, it's not at all obvious *why* the test has failed; every test passes and then the test run fails inexplicably.",
	"user": {
		"login": "neild",
		"id": 52544,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "mpvl",
		"id": 6445383,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2016-05-24T16:28:16Z",
	"created_at": "2016-05-11T22:09:38Z",
	"updated_at": "2016-05-24T16:28:16Z",
	"milestone": {
		"id": 1783753,
		"number": 43,
		"title": "Go1.7Beta"
	}
}
