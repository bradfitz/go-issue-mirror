{
	"id": 124370148,
	"number": 13782,
	"state": "open",
	"title": "spec: clarify imprecise conversions of non-floating-point constant to floating point type",
	"body": "... or perhaps the spec is does not convey the intention.\r\n\r\nThe spec says (https://golang.org/ref/spec#Conversions)\r\n\r\n\u003e A constant value x can be converted to type T in any of these cases:\r\n\u003e * x is representable by a value of type T.\r\n\r\nThe Go compiler allows conversion in certain cases, where an integer constant value is not representable as a value of type `float32`  as in:\r\n\r\n```go\r\npackage main\r\n\r\nimport \"fmt\"\r\n\r\nfunc main() {\r\n\t// bad\r\n\tconst A = 0x01ffffff\r\n\tconst B = float32(A)\r\n\tfmt.Printf(\"%d\\n%f\\n\", A, B)\r\n\r\n\t// ok\r\n\tconst C = 0x01fffffe\r\n\tconst D = float32(C)\r\n\tfmt.Printf(\"%d\\n%f\\n\", C, D)\r\n\r\n\t// ok\r\n\tconst E = 0x00ffffff\r\n\tconst F = float32(E)\r\n\tfmt.Printf(\"%d\\n%f\\n\", E, F)\r\n}\r\n```\r\nI suppose there are similar cases when converting an integer constant into `float64`, `complex64`, or `complex128` type.\r\n",
	"user": {
		"login": "momchil-velikov",
		"id": 5541560,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"created_at": "2015-12-30T16:35:28Z",
	"updated_at": "2016-01-05T00:19:33Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
