{
	"id": 216039197,
	"body": "Maybe instead compiler should generate an error if he encounters an infinite loop? Now program just locks up without any diagnostic messages and to understand why you need to understand how goroutines are scheduled. And in case of this issue even that didn't help me, I didn't know that GC could also do that.\r\n\r\nfor {} is not usuable for anything, it's just generates the issue. Even if for {} has a body compiler probably can detect that it will never call the runtime. For example, if every function call (which also doesn't call the runtime) is inlined then scheduler will not be called on function entry. But I suspect it will require much more complex analysis. On the other hand, if loop body has anything useful then it's no longer an issue because it will eventually call the runtime.",
	"user": {
		"login": "creker",
		"id": 2558271,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-05-01T12:37:33Z",
	"updated_at": "2016-05-01T12:37:33Z"
}
