{
	"id": 51277812,
	"number": 1442,
	"state": "closed",
	"title": "server_test.go hangs on older kernels, in \"unixpacket\" test",
	"body": "by **bellermike**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1. Download the 2011-01-20 release\n2. Build on a linux box with 2.6.18 kernel\n\nWhat is the expected output?\n\nCorrect build\n\nWhat do you see instead?\n\nHang in network test (for \u0026quot;unixpacket\u0026quot;)\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n---\n\nWhich operating system are you using?\n\nDebian Etch, linux kernel 2.6.18\n\nWhich revision are you using?  (hg identify)\nd8ba80011a98+ tip\n\nPlease provide any additional information below.\n\nProblem does not occur on more modern kernels, for example 2.6.32\n\nThe problem occurs in TestUnixServer.  When testing the \u0026quot;unixpacket\u0026quot; network\ntype.  The problem is that the test relies on the closing of the client socket to result\nin the closing of the server socket (so server will receive a zero size on read() in\nrunEcho).  But in older kernels this will not occur.\n\nOne proposed solution (attached) is to simply send an \u0026quot;END\u0026quot; marker in the func\nconnect(), and look for it in func runEcho().  This appears to work fine on both older\nand newer kernels.  Attached is a proposed patch which does exactly that.\n\nRegards\n\nMike\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/1442/0/server_test.go.patch\"\u003eserver_test.go.patch\u003c/a\u003e (876 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:08:22Z",
	"created_at": "2011-01-23T18:02:01Z",
	"updated_at": "2016-06-24T19:24:24Z"
}
