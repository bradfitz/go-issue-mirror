{
	"id": 104368028,
	"number": 12442,
	"state": "closed",
	"title": "cmd/cgo: `unexpected: 8-byte pointer type` errors with GOARCH=arm",
	"body": "I'm attempting to regenerate the darwin/arm code for golang.org/x/sys/unix from the latest iOS SDK, but running into a problem with `go tool cgo -godefs` on that architecture. Here is a file that reproduces the issue:\r\n\r\n```Go\r\npackage blah\r\n\r\n/*\r\ntypedef struct foo {\r\n\tvoid* a;\r\n} foo_t;\r\n*/\r\nimport \"C\"\r\n\r\ntype Foo_t C.struct_foo\r\n```\r\n\r\nPut that in `foo.go` and this happens:\r\n\r\n    % GOARCH=arm go tool cgo -godefs foo.go\r\n    /Users/jacobsa/go/src/golang.org/x/sys/unix/foo.go:10:12: unexpected: 8-byte pointer type - *void\r\n\r\nI'm not sure what that message means in this context, since I haven't given `cgo` any input on the size of that pointer except by setting `GOARCH`. I wonder if I've misconfigured something, but can't find any relevant documentation so I'm not sure. It may be relevant that this doesn't happen when `GOARCH` is set to `386`.\r\n\r\nThis happens at tip on OS X:\r\n\r\n    % go version\r\n    go version devel +dd42eff Tue Sep 1 22:13:16 2015 +0000 darwin/amd64",
	"user": {
		"login": "jacobsa",
		"id": 202895,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 4,
	"closed_at": "2015-09-02T00:59:44Z",
	"created_at": "2015-09-01T22:34:24Z",
	"updated_at": "2016-09-04T20:48:09Z",
	"milestone": {
		"id": 1096159,
		"number": 24,
		"title": "Go1.6"
	}
}
