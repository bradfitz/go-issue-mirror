{
	"id": 124280185,
	"body": "I know there is a certain amount of confusion at present about SetFinalizer, but I'm not sure your proposal is strong enough.  I think that this program is race free:\r\nhttp://play.golang.org/p/WdFVb3p7du\r\n\r\nIn words, if I have a pointer, then the pointer can not be finalized while I'm in the process of using it to assign a value.  That is stronger than merely saying that SetFinalizer happens before the execution of the finalizer.\r\n\r\nOne possibility would be \"given a pointer p, any read or write of *p happens before p's finalizer is run.\"  But that is too strong, as it prohibits the compiler from reordering any operation across the use of a pointer.\r\n\r\nI feel like what we want here is an inverse relationship.  Given a pointer p, there is no possible ordering such that the finalizer happens-before any read or write of *p.  But I don't know if that makes any sense.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-24T00:42:15Z",
	"updated_at": "2015-07-24T00:42:15Z"
}
