{
	"id": 51281892,
	"number": 4269,
	"state": "closed",
	"title": "log enhencement",
	"body": "by **milak.mlk**:\n\n\u003cpre\u003eHi, i am using the log API and it is easy to use and the output is correct. But i would\nappreciate a new feature.\nI'd like to be able to filter log lines according to a log level.\neg :\nconst (\n  Debug   = 1\n  Info    = 2\n  Warning = 3\n  Error   = 4\n)\ntype Logger struct {\n   ...\n   level int\n}\n\nBy default, the level could be Info to stay compatible with old releases.\nfunc (l *Logger) SetLevel(aLevel int) {\n  l.level = aLevel\n}\n\nchange :\nfunc (l *Logger) Printf(format string, v ...interface{}) {\n   l.Output(2, fmt.Sprintf(format, v...))\n}\nby ;\nfunc (l *Logger) Printf(format string, v ...interface{}) {\n   if l.level \u0026lt; WARNING {\n     l.Output(2, fmt.Sprintf(format, v...))\n   }\n}\nand add Debug function :\nfunc (l *Logger) Debugf(format string, v ...interface{}) {\n   if l.level \u0026lt; INFO {\n     l.Output(2, fmt.Sprintf(format, v...))\n   }\n}\nAs it, i may set Debug level during devs and Warning or Info during normal runtime.\n\nThanks for all you have done for go. It is a great language.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:22:42Z",
	"created_at": "2012-10-20T13:49:36Z",
	"updated_at": "2016-06-24T22:26:50Z"
}
