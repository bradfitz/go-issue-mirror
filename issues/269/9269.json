{
	"id": 51719088,
	"number": 9269,
	"state": "closed",
	"title": "math: Int.ProbablyPrime is slow for even integers",
	"body": "The ProbablyPrime function in math/big filters out multiples of small odd primes before performing the Miller-Rabin rounds.. but it doesn't check for parity if the tested number is bigger than a word.\r\n\r\nThis leads to odd performances:\r\n\r\n```\r\nfunc BenchmarkPP2(b *testing.B) {\r\n\t// 521419622856657689423872613771 * 2\r\n\tn := new(big.Int)\r\n\tn.SetString(\"1042839245713315378847745227542\", 10)\r\n\r\n\tfor i := 0; i \u003c b.N; i++ {\r\n\t\tdummy = n.ProbablyPrime(30)\r\n\t}\r\n}\r\n\r\nfunc BenchmarkPP3(b *testing.B) {\r\n\t// 521419622856657689423872613771 * 3\r\n\tn := new(big.Int)\r\n\tn.SetString(\"1564258868569973068271617841313\", 10)\r\n\r\n\tfor i := 0; i \u003c b.N; i++ {\r\n\t\tdummy = n.ProbablyPrime(30)\r\n\t}\r\n}\r\n```\r\n\r\nGives\r\n\r\n```\r\nPASS\r\nBenchmarkPP2\t    5000\t    373102 ns/op\r\nBenchmarkPP3\t 1000000\t      1322 ns/op\r\n```",
	"user": {
		"login": "ALTree",
		"id": 3586803,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"closed_at": "2014-12-12T00:27:08Z",
	"created_at": "2014-12-11T18:10:42Z",
	"updated_at": "2016-06-25T01:56:04Z"
}
