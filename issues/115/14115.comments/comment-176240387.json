{
	"id": 176240387,
	"body": "Why are we still talking about an \"incorrectly escaped `\"`\"? A backslash is not an escape character in HTML.\r\n\r\nIt's okay to write `\u003ca href=\"\u0026lt;\"\u003e` to link to `\u003c`. Browsers will send `%3C`. \r\n\r\n```go\r\nfunc main() {\r\n\tlog.Fatal(http.ListenAndServe(\":8080\", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\r\n\t\tif r.URL.Path == \"/\" {\r\n\t\t\thttp.Redirect(w, r, \"/\u003c\", http.StatusFound)\r\n\t\t\treturn\r\n\t\t}\r\n\t\tfmt.Fprintf(w, \"Got a %#v\\n\\n%#v\", r, r.URL)\r\n\t})))\r\n}\r\n```\r\n\r\nI don't want to add more URL parsing in this code. That will only open the door to new bugs. The escaping is fine as-is. It's HTML-escaped in an HTML attribute. It doesn't need to be URL escaped. The `fs.go` code is URL escaping for historical reasons (I think HTML escaping would've been fine there too), but I'm not inclined to change it at this point.\r\n\r\nUnless you can find an example that actually produces invalid HTML or invalid HTTP and is thus a security problem of some sort, I'm not inclined to change anything.\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-28T15:39:48Z",
	"updated_at": "2016-01-28T15:39:48Z"
}
