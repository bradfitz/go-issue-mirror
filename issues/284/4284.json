{
	"id": 51281911,
	"number": 4284,
	"state": "closed",
	"title": "x/tour: explain function syntax better",
	"body": "\u003cpre\u003eFor those of us who are trying to pick up Go, but aren't CS majors, could we change the\ndescription of \n\n\u003ca href=\"http://tour.golang.org/#39\"\u003ehttp://tour.golang.org/#39\u003c/a\u003e\n\nto be more explicit? I'm not sure how to parse the adder function declaration\n\nfunc adder() func(int) int\n\nIt appears that adder is a function which takes no arguments, but returns a function\nwhich takes an int as an argument and returns an int? Assuming that's correct, could you\nalso state how that works if it's nested? For example, what if the function adder\nreturns is also a closure? Is the definition\n\nfunc adder() func1(int) func2(int) int\n\n?\u003c/pre\u003e",
	"user": {
		"login": "btracey",
		"id": 3680859,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 13,
	"closed_at": "2015-10-12T23:50:24Z",
	"created_at": "2012-10-25T02:39:35Z",
	"updated_at": "2016-10-12T13:37:45Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
