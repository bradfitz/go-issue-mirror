{
	"id": 66095122,
	"body": "\u003ca id=\"c9\"\u003e\u003c/a\u003eComment 9:\n\n\u003cpre\u003eI have a patch that fixes the immediate issue.  It is by no means complete, though, so\nconsider it more of an experiment than an actual proposed fix.\n\n\u003ca href=\"https://golang.org/cl/99430048\"\u003ehttps://golang.org/cl/99430048\u003c/a\u003e\n\nIt adds PCDATA instructions before the out-of-line faulting instructions.  There are as\nI see it 3 problems with this approach:\n\n  1) Which stackmap do we use?  I've hardcoded the function entry map, but I don't think that's right for functions with defers in them.\n  2) The patch only handles explicit CHECKNILs, a lot of CHECKNILs are merged with following instructions and we'd need the same pcdata at all of those instructions.\n  3) What about faults that don't happen at the zero address?  You'd need unsafe (or syscall.Mmap/Mprotect, or ...) to manufacture this case.  Even in this case I think you'd want to guarantee a panic() instead of a throw() inside GC.  These kind of faults convert #1 cases to #2 cases because the explicit test CMP/JEQ won't trigger.\u003c/pre\u003e",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-05-23T22:52:01Z",
	"updated_at": "2014-12-08T10:44:39Z"
}
