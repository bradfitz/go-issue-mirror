{
	"id": 66095116,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eThe scanner thinks it is at pcdata #3.\n\nfault check that fails:\n\t0x0078 00120 (issue8048a.go:28)\tMOVQ\t\"\".id67+104(SP),BX\n\t0x007d 00125 (issue8048a.go:28)\tCMPQ\tBX,$0\n\t0x0081 00129 (issue8048a.go:28)\tJEQ\t$1,1940\n\nout-of-line code:\n\t0x0788 01928 (issue8048a.go:32)\tJMP\t,363\n\t0x078d 01933 (issue8048a.go:31)\tPCDATA\t$1,$3\n\t0x078d 01933 (issue8048a.go:31)\tCALL\t,runtime.panicindex(SB)\n\t0x0792 01938 (issue8048a.go:31)\tUNDEF\t,\n\t0x0794 01940 (issue8048a.go:28)\tMOVL\tAX,(BX)\n\t0x0796 01942 (issue8048a.go:28)\tJMP\t,135\n\nNote that it jumps to the MOVL AX,(BX) which faults.  But the scanner thinks it is at\npcdata #3 which is the call above (which is for some unrelated bounds check failure).\n\nSo we need a pcdata for these faulting locations.  Probably easiest is to replace those\nMOVLs with CALL runtime.panicnil or some such.  Or modify the compiler to generate\npcdatas for the MOVLs.\n\nSeparately, it would be nice to know that the pcdata is wrong.  Could we set the pcdata\nto -1 for all instructions except ones which we think are safepoints?  It would catch\nthis kind of thing quickly.\u003c/pre\u003e",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-05-22T02:59:16Z",
	"updated_at": "2014-12-08T10:44:38Z"
}
