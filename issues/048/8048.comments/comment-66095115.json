{
	"id": 66095115,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003e(Using your second example)\n\nI think I know what's going on here.  You start a gc thread and a main thread.  The main\nthread segv's just as the gc thread triggers a gc.  On entry to sigpanic, the main\nthread stops, as it is preempted by gc thread.  But the frame that segv'd didn't do so\nat a safepoint, so there's no stack map for that location.  I presume the code is using\na nearby stack map which is probably wrong.\n\nWe probably want to mark sigpanic as NOSPLIT and do a m-\u003elocks++/-- in side sigpanic so\nthe panic can't be preempted.\n\nbad slice in frame main.main at 0x220828cf30: 0x0/0x164b0/0x28cf\nfatal error: slice capacity smaller than length\n\nruntime stack:\nruntime.throw(0xaefcf)\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/panic.c:520 +0x69 fp=0x7fff5fbff6a8\nscanbitvector(0x82820, 0x70701, 0x220828cf40, 0x7fff5fbff760, 0x8301, 0x7fff5fbff950)\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/mgc0.c:1538 +0x258 fp=0x7fff5fbff710\nscanframe(0x7fff5fbff7d0, 0x7fff5fbff950)\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/mgc0.c:1618 +0x2d1 fp=0x7fff5fbff788\nruntime.gentraceback(0xfd30, 0x220828cd58, 0x0, 0x2080dc120, 0x0, 0x0, 0x7fffffff,\n0x9f60, 0x7fff5fbff950, 0x0)\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/traceback_x86.c:206 +0x413 fp=0x7fff5fbff850\naddstackroots(0x2080dc120, 0x7fff5fbff950)\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/mgc0.c:1688 +0x168 fp=0x7fff5fbff8e0\nmarkroot(0x2080f0900, 0x5)\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/mgc0.c:1321 +0xbe fp=0x7fff5fbff960\nruntime.parfordo(0x2080f0900)\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/parfor.c:103 +0x128 fp=0x7fff5fbff9d8\nruntime.gchelper()\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/mgc0.c:2114 +0x3f fp=0x7fff5fbff9f8\nstopm()\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/proc.c:957 +0x111 fp=0x7fff5fbffa10\ngcstopm()\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/proc.c:1122 +0xc4 fp=0x7fff5fbffa30\nschedule()\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/proc.c:1321 +0x4a fp=0x7fff5fbffa58\nruntime.gosched0(0x2080dc120)\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/proc.c:1436 +0x9e fp=0x7fff5fbffa68\nruntime.newstack()\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/stack.c:738 +0x3a8 fp=0x7fff5fbffbb0\nruntime.morestack()\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/asm_amd64.s:228 +0x61 fp=0x7fff5fbffbb8\n\ngoroutine 16 [runnable]:\nruntime.sigpanic()\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/os_darwin.c:435 fp=0x220828cd60\nmain.main()\n\t/Users/khr/sandbox/go-copy16/src/issue8048a.go:28 +0x794 fp=0x220828cf50\nruntime.main()\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/proc.c:247 +0x11a fp=0x220828cfa8\nruntime.goexit()\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/proc.c:1445 fp=0x220828cfb0\ncreated by _rt0_go\n\t/Users/khr/sandbox/go-copy16/src/pkg/runtime/asm_amd64.s:97 +0x120\n\nThe first thread is in the middle of a GC.  The second thread\u003c/pre\u003e",
	"user": {
		"login": "randall77",
		"id": 6889504,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-05-22T02:30:59Z",
	"updated_at": "2014-12-08T10:44:38Z"
}
