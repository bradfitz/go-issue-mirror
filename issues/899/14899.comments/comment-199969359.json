{
	"id": 199969359,
	"body": "I've got an idea that at least seems to work on my end.  Let me know what you think and I'll submit a code review request.\r\n\r\n`raisebadsignal` resets the signal handler to the original, calls `raise` to re-raise the signal, and then if it returns resets the signal handler to the go signal handler.  `raisebadsignal` only seems to be called if the original handler couldn't be called with the context in `sigfwdgo`.\r\n\r\nI propose that in the case that the signal is _SIG_DFL we return from `raisebadsignal` after resetting the handler instead of raising the signal with `raise`.  This will allow the default handler to be called without messing with the stack.  \r\n\r\nWe can also only do it for signals which we know the default handler does not recover from, so we know that there's no chance that the signal will be recovered and needed to be re-setup.  ",
	"user": {
		"login": "jtsylve",
		"id": 594165,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-03-22T19:11:36Z",
	"updated_at": "2016-03-22T19:24:12Z"
}
