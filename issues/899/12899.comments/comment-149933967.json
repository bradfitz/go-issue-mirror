{
	"id": 149933967,
	"body": "@derekparker, what's the advantage of having the DW_AT_decl_* attributes? What are they used for?\r\n\r\nHaving correct scope information would definitely be good. Unfortunately, from what I understand, you're correct that the scope information simply isn't available at the point where the DWARF is generated. However, I'll defer to anyone who knows this code better for a more definitive answer. If this is the case, I think you can work out scope information from the VARDEF/VARKILL pseudo-instructions in the compiler. Then you'll need to extend the compiler's Auto type (in internal/obj/link.go) to store scope information, the loop over s.Autom in writesym to write out scope information in the Go object format, readsym to read it back in, and the linker's Auto type (in link/internal/ld/link.go) to store it. Then it will be available when writing out the DWARF info.\r\n\r\n(This makes we wonder why we generate DWARF in the linker instead of the more common approach of generating it in the compiler...)",
	"user": {
		"login": "aclements",
		"id": 2688315,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-10-21T15:33:50Z",
	"updated_at": "2015-10-21T15:33:50Z"
}
