{
	"id": 96894429,
	"number": 11848,
	"state": "closed",
	"title": "runtime: Different behavior of go routines in go1.5beta2 on MacOS and Linux",
	"body": "The example is taken from the \"A Tour of Go\": https://tour.golang.org/concurrency/1\r\n\r\nObviously, program output should have 10 rows: 5 for \"hello\" and 5 for \"world\".\r\n\r\nBut we have on:\r\n\r\n- Linux - 9 rows\r\n- MacOS - 10 rows\r\n\r\nLinux output (9 rows):\r\n\r\n```bash\r\n$ go run 1.go \r\nhello\r\nworld\r\nhello\r\nworld\r\nhello\r\nworld\r\nworld\r\nhello\r\nhello\r\n```\r\n\r\nMacOS X output (10 rows):\r\n\r\n```bash\r\n$ go run 1.go \r\nhello\r\nworld\r\nworld\r\nhello\r\nhello\r\nworld\r\nhello\r\nworld\r\nhello\r\nworld\r\n```\r\n\r\nCan anyone explain - *why*?\r\n\r\nLinux `uname -a`:\r\n\r\n```\r\nLinux desktop 3.16.0-4-amd64 #1 SMP Debian 3.16.7-ckt11-1 (2015-05-24) x86_64 GNU/Linux\r\n```\r\n\r\nMacOS X `uname -a`:\r\n\r\n```\r\nDarwin 14.5.0 Darwin Kernel Version 14.5.0: Thu Jul  9 22:56:16 PDT 2015; root:xnu-2782.40.6~1/RELEASE_X86_64 x86_64\r\n```\r\n\r\nSource code from tour:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"time\"\r\n)\r\n\r\nfunc say(s string) {\r\n    for i := 0; i \u003c 5; i++ {\r\n        time.Sleep(1000 * time.Millisecond)\r\n        fmt.Println(s)\r\n    }\r\n}\r\n\r\nfunc main() {\r\n    go say(\"world\")\r\n    say(\"hello\")\r\n}\r\n```",
	"user": {
		"login": "matyunin",
		"id": 1249544,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 2,
	"closed_at": "2015-07-23T20:09:51Z",
	"created_at": "2015-07-23T20:04:51Z",
	"updated_at": "2016-08-05T16:11:04Z"
}
