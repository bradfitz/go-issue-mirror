{
	"id": 66073061,
	"body": "\u003ca id=\"c1\"\u003e\u003c/a\u003eComment 1:\n\n\u003cpre\u003eThis is unrelated to ... . It's simply an idempotency issue. The following programs show\nthe same behavior:\n\ncat x.go:\npackage main\nfunc f0(interface{})\nfunc f1(interface{m()})\n\ncat x.go | gofmt\npackage main\n\nfunc f0(interface{})\nfunc f1(interface {\n\tm()\n})\n\ncat x.go | gofmt | gofmt\npackage main\n\nfunc f0(interface{})\nfunc f1(interface {\n\tm()\n},)\n\nand:\n\ncat x.go\npackage main\nfunc f0(struct{})\nfunc f1(struct{x int; y int})\n\ncat x.go | gofmt\npackage main\n\nfunc f0(struct{})\nfunc f1(struct {\n\tx int\n\ty int\n})\n\ncat x.go | gofmt | gofmt\npackage main\n\nfunc f0(struct{})\nfunc f1(struct {\n\tx int\n\ty int\n},)\n\nThe resulting program is not incorrect: parameters may always end in a comma\n(\u003ca href=\"http://tip.golang.org/ref/spec#Parameters)\"\u003ehttp://tip.golang.org/ref/spec#Parameters)\u003c/a\u003e.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-12-12T21:56:18Z",
	"updated_at": "2014-12-08T10:24:08Z"
}
