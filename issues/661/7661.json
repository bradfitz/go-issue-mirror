{
	"id": 51287033,
	"number": 7661,
	"state": "closed",
	"title": "bytes: bytes.Buffer always escapes to heap",
	"body": "\u003cpre\u003eEven with a bytes.Buffer less than 64 bytes the Buffer always gets allocated to the\nheap. I was quite surprised by this as bytes.Buffer contains \u0026quot;bootstrap\n[64]byte\u0026quot; which is supposed to prevent this. Is that correct?\n\nWhat does 'go version' print?\n\ngo version go1.2.1 darwin/amd64\ngo version devel +773ba5ac4f21 Fri Mar 28 11:30:02 2014 -0400 darwin/amd64\n\nWhat steps reproduce the problem?\n\nI've distilled the code in test.go\n\ntest.go: \u003ca href=\"http://play.golang.org/p/DLzkUIN4a6\"\u003ehttp://play.golang.org/p/DLzkUIN4a6\u003c/a\u003e\n\n$ go build -gcflags=-m test.go\n\nWhat happened?\n\n# command-line-arguments\n./test.go:8: can inline (*Buffer).Grow\n./test.go:15: inlining call to (*Buffer).Grow\n./test.go:9: b.bootstrap escapes to heap\n./test.go:8: leaking param: b\n./test.go:8: leaking param: b\n./test.go:15: b.bootstrap escapes to heap\n./test.go:14: moved to heap: myBuf\n./test.go:15: myBuf escapes to heap\n\nWhat should have happened instead?\n\nb.bootstrap and myBuf should not escape to the heap\n\nPlease provide any additional information below.\n\nThis happens in Go 1.2.1 and tip.\u003c/pre\u003e",
	"user": {
		"login": "lukescott",
		"id": 486224,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 3,
	"closed_at": "2014-12-08T10:42:33Z",
	"created_at": "2014-03-28T17:29:58Z",
	"updated_at": "2016-06-25T01:31:01Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
