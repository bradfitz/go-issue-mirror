{
	"id": 66083160,
	"body": "\u003ca id=\"c14\"\u003e\u003c/a\u003eComment 14:\n\n\u003cpre\u003e\u003e The real WTF here is that there are still systems that cannot keep accurate time and\nhave giant backward or forward time jumps in their real time.\n\nThis is not an issue. It is the same on good OSes as well.\nIf you came from server land, you can think that real time==monotonic time. But this is\nabsolutely not true in desktop environment (and there are still bad administrators and\nso on). On the golang-dev thread I've described some examples when real time changes\n+/-24h several times a day. For some period of time I was periodically changing real\ntime on my desktop +/-3 *years* to trick some software.\nDo NOT think of real time as of something related to monotonic time whatever OS you\nhave. For the purpose of correctness, real time must be considered as random number\ngenerator.\nThis is expected that if you want to schedule some activity every (realtime) midnight,\nit will behave weirdly in such environment (and there is nothing we can do with it).\nBut it's a failure on our side, if all Go software suddenly crashes/timeouts/hangs when\na user changes real time to +/-12h. And this is what happens now (all network\nconnections suddenly timeout or never timeout; time.Ticker(time.Second) stops ticking,\netc).\u003c/pre\u003e",
	"user": {
		"login": "dvyukov",
		"id": 1095328,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-09-15T18:00:54Z",
	"updated_at": "2014-12-08T10:33:02Z"
}
