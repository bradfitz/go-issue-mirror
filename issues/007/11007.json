{
	"id": 83072376,
	"number": 11007,
	"state": "closed",
	"title": "reflect: gccgo and go differ on handling of fields from embedded structs",
	"body": "Test case: http://play.golang.org/p/pqIQCAJOXp\r\n\r\nOn go 1.4.2 and tip that works fine (as seen on the playground) but on gccgo \r\n`go version go1.4.2 gccgo (Ubuntu 5.1~rc1-0ubuntu1) 5.0.1 20150414 (prerelease) [gcc-5-branch revision 222102] linux/amd64`\r\nit will fail with \r\n```\r\n\u0026{{}}\r\npanic: reflect: reflect.mustBeAssignable.N13_reflect.Value using value obtained using unexported field\r\n\r\ngoroutine 16 [running]:\r\nreflect.mustBeAssignable.N12_reflect.flag\r\n\t../../../src/libgo/go/reflect/value.go:216\r\nreflect.mustBeAssignable.N13_reflect.Value\r\n\t../../../src/libgo/go/reflect/value.go:33\r\nreflect.SetString.N13_reflect.Value\r\n\t../../../src/libgo/go/reflect/value.go:1373\r\nmain.main\r\n\t/home/matt/.local/share/data/liteide/liteide/goplay.go:19\r\ncreated by main\r\n\t../../../src/libgo/runtime/go-main.c:42\r\n```\r\n\r\nThis might be related to #7363 however I assumed that Exported fields from embedded structs should have the same visibility as if it was on the parent struct.",
	"user": {
		"login": "Thinkofname",
		"id": 774399,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Started"
		}
	],
	"assignee": {
		"login": "mpvl",
		"id": 6445383,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"closed_at": "2015-10-26T13:58:07Z",
	"created_at": "2015-05-31T12:03:33Z",
	"updated_at": "2015-10-26T13:58:07Z",
	"milestone": {
		"id": 1182837,
		"number": 25,
		"title": "Go1.6Early"
	}
}
