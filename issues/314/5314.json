{
	"id": 51283453,
	"number": 5314,
	"state": "closed",
	"title": "net/http: memory leak",
	"body": "\u003cpre\u003eI'm seeing really weird GC behaviour when using the net/http package.\n\nIf I call a function that creates a bunch of garbage slices inside a ServeMux.HandleFunc\nthe issue rears its head. If I then also don't close the req.Body, the issue gets way\nworse.\n\nIf I call the same function on its own, no memory is leaked. If I call the same function\nin a goroutine and wait for it to finish, no memory is leaked either.\n\nIt seems like I'm doing something weird with net/http, or there's a bug lurking here.\nI'm reporting this as I'm out of ideas.\n\ngo version:\ngo version devel +58f8a30f5b78 Tue Apr 16 14:20:06 2013 -0700 linux/amd64\n\nuname -a:\nLinux me 3.3.8-1.fc16.x86_64 #1 SMP Mon Jun 4 20:49:02 UTC 2012 x86_64 x86_64 x86_64\nGNU/Linux\n\nCode to reproduce is here:\n\u003ca href=\"http://play.golang.org/p/ALlr3_MzSX\"\u003ehttp://play.golang.org/p/ALlr3_MzSX\u003c/a\u003e\n\n$ GOGCTRACE=1 go run ram_issue.go | grep gc\u003c/pre\u003e",
	"user": {
		"login": "gpaul",
		"id": 442,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 18,
	"closed_at": "2014-12-08T10:28:41Z",
	"created_at": "2013-04-18T17:33:32Z",
	"updated_at": "2016-06-24T22:38:23Z"
}
