{
	"id": 141957687,
	"number": 14867,
	"state": "closed",
	"title": "compress/zlib: reading data with known length",
	"body": "When the length of the compressed data is known a priori, and one reads precisely as many bytes from the ReadCloser returned by zlib.NewReader, the zlib checksum isn't read. One needs to attempt to read past the end of the compressed stream to get zlib to read it, which I think this is counterintuitive, and makes it so that one pretty much has to use ioutil.ReadAll to safely read zlibbed segments embedded in a larger stream.\r\n\r\nObligatory play.golang.org link: https://play.golang.org/p/KvqnDU36Q2\r\n\r\nA good solution, I think, would be to arrange to have Close read and check the checksum if it hasn't been done yet, as it should be called when one is done reading anyway.\r\n\r\nTested on go1.5 linux/amd64.",
	"user": {
		"login": "ghost",
		"id": 10137,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		}
	],
	"comments": 15,
	"closed_at": "2016-05-09T19:19:53Z",
	"created_at": "2016-03-18T19:26:18Z",
	"updated_at": "2016-05-09T19:19:53Z",
	"milestone": {
		"id": 1414133,
		"number": 31,
		"title": "Go1.7"
	}
}
