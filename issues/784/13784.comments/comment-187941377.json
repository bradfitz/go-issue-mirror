{
	"id": 187941377,
	"body": "Note that url.Parse un-escapes %xx sequences in the fragment:\r\n\r\nhttp://play.golang.org/p/uiAtaRKJo0\r\n\r\n```go\r\n\tu, err := url.Parse(\"http://foo.com/#x%41x\")\r\n\tfmt.Printf(\"%#v\\n%v\\n%v\", u, u, err)\r\n```\r\nYields:\r\n```\r\n\u0026url.URL{Scheme:\"http\", Opaque:\"\", User:(*url.Userinfo)(nil), Host:\"foo.com\", Path:\"/\", RawPath:\"\", RawQuery:\"\", Fragment:\"xAx\"}\r\nhttp://foo.com/#xAx\r\n\u003cnil\u003e\r\n```\r\n\r\nNote that Fragment is `xAx` instead of `x%41x`. As a result, if `url.Parse` and `url.String` are going to roundtrip, it must always escape a `%` byte to `%25`.\r\n\r\nSo I don't think there's anything we can do here for compatibility reasons.\r\n\r\nIf you need to generate such URLs, you can always use `URL.Opaque`... http://play.golang.org/p/fjgaEJ_Mpj\r\n\r\n",
	"user": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-02-23T22:19:44Z",
	"updated_at": "2016-02-23T22:19:44Z"
}
