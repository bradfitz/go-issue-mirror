{
	"id": 51282252,
	"number": 4514,
	"state": "closed",
	"title": "reflect: Anonymous fields and embedded fields",
	"body": "\u003cpre\u003eThe type reflect.StructField has a field called \u0026quot;Anonymous\u0026quot;. But frankly there\nare no anonymous fields in Go, at least they are not what \u0026quot;reflect\u0026quot; thinks\nthey are. Reflect package puts \u0026quot;true\u0026quot; into that field on embedded fields,\nwhich are not anonymous, because their name matches their type name. And real anonymous\nfields:\n\ntype X struct {\n    _ io.Reader\n    _ io.Reader\n}\n\nare not marked as such. And that makes that particular case a source of terminology\nconfusion.\n\nP.S. As a somewhat related note, it would be nice to be able to distinguish between a\nuser-defined method (that is written explicitly in the source code) and a automatically\ngenerated method which was inherited from an embedded field. Should I create a separate\nissue on that?\u003c/pre\u003e",
	"user": {
		"login": "nsf",
		"id": 12567,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 7,
	"closed_at": "2014-12-08T10:24:03Z",
	"created_at": "2012-12-10T09:31:47Z",
	"updated_at": "2016-06-24T22:29:36Z",
	"milestone": {
		"id": 1067199,
		"number": 11,
		"title": "Go1.1"
	}
}
