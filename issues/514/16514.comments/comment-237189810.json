{
	"id": 237189810,
	"body": "\u003e Can you run with GODEBUG=http2debug=2 (or http2debug=1 is probably sufficient) and see if the Go side tells you more?\r\n\r\nThe following is the result of http2debug=2\r\n\r\n2016/08/03 11:22:25 http2: Transport encoding header \":authority\" = \"test.tnomedialab.io\"\r\n2016/08/03 11:22:25 http2: Transport encoding header \":method\" = \"GET\"\r\n2016/08/03 11:22:25 http2: Transport encoding header \":path\" = \"tile.pasf\"\r\n2016/08/03 11:22:25 http2: Transport encoding header \":scheme\" = \"https\"\r\n2016/08/03 11:22:25 http2: Transport encoding header \"range\" = \"bytes=197184-232501\"\r\n2016/08/03 11:22:25 http2: Transport encoding header \"user-agent\" = \"Go-http-client/2.0\"\r\n2016/08/03 11:22:25 http2: Framer 0xc820a269c0: wrote HEADERS flags=END_STREAM|END_HEADERS stream=5 len=59\r\n2016/08/03 11:22:25 http2: Framer 0xc820a269c0: wrote RST_STREAM stream=5 len=4 ErrCode=CANCEL\r\n2016/08/03 11:22:25 RoundTrip failure: net/http: request canceled\r\n\r\nThe RoundTrip failure correlates with the TCP session being closed. If I cancel the request after Do() has returned, the TCP connection isn't closed and I don't see the RoundTrip failure. \r\n\r\nI also checked with Wireshark and it is definitely the Go client that setting the RST flag on the TCP connection, not the server. I tested with both Nginx as well as h2oserver.",
	"user": {
		"login": "rayvbr",
		"id": 1939375,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-03T09:32:09Z",
	"updated_at": "2016-08-03T09:33:06Z"
}
