{
	"id": 69708354,
	"number": 10514,
	"state": "closed",
	"title": "spec: odd sentence about non-constant shift expressions",
	"body": "Within the [Operators section](http://tip.golang.org/ref/spec#Operators), the Go spec says:\r\n\r\n\u003e If the left operand of a non-constant shift expression is an untyped constant, the type of the constant is what it would be if the shift expression were replaced by its left operand alone.\r\n\r\nMy understanding (e.g., from the [Constants section](http://tip.golang.org/ref/spec#Constants)) is that constants are either typed or untyped, but not both.  Also, untyped constants have a *default* type, but otherwise it seems an oxymoron to refer to \"the type of the [untyped] constant\".\r\n\r\nI suspect the sentence instead means to refer to what sort of type the constant is to be *converted* to.  Something like:\r\n\r\n\u003e If the left operand of a non-constant shift expression is an untyped constant, the constant is converted to the same type as it would be if the shift expression were replaced by the constant alone.",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2015-08-05T17:00:26Z",
	"created_at": "2015-04-21T00:08:13Z",
	"updated_at": "2016-08-05T16:09:30Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
