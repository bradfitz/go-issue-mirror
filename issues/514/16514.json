{
	"id": 167858397,
	"number": 16514,
	"state": "open",
	"title": "x/net/http2: Transport connection closes sometimes after Request.Cancel, against nginx?",
	"body": "1. What version of Go are you using (`go version`)?\r\n2. What operating system and processor architecture are you using (`go env`)?\r\ngo1.6.2 darwin/amd64\r\nGIT Head (27-07-2016) of github.com/golang/net/http2\r\n\r\n3. What did you do?\r\n```\r\ntransport := \u0026http2.Transport{\r\n\t\tDisableCompression: true,\r\n\t\tAllowHTTP:          true,\r\n\t\tDialTLS: func(network, addr string, cfg *tls.Config) (net.Conn, error) {\r\n\t\t\treturn net.Dial(network, addr)\r\n\t\t},\r\n\t}\r\nhttpClient := http.Client{Transport: transport}\r\n\r\nhttpRequest, _ := http.NewRequest(\"GET\", url, nil)\r\ncancel := make(chan struct{})\r\nhttpRequest.Cancel = cancel\r\nresponse, httpError := httpClient.Do(httpRequest)\r\n```\r\n\r\nThen, in another goroutine, before Do(httpRequest) has returned:\r\n\r\n`cancel.closeChannel()`\r\n\r\n4. What did you expect to see?\r\nhttpError returning 'net/http: request canceled', but TCP session remaining open\r\n\r\n5. What did you see instead?\r\nhttpError returning 'net/http: request canceled', but client closing TCP connection\r\n\r\n",
	"user": {
		"login": "rayvbr",
		"id": 1939375,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsInvestigation"
		},
		{
			"name": "WaitingForInfo"
		}
	],
	"assignee": {
		"login": "bradfitz",
		"id": 2621,
		"type": "User",
		"site_admin": false
	},
	"comments": 12,
	"created_at": "2016-07-27T13:48:48Z",
	"updated_at": "2016-08-05T07:59:02Z",
	"milestone": {
		"id": 1067491,
		"number": 22,
		"title": "Unreleased"
	}
}
