{
	"id": 51286227,
	"number": 7126,
	"state": "closed",
	"title": "runtime: unexpected goroutine starvation",
	"body": "\u003cpre\u003eWhen running the program linked below (where 1 goroutine does an infinite loop of\nos.File.Write calls and the main goroutine sleeps for one second before exiting), I\nfound very unexpected behaviour, the main goroutine either never gets woken up or\ndoesn't get woken up for 30s to 1m. I discussed this on #go-nuts and both Tv` and\ndominikh thought this was an actual bug.\n\nWhat steps will reproduce the problem?\n1. Download \u003ca href=\"http://play.golang.org/p/r-CDnGvo9E\"\u003ehttp://play.golang.org/p/r-CDnGvo9E\u003c/a\u003e as foo.go\n2. go run foo.go 2\u0026gt;/dev/null\n3. Wait anywhere from 1s to over 1 minute. It's hard to reproduce. The main goroutine\nisn't always scheduled post-sleep.\n\nWhat is the expected output? The program should run in about 1 second and output:\nsleeping\ndone\n\nWhat do you see instead? The program sometimes fails to finish and outputs just:\nsleeping\n\nWhich compiler are you using? 6l\n\nWhich operating system are you using? uname -a\nLinux bazinga 3.11.0-12-generic #19-Ubuntu SMP Wed Oct 9 16:20:46 UTC 2013 x86_64 x86_64\nx86_64 GNU/Linux\n\n\nWhich version are you using?  (run 'go version')\ngo version go1.2 linux/amd64\n\nExample:\n\nshane@bazinga:~$ time go run foo.go 2\u0026gt;/dev/null \nsleeping\ndone\n\nreal\t0m3.531s\nuser\t0m1.909s\nsys\t0m1.676s\nshane@bazinga:~$ time go run foo.go 2\u0026gt;/dev/null \nsleeping\ndone\n\nreal\t0m28.316s\nuser\t0m14.006s\nsys\t0m14.332s\u003c/pre\u003e",
	"user": {
		"login": "shanemhansen",
		"id": 366801,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 14,
	"closed_at": "2014-12-08T10:39:38Z",
	"created_at": "2014-01-14T23:30:50Z",
	"updated_at": "2016-06-25T01:25:34Z",
	"milestone": {
		"id": 1067211,
		"number": 17,
		"title": "Go1.3"
	}
}
