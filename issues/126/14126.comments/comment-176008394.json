{
	"id": 176008394,
	"body": "Background info, for the benefit of a potential bounty hunter...\r\n\r\n[How cgo works](https://golang.org/src/runtime/cgocall.go), from the horse’s mouth. Plus an explanation of golang's odd x86-ish [assembly language](https://golang.org/doc/asm). Some of the links to Plan9 docs are broken; use this [archive](https://web.archive.org/web/http://plan9.bell-labs.com/sys/doc/index.html) instead.\r\n\r\nThe [Altoros blog series on golang internals](http://blog.altoros.com/golang-part-1-main-concepts-and-project-structure.html) has lots of useful info about code generation, linking, relocations, assembly.\r\n\r\nExplanation of golang’s clever [conditional compilation](http://dave.cheney.net/2013/10/12/how-to-use-conditional-compilation-with-the-go-build-tool) features (build tags and magic filenames).\r\n\r\nFor brushing up on MIPS trivia: [N32/N64 ABI](http://techpubs.sgi.com/library/manuals/2000/007-2816-005/pdf/007-2816-005.pdf) and [other ABIs](https://dmz-portal.mips.com/wiki/MIPS_ABI_Project), [ELF relocation types](https://dmz-portal.mips.com/wiki/MIPS_relocation_types).\r\n\r\nThere is probably some overlap with the voodoo that needs to be [added to libffi to support closures with gccgo on mips64](https://github.com/atgreen/libffi/pull/197).\r\n",
	"user": {
		"login": "eswierk",
		"id": 355618,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-28T06:23:05Z",
	"updated_at": "2016-01-28T06:23:05Z"
}
