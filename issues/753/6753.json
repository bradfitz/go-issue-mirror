{
	"id": 51285672,
	"number": 6753,
	"state": "open",
	"title": "runtime: sockets closed by remote peer may remain undetected by poller",
	"body": "\u003cpre\u003eI have observed a network TCP server blocked on a Write although the client (Go program\nlocated on a remote machine) has closed the connection.\n\nSo far I have been unable to produce a minimal reproducer.\n\nMy hypothesis is that the poller is not handling EPOLLRDHUP correctly. map epoll_ctl(2)\nsays that it means: \u0026quot;Stream socket peer closed connection, or shut down writing\nhalf of  connection.\u0026quot;\nBut when obtaining EPOLLRDHUP from the socket the poller wakes up WaitRead() but not\nWaitWrite(), so if the EPOLLRDHUP was generated by a remote close, waiting writers will\nnever wake up (one would expect something like \u0026quot;connection reset by peer\u0026quot;).\n\nUsing linux/amd64.\u003c/pre\u003e",
	"user": {
		"login": "remyoudompheng",
		"id": 175246,
		"type": "User",
		"site_admin": false
	},
	"comments": 4,
	"created_at": "2013-11-12T22:56:32Z",
	"updated_at": "2015-04-14T19:45:21Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
