{
	"id": 245049991,
	"body": "Hi @luigi-riefolo. I looked into this briefly last week, but have no\r\nplans to submit a changelist. Here are a few observations that might\r\nsave you some time in case you are new to the code, as I am:\r\n\r\n- For adding the link to doc section, have a look at\r\n  [x/tools/godoc/static/package.html](https://github.com/golang/tools/blob/master/godoc/static/package.html).\r\n- In order for changes to package.html to take effect, you will need\r\n  to re-generate the file [static.go](https://github.com/golang/tools/blob/master/godoc/static/static.go) in the same directory, either by\r\n  running `go generate` or else by running the `makestatic` command\r\n  (located in the same directory).\r\n- You might consider renaming the `#Transport.doc` link to something\r\n  like `#Transport-doc`. The reason being that there is a small chance\r\n  of a name collision if the struct has a field named `doc` and the\r\n  client passes the `?m=all` query parameter, which tells godoc to\r\n  also show unexported identifiers. This occurs, for example, in the [namedType struct](https://golang.org/pkg/go/doc/?m=all#namedType) of the go/doc pkg.\r\n- As for adding links to the struct fields, a good place to start is\r\n  the file [x/tools/godoc/linkify.go](https://github.com/golang/tools/blob/master/godoc/linkify.go). Specifically the functions\r\n  [LinkifyText](https://github.com/golang/tools/blob/master/godoc/linkify.go#L27)\r\n  and\r\n  [linksFor](https://github.com/golang/tools/blob/master/godoc/linkify.go#L84).\r\n  These functions are responsible for (among other things) adding\r\n  anchor links for const and var declarations in the current\r\n  implementation.\r\n\r\nHope this is helpful.",
	"user": {
		"login": "appleby",
		"id": 86076,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-09-06T18:46:39Z",
	"updated_at": "2016-09-06T18:46:39Z"
}
