{
	"id": 51278383,
	"number": 1847,
	"state": "closed",
	"title": "go/printer: does not always insert required parens around \u0026x and *x",
	"body": "by **qyzhai**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n#cat x.go\npackage main\n\ntype T struct {\n\tid int\n}\nfunc (t *T) Id() int {\n\treturn t.id\n}\n\nfunc main() {\n\tvar t = (\u0026amp;T{1000}).Id()\n\tprintln(t)\n}\n#gofmt -r'(a) -\u0026gt; a' -w x.go\n\nWhat is the expected output?\nsame as the origin file\n\nWhat do you see instead?\npackage main\n\ntype T struct {\n\tid int\n}\nfunc (t *T) Id() int {\n\treturn t.id\n}\n\nfunc main() {\n\tvar t = \u0026amp;T{1000}.Id()\n\tprintln(t)\n}\n\n\nWhich revision are you using?  (hg identify)\n7383ed409256+ tip\n\nPlease provide any additional information below.\nroger peppe:\nthis bug applies to other unary operators too. the following is valid code\nthat will be broken by gofmt '(a)-\u0026gt;a' and is not abusive:\n\n       x := struct{a int}{}\n       xp := \u0026amp;x\n       xpp := \u0026amp;xp\n       fmt.Println((*xpp).a)\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 9,
	"closed_at": "2014-12-08T10:10:11Z",
	"created_at": "2011-05-18T17:49:12Z",
	"updated_at": "2016-06-24T19:29:30Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
