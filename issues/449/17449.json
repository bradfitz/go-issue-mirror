{
	"id": 183182542,
	"number": 17449,
	"state": "closed",
	"title": "cmd/compile: go build -race fails with `label .inlret7 already defined`",
	"body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### What version of Go are you using (`go version`)?\r\ngo version go1.7.1 linux/amd64\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/mnt/repos/server/go:/home/adamf/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build433458907=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\n\r\n### What did you do?\r\n\r\n`cat /tmp/master/compiler_bug.go`\r\n```\r\npackage master\r\n\r\ntype PriorityList struct {\r\n\telems []interface{}\r\n}\r\n\r\n// Implement sort.Sort interface to sort a PriorityList by ascending Priority.\r\nfunc (x *PriorityList) Len() int { return len(x.elems) }\r\n\r\nfunc (l *PriorityList) remove(i int) interface{} {\r\n\telem := l.elems[i]\r\n\tl.elems = append(l.elems[:i], l.elems[i+1:]...)\r\n\treturn elem\r\n}\r\n\r\n// Removes the next element from the list, in order of priority (e.g. higher priority first).\r\n// Returns nil if list is empty.\r\nfunc (l *PriorityList) Next() interface{} {\r\n\t// The last element from the list has the highest priority.\r\n\treturn l.remove(l.Len() - 1)\r\n}\r\n\r\nvar l *PriorityList\r\n\r\nfunc Foo() {\r\n\tfor elem := l.Next(); elem != nil; elem = l.Next() {\r\n\t}\r\n}\r\n```\r\n\r\n`go build -race /tmp/master/compiler_bug.go`\r\n```\r\n/tmp/master/compiler_bug.go:26: label .inlret7 already defined at /tmp/master/compiler_bug.go:26\r\n```\r\n\r\n### What did you expect to see?\r\nI expected it to successfully build this program.\r\n\r\n### What did you see instead?\r\n```\r\n/tmp/master/compiler_bug.go:26: label .inlret7 already defined at /tmp/master/compiler_bug.go:26\r\n```\r\n\r\nRestructuring the code in various ways makes this go away. For instance, rewriting the for loop as\r\n```\r\nelem := l.Next()\r\nfor elem != nil {\r\n    elem = l.Next()\r\n}\r\n```\r\n\r\nwill make the compiler error go away. Also, disabling the race detector or trying with go 1.6 will make this go away. Similarly, \"inlining\" the Len() call will make this go away.",
	"user": {
		"login": "adamfaulkner",
		"id": 1405916,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "NeedsFix"
		}
	],
	"comments": 8,
	"closed_at": "2016-10-18T20:12:03Z",
	"created_at": "2016-10-15T01:59:24Z",
	"updated_at": "2016-10-18T20:12:03Z",
	"milestone": {
		"id": 1709363,
		"number": 38,
		"title": "Go1.8"
	}
}
