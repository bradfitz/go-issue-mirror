{
	"id": 223090254,
	"body": "@mwhudson \r\nI am not able to reproduce the original error.  After lots of experimentation I can see that I was misunderstanding how these options should work.  It appears that each package that you want to be built as a shared library must be explicitly built with the -buildmode=shared -linkshared options.  I was working under the false assumption that the dependent packages would also get built as shared. \r\n\r\nI think I have found a real bug with the used of -linkshared and -buildmode and not sure if it is ppc64le only.  I can change the title or close this one and open a new one.\r\n\r\nIf std has been built as a shared library and you try to use -buildmode=shared -linkshared with something that imports golang.org/x/sys/unix, you will get errors like this:\r\n\r\nhost link: \"powerpc64le-linux-gnu-gcc\" \"-m64\" \"-gdwarf-2\" \"-Wl,-znow\" \"-o\" \"/tmp/go-build873207612/k8s.io/kubernetes/cmd/kubelet/_obj/exe/a.out\" \"-rdynamic\" \"/tmp/go-link-758373105/go.o\" \"/tmp/go-link-758373105/000000.o\" \"/tmp/go-link-758373105/000001.o\" \"/tmp/go-link-758373105/000002.o\" \"-L/home/boger/golang/go1.6/go/pkg/linux_ppc64le_dynlink/\" \"-Wl,-rpath=/home/boger/golang/go1.6/go/pkg/linux_ppc64le_dynlink/\" \"-lstd\" \"-g\" \"-O2\" \"-g\" \"-O2\" \"-g\" \"-O2\"\r\n/home/boger/golang/go1.6/go/pkg/tool/linux_ppc64le/link: running powerpc64le-linux-gnu-gcc failed: exit status 1\r\n/usr/bin/ld: /tmp/go-link-758373105/go.o: In function `local.k8s.io/kubernetes/vendor/golang.org/x/sys/unix.Syscall':\r\n(.text+0xbb0560): call to `syscall.Syscall' lacks nop, can't restore toc; recompile with -fPIC\r\n/usr/bin/ld: /tmp/go-link-758373105/go.o: In function `local.k8s.io/kubernetes/vendor/golang.org/x/sys/unix.Syscall':\r\n(.text+0xbb0560): unresolvable R_PPC64_REL24 against `syscall.Syscall'\r\n/usr/bin/ld: /tmp/go-link-758373105/go.o: In function `local.k8s.io/kubernetes/vendor/golang.org/x/sys/unix.Syscall6':\r\n(.text+0xbb0570): call to `syscall.Syscall6' lacks nop, can't restore toc; recompile with -fPIC\r\n/usr/bin/ld: /tmp/go-link-758373105/go.o: In function `local.k8s.io/kubernetes/vendor/golang.org/x/sys/unix.Syscall6':\r\n(.text+0xbb0570): unresolvable R_PPC64_REL24 against `syscall.Syscall6'\r\n/usr/bin/ld: final link failed: Bad value\r\ncollect2: error: ld returned 1 exit status\r\n\r\nThe instruction it is complaining about is a simple branch instruction.  The asm code looks like this:\r\n// Just jump to package syscall's implementation for all these functions.\r\n// The runtime may know about them.\r\n\r\nTEXT    Â·Syscall(SB),NOSPLIT,$0-56\r\n        BR      syscallÂ·Syscall(SB)\r\n\r\nTEXT Â·Syscall6(SB),NOSPLIT,$0-80\r\n        BR      syscallÂ·Syscall6(SB)\r\n\r\nTEXT Â·RawSyscall(SB),NOSPLIT,$0-56\r\n        BR      syscallÂ·RawSyscall(SB)\r\n\r\nTEXT Â·RawSyscall6(SB),NOSPLIT,$0-80\r\n        BR      syscallÂ·RawSyscall6(SB)\r\n\r\nThe ppc64le asm is just a branch.\r\n",
	"user": {
		"login": "laboger",
		"id": 9433228,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-06-01T18:54:30Z",
	"updated_at": "2016-06-01T18:54:30Z"
}
