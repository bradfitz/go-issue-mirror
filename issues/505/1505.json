{
	"id": 51277893,
	"number": 1505,
	"state": "closed",
	"title": "go/printer: printer should always print a compilable program even in the absence of correct position information",
	"body": "\u003cpre\u003eHere's a simple test case exhibiting the problem:\n\n\npackage main\n\nimport (\n\t\u0026quot;go/parser\u0026quot;\n\t\u0026quot;go/printer\u0026quot;\n\t\u0026quot;go/token\u0026quot;\n\t\u0026quot;os\u0026quot;\n)\n\nconst src = `// This is a comment\n//\npackage main\nimport \u0026quot;fmt\u0026quot;\nfunc main() {\n\tfmt.Printf(\u0026quot;hello, world\\n\u0026quot;)\n}\n`\n\nfunc main() {\n\tast, _ := parser.ParseFile(token.NewFileSet(), \u0026quot;\u0026quot;, src, parser.ParseComments)\n\tprinter.Fprint(os.Stdout, token.NewFileSet(), ast)\n}\n\nRunning this code produces (after fix for \u003ca href=\"https://golang.org/issue/1503\"\u003eissue #1503\u003c/a\u003e):\n\npackage main\n\nimport \u0026quot;fmt\u0026quot;\n\nfunc main() {\n\tfmt// This is a comment\n\t//\n\t.Printf(\u0026quot;hello, world\\n\u0026quot;)\n}\n\nAutomatic semicolon insertion inserts a semicolon after the \u0026quot;fmt\u0026quot; identifier\nand thus breaks the program.\u003c/pre\u003e",
	"user": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 13,
	"closed_at": "2014-12-08T10:08:37Z",
	"created_at": "2011-02-11T23:30:32Z",
	"updated_at": "2016-06-24T19:25:12Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
