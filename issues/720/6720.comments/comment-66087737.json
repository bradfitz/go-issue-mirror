{
	"id": 66087737,
	"body": "\u003ca id=\"c10\"\u003e\u003c/a\u003eComment 10:\n\n\u003cpre\u003eIt seems that CTRL_C_EVENTS are handled correctly. You can register for os.Interrupt\nwith signal.Notify and this signal will be delivered when you press CTRL+C in the\ncommand prompt.\n\nHowever, it doesn't seem possible to send these events from a program:\nprocess.Signal(os.Interrupt) doesn't have any effect on the process being signalled.\n\nIf it's not possible to achieve this in win32, maybe we need to settle for clarifying\nthe language in \u003ca href=\"http://golang.org/pkg/os/#Signal\"\u003ehttp://golang.org/pkg/os/#Signal\u003c/a\u003e which implies os.Interrupt and os.Kill\nwill work everywhere.\u003c/pre\u003e",
	"user": {
		"login": "okdave",
		"id": 1091335,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-11-13T03:13:54Z",
	"updated_at": "2014-12-08T10:37:19Z"
}
