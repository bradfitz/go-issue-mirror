{
	"id": 66087740,
	"body": "\u003ca id=\"c13\"\u003e\u003c/a\u003eComment 13:\n\n\u003cpre\u003eDavid,\n\nLife is never simple. I have a problem (I remember now I was fighting with that test\nback then too).\n\nI am using GenerateConsoleCtrlEvent Windows API\n(\u003ca href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms683155(v=vs.85).aspx)\"\u003ehttp://msdn.microsoft.com/en-us/library/windows/desktop/ms683155(v=vs.85).aspx)\u003c/a\u003e. It\nsends signal to a \"console process group\". The \"console\" here is important, I think - it\nis not about process here, it is about console that group of processes share between\nthem.\n\nNew process can be started with CREATE_NEW_PROCESS_GROUP flag - from what I can gather,\nit makes new process use new \"console\", otherwise it shares it with the parent. If\nprocess is started with CREATE_NEW_PROCESS_GROUP flag, it also means new \"process group\"\nis created and that group can be referred to by new process id.\n\nThe GenerateConsoleCtrlEvent has 2 arguments: dwCtrlEvent and dwProcessGroupId. We can\nsupply new pid in dwProcessGroupId, but it will only work, if new process is started\nwith CREATE_NEW_PROCESS_GROUP flag. Alternatively, dwProcessGroupId has to be 0, then\nthe signal is sent to \"current process group\" - that will send signal to the parent as\nwell as client (it will go to everyone who shares current console).\n\ndwCtrlEvent can be CTRL_C_EVENT or CTRL_BREAK_EVENT, but according to the doco\nCTRL_C_EVENT cannot be used unless dwProcessGroupId is 0.\n\nSo, the only way to use GenerateConsoleCtrlEvent is with dwCtrlEvent=CTRL_BREAK_EVENT\nand dwProcessGroupId set to a client process pid that was started with\nCREATE_NEW_PROCESS_GROUP flag. That is what my test does. Will that suit you?\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-11-19T05:56:30Z",
	"updated_at": "2014-12-08T10:37:19Z"
}
