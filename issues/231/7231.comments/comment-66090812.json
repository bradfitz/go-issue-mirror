{
	"id": 66090812,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eNot sure what's your use case but for debugging/developing/dissecting TLS stuff at\nplugfest, you can scratch an established tls.Conn by using package reflect like the\nfollowing:\n\nfunc tlsVersion(c *tls.Conn) (int, error) {\n        cv := reflect.ValueOf(c)\n        switch ce := cv.Elem(); ce.Kind() {\n        case reflect.Struct:\n                fe := ce.FieldByName(\"vers\")\n                return int(fe.Uint()), nil\n        }\n        return 0, errors.New(\"something wrong\")\n}\n\nFor managing TLS entities, you can also implement \u003ca href=\"http://tools.ietf.org/html/rfc6353\"\u003ehttp://tools.ietf.org/html/rfc6353\u003c/a\u003e.\u003c/pre\u003e",
	"user": {
		"login": "mikioh",
		"id": 92117,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-01-30T00:43:23Z",
	"updated_at": "2014-12-08T10:40:13Z"
}
