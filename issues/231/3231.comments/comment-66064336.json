{
	"id": 66064336,
	"body": "\u003ca id=\"c6\"\u003e\u003c/a\u003eComment 6:\n\n\u003cpre\u003eGOROOT is set to $HOME/go\n\ngo command is compiled by 6g.\n\nI'm trying to use the same GOROOT for both 6g and gccgo builds.\n\ngccgo is installed under /opt/gccgo. /opt/gccgo/bin is in my path. I guess technically\ngccgo's GOROOT is /opt/gccgo?\n\n$ go tool dist env\nGOROOT=\"/home/alberts/go\"\nGOBIN=\"/home/alberts/go/bin\"\nGOARCH=\"amd64\"\nGOOS=\"linux\"\nGOHOSTARCH=\"amd64\"\nGOHOSTOS=\"linux\"\nGOTOOLDIR=\"/home/alberts/go/pkg/tool/linux_amd64\"\nGOCHAR=\"6\"\nCGO_ENABLED=\"1\"\n\nI think something fun is happening here, which might also be an issue for the binary\ndistros.\n\nThere are two ways that I obtain my GOROOT contents on this machine.\n\n1. cd ~/go/src \u0026\u0026 ./make.bash\n\n2. cd ~ \u0026\u0026 rm -rf go \u0026\u0026 wget\n\u003ca href=\"http://buildmachine/job/go/lastSuccessfulBuild/artifact/go.tar.gz\"\u003ehttp://buildmachine/job/go/lastSuccessfulBuild/artifact/go.tar.gz\u003c/a\u003e \u0026\u0026 tar -zxvf go.tar.gz\n\nIf I do number 1, I always get the \"6g/6l builds instead of gccgo\" behaviour described\nabove, regardless of whether GOROOT is empty or not.\n\nIf I do number 2, I get the \"6g/6l builds instead of gccgo\" behaviour if GOROOT is set\nto $HOME/go and the \"imports cannot be found\" behaviour if GOROOT is empty, probably\nbecause the go command thinks that my GOROOT is /var/lib/jenkins/jobs/go/workspace/go in\nthis case.\n\nI haven't looked at setting GOROOT_FINAL on the build machine because everyone here\ninstalls these builds in their $HOME/go and set GOROOT accordingly.\u003c/pre\u003e",
	"user": {
		"login": "alberts",
		"id": 409689,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-03-07T16:46:48Z",
	"updated_at": "2014-12-08T10:16:50Z"
}
