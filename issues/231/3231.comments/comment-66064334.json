{
	"id": 66064334,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003eNot quite sure if you're saying that there's a bug or not.\n\nStill with 4346881f5c9d tip:\n\nGOROOT= GOPATH=~/myproj strace -f -s1000 -ostrace.log go test -compiler=gccgo\n-gccgoflags='--coverage' -c -work somepkg\n\nsrc/somepkg/x.go:7:2: import \"bytes\": cannot find package\nsrc/somepkg/x.go:8:2: import \"crypto/rand\": cannot find package\nsrc/somepkg/x.go:9:2: import \"fmt\": cannot find package\npackage somepkg\n        imports runtime: import \"runtime\": cannot find package\nsrc/somepkg/x.go:10:2: import \"syscall\": cannot find package\n\nSo bug #1 is that gccgo doesn't work when GOROOT is empty. I'm under the impression that\nit should.\n\nLet's leave GOROOT as is.\n\nThen I get:\n\nWORK=/dev/shm/go-build309986423\nwarning: building out-of-date packages:\n        runtime\n        errors\n        sync/atomic\n        sync\n        io\n        unicode\n        unicode/utf8\n        bytes\n        bufio\n        crypto/cipher\n        math\n        strconv\n        crypto/aes\n        reflect\n        encoding/binary\n        syscall\n        time\n        os\n        fmt\n        math/rand\n        strings\n        math/big\n        crypto/rand\n        sort\n        flag\n        text/tabwriter\n        runtime/pprof\n        testing\n        regexp/syntax\n        regexp\ninstalling these packages with 'go test -i somepkg' will speed future tests.\n\nAs far as I can tell from the strace log at this point, gccgo is never executed.\u003c/pre\u003e",
	"user": {
		"login": "alberts",
		"id": 409689,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-03-07T16:30:54Z",
	"updated_at": "2014-12-08T10:16:50Z"
}
