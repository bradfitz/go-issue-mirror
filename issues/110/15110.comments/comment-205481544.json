{
	"id": 205481544,
	"body": "The measurement ignores time the connection spent in the kernel queue\nbefore Go picks them up.\n\nIf you measure request latency from the client, I doubt the handoff based\nsolution helps much (it just moves the latency from measured time to\nunmeasured time so the measured latency might appear to be less, but the\nlatency is actually still there.)\n\nOptimizing the delay before a new goroutine starts running will have a\nnegative impact on system throughput, so we must find a balance here (as\nyou've discovered, the obvious solution is for the runtime to immediately\npreempt the current goroutine and execute the newly created one, but then\nthe accept goroutine must migrate to another thread, and that will hurt\nfuture connections.)\n",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-04T20:32:19Z",
	"updated_at": "2016-04-04T20:32:19Z"
}
