{
	"id": 66069335,
	"body": "\u003ca id=\"c2\"\u003e\u003c/a\u003eComment 2:\n\n\u003cpre\u003eSo it turns out that this has nothing to do with NetBSD - I can trigger the same issue\non Linux and OpenBSD. This is easily hit by running the following in src/pkg/runtime on\na single CPU machine:\n\n  go test -test.short -test.cpu=2 -test.v -test.run='Test(Crash|ParForParallel)'\n\nIf threads go to sleep on a note while another thread is running parfordo, the parfordo\nloop will continue to spin indefinitely. One such case is if the garbage collector runs\nduring the ParForParallel test, since the GC tries to stoptheworld() and goes to sleep\non a note while it waits for the scheduler to stop. There are also other cases where we\ncan end up in this situation (one is shown in the trace below). One fix is to wrap the\nosyield() in parfordo() with an entersyscall()/exitsyscall() - I'm not sure this is the\nideal solution however.\n\n(gdb) run -test.short -test.cpu=2 -test.v -test.run='Test(Crash|ParForParallel)'\nStarting program: /home/joel/src/go/src/pkg/runtime/runtime.test -test.sh[7/910]\nst.cpu=2 -test.v -test.run='Test(Crash|ParForParallel)'\n=== RUN TestCrashHandler-2\n[New LWP 16010]\n--- PASS: TestCrashHandler-2 (0.19 seconds)\n=== RUN TestParForParallel-2\n^C\nProgram received signal SIGINT, Interrupt.\nruntime.futex () at /home/joel/src/go/src/pkg/runtime/sys_linux_amd64.s:240\n240             RET\n(gdb) info threads\n  Id   Target Id         Frame\n  2    LWP 16010 \"runtime.test\" runtime.usleep (usec=void)\n    at /home/joel/src/go/src/pkg/runtime/sys_linux_amd64.s:76\n* 1    LWP 16006 \"runtime.test\" runtime.futex ()\n    at /home/joel/src/go/src/pkg/runtime/sys_linux_amd64.s:240\n(gdb) bt\n#0  runtime.futex () at /home/joel/src/go/src/pkg/runtime/sys_linux_amd64.s:240\n#1  0x0000000000417f49 in runtime.futexsleep (addr=void, val=void, ns=void)\n    at /home/joel/src/go/src/pkg/runtime/thread_linux.c:62\n#2  0x000000000040b779 in runtime.notesleep (n=void)\n    at /home/joel/src/go/src/pkg/runtime/lock_futex.c:124\n#3  0x0000000000413829 in nextgandunlock ()\n    at /home/joel/src/go/src/pkg/runtime/proc.c:641\n#4  0x0000000000413f90 in schedule (gp=void)\n    at /home/joel/src/go/src/pkg/runtime/proc.c:936\n#5  0x000000000041d649 in runtime.mcall (fn=void)\n    at /home/joel/src/go/src/pkg/runtime/asm_amd64.s:161\n#6  0x000000f840075000 in ?? ()\n#7  0x0000000000415457 in runtime.args (c=void, v=void)\n    at /home/joel/src/go/src/pkg/runtime/runtime.c:72\n#8  0x000000000041d552 in _rt0_amd64 ()\n    at /home/joel/src/go/src/pkg/runtime/asm_amd64.s:78\n#9  0x0000000000000005 in ?? ()\n#10 0x00007fffffffe5f8 in ?? ()\n#11 0x0000000000000005 in ?? ()\n#12 0x00007fffffffe5f8 in ?? ()\n#13 0x0000000000000000 in ?? ()\n(gdb) thread 2\n[Switching to thread 2 (LWP 16010)]\n#0  runtime.usleep (usec=void)\n    at /home/joel/src/go/src/pkg/runtime/sys_linux_amd64.s:76\n76              RET\n(gdb) bt\n#0  runtime.usleep (usec=void)\n    at /home/joel/src/go/src/pkg/runtime/sys_linux_amd64.s:76\n#1  0x0000000000411fbb in runtime.parfordo (desc=void)\n    at /home/joel/src/go/src/pkg/runtime/parfor.c:189\n#2  0x0000000000430d47 in runtime_test.TestParForParallel (t=0xf84008e120)\n    at /home/joel/src/go/src/pkg/runtime/parfor_test.go:119\n#3  0x00000000004289af in testing.tRunner (t=0xf84008e120, test=0x736968)\n    at /home/joel/src/go/src/pkg/testing/testing.go:301\n#4  0x0000000000412ef0 in schedunlock ()\n    at /home/joel/src/go/src/pkg/runtime/proc.c:273\n#5  0x000000f84008e120 in ?? ()\n#6  0x0000000000736968 in ?? ()\n#7  0x0000000000000000 in ?? ()\u003c/pre\u003e",
	"user": {
		"login": "4a6f656c",
		"id": 8142769,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-11-06T14:18:13Z",
	"updated_at": "2014-12-08T10:20:57Z"
}
