{
	"id": 66057126,
	"body": "\u003ca id=\"c7\"\u003e\u003c/a\u003eComment 7:\n\n\u003cpre\u003eIn related news, it seems you can't really use Unshare once goroutines have been started.\n\niant:\n\n\"\"\"\nThe unshare system call effectively undoes parts of the clone system call.  The clone\nsystem call is used to create new threads.  So I would expect the unshare system call to\nonly affect the calling thread.  I would not expect it to affect all threads in a\nprocess.  That seems to more or less match the high level description in\n\u003ca href=\"http://www.kernel.org/doc/Documentation/unshare.txt\"\u003ehttp://www.kernel.org/doc/Documentation/unshare.txt\u003c/a\u003e , although I agree that matters are\nnot entirely clear.\n\nSince goroutines are free to move between threads (unless you call\nruntime.LockOSThread), and since the Go runtime creates new threads as needed, I don't\nthink there is any reliable way to use syscall.Unshare in a Go program.\n\"\"\"\u003c/pre\u003e",
	"user": {
		"login": "alberts",
		"id": 409689,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2012-05-22T16:56:09Z",
	"updated_at": "2014-12-08T10:10:42Z"
}
