{
	"id": 165252244,
	"body": "What about passing GCTRACEBACK=all to the test binary. That should make it\ngenerate the full stack dump if the timeout goroutine fires, or the dead\ntimer in the upper cmd/go process fires off SIGQUIT.\n\nOn Thu, 17 Dec 2015, 08:17 Austin Clements \u003cnotifications@github.com\u003e wrote:\n\n\u003e One place this has harmed is test time outs. Since the time out panic\n\u003e happens on a different goroutine than the test, you can no longer tell what\n\u003e test was running or where it was stuck. For example:\n\u003e http://build.golang.org/log/a7048d0c840f1815694b38306ce9e7f723d4e382\n\u003e\n\u003e We could make testing/testing.go:startAlarm print all of the stacks before\n\u003e panicking (or perhaps exiting) by calling runtime.Stack with all set to\n\u003e true. AFAIK, there's no way for a user to change GOTRACEBACK at runtime.\n\u003e\n\u003e â€”\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/13107#issuecomment-165241709\u003e.\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-12-16T21:22:30Z",
	"updated_at": "2015-12-16T21:22:30Z"
}
