{
	"id": 132364656,
	"number": 14274,
	"state": "open",
	"title": "proposal: x/crypto: add crypt(3) password hash algorithms",
	"body": "I'm writing code that has to generate crypt(3) compatible password hashes, for installation in /etc/shadow. A Google search for a library currently offers two abandoned github repositories, at least one of which is unsafe (ignores returned errors in the crypto logic), and a stack overflow answer that uses cgo to wrap libcrypt.\r\n\r\nI'd like to propose adding solid Go implementations of the more common crypt(3) algorithms to x/crypto. Specifically, I'd like to have support for the ${1,5,6}$ algorithms (resp. MD5, SHA256, SHA512), as well as the older DES-based algorithm for universality. The package documentation should include a recommendation against using the crypt(3) algorithms unless compatibility with crypt(3)-using code is necessary, since there exist much better KDFs already in x/crypto if you're working with a clean slate.\r\n\r\nIf this sounds reasonable, I'm volunteering to provide the implementation.",
	"user": {
		"login": "danderson",
		"id": 1918,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Proposal"
		}
	],
	"comments": 4,
	"created_at": "2016-02-09T09:04:55Z",
	"updated_at": "2016-03-25T02:11:48Z",
	"milestone": {
		"id": 1373555,
		"number": 30,
		"title": "Proposal"
	}
}
