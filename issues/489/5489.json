{
	"id": 51283713,
	"number": 5489,
	"state": "closed",
	"title": "Go routines wating on unreferenced channels may leak memory",
	"body": "by **fuzxxl**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n1. Run \u003ca href=\"http://play.golang.org/p/Nb39COQgxr\"\u003ehttp://play.golang.org/p/Nb39COQgxr\u003c/a\u003e\n2. Observer the memory behavior\n\nWhat is the expected output?\nThe program does not terminate and consumes a constant amount of memory.\n\nWhat do you see instead?\nThe program does not terminate and consumes a lineary growing amount of memory.\n\nWhich compiler are you using (5g, 6g, 8g, gccgo)?\n6g\n\nWhich operating system are you using?\nWhich version are you using?  (run 'go version')\n\n$ go version ; uname -a\ngo version devel +f95d161ca3cb Thu May 16 17:20:13 2013 +1000 linux/amd64\nLinux t520 3.8.0-19-generic #30-Ubuntu SMP Wed May 1 16:35:23 UTC 2013 x86_64 x86_64\nx86_64 GNU/Linux\n\n\nPlease provide any additional information below.\nThis problem can be succesfully worked around by closing c before returning from\nworker(). It might be possible that this is \u0026quot;by design\u0026quot;.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 1,
	"closed_at": "2014-12-08T10:29:49Z",
	"created_at": "2013-05-16T15:27:16Z",
	"updated_at": "2016-06-24T22:40:19Z"
}
