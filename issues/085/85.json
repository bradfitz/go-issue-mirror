{
	"id": 51276033,
	"number": 85,
	"state": "closed",
	"title": "cannot break out of for loop inside switch",
	"body": "by **n3dr0x0rz**:\n\n\u003cpre\u003eWhat steps will reproduce the problem?\n1.  Write a for loop that contains a switch statement that contains a break.\n2.  Watch the break not stop execution of the for loop.\n\nWhat is the expected output? What do you see instead?\n\nI expect all three of the attached programs to break out of the for loop\nand not reach the panic call.  Instead, foo.go and bar.go, both of which\nuse a break inside a switch, reach the panic call.  All three print out\n\u0026quot;case\u0026quot;.  baz.go works as expected.\n\nWhat is your $GOOS?  $GOARCH?\n\nGOOS=linux\nGOARCH=amd64\n\nWhich revision are you sync'ed to?  (hg log -l 1)\n\nchangeset:   4007:e16fd8efbdd3\ntag:         tip\nuser:        Russ Cox \u0026lt;rsc@golang.org\u0026gt;\ndate:        Wed Nov 11 22:20:05 2009 -0800\nsummary:     avoid seg fault when return type is unknown\n\nPlease provide any additional information below.\n\nRemoving the fmt call does not change the behavior.\u003c/pre\u003e\n\n\n\n\n\nAttachments:\n\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/85/0/foo.go\"\u003efoo.go\u003c/a\u003e (158 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/85/0/bar.go\"\u003ebar.go\u003c/a\u003e (161 bytes)\n1. \u003ca href=\"https://storage.googleapis.com/go-attachment/85/0/baz.go\"\u003ebaz.go\u003c/a\u003e (142 bytes)",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:03:11Z",
	"created_at": "2009-11-12T07:32:16Z",
	"updated_at": "2016-06-24T19:00:26Z"
}
