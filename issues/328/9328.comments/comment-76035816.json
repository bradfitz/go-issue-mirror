{
	"id": 76035816,
	"body": "The seond alternative I've mentioned above is to have a loader library that basically does the following:\r\n\r\n```\r\nThe alternative is to build an entry point library that will do the loading and invoke application's entry point.\r\n\r\nIn this loader library,\r\n\r\nvoid ANativeActivity_onCreate(ANativeActivity* native_activity, void* savedState, size_t savedStateSize) {\r\n    // TODO: Handle errors.\r\n    dlopen(\"libopenal.so\", ...);\r\n    void (*on_create)(ANativeActivity*, void*, size_t) = dlsym(dlopen(\"libapp.so\", ...), \"ANativeActivity_onCreate\");\r\n    if (!on_create) {\r\n        LOG_FATAL(\"cannot find ANativeActivity_onCreate in the native library ...\")\r\n    }\r\n    on_create(native_activity, savedState, savedStateSize);\r\n}\r\n```\r\nExtending NativeActivity will require gomobile to dex the Java source files, and will end up gomobile having the SDK as a dependency. That's why I don't suggest following that path.",
	"user": {
		"login": "rakyll",
		"id": 108380,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-25T19:24:57Z",
	"updated_at": "2015-02-25T19:24:57Z"
}
