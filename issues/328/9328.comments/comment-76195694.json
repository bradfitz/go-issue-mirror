{
	"id": 76195694,
	"body": "My current reasoning on dynamic libraries:\r\n\r\n1. Every API we build in the mobile repository is for both Android and iOS.\r\n2. We cannot load dynamic libraries on iOS.\r\n3. We can statically link on Android, except where licenses prohibit it.\r\n    License prohibitions on Android apply to iOS too.\r\n4. We strongly prefer working in Go and minimizing C.\r\n    (If everything we needed from Android and iOS was available as a\r\n    syscall, I would make this work with CGO_ENABLED=0.)\r\n\r\nSo for us to need a dynamic library: it must be necessary for implementing an API on Android that is available on iOS some other way, and licensing must prohibit static linking. I'm amazed we found even one example.\r\n\r\nIt may be expedient to implement your audio package directly on OpenSL and you can if you like, but I think it would be of great value to game developers to have the full OpenAL available. So it would be nice to solve this, even if it means writing a script to generate a bunch of dlsym-based function bindings.",
	"user": {
		"login": "crawshaw",
		"id": 161319,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-26T15:19:05Z",
	"updated_at": "2015-02-26T15:19:05Z"
}
