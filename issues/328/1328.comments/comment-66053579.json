{
	"id": 66053579,
	"body": "\u003ca id=\"c4\"\u003e\u003c/a\u003eComment 4:\n\n\u003cpre\u003efor the record, this doesn't only happen with alloca; it happens with static stack\nallocations too.\nperhaps tellingly, the runtime error varies according to the size of stack:\n\n0-7248 bytes:\n    OK\n\n7229-7552 bytes:\n\n    unexpected fault address 0x110080\n    throw: fault\n    \n    [signal 10 code=0x2 addr=0x110080 pc=0x2805]\n    \n    throw: malloc/free - deadlock\n    double panic\n\n7552-7744 bytes:\n\n    panic: runtime error: invalid memory address or nil pointer dereference\n    \n    [signal 11 code=0x1 addr=0x3e pc=0x2800]\n    \n    runtime.panic+0xa7 /Users/rog/other/go/src/pkg/runtime/proc.c:1021\n    \truntime.panic(0x601fc, 0x54a3e0)\n    runtime.panicstring+0xa3 /Users/rog/other/go/src/pkg/runtime/runtime.c:92\n    \truntime.panicstring(0x11aa04, 0x296a)\n    runtime.sigpanic+0x144 /Users/rog/other/go/src/pkg/runtime/darwin/thread.c:465\n    \truntime.sigpanic()\n    _rt0_amd64+0xbc /Users/rog/other/go/src/pkg/runtime/amd64/asm.s:30\n    \t_rt0_amd64()\n\n7745 bytes upwards\n\n    throw: bad g in cgocallback\n    \n    runtime.throw+0x3b /Users/rog/other/go/src/pkg/runtime/runtime.c:78\n    \truntime.throw(0x11a2e8, 0x0)\n    runtime.cgocallback+0x3f /Users/rog/other/go/src/pkg/runtime/cgocall.c:64\n    \truntime.cgocallback(0x133bd, 0x7fff5fbfd210, 0x8, 0x508500, 0x5094b8, ...)\n    _rt0_amd64+0xbc /Users/rog/other/go/src/pkg/runtime/amd64/asm.s:30\n    \t_rt0_amd64()\n    bug.callback /Users/rog/src/cgobug/bug1.cgo1.go:-30\n    \tbug.callback()\n\n6g darwin 6185df48facb+ tip\u003c/pre\u003e",
	"user": {
		"login": "rogpeppe",
		"id": 66491,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2011-01-28T12:40:05Z",
	"updated_at": "2014-12-08T10:07:49Z"
}
