{
	"id": 73451473,
	"body": "I did \"git bisect\". That is what I find:\r\n\r\n63116de558b472c437df186d6bf87e163f674ea2 is the first bad commit\r\ncommit 63116de558b472c437df186d6bf87e163f674ea2\r\nAuthor: Keith Randall \u003ckhr@golang.org\u003e\r\nDate:   Sat Dec 27 19:26:40 2014 -0800\r\n\r\n    runtime: faster version of findfunc\r\n\r\n    Use a lookup table to find the function which contains a pc.  It is\r\n    faster than the old binary search.  findfunc is used primarily for\r\n    stack copying and garbage collection.\r\n\r\n    benchmark              old ns/op     new ns/op     delta\r\n    BenchmarkStackCopy     294746596     255400980     -13.35%\r\n\r\n    (findfunc is one of several tasks done by stack copy, the findfunc\r\n    time itself is about 2.5x faster.)\r\n\r\n    The lookup table is built at link time.  The table grows the binary\r\n    size by about 0.5% of the text segment.\r\n\r\n    We impose a lower limit of 16 bytes on any function, which should not\r\n    have much of an impact.  (The real constraint required is \u003c=256\r\n    functions in every 4096 bytes, but 16 bytes/function is easier to\r\n    implement.)\r\n\r\n    Change-Id: Ic315b7a2c83e1f7203cd2a50e5d21a822e18fdca\r\n    Reviewed-on: https://go-review.googlesource.com/2097\r\n    Reviewed-by: Russ Cox \u003crsc@golang.org\u003e\r\n\r\n:040000 040000 6833a2db04abf92d8ec1f29ae075c465223ee2a8 05bb58122975d3bc2d941bc7a0f0d7dadd971920 M      src\r\n",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-02-09T03:07:12Z",
	"updated_at": "2015-02-09T03:07:12Z"
}
