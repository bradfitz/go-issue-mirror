{
	"id": 51288126,
	"number": 8390,
	"state": "closed",
	"title": "need time.Strftime",
	"body": "by **crquan**:\n\n\u003cpre\u003eI want to reopen Issue #444:\tImplement strftime\n\nI don't agree strftime is bad, it actually provides same way as date command, then it's\neasier to write code as same as shell and C and Python, I hope this can be available in\nGo as well, the date command exists in Unix for decades, the strftime in C library for\ndecades, why Go language not willing to provide the same convenience?\n\nShell:  date '+%Y%m%d-%H%M%S'\nPython: time.strftime('%Y%m%d-%H%M%S')\nC:      strftime(buf, sizeof buf, '%Y%m%d-%H%M%S', tm)\n\n\n\nthere mentioned time.Format, but it is buggy actually if I tried to use layout like\nthis: (in Asia culture, we don't assume people know the the months' English name, so we\nuse all numbers)\n\n        const layout = \u0026quot;20140714-030001\u0026quot;\n        fmt.Println(time.Now().Format(layout))\n\nit prints like 180730773-090007, what's the hell of that?\n\nespecially in logging functionality, I want to print current time in this format prepend\nto every output line, I think the time.Format needs to guess what numbers mean in the\nlayout string every time, do you think is that efficient?\n\n\nI want to know if there's nobody doing a time.Strftime in golang community ? (in such\ncase, I am willing to contribute one)\n\nOr is it because you guys won't accept it into standard time package?\n(in such case, what can I say?)\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 6,
	"closed_at": "2014-12-08T10:46:38Z",
	"created_at": "2014-07-18T16:19:24Z",
	"updated_at": "2016-06-25T01:38:17Z"
}
