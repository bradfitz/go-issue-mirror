{
	"id": 51281164,
	"number": 3794,
	"state": "closed",
	"title": "encoding/xml: too restrictive in char encoding",
	"body": "by **borman@google.com**:\n\n\u003cpre\u003ego version go1.0.2\n\nAround line 928 of xml.go there is a block of code starting with:\n\n        // Inspect each rune for being a disallowed character.\n\nthat was introduced by CL 2967041 in response to \u003ca href=\"https://golang.org/issue/1259\"\u003eissue #1259\u003c/a\u003e.  This makes it impossible\nto use the XML decoder for input that has non utf-8 data chardata. This strict input\ncheck does not conform to the networking tenet of \u0026quot;be liberal in what you accept\nand conservative in what you send\u0026quot;   In particular,\n\u0026lt;string\u0026gt;non-utf8\u0026lt;/string\u0026gt; should be possible.  One solution is to make it\npossible to disable this check akin to the Strict flag that is already present. \nAlternatively, a utf8.ValidReader object could be created that returns a read-error when\nan invalid code point is received:\n\n    d := xml.NewDecoder(utf8.ValidReader(r))\n\nValid Reader could return an error when read encounters an invalid utf-8 sequence,\nlifting the responsibility from xml and enabling it to be used in other locations as\nwell.\u003c/pre\u003e",
	"user": {
		"login": "gopherbot",
		"id": 8566911,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		},
		{
			"name": "Unfortunate"
		}
	],
	"comments": 4,
	"closed_at": "2014-12-08T10:20:03Z",
	"created_at": "2012-07-03T00:08:03Z",
	"updated_at": "2016-06-24T22:21:10Z"
}
