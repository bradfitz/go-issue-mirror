{
	"id": 143996365,
	"number": 14992,
	"state": "closed",
	"title": "text/template: support lexically scoped variables?",
	"body": "I am trying to do a very simple task in a Go Template which amounts to \"if something in a range is found that fulfills a certain condition then output A else output B\".\r\n\r\nHowever, this is really trivial task appears to be absolutely impossible to do:\r\n```\r\n        {{ $foundAnAddress := 0 }}\r\n        {{ range $address := $container.Addresses }}\r\n            {{ if eq $address.Port \"8000\" }}\r\n                {{ $foundAnAddress := 1 }}\r\n        server backend_{{ $container.Name }} {{ $address.IP }}:{{ $address.Port }}\r\n            {{ end }}\r\n        {{ end }}\r\n        {{ if eq $foundAnAddress 0 }}\r\n        # server is unreachable !! -\u003e set maintenance host\r\n        server maintenance localhost:8000\r\n        {{ end }}\r\n```\r\nWhy is it impossible? Because it appears to be not doable to pass any information from the inner loop outside again since it immediately expires in the scope, so the {{ if .. }} at the end never works as intended.\r\n\r\nThis stackoverflow answer http://stackoverflow.com/questions/28674199/in-a-go-template-range-loop-are-variables-declared-outside-the-loop-reset-on-ea describes workarounds involving modifying application code.\r\n\r\nHowever, this is completely unrealistic and impractical because in the real world, usually the person writing a template is an *end-user* of the application and not a developer that would fork it and modify the application internals just to do such a simple task.\r\n\r\nTherefore, please stop intentionally crippling the Go Template variable handling and allow people to write functional templates where at least some **very simple** logical tasks that aren't absolutely trivial can be done without immediately being required to fork and rewrite the entire application. (yes I get it, logic is always supposed to reside in the application. But sometimes that's just not a practical solution if you need a template that works right now and not in 10 years when the application was finally patched with the specific functionality required in your template.)\r\n\r\nPS: I'm not very proficient in Go. My sincere apologies if the task above is actually possible without modifying application code. However, I read a lot of docs on Go Template by now and I haven't found a single way of doing it that doesn't require me to patch the host application..",
	"user": {
		"login": "JonasT",
		"id": 1573352,
		"type": "User",
		"site_admin": false
	},
	"comments": 7,
	"closed_at": "2016-03-29T05:09:03Z",
	"created_at": "2016-03-28T14:59:01Z",
	"updated_at": "2016-03-29T05:09:03Z"
}
