{
	"id": 66899148,
	"body": "Yes, #6817 is hard.  But, short of that, I'm not sure how hard to work to make a WriteCloser that supports simultaneous Write/Close only for the case where a program exits before reading from the input pipe.  It's easy to construct such a case, but it doesn't seem like something that people are likely to do in real life.\r\n\r\nStill, I just thought of one approach that should solve the problem at least for StdinPipe.  In closeOnce.Close, call Fd to get the file descriptor and call syscall.Close (or syscall.CloseHandler) on the descriptor.  Add closeOnce.Write that locks a mutex before writing.  Have closeOnce.Close lock the mutex *after* calling syscall.Close.  Trust that the kernel will unblock the write when the descriptor is closed.",
	"user": {
		"login": "ianlancetaylor",
		"id": 3194333,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-14T01:37:19Z",
	"updated_at": "2014-12-14T01:37:19Z"
}
