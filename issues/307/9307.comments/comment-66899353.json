{
	"id": 66899353,
	"body": "On Sat, Dec 13, 2014 at 8:37 PM, Ian Lance Taylor \u003cnotifications@github.com\u003e\nwrote:\n\u003e\n\u003e Still, I just thought of one approach that should solve the problem at\n\u003e least for StdinPipe. In closeOnce.Close, call Fd to get the file descriptor\n\u003e and call syscall.Close (or syscall.CloseHandler) on the descriptor. Add\n\u003e closeOnce.Write that locks a mutex before writing. Have closeOnce.Close\n\u003e lock the mutex *after* calling syscall.Close. Trust that the kernel will\n\u003e unblock the write when the descriptor is closed.\n\u003e\nRight. I think to fix the problem within the os/exec package, we must\nimplement the Write and Close\nmethods ourselves. Same for StdoutPipe and StderrPipe. It all depends on\nwhether the problem is\nworth the trouble. Or we can just update the document.\n\nA somewhat related issue is #9173. We don't know if the running child\nprocess not consuming\nall the write before exiting successfully is an error or not. If it is,\nthis data race is also an error.",
	"user": {
		"login": "minux",
		"id": 135652,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-12-14T01:48:00Z",
	"updated_at": "2014-12-14T01:48:00Z"
}
