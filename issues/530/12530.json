{
	"id": 105175942,
	"number": 12530,
	"state": "closed",
	"title": "Go run keeps running even after I SIGKILL it",
	"body": "I’m using `go version go1.5 darwin/amd64`.\r\n\r\nI wrote a test program called `ghost.go`:\r\n\r\n~~~{.go}\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"time\"\r\n)\r\n\r\nfunc main() {\r\n    \u003c-time.After(10 * time.Second)\r\n    fmt.Println(\"I'm a ghost!\")\r\n}\r\n~~~\r\n\r\nI use `go run ghost.go` to run it, and then I kill the `go` process from the other terminal tab by PID: `kill -s SIGKILL 1234`. It is properly killed but after 10 seconds pass, `I’m a ghost!` appears in the terminal prompt. Help me, I think my MacBook is haunted :(\r\n\r\nIt doesn’t happen if I first build the program and then execute it. I am not running any other proccesses I know of that depend on Go, as far as I know.\r\n\r\nUPD: basically, `go run` spawns a child process from a file in a temp directory, but doesn’t forward any signals to it, which is kinda weird",
	"user": {
		"login": "a-square",
		"id": 1502868,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2015-09-07T21:04:31Z",
	"created_at": "2015-09-07T08:52:59Z",
	"updated_at": "2015-09-07T21:04:39Z"
}
