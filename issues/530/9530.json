{
	"id": 53697092,
	"number": 9530,
	"state": "closed",
	"title": "doc: clarify usage of CGO_ENABLED",
	"body": "I was trying to repro issue #9510.  I'm on a linux/amd64 system, and I used \"GOARCH=386 ./make.bash --no-clean\" to setup a cross-compiler toolchain.  However, subsequently running \"GOARCH=386 go build issue\" per iant@'s instructions yielded an unhelpful \"no buildable Go source files in .../issue/a\" error.\r\n\r\nPoking into the package go/build source code, I discovered mention of \"CGO_ENABLED\" so I tried \"GOARCH=386 CGO_ENABLED=1 go build issue\".  This worked to reproduce the issue.\r\n\r\nHowever, trying to learn more about this setting, I found this in cmd/cgo/doc.go:\r\n\r\n    To enable cgo during cross compiling builds, set the CGO_ENABLED\r\n    environment variable to 1 when building the Go tools with make.bash.\r\n\r\nSo I inferred I was misusing it and decided to startover with \"GOARCH=386 CGO_ENABLED=1 ./make.bash --no-clean\" instead, but then running just \"GOARCH=386 go build issue\" again produced the same \"no buildable Go source files\" error.\r\n\r\nConfusingly, src/make.bash also seems to mention CGO_ENABLED having some significance, but at the moment (even having poked through run.bash and grep'd the source code), I'm still not sure I entirely understand the significance.",
	"user": {
		"login": "mdempsky",
		"id": 38349,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "Documentation"
		},
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2015-07-26T21:04:58Z",
	"created_at": "2015-01-07T23:39:09Z",
	"updated_at": "2016-08-05T16:08:55Z",
	"milestone": {
		"id": 905105,
		"number": 1,
		"title": "Go1.5"
	}
}
