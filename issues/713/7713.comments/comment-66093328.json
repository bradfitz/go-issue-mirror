{
	"id": 66093328,
	"body": "\u003ca id=\"c3\"\u003e\u003c/a\u003eComment 3:\n\n\u003cpre\u003eHad the commenter above read the discussion thoroughly, he would have noted that he has\nbeen told 3 or 4, maybe even 5 times that package regexp does not backtrack. Yet he\ninsisted that he \"proved\" the backtracking. As that is absurd, any conclusions derived\nfrom the false fact are invalid. Truth is not arrogant.\n\nYou are however right that you've never asked for a solution to a problem you have. And\nthat's the point: You might in that case have got a satisfactory solution. Who knows...\n\nConclusion: You're asking for a feature which you claim, without any proof presented,\nsolves a problem which you didn't even show to anyone. Notice that I'm not saying the\nfeature request should be accepted or rejected. I'm just pointing out that there's no\nevidence the change provides anything worth the work needed to possibly implement it.\nAlso, it seems to be the first regexp feature request for this very functionality in the\nsixth year Go is public. Additionally, I still have a feeling the change may be equal to\nthe introduction of backtracking (far from sure I'm).\n\n\"\"\"\"\npossessive quantifiers can be very helpful, even if you specifically can't think of a\nuses for them. Because there are.\n\"\"\"\"\n\nThe burden of proof is obviously at your side. Show a concrete problem which it solves\nand where the current regexp doesn't help and you can easily win your case by rational\nargument. Hand waving, seen so far, is going to convince few, if anyone.\n\nIf you're still interested in this kind of conversation, let's please return it to the\nML. This place is not appropriate.\u003c/pre\u003e",
	"user": {
		"login": "cznic",
		"id": 729580,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2014-04-05T13:54:59Z",
	"updated_at": "2014-12-08T10:42:50Z"
}
