{
	"id": 51288587,
	"number": 8713,
	"state": "closed",
	"title": "spec: ambiguity in \"selectors automatically dereference pointers to structs\"",
	"body": "\u003cpre\u003e\u003ca href=\"http://play.golang.org/p/T9zdkbOhqw\"\u003ehttp://play.golang.org/p/T9zdkbOhqw\u003c/a\u003e\n\nIn this (perverse) program, x is a pointer to a struct, and (*x).y is a legal\nexpression, but x.y() is not.  This contradicts the letter of the spec, though I think\nnot its spirit. \n\ntype T struct{}\nfunc (T) y() {}\n\ntype X *T\n\nvar x X\n\n// \u0026quot;Selectors automatically dereference pointers to structs.\n// If x is a pointer to a struct, x.y is shorthand for (*x).y.\u0026quot;\n(*x).y()\nx.y() // gc error: x.y undefined (type X has no field or method y)\u003c/pre\u003e",
	"user": {
		"login": "adonovan",
		"id": 5658175,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "griesemer",
		"id": 8528975,
		"type": "User",
		"site_admin": false
	},
	"comments": 2,
	"closed_at": "2014-12-08T10:48:16Z",
	"created_at": "2014-09-12T16:54:05Z",
	"updated_at": "2016-06-25T01:41:20Z"
}
