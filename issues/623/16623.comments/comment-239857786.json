{
	"id": 239857786,
	"body": "\u003e Better position information. Currently when using golang.org/x/tools/go/loader to analyze cgo-using source, the column location and byte offset information is wrong because it applies go/types to the post-transformation Go source files. Thanks to //line directives, we can at least identify the original line number, but it's troublesome/imprecise to write type-sensitive refactoring tools that rely on column information and want to support cgo-using packages.\r\n\r\nIt is indeed troublesome to write refactoring tools for cgo-using packages, but I don't see how the proposal solves the problem.  Refactoring tools based on `go/types` must consume the output of cgo preprocessing, not the cgo source code itself, but that means any file surgery they do will be applied to the generated file---at best; `//line` directives further confuse matters.  In this regard, cgo differs little from other code generation tools such as the protocol compiler: its input language is not Go, even though it may look like Go.",
	"user": {
		"login": "alandonovan",
		"id": 8433140,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-08-15T16:51:26Z",
	"updated_at": "2016-08-15T16:51:26Z"
}
