{
	"id": 66070120,
	"body": "\u003ca id=\"c18\"\u003e\u003c/a\u003eComment 18:\n\n\u003cpre\u003eJust an update... there are currently 56 packages the import fsnotify on GitHub and an\nadditional 7 importing the mirror at go.exp.\n\nWe are starting on an FSEvents adapter for OS X which is more efficient at watching\nlarge directory structures than kqueue. FSEvents provides two options that are\nfrequently requested by fsnotify users:\n\n1. It does recursive watches on a directory structure, which isn't unique, but\napparently it doesn't have a non-recursive option.\n2. It can coalesce events within a given latency, such as when an editor saves a file\ntwice.\n\nThe fsnotify API is becoming even more high-level to offer consistent behaviour across\nOSes.\n\nWe currently have a git branch (pull request) that replaces the previous event mask\nfiltering (FSN_CREATE, etc.) with a more general purpose event processing pipeline. The\nidea being that if an adapter (eg. inotify) doesn't support a given option, we will\nperform our own filtering on the incoming events. \n\nIt's certainly going to take some time to for all this to come together and to settle on\na good high-level API.\n\nAs far as a low-level APIs, I suspect the ideal situation will be to have packages for\ninotify, kqueue, winfsnotify, and fsevents at the \"syscall\" level that are implemented\nin such a way that os.fsnotify can build on top of them. Having spent some time in the\nfsnotify code, I suspect that getting to this state will be quite an undertaking!\n\nFeel free to join in on the fun. :-)\n\nP.S. Aaron, is \u003ca href=\"https://github.com/golang\"\u003ehttps://github.com/golang\u003c/a\u003e the new contrib?\u003c/pre\u003e",
	"user": {
		"login": "nathany",
		"id": 4566,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2013-09-24T06:12:52Z",
	"updated_at": "2014-12-08T10:21:36Z"
}
