{
	"id": 206094985,
	"body": "\u003e monitor memory usage, please note that proxy will eat huge amount of\nmemory (gigabytes for this particular run) and will not return it back to\nthe system (at least on fedora 23), although gctrace will tell you that\neverything is ok,\n\nHow are you monitoring memory usage ? Top will not tell you the truth. You\nshould monitor memory usage via the /debug/pprof web endpoint.\n\nAlso, Go _cannot_ tell the operating system to take back virtual address\nspace, it can only inform the operating system that a particular page is\nnot needed so if the operating system wants to use the page for something\nelse, it does not need to restore the original contents. Operating systems\ncan and frequently do ignore this advice (that's why the syscall is called\nmadvise(2)) when they are not under sufficient memory pressure.\n\nOn Wed, Apr 6, 2016 at 12:56 PM, Evgeniy Polyakov \u003cnotifications@github.com\u003e\nwrote:\n\n\u003e Here are steps to reproduce problem with synthetic load though\n\u003e\n\u003e    -\n\u003e\n\u003e    download and unpack into $dir \u003c- elliptics.tar.gz\n\u003e    \u003chttps://github.com/golang/go/files/205704/elliptics.tar.gz\u003e\n\u003e    -\n\u003e\n\u003e    start container:\n\u003e    docker run -t -i -v $dir/elliptics:/mnt/elliptics -p 9091:9091\n\u003e    bioothod/test:gc.1.6 /bin/bash -c /mnt/elliptics/etc/start.sh\n\u003e    or\n\u003e    docker run -t -i -v $dir/elliptics:/mnt/elliptics -p 9091:9091\n\u003e    bioothod/test:gc.1.5.3 /bin/bash -c /mnt/elliptics/etc/start.sh\n\u003e    - upload test file into the storage: curl -d \"test\"\n\u003e    http://localhost:9091/upload/b1/test.txt\n\u003e    - start ab: ab -n 10000 -c 1000 http://localhost:9091/get/b1/test.txt\n\u003e    - monitor memory usage, please note that proxy will eat huge amount of\n\u003e    memory (gigabytes for this particular run) and will not return it back to\n\u003e    the system (at least on fedora 23), although gctrace will tell you that\n\u003e    everything is ok, I didn't investigate it further yet (and it looks like\n\u003e    debian wheezy is ok with memory usage in this test). Container with proxy\n\u003e    built using 1.6 compiler will eat way more memory than that built with 1.5.3\n\u003e\n\u003e â€”\n\u003e You are receiving this because you are subscribed to this thread.\n\u003e Reply to this email directly or view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/15068#issuecomment-206094133\u003e\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-06T03:01:38Z",
	"updated_at": "2016-04-06T03:01:38Z"
}
