{
	"id": 206126687,
	"body": "Fun fact is that when using smaller concurrency on client, go eats/leaks less memory, looks like allocated memory is reused. If this memory resides in glibc cache (does go use glibc allocator, can I change it to something else by exporting LD_PRELOAD pointing to binary with different malloc/free symbols like tcmalloc/jemalloc?), this could partially explain the problem (allocation part, i.e. the first problem above), yet without solution.\r\n\r\nI will cook up boost::asio test with the same allocation strategy to check whether it is system problem, but I do believe that this test will release memory to kernel.",
	"user": {
		"login": "bioothod",
		"id": 1847575,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-04-06T05:33:45Z",
	"updated_at": "2016-04-06T05:33:45Z"
}
