{
	"id": 117932933,
	"number": 13333,
	"state": "closed",
	"title": "proposal: cmd/go get fork",
	"body": "Working with forks (specifically github, but might apply elsewhere) is complicated (see discussions/blogs [here](https://www.reddit.com/r/golang/comments/2jdcw1/how_do_you_deal_with_github_forking/), [here](http://blog.campoy.cat/2014/03/github-and-go-forking-pull-requests-and.html), and [here](https://blog.splice.com/contributing-open-source-git-repositories-go/)).\r\n\r\nThe generally accepted practice is:\r\n\r\n1.  `go get` the original project\r\n1.  Fork the project in your github account\r\n1.  Within the project source tree in your GOPATH, add your fork as a new remote\r\n1.  Make changes, test, push to your fork, submit PR to project owner\r\n\r\nIf I'm the one making changes to the forked repo, this workflow is fine.  But once I'm finished and need to share those changes with the rest of my team, or want those changes pulled into a CI or test environment, it gets ugly.  I can either:\r\n\r\n1.  Have everyone else on the team follow steps 1-3 above...and hack something into CI.  This is burdensome for the team, and could be difficult to get/keep working in CI.\r\n1.  Change all internal imports within the fork from \"github/com/projectcreator/coolproject\" to \"github.com/myaccount/coolproject\", and have team members and CI `go get` that instead.  This makes it harder to submit PRs back to original project, harder to keep in sync with the original project, and is time consuming.\r\n\r\nI would like `go get` to handle this case for me by creating a symlink within my GOPATH:\r\n\r\n```\r\nGOPATH/src/github.com/projectcreator/coolproject -\u003e GOPATH/src/github.com/myaccount/coolproject\r\n```\r\n\r\nTo do this, I would envision something like the following command:\r\n\r\n```\r\n$ go get -u -link github.com/projectcreator/coolproject github.com/myaccount/coolproject\r\n```\r\n\r\nNow I, other team members, and CI can use one simple command to switch from using the original project to the fork.\r\n\r\nAdditional thoughts:\r\n- After linking, a `go get` for the original project should fail with an appropriate error message.  This will serve as a reminder that the project at that path is currently linked.\r\n- There should be a way to unlink a project (either a new flag, or force with `-f`)\r\n- Yes, I know I could manually create symlinks, but the idea here is consistent tooling to solve a common problem.\r\n",
	"user": {
		"login": "mmindenhall",
		"id": 1106269,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2015-12-28T16:23:39Z",
	"created_at": "2015-11-19T23:30:21Z",
	"updated_at": "2015-12-28T16:23:40Z"
}
