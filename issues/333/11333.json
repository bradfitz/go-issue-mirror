{
	"id": 90170536,
	"number": 11333,
	"state": "open",
	"title": "cmd/vet, go/types: make it easier to handle architecture-dependent constant values correctly",
	"body": "CL 11252 introduces a vet check for integer comparisons. It has false positives when checking code like `u \u003e uint64(^uintptr(0))` where u is a `uint64`. This expression is always false when compiled for 64 bit machines but not for 32 bit machines. IIRC, something similar occurred for the suspicious shift vet check.\r\n\r\nIt would be nice if vet checks could inquire about types and values on a per-int-size basis.\r\n\r\ngo/types uses the host machine's integer size as a default. We could override that in vet and typecheck twice, once with 32 bit ints and once with 64 bit ints, but that would be expensive. Maybe there's a better way?\r\n\r\n/cc @robpike @griesemer \r\n",
	"user": {
		"login": "josharian",
		"id": 67496,
		"type": "User",
		"site_admin": false
	},
	"comments": 1,
	"created_at": "2015-06-22T18:12:56Z",
	"updated_at": "2015-06-22T18:21:58Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
