{
	"id": 251359887,
	"body": "Every assignment in Go is a copy, there are no exceptions to this rule.\n\nOn Tue, 4 Oct 2016, 22:02 Kegsay \u003cnotifications@github.com\u003e wrote:\n\n\u003e Effective Go doesn't mention that the 2nd value in a range clause is\n\u003e actually a copy of that value. It appears that only\n\u003e https://tour.golang.org/moretypes/16 mentions this:\n\u003e\n\u003e When ranging over a slice, two values are returned for each iteration. The\n\u003e first is the index, and the second is a copy of the element at that index.\n\u003e\n\u003e I think this is important to mention a this makes iterate-and-modify loops\n\u003e very error prone: https://play.golang.org/p/mq9sz3O19J\n\u003e\n\u003e â€”\n\u003e You are receiving this because you are subscribed to this thread.\n\u003e Reply to this email directly, view it on GitHub\n\u003e \u003chttps://github.com/golang/go/issues/17333\u003e, or mute the thread\n\u003e \u003chttps://github.com/notifications/unsubscribe-auth/AAAcAzMA8vsuetsXlgDLXSeCBIcAIyIzks5qwjIMgaJpZM4KNi8E\u003e\n\u003e .\n\u003e\n",
	"user": {
		"login": "davecheney",
		"id": 7171,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-10-04T11:11:55Z",
	"updated_at": "2016-10-04T11:11:55Z"
}
