{
	"id": 51278289,
	"number": 1777,
	"state": "closed",
	"title": "runtime: signal/exception handler should not allocate memory",
	"body": "\u003cpre\u003eHere is an example \u003ca href=\"https://golang.org/issue/1753?c=7\"\u003ehttps://golang.org/issue/1753?c=7\u003c/a\u003e, where exception\noccures inside runtime.mallocgc when m-\u0026gt;mallocing == 1, then exception handler calls\nsome functions that ends up back in runtime.mallocgc therefore triggering\n\u0026quot;malloc/free - deadlock\u0026quot; error.\n\nNot sure how serious it is, because stacktrace is already printed. But \u0026quot;malloc/free\n- deadlock\u0026quot; message is missleading here, it would be nice to see the intended\n\u0026quot;unexpected fault address ...\u0026quot; instead.\n\nAlex\u003c/pre\u003e",
	"user": {
		"login": "alexbrainman",
		"id": 9796621,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"comments": 5,
	"closed_at": "2014-12-08T10:09:50Z",
	"created_at": "2011-05-04T12:16:22Z",
	"updated_at": "2016-06-24T19:28:34Z",
	"milestone": {
		"id": 1061233,
		"number": 7,
		"title": "Go1"
	}
}
