{
	"id": 168620068,
	"number": 16562,
	"state": "open",
	"title": "doc: document how to disable a vendor folder (particularly important for Go1.7+)",
	"body": "1. What version of Go are you using (`go version`)?\r\n\r\ngo1.7rc3\r\n\r\n2. What operating system and processor architecture are you using (`go env`)?\r\n\r\ndarwin amd64\r\n\r\n3. What did you do?\r\n\r\nHaving vendored a package in the `vendor` folder, I cannot temporarily ignore that folder and use the GOPATH (VCS'ed) copy of the package, while testing/integrating changes to that repository.\r\n\r\nNote my company's use case:\r\n\r\n * Most of our projects import packages from one private shared repository, and additionally several 3rd party repositories. The problem relates to changes we make in our own shared repository (`golibs`).\r\n * We would like to be able to use a kind of 'novendor' mode whilst refining and integrating changes in this shared `golibs` repository. \r\n * In Go1.5 and Go1.6, we can acheive this by setting `GO15VENDOREXPERIMENT=0` during development / testing of changes to the shared repo. This is a pretty fundamental part of our workflow. In Go1.7, this facility is going away.\r\n\r\n4. What did you expect to see?\r\n\r\nEither:\r\n * a commandline flag for the go toolchain to disable use of the vendor folder, something like, `go [build|install|test] -novendor`\r\n\r\nOr:\r\n * a recommendation to temporarily rename the `vendor` folder. \r\n * Something like \"rename `vendor` directory to `_novendor`. See https://github.com/golang/go/issues/13218 for rsc's suggestion along these lines. \r\n * NOTE: Also include a recommendation for ignoring (e.g. `.gitignore`) the `_novendor` folder, and a local-ignore for the `vendor` folder (e.g. .`git/info/exclude` or `git update-index --skip-worktree`).\r\n\r\nOr, some other solution. I can't come up with any other workable alternative. I have tried and failed to devise alternatives using symbolic links, git submodules, and partially vendoring dependencies. None of these have resulted in satisfactory outcomes. Note that I have as-yet been unable to find a 3rd party 'vendoring' tool which addresses this issue, either.\r\n\r\n5. What did you see instead?\r\n\r\nThe Go1.7 release candidates do not provide any flag for switching off vendoring, nor do they document alternatives, nor provide recommendations for this use case.\r\n\r\nThankyou",
	"user": {
		"login": "laher",
		"id": 125845,
		"type": "User",
		"site_admin": false
	},
	"comments": 6,
	"created_at": "2016-08-01T10:58:31Z",
	"updated_at": "2016-08-11T09:08:15Z",
	"milestone": {
		"id": 1714149,
		"number": 40,
		"title": "Go1.7Maybe"
	},
	"reactions": {
		"total_count": 2,
		"+1": 2
	}
}
