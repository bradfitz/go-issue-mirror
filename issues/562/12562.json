{
	"id": 105713024,
	"number": 12562,
	"state": "open",
	"title": "encoding/gob: panic in reflect.Value.IsNil when encoding via pointer type alias",
	"body": "[Here](http://play.golang.org/p/e0q5srlbgj) is a program containing a type `Foo` that implements `gob.GobEncoder` in a silly way: by calling back into `gob.Encoder.Encode` using a type alias in order to avoid recursing. (The real world use for this is to zero a problematic field and then gob-encode the rest.)\r\n\r\nIt causes `gob.Encoder.Encode` to panic in `reflect.Value.IsNil`:\r\n\r\n\r\n    panic: reflect: call of reflect.Value.IsNil on struct Value [recovered]\r\n    \tpanic: reflect: call of reflect.Value.IsNil on struct Value [recovered]\r\n    \tpanic: reflect: call of reflect.Value.IsNil on struct Value\r\n    \r\n    goroutine 1 [running]:\r\n    encoding/gob.catchError(0x1044c3ec, 0x1043a0dc)\r\n    \t/usr/local/go/src/encoding/gob/error.go:38 +0xe0\r\n    encoding/gob.catchError(0x1044c46c, 0x1043a13c)\r\n    \t/usr/local/go/src/encoding/gob/error.go:38 +0xe0\r\n    reflect.Value.IsNil(0x1ad3c0, 0x10438dd0, 0xd9, 0x1042b9c8, 0x1042b9cc, 0xb31c0)\r\n    \t/usr/local/go/src/reflect/value.go:971 +0x120\r\n    encoding/gob.encIndirect(0x1ad3c0, 0x10438dd0, 0xd9, 0x1, 0x0, 0x0, 0x0, 0x52d0)\r\n    \t/usr/local/go/src/encoding/gob/encode.go:152 +0x60\r\n    encoding/gob.(*Encoder).encodeSingle(0x1044c400, 0x1044c420, 0x10438e20, 0x1ad3c0, 0x10438dd0, 0xd9)\r\n    \t/usr/local/go/src/encoding/gob/encode.go:291 +0x200\r\n    encoding/gob.(*Encoder).encode(0x1044c400, 0x1044c420, 0x1ad3c0, 0x10438dd0, 0xd9, 0x10435440)\r\n    \t/usr/local/go/src/encoding/gob/encode.go:694 +0x280\r\n    encoding/gob.(*Encoder).EncodeValue(0x1044c400, 0x18cf80, 0x10438dd0, 0x16, 0x0, 0x0)\r\n    \t/usr/local/go/src/encoding/gob/encoder.go:247 +0x780\r\n    encoding/gob.(*Encoder).Encode(0x1044c400, 0x18cf80, 0x10438dd0, 0x52d0, 0x0, 0x0)\r\n    \t/usr/local/go/src/encoding/gob/encoder.go:174 +0x80\r\n    main.Foo.GobEncode(0x11, 0x52d0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10438b60)\r\n    \t/tmp/sandbox454377553/main.go:23 +0x120\r\n    main.(*Foo).GobEncode(0x10438b60, 0x1aa4c0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)\r\n    \t\u003cautogenerated\u003e:1 +0xc0\r\n    encoding/gob.(*Encoder).encodeGobEncoder(0x1044c380, 0x1044c3a0, 0x104350e0, 0x1aa4c0, 0x10438b60, 0x16)\r\n    \t/usr/local/go/src/encoding/gob/encode.go:469 +0x100\r\n    encoding/gob.gobEncodeOpFor.func1(0x104353e0, 0x10435360, 0x1aa4c0, 0x10438b60, 0x16, 0x1)\r\n    \t/usr/local/go/src/encoding/gob/encode.go:613 +0x260\r\n    encoding/gob.(*Encoder).encodeSingle(0x1044c380, 0x1044c3a0, 0x10438db0, 0x1aa4c0, 0x10438b60, 0x16)\r\n    \t/usr/local/go/src/encoding/gob/encode.go:294 +0x2a0\r\n    encoding/gob.(*Encoder).encode(0x1044c380, 0x1044c3a0, 0x1aa4c0, 0x10438b60, 0x16, 0x104350e0)\r\n    \t/usr/local/go/src/encoding/gob/encode.go:694 +0x280\r\n    encoding/gob.(*Encoder).EncodeValue(0x1044c380, 0x1aa4c0, 0x10438b60, 0x16, 0x0, 0x0)\r\n    \t/usr/local/go/src/encoding/gob/encoder.go:247 +0x780\r\n    encoding/gob.(*Encoder).Encode(0x1044c380, 0x1aa4c0, 0x10438b60, 0x1fc26d, 0x0, 0x0)\r\n    \t/usr/local/go/src/encoding/gob/encoder.go:174 +0x80\r\n    main.main()\r\n    \t/tmp/sandbox454377553/main.go:39 +0x120\r\n\r\nIf I'm reading the documentation correctly, this program should work as expected (printing `Result: 17`). But even if it's not intended to work, it probably shouldn't cause a panic.\r\n\r\nNote that if you change it so that the alias looks like `type Alias Foo`, the program works whether you call `Encode` with `Alias(f)` or `(*Alias)(\u0026f)`.\r\n\r\nGo version:\r\n\r\n    go version devel +da7e9e4 Thu Sep 10 00:59:04 2015 +0000 darwin/amd64",
	"user": {
		"login": "jacobsa",
		"id": 202895,
		"type": "User",
		"site_admin": false
	},
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"created_at": "2015-09-10T01:15:47Z",
	"updated_at": "2016-04-25T19:16:55Z",
	"milestone": {
		"id": 1055141,
		"number": 6,
		"title": "Unplanned"
	}
}
