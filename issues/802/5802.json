{
	"id": 51284209,
	"number": 5802,
	"state": "closed",
	"title": "text/template: pointers to strings",
	"body": "\u003cpre\u003epackage main\n\nimport (\n\t\u0026quot;os\u0026quot;\n\t\u0026quot;text/template\u0026quot;\n)\n\ntype T struct {\n\tD *string\n}\n\nfunc main() {\n\tt, err := template.New(\u0026quot;x\u0026quot;).Parse(\u0026quot;{{html .D}}\u0026quot;)\n\tif err != nil { panic(err) }\n\td := \u0026quot;hi\\n\u0026quot;\n\terr = t.Execute(os.Stdout, T{\u0026amp;d})\n\tif err != nil { panic(err) }\n}\n\nOne feels this should print \u0026quot;hi\u0026quot; but instead it prints the hex address of the\nstring. Ugly.\n\nWhat should be done? Should functions autoindirect their args? Should template provide\nan indirection operator? Tread carefully but fix.\u003c/pre\u003e",
	"user": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"labels": [
		{
			"name": "FrozenDueToAge"
		}
	],
	"assignee": {
		"login": "robpike",
		"id": 4324516,
		"type": "User",
		"site_admin": false
	},
	"comments": 3,
	"closed_at": "2014-12-08T10:31:50Z",
	"created_at": "2013-06-27T21:21:08Z",
	"updated_at": "2016-06-24T22:51:03Z",
	"milestone": {
		"id": 1067207,
		"number": 14,
		"title": "Go1.2"
	}
}
