{
	"id": 168306417,
	"body": "@glestaris the only concurrency that you have in your sample is the one that is required by the fakeclock for advancing it. Lets say one works on a complicated simulation engine like where 1001 things are happening in parallel. In order to test the engine he would write some tests maybe leaving out the real application of the simulation and have reproducible sleep operations instead.\r\nIn such a situation where you think it is possible just dealing with some complexity I happen to disagree. I am pretty sure that handling it with the pivotal fakeclock or other fake clocks is not possible. I am convinced that the only simple and correct approach is already built into the golang scheduler (runtime). I am pretty sure the engineers who built the golang runtime struggled with this problem for quite some time before they came up with this beautiful solution.\r\nHonestly I do not understand why everybody is so afraid of using great stuff that is already built into the runtime. ",
	"user": {
		"login": "markfink",
		"id": 33456,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2016-01-01T13:32:34Z",
	"updated_at": "2016-01-01T13:38:53Z"
}
