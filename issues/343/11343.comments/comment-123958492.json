{
	"id": 123958492,
	"body": "The heap profile reports a snapshot as of the most recent garbage collection. It omits more recent allocations, because otherwise the recent garbage in the profile can drown out the older live data. What's going on in your program is that the size of the read affects whether a garbage collection happens after the multiwriters are created. If so, they appear in the profile; if not, they don't. \r\n\r\nIf you want to see a snapshot of live data as of the writing of the profile, you need to call runtime.GC before writing out the profile. If you only care about allocation counts and not what is live, then you can also use GOGC=off. When the GC is off, the profile reports all allocations (since there's no \"last GC\").\r\n\r\nSo this is working as intended, if possibly mysteriously. I will update the runtime/pprof doc comment to make this clear.",
	"user": {
		"login": "rsc",
		"id": 104030,
		"type": "User",
		"site_admin": false
	},
	"created_at": "2015-07-23T04:17:51Z",
	"updated_at": "2015-07-23T04:17:51Z"
}
